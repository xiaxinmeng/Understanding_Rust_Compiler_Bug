{"sha": "8f523f3a1047919d3563daf1ef47ba87336ebe89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1MjNmM2ExMDQ3OTE5ZDM1NjNkYWYxZWY0N2JhODczMzZlYmU4OQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-11-15T23:20:01Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-11-15T23:20:01Z"}, "message": "Imported GNU Classpath 0.19 + gcj-import-20051115.\n\n       * sources.am: Regenerated.\n       * Makefile.in: Likewise.\n       * scripts/makemake.tcl: Use glob -nocomplain.\n\nFrom-SVN: r107049", "tree": {"sha": "a5eb7cf42a51869cc8aa1fad7ad6a90cca47fdd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5eb7cf42a51869cc8aa1fad7ad6a90cca47fdd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f523f3a1047919d3563daf1ef47ba87336ebe89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f523f3a1047919d3563daf1ef47ba87336ebe89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f523f3a1047919d3563daf1ef47ba87336ebe89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f523f3a1047919d3563daf1ef47ba87336ebe89/comments", "author": null, "committer": null, "parents": [{"sha": "02e549bfaaec38f68307e7f34e46ea57ea1809af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e549bfaaec38f68307e7f34e46ea57ea1809af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e549bfaaec38f68307e7f34e46ea57ea1809af"}], "stats": {"total": 123639, "additions": 98033, "deletions": 25606}, "files": [{"sha": "c7b541a5dca4e52202ca8ba73191f250fc298fdb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,3 +1,10 @@\n+2005-11-15  Mark Wielaard  <mark@klomp.org>\n+\n+\tImported GNU Classpath 0.19 + gcj-import-20051115.\n+\t* sources.am: Regenerated.\n+\t* Makefile.in: Likewise.\n+\t* scripts/makemake.tcl: Use glob -nocomplain.\n+\n 2005-11-15  Scott Gilbertson  <scottg@mantatest.com>\n \n \t* Makefile.in: Re-generated."}, {"sha": "77f11cc234833ef850a25b7909cee5d5e145f1cd", "filename": "libjava/Makefile.in", "status": "modified", "additions": 484, "deletions": 39, "changes": 523, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -150,14 +150,18 @@ lib_gnu_java_awt_peer_qt_la_OBJECTS =  \\\n @QT_AWT_TRUE@am_lib_gnu_java_awt_peer_qt_la_rpath = -rpath \\\n @QT_AWT_TRUE@\t$(toolexeclibdir)\n am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n-\tgnu/classpath/debug.lo gnu/gcj.lo gnu/gcj/convert.lo \\\n-\tgnu/gcj/io.lo gnu/gcj/runtime.lo gnu/gcj/util.lo \\\n-\tgnu/java/awt.lo gnu/java/awt/color.lo gnu/java/awt/image.lo \\\n-\tgnu/java/awt/peer.lo gnu/java/io.lo gnu/java/lang.lo \\\n-\tgnu/java/lang/reflect.lo gnu/java/locale.lo gnu/java/math.lo \\\n-\tgnu/java/net.lo gnu/java/net/protocol/file.lo \\\n+\tgnu/classpath/debug.lo gnu/classpath/jdwp.lo \\\n+\tgnu/classpath/jdwp/event.lo \\\n+\tgnu/classpath/jdwp/event/filters.lo \\\n+\tgnu/classpath/jdwp/exception.lo gnu/classpath/jdwp/id.lo \\\n+\tgnu/classpath/jdwp/processor.lo \\\n+\tgnu/classpath/jdwp/transport.lo gnu/classpath/jdwp/util.lo \\\n+\tgnu/gcj.lo gnu/gcj/convert.lo gnu/gcj/io.lo gnu/gcj/runtime.lo \\\n+\tgnu/gcj/util.lo gnu/java/awt.lo gnu/java/awt/color.lo \\\n+\tgnu/java/awt/image.lo gnu/java/awt/peer.lo gnu/java/io.lo \\\n+\tgnu/java/lang.lo gnu/java/lang/reflect.lo gnu/java/locale.lo \\\n+\tgnu/java/math.lo gnu/java/net.lo gnu/java/net/protocol/file.lo \\\n \tgnu/java/net/protocol/ftp.lo gnu/java/net/protocol/http.lo \\\n-\tgnu/java/net/protocol/http/event.lo \\\n \tgnu/java/net/protocol/https.lo gnu/java/net/protocol/jar.lo \\\n \tgnu/java/nio.lo gnu/java/nio/channels.lo \\\n \tgnu/java/nio/charset.lo gnu/java/rmi.lo gnu/java/rmi/dgc.lo \\\n@@ -167,8 +171,8 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/security/pkcs.lo gnu/java/security/provider.lo \\\n \tgnu/java/security/util.lo gnu/java/security/x509.lo \\\n \tgnu/java/security/x509/ext.lo gnu/java/text.lo \\\n-\tgnu/java/util.lo gnu/java/util/prefs.lo \\\n-\tgnu/javax/swing/text/html/parser.lo \\\n+\tgnu/java/util.lo gnu/java/util/prefs.lo gnu/javax/crypto.lo \\\n+\tgnu/javax/imageio/bmp.lo gnu/javax/swing/text/html/parser.lo \\\n \tgnu/javax/swing/text/html/parser/models.lo \\\n \tgnu/javax/swing/text/html/parser/support.lo \\\n \tgnu/javax/swing/text/html/parser/support/low.lo gnu/regexp.lo \\\n@@ -196,7 +200,9 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/print/event.lo javax/security/auth.lo \\\n \tjavax/security/auth/callback.lo javax/security/auth/login.lo \\\n \tjavax/security/auth/spi.lo javax/security/auth/x500.lo \\\n-\tjavax/security/cert.lo javax/security/sasl.lo javax/sql.lo \\\n+\tjavax/security/cert.lo javax/security/sasl.lo \\\n+\tjavax/sound/midi.lo javax/sound/midi/spi.lo \\\n+\tjavax/sound/sampled.lo javax/sound/sampled/spi.lo javax/sql.lo \\\n \tjavax/swing.lo javax/swing/border.lo \\\n \tjavax/swing/colorchooser.lo javax/swing/event.lo \\\n \tjavax/swing/filechooser.lo javax/swing/plaf.lo \\\n@@ -206,8 +212,8 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/text/html/parser.lo javax/swing/text/rtf.lo \\\n \tjavax/swing/tree.lo javax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_3 = gnu-java-beans.lo gnu-xml.lo javax-imageio.lo \\\n-\tjavax-xml.lo org-w3c.lo org-xml.lo\n+am__DEPENDENCIES_3 = gnu-java-beans.lo gnu-javax-sound-midi.lo \\\n+\tgnu-xml.lo javax-imageio.lo javax-xml.lo org-w3c.lo org-xml.lo\n am__DEPENDENCIES_4 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n@@ -837,6 +843,7 @@ gnu/awt/xlib/XToolkit.java\n \n gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n+classpath/gnu/classpath/ByteArray.java \\\n classpath/gnu/classpath/Configuration.java \\\n classpath/gnu/classpath/Pointer.java \\\n classpath/gnu/classpath/Pointer32.java \\\n@@ -852,6 +859,116 @@ classpath/gnu/classpath/debug/PreciseFilter.java \\\n classpath/gnu/classpath/debug/SystemLogger.java\n \n gnu_classpath_debug_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_debug_source_files)))\n+gnu_classpath_jdwp_source_files = \\\n+classpath/gnu/classpath/jdwp/Jdwp.java \\\n+classpath/gnu/classpath/jdwp/JdwpConstants.java \\\n+gnu/classpath/jdwp/VMFrame.java \\\n+gnu/classpath/jdwp/VMIdManager.java \\\n+gnu/classpath/jdwp/VMVirtualMachine.java\n+\n+gnu_classpath_jdwp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_source_files)))\n+gnu_classpath_jdwp_event_source_files = \\\n+classpath/gnu/classpath/jdwp/event/ClassPrepareEvent.java \\\n+classpath/gnu/classpath/jdwp/event/Event.java \\\n+classpath/gnu/classpath/jdwp/event/EventManager.java \\\n+classpath/gnu/classpath/jdwp/event/EventRequest.java \\\n+classpath/gnu/classpath/jdwp/event/ThreadEndEvent.java \\\n+classpath/gnu/classpath/jdwp/event/ThreadStartEvent.java \\\n+classpath/gnu/classpath/jdwp/event/VmDeathEvent.java \\\n+classpath/gnu/classpath/jdwp/event/VmInitEvent.java\n+\n+gnu_classpath_jdwp_event_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_event_source_files)))\n+gnu_classpath_jdwp_event_filters_source_files = \\\n+classpath/gnu/classpath/jdwp/event/filters/ClassExcludeFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/ClassMatchFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/ClassOnlyFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/ConditionalFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/CountFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/ExceptionOnlyFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/FieldOnlyFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/IEventFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/InstanceOnlyFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/LocationOnlyFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/StepFilter.java \\\n+classpath/gnu/classpath/jdwp/event/filters/ThreadOnlyFilter.java\n+\n+gnu_classpath_jdwp_event_filters_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_event_filters_source_files)))\n+gnu_classpath_jdwp_exception_source_files = \\\n+classpath/gnu/classpath/jdwp/exception/InvalidClassException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidClassLoaderException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidCountException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidEventTypeException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidFieldException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidLocationException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidMethodException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidObjectException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidStringException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidThreadException.java \\\n+classpath/gnu/classpath/jdwp/exception/InvalidThreadGroupException.java \\\n+classpath/gnu/classpath/jdwp/exception/JdwpException.java \\\n+classpath/gnu/classpath/jdwp/exception/JdwpIllegalArgumentException.java \\\n+classpath/gnu/classpath/jdwp/exception/JdwpInternalErrorException.java \\\n+classpath/gnu/classpath/jdwp/exception/NotImplementedException.java \\\n+classpath/gnu/classpath/jdwp/exception/VmDeadException.java\n+\n+gnu_classpath_jdwp_exception_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_exception_source_files)))\n+gnu_classpath_jdwp_id_source_files = \\\n+classpath/gnu/classpath/jdwp/id/ArrayId.java \\\n+classpath/gnu/classpath/jdwp/id/ArrayReferenceTypeId.java \\\n+classpath/gnu/classpath/jdwp/id/ClassLoaderId.java \\\n+classpath/gnu/classpath/jdwp/id/ClassObjectId.java \\\n+classpath/gnu/classpath/jdwp/id/ClassReferenceTypeId.java \\\n+classpath/gnu/classpath/jdwp/id/InterfaceReferenceTypeId.java \\\n+classpath/gnu/classpath/jdwp/id/JdwpId.java \\\n+classpath/gnu/classpath/jdwp/id/ObjectId.java \\\n+classpath/gnu/classpath/jdwp/id/ReferenceTypeId.java \\\n+classpath/gnu/classpath/jdwp/id/StringId.java \\\n+classpath/gnu/classpath/jdwp/id/ThreadGroupId.java \\\n+classpath/gnu/classpath/jdwp/id/ThreadId.java\n+\n+gnu_classpath_jdwp_id_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_id_source_files)))\n+gnu_classpath_jdwp_processor_source_files = \\\n+classpath/gnu/classpath/jdwp/processor/ArrayReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ArrayTypeCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ClassLoaderReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ClassObjectReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ClassTypeCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/CommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/EventRequestCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/FieldCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/InterfaceTypeCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/MethodCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ObjectReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/PacketProcessor.java \\\n+classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/StackFrameCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/StringReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ThreadGroupReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/ThreadReferenceCommandSet.java \\\n+classpath/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.java\n+\n+gnu_classpath_jdwp_processor_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_processor_source_files)))\n+gnu_classpath_jdwp_transport_source_files = \\\n+classpath/gnu/classpath/jdwp/transport/ITransport.java \\\n+classpath/gnu/classpath/jdwp/transport/JdwpCommandPacket.java \\\n+classpath/gnu/classpath/jdwp/transport/JdwpConnection.java \\\n+classpath/gnu/classpath/jdwp/transport/JdwpPacket.java \\\n+classpath/gnu/classpath/jdwp/transport/JdwpReplyPacket.java \\\n+classpath/gnu/classpath/jdwp/transport/SocketTransport.java \\\n+classpath/gnu/classpath/jdwp/transport/TransportException.java \\\n+classpath/gnu/classpath/jdwp/transport/TransportFactory.java\n+\n+gnu_classpath_jdwp_transport_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_transport_source_files)))\n+gnu_classpath_jdwp_util_source_files = \\\n+classpath/gnu/classpath/jdwp/util/JdwpString.java \\\n+classpath/gnu/classpath/jdwp/util/LineTable.java \\\n+classpath/gnu/classpath/jdwp/util/Location.java \\\n+classpath/gnu/classpath/jdwp/util/MethodResult.java \\\n+classpath/gnu/classpath/jdwp/util/Signature.java \\\n+classpath/gnu/classpath/jdwp/util/Value.java \\\n+classpath/gnu/classpath/jdwp/util/VariableTable.java\n+\n+gnu_classpath_jdwp_util_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_util_source_files)))\n gnu_gcj_source_files = \\\n gnu/gcj/Core.java \\\n gnu/gcj/RawData.java \\\n@@ -942,7 +1059,6 @@ classpath/gnu/java/awt/ClasspathToolkit.java \\\n classpath/gnu/java/awt/ComponentDataBlitOp.java \\\n classpath/gnu/java/awt/EmbeddedWindow.java \\\n classpath/gnu/java/awt/EventModifier.java \\\n-classpath/gnu/java/awt/FocusManager.java \\\n classpath/gnu/java/awt/GradientPaintContext.java\n \n gnu_java_awt_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_source_files)))\n@@ -1335,7 +1451,6 @@ gnu_java_net_protocol_ftp_header_files = $(patsubst classpath/%,%,$(patsubst %.j\n gnu_java_net_protocol_http_source_files = \\\n classpath/gnu/java/net/protocol/http/Authenticator.java \\\n classpath/gnu/java/net/protocol/http/ByteArrayRequestBodyWriter.java \\\n-classpath/gnu/java/net/protocol/http/ByteArrayResponseBodyReader.java \\\n classpath/gnu/java/net/protocol/http/ChunkedInputStream.java \\\n classpath/gnu/java/net/protocol/http/Cookie.java \\\n classpath/gnu/java/net/protocol/http/CookieManager.java \\\n@@ -1345,21 +1460,14 @@ classpath/gnu/java/net/protocol/http/HTTPDateFormat.java \\\n classpath/gnu/java/net/protocol/http/HTTPURLConnection.java \\\n classpath/gnu/java/net/protocol/http/Handler.java \\\n classpath/gnu/java/net/protocol/http/Headers.java \\\n+classpath/gnu/java/net/protocol/http/LimitedLengthInputStream.java \\\n classpath/gnu/java/net/protocol/http/Request.java \\\n classpath/gnu/java/net/protocol/http/RequestBodyWriter.java \\\n classpath/gnu/java/net/protocol/http/Response.java \\\n-classpath/gnu/java/net/protocol/http/ResponseBodyReader.java \\\n classpath/gnu/java/net/protocol/http/ResponseHeaderHandler.java \\\n classpath/gnu/java/net/protocol/http/SimpleCookieManager.java\n \n gnu_java_net_protocol_http_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_net_protocol_http_source_files)))\n-gnu_java_net_protocol_http_event_source_files = \\\n-classpath/gnu/java/net/protocol/http/event/ConnectionEvent.java \\\n-classpath/gnu/java/net/protocol/http/event/ConnectionListener.java \\\n-classpath/gnu/java/net/protocol/http/event/RequestEvent.java \\\n-classpath/gnu/java/net/protocol/http/event/RequestListener.java\n-\n-gnu_java_net_protocol_http_event_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_net_protocol_http_event_source_files)))\n gnu_java_net_protocol_https_source_files = \\\n classpath/gnu/java/net/protocol/https/Handler.java\n \n@@ -1490,6 +1598,7 @@ gnu_java_rmi_registry_header_files = $(patsubst classpath/%,%,$(patsubst %.java,\n gnu_java_rmi_server_source_files = \\\n classpath/gnu/java/rmi/server/ConnectionRunnerPool.java \\\n classpath/gnu/java/rmi/server/ProtocolConstants.java \\\n+classpath/gnu/java/rmi/server/RMIClassLoaderImpl.java \\\n classpath/gnu/java/rmi/server/RMIDefaultSocketFactory.java \\\n classpath/gnu/java/rmi/server/RMIHashes.java \\\n classpath/gnu/java/rmi/server/RMIIncomingThread.java \\\n@@ -1546,6 +1655,8 @@ classpath/gnu/java/security/provider/DSAParameterGenerator.java \\\n classpath/gnu/java/security/provider/DSAParameters.java \\\n classpath/gnu/java/security/provider/DSASignature.java \\\n classpath/gnu/java/security/provider/DefaultPolicy.java \\\n+classpath/gnu/java/security/provider/DiffieHellmanKeyFactoryImpl.java \\\n+classpath/gnu/java/security/provider/DiffieHellmanKeyPairGeneratorImpl.java \\\n classpath/gnu/java/security/provider/EncodedKeyFactory.java \\\n classpath/gnu/java/security/provider/Gnu.java \\\n classpath/gnu/java/security/provider/GnuDHPublicKey.java \\\n@@ -1626,6 +1737,38 @@ classpath/gnu/java/util/prefs/NodeReader.java \\\n classpath/gnu/java/util/prefs/NodeWriter.java\n \n gnu_java_util_prefs_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_prefs_source_files)))\n+gnu_javax_crypto_source_files = \\\n+classpath/gnu/javax/crypto/DiffieHellmanImpl.java \\\n+classpath/gnu/javax/crypto/GnuDHPrivateKey.java \\\n+classpath/gnu/javax/crypto/RSACipherImpl.java\n+\n+gnu_javax_crypto_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_source_files)))\n+gnu_javax_imageio_bmp_source_files = \\\n+classpath/gnu/javax/imageio/bmp/BMPDecoder.java \\\n+classpath/gnu/javax/imageio/bmp/BMPException.java \\\n+classpath/gnu/javax/imageio/bmp/BMPFileHeader.java \\\n+classpath/gnu/javax/imageio/bmp/BMPImageReader.java \\\n+classpath/gnu/javax/imageio/bmp/BMPImageReaderSpi.java \\\n+classpath/gnu/javax/imageio/bmp/BMPInfoHeader.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeBF16.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeBF32.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRGB1.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRGB24.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRGB4.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRGB8.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRLE4.java \\\n+classpath/gnu/javax/imageio/bmp/DecodeRLE8.java\n+\n+gnu_javax_imageio_bmp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_bmp_source_files)))\n+gnu_javax_sound_midi_source_files = \\\n+classpath/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.java \\\n+classpath/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.java \\\n+classpath/gnu/javax/sound/midi/alsa/AlsaMidiSequencerDevice.java \\\n+classpath/gnu/javax/sound/midi/alsa/AlsaOutputPortDevice.java \\\n+classpath/gnu/javax/sound/midi/alsa/AlsaPortDevice.java \\\n+classpath/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java \\\n+classpath/gnu/javax/sound/midi/dssi/DSSISynthesizer.java\n+\n gnu_javax_swing_text_html_parser_source_files = \\\n classpath/gnu/javax/swing/text/html/parser/HTML_401F.java \\\n classpath/gnu/javax/swing/text/html/parser/gnuDTD.java \\\n@@ -1850,6 +1993,33 @@ classpath/gnu/xml/pipeline/ValidationConsumer.java \\\n classpath/gnu/xml/pipeline/WellFormednessFilter.java \\\n classpath/gnu/xml/pipeline/XIncludeFilter.java \\\n classpath/gnu/xml/pipeline/XsltFilter.java \\\n+classpath/gnu/xml/stream/AttributeImpl.java \\\n+classpath/gnu/xml/stream/CharactersImpl.java \\\n+classpath/gnu/xml/stream/CommentImpl.java \\\n+classpath/gnu/xml/stream/DTDImpl.java \\\n+classpath/gnu/xml/stream/EndDocumentImpl.java \\\n+classpath/gnu/xml/stream/EndElementImpl.java \\\n+classpath/gnu/xml/stream/EndEntityImpl.java \\\n+classpath/gnu/xml/stream/EntityDeclarationImpl.java \\\n+classpath/gnu/xml/stream/EntityReferenceImpl.java \\\n+classpath/gnu/xml/stream/FilteredEventReader.java \\\n+classpath/gnu/xml/stream/FilteredStreamReader.java \\\n+classpath/gnu/xml/stream/LocationImpl.java \\\n+classpath/gnu/xml/stream/NamespaceImpl.java \\\n+classpath/gnu/xml/stream/NotationDeclarationImpl.java \\\n+classpath/gnu/xml/stream/ProcessingInstructionImpl.java \\\n+classpath/gnu/xml/stream/StartDocumentImpl.java \\\n+classpath/gnu/xml/stream/StartElementImpl.java \\\n+classpath/gnu/xml/stream/StartEntityImpl.java \\\n+classpath/gnu/xml/stream/XMLEventAllocatorImpl.java \\\n+classpath/gnu/xml/stream/XMLEventFactoryImpl.java \\\n+classpath/gnu/xml/stream/XMLEventImpl.java \\\n+classpath/gnu/xml/stream/XMLEventReaderImpl.java \\\n+classpath/gnu/xml/stream/XMLEventWriterImpl.java \\\n+classpath/gnu/xml/stream/XMLInputFactoryImpl.java \\\n+classpath/gnu/xml/stream/XMLOutputFactoryImpl.java \\\n+classpath/gnu/xml/stream/XMLStreamReaderImpl.java \\\n+classpath/gnu/xml/stream/XMLStreamWriterImpl.java \\\n classpath/gnu/xml/transform/AbstractNumberNode.java \\\n classpath/gnu/xml/transform/ApplyImportsNode.java \\\n classpath/gnu/xml/transform/ApplyTemplatesNode.java \\\n@@ -2497,6 +2667,7 @@ classpath/java/lang/Comparable.java \\\n classpath/java/lang/Compiler.java \\\n java/lang/ConcreteProcess.java \\\n java/lang/Double.java \\\n+classpath/java/lang/EnumConstantNotPresentException.java \\\n classpath/java/lang/Error.java \\\n classpath/java/lang/Exception.java \\\n classpath/java/lang/ExceptionInInitializerError.java \\\n@@ -2782,6 +2953,7 @@ classpath/java/rmi/activation/ActivationException.java \\\n classpath/java/rmi/activation/ActivationGroup.java \\\n classpath/java/rmi/activation/ActivationGroupDesc.java \\\n classpath/java/rmi/activation/ActivationGroupID.java \\\n+classpath/java/rmi/activation/ActivationGroup_Stub.java \\\n classpath/java/rmi/activation/ActivationID.java \\\n classpath/java/rmi/activation/ActivationInstantiator.java \\\n classpath/java/rmi/activation/ActivationMonitor.java \\\n@@ -3076,6 +3248,7 @@ classpath/java/util/HashMap.java \\\n classpath/java/util/HashSet.java \\\n classpath/java/util/Hashtable.java \\\n classpath/java/util/IdentityHashMap.java \\\n+classpath/java/util/InvalidPropertiesFormatException.java \\\n classpath/java/util/Iterator.java \\\n classpath/java/util/LinkedHashMap.java \\\n classpath/java/util/LinkedHashSet.java \\\n@@ -3274,15 +3447,12 @@ classpath/javax/imageio/event/IIOReadUpdateListener.java \\\n classpath/javax/imageio/event/IIOReadWarningListener.java \\\n classpath/javax/imageio/event/IIOWriteProgressListener.java \\\n classpath/javax/imageio/event/IIOWriteWarningListener.java \\\n-classpath/javax/imageio/metadata/IIOAttr.java \\\n classpath/javax/imageio/metadata/IIOInvalidTreeException.java \\\n classpath/javax/imageio/metadata/IIOMetadata.java \\\n classpath/javax/imageio/metadata/IIOMetadataController.java \\\n classpath/javax/imageio/metadata/IIOMetadataFormat.java \\\n classpath/javax/imageio/metadata/IIOMetadataFormatImpl.java \\\n classpath/javax/imageio/metadata/IIOMetadataNode.java \\\n-classpath/javax/imageio/metadata/IIONamedNodeMap.java \\\n-classpath/javax/imageio/metadata/IIONodeList.java \\\n classpath/javax/imageio/spi/IIORegistry.java \\\n classpath/javax/imageio/spi/IIOServiceProvider.java \\\n classpath/javax/imageio/spi/ImageInputStreamSpi.java \\\n@@ -3645,6 +3815,72 @@ classpath/javax/security/sasl/SaslServer.java \\\n classpath/javax/security/sasl/SaslServerFactory.java\n \n javax_security_sasl_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_security_sasl_source_files)))\n+javax_sound_midi_source_files = \\\n+classpath/javax/sound/midi/ControllerEventListener.java \\\n+classpath/javax/sound/midi/Instrument.java \\\n+classpath/javax/sound/midi/InvalidMidiDataException.java \\\n+classpath/javax/sound/midi/MetaEventListener.java \\\n+classpath/javax/sound/midi/MetaMessage.java \\\n+classpath/javax/sound/midi/MidiChannel.java \\\n+classpath/javax/sound/midi/MidiDevice.java \\\n+classpath/javax/sound/midi/MidiEvent.java \\\n+classpath/javax/sound/midi/MidiFileFormat.java \\\n+classpath/javax/sound/midi/MidiMessage.java \\\n+classpath/javax/sound/midi/MidiSystem.java \\\n+classpath/javax/sound/midi/MidiUnavailableException.java \\\n+classpath/javax/sound/midi/Patch.java \\\n+classpath/javax/sound/midi/Receiver.java \\\n+classpath/javax/sound/midi/Sequence.java \\\n+classpath/javax/sound/midi/Sequencer.java \\\n+classpath/javax/sound/midi/ShortMessage.java \\\n+classpath/javax/sound/midi/Soundbank.java \\\n+classpath/javax/sound/midi/SoundbankResource.java \\\n+classpath/javax/sound/midi/Synthesizer.java \\\n+classpath/javax/sound/midi/SysexMessage.java \\\n+classpath/javax/sound/midi/Track.java \\\n+classpath/javax/sound/midi/Transmitter.java \\\n+classpath/javax/sound/midi/VoiceStatus.java\n+\n+javax_sound_midi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_sound_midi_source_files)))\n+javax_sound_midi_spi_source_files = \\\n+classpath/javax/sound/midi/spi/MidiDeviceProvider.java \\\n+classpath/javax/sound/midi/spi/MidiFileReader.java \\\n+classpath/javax/sound/midi/spi/MidiFileWriter.java \\\n+classpath/javax/sound/midi/spi/SoundbankReader.java\n+\n+javax_sound_midi_spi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_sound_midi_spi_source_files)))\n+javax_sound_sampled_source_files = \\\n+classpath/javax/sound/sampled/AudioFileFormat.java \\\n+classpath/javax/sound/sampled/AudioFormat.java \\\n+classpath/javax/sound/sampled/AudioInputStream.java \\\n+classpath/javax/sound/sampled/AudioPermission.java \\\n+classpath/javax/sound/sampled/AudioSystem.java \\\n+classpath/javax/sound/sampled/BooleanControl.java \\\n+classpath/javax/sound/sampled/Clip.java \\\n+classpath/javax/sound/sampled/CompoundControl.java \\\n+classpath/javax/sound/sampled/Control.java \\\n+classpath/javax/sound/sampled/DataLine.java \\\n+classpath/javax/sound/sampled/EnumControl.java \\\n+classpath/javax/sound/sampled/FloatControl.java \\\n+classpath/javax/sound/sampled/Line.java \\\n+classpath/javax/sound/sampled/LineEvent.java \\\n+classpath/javax/sound/sampled/LineListener.java \\\n+classpath/javax/sound/sampled/LineUnavailableException.java \\\n+classpath/javax/sound/sampled/Mixer.java \\\n+classpath/javax/sound/sampled/Port.java \\\n+classpath/javax/sound/sampled/ReverbType.java \\\n+classpath/javax/sound/sampled/SourceDataLine.java \\\n+classpath/javax/sound/sampled/TargetDataLine.java \\\n+classpath/javax/sound/sampled/UnsupportedAudioFileException.java\n+\n+javax_sound_sampled_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_sound_sampled_source_files)))\n+javax_sound_sampled_spi_source_files = \\\n+classpath/javax/sound/sampled/spi/AudioFileReader.java \\\n+classpath/javax/sound/sampled/spi/AudioFileWriter.java \\\n+classpath/javax/sound/sampled/spi/FormatConversionProvider.java \\\n+classpath/javax/sound/sampled/spi/MixerProvider.java\n+\n+javax_sound_sampled_spi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_sound_sampled_spi_source_files)))\n javax_sql_source_files = \\\n classpath/javax/sql/ConnectionEvent.java \\\n classpath/javax/sql/ConnectionEventListener.java \\\n@@ -3746,6 +3982,7 @@ classpath/javax/swing/JTree.java \\\n classpath/javax/swing/JViewport.java \\\n classpath/javax/swing/JWindow.java \\\n classpath/javax/swing/KeyStroke.java \\\n+classpath/javax/swing/KeyboardManager.java \\\n classpath/javax/swing/LayoutFocusTraversalPolicy.java \\\n classpath/javax/swing/ListCellRenderer.java \\\n classpath/javax/swing/ListModel.java \\\n@@ -3972,12 +4209,16 @@ javax_swing_plaf_basic_header_files = $(patsubst classpath/%,%,$(patsubst %.java\n javax_swing_plaf_metal_source_files = \\\n classpath/javax/swing/plaf/metal/DefaultMetalTheme.java \\\n classpath/javax/swing/plaf/metal/MetalBorders.java \\\n+classpath/javax/swing/plaf/metal/MetalButtonListener.java \\\n classpath/javax/swing/plaf/metal/MetalButtonUI.java \\\n classpath/javax/swing/plaf/metal/MetalCheckBoxIcon.java \\\n classpath/javax/swing/plaf/metal/MetalCheckBoxUI.java \\\n+classpath/javax/swing/plaf/metal/MetalComboBoxButton.java \\\n+classpath/javax/swing/plaf/metal/MetalComboBoxEditor.java \\\n classpath/javax/swing/plaf/metal/MetalComboBoxIcon.java \\\n classpath/javax/swing/plaf/metal/MetalComboBoxUI.java \\\n classpath/javax/swing/plaf/metal/MetalDesktopIconUI.java \\\n+classpath/javax/swing/plaf/metal/MetalFileChooserUI.java \\\n classpath/javax/swing/plaf/metal/MetalIconFactory.java \\\n classpath/javax/swing/plaf/metal/MetalInternalFrameTitlePane.java \\\n classpath/javax/swing/plaf/metal/MetalInternalFrameUI.java \\\n@@ -3988,6 +4229,7 @@ classpath/javax/swing/plaf/metal/MetalProgressBarUI.java \\\n classpath/javax/swing/plaf/metal/MetalRadioButtonUI.java \\\n classpath/javax/swing/plaf/metal/MetalRootPaneUI.java \\\n classpath/javax/swing/plaf/metal/MetalScrollBarUI.java \\\n+classpath/javax/swing/plaf/metal/MetalScrollButton.java \\\n classpath/javax/swing/plaf/metal/MetalScrollPaneUI.java \\\n classpath/javax/swing/plaf/metal/MetalSeparatorUI.java \\\n classpath/javax/swing/plaf/metal/MetalSliderUI.java \\\n@@ -4000,7 +4242,8 @@ classpath/javax/swing/plaf/metal/MetalToggleButtonUI.java \\\n classpath/javax/swing/plaf/metal/MetalToolBarUI.java \\\n classpath/javax/swing/plaf/metal/MetalToolTipUI.java \\\n classpath/javax/swing/plaf/metal/MetalTreeUI.java \\\n-classpath/javax/swing/plaf/metal/MetalUtils.java\n+classpath/javax/swing/plaf/metal/MetalUtils.java \\\n+classpath/javax/swing/plaf/metal/OceanTheme.java\n \n javax_swing_plaf_metal_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_plaf_metal_source_files)))\n javax_swing_plaf_multi_source_files = \\\n@@ -4066,6 +4309,7 @@ classpath/javax/swing/text/DefaultEditorKit.java \\\n classpath/javax/swing/text/DefaultFormatter.java \\\n classpath/javax/swing/text/DefaultHighlighter.java \\\n classpath/javax/swing/text/DefaultStyledDocument.java \\\n+classpath/javax/swing/text/DefaultTextUI.java \\\n classpath/javax/swing/text/Document.java \\\n classpath/javax/swing/text/DocumentFilter.java \\\n classpath/javax/swing/text/EditorKit.java \\\n@@ -4105,10 +4349,12 @@ classpath/javax/swing/text/TabableView.java \\\n classpath/javax/swing/text/TextAction.java \\\n classpath/javax/swing/text/Utilities.java \\\n classpath/javax/swing/text/View.java \\\n-classpath/javax/swing/text/ViewFactory.java\n+classpath/javax/swing/text/ViewFactory.java \\\n+classpath/javax/swing/text/WrappedPlainView.java\n \n javax_swing_text_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_text_source_files)))\n javax_swing_text_html_source_files = \\\n+classpath/javax/swing/text/html/CSS.java \\\n classpath/javax/swing/text/html/HTML.java \\\n classpath/javax/swing/text/html/HTMLDocument.java \\\n classpath/javax/swing/text/html/HTMLEditorKit.java \\\n@@ -4208,6 +4454,43 @@ classpath/javax/xml/parsers/FactoryConfigurationError.java \\\n classpath/javax/xml/parsers/ParserConfigurationException.java \\\n classpath/javax/xml/parsers/SAXParser.java \\\n classpath/javax/xml/parsers/SAXParserFactory.java \\\n+classpath/javax/xml/stream/EventFilter.java \\\n+classpath/javax/xml/stream/FactoryConfigurationError.java \\\n+classpath/javax/xml/stream/Location.java \\\n+classpath/javax/xml/stream/StreamFilter.java \\\n+classpath/javax/xml/stream/XMLEventFactory.java \\\n+classpath/javax/xml/stream/XMLEventReader.java \\\n+classpath/javax/xml/stream/XMLEventWriter.java \\\n+classpath/javax/xml/stream/XMLFilter.java \\\n+classpath/javax/xml/stream/XMLInputFactory.java \\\n+classpath/javax/xml/stream/XMLIterator.java \\\n+classpath/javax/xml/stream/XMLOutputFactory.java \\\n+classpath/javax/xml/stream/XMLReporter.java \\\n+classpath/javax/xml/stream/XMLResolver.java \\\n+classpath/javax/xml/stream/XMLStreamConstants.java \\\n+classpath/javax/xml/stream/XMLStreamException.java \\\n+classpath/javax/xml/stream/XMLStreamReader.java \\\n+classpath/javax/xml/stream/XMLStreamWriter.java \\\n+classpath/javax/xml/stream/events/Attribute.java \\\n+classpath/javax/xml/stream/events/Characters.java \\\n+classpath/javax/xml/stream/events/Comment.java \\\n+classpath/javax/xml/stream/events/DTD.java \\\n+classpath/javax/xml/stream/events/EndDocument.java \\\n+classpath/javax/xml/stream/events/EndElement.java \\\n+classpath/javax/xml/stream/events/EndEntity.java \\\n+classpath/javax/xml/stream/events/EntityDeclaration.java \\\n+classpath/javax/xml/stream/events/EntityReference.java \\\n+classpath/javax/xml/stream/events/Namespace.java \\\n+classpath/javax/xml/stream/events/NotationDeclaration.java \\\n+classpath/javax/xml/stream/events/ProcessingInstruction.java \\\n+classpath/javax/xml/stream/events/StartDocument.java \\\n+classpath/javax/xml/stream/events/StartElement.java \\\n+classpath/javax/xml/stream/events/StartEntity.java \\\n+classpath/javax/xml/stream/events/XMLEvent.java \\\n+classpath/javax/xml/stream/util/EventReaderDelegate.java \\\n+classpath/javax/xml/stream/util/ReaderDelegate.java \\\n+classpath/javax/xml/stream/util/XMLEventAllocator.java \\\n+classpath/javax/xml/stream/util/XMLEventConsumer.java \\\n classpath/javax/xml/transform/ErrorListener.java \\\n classpath/javax/xml/transform/OutputKeys.java \\\n classpath/javax/xml/transform/Result.java \\\n@@ -4449,6 +4732,14 @@ all_packages_source_files = \\\n   gnu/awt/j2d.list \\\n   gnu/classpath.list \\\n   gnu/classpath/debug.list \\\n+  gnu/classpath/jdwp.list \\\n+  gnu/classpath/jdwp/event.list \\\n+  gnu/classpath/jdwp/event/filters.list \\\n+  gnu/classpath/jdwp/exception.list \\\n+  gnu/classpath/jdwp/id.list \\\n+  gnu/classpath/jdwp/processor.list \\\n+  gnu/classpath/jdwp/transport.list \\\n+  gnu/classpath/jdwp/util.list \\\n   gnu/gcj.list \\\n   gnu/gcj/convert.list \\\n   gnu/gcj/io.list \\\n@@ -4467,7 +4758,6 @@ all_packages_source_files = \\\n   gnu/java/net/protocol/file.list \\\n   gnu/java/net/protocol/ftp.list \\\n   gnu/java/net/protocol/http.list \\\n-  gnu/java/net/protocol/http/event.list \\\n   gnu/java/net/protocol/https.list \\\n   gnu/java/net/protocol/jar.list \\\n   gnu/java/nio.list \\\n@@ -4489,6 +4779,8 @@ all_packages_source_files = \\\n   gnu/java/text.list \\\n   gnu/java/util.list \\\n   gnu/java/util/prefs.list \\\n+  gnu/javax/crypto.list \\\n+  gnu/javax/imageio/bmp.list \\\n   gnu/javax/swing/text/html/parser.list \\\n   gnu/javax/swing/text/html/parser/models.list \\\n   gnu/javax/swing/text/html/parser/support.list \\\n@@ -4563,6 +4855,10 @@ all_packages_source_files = \\\n   javax/security/auth/x500.list \\\n   javax/security/cert.list \\\n   javax/security/sasl.list \\\n+  javax/sound/midi.list \\\n+  javax/sound/midi/spi.list \\\n+  javax/sound/sampled.list \\\n+  javax/sound/sampled/spi.list \\\n   javax/sql.list \\\n   javax/swing.list \\\n   javax/swing/border.list \\\n@@ -4589,6 +4885,14 @@ ordinary_header_files = \\\n   $(gnu_awt_j2d_header_files) \\\n   $(gnu_classpath_header_files) \\\n   $(gnu_classpath_debug_header_files) \\\n+  $(gnu_classpath_jdwp_header_files) \\\n+  $(gnu_classpath_jdwp_event_header_files) \\\n+  $(gnu_classpath_jdwp_event_filters_header_files) \\\n+  $(gnu_classpath_jdwp_exception_header_files) \\\n+  $(gnu_classpath_jdwp_id_header_files) \\\n+  $(gnu_classpath_jdwp_processor_header_files) \\\n+  $(gnu_classpath_jdwp_transport_header_files) \\\n+  $(gnu_classpath_jdwp_util_header_files) \\\n   $(gnu_gcj_header_files) \\\n   $(gnu_gcj_convert_header_files) \\\n   $(gnu_gcj_io_header_files) \\\n@@ -4607,7 +4911,6 @@ ordinary_header_files = \\\n   $(gnu_java_net_protocol_file_header_files) \\\n   $(gnu_java_net_protocol_ftp_header_files) \\\n   $(gnu_java_net_protocol_http_header_files) \\\n-  $(gnu_java_net_protocol_http_event_header_files) \\\n   $(gnu_java_net_protocol_https_header_files) \\\n   $(gnu_java_net_protocol_jar_header_files) \\\n   $(gnu_java_nio_header_files) \\\n@@ -4629,6 +4932,8 @@ ordinary_header_files = \\\n   $(gnu_java_text_header_files) \\\n   $(gnu_java_util_header_files) \\\n   $(gnu_java_util_prefs_header_files) \\\n+  $(gnu_javax_crypto_header_files) \\\n+  $(gnu_javax_imageio_bmp_header_files) \\\n   $(gnu_javax_swing_text_html_parser_header_files) \\\n   $(gnu_javax_swing_text_html_parser_models_header_files) \\\n   $(gnu_javax_swing_text_html_parser_support_header_files) \\\n@@ -4703,6 +5008,10 @@ ordinary_header_files = \\\n   $(javax_security_auth_x500_header_files) \\\n   $(javax_security_cert_header_files) \\\n   $(javax_security_sasl_header_files) \\\n+  $(javax_sound_midi_header_files) \\\n+  $(javax_sound_midi_spi_header_files) \\\n+  $(javax_sound_sampled_header_files) \\\n+  $(javax_sound_sampled_spi_header_files) \\\n   $(javax_sql_header_files) \\\n   $(javax_swing_header_files) \\\n   $(javax_swing_border_header_files) \\\n@@ -4726,6 +5035,7 @@ ordinary_header_files = \\\n \n bc_objects = \\\n   gnu-java-beans.lo \\\n+  gnu-javax-sound-midi.lo \\\n   gnu-xml.lo \\\n   javax-imageio.lo \\\n   javax-xml.lo \\\n@@ -6584,6 +6894,86 @@ gnu/classpath/debug.list: $(gnu_classpath_debug_source_files)\n \n -include gnu/classpath/debug.deps\n \n+gnu/classpath/jdwp.list: $(gnu_classpath_jdwp_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp.list\n+\n+-include gnu/classpath/jdwp.deps\n+\n+gnu/classpath/jdwp/event.list: $(gnu_classpath_jdwp_event_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_event_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/event.list\n+\n+-include gnu/classpath/jdwp/event.deps\n+\n+gnu/classpath/jdwp/event/filters.list: $(gnu_classpath_jdwp_event_filters_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_event_filters_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/event/filters.list\n+\n+-include gnu/classpath/jdwp/event/filters.deps\n+\n+gnu/classpath/jdwp/exception.list: $(gnu_classpath_jdwp_exception_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_exception_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/exception.list\n+\n+-include gnu/classpath/jdwp/exception.deps\n+\n+gnu/classpath/jdwp/id.list: $(gnu_classpath_jdwp_id_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_id_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/id.list\n+\n+-include gnu/classpath/jdwp/id.deps\n+\n+gnu/classpath/jdwp/processor.list: $(gnu_classpath_jdwp_processor_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_processor_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/processor.list\n+\n+-include gnu/classpath/jdwp/processor.deps\n+\n+gnu/classpath/jdwp/transport.list: $(gnu_classpath_jdwp_transport_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_transport_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/transport.list\n+\n+-include gnu/classpath/jdwp/transport.deps\n+\n+gnu/classpath/jdwp/util.list: $(gnu_classpath_jdwp_util_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_classpath_jdwp_util_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/classpath/jdwp/util.list\n+\n+-include gnu/classpath/jdwp/util.deps\n+\n gnu/gcj.list: $(gnu_gcj_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_gcj_source_files); do \\\n@@ -6789,16 +7179,6 @@ gnu/java/net/protocol/http.list: $(gnu_java_net_protocol_http_source_files)\n \n -include gnu/java/net/protocol/http.deps\n \n-gnu/java/net/protocol/http/event.list: $(gnu_java_net_protocol_http_event_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\t@for file in $(gnu_java_net_protocol_http_event_source_files); do \\\n-\t  if test -f $(srcdir)/$$file; then \\\n-\t    echo $(srcdir)/$$file; \\\n-\t  else echo $$file; fi; \\\n-\tdone > gnu/java/net/protocol/http/event.list\n-\n--include gnu/java/net/protocol/http/event.deps\n-\n gnu/java/net/protocol/https.list: $(gnu_java_net_protocol_https_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_net_protocol_https_source_files); do \\\n@@ -7009,6 +7389,31 @@ gnu/java/util/prefs.list: $(gnu_java_util_prefs_source_files)\n \n -include gnu/java/util/prefs.deps\n \n+gnu/javax/crypto.list: $(gnu_javax_crypto_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto.list\n+\n+-include gnu/javax/crypto.deps\n+\n+gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_imageio_bmp_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/imageio/bmp.list\n+\n+-include gnu/javax/imageio/bmp.deps\n+\n+gnu-javax-sound-midi.lo: $(gnu_javax_sound_midi_source_files)\n+\t@find classpath/lib/gnu/javax/sound/midi -name '*.class' > gnu-javax-sound-midi.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-sound-midi.lo @gnu-javax-sound-midi.list\n+\t@rm -f gnu-javax-sound-midi.list\n+\n gnu/javax/swing/text/html/parser.list: $(gnu_javax_swing_text_html_parser_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_swing_text_html_parser_source_files); do \\\n@@ -7759,6 +8164,46 @@ javax/security/sasl.list: $(javax_security_sasl_source_files)\n \n -include javax/security/sasl.deps\n \n+javax/sound/midi.list: $(javax_sound_midi_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_sound_midi_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/sound/midi.list\n+\n+-include javax/sound/midi.deps\n+\n+javax/sound/midi/spi.list: $(javax_sound_midi_spi_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_sound_midi_spi_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/sound/midi/spi.list\n+\n+-include javax/sound/midi/spi.deps\n+\n+javax/sound/sampled.list: $(javax_sound_sampled_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_sound_sampled_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/sound/sampled.list\n+\n+-include javax/sound/sampled.deps\n+\n+javax/sound/sampled/spi.list: $(javax_sound_sampled_spi_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_sound_sampled_spi_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/sound/sampled/spi.list\n+\n+-include javax/sound/sampled/spi.deps\n+\n javax/sql.list: $(javax_sql_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(javax_sql_source_files); do \\"}, {"sha": "f170038598e73c6ad7c38db4253aa8ac1e1c750f", "filename": "libjava/classpath/.classpath", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.classpath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.classpath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.classpath?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,8 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <classpath>\n-\t<classpathentry excluding=\"compat/|examples/|external/|gnu/classpath/jdwp/|gnu/javax/swing/plaf/|test/|testsuite/|vm/reference/|resource/\" kind=\"src\" path=\"\"/>\n+\t<classpathentry excluding=\".externalToolBuilders/|.settings/|ChangeLog*|Makefile*|autom4te.cache/|compat/|config*|doc/|examples/|external/|gnu/javax/swing/plaf/|include/|install/|lib/|m4/|native/|resource/|scripts/|test/|testsuite/|vm/reference/\" kind=\"src\" path=\"\"/>\n \t<classpathentry kind=\"src\" path=\"resource\"/>\n-\t<classpathentry excluding=\"gnu/classpath/jdwp/\" kind=\"src\" path=\"vm/reference\"/>\n+\t<classpathentry kind=\"src\" path=\"vm/reference\"/>\n \t<classpathentry kind=\"src\" path=\"external/sax\"/>\n \t<classpathentry kind=\"src\" path=\"external/w3c_dom\"/>\n \t<classpathentry kind=\"src\" path=\"examples\"/>"}, {"sha": "0c544bd829ea2d8ae44435ecf755150ebbda7885", "filename": "libjava/classpath/.settings/org.eclipse.jdt.core.prefs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,12 +1,13 @@\n-#Mon Apr 25 22:37:20 MDT 2005\n+#Tue Sep 13 16:15:04 MDT 2005\n eclipse.preferences.version=1\n org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5\n+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.4\n org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve\n org.eclipse.jdt.core.compiler.compliance=1.5\n org.eclipse.jdt.core.compiler.debug.lineNumber=generate\n org.eclipse.jdt.core.compiler.debug.localVariable=generate\n org.eclipse.jdt.core.compiler.debug.sourceFile=generate\n+org.eclipse.jdt.core.compiler.doc.comment.support=enabled\n org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning\n org.eclipse.jdt.core.compiler.problem.assertIdentifier=error\n org.eclipse.jdt.core.compiler.problem.autoboxing=ignore\n@@ -22,9 +23,20 @@ org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning\n org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning\n org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore\n org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore\n+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning\n+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled\n+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled\n+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled\n+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private\n org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore\n org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning\n org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore\n+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore\n+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=disabled\n+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public\n+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore\n+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=disabled\n+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private\n org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore\n org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning\n org.eclipse.jdt.core.compiler.problem.noEffectAssignment=error\n@@ -50,7 +62,7 @@ org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=di\n org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled\n org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=ignore\n org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning\n-org.eclipse.jdt.core.compiler.source=1.5\n+org.eclipse.jdt.core.compiler.source=1.4\n org.eclipse.jdt.core.formatter.align_type_members_on_columns=false\n org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=18\n org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16"}, {"sha": "05d8922d3c05aea0b59a071ad21674d8d4b5e354", "filename": "libjava/classpath/.settings/org.eclipse.jdt.ui.prefs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.ui.prefs?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,5 @@\n-#Mon Apr 25 21:37:39 MDT 2005\n+#Sat Sep 17 22:04:29 MDT 2005\n eclipse.preferences.version=1\n formatter_settings_version=8\n-org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\\=\"1.0\" encoding\\=\"UTF-8\"?>\\n<templates/>\n+internal.default.compliance=user\n+org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\\=\"1.0\" encoding\\=\"UTF-8\"?>\\n<templates><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.gettercomment\" name\\=\"gettercomment\" description\\=\"Comment for getter method\" context\\=\"gettercomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * @return Returns the ${bare_field_name}.\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.settercomment\" name\\=\"settercomment\" description\\=\"Comment for setter method\" context\\=\"settercomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * @param ${param} The ${bare_field_name} to set.\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.constructorcomment\" name\\=\"constructorcomment\" description\\=\"Comment for created constructors\" context\\=\"constructorcomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * ${tags}\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.filecomment\" name\\=\"filecomment\" description\\=\"Comment for created Java files\" context\\=\"filecomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"false\">/* ${file_name} -- FIXME describe the file briefly\\n   Copyright (C) ${year} Free Software Foundation, Inc.\\n\\nThis file is part of GNU Classpath.\\n\\nGNU Classpath is free software; you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation; either version 2, or (at your option)\\nany later version.\\n\\nGNU Classpath is distributed in the hope that it will be useful, but\\nWITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\nGeneral Public License for more details.\\n\\nYou should have received a copy of the GNU General Public License\\nalong with GNU Classpath; see the file COPYING.  If not, write to the\\nFree Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\\n02110-1301 USA.\\n\\nLinking this library statically or dynamically with other modules is\\nmaking a combined work based on this library.  Thus, the terms and\\nconditions of the GNU General Public License cover the whole\\ncombination.\\n\\nAs a special exception, the copyright holders of this library give you\\npermission to link this library with independent modules to produce an\\nexecutable, regardless of the license terms of these independent\\nmodules, and to copy and distribute the resulting executable under\\nterms of your choice, provided that you also meet, for each linked\\nindependent module, the terms and conditions of the license of that\\nmodule.  An independent module is a module which is not derived from\\nor based on this library.  If you modify this library, you may extend\\nthis exception to your version of the library, but you are not\\nobligated to do so.  If you do not wish to do so, delete this\\nexception statement from your version. */\\n\\n\\n</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.typecomment\" name\\=\"typecomment\" description\\=\"Comment for created types\" context\\=\"typecomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * @author ${user}\\n *\\n * ${tags}\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.fieldcomment\" name\\=\"fieldcomment\" description\\=\"Comment for fields\" context\\=\"fieldcomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * \\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.methodcomment\" name\\=\"methodcomment\" description\\=\"Comment for non-overriding methods\" context\\=\"methodcomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/**\\n * ${tags}\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.overridecomment\" name\\=\"overridecomment\" description\\=\"Comment for overriding methods\" context\\=\"overridecomment_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">/* (non-Javadoc)\\n * ${see_to_overridden}\\n */</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.newtype\" name\\=\"newtype\" description\\=\"Newly created files\" context\\=\"newtype_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"false\">/* ${file_name} -- FIXME\\: briefly describe file purpose\\n   Copyright (C) ${year} Free Software Foundation, Inc.\\n\\nThis file is part of GNU Classpath.\\n\\nGNU Classpath is free software; you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation; either version 2, or (at your option)\\nany later version.\\n\\nGNU Classpath is distributed in the hope that it will be useful, but\\nWITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\nGeneral Public License for more details.\\n\\nYou should have received a copy of the GNU General Public License\\nalong with GNU Classpath; see the file COPYING.  If not, write to the\\nFree Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\\n02110-1301 USA.\\n\\nLinking this library statically or dynamically with other modules is\\nmaking a combined work based on this library.  Thus, the terms and\\nconditions of the GNU General Public License cover the whole\\ncombination.\\n\\nAs a special exception, the copyright holders of this library give you\\npermission to link this library with independent modules to produce an\\nexecutable, regardless of the license terms of these independent\\nmodules, and to copy and distribute the resulting executable under\\nterms of your choice, provided that you also meet, for each linked\\nindependent module, the terms and conditions of the license of that\\nmodule.  An independent module is a module which is not derived from\\nor based on this library.  If you modify this library, you may extend\\nthis exception to your version of the library, but you are not\\nobligated to do so.  If you do not wish to do so, delete this\\nexception statement from your version. */\\n\\n\\n${package_declaration}\\n\\n${typecomment}\\n${type_declaration}</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.catchblock\" name\\=\"catchblock\" description\\=\"Code in new catch blocks\" context\\=\"catchblock_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">// ${todo} Auto-generated catch block\\n${exception_var}.printStackTrace();</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.methodbody\" name\\=\"methodbody\" description\\=\"Code in created method stubs\" context\\=\"methodbody_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">// ${todo} Auto-generated method stub\\n${body_statement}</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.constructorbody\" name\\=\"constructorbody\" description\\=\"Code in created constructor stubs\" context\\=\"constructorbody_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">${body_statement}\\n// ${todo} Auto-generated constructor stub</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.getterbody\" name\\=\"getterbody\" description\\=\"Code in created getters\" context\\=\"getterbody_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">return ${field};</template><template id\\=\"org.eclipse.jdt.ui.text.codetemplates.setterbody\" name\\=\"setterbody\" description\\=\"Code in created setters\" context\\=\"setterbody_context\" enabled\\=\"true\" deleted\\=\"false\" autoinsert\\=\"true\">${field} \\= ${param};</template></templates>"}, {"sha": "339138aef06eec29e4857ef2cd4dcdf4ca7971e8", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -4,16 +4,19 @@ caught bugs or submitted minor patches. If your name does not appear\n on either list, but should, let us know. Please keep this list in\n alphabetic order.\n \n-Stuart Ballard (stuart.ballard@mcmail.com)\n+Lillian Angel (langel@redhat.com)\n+Stuart Ballard (stuart.a.ballard@gmail.com)\n Mark Benvenuto (mcb54@columbia.edu)\n Geoff Berry (gcb@gnu.org)\n James E. Blair (corvus@gnu.org)\n Eric Blake (ebb9@email.byu.edu)\n Sascha Brawer (brawer@acm.org)\n Nic Ferrier (nferrier@tapsellferrier.co.uk)\n Paul Fisher (rao@gnu.org)\n+David Gilbert (david.gilbert@object-refinery.com)\n Anthony Green (green@redhat.com)\n Jochen Hoenicke (Jochen.Hoenicke@Informatik.Uni-Oldenburg.de)\n+Andrew John Hughes (gnu_andrew@member.fsf.org)\n Brian Jones (cbj@gnu.org)\n Roman Kennke (roman@kennke.org) \n Michael Koch (konqueror@gmx.de)\n@@ -25,6 +28,7 @@ Bryce McKinlay (bryce@waitaki.otago.ac.nz)\n Audrius Meskauskas (audriusa@Bioinformatics.org)\n Aaron M. Renn (arenn@urbanophile.com)\n Andrew Selkirk (aselkirk@sympatico.ca)\n+Christian Thalinger (twisti@complang.tuwien.ac.at)\n Tom Tromey (tromey@cygnus.com)\n Ronald Veldema (rveldema@cs.vu.nl)\n Mark Wielaard (mark@klomp.org)"}, {"sha": "aa75439582c4431ea238d6051e8c000c1fd93345", "filename": "libjava/classpath/BUGS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FBUGS?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -2,4 +2,4 @@ This package is still in the early development phase.  That means too\n early to start listing bugs in a file like this one!\n \n Report bugs to classpath@gnu.org or much better via Savannah at this\n-URL: http://savannah.gnu.org/bugs/?group=classpath\n+URL: http://www.gnu.org/software/classpath/bugs.html"}, {"sha": "d40cc1a418c11c768764dbbf32703485add43c98", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 9588, "deletions": 2, "changes": 9590, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7da23666937d740b63f9c4c6bfcf0f061d9bd3b1", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-Installing GNU Classpath - Last updated: August 31, 2005\n+Installing GNU Classpath - Last updated: September 7, 2005\n \n First, this is a development release only! Unless you are interested in\n active development and debugging, or just like running random alpha code,\n@@ -31,12 +31,17 @@ Suggested Software\n \t--with-jikes, --with-gcj, --with-ecj or --with-kjc as argument to\n \tconfigure; the present default is gcj.\n \n-        - GCJ 3.3+ (part of the GNU GCC package).\n+        - GCJ 4.0+ (part of the GNU GCC package).\n         - IBM jikes 1.19+.  \n         - Eclipse Compiler for Java 3.1+\n         - The kjc compiler is supported with configure but we have\n           been unable to successfully compile with it.\n \n+\tIMPORTANT: Versions of GCJ which are earlier than 4.0 contain\n+\tbugs which make it impossible to compile the class library and\n+\tare *not* supported any more. If you are stuck on a system where\n+\tGCC 3.x is the system compiler we recommend using Jikes.\n+\n \tFor building the gtk+ AWT peer JNI native libraries, the following\n \tare required unless --disable-gtk-peer is used as an argument to\n \tconfigure.\n@@ -74,6 +79,29 @@ Suggested Software\n \n \t- texinfo 4.2 or higher.\n \n+\tFor building the ALSA midi provider code you will need\n+\tALSA.  http://www.alsa-project.org. \n+\n+\tFor building the DSSI midi synthesizer provider code you will\n+\tneed DSSI from http://dssi.sourceforge.net.  This, in turn, \n+\tintroduces many dependencies, including:\n+\n+\t  - liblo: the Lightweight OSC implementation\n+\t    http://plugin.org.uk/liblo/\n+\n+\t  - LADSPA: Linux Audio Developer's Simple Plugin API\n+\t    http://www.ladspa.org\n+\n+\t  - the JACK Audio Connection Kit: A low latency audio server\n+\t    http://jackit.sourceforge.net\n+\n+\t  - libsndfile: an audio file I/O library\n+\t    http://www.mega-nerd.com/libsndfile/\n+\n+\t  - fluidsynth: a real-time SoundFont 2 based soft-synth\n+\t    http://www.fluidsynth.org/\n+\n+\n This package was designed to use the GNU standard for configuration\n and makefiles.  To build and install do the following:\n \n@@ -99,8 +127,7 @@ gives a complete list.\n   --enable-Werror         whether to compile C code with -Werror which turns\n                           any compiler warning into a compilation failure\n                           default=no\n-  --enable-xmlj           compile native libxml/xslt library default=no\n-  --with-gjdoc\t\t      generate documentation using gjdoc default=no\n+  --with-gjdoc            generate documentation using gjdoc default=no\n   --with-jay              Regenerate the parsers with jay must be given the\n                           path to the jay executable\n "}, {"sha": "273623b2c48aeb71e3943a06dc91c5cdc8b7eca2", "filename": "libjava/classpath/LICENSE", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FLICENSE?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -284,3 +284,17 @@ All these files are distributed under the following terms:\n   shall not be used in advertising or otherwise to promote the sale, use\n   or other dealings in these Data Files or Software without prior\n   written authorization of the copyright holder.\n+\n+\n+The file native/jni/midi-dssi/gnu_javax_sound_midi_dssi_DSSISynthesizer.c\n+contains two functions (get_port_default and set_control) derived from\n+example code in the DSSI distribution (http://dssi.sourceforge.net).\n+The original DSSI example code is distributed under the following\n+terms:\n+\n+ Copyright 2004 Chris Cannam, Steve Harris and Sean Bolton.\n+ \n+ Permission to use, copy, modify, distribute, and sell this software\n+ for any purpose is hereby granted without fee, provided that the\n+ above copyright notice and this permission notice are included in\n+ all copies or substantial portions of the software."}, {"sha": "69bdb4aa4317618250998356110956e111a2618e", "filename": "libjava/classpath/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.am?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -11,7 +11,8 @@ native: lib\n \n EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n              ChangeLog-2003 ChangeLog-2004 \\\n-             ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj\n+             ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n+\t     autogen.sh\n \n #DISTCHECK_CONFIGURE_FLAGS = --enable-gjdoc\n "}, {"sha": "410171efc595ca76a78782a8f3dac8be39453436", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -44,10 +44,8 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \\\n \tltmain.sh missing mkinstalldirs\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -100,10 +98,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -240,6 +242,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -253,6 +256,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n@@ -272,7 +276,8 @@ DIST_SUBDIRS = lib doc external include native resource scripts examples\n ACLOCAL_AMFLAGS = -I m4 -I ../.. -I ../../config\n EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n              ChangeLog-2003 ChangeLog-2004 \\\n-             ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj\n+             ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n+\t     autogen.sh\n \n all: all-recursive\n \n@@ -446,7 +451,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/../.. $(distdir)/../../config $(distdir)/examples $(distdir)/gnu/classpath $(distdir)/lib $(distdir)/m4 $(distdir)/scripts\n+\t$(mkdir_p) $(distdir)/../.. $(distdir)/examples $(distdir)/gnu/classpath $(distdir)/lib $(distdir)/m4 $(distdir)/scripts\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\"}, {"sha": "778369385b79d982e35400b7bf8095afb2064414", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,3 +1,58 @@\n+New in release 0.20\n+\n+Runtime interface changes:\n+\n+* New method VMStackWalker.getClassLoader() was added to avoid an infinite\n+  loop between getCallingClassLoader() and Class.getClassLoader().\n+\n+New in release 0.19 (Nov 2, 2005)\n+\n+* The Swing RepaintManager has been reworked for more efficient painting,\n+  especially for large GUIs.\n+\n+* The Swing layout manager OverlayLayout has been implemented, the BoxLayout\n+  has been rewritten to make use of the SizeRequirements utility class and\n+  caching for more efficient layout.\n+\n+* Improved accessibility support for Swing.\n+\n+* The java.net.HttpURLConnection implementation no longer buffers the\n+  entire response body in memory.  This means that response bodies\n+  larger than available memory can now be handled.\n+\n+* The Andrew Watson, Vice President and Technical Director of the Object\n+  Management Group, has officially assigned us 20 bit Vendor Minor Code Id: \n+  0x47430 (\"GC\") that will mark remote Classpath - specific system exceptions.\n+  Obtaining the VMCID means that GNU Classpath now is a recogniseable type of\n+  node in a highly interoperable CORBA world. \n+\n+* Classpath now includes the first working draft to support the RMI over\n+  IIOP protocol. The current implementation is capable for remote invocations,\n+  transferring various Serializables and Externalizables via RMI-IIOP protocol.\n+  It can flatten graphs and, at least for the simple cases, is interoperable\n+  with Sun's jdk 1.5.\n+\n+* Qt4 configury switches for OS-X. Additional to the --enable-qt-peer, OS-X\n+  users with a Qt4 installation can build the qt-peers with the argument\n+  --with-qt4dir=<Qt4-installation-dir>.\n+\n+* Significant progress has been made in the implementation of the \n+  javax.swing.plaf.metal.* package, with most UI delegates in a working state\n+  now.  Please test this with your own applications and provide feedback that \n+  will help us to improve this package.\n+\n+* The GUI demo (gnu.classpath.examples.swing.Demo) has been extended to \n+  highlight various features in our free-swing implementation. And includes\n+  a look and feel switcher (Metal default, Ocean or GNU).\n+\n+Runtime interface changes:\n+\n+* Changed implementation of VMClassLoader.getPackage(s) : new method\n+  VMClassLoader.getBootPackages should be implemented by the vm, and sould\n+  return a string array of boot package names (\"java.lang\", \"java.net\", ...).\n+  Feedback from vm implementors for usability and relevance of the\n+  getBootPackages method would be greatly appreciated.\n+  \n New in release 0.18 (Sep 6, 2005)\n \n * GNU JAWT implementation, the AWT Native Interface, which allows direct"}, {"sha": "7f4f5c62f2213b5774628915e468d9297a9798ee", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -547,6 +547,39 @@ AC_DEFUN([AM_PROG_INSTALL_SH],\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n+#                                                          -*- Autoconf -*-\n+# Copyright (C) 2003  Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 1\n+\n+# Check whether the underlying file-system supports filenames\n+# with a leading dot.  For instance MS-DOS doesn't.\n+AC_DEFUN([AM_SET_LEADING_DOT],\n+[rm -rf .tst 2>/dev/null\n+mkdir .tst 2>/dev/null\n+if test -d .tst; then\n+  am__leading_dot=.\n+else\n+  am__leading_dot=_\n+fi\n+rmdir .tst 2>/dev/null\n+AC_SUBST([am__leading_dot])])\n+\n # Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n \n@@ -1053,10 +1086,8 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n-m4_include([../../config/depstand.m4])\n-m4_include([../../config/lead-dot.m4])\n-m4_include([../../config/no-executables.m4])\n m4_include([../../libtool.m4])\n+m4_include([m4/acattribute.m4])\n m4_include([m4/accross.m4])\n m4_include([m4/acinclude.m4])\n m4_include([m4/iconv.m4])"}, {"sha": "babfa4e5d83872dc507c5b3a4ceb5196a5aadcf7", "filename": "libjava/classpath/autogen.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fautogen.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fautogen.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fautogen.sh?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -16,7 +16,7 @@ LIBTOOLIZE=libtoolize\n \n have_libtool=false\n if ${LIBTOOLIZE} --version < /dev/null > /dev/null 2>&1 ; then\n-\tlibtool_version=`${LIBTOOLIZE} --version | sed 's/^[^0-9]*\\([0-9.][0-9.]*\\).*/\\1/'`\n+\tlibtool_version=`${LIBTOOLIZE} --version | sed 's/^.*[^0-9.]\\([0-9]\\{1,\\}\\.[0-9.]\\{1,\\}\\).*/\\1/'`\n \tcase $libtool_version in\n \t    1.5*)\n \t\thave_libtool=true"}, {"sha": "917bbc50f36af7527bb91465a90821815ecefcc4", "filename": "libjava/classpath/config.guess", "status": "modified", "additions": 333, "deletions": 281, "changes": 614, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.guess?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,9 +1,9 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n-timestamp='2003-06-17'\n+timestamp='2005-07-08'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -17,13 +17,15 @@ timestamp='2003-06-17'\n #\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n+# 02110-1301, USA.\n #\n # As a special exception to the GNU General Public License, if you\n # distribute this file as part of a program that contains a\n # configuration script generated by Autoconf, you may include it under\n # the same distribution terms that you use for the rest of that program.\n \n+\n # Originally written by Per Bothner <per@bothner.com>.\n # Please send patches to <config-patches@gnu.org>.  Submit a context\n # diff and a properly formatted ChangeLog entry.\n@@ -53,7 +55,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n@@ -66,11 +68,11 @@ Try \\`$me --help' for more information.\"\n while test $# -gt 0 ; do\n   case $1 in\n     --time-stamp | --time* | -t )\n-       echo \"$timestamp\" ; exit 0 ;;\n+       echo \"$timestamp\" ; exit ;;\n     --version | -v )\n-       echo \"$version\" ; exit 0 ;;\n+       echo \"$version\" ; exit ;;\n     --help | --h* | -h )\n-       echo \"$usage\"; exit 0 ;;\n+       echo \"$usage\"; exit ;;\n     -- )     # Stop option processing\n        shift; break ;;\n     - )\t# Use stdin as input.\n@@ -123,7 +125,7 @@ case $CC_FOR_BUILD,$HOST_CC,$CC in\n \t;;\n  ,,*)   CC_FOR_BUILD=$CC ;;\n  ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n-esac ;'\n+esac ; set_cc_for_build= ;'\n \n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n # (ghazi@noc.rutgers.edu 1994-08-24)\n@@ -136,13 +138,6 @@ UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n \n-## for Red Hat Linux\n-if test -f /etc/redhat-release ; then\n-    VENDOR=redhat ;\n-else\n-    VENDOR= ;\n-fi\n-\n # Note: order is significant - the case branches are not exclusive.\n \n case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n@@ -203,50 +198,29 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# contains redundant information, the shorter form:\n \t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n \techo \"${machine}-${os}${release}\"\n-\texit 0 ;;\n-    amiga:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    arc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    hp300:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mac68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    macppc:OpenBSD:*:*)\n-\techo powerpc-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme88k:OpenBSD:*:*)\n-\techo m88k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvmeppc:OpenBSD:*:*)\n-\techo powerpc-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    pmax:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sgi:OpenBSD:*:*)\n-\techo mipseb-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sun3:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    wgrisc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:OpenBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:ekkoBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n+\texit ;;\n+    macppc:MirBSD:*:*)\n+\techo powerppc-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:MirBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n     alpha:OSF1:*:*)\n-\tif test $UNAME_RELEASE = \"V4.0\"; then\n+\tcase $UNAME_RELEASE in\n+\t*4.0)\n \t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n-\tfi\n+\t\t;;\n+\t*5.*)\n+\t        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\t;;\n+\tesac\n \t# According to Compaq, /usr/sbin/psrinfo has been available on\n \t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n \t# covers most systems running today.  This code pipes the CPU\n@@ -284,75 +258,82 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t    \"EV7.9 (21364A)\")\n \t\tUNAME_MACHINE=\"alphaev79\" ;;\n \tesac\n+\t# A Pn.n version is a patched version.\n \t# A Vn.n version is a released version.\n \t# A Tn.n version is a released field test version.\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-\texit 0 ;;\n-    Alpha*:OpenVMS:*:*)\n-\techo alpha-hp-vms\n-\texit 0 ;;\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\texit ;;\n     Alpha\\ *:Windows_NT*:*)\n \t# How do we know it's Interix rather than the generic POSIX subsystem?\n \t# Should we change UNAME_MACHINE based on the output of uname instead\n \t# of the specific Alpha model?\n \techo alpha-pc-interix\n-\texit 0 ;;\n+\texit ;;\n     21064:Windows_NT:50:3)\n \techo alpha-dec-winnt3.5\n-\texit 0 ;;\n+\texit ;;\n     Amiga*:UNIX_System_V:4.0:*)\n \techo m68k-unknown-sysv4\n-\texit 0;;\n+\texit ;;\n     *:[Aa]miga[Oo][Ss]:*:*)\n \techo ${UNAME_MACHINE}-unknown-amigaos\n-\texit 0 ;;\n+\texit ;;\n     *:[Mm]orph[Oo][Ss]:*:*)\n \techo ${UNAME_MACHINE}-unknown-morphos\n-\texit 0 ;;\n+\texit ;;\n     *:OS/390:*:*)\n \techo i370-ibm-openedition\n-\texit 0 ;;\n+\texit ;;\n+    *:z/VM:*:*)\n+\techo s390-ibm-zvmoe\n+\texit ;;\n+    *:OS400:*:*)\n+        echo powerpc-ibm-os400\n+\texit ;;\n     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n \techo arm-acorn-riscix${UNAME_RELEASE}\n-\texit 0;;\n+\texit ;;\n+    arm:riscos:*:*|arm:RISCOS:*:*)\n+\techo arm-unknown-riscos\n+\texit ;;\n     SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n \techo hppa1.1-hitachi-hiuxmpp\n-\texit 0;;\n+\texit ;;\n     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n \t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n \tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n \t\techo pyramid-pyramid-sysv3\n \telse\n \t\techo pyramid-pyramid-bsd\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     NILE*:*:*:dcosx)\n \techo pyramid-pyramid-svr4\n-\texit 0 ;;\n+\texit ;;\n     DRS?6000:unix:4.0:6*)\n \techo sparc-icl-nx6\n-\texit 0 ;;\n-    DRS?6000:UNIX_SV:4.2*:7*)\n+\texit ;;\n+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n \tcase `/usr/bin/uname -p` in\n-\t    sparc) echo sparc-icl-nx7 && exit 0 ;;\n+\t    sparc) echo sparc-icl-nx7; exit ;;\n \tesac ;;\n     sun4H:SunOS:5.*:*)\n \techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n+\texit ;;\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n \techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n+\texit ;;\n     i86pc:SunOS:5.*:*)\n \techo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n+\texit ;;\n     sun4*:SunOS:6*:*)\n \t# According to config.sub, this is the proper way to canonicalize\n \t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n \t# it's likely to be more like Solaris than SunOS4.\n \techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n+\texit ;;\n     sun4*:SunOS:*:*)\n \tcase \"`/usr/bin/arch -k`\" in\n \t    Series*|S4*)\n@@ -361,10 +342,10 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \tesac\n \t# Japanese Language versions have a version number like `4.1.3-JL'.\n \techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n-\texit 0 ;;\n+\texit ;;\n     sun3*:SunOS:*:*)\n \techo m68k-sun-sunos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     sun*:*:4.2BSD:*)\n \tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n \ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n@@ -376,10 +357,10 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\techo sparc-sun-sunos${UNAME_RELEASE}\n \t\t;;\n \tesac\n-\texit 0 ;;\n+\texit ;;\n     aushp:SunOS:*:*)\n \techo sparc-auspex-sunos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     # The situation for MiNT is a little confusing.  The machine name\n     # can be virtually everything (everything which is not\n     # \"atarist\" or \"atariste\" at least should have a processor\n@@ -390,37 +371,40 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     # be no problem.\n     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n         echo m68k-atari-mint${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n \techo m68k-atari-mint${UNAME_RELEASE}\n-        exit 0 ;;\n+        exit ;;\n     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n         echo m68k-atari-mint${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n         echo m68k-milan-mint${UNAME_RELEASE}\n-        exit 0 ;;\n+        exit ;;\n     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n         echo m68k-hades-mint${UNAME_RELEASE}\n-        exit 0 ;;\n+        exit ;;\n     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n         echo m68k-unknown-mint${UNAME_RELEASE}\n-        exit 0 ;;\n+        exit ;;\n+    m68k:machten:*:*)\n+\techo m68k-apple-machten${UNAME_RELEASE}\n+\texit ;;\n     powerpc:machten:*:*)\n \techo powerpc-apple-machten${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     RISC*:Mach:*:*)\n \techo mips-dec-mach_bsd4.3\n-\texit 0 ;;\n+\texit ;;\n     RISC*:ULTRIX:*:*)\n \techo mips-dec-ultrix${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     VAX*:ULTRIX*:*:*)\n \techo vax-dec-ultrix${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     2020:CLIX:*:* | 2430:CLIX:*:*)\n \techo clipper-intergraph-clix${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n \teval $set_cc_for_build\n \tsed 's/^\t//' << EOF >$dummy.c\n@@ -444,32 +428,33 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t  exit (-1);\n \t}\n EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c \\\n-\t  && $dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n-\t  && exit 0\n+\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n+\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n+\t    { echo \"$SYSTEM_NAME\"; exit; }\n \techo mips-mips-riscos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     Motorola:PowerMAX_OS:*:*)\n \techo powerpc-motorola-powermax\n-\texit 0 ;;\n+\texit ;;\n     Motorola:*:4.3:PL8-*)\n \techo powerpc-harris-powermax\n-\texit 0 ;;\n+\texit ;;\n     Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n \techo powerpc-harris-powermax\n-\texit 0 ;;\n+\texit ;;\n     Night_Hawk:Power_UNIX:*:*)\n \techo powerpc-harris-powerunix\n-\texit 0 ;;\n+\texit ;;\n     m88k:CX/UX:7*:*)\n \techo m88k-harris-cxux7\n-\texit 0 ;;\n+\texit ;;\n     m88k:*:4*:R4*)\n \techo m88k-motorola-sysv4\n-\texit 0 ;;\n+\texit ;;\n     m88k:*:3*:R3*)\n \techo m88k-motorola-sysv3\n-\texit 0 ;;\n+\texit ;;\n     AViiON:dgux:*:*)\n         # DG/UX returns AViiON for all architectures\n         UNAME_PROCESSOR=`/usr/bin/uname -p`\n@@ -485,37 +470,37 @@ EOF\n \telse\n \t    echo i586-dg-dgux${UNAME_RELEASE}\n \tfi\n- \texit 0 ;;\n+ \texit ;;\n     M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n \techo m88k-dolphin-sysv3\n-\texit 0 ;;\n+\texit ;;\n     M88*:*:R3*:*)\n \t# Delta 88k system running SVR3\n \techo m88k-motorola-sysv3\n-\texit 0 ;;\n+\texit ;;\n     XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n \techo m88k-tektronix-sysv3\n-\texit 0 ;;\n+\texit ;;\n     Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n \techo m68k-tektronix-bsd\n-\texit 0 ;;\n+\texit ;;\n     *:IRIX*:*:*)\n \techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n-\texit 0 ;;\n+\texit ;;\n     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n-\techo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id\n-\texit 0 ;;              # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n+\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n     i*86:AIX:*:*)\n \techo i386-ibm-aix\n-\texit 0 ;;\n+\texit ;;\n     ia64:AIX:*:*)\n \tif [ -x /usr/bin/oslevel ] ; then\n \t\tIBM_REV=`/usr/bin/oslevel`\n \telse\n \t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n \tfi\n \techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n-\texit 0 ;;\n+\texit ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n \t\teval $set_cc_for_build\n@@ -530,14 +515,18 @@ EOF\n \t\t\texit(0);\n \t\t\t}\n EOF\n-\t\t$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0\n-\t\techo rs6000-ibm-aix3.2.5\n+\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n+\t\tthen\n+\t\t\techo \"$SYSTEM_NAME\"\n+\t\telse\n+\t\t\techo rs6000-ibm-aix3.2.5\n+\t\tfi\n \telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n \t\techo rs6000-ibm-aix3.2.4\n \telse\n \t\techo rs6000-ibm-aix3.2\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     *:AIX:*:[45])\n \tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n \tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n@@ -551,28 +540,28 @@ EOF\n \t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n \tfi\n \techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n-\texit 0 ;;\n+\texit ;;\n     *:AIX:*:*)\n \techo rs6000-ibm-aix\n-\texit 0 ;;\n+\texit ;;\n     ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n \techo romp-ibm-bsd4.4\n-\texit 0 ;;\n+\texit ;;\n     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n \techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n-\texit 0 ;;                           # report: romp-ibm BSD 4.3\n+\texit ;;                             # report: romp-ibm BSD 4.3\n     *:BOSX:*:*)\n \techo rs6000-bull-bosx\n-\texit 0 ;;\n+\texit ;;\n     DPX/2?00:B.O.S.:*:*)\n \techo m68k-bull-sysv3\n-\texit 0 ;;\n+\texit ;;\n     9000/[34]??:4.3bsd:1.*:*)\n \techo m68k-hp-bsd\n-\texit 0 ;;\n+\texit ;;\n     hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n \techo m68k-hp-bsd4.4\n-\texit 0 ;;\n+\texit ;;\n     9000/[34678]??:HP-UX:*:*)\n \tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n \tcase \"${UNAME_MACHINE}\" in\n@@ -634,21 +623,31 @@ EOF\n \tesac\n \tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n \tthen\n-\t    # avoid double evaluation of $set_cc_for_build\n-\t    test -n \"$CC_FOR_BUILD\" || eval $set_cc_for_build\n-\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E -) | grep __LP64__ >/dev/null\n+\t    eval $set_cc_for_build\n+\n+\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n+\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n+\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n+\t    #\n+\t    # $ CC_FOR_BUILD=cc ./config.guess\n+\t    # => hppa2.0w-hp-hpux11.23\n+\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n+\t    # => hppa64-hp-hpux11.23\n+\n+\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t\tgrep __LP64__ >/dev/null\n \t    then\n \t\tHP_ARCH=\"hppa2.0w\"\n \t    else\n \t\tHP_ARCH=\"hppa64\"\n \t    fi\n \tfi\n \techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n-\texit 0 ;;\n+\texit ;;\n     ia64:HP-UX:*:*)\n \tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n \techo ia64-hp-hpux${HPUX_REV}\n-\texit 0 ;;\n+\texit ;;\n     3050*:HI-UX:*:*)\n \teval $set_cc_for_build\n \tsed 's/^\t//' << EOF >$dummy.c\n@@ -676,150 +675,166 @@ EOF\n \t  exit (0);\n \t}\n EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0\n+\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n+\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n \techo unknown-hitachi-hiuxwe2\n-\texit 0 ;;\n+\texit ;;\n     9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n \techo hppa1.1-hp-bsd\n-\texit 0 ;;\n+\texit ;;\n     9000/8??:4.3bsd:*:*)\n \techo hppa1.0-hp-bsd\n-\texit 0 ;;\n+\texit ;;\n     *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n \techo hppa1.0-hp-mpeix\n-\texit 0 ;;\n+\texit ;;\n     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n \techo hppa1.1-hp-osf\n-\texit 0 ;;\n+\texit ;;\n     hp8??:OSF1:*:*)\n \techo hppa1.0-hp-osf\n-\texit 0 ;;\n+\texit ;;\n     i*86:OSF1:*:*)\n \tif [ -x /usr/sbin/sysversion ] ; then\n \t    echo ${UNAME_MACHINE}-unknown-osf1mk\n \telse\n \t    echo ${UNAME_MACHINE}-unknown-osf1\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     parisc*:Lites*:*:*)\n \techo hppa1.1-hp-lites\n-\texit 0 ;;\n+\texit ;;\n     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n \techo c1-convex-bsd\n-        exit 0 ;;\n+        exit ;;\n     C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n \tif getsysinfo -f scalar_acc\n \tthen echo c32-convex-bsd\n \telse echo c2-convex-bsd\n \tfi\n-        exit 0 ;;\n+        exit ;;\n     C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n \techo c34-convex-bsd\n-        exit 0 ;;\n+        exit ;;\n     C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n \techo c38-convex-bsd\n-        exit 0 ;;\n+        exit ;;\n     C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n \techo c4-convex-bsd\n-        exit 0 ;;\n+        exit ;;\n     CRAY*Y-MP:*:*:*)\n \techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit 0 ;;\n+\texit ;;\n     CRAY*[A-Z]90:*:*:*)\n \techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n \t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n \t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n \t      -e 's/\\.[^.]*$/.X/'\n-\texit 0 ;;\n+\texit ;;\n     CRAY*TS:*:*:*)\n \techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit 0 ;;\n+\texit ;;\n     CRAY*T3E:*:*:*)\n \techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit 0 ;;\n+\texit ;;\n     CRAY*SV1:*:*:*)\n \techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit 0 ;;\n+\texit ;;\n     *:UNICOS/mp:*:*)\n-\techo nv1-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/' \n-\texit 0 ;;\n+\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n \tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n         FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n         FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n         echo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n-        exit 0 ;;\n+        exit ;;\n+    5000:UNIX_System_V:4.*:*)\n+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+        FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n+        echo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n \techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     sparc*:BSD/OS:*:*)\n \techo sparc-unknown-bsdi${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:BSD/OS:*:*)\n \techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n-\texit 0 ;;\n-    *:FreeBSD:*:*|*:GNU/FreeBSD:*:*)\n-\t# Determine whether the default compiler uses glibc.\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n-\t#include <features.h>\n-\t#if __GLIBC__ >= 2\n-\tLIBC=gnu\n-\t#else\n-\tLIBC=\n-\t#endif\n-EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`\n-\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`${LIBC:+-$LIBC}\n-\texit 0 ;;\n+\texit ;;\n+    *:FreeBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit ;;\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n-\texit 0 ;;\n+\texit ;;\n     i*:MINGW*:*)\n \techo ${UNAME_MACHINE}-pc-mingw32\n-\texit 0 ;;\n+\texit ;;\n+    i*:windows32*:*)\n+    \t# uname -m includes \"-pc\" on this system.\n+    \techo ${UNAME_MACHINE}-mingw32\n+\texit ;;\n     i*:PW*:*)\n \techo ${UNAME_MACHINE}-pc-pw32\n-\texit 0 ;;\n+\texit ;;\n     x86:Interix*:[34]*)\n \techo i586-pc-interix${UNAME_RELEASE}|sed -e 's/\\..*//'\n-\texit 0 ;;\n+\texit ;;\n     [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n \techo i${UNAME_MACHINE}-pc-mks\n-\texit 0 ;;\n+\texit ;;\n     i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n \t# How do we know it's Interix rather than the generic POSIX subsystem?\n \t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n \t# UNAME_MACHINE based on the output of uname instead of i386?\n \techo i586-pc-interix\n-\texit 0 ;;\n+\texit ;;\n     i*:UWIN*:*)\n \techo ${UNAME_MACHINE}-pc-uwin\n-\texit 0 ;;\n+\texit ;;\n+    amd64:CYGWIN*:*:*)\n+\techo x86_64-unknown-cygwin\n+\texit ;;\n     p*:CYGWIN*:*)\n \techo powerpcle-unknown-cygwin\n-\texit 0 ;;\n+\texit ;;\n     prep*:SunOS:5.*:*)\n \techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n+\texit ;;\n     *:GNU:*:*)\n+\t# the GNU system\n \techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n-\texit 0 ;;\n+\texit ;;\n+    *:GNU/*:*:*)\n+\t# other systems with GNU libc and userland\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu\n+\texit ;;\n     i*86:Minix:*:*)\n \techo ${UNAME_MACHINE}-pc-minix\n-\texit 0 ;;\n+\texit ;;\n     arm*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     cris:Linux:*:*)\n \techo cris-axis-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n+    crisv32:Linux:*:*)\n+\techo crisv32-axis-linux-gnu\n+\texit ;;\n+    frv:Linux:*:*)\n+    \techo frv-unknown-linux-gnu\n+\texit ;;\n     ia64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-${VENDOR:-unknown}-linux-gnu\n-\texit 0 ;;\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit ;;\n+    m32r*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\texit ;;\n     m68*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     mips:Linux:*:*)\n \teval $set_cc_for_build\n \tsed 's/^\t//' << EOF >$dummy.c\n@@ -837,7 +852,7 @@ EOF\n \t#endif\n EOF\n \teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`\n-\ttest x\"${CPU}\" != x && echo \"${CPU}-unknown-linux-gnu\" && exit 0\n+\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-gnu\"; exit; }\n \t;;\n     mips64:Linux:*:*)\n \teval $set_cc_for_build\n@@ -856,14 +871,14 @@ EOF\n \t#endif\n EOF\n \teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`\n-\ttest x\"${CPU}\" != x && echo \"${CPU}-unknown-linux-gnu\" && exit 0\n+\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-gnu\"; exit; }\n \t;;\n     ppc:Linux:*:*)\n-\techo powerpc-${VENDOR:-unknown}-linux-gnu\n-\texit 0 ;;\n+\techo powerpc-unknown-linux-gnu\n+\texit ;;\n     ppc64:Linux:*:*)\n-\techo powerpc64-${VENDOR:-unknown}-linux-gnu\n-\texit 0 ;;\n+\techo powerpc64-unknown-linux-gnu\n+\texit ;;\n     alpha:Linux:*:*)\n \tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n \t  EV5)   UNAME_MACHINE=alphaev5 ;;\n@@ -877,33 +892,33 @@ EOF\n \tobjdump --private-headers /bin/sh | grep ld.so.1 >/dev/null\n \tif test \"$?\" = 0 ; then LIBC=\"libc1\" ; else LIBC=\"\" ; fi\n \techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}\n-\texit 0 ;;\n+\texit ;;\n     parisc:Linux:*:* | hppa:Linux:*:*)\n \t# Look for CPU level\n \tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n \t  PA7*) echo hppa1.1-unknown-linux-gnu ;;\n \t  PA8*) echo hppa2.0-unknown-linux-gnu ;;\n \t  *)    echo hppa-unknown-linux-gnu ;;\n \tesac\n-\texit 0 ;;\n+\texit ;;\n     parisc64:Linux:*:* | hppa64:Linux:*:*)\n \techo hppa64-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     s390:Linux:*:* | s390x:Linux:*:*)\n-\techo ${UNAME_MACHINE}-${VENDOR:-ibm}-linux-gnu\n-\texit 0 ;;\n+\techo ${UNAME_MACHINE}-ibm-linux\n+\texit ;;\n     sh64*:Linux:*:*)\n     \techo ${UNAME_MACHINE}-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     sh*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     sparc:Linux:*:* | sparc64:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n-\texit 0 ;;\n+\texit ;;\n     x86_64:Linux:*:*)\n-\techo x86_64-${VENDOR:-unknown}-linux-gnu\n-\texit 0 ;;\n+\techo x86_64-unknown-linux-gnu\n+\texit ;;\n     i*86:Linux:*:*)\n \t# The BFD linker knows what the default object file format is, so\n \t# first see if it will tell us. cd to the root directory to prevent\n@@ -921,15 +936,15 @@ EOF\n \t\t;;\n \t  a.out-i386-linux)\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnuaout\"\n-\t\texit 0 ;;\n+\t\texit ;;\n \t  coff-i386)\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnucoff\"\n-\t\texit 0 ;;\n+\t\texit ;;\n \t  \"\")\n \t\t# Either a pre-BFD a.out linker (linux-gnuoldld) or\n \t\t# one that does not give us useful --help.\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnuoldld\"\n-\t\texit 0 ;;\n+\t\texit ;;\n \tesac\n \t# Determine whether the default compiler is a.out or elf\n \teval $set_cc_for_build\n@@ -952,58 +967,68 @@ EOF\n \tLIBC=gnuaout\n \t#endif\n \t#endif\n+\t#ifdef __dietlibc__\n+\tLIBC=dietlibc\n+\t#endif\n EOF\n \teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`\n-\ttest x\"${LIBC}\" != x && echo \"${UNAME_MACHINE}-${VENDOR:-pc}-linux-${LIBC}\" && exit 0\n-\ttest x\"${TENTATIVE}\" != x && echo \"${TENTATIVE}\" && exit 0\n+\ttest x\"${LIBC}\" != x && {\n+\t\techo \"${UNAME_MACHINE}-pc-linux-${LIBC}\"\n+\t\texit\n+\t}\n+\ttest x\"${TENTATIVE}\" != x && { echo \"${TENTATIVE}\"; exit; }\n \t;;\n     i*86:DYNIX/ptx:4*:*)\n \t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n \t# earlier versions are messed up and put the nodename in both\n \t# sysname and nodename.\n \techo i386-sequent-sysv4\n-\texit 0 ;;\n+\texit ;;\n     i*86:UNIX_SV:4.2MP:2.*)\n         # Unixware is an offshoot of SVR4, but it has its own version\n         # number series starting with 2...\n         # I am not positive that other SVR4 systems won't match this,\n \t# I just have to hope.  -- rms.\n         # Use sysv4.2uw... so that sysv4* matches it.\n \techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n-\texit 0 ;;\n+\texit ;;\n     i*86:OS/2:*:*)\n \t# If we were able to find `uname', then EMX Unix compatibility\n \t# is probably installed.\n \techo ${UNAME_MACHINE}-pc-os2-emx\n-\texit 0 ;;\n+\texit ;;\n     i*86:XTS-300:*:STOP)\n \techo ${UNAME_MACHINE}-unknown-stop\n-\texit 0 ;;\n+\texit ;;\n     i*86:atheos:*:*)\n \techo ${UNAME_MACHINE}-unknown-atheos\n-\texit 0 ;;\n+\texit ;;\n+    i*86:syllable:*:*)\n+\techo ${UNAME_MACHINE}-pc-syllable\n+\texit ;;\n     i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)\n \techo i386-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     i*86:*DOS:*:*)\n \techo ${UNAME_MACHINE}-pc-msdosdjgpp\n-\texit 0 ;;\n+\texit ;;\n     i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n \tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n \tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n \t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n \telse\n \t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n \tfi\n-\texit 0 ;;\n-    i*86:*:5:[78]*)\n+\texit ;;\n+    i*86:*:5:[678]*)\n+    \t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n \tcase `/bin/uname -X | grep \"^Machine\"` in\n \t    *486*)\t     UNAME_MACHINE=i486 ;;\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n \tesac\n \techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n-\texit 0 ;;\n+\texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n \t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n@@ -1021,165 +1046,173 @@ EOF\n \telse\n \t\techo ${UNAME_MACHINE}-pc-sysv32\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     pc:*:*:*)\n \t# Left here for compatibility:\n         # uname -m prints for DJGPP always 'pc', but it prints nothing about\n         # the processor, so we play safe by assuming i386.\n \techo i386-pc-msdosdjgpp\n-        exit 0 ;;\n+        exit ;;\n     Intel:Mach:3*:*)\n \techo i386-pc-mach3\n-\texit 0 ;;\n+\texit ;;\n     paragon:*:*:*)\n \techo i860-intel-osf1\n-\texit 0 ;;\n+\texit ;;\n     i860:*:4.*:*) # i860-SVR4\n \tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n \t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n \telse # Add other i860-SVR4 vendors below as they are discovered.\n \t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     mini*:CTIX:SYS*5:*)\n \t# \"miniframe\"\n \techo m68010-convergent-sysv\n-\texit 0 ;;\n+\texit ;;\n     mc68k:UNIX:SYSTEM5:3.51m)\n \techo m68k-convergent-sysv\n-\texit 0 ;;\n+\texit ;;\n     M680?0:D-NIX:5.3:*)\n \techo m68k-diab-dnix\n-\texit 0 ;;\n-    M68*:*:R3V[567]*:*)\n-\ttest -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;\n-    3[34]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0)\n+\texit ;;\n+    M68*:*:R3V[5678]*:*)\n+\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n \tOS_REL=''\n \ttest -r /etc/.relid \\\n \t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t  && echo i486-ncr-sysv4.3${OS_REL} && exit 0\n+\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;\n+\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n         /bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-          && echo i486-ncr-sysv4 && exit 0 ;;\n+          && { echo i486-ncr-sysv4; exit; } ;;\n     m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n \techo m68k-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     mc68030:UNIX_System_V:4.*:*)\n \techo m68k-atari-sysv4\n-\texit 0 ;;\n+\texit ;;\n     TSUNAMI:LynxOS:2.*:*)\n \techo sparc-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     rs6000:LynxOS:2.*:*)\n \techo rs6000-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.0*:*)\n \techo powerpc-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     SM[BE]S:UNIX_SV:*:*)\n \techo mips-dde-sysv${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     RM*:ReliantUNIX-*:*:*)\n \techo mips-sni-sysv4\n-\texit 0 ;;\n+\texit ;;\n     RM*:SINIX-*:*:*)\n \techo mips-sni-sysv4\n-\texit 0 ;;\n+\texit ;;\n     *:SINIX-*:*:*)\n \tif uname -p 2>/dev/null >/dev/null ; then\n \t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n \t\techo ${UNAME_MACHINE}-sni-sysv4\n \telse\n \t\techo ns32k-sni-sysv\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n                       # says <Richard.M.Bartel@ccMail.Census.GOV>\n         echo i586-unisys-sysv4\n-        exit 0 ;;\n+        exit ;;\n     *:UNIX_System_V:4*:FTX*)\n \t# From Gerald Hewes <hewes@openmarket.com>.\n \t# How about differentiating between stratus architectures? -djm\n \techo hppa1.1-stratus-sysv4\n-\texit 0 ;;\n+\texit ;;\n     *:*:*:FTX*)\n \t# From seanf@swdc.stratus.com.\n \techo i860-stratus-sysv4\n-\texit 0 ;;\n+\texit ;;\n+    i*86:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo ${UNAME_MACHINE}-stratus-vos\n+\texit ;;\n     *:VOS:*:*)\n \t# From Paul.Green@stratus.com.\n \techo hppa1.1-stratus-vos\n-\texit 0 ;;\n+\texit ;;\n     mc68*:A/UX:*:*)\n \techo m68k-apple-aux${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     news*:NEWS-OS:6*:*)\n \techo mips-sony-newsos6\n-\texit 0 ;;\n+\texit ;;\n     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n \tif [ -d /usr/nec ]; then\n \t        echo mips-nec-sysv${UNAME_RELEASE}\n \telse\n \t        echo mips-unknown-sysv${UNAME_RELEASE}\n \tfi\n-        exit 0 ;;\n+        exit ;;\n     BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n \techo powerpc-be-beos\n-\texit 0 ;;\n+\texit ;;\n     BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n \techo powerpc-apple-beos\n-\texit 0 ;;\n+\texit ;;\n     BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n \techo i586-pc-beos\n-\texit 0 ;;\n+\texit ;;\n     SX-4:SUPER-UX:*:*)\n \techo sx4-nec-superux${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     SX-5:SUPER-UX:*:*)\n \techo sx5-nec-superux${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     SX-6:SUPER-UX:*:*)\n \techo sx6-nec-superux${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     Power*:Rhapsody:*:*)\n \techo powerpc-apple-rhapsody${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:Rhapsody:*:*)\n \techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:Darwin:*:*)\n-\tcase `uname -p` in\n+\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n+\tcase $UNAME_PROCESSOR in\n \t    *86) UNAME_PROCESSOR=i686 ;;\n-\t    powerpc) UNAME_PROCESSOR=powerpc ;;\n+\t    unknown) UNAME_PROCESSOR=powerpc ;;\n \tesac\n \techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:procnto*:*:* | *:QNX:[0123456789]*:*)\n \tUNAME_PROCESSOR=`uname -p`\n \tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n \t\tUNAME_PROCESSOR=i386\n \t\tUNAME_MACHINE=pc\n \tfi\n \techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:QNX:*:4*)\n \techo i386-pc-qnx\n-\texit 0 ;;\n-    NSR-[DGKLNPTVW]:NONSTOP_KERNEL:*:*)\n+\texit ;;\n+    NSE-?:NONSTOP_KERNEL:*:*)\n+\techo nse-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSR-?:NONSTOP_KERNEL:*:*)\n \techo nsr-tandem-nsk${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:NonStop-UX:*:*)\n \techo mips-compaq-nonstopux\n-\texit 0 ;;\n+\texit ;;\n     BS2000:POSIX*:*:*)\n \techo bs2000-siemens-sysv\n-\texit 0 ;;\n+\texit ;;\n     DS/*:UNIX_System_V:*:*)\n \techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n     *:Plan9:*:*)\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n@@ -1190,28 +1223,44 @@ EOF\n \t    UNAME_MACHINE=\"$cputype\"\n \tfi\n \techo ${UNAME_MACHINE}-unknown-plan9\n-\texit 0 ;;\n+\texit ;;\n     *:TOPS-10:*:*)\n \techo pdp10-unknown-tops10\n-\texit 0 ;;\n+\texit ;;\n     *:TENEX:*:*)\n \techo pdp10-unknown-tenex\n-\texit 0 ;;\n+\texit ;;\n     KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n \techo pdp10-dec-tops20\n-\texit 0 ;;\n+\texit ;;\n     XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n \techo pdp10-xkl-tops20\n-\texit 0 ;;\n+\texit ;;\n     *:TOPS-20:*:*)\n \techo pdp10-unknown-tops20\n-\texit 0 ;;\n+\texit ;;\n     *:ITS:*:*)\n \techo pdp10-unknown-its\n-\texit 0 ;;\n+\texit ;;\n     SEI:*:*:SEIUX)\n         echo mips-sei-seiux${UNAME_RELEASE}\n-\texit 0 ;;\n+\texit ;;\n+    *:DragonFly:*:*)\n+\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit ;;\n+    *:*VMS:*:*)\n+    \tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    A*) echo alpha-dec-vms ; exit ;;\n+\t    I*) echo ia64-dec-vms ; exit ;;\n+\t    V*) echo vax-dec-vms ; exit ;;\n+\tesac ;;\n+    *:XENIX:*:SysV)\n+\techo i386-pc-xenix\n+\texit ;;\n+    i*86:skyos:*:*)\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n+\texit ;;\n esac\n \n #echo '(No uname command or uname output not recognized.)' 1>&2\n@@ -1243,7 +1292,7 @@ main ()\n #endif\n \n #if defined (__arm) && defined (__acorn) && defined (__unix)\n-  printf (\"arm-acorn-riscix\"); exit (0);\n+  printf (\"arm-acorn-riscix\\n\"); exit (0);\n #endif\n \n #if defined (hp300) && !defined (hpux)\n@@ -1332,11 +1381,12 @@ main ()\n }\n EOF\n \n-$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && $dummy && exit 0\n+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n+\t{ echo \"$SYSTEM_NAME\"; exit; }\n \n # Apollos put the system type in the environment.\n \n-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }\n+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }\n \n # Convex versions that predate uname can use getsysinfo(1)\n \n@@ -1345,22 +1395,22 @@ then\n     case `getsysinfo -f cpu_type` in\n     c1*)\n \techo c1-convex-bsd\n-\texit 0 ;;\n+\texit ;;\n     c2*)\n \tif getsysinfo -f scalar_acc\n \tthen echo c32-convex-bsd\n \telse echo c2-convex-bsd\n \tfi\n-\texit 0 ;;\n+\texit ;;\n     c34*)\n \techo c34-convex-bsd\n-\texit 0 ;;\n+\texit ;;\n     c38*)\n \techo c38-convex-bsd\n-\texit 0 ;;\n+\texit ;;\n     c4*)\n \techo c4-convex-bsd\n-\texit 0 ;;\n+\texit ;;\n     esac\n fi\n \n@@ -1371,7 +1421,9 @@ This script, last modified $timestamp, has failed to recognize\n the operating system you are using. It is advised that you\n download the most up to date version of the config scripts from\n \n-    ftp://ftp.gnu.org/pub/gnu/config/\n+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.guess\n+and\n+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.sub\n \n If the version you run ($0) is already up to date, please\n send the following data and any information you think might be"}, {"sha": "1c366dfde9ab35fe6474af49933455433951457f", "filename": "libjava/classpath/config.sub", "status": "modified", "additions": 132, "deletions": 53, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.sub?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,9 +1,9 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n-timestamp='2003-06-18'\n+timestamp='2005-07-08'\n \n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n@@ -21,14 +21,15 @@ timestamp='2003-06-18'\n #\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n+# 02110-1301, USA.\n+#\n # As a special exception to the GNU General Public License, if you\n # distribute this file as part of a program that contains a\n # configuration script generated by Autoconf, you may include it under\n # the same distribution terms that you use for the rest of that program.\n \n+\n # Please send patches to <config-patches@gnu.org>.  Submit a context\n # diff and a properly formatted ChangeLog entry.\n #\n@@ -70,7 +71,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n@@ -83,11 +84,11 @@ Try \\`$me --help' for more information.\"\n while test $# -gt 0 ; do\n   case $1 in\n     --time-stamp | --time* | -t )\n-       echo \"$timestamp\" ; exit 0 ;;\n+       echo \"$timestamp\" ; exit ;;\n     --version | -v )\n-       echo \"$version\" ; exit 0 ;;\n+       echo \"$version\" ; exit ;;\n     --help | --h* | -h )\n-       echo \"$usage\"; exit 0 ;;\n+       echo \"$usage\"; exit ;;\n     -- )     # Stop option processing\n        shift; break ;;\n     - )\t# Use stdin as input.\n@@ -99,7 +100,7 @@ while test $# -gt 0 ; do\n     *local*)\n        # First pass through any local machine types.\n        echo $1\n-       exit 0;;\n+       exit ;;\n \n     * )\n        break ;;\n@@ -118,7 +119,8 @@ esac\n # Here we must recognize all the valid KERNEL-OS combinations.\n maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n case $maybe_os in\n-  nto-qnx* | linux-gnu* | freebsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)\n+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | \\\n+  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)\n     os=-$maybe_os\n     basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n     ;;\n@@ -144,7 +146,7 @@ case $os in\n \t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n \t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n \t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n-\t-apple | -axis)\n+\t-apple | -axis | -knuth | -cray)\n \t\tos=\n \t\tbasic_machine=$1\n \t\t;;\n@@ -228,14 +230,16 @@ case $basic_machine in\n \t| a29k \\\n \t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n \t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n+\t| am33_2.0 \\\n \t| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr \\\n+\t| bfin \\\n \t| c4x | clipper \\\n \t| d10v | d30v | dlx | dsp16xx \\\n \t| fr30 | frv \\\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| i370 | i860 | i960 | ia64 \\\n-\t| ip2k \\\n-\t| m32r | m68000 | m68k | m88k | mcore \\\n+\t| ip2k | iq2000 \\\n+\t| m32r | m32rle | m68000 | m68k | m88k | maxq | mcore \\\n \t| mips | mipsbe | mipseb | mipsel | mipsle \\\n \t| mips16 \\\n \t| mips64 | mips64el \\\n@@ -244,31 +248,37 @@ case $basic_machine in\n \t| mips64vr4100 | mips64vr4100el \\\n \t| mips64vr4300 | mips64vr4300el \\\n \t| mips64vr5000 | mips64vr5000el \\\n+\t| mips64vr5900 | mips64vr5900el \\\n \t| mipsisa32 | mipsisa32el \\\n \t| mipsisa32r2 | mipsisa32r2el \\\n \t| mipsisa64 | mipsisa64el \\\n+\t| mipsisa64r2 | mipsisa64r2el \\\n \t| mipsisa64sb1 | mipsisa64sb1el \\\n \t| mipsisa64sr71k | mipsisa64sr71kel \\\n \t| mipstx39 | mipstx39el \\\n \t| mn10200 | mn10300 \\\n+\t| ms1 \\\n \t| msp430 \\\n \t| ns16k | ns32k \\\n-\t| openrisc | or32 \\\n+\t| or32 \\\n \t| pdp10 | pdp11 | pj | pjl \\\n \t| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \\\n \t| pyramid \\\n-\t| s390 | s390x \\\n-\t| sh | sh[1234] | sh[23]e | sh[34]eb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc86x | sparclet | sparclite | sparcv8 | sparcv9 | sparcv9b \\\n+\t| sparc | sparc64 | sparc64b | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b \\\n \t| strongarm \\\n \t| tahoe | thumb | tic4x | tic80 | tron \\\n \t| v850 | v850e \\\n \t| we32k \\\n-\t| x86 | xscale | xstormy16 | xtensa \\\n+\t| x86 | xscale | xscalee[bl] | xstormy16 | xtensa \\\n \t| z8k)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n+\tm32c)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n \tm6811 | m68hc11 | m6812 | m68hc12)\n \t\t# Motorola 68HC11/12.\n \t\tbasic_machine=$basic_machine-unknown\n@@ -296,19 +306,19 @@ case $basic_machine in\n \t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \\\n \t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n \t| avr-* \\\n-\t| bs2000-* \\\n+\t| bfin-* | bs2000-* \\\n \t| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \\\n-\t| clipper-* | cydra-* \\\n+\t| clipper-* | craynv-* | cydra-* \\\n \t| d10v-* | d30v-* | dlx-* \\\n \t| elxsi-* \\\n \t| f30[01]-* | f700-* | fr30-* | frv-* | fx80-* \\\n \t| h8300-* | h8500-* \\\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n \t| i*86-* | i860-* | i960-* | ia64-* \\\n-\t| ip2k-* \\\n-\t| m32r-* \\\n+\t| ip2k-* | iq2000-* \\\n+\t| m32r-* | m32rle-* \\\n \t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | mcore-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* \\\n \t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n \t| mips16-* \\\n \t| mips64-* | mips64el-* \\\n@@ -317,34 +327,40 @@ case $basic_machine in\n \t| mips64vr4100-* | mips64vr4100el-* \\\n \t| mips64vr4300-* | mips64vr4300el-* \\\n \t| mips64vr5000-* | mips64vr5000el-* \\\n+\t| mips64vr5900-* | mips64vr5900el-* \\\n \t| mipsisa32-* | mipsisa32el-* \\\n \t| mipsisa32r2-* | mipsisa32r2el-* \\\n \t| mipsisa64-* | mipsisa64el-* \\\n+\t| mipsisa64r2-* | mipsisa64r2el-* \\\n \t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n \t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n \t| mipstx39-* | mipstx39el-* \\\n+\t| mmix-* \\\n+\t| ms1-* \\\n \t| msp430-* \\\n-\t| none-* | np1-* | nv1-* | ns16k-* | ns32k-* \\\n+\t| none-* | np1-* | ns16k-* | ns32k-* \\\n \t| orion-* \\\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \\\n \t| pyramid-* \\\n \t| romp-* | rs6000-* \\\n-\t| s390-* | s390x-* \\\n-\t| sh-* | sh[1234]-* | sh[23]e-* | sh[34]eb-* | shbe-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc86x-* | sparclet-* | sparclite-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc86x-* | sparclet-* \\\n+\t| sparclite-* \\\n \t| sparcv8-* | sparcv9-* | sparcv9b-* | strongarm-* | sv1-* | sx?-* \\\n \t| tahoe-* | thumb-* \\\n \t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n \t| tron-* \\\n \t| v850-* | v850e-* | vax-* \\\n \t| we32k-* \\\n-\t| x86-* | x86_64-* | xps100-* | xscale-* | xstormy16-* \\\n-\t| xtensa-* \\\n+\t| x86-* | x86_64-* | xps100-* | xscale-* | xscalee[bl]-* \\\n+\t| xstormy16-* | xtensa-* \\\n \t| ymp-* \\\n \t| z8k-*)\n \t\t;;\n+\tm32c-*)\n+\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t386bsd)\n@@ -361,6 +377,9 @@ case $basic_machine in\n \t\tbasic_machine=a29k-amd\n \t\tos=-udi\n \t\t;;\n+    \tabacus)\n+\t\tbasic_machine=abacus-unknown\n+\t\t;;\n \tadobe68k)\n \t\tbasic_machine=m68010-adobe\n \t\tos=-scout\n@@ -378,6 +397,9 @@ case $basic_machine in\n \tamd64)\n \t\tbasic_machine=x86_64-pc\n \t\t;;\n+\tamd64-*)\n+\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n \tamdahl)\n \t\tbasic_machine=580-amdahl\n \t\tos=-sysv\n@@ -437,12 +459,27 @@ case $basic_machine in\n \t\tbasic_machine=j90-cray\n \t\tos=-unicos\n \t\t;;\n+\tcraynv)\n+\t\tbasic_machine=craynv-cray\n+\t\tos=-unicosmp\n+\t\t;;\n+\tcr16c)\n+\t\tbasic_machine=cr16c-unknown\n+\t\tos=-elf\n+\t\t;;\n \tcrds | unos)\n \t\tbasic_machine=m68k-crds\n \t\t;;\n+\tcrisv32 | crisv32-* | etraxfs*)\n+\t\tbasic_machine=crisv32-axis\n+\t\t;;\n \tcris | cris-* | etrax*)\n \t\tbasic_machine=cris-axis\n \t\t;;\n+\tcrx)\n+\t\tbasic_machine=crx-unknown\n+\t\tos=-elf\n+\t\t;;\n \tda30 | da30-*)\n \t\tbasic_machine=m68k-da30\n \t\t;;\n@@ -465,6 +502,10 @@ case $basic_machine in\n \t\tbasic_machine=m88k-motorola\n \t\tos=-sysv3\n \t\t;;\n+\tdjgpp)\n+\t\tbasic_machine=i586-pc\n+\t\tos=-msdosdjgpp\n+\t\t;;\n \tdpx20 | dpx20-*)\n \t\tbasic_machine=rs6000-bull\n \t\tos=-bosx\n@@ -643,10 +684,6 @@ case $basic_machine in\n \tmips3*)\n \t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n \t\t;;\n-\tmmix*)\n-\t\tbasic_machine=mmix-knuth\n-\t\tos=-mmixware\n-\t\t;;\n \tmonitor)\n \t\tbasic_machine=m68k-rom68k\n \t\tos=-coff\n@@ -727,20 +764,19 @@ case $basic_machine in\n \tnp1)\n \t\tbasic_machine=np1-gould\n \t\t;;\n-\tnv1)\n-\t\tbasic_machine=nv1-cray\n-\t\tos=-unicosmp\n-\t\t;;\n \tnsr-tandem)\n \t\tbasic_machine=nsr-tandem\n \t\t;;\n \top50n-* | op60c-*)\n \t\tbasic_machine=hppa1.1-oki\n \t\tos=-proelf\n \t\t;;\n-\tor32 | or32-*)\n+\topenrisc | openrisc-*)\n \t\tbasic_machine=or32-unknown\n-\t\tos=-coff\n+\t\t;;\n+\tos400)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-os400\n \t\t;;\n \tOSE68000 | ose68000)\n \t\tbasic_machine=m68000-ericsson\n@@ -833,6 +869,12 @@ case $basic_machine in\n \trtpc | rtpc-*)\n \t\tbasic_machine=romp-ibm\n \t\t;;\n+\ts390 | s390-*)\n+\t\tbasic_machine=s390-ibm\n+\t\t;;\n+\ts390x | s390x-*)\n+\t\tbasic_machine=s390x-ibm\n+\t\t;;\n \tsa29200)\n \t\tbasic_machine=a29k-amd\n \t\tos=-udi\n@@ -956,6 +998,10 @@ case $basic_machine in\n \ttower | tower-32)\n \t\tbasic_machine=m68k-ncr\n \t\t;;\n+\ttpf)\n+\t\tbasic_machine=s390x-ibm\n+\t\tos=-tpf\n+\t\t;;\n \tudi29k)\n \t\tbasic_machine=a29k-amd\n \t\tos=-udi\n@@ -999,6 +1045,10 @@ case $basic_machine in\n \t\tbasic_machine=hppa1.1-winbond\n \t\tos=-proelf\n \t\t;;\n+\txbox)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n \txps | xps100)\n \t\tbasic_machine=xps100-honeywell\n \t\t;;\n@@ -1029,6 +1079,9 @@ case $basic_machine in\n \tromp)\n \t\tbasic_machine=romp-ibm\n \t\t;;\n+\tmmix)\n+\t\tbasic_machine=mmix-knuth\n+\t\t;;\n \trs6000)\n \t\tbasic_machine=rs6000-ibm\n \t\t;;\n@@ -1045,12 +1098,9 @@ case $basic_machine in\n \twe32k)\n \t\tbasic_machine=we32k-att\n \t\t;;\n-\tsh3 | sh4 | sh[34]eb | sh[1234]le | sh[23]ele)\n+\tsh[1234] | sh[24]a | sh[34]eb | sh[1234]le | sh[23]ele)\n \t\tbasic_machine=sh-unknown\n \t\t;;\n-\tsh64)\n-\t\tbasic_machine=sh64-unknown\n-\t\t;;\n \tsparc | sparcv8 | sparcv9 | sparcv9b)\n \t\tbasic_machine=sparc-sun\n \t\t;;\n@@ -1124,19 +1174,21 @@ case $os in\n \t      | -aos* \\\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n-\t      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \\\n-\t      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n+\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* | -openbsd* \\\n+\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n+\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n \t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n \t      | -chorusos* | -chorusrdb* \\\n \t      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n-\t      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \\\n+\t      | -mingw32* | -linux-gnu* | -linux-uclibc* | -uxpv* | -beos* | -mpeix* | -udk* \\\n \t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n \t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n \t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n-\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei*)\n+\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n+\t      | -skyos* | -haiku*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1154,12 +1206,15 @@ case $os in\n \t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n \t\t;;\n \t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n-\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n \t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n \t\t;;\n \t-mac*)\n \t\tos=`echo $os | sed -e 's|mac|macos|'`\n \t\t;;\n+\t-linux-dietlibc)\n+\t\tos=-linux-dietlibc\n+\t\t;;\n \t-linux*)\n \t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n \t\t;;\n@@ -1172,6 +1227,9 @@ case $os in\n \t-opened*)\n \t\tos=-openedition\n \t\t;;\n+        -os400*)\n+\t\tos=-os400\n+\t\t;;\n \t-wince*)\n \t\tos=-wince\n \t\t;;\n@@ -1193,6 +1251,9 @@ case $os in\n \t-atheos*)\n \t\tos=-atheos\n \t\t;;\n+\t-syllable*)\n+\t\tos=-syllable\n+\t\t;;\n \t-386bsd)\n \t\tos=-bsd\n \t\t;;\n@@ -1215,6 +1276,9 @@ case $os in\n \t-sinix*)\n \t\tos=-sysv4\n \t\t;;\n+        -tpf*)\n+\t\tos=-tpf\n+\t\t;;\n \t-triton*)\n \t\tos=-sysv3\n \t\t;;\n@@ -1251,6 +1315,9 @@ case $os in\n \t-kaos*)\n \t\tos=-kaos\n \t\t;;\n+\t-zvmoe)\n+\t\tos=-zvmoe\n+\t\t;;\n \t-none)\n \t\t;;\n \t*)\n@@ -1282,9 +1349,9 @@ case $basic_machine in\n \tarm*-semi)\n \t\tos=-aout\n \t\t;;\n-\tc4x-* | tic4x-*)\n-\t\tos=-coff\n-\t\t;;\n+    c4x-* | tic4x-*)\n+        os=-coff\n+        ;;\n \t# This must come before the *-dec entry.\n \tpdp10-*)\n \t\tos=-tops20\n@@ -1328,9 +1395,15 @@ case $basic_machine in\n \t*-be)\n \t\tos=-beos\n \t\t;;\n+\t*-haiku)\n+\t\tos=-haiku\n+\t\t;;\n \t*-ibm)\n \t\tos=-aix\n \t\t;;\n+    \t*-knuth)\n+\t\tos=-mmixware\n+\t\t;;\n \t*-wec)\n \t\tos=-proelf\n \t\t;;\n@@ -1463,9 +1536,15 @@ case $basic_machine in\n \t\t\t-mvs* | -opened*)\n \t\t\t\tvendor=ibm\n \t\t\t\t;;\n+\t\t\t-os400*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n \t\t\t-ptx*)\n \t\t\t\tvendor=sequent\n \t\t\t\t;;\n+\t\t\t-tpf*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n \t\t\t-vxsim* | -vxworks* | -windiss*)\n \t\t\t\tvendor=wrs\n \t\t\t\t;;\n@@ -1490,7 +1569,7 @@ case $basic_machine in\n esac\n \n echo $basic_machine$os\n-exit 0\n+exit\n \n # Local variables:\n # eval: (add-hook 'write-file-hooks 'time-stamp)"}, {"sha": "203822ddd78d31c8c4106982efc14acac3616fde", "filename": "libjava/classpath/configure", "status": "modified", "additions": 1943, "deletions": 1230, "changes": 3173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d13526b5b9b081a061864ad6d63f21d296909dae", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 130, "deletions": 37, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.18],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.20-pre],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n AC_CANONICAL_TARGET\n@@ -65,15 +65,15 @@ AC_ARG_ENABLE([core-jni],\n               [COMPILE_CORE_JNI=yes])\n AM_CONDITIONAL(CREATE_CORE_JNI_LIBRARIES, test \"x${COMPILE_CORE_JNI}\" = xyes)\n \n-dnl -----------------------------------------------------------\n-dnl Whether to compile with -Werror or not (enabled by default)\n-dnl -----------------------------------------------------------\n+dnl ------------------------------------------------------------\n+dnl Whether to compile with -Werror or not (disabled by default)\n+dnl ------------------------------------------------------------\n AC_ARG_ENABLE([Werror],\n-              [AS_HELP_STRING(--disable-Werror,whether to compile C code with -Werror which turns any compiler warning into a compilation failure [default=no])],\n+              [AS_HELP_STRING(--enable-Werror,whether to compile C code with -Werror which turns any compiler warning into a compilation failure [default=no])],\n               [case \"${enableval}\" in\n                 yes) ENABLE_WERROR=yes ;;\n                 no) ENABLE_WERROR=no ;;\n-                *) ENABLE_WERROR=yes ;;\n+                *) ENABLE_WERROR=no ;;\n               esac],\n               [ENABLE_WERROR=no])\n \n@@ -102,6 +102,32 @@ AC_ARG_ENABLE([xmlj],\n               [COMPILE_XMLJ=no])\n AM_CONDITIONAL(CREATE_XMLJ_LIBRARY, test \"x${COMPILE_XMLJ}\" = xyes)\n \n+dnl -----------------------------------------------------------\n+dnl ALSA code (enabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([alsa],\n+              [AS_HELP_STRING(--disable-alsa,compile ALSA providers (enable by --enable-alsa) [default=yes])],\n+              [case \"${enableval}\" in\n+                yes) COMPILE_ALSA=yes ;;\n+                no) COMPILE_ALSA=no ;;\n+                *) COMPILE_ALSA=yes ;;\n+              esac],\n+\t      [AC_CHECK_HEADERS([alsa/asoundlib.h],COMPILE_ALSA=yes,COMPILE_ALSA=no)])\n+AM_CONDITIONAL(CREATE_ALSA_LIBRARIES, test \"x${COMPILE_ALSA}\" = xyes)\n+\n+dnl -----------------------------------------------------------\n+dnl DSSI code (enabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([dssi],\n+              [AS_HELP_STRING(--disable-dssi,compile DSSI providers (enable by --enable-dssi) [default=yes])],\n+              [case \"${enableval}\" in\n+                yes) COMPILE_DSSI=yes ;;\n+                no) COMPILE_DSSI=no ;;\n+                *) COMPILE_DSSI=yes ;;\n+              esac],\n+              [AC_CHECK_HEADERS([dssi.h],COMPILE_DSSI=yes,COMPILE_DSSI=no)])\n+AM_CONDITIONAL(CREATE_DSSI_LIBRARIES, test \"x${COMPILE_DSSI}\" = xyes)\n+\n dnl -----------------------------------------------------------\n dnl GTK native peer (enabled by default)\n dnl -----------------------------------------------------------\n@@ -150,6 +176,35 @@ AC_ARG_ENABLE([qt-peer],\n               [COMPILE_QT_PEER=no])\n AM_CONDITIONAL(CREATE_QT_PEER_LIBRARIES, test \"x${COMPILE_QT_PEER}\" = xyes)\n \n+\n+dnl -----------------------------------------------------------\n+dnl Sets the native libraries installation dir\n+dnl -----------------------------------------------------------\n+AC_ARG_WITH([native-libdir],\n+\t    [AS_HELP_STRING(--with-native-libdir,sets the installation directore for native libraries [default='${libdir}/${PACKAGE}'])],\n+\t    [\n+\t     nativelibdir=${withval}\n+\t    ],\n+\t    [\n+\t     nativelibdir='${libdir}/${PACKAGE}'\n+\t    ])\n+\n+AC_SUBST(nativelibdir)\n+\n+dnl -----------------------------------------------------------\n+dnl Sets the Java library installation dir.\n+dnl -----------------------------------------------------------\n+AC_ARG_WITH([glibj-dir],\n+\t    [AS_HELP_STRING(--with-glibj-dir,sets the installation directory for glibj.zip [default='${libdir}/${PACKAGE}'])],\n+\t    [\n+\t     glibjdir=${withval}\n+\t    ],\n+\t    [\n+\t     glibjdir='${datadir}/${PACKAGE}'\n+\t    ])\n+\n+AC_SUBST(glibjdir)\n+\n dnl -----------------------------------------------------------\n dnl Regenerate headers at build time (disabled by default)\n dnl -----------------------------------------------------------\n@@ -246,6 +301,7 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n           [AC_MSG_RESULT(no)])])])\n \n   AC_C_CONST\n+  AC_C_ATTRIBUTE\n \n   dnl See if we HAVE_ICONV, how ICONV_CONST is set and LTLIBICONV\n   AM_ICONV\n@@ -286,45 +342,78 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \n   dnl Check for AWT related gthread/gtk\n   if test \"x${COMPILE_GTK_PEER}\" = xyes; then\n-     AC_PATH_XTRA\n-     if test \"$no_x\" = yes; then\n-         AC_MSG_ERROR([GTK+ peers requested but no X library available])\n-     fi\n-     dnl We explicitly want the XTest Extension for Robot support.\n-     AC_CHECK_LIB([Xtst], [XTestQueryExtension], [true],\n-\t\t  [AC_MSG_ERROR([libXtst NOT found, required for GdkRobot])],\n-\t\t  [${X_LIBS}])\n-     PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.4 gthread-2.0 >= 2.2 gdk-pixbuf-2.0)\n-     AC_SUBST(GTK_CFLAGS)\n-     AC_SUBST(GTK_LIBS)\n+    AC_PATH_XTRA\n+    if test \"$no_x\" = yes; then\n+        AC_MSG_ERROR([GTK+ peers requested but no X library available])\n+    fi\n+    dnl We explicitly want the XTest Extension for Robot support.\n+    AC_CHECK_LIB([Xtst], [XTestQueryExtension], [true],\n+       \t  [AC_MSG_ERROR([libXtst NOT found, required for GdkRobot])],\n+       \t  [${X_LIBS}])\n+    PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.4 gthread-2.0 >= 2.2 gdk-pixbuf-2.0)\n+\n+    if test \"x${enable_gtk_cairo}\" = xyes; then\n+      PKG_CHECK_MODULES(CAIRO, cairo >= 0.5.0)\n+    fi\n+\n+    PKG_CHECK_MODULES(PANGOFT2, pangoft2)\n+  \n+    AC_SUBST(GTK_CFLAGS)\n+    AC_SUBST(GTK_LIBS)\n+    AC_SUBST(CAIRO_LIBS)\n+    AC_SUBST(CAIRO_CFLAGS)\n+    AC_SUBST(PANGOFT2_LIBS)\n+    AC_SUBST(PANGOFT2_CFLAGS)\n   fi\n \n   dnl Check for AWT related Qt4\n   if test \"x${COMPILE_QT_PEER}\" = xyes; then\n-    PKG_CHECK_MODULES(QT, QtGui >= 4.0.1)\n-    dnl Check needed because in some cases the QtGui includedir\n-    dnl doesn't contain the subsystem dir.\n-    QT_INCLUDE_DIR=$($PKG_CONFIG --variable=includedir QtGui)\n-    EXTRA_QT_INCLUDE_DIR=\"$QT_INCLUDE_DIR/Qt\"\n-    AC_CHECK_FILE([$QT_INCLUDE_DIR/QWidget],\n-\t\t  AC_MSG_NOTICE([No extra QT_INCLUDE_DIR needed]),\n-\t\t  AC_CHECK_FILE([$EXTRA_QT_INCLUDE_DIR/QWidget],\n-\t\t  \tQT_CFLAGS=\"$QT_CFLAGS -I$EXTRA_QT_INCLUDE_DIR\",\n-\t\t\tAC_MSG_WARN([QWidget not found])))\n+    PKG_CHECK_MODULES(QT, QtGui >= 4.0.1, HAVE_QT4=\"yes\", HAVE_QT4=\"no\")\n+    if test \"x$HAVE_QT4\" = \"xyes\"; then\n+      dnl Check needed because in some cases the QtGui includedir\n+      dnl doesn't contain the subsystem dir.\n+      QT_INCLUDE_DIR=$($PKG_CONFIG --variable=includedir QtGui)\n+      EXTRA_QT_INCLUDE_DIR=\"$QT_INCLUDE_DIR/Qt\"\n+      AC_CHECK_FILE([$QT_INCLUDE_DIR/QWidget],\n+      AC_MSG_NOTICE([No extra QT_INCLUDE_DIR needed]),\n+      AC_CHECK_FILE([$EXTRA_QT_INCLUDE_DIR/QWidget],\n+\tQT_CFLAGS=\"$QT_CFLAGS -I$EXTRA_QT_INCLUDE_DIR\",\n+\tAC_MSG_WARN([QWidget not found])))\n+\tAC_CHECK_PROG(MOC, [moc], [moc])\n+    fi\n+    if test \"x$HAVE_QT4\" = \"xno\"; then\n+      AC_MSG_NOTICE([Looking for QT_CFLAGS and QT_LIBS without pkg-config])\n+      case \"$host_os\" in\n+  \tdarwin*)\n+  \t  AC_ARG_WITH([qt4dir],\n+  \t    [AS_HELP_STRING([--with-qt4dir=DIR],\n+  \t    [Qt4 installation directory used for OS-X.\n+  \t    For other systems use pkg-config.])],\n+  \t    [QT4DIR=$withval]\n+  \t    )\n+  \t  if test x\"$QT4DIR\" = x ; then\n+  \t    AC_MSG_ERROR([*** No path for Qt4 --with-qt4dir option given])\n+  \t  fi\n+  \t  AC_MSG_RESULT([QT4DIR... $QT4DIR])\n+  \t  AC_CHECK_PROG(MOC, [moc], [$QT4DIR/bin/moc], [], $QT4DIR/bin)\n+  \t  if test x\"$MOC\" = x; then\n+  \t    AC_MSG_ERROR([*** This is not the right Qt installation])\n+  \t  fi\n+  \t  QT_CFLAGS=\"-F$QT4DIR/lib -I$QT4DIR/lib/QtCore.framework/Headers\"\n+  \t  QT_CFLAGS=\"$QT_CFLAGS -I$QT4DIR/lib/QtGui.framework/Headers\"\n+  \t  QT_LIBS=\"-Xlinker -F$QT4DIR/lib -Xlinker -framework -Xlinker QtCore\"\n+  \t  QT_LIBS=\"$QT_LIBS -Xlinker -framework -Xlinker QtGui\"\n+  \t  ;;\n+  \t*)\n+  \t  AC_MSG_ERROR([*** Please check PKG_CONFIG_PATH or the version\n+  \t  of your installed Qt4 installation.])\n+  \t  ;;\n+      esac\n+    fi\n     AC_MSG_NOTICE([Set QT_CFLAGS... $QT_CFLAGS])\n-    AC_CHECK_PROG(MOC, [moc], [moc])\n     AC_SUBST(QT_CFLAGS)\n     AC_SUBST(QT_LIBS)\n   fi\n-\n-  if test \"x${enable_gtk_cairo}\" = xyes; then\n-    PKG_CHECK_MODULES(CAIRO, cairo >= 0.5.0)\n-    PKG_CHECK_MODULES(PANGOFT2, pangoft2)\n-  fi\n-  AC_SUBST(CAIRO_LIBS)\n-  AC_SUBST(CAIRO_CFLAGS)\n-  AC_SUBST(PANGOFT2_LIBS)\n-  AC_SUBST(PANGOFT2_CFLAGS)\n fi\n \n CLASSPATH_WITH_JAVAH\n@@ -493,6 +582,8 @@ native/jni/java-util/Makefile\n native/jni/gtk-peer/Makefile\n native/jni/qt-peer/Makefile\n native/jni/xmlj/Makefile\n+native/jni/midi-alsa/Makefile\n+native/jni/midi-dssi/Makefile\n native/target/Makefile\n native/target/Linux/Makefile\n native/target/generic/Makefile\n@@ -501,7 +592,9 @@ scripts/Makefile\n scripts/classpath.spec\n lib/Makefile\n lib/gen-classlist.sh\n+lib/copy-vmresources.sh\n examples/Makefile\n examples/Makefile.jawt])\n AC_CONFIG_COMMANDS([gen-classlist],[chmod 755 lib/gen-classlist.sh])\n+AC_CONFIG_COMMANDS([copy-vmresources],[chmod 755 lib/copy-vmresources.sh])\n AC_OUTPUT"}, {"sha": "34bdbb19c164375419ea88db96e76f4ea96d1b19", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,10 +39,8 @@ target_triplet = @target@\n subdir = doc\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in texinfo.tex\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -84,10 +82,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -224,6 +226,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -237,6 +240,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "dafdd41f5b516e545d47edc33f3c14ac0f07b3b3", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -40,10 +40,8 @@ target_triplet = @target@\n subdir = doc/api\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -77,10 +75,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -217,6 +219,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -230,6 +233,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "2f95d58b3b9138a5d83a7649b6501fe3fa74cc1d", "filename": "libjava/classpath/doc/www.gnu.org/announce/20050906.wml", "status": "added", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20050906.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20050906.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20050906.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,221 @@\n+#!wml --include=..\n+\n+#use wml::std::page\n+#use wml::std::lang\n+#use wml::fmt::isolatin\n+#use wml::std::case global=upper\n+\n+<lang:star:slice:>\n+\n+<set-var last-modified-author=\"mjw\">\n+\n+#include <include/macros.wml>\n+\n+<header title=\"GNU Classpath 0.18 Announcement (2005-09-06)\"> \n+<pre>\n+GNU Classpath 0.18 released.\n+\n+We are pleased to announce a new developer snapshot of GNU Classpath.\n+\n+GNU Classpath, essential libraries for java, is a project to create free\n+core class libraries for use with runtimes, compilers and tools for the\n+java programming language.\n+\n+The GNU Classpath developer snapshot releases are not directly aimed\n+at the end user but are meant to be integrated into larger development\n+platforms. For example the GCC (gcj) and Kaffe projects will use the\n+developer snapshots as a base for future versions.\n+\n+This is our first release after \"The Big Merge\" with GCC/GCJ.  GNU\n+Classpath can now be used as a subdirectory of libgcj inside the GCC\n+tree so it will be much easier to keep GCC up-to-date with the latest\n+GNU Classpath developer release snapshots.\n+\n+Some highlights of changes in this release (more extensive list below):\n+\n+  Added GNU JAWT for awt native interface support. Datatransfer\n+  clipboard updated to 1.5 including support for copy/paste of\n+  serialized objects, images and files.  Completed the org.omg\n+  PortableInterceptor, DynamicAny and Portable Object Adapter\n+  packages. Multi plaf support for Free Swing. Editing support for\n+  JTree and JTable. Lots of icons and look and feel improvements for\n+  Free Swing basic and metal themes. NIO FileChannel.map implemented\n+  and DirectByteBuffer put method speedups. Image loading speedups for\n+  awt. Support for darwin and solaris out of the box.\n+\n+29 people actively contributed to this release and made 535 CVS\n+commits during the two months of development. diffstat since 0.17:\n+ 994 files changed, 114744 insertions(+), 13663 deletions(-)\n+\n+More details about the various changes and contributions below.\n+\n+A full list of bug reports fixed for this release can be found at:\n+http://gcc.gnu.org/bugzilla/buglist.cgi?product=classpath&target_milestone=0.18\n+\n+This release depends on gtk+ 2.4 for AWT support. But gtk+ 2.6 or\n+higher is recommended. Included, but not activated by default in this\n+release is a Graphics2D implementation based on the Cairo Graphics\n+framework (http://www.cairographics.org). Enabling this makes programs\n+like JFreeChart and JEdit start up on GNU Classpath based runtimes.\n+To enable this support install the cairo 0.5.x snapshot, configure GNU\n+Classpath with --enable-gtk-cairo.\n+\n+One of the major focuses of the GNU Classpath project is expanding\n+and using the Mauve test suite for Compatibility, Completeness and\n+Correctness checking.  Various groups around GNU Classpath collaborate\n+on the free software Mauve test suite which contains 32.000+ core\n+library tests.  Mauve has various modules for testing core class\n+library implementations, byte code verifiers, source to byte code and\n+native code compiler tests.  Mauve also contains the Wonka visual test\n+suite and the Jacks Compiler Killer Suite.\n+See for more information: http://www.sourceware.org/mauve/\n+This release passes 31194 out of 32253 Mauve core library tests.\n+\n+Conformance reports for the included jaxp support can be found in the\n+doc/README.jaxp file.\n+\n+GNU Classpath 0.18 can be downloaded from\n+ftp://ftp.gnu.org/pub/gnu/classpath/\n+or one of the ftp.gnu.org mirrors\n+http://www.gnu.org/order/ftp.html\n+\n+File: classpath-0.18.tar.gz\n+MD5sum: c0650c257aa93eafb709553f172f0bbb\n+SHA1sum: 28061c750244cac4ff0151da6aba183b94b98b25\n+\n+The GNU Classpath developers site http://developer.classpath.org/\n+provides detailed information on how to start with helping the GNU\n+Classpath project and gives an overview of the core class library\n+packages currently provided.  For each snapshot release generated\n+documentation is provided through the GNU Classpath Tools gjdoc\n+project.  A documentation generation framework for java source\n+files used by the GNU project. Full documentation on the currently\n+implementated packages and classes can be found at:\n+http://developer.classpath.org/doc/\n+\n+New in release 0.18 (Sep 6, 2005)\n+(See the ChangeLog file for a full list of changes.)\n+\n+* GNU JAWT implementation, the AWT Native Interface, which allows\n+  direct access to native screen resources from within a Canvas's\n+  paint method.  GNU Classpath Examples comes with a Demo, see\n+  examples/README.\n+* awt.datatransfer updated to 1.5 with supports for FlavorEvents.\n+  The gtk+ awt peers now allow copy/paste of text, images, uris/files\n+  and serialized objects with other applications and tracking\n+  clipboard change events with gtk+ 2.6 (for gtk+ 2.4 only text and\n+  serialized objects are supported). A GNU Classpath Examples\n+  datatransfer Demo was added to show the new functionality.\n+* org.omg.PortableInterceptor and related functionality in other\n+  packages is now implemented:\n+    - The sever and client interceptors work as required since 1.4.\n+    - The IOR interceptor works as needed for 1.5.\n+* The org.omg.DynamicAny package is completed and passes the prepared\n+  tests.\n+* The Portable Object Adapter should now support the output of the\n+  recent IDL to java compilers. These compilers now generate servants and \n+  not CORBA objects as before, making the output depended on the existing \n+  POA implementation. Completing POA means that such code can already be \n+  tried to run on Classpath. Our POA is tested for the following usager\n+  scenarios:\n+    - POA converts servant to the CORBA object.\n+    - Servant provides to the CORBA object.\n+    - POA activates new CORBA object with the given Object Id\n+      (byte array) that is later accessible for the servant.\n+    - During the first call, the ServantActivator provides servant for\n+      this and all subsequent calls on the current object.\n+    - During each call, the ServantLocator provides servant for this call\n+      only.\n+    - ServantLocator or ServantActivator forwards call to another server.\n+    - POA has a single servant, responsible for all objects.\n+    - POA has a default servant, but some objects are explicitly\n+      connected to they specific servants.\n+  The POA is verified using tests from the former cost.omg.org.      \n+* The javax.swing.plaf.multi.* package is now implemented.\n+* Editing and several key actions for JTree and JTable were implemented.\n+* Lots of icons and look and feel improvements for Free Swing basic\n+  and metal themes were added.  Try running the GNU Classpath Swing\n+  Demo in examples (gnu.classpath.examples.swing.Demo) with:\n+  -Dswing.defaultlaf=javax.swing.plaf.basic.BasicLookAndFeel\n+  -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel\n+* Start of styled text capabilites for java.swing.text.\n+* NIO FileChannel.map implementation, fast bulk put implementation for\n+  DirectByteBuffer (speeds up this method 10x).\n+* Split gtk+ awt peers event handling in two threads and improve gdk\n+  lock handling (solves several AWT lock ups).\n+* Speed up awt Image loading.\n+* Updated TimeZone data against Olson tzdata2005l.\n+* Make zip and jar UTF-8 \"clean\".\n+* \"native\" code builds and compiles (warning free) on Darwin and\n+  Solaris.\n+\n+Runtime interface changes:\n+\n+* All native resource \"pointers\" in the VM interface classes are now\n+  exposed as gnu.classpath.Pointer objects. This might impact runtimes\n+  that optimize and support java.nio.DirectByteBuffers. Creating these\n+  classes and accessing the contents as void * pointers for the native\n+  reference JNI implementation is done through the\n+  JCL_NewRawDataObject and JCL_GetRawData functions.\n+* Simplified the Class/VMClass interface.\n+* Removed loadedClasses map from ClassLoader. It's now the VMs\n+  responsibility to manage the list of defined and loaded classes for\n+  each class loader.\n+* Moved native methods from java.lang.reflect.Proxy to VMProxy.\n+* Added hook to VMClassLoader to allow VM to do class caching.\n+\n+New Untested/Disabled Features:\n+\n+  The following new features are included, but not ready for\n+  production yet. They are explicitly disabled and not supported. But\n+  if you want to help with the development of these new features we\n+  are interested in feedback. You will have to explicitly enable them\n+  to try them out (and they will most likely contain bugs). If you are\n+  interested in any of these then please join the mailing-list and\n+  follow development in CVS.\n+\n+* QT4 AWT peers, enable by giving configure --enable-qt-peer.\n+* JDWP framework, enable by deleting the jdwp references from\n+  lib/standard.omit and vm/reference/standard.omit. No default\n+  implementation is provided. Work is being done on gcj/gij\n+  integration.\n+* StAX java.xml.stream, enable by deleting the gnu.xml.stream and\n+  java.xml.stream references in lib/standard.omit.\n+\n+The following people helped with this release:\n+\n+Aaron Luchko (Lots of JDWP work)\n+Andreas Tobler (Darwin and Solaris testing and fixing\n+Andrew Haley (gcj build speedups)\n+Anthony Balkissoon (Lots of Free Swing work including JTable editing)\n+Archie Cobbs (Build fixes)\n+Audrius Meskauskas (Lots of omg corba work plus testing and documenting)\n+Bastiaan Huisman (TimeZone bug fixing)\n+Casey Marshall (NIO FileChannel.map support, security and policy updates)\n+Chris Burdess (StAX work and gnu xml fixes)\n+Christian Schlichtherle (Zip fixes and cleanups)\n+Christian Thalinger (64-bit cleanups)\n+Dalibor Topic (Qt4 build infrastructure)\n+David Gilbert (Basic and Metal icon and plaf and lots of documenting)\n+Guilhem Lavaux (JCL native Pointer updates)\n+Ingo Proetel (Image, Logger and URLClassLoader updates)\n+Ito Kazumitsu (NetworkInterfaces implementation and updates)\n+Jan Roehrich (BasicTreeUI updates)\n+Jeroen Frijters (VMProxy and VMClassLoader updates, RMIClassLoader fixes)\n+Keith Seitz (Lots of JDWP work)\n+Kelley Cook (Build fixes)\n+Lillian Angel (Lots of Free Swing work including JTree editing)\n+Mark Wielaard (Clipboard implementation, build and release infrastructure)\n+Rainer Orth (Build fixes)\n+Robert Schuster (Documentation updates and beans fixes)\n+Roman Kennke (Lots of Free Swing work including styled text)\n+Sven de Marothy (Qt4 peers)\n+Thomas Fitzsimmons (Lots of gtk+ awt peer work)\n+Tom Tromey (Lots of fixes including coordinating The Big Merge)\n+Wolfgang Baer (GapContent bug fixes)\n+\n+We would also like to thank the numerous bug reporters and testers!\n+\n+</pre>\n+\n+<footer>"}, {"sha": "e39a4eaa5c5f730d71ab5c12bb78f9c2cd8eae0e", "filename": "libjava/classpath/doc/www.gnu.org/announce/20051102.wml", "status": "added", "additions": 247, "deletions": 0, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20051102.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20051102.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20051102.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,247 @@\n+#!wml --include=..\n+\n+#use wml::std::page\n+#use wml::std::lang\n+#use wml::fmt::isolatin\n+#use wml::std::case global=upper\n+\n+<lang:star:slice:>\n+\n+<set-var last-modified-author=\"mjw\">\n+\n+#include <include/macros.wml>\n+\n+<header title=\"GNU Classpath 0.19 Announcement (2005-11-02)\"> \n+<pre>\n+GNU Classpath \"95% and counting\" 0.19 released\n+\n+GNU Classpath, essential libraries for java, is a project to create\n+free core class libraries for use with runtimes, compilers and tools\n+for the java programming language.\n+\n+The GNU Classpath developer snapshot releases are not directly aimed\n+at the end user but are meant to be integrated into larger development\n+platforms. For example the GCC (gcj) and Kaffe projects will use the\n+developer snapshots as a base for future versions.\n+\n+Some highlights of changes in this release (more extensive list below):\n+\n+  Much more efficient painting for large Free Swing GUIs. Improved\n+  accessibility support. HttpURLConnection rewrite. Official CORBA\n+  VMCID assigned. Start of RMI over IIOP support. Qt4 support for\n+  OS-X. Much improved Free Swing Metal theme. Free Swing Demo includes\n+  theme switcher example (Metal, Ocean, GNU). JBoss now starts up and\n+  Jonas testsuite passes for 95%. Support for the javax.sound.midi\n+  framework and experimental DSSI and ALSA service providers. Early\n+  version of the popular StAX API. Now has 96% coverage of 1.4 API.\n+\n+This is the first time we also have a pre-release of our 1.5 generics\n+work. classpath-0.19-generics contains a version of the core library\n+that uses the new 1.5 language features such as generics and\n+enumerations. ECJ and JamVM are known to support the generics release\n+out of the box. And you should be able to run Eclipse 3.1 with it to\n+develop programs that use the new 1.5 language and core library\n+additions. classpath-generics is a work in progress and not as\n+extensively tested as our regular releases. But please try it out if\n+you want to help us test the new 1.5 support of the core libraries.\n+\n+For this release we setup a Free Swing Test Application page\n+http://developer.classpath.org/mediation/FreeSwingTestApps\n+Please see that page for showcases of applications that work with this\n+release and to help test other applications.\n+\n+It is also the first release that has GNU Classpath promotion banners.\n+http://developer.classpath.org/mediation/ClasspathBanners\n+Please feel free to add them to your project pages if your project is\n+known to work with GNU Classpath or just to promote the project.\n+\n+32 people actively contributed to this release and made\n+787 CVS commits during the last two months of development\n+(excluding the generics branch work). diffstat since 0.18:\n+ 1158 files changed, 93916 insertions(+), 36407 deletions(-)\n+\n+More details about the various changes and contributions below.\n+\n+A full list of bug reports fixed for this release can be found at:\n+http://gcc.gnu.org/bugzilla/buglist.cgi?product=classpath&target_milestone=0.19\n+\n+This release depends on gtk+ 2.4 for AWT support. But gtk+ 2.6 or\n+higher is recommended. Included, but not activated by default in this\n+release is a Graphics2D implementation based on the Cairo Graphics\n+framework (http://www.cairographics.org). Enabling this makes programs\n+like JFreeChart and JEdit start up on GNU Classpath based runtimes.\n+To enable this support install the cairo 0.5.x snapshot, configure GNU\n+Classpath with --enable-gtk-cairo.\n+\n+One of the major focuses of the GNU Classpath project is expanding and\n+using the Mauve test suite for Compatibility, Completeness and\n+Correctness checking.  Various groups around GNU Classpath collaborate\n+on the free software Mauve test suite which contains around 34.000\n+core library tests.  Mauve has various modules for testing core class\n+library implementations, byte code verifiers, source to byte code and\n+native code compiler tests.  Mauve also contains the Wonka visual test\n+suite and the Jacks Compiler Killer Suite.\n+See for more information: http://www.sourceware.org/mauve/\n+This release passes 33.381 out of 34.262 Mauve core library tests.\n+\n+Conformance reports for the included jaxp support can be found in the\n+doc/README.jaxp file.\n+\n+GNU Classpath 0.19 can be downloaded from\n+ftp://ftp.gnu.org/pub/gnu/classpath/\n+or one of the ftp.gnu.org mirrors\n+http://www.gnu.org/order/ftp.html\n+\n+File: classpath-0.19.tar.gz\n+MD5sum: 0b93b1c1dd3d33ef7fb6a47dbb29e41d\n+SHA1sum: 43d499e8b83e04a7fc4a1d4d301638c5cec6c679\n+\n+File: classpath-0.19-generics.tar.gz (EXPERIMENTAL)\n+MD5sum: 4c0ccc91a147af4010d19f48dbf441b3\n+SHA1sum: b2a2b968523b3af35cd7e44bcc4f940621b3ca66\n+\n+The GNU Classpath developers site http://developer.classpath.org/\n+provides detailed information on how to start with helping the GNU\n+Classpath project and gives an overview of the core class library\n+packages currently provided.  For each snapshot release generated\n+documentation is provided through the GNU Classpath Tools gjdoc\n+project.  A documentation generation framework for java source\n+files used by the GNU project. Full documentation on the currently\n+implementated packages and classes can be found at:\n+http://developer.classpath.org/doc/\n+\n+New in release 0.19 (Nov 2, 2005)\n+(See the ChangeLog file for a full list of changes.)\n+\n+* The Swing RepaintManager has been reworked for more efficient\n+  painting, especially for large GUIs.\n+\n+* The Swing layout manager OverlayLayout has been implemented, the\n+  BoxLayout has been rewritten to make use of the SizeRequirements\n+  utility class and caching for more efficient layout.\n+\n+* Improved accessibility support for Swing.\n+\n+* The java.net.HttpURLConnection implementation no longer buffers the\n+  entire response body in memory.  This means that response bodies\n+  larger than available memory can now be handled.\n+\n+* The Andrew Watson, Vice President and Technical Director of the\n+  Object Management Group, has officially assigned us 20 bit Vendor\n+  Minor Code Id: 0x47430 (\"GC\") that will mark remote Classpath -\n+  specific system exceptions.  Obtaining the VMCID means that GNU\n+  Classpath now is a recogniseable type of node in a highly\n+  interoperable CORBA world.\n+\n+* Classpath now includes the first working draft to support the RMI\n+  over IIOP protocol. The current implementation is capable for remote\n+  invocations, transferring various Serializables and Externalizables\n+  via RMI-IIOP protocol.  It can flatten graphs and, at least for the\n+  simple cases, is interoperable with Sun's jdk 1.5.\n+\n+* Qt4 configury switches for OS-X. Additional to the --enable-qt-peer,\n+  OS-X users with a Qt4 installation can build the qt-peers with the\n+  argument --with-qt4dir=<Qt4-installation-dir>.\n+\n+* Significant progress has been made in the implementation of the\n+  javax.swing.plaf.metal.* package, with most UI delegates in a\n+  working state now.  Please test this with your own applications and\n+  provide feedback that will help us to improve this package.\n+\n+* The GUI demo (gnu.classpath.examples.swing.Demo) has been extended\n+  to highlight various features in our free-swing implementation. And\n+  includes a look and feel switcher (Metal default, Ocean or GNU).\n+\n+Runtime interface changes:\n+\n+* Changed implementation of VMClassLoader.getPackage(s) : new method\n+  VMClassLoader.getBootPackages should be implemented by the vm, and\n+  sould return a string array of boot package names (\"java.lang\",\n+  \"java.net\", ...).  Feedback from vm implementors for usability and\n+  relevance of the getBootPackages method would be greatly\n+  appreciated.\n+\n+New Untested/Disabled Features:\n+\n+  The following new features are included, but not ready for\n+  production yet. They are explicitly disabled and not supported. But\n+  if you want to help with the development of these new features we\n+  are interested in feedback. You will have to explicitly enable them\n+  to try them out (and they will most likely contain bugs). If you are\n+  interested in any of these then please join the mailing-list and\n+  follow development in CVS.\n+\n+* Cairo Gtk+ Graphics2D support, enabled by giving configure\n+  --enable-gtk-cairo.\n+* QT4 AWT peers, enable by giving configure --enable-qt-peer.\n+\n+The following people helped with this release:\n+\n+Andreas Tobler\n+  Qt4 support for Darwin/OSX, Graphics2D support, gtk+ updates.\n+Andrew Haley\n+  Serialization and URLClassLoader fixes.\n+Andrew John Hughes\n+  Serialization fixes, Properties XML support and generic branch work.\n+Anthony Balkissoon\n+  Lots of Free Swing additions.\n+Anthony Green\n+  MIDI framework, ALSA and DSSI providers.\n+Audrius Meskauskas\n+ Lots of new CORBA and RMI work and bugfixes.\n+Casey Marshall\n+  Crypto algorithm fixes.\n+Chris Burdess\n+  StAX and dom xml:id support.\n+Christian Thalinger\n+  Configuration and VM inteface fixes and CACAO integration.\n+Dalibor Topic\n+  Build cleanups and Kaffe integration.\n+David Daney\n+  HttpURLConnection rewrite and improvements.\n+David Gilbert\n+  Lots of Free Swing and metal theme additions.\n+David Lichteblau\n+  JCL support library global/local reference cleanups.\n+Gael Thomas\n+  VMClassLoader boot packages support sugestions.\n+Guilhem Lavaux\n+  Configuration, thread and channel fixes and Kaffe integration.\n+Jan Roehrich\n+  BasicTreeUI fixes.\n+Jeroen Frijters\n+  Serialization fixes, better Proxy support, bug fixes and IKVM integration.\n+Julian Scheid\n+  Documentation updates and gjdoc support.\n+Keith Seitz\n+  JDWP support.\n+Lillian Angel\n+  Lots of Free Swing additions.\n+Mark Wielaard\n+  Bug fixes, packaging and release management\n+Martin Cordova\n+  Suggestions for better SocketTimeoutException.\n+Michael Koch\n+  Configuration fixes.\n+Nicolas Geoffray\n+  VMClassLoader and AccessController improvements.\n+Paul Jenner\n+  Better -Werror support.\n+Robert Schuster\n+  XML and URL, AWT and Free Swing bug fixes\n+Roman Kennke\n+  Lots of Free Swing additions.\n+Santiago Gala\n+  AccessControlContext fixes.\n+Stuart Ballard\n+  RMI constant fixes.\n+Sven de Marothy\n+  BMP imageio support, CSS and TextLayout fixes.\n+Thomas Fitzsimmons\n+  Lots of imageio framework additions, lots of AWT and Free Swing bug fixes.\n+Tom Tromey\n+  Eclipse integration, generics work, lots of bug fixes and gcj integration.  \n+\n+We would also like to thank the numerous bug reporters and testers!\n+</pre>\n+<footer>"}, {"sha": "cb9d7c58d8da188b017f489ed99bb5065c3ca495", "filename": "libjava/classpath/doc/www.gnu.org/corba.wml", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcorba.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcorba.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcorba.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,37 @@\n+#include \"include/layout.wml\"\n+\n+<subject \"GNU Classpath CORBA interoperability page\">\n+\n+<box>\n+\n+<boxtitle>GNU Classpath::Object management group</boxtitle>\n+<boxitem>\n+This page is referenced from the official\n+<a href=\"http://doc.omg.org/vendor-tags\">OMG Vendor tag list</a>,\n+maintained by the <a href = \"http://www.corba.org/\">OMG</a>. \n+It is is designed to help programmers debugging interoperation\n+with our ORB. \n+</boxitem>\n+\n+<boxtitle>GNU Classpath::CORBA interoperability</boxtitle>\n+<boxitem>\n+<ol>\n+<li><a href=\"http://developer.classpath.org/mediation/CorbaInteroperability\">\n+Interoperability information (system exception minor codes, etc).</a></li>\n+<li><a href=\"http://developer.classpath.org/doc/\">GNU Classpath API Specification</a></li>\n+<li><a href=\"bugs.html\">Bug database.</a></li>\n+<li>GNU Classpath CORBA vs:\n+<a href=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk12-classpath.html\">JDK 1.2</a>\n+<a href=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk13-classpath.html\">JDK 1.3</a>\n+<a href=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk14-classpath.html\">JDK 1.4</a>\n+ (updated nightly)</li>\n+<li><a href=\"http://www.gnu.org/software/classpath/classpath.html\">Project home page</a></li>\n+</ol>\n+Registered information\n+<ul>\n+<li>GNU Classpath Vendor Minor Code Id (VMCID) is 0x47430xxx \n+(\"GC\\x00\\x00\" - \"GC\\x0f\\xff\").</li>\n+</ul>\n+</boxitem>\n+\n+</box>"}, {"sha": "a5139fbd5b63e8fc704f50649dcb005b07b6ed1a", "filename": "libjava/classpath/doc/www.gnu.org/cp-tools/cp-tools.wml", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcp-tools%2Fcp-tools.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcp-tools%2Fcp-tools.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fcp-tools%2Fcp-tools.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -34,6 +34,15 @@ page describing them in more detail:\n </boxitem>\r\n </box>\r\n \r\n+<box>\r\n+<boxtitle><a name=\"Development\">GNU Classpath::Tools::Downloads</a></boxtitle>\r\n+<boxitem>\r\n+At the moment there are only official releases of gjdoc on\r\n+<createlink url=\"ftp://ftp.gnu.org/gnu/classpath/\" name=\"ftp.gnu.org\"/>.\r\n+All other tools are available from CVS from the savannah project page below.\r\n+</boxitem>\r\n+</box>\r\n+\r\n <box>\r\n <boxtitle><a name=\"Development\">GNU Classpath::Tools::Development</a></boxtitle>\r\n <boxitem>\r"}, {"sha": "96018f60331b5464e6a85b7b01764a5f2a3292b0", "filename": "libjava/classpath/doc/www.gnu.org/downloads/downloads.wml", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -77,10 +77,10 @@ sub mylink {\n <download-block>\n \n <download\n-\tdate=\"15 July 2005\"\n-\tversion=\"0.17\"\n-\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.17.tar.gz\"\n-\tnotes=\"http://www.gnu.org/software/classpath/announce/20050715.html\"\n+\tdate=\"02 November 2005\"\n+\tversion=\"0.19\"\n+\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.19.tar.gz\"\n+\tnotes=\"http://www.gnu.org/software/classpath/announce/20051102.html\"\n >\n \n <!-- download\n@@ -99,6 +99,18 @@ sub mylink {\n <boxitem>\n \n <download-block>\n+<download\n+\tdate=\"06 September 2005\"\n+\tversion=\"0.18\"\n+\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.18.tar.gz\"\n+\tnotes=\"http://www.gnu.org/software/classpath/announce/20050906.html\"\n+>\n+<download\n+\tdate=\"15 July 2005\"\n+\tversion=\"0.17\"\n+\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.17.tar.gz\"\n+\tnotes=\"http://www.gnu.org/software/classpath/announce/20050715.html\"\n+>\n <download\n \tdate=\"30 June 2005\"\n \tversion=\"0.16\""}, {"sha": "ff512f22a9d29d157b3ee891e2773f7ff7b25502", "filename": "libjava/classpath/doc/www.gnu.org/home.wml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fhome.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fhome.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fhome.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -36,7 +36,7 @@ obtained by looking at these resources.\n   <ul>\n     <li><createlink url=\"tasks.html\" name=\"Task descriptions\"></li>\n     <li>GNU Classpath vs: <createlink url=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk10-classpath.html\" name=\"JDK 1.0\"> <createlink url=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk11-classpath.html\" name=\"JDK 1.1\"> <createlink url=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk12-classpath.html\" name=\"JDK 1.2\"> <createlink url=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk13-classpath.html\" name=\"JDK 1.3\"> <createlink url=\"http://www.kaffe.org/~stuart/japi/htmlout/h-jdk14-classpath.html\" name=\"JDK 1.4\"> (updated nightly)</li>\n-    <li>GNU Classpath <createlink url=\"http://ontographics.com/classpath/mauve/mauvereport.cgi\" name=\"Mauve Results\"></li>\n+    <li>GNU Classpath <createlink url=\"http://www.object-refinery.com/classpath/mauve/report/\" name=\"Mauve Results\"></li>\n   </ul>\n </p>\n </boxitem>"}, {"sha": "485b9860146b0101349d8513c54dc663327e712d", "filename": "libjava/classpath/doc/www.gnu.org/include/layout.wml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -116,7 +116,7 @@\n <menuitem><createlink name=\"CVS\" url=\"http://savannah.gnu.org/cvs/?group=classpath\"></menuitem>\n \n <menutitle>Development</menutitle>\n-<menuitem><createlink name=\"Tasks\" url=\"tasks.html\"></menuitem>\n+<menuitem><createlink name=\"Tasks\" url=\"http://developer.classpath.org/mediation/ClasspathOpenTasks\"></menuitem>\n <menuitem><createlink name=\"Docs\" url=\"docs/docs.html\"></menuitem>\n <menuitem><createlink name=\"Testing\" url=\"benchmarks.html#testing\"></menuitem>\n <menuitem><createlink name=\"Benchmarks\" url=\"benchmarks.html#benchmarks\"></menuitem>"}, {"sha": "dbfcfd2ced94139d95ac1a7742cbdbf225a4dc06", "filename": "libjava/classpath/doc/www.gnu.org/newsitems.txt", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,3 +1,13 @@\n+<newsitem date=\"02 Nov 2005\">\n+<createlink name=\"GNU Classpath 0.19\"\n+            url=\"announce/20051102.html\">\n+</newsitem>\n+\n+<newsitem date=\"06 Sep 2005\">\n+<createlink name=\"GNU Classpath 0.18\"\n+            url=\"announce/20050906.html\">\n+</newsitem>\n+\n <newsitem date=\"03 Aug 2005\">\n <createlink name=\"Generics Branch Merge Announcement\"\n             url=\"http://lists.gnu.org/archive/html/classpath/2005-08/msg00002.html\">"}, {"sha": "34e36512f3dbcc2e76939f7f05f544382ad968b2", "filename": "libjava/classpath/doc/www.gnu.org/tasks.wml", "status": "modified", "additions": 13, "deletions": 325, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ftasks.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ftasks.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ftasks.wml?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,326 +1,14 @@\n-#include \"include/layout.wml\"\n+<html>\n+<head>\n+<title>GNU Classpath Tasklist - GNU Project - Free Software Foundation (FSF)</title>\n+<META HTTP-EQUIV=\"Refresh\"\n+      CONTENT=\"0; URL=http://developer.classpath.org/mediation/ClasspathOpenTasks\">\n+</head>\n+<body>\n+This page has moved. If your browser doesn't automatically redirect to\n+its new location, click\n+<a href=\"http://developer.classpath.org/mediation/ClasspathOpenTasks\">\n+http://developer.classpath.org/mediation/ClasspathOpenTasks</a>.\n+</body>\n+</html>\n \n-##\n-#\n-# Special Tags\n-#\n-\n-# <task\n-#\ttitle=\"task title\"\n-#\tcontact=\"contact person\"\n-#\tskills=\"...\"\n-#\testimation=\"...\"\n-# >\n-# ... task description ...\n-# </task>\n-\n-\n-\n-# the task counter\n-#\n-<set-var __TASKSEQCNT=1>\n-\n-<define-tag task-section endtag=required>\n-\t<preserve name>\n-\t<set-var %attributes>\n-{#TASKINDEX#:\n-\t\t<boxitem>\n-\t\t<!---boxtitle--->\n-\t\t<strong><get-var __TASKSEQCNT>. <get-var name></strong> <br>\n-\t\t<!---/boxtitle--->\n-:#TASKINDEX#}\n-\t<boxtitle><get-var __TASKSEQCNT>. <get-var name></boxtitle>\n-\t<set-var __TASKCNT=1>\n-\t%body\n-{#TASKINDEX#:\n-\t\t</boxitem>\n-\t\t<br>\n-:#TASKINDEX#}\n-\t<increment __TASKSEQCNT>\n-\t<restore name>\n-</define-tag>\n-\n-<define-tag task endtag=required>\n-<preserve title>\n-<preserve contact>\n-<preserve skills>\n-<preserve estimation>\n-<set-var %attributes>\n-{#TASKINDEX#:\n-\t<!---strong--><a href=\"tasks.html#task<get-var __TASKSEQCNT>_<get-var __TASKCNT>\"><get-var __TASKSEQCNT>.<get-var __TASKCNT> <get-var title></a><!---/strong--> (<get-var estimation>)<br>\n-:#TASKINDEX#}\n-\t<boxitem>\n-\t<h3><a name=\"task<get-var __TASKSEQCNT>_<get-var __TASKCNT>\"><get-var __TASKSEQCNT>.<get-var __TASKCNT> <get-var title></a></h3>\n-\t<table border=\"0\">\n-\t<tr><td valign=\"top\"><strong>Description:</strong></td><td>%body</td></tr>\n-\t<tr><td><strong>Skills:</strong></td><td><get-var skills></td></tr>\n-\t<tr><td><strong>Estimated time:</strong></td><td><get-var estimation></td></tr>\n-\t<tr><td><strong>Contact person:</strong></td><td><get-var contact></td></tr>\n-\t</table>\n-\t</boxitem>\n-<increment __TASKCNT>\n-<restore estimation>\n-<restore skills>\n-<restore contact>\n-<restore title>\n-\n-</define-tag>\n-\n-\n-<define-tag sb>\n-\tSascha Brawer\n-</define-tag>\n-<define-tag mw>\n-\tMark Wielaard\n-</define-tag>\n-<define-tag pr>\n-\tPatrik Reali\n-</define-tag>\n-<define-tag cm>\n-\tCasey Marshall\n-</define-tag>\n-<define-tag dt>\n-\tDalibor Topic\n-</define-tag>\n-<define-tag mk>\n-\tMichael Koch\n-</define-tag>\n-\n-<set-var last-modified-author=\"prk\">\n-\n-<subject \"GNU Classpath Tasklist\">\n-\n-<h1>GNU Classpath Tasklist</h1>\n-\n-<box>\n-\n-<boxitem>\n-This list is a collection of tasks for helping GNU Classpath's progress. They are a good starting point if you would like to help in producing a complete and high-quality free Java implementation.\n-\n-<p>Another source of inspiration are GNU Classpath's <createlink name=\"task list\" url=\"http://savannah.gnu.org/pm/?group=classpath\"> and <createlink name=\"patch list\" url=\"http://savannah.gnu.org/patch/?group=classpath\"> on Savannah, though these are usually meant for the project members.\n-</boxitem>\n-\n-<boxtitle>Index</boxtitle>\n-{#TASKINDEX#}\n-\n-\n-\n-<task-section name=\"Graphics\">\n-<task\n-\ttitle=\"javax.imageio\"\n-\testimation=\"2 weeks\"\n-\tskills=\"\"\n-\tcontact=\"<sb> or <mk>\"\n->\n-Write an implementation of the javax.imageio framework.\n-</task>\n-\n-<task\n-\ttitle=\"Constructive Area Geometry\"\n-\testimation=\"6 weeks (?).\"\n-\tskills=\"Computational geometry skills\"\n-\tcontact=\"<sb>\"\n->\n-Implement java.awt.geom.Area. This would be useful for some\n-graphics applications.\n-</task>\n-\n-<task\n-\ttitle=\"Composite Contexts\"\n-\testimation=\"2 days for each operator\"\n-\tskills=\"It helps if you are familiar with the java.awt.image framework.\"\n-\tcontact=\"<sb>\"\n->\n-Implement some CompositeContexts for Porter/Duff operators on raster\n-images. This would be useful for supporting 2D graphics. See\n-java.awt.AlphaComposite and its createContext method.\n-</task>\n-\n-</task-section>\n-\n-<task-section name=\"CORBA\">\n-<task\n-\ttitle=\"Help with CORBA implementation\"\n-\testimation=\"This depends on the sub-task you pick.\"\n-\tskills=\"Know or be ready to read the OMG documentation.\"\n-\tcontact=\"Audrius Meskauskas\"\n->\n-The CORBA implementation in the Classpath project is\n-now a working but incomplete prototype. A number of CORBA \n-related tasks are available. If you are not a CORBA expert, you should be ready\n-to learn by reading the <createlink name=\"OMG specifications\"\n-url=\"http://www.omg.org/cgi-bin/doc?formal/04-03-12\"> and probably by writing some \n-relatively simple classes.\n-</task>\n-</task-section>\n-\n-<task-section name=\"Testing\">\n-<task\n-\ttitle=\"Make Mauve an application\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"<pr>\"\n->\n-On some environments, it is not possible to run shell scripts\n-because there is no shell. Make the Mauve test suite a self-contained\n-application (one big JAR file).\n-</task>\n-\n-<task\n-\ttitle=\"Write Mauve tests\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"<mw>\"\n->\n-Write Mauve tests.\n-</task>\n-\n-<task\n-\ttitle=\"Mauve tests for javax.image.io\"\n-\testimation=\"1 week\"\n-\tskills=\"\"\n-\tcontact=\"<sb>\"\n->\n-<p>Write Mauve tests for reading in images. You could use the test images\n-at libpng.org and write Mauve testlets that load each image from\n-a file. Compute a hash (such as SHA-1) over the contents of the\n-DataBuffer. If the hash matches, the test succeeds.\n-</p><p>\n-Note that we don't have javax.imageio yet, so you'd have to develop\n-this with the Sun JDK.\n-</p>\n-</task>\n-\n-<task\n-\ttitle=\"Generator for Mauve tests\"\n-\testimation=\"2 weeks (prototype) + 2 weeks (tuning)\"\n-\tskills=\"\"\n-\tcontact=\"<dt>\"\n->\n-Write a program which automatically generates basic Mauve tests.\n-\n-\n-</task>\n-\n-</task-section>\n-\n-<task-section name=\"Automation\">\n-\n-<task\n-\ttitle=\"Script for running regression tests\"\n-\testimation=\"1 week\"\n-\tskills=\"???\"\n-\tcontact=\"\"\n->\n-Write a script that once a night checks out Classpath from cvs,\n-compiles it, runs the Mauve test suite (also from cvs) on it\n-using some free JVM (e.g. Kissme), and posts the results to\n-some web site. For comparison, it would be very helpful if the\n-same Mauve testlets were also run with a current Sun JVM.\n-</task>\n-\n-<task\n-\ttitle=\"Integrate Classpath testsuite into Mauve\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"<mw>\"\n->\n-Classpath has a rather small number of tests in the subdirectories\n-test/ and testsuite/. Look through these tests and check whether the\n-same functionality is already tested by Mauve. If not, write a\n-Mauve testlet and submit it to mauve-patches@sources.redhat.com <mailto:mauve-patches@sources.redhat.com>.\n-The goal is to remove the test suite from Classpath.\n-</task>\n-\n-\n-<task\n-\ttitle=\"Script for running Japitools\"\n-\testimation=\"1 week\"\n-\tskills=\"\"\n-\tcontact=\"???\"\n->\n-Write a script that once a night checks out Classpath from cvs,\n-runs Japitools on it, and posts the results on some web site.\n-</task>\n-\n-<task\n-\ttitle=\"Script for running gjdoc\"\n-\testimation=\"1 week\"\n-\tskills=\"\"\n-\tcontact=\"\"\n->\n-Write a script that once a night checks out Classpath from cvs,\n-runs gjdoc on it, and posts the generated documentation on some\n-web site. While you're at it, fix gjdoc so it copies embedded\n-documentation images (classpath-tools support request #102205).\n-</task>\n-\n-<task\n-\ttitle=\"JAR file verification\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"<mw>\"\n->\n-</task>\n-</task-section>\n-\n-<task-section name=\"Native stuff\">\n-\n-<task\n-\ttitle=\"Libiconv Service Provider for java.nio.charset\"\n-\testimation=\"2 weeks\"\n-\tskills=\"\"\n-\tcontact=\"\"\n->Write a service provider for java.nio.charset that uses the\n-libiconv library for converting character encodings to and\n-from UTF-16. This would be a first step for replacing\n-gnu.java.io.EncodingManager by the java.nio.charset framework,\n-which is richer and not specific to Classpath.\n-</task>\n-</task-section>\n-\n-<task-section name=\"Security\">\n-\n-<task\n-\ttitle=\"Security Audit\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"\"\n->We need to make a pass over the Classpath Java source, making sure\n-that all required calls to the SecurityManager are in place.  At the same\n-time we need to ensure that there is no way to get around\n-SecurityManager by directly calling code in gnu.*.\n-</task>\n-\n-<task\n-\ttitle=\"Security Testing\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"\"\n->We need Mauve tests for all the calls to SecurityManager.\n-Additionally, enabling a security manager will probably reveal\n-code in Classpath that needs to be wrapped in AccessController.doPrivileged().\n-</task>\n-\n-</task-section>\n-\n-<task-section name=\"Related Projects\">\n-<task\n-\ttitle=\"Help GNU Crypto\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"<cm>\"\n->\n-</task>\n-<task\n-\ttitle=\"Help Classpath-x\"\n-\testimation=\"\"\n-\tskills=\"\"\n-\tcontact=\"\"\n->\n-??? (maybe this should be more specific, e.g. \"Write an\n-IMAP plug-in for javax.mail on top of inetlib\" (if they want\n-this at all)\n-</task-section>\n-\n-</box>"}, {"sha": "f688ab77707e2b29cac6fdb1766c8b6f14931a86", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -41,10 +41,8 @@ subdir = examples\n DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n \t$(srcdir)/Makefile.jawt.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -86,10 +84,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -226,6 +228,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -239,6 +242,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "fb5ebdbb5dc592c9459d99bb794e07d1912ade5d", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/NamingService/Demo.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FNamingService%2FDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -73,7 +73,7 @@\n  */\n public class Demo\n {\n-  public static void main(final String[] args)\n+  public static void main(String[] an_args)\n   {\n     // We create the following naming graph:\n     // <ROOT CONTEXT>\n@@ -90,6 +90,8 @@ public static void main(final String[] args)\n     System.out.println(\"Starting the GNU Classpath \" +\n                        \"built-in transient naming service\"\n                       );\n+    \n+    final String[] args = an_args;\n \n     new Thread()\n       {"}, {"sha": "f53609cf71838f92018613d7f86bf4a3b67cb218", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/Demo.java", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication;\n \n+import java.io.File;\n+\n import gnu.classpath.examples.CORBA.SimpleCommunication.communication.DirectTest;\n import gnu.classpath.examples.CORBA.SimpleCommunication.communication.RequestTest;\n \n@@ -61,23 +63,34 @@\n {\n   public static void main(final String[] args)\n   {\n+    File ior = new File(\"IOR.txt\");\n+    if (ior.exists())\n+      ior.delete();\n+\n     // Start the server.\n     new Thread()\n     {\n       public void run()\n       {\n-        comServer.start_server(args);\n+        DemoServer.start_server(args);\n       }\n     }.start();\n \n-    System.out.println(\"Waiting for three seconds for the server to start...\");\n-\n-    // Pause some time for the server to start.\n-    try {\n-      Thread.sleep(3000);\n-    }\n-    catch (InterruptedException ex) {\n-    }\n+    System.out.print(\"Waiting for the server to start \");\n+    while (!ior.exists())\n+      {\n+        // Pause some time for the server to start.\n+        try\n+          {\n+            Thread.sleep(200);\n+          }\n+        catch (InterruptedException ex)\n+          {\n+          }\n+        System.out.print(\".\");\n+      }\n+    System.out.println(\"ok.\");\n+    System.out.println();    \n \n     // Test the stream oriented communication.\n     DirectTest.main(args);"}, {"sha": "d7b1a7771fbff8acba4faa5b74c81ad90da14b69", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/DemoServer.java", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemoServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemoServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2FDemoServer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* comServer.java --\n+/* DemoServer.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,7 +38,7 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication;\n \n-import gnu.classpath.examples.CORBA.SimpleCommunication.communication.comServant;\n+import gnu.classpath.examples.CORBA.SimpleCommunication.communication.DemoServant;\n \n import org.omg.CORBA.ORB;\n \n@@ -47,7 +47,7 @@\n \n /**\n  * This is the server class that handles the client requests,\n- * delegating the functionality to the {@link comServant}.\n+ * delegating the functionality to the {@link DemoServant}.\n  *\n  * When starting, the server writes the IOR.txt file into the current\n  * folder. With the information, stored in this file, the server\n@@ -62,7 +62,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class comServer\n+public class DemoServer\n {\n \n   public static void main(String[] args)\n@@ -78,7 +78,7 @@ public static ORB start_server(String[] args)\n         final ORB orb = org.omg.CORBA.ORB.init(args, null);\n \n         // Create the servant and register it with the ORB.\n-        comServant tester = new comServant();\n+        DemoServant tester = new DemoServant();\n         orb.connect(tester);\n \n         // Storing the IOR reference.", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/comServer.java"}, {"sha": "c07b77b1728df385827929e07690e999c33bc104", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/DemoServant.java", "status": "renamed", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* comServant.java --\n+/* DemoServant.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -45,12 +45,6 @@\n import org.omg.CORBA.ShortHolder;\n import org.omg.CORBA.StringHolder;\n \n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n-import java.io.FileReader;\n-import java.io.PrintStream;\n-\n /**\n  * This class handles the actual server functionality in this test\n  * application. When the client calls the remote method, this\n@@ -62,8 +56,8 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class comServant\n-  extends _comTesterImplBase\n+public class DemoServant\n+  extends _DemoTesterImplBase\n {\n   /**\n    * The field, that can be set and checked by remote client.\n@@ -129,15 +123,15 @@ public String[] passStrings(String[] args)\n   /**\n    * Accept and return the structures.\n    */\n-  public returnThis passStructure(passThis in_structure)\n+  public StructureToReturn passStructure(StructureToPass in_structure)\n   {\n     System.out.println(\"SERVER: ***** Transferring structures\");\n     System.out.println(\"SERVER:   Received \" + in_structure.a + \":\" +\n                        in_structure.b\n                       );\n \n     // Create and send back the returned structure.\n-    returnThis r = new returnThis();\n+    StructureToReturn r = new StructureToReturn();\n     r.c = in_structure.a + in_structure.b;\n     r.n = 555;\n     r.arra = new int[] { 11, 22, 33 };\n@@ -147,14 +141,14 @@ public returnThis passStructure(passThis in_structure)\n   /**\n    * Pass and return the tree structure\n    */\n-  public void passTree(nodeHolder tree)\n+  public void passTree(TreeNodeHolder tree)\n   {\n     System.out.println(\"SERVER: ***** Transferring tree\");\n \n     StringBuffer b = new StringBuffer();\n \n     // This both creates the tree string representation\n-    // and changes the node names.\n+    // and changes the TreeNode names.\n     getImage(b, tree.value);\n     System.out.println(\"SERVER:   The tree was: \" + b + \", returning changed.\");\n   }\n@@ -190,19 +184,19 @@ public void theField(int a_field)\n    *\n    * @param parameter specifies which exception will be thrown.\n    *\n-   * @throws ourUserException for the non negative parameter.\n+   * @throws WeThrowThisException for the non negative parameter.\n    * @throws BAD_OPERATION for the negative parameter.\n    */\n   public void throwException(int parameter)\n-                      throws ourUserException\n+                      throws WeThrowThisException\n   {\n     System.out.println(\"SERVER: ***** Testing exceptions\");\n     if (parameter > 0)\n       {\n         System.out.println(\"SERVER:   Throwing the user exception, \" +\n                            \"specific field = \"+parameter\n                           );\n-        throw new ourUserException(parameter);\n+        throw new WeThrowThisException(parameter);\n       }\n     else\n       {\n@@ -215,12 +209,12 @@ public void throwException(int parameter)\n \n   /**\n    * Visit all tree nodes, getting the string representation\n-   * and adding '++' to the node names.\n+   * and adding '++' to the TreeNode names.\n    *\n    * @param b the buffer to collect the string representation.\n-   * @param n the rott tree node.\n+   * @param n the rott tree TreeNode.\n    */\n-  private void getImage(StringBuffer b, node n)\n+  private void getImage(StringBuffer b, TreeNode n)\n   {\n     b.append(n.name);\n     n.name = n.name + \"++\";", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/comServant.java"}, {"sha": "f3766f3251a930e1c965c7c9941ef85460ec5794", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/DemoTester.java", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoTester.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoTester.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoTester.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* comTester.java --\n+/* DemoTester.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -45,12 +45,12 @@\n \n /**\n  * The interface of our remote object. Some IDL compiles split it\n- * into \"comTester\" and \"comTesterOperations\", but we do not see\n+ * into \"DemoTester\" and \"comTesterOperations\", but we do not see\n  * much sense in doing this here.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public interface comTester\n+public interface DemoTester\n {\n   /**\n    * Passes wide (UTF-16) string and narrow (ISO8859_1) string.\n@@ -77,14 +77,14 @@ int passSimple(ByteHolder an_octet, int a_long, ShortHolder a_short,\n   /**\n    * Passes and returns the structures.\n    */\n-  returnThis passStructure(passThis in_structure);\n+  StructureToReturn passStructure(StructureToPass in_structure);\n \n   /**\n    * Pass and return the tree structure\n    *\n-   * @param tree the root node of the tree.\n+   * @param tree the root TreeNode of the tree.\n    */\n-  void passTree(nodeHolder tree);\n+  void passTree(TreeNodeHolder tree);\n \n   /**\n    * Just prints the \"Hello\" message.\n@@ -102,10 +102,10 @@ int passSimple(ByteHolder an_octet, int a_long, ShortHolder a_short,\n   void theField(int newTheField);\n \n   /**\n-   *  Throws either 'ourUserException' with the 'ourField' field\n+   *  Throws either 'WeThrowThisException' with the 'ourField' field\n    *  initialised to the passed positive value\n    *  or system exception (if the parameter is zero or negative).\n    */\n   void throwException(int parameter)\n-               throws ourUserException;\n+               throws WeThrowThisException;\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/comTester.java"}, {"sha": "732b00cfb307a49eced626beb9394cee028f4c3f", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/DirectTest.java", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -57,7 +57,7 @@\n  * where the program has been started.\n  *\n  * The IOR.txt file is written by the server\n- * {@link gnu.classpath.examples.CORBA.SimpleCommunication.comServer}.\n+ * {@link gnu.classpath.examples.CORBA.SimpleCommunication.DemoServer}.\n  * The server should be reachable over Internet, unless blocked by\n  * security tools.\n  *\n@@ -83,7 +83,7 @@\n   /**\n    * The invocation target.\n    */\n-  comTester object;\n+  DemoTester object;\n \n   /**\n    * Get the object reference.\n@@ -102,7 +102,7 @@ public static void main(String[] args)\n \n         String ior = new String(c);\n         DirectTest we = new DirectTest();\n-        we.object = (comTester) orb.string_to_object(ior);\n+        we.object = (DemoTester) orb.string_to_object(ior);\n         we.Demo();\n         orb.shutdown(false);\n       }\n@@ -199,11 +199,11 @@ public void testStructure()\n   {\n     System.out.println(\"***** Pass structure\");\n \n-    passThis arg = new passThis();\n+    StructureToPass arg = new StructureToPass();\n     arg.a = \"A\";\n     arg.b = \"B\";\n \n-    returnThis r = object.passStructure(arg);\n+    StructureToReturn r = object.passStructure(arg);\n \n     System.out.println(\"  Fields of the returned structure:\");\n \n@@ -257,15 +257,15 @@ public void testTree()\n     //      +-- bb\n     System.out.println(\"***** Pass and return the tree.\");\n \n-    node n = nod(\"Root\");\n+    TreeNode n = nod(\"Root\");\n \n-    n.children = new node[] { nod(\"a\"), nod(\"b\") };\n-    n.children [ 1 ].children = new node[] { nod(\"ba\"), nod(\"bb\") };\n-    n.children [ 1 ].children [ 0 ].children = new node[] { nod(\"bac\") };\n+    n.children = new TreeNode[] { nod(\"a\"), nod(\"b\") };\n+    n.children [ 1 ].children = new TreeNode[] { nod(\"ba\"), nod(\"bb\") };\n+    n.children [ 1 ].children [ 0 ].children = new TreeNode[] { nod(\"bac\") };\n \n-    nodeHolder nh = new nodeHolder(n);\n+    TreeNodeHolder nh = new TreeNodeHolder(n);\n \n-    // The server should add '++' to each node name.\n+    // The server should add '++' to each TreeNode name.\n     object.passTree(nh);\n \n     // Convert the returned tree to some strig representation.\n@@ -288,7 +288,7 @@ public void testUserException()\n         object.throwException(123);\n         throw new InternalError();\n       }\n-    catch (ourUserException uex)\n+    catch (WeThrowThisException uex)\n       {\n         System.out.println(\"  The user exception with field \" + uex.ourField +\n                            \", has been thrown on remote side.\"\n@@ -312,9 +312,9 @@ public void testWideNarrowStrings()\n   /**\n    * Get the string representation of the passed tree.\n    * @param b the string buffer to accumulate the representation.\n-   * @param n the tree (root node).\n+   * @param n the tree (root TreeNode).\n    */\n-  private void getImage(StringBuffer b, node n)\n+  private void getImage(StringBuffer b, TreeNode n)\n   {\n     b.append(n.name);\n     b.append(\": (\");\n@@ -328,15 +328,15 @@ private void getImage(StringBuffer b, node n)\n   }\n \n   /**\n-   * Create a node with the given header.\n+   * Create a TreeNode with the given header.\n    *\n-   * @param hdr the node header.\n-   * @return the created node.\n+   * @param hdr the TreeNode header.\n+   * @return the created TreeNode.\n    */\n-  private node nod(String hdr)\n+  private TreeNode nod(String hdr)\n   {\n-    node n = new node();\n-    n.children = new node[ 0 ];\n+    TreeNode n = new TreeNode();\n+    n.children = new TreeNode[ 0 ];\n     n.name = hdr;\n \n     return n;"}, {"sha": "9c908e520cc73f7f41bc61e8c9cb1bca4b285122", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/RequestTest.java", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FRequestTest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FRequestTest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FRequestTest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,3 +1,39 @@\n+/* RequestTest.java --\n+ Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n \n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n@@ -7,14 +43,10 @@\n import java.io.IOException;\n \n import org.omg.CORBA.BAD_OPERATION;\n-import org.omg.CORBA.ByteHolder;\n-import org.omg.CORBA.DoubleHolder;\n import org.omg.CORBA.ExceptionList;\n import org.omg.CORBA.NVList;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.Request;\n-import org.omg.CORBA.ShortHolder;\n-import org.omg.CORBA.StringHolder;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.UnknownUserException;\n \n@@ -25,7 +57,7 @@\n  * where the program has been started.\n  *\n  * The IOR.txt file is written by the server\n- * {@link gnu.classpath.examples.CORBA.SimpleCommunication.comServer}.\n+ * {@link gnu.classpath.examples.CORBA.SimpleCommunication.DemoServer}.\n  * The server should be reachable over Internet, unless blocked by\n  * security tools.\n  *\n@@ -106,7 +138,6 @@ public void Demo()\n         throw new InternalError();\n       }\n     testSystemException();\n-    testUserException();\n     testWideNarrowStrings();\n   }\n \n@@ -135,13 +166,6 @@ public void testParameters()\n     Request r =\n       object._create_request(null, \"passSimple\", orb.create_list(0), null);\n \n-    ByteHolder a_byte = new ByteHolder((byte) 0);\n-    ShortHolder a_short = new ShortHolder((short) 3);\n-    StringHolder a_string = new StringHolder(\"[string 4]\");\n-\n-    // This is an 'out' parameter; the value must not be passed to servant.\n-    DoubleHolder a_double = new DoubleHolder(56.789);\n-\n     r.add_inout_arg().insert_octet((byte) 0);\n     r.add_in_arg().insert_long(2);\n     r.add_inout_arg().insert_short((short) 3);\n@@ -188,7 +212,7 @@ public void testSystemException()\n     try\n       {\n         ExceptionList exList = orb.create_exception_list();\n-        exList.add(ourUserExceptionHelper.type());\n+        exList.add(WeThrowThisExceptionHelper.type());\n \n         Request rq =\n           object._create_request(null, \"throwException\", orb.create_list(1),\n@@ -217,7 +241,7 @@ public void testUserException()\n     System.out.println(\"**** Test user exception:\");\n \n     ExceptionList exList = orb.create_exception_list();\n-    exList.add(ourUserExceptionHelper.type());\n+    exList.add(WeThrowThisExceptionHelper.type());\n \n     Request rq =\n       object._create_request(null, \"throwException\", orb.create_list(1), null,\n@@ -228,7 +252,7 @@ public void testUserException()\n     rq.invoke();\n \n     UnknownUserException uku = (UnknownUserException) rq.env().exception();\n-    ourUserException our_exception = ourUserExceptionHelper.extract(uku.except);\n+    WeThrowThisException our_exception = WeThrowThisExceptionHelper.extract(uku.except);\n \n     System.out.println(\"  Our user exception, field \" + our_exception.ourField +\n                        \", has been thrown on remote side.\""}, {"sha": "d17e91fbac0c69c741ddb0e5820541ada2ccb378", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPass.java", "status": "renamed", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPass.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* passThis.java --\n+/* StructureToPass.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,9 +44,14 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class passThis\n+public class StructureToPass\n   implements org.omg.CORBA.portable.IDLEntity\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * The first string, stored in this structure (defined as\n    * \"narrow string\").", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/passThis.java"}, {"sha": "c41ebe237eaf76b66f71df4459cc1af74eb30aa0", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPassHelper.java", "status": "renamed", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* passThisHelper.java --\n+/* StructureToPassHelper.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,25 +38,24 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n-import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n \n /**\n- * The helper operations for the {@link passThis}.\n+ * The helper operations for the {@link StructureToPass}.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class passThisHelper\n+public abstract class StructureToPassHelper\n {\n   /**\n-   * The repository ID of the {@link passThis}.\n+   * The repository ID of the {@link StructureToPass}.\n    */\n   private static String id =\n-    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/passThis:1.0\";\n+    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPass:1.0\";\n \n   /**\n    * Get the repository id.\n@@ -69,9 +68,9 @@ public static String id()\n   /**\n    * Read the structure from the CDR stram.\n    */\n-  public static passThis read(InputStream istream)\n+  public static StructureToPass read(InputStream istream)\n   {\n-    passThis value = new passThis();\n+    StructureToPass value = new StructureToPass();\n     value.a = istream.read_string();\n     value.b = istream.read_wstring();\n     return value;\n@@ -88,13 +87,13 @@ public static synchronized TypeCode type()\n     members [ 0 ] = new StructMember(\"a\", member, null);\n     member = ORB.init().create_string_tc(0);\n     members [ 1 ] = new StructMember(\"b\", member, null);\n-    return ORB.init().create_struct_tc(passThisHelper.id(), \"passThis\", members);\n+    return ORB.init().create_struct_tc(StructureToPassHelper.id(), \"StructureToPass\", members);\n   }\n \n   /**\n    * Write the structure into the CDR stream.\n    */\n-  public static void write(OutputStream ostream, passThis value)\n+  public static void write(OutputStream ostream, StructureToPass value)\n   {\n     ostream.write_string(value.a);\n     ostream.write_wstring(value.b);", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/passThisHelper.java"}, {"sha": "5bbe6908e2738d50e3650b2393e4fe667082d99d", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPassHolder.java", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -6,32 +6,32 @@\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.Streamable;\n \n-public final class passThisHolder\n+public final class StructureToPassHolder\n   implements Streamable\n {\n-  public passThis value;\n+  public StructureToPass value;\n \n-  public passThisHolder()\n+  public StructureToPassHolder()\n   {\n   }\n \n-  public passThisHolder(passThis initialValue)\n+  public StructureToPassHolder(StructureToPass initialValue)\n   {\n     value = initialValue;\n   }\n \n   public void _read(InputStream i)\n   {\n-    value = passThisHelper.read(i);\n+    value = StructureToPassHelper.read(i);\n   }\n \n   public org.omg.CORBA.TypeCode _type()\n   {\n-    return passThisHelper.type();\n+    return StructureToPassHelper.type();\n   }\n \n   public void _write(OutputStream o)\n   {\n-    passThisHelper.write(o, value);\n+    StructureToPassHelper.write(o, value);\n   }\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/passThisHolder.java"}, {"sha": "5dc843ae8c74ebae7619819f2dc85ad45a904bb3", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturn.java", "status": "renamed", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturn.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturn.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturn.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* returnThis.java --\n+/* StructureToReturn.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,9 +44,14 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class returnThis\n+public class StructureToReturn\n   implements IDLEntity\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * The string field.\n    */", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/returnThis.java"}, {"sha": "42fb7a574a7d607ef90cdf7b089db64976f9e3d2", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturnHelper.java", "status": "renamed", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* returnThisHelper.java --\n+/* StructureToReturnHelper.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -37,7 +37,6 @@\n \n package gnu.classpath.examples.CORBA.SimpleCommunication.communication;\n \n-import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TCKind;\n@@ -46,17 +45,17 @@\n import org.omg.CORBA.portable.OutputStream;\n \n /**\n- * This class defines the helper operations for {@link returnThis}.\n+ * This class defines the helper operations for {@link StructureToReturn}.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class returnThisHelper\n+public abstract class StructureToReturnHelper\n {\n   /**\n    * The repository id.\n    */\n   private static String _id =\n-    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/returnThis:1.0\";\n+    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturn:1.0\";\n \n   /**\n    * Return the repository id.\n@@ -69,9 +68,9 @@ public static String id()\n   /**\n    * Read the structure from the CDR stream.\n    */\n-  public static returnThis read(InputStream istream)\n+  public static StructureToReturn read(InputStream istream)\n   {\n-    returnThis value = new returnThis();\n+    StructureToReturn value = new StructureToReturn();\n     value.n = istream.read_long();\n     value.c = istream.read_wstring();\n     value.arra = new int[ 3 ];\n@@ -95,15 +94,15 @@ public static synchronized TypeCode type()\n     member = ORB.init().get_primitive_tc(TCKind.tk_long);\n     member = ORB.init().create_array_tc(3, member);\n     members [ 2 ] = new StructMember(\"arra\", member, null);\n-    return ORB.init().create_struct_tc(returnThisHelper.id(), \"returnThis\",\n+    return ORB.init().create_struct_tc(StructureToReturnHelper.id(), \"StructureToReturn\",\n                                        members\n                                       );\n   }\n \n   /**\n    * Write the structure to the CDR stream.\n    */\n-  public static void write(OutputStream ostream, returnThis value)\n+  public static void write(OutputStream ostream, StructureToReturn value)\n   {\n     ostream.write_long(value.n);\n     ostream.write_wstring(value.c);", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/returnThisHelper.java"}, {"sha": "c70f9cfccdd323918b7f4056a43e007374900661", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturnHolder.java", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -10,25 +10,25 @@\n /**\n  * The holder for the structure, returned from the server.\n  */\n-public final class returnThisHolder\n+public final class StructureToReturnHolder\n   implements Streamable\n {\n   /**\n    * The enclosed structure.\n    */\n-  public returnThis value = null;\n+  public StructureToReturn value = null;\n \n   /**\n    * Create the empty holder.\n    */\n-  public returnThisHolder()\n+  public StructureToReturnHolder()\n   {\n   }\n \n   /**\n    * Crate the holder with the defined initial value.\n    */\n-  public returnThisHolder(returnThis initialValue)\n+  public StructureToReturnHolder(StructureToReturn initialValue)\n   {\n     value = initialValue;\n   }\n@@ -38,15 +38,15 @@ public returnThisHolder(returnThis initialValue)\n    */\n   public void _read(InputStream in)\n   {\n-    value = returnThisHelper.read(in);\n+    value = StructureToReturnHelper.read(in);\n   }\n \n   /**\n    * Get the typecode of this structure.\n    */\n   public TypeCode _type()\n   {\n-    return returnThisHelper.type();\n+    return StructureToReturnHelper.type();\n   }\n \n   /**\n@@ -55,6 +55,6 @@ public TypeCode _type()\n    */\n   public void _write(OutputStream out)\n   {\n-    returnThisHelper.write(out, value);\n+    StructureToReturnHelper.write(out, value);\n   }\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/returnThisHolder.java"}, {"sha": "b267f39eaffe0bb3603a9c29abe3d062b58fb14e", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNode.java", "status": "renamed", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* node.java --\n+/* TreeNode.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,12 +44,17 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class node\n+public class TreeNode\n   implements org.omg.CORBA.portable.IDLEntity\n {\n-  /** The node name */\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n+  /** The TreeNode name */\n   public String name = null;\n \n-  /** The node children. */\n-  public node[] children = null;\n+  /** The TreeNode children. */\n+  public TreeNode[] children = null;\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/node.java"}, {"sha": "f111d0eac9332324f6470df037fe1df3298681d2", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNodeHelper.java", "status": "renamed", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* nodeHelper.java --\n+/* TreeNodeHelper.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -51,13 +51,13 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class nodeHelper\n+public abstract class TreeNodeHelper\n {\n   /**\n-   * The node repository id, used to identify the structure.\n+   * The TreeNode repository id, used to identify the structure.\n    */\n   private static String _id =\n-    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/node:1.0\";\n+    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNode:1.0\";\n \n   /**\n    * Caches the typecode, allowing to compute it only once.\n@@ -66,31 +66,31 @@\n \n   /**\n    * This is used to handle the recursive object references in\n-   * CORBA - supported way. The tree node definition is recursive,\n-   * as the node contains the sequence of the nodes as its field.\n+   * CORBA - supported way. The tree TreeNode definition is recursive,\n+   * as the TreeNode contains the sequence of the nodes as its field.\n    */\n   private static boolean active;\n \n   /**\n-   * Extract the tree node from the unversal CORBA wrapper, Any.\n+   * Extract the tree TreeNode from the unversal CORBA wrapper, Any.\n    */\n-  public static node extract(Any a)\n+  public static TreeNode extract(Any a)\n   {\n     return read(a.create_input_stream());\n   }\n \n   /**\n-   * Get the node string identifer.\n+   * Get the TreeNode string identifer.\n    */\n   public static String id()\n   {\n     return _id;\n   }\n \n   /**\n-   * Insert the node into the universal CORBA wrapper, Any.\n+   * Insert the TreeNode into the universal CORBA wrapper, Any.\n    */\n-  public static void insert(Any a, node that)\n+  public static void insert(Any a, TreeNode that)\n   {\n     OutputStream out = a.create_output_stream();\n     a.type(type());\n@@ -99,22 +99,22 @@ public static void insert(Any a, node that)\n   }\n \n   /**\n-   * Read the node from the common data reprentation (CDR) stream.\n+   * Read the TreeNode from the common data reprentation (CDR) stream.\n    */\n-  public static node read(InputStream istream)\n+  public static TreeNode read(InputStream istream)\n   {\n-    node value = new node();\n+    TreeNode value = new TreeNode();\n     value.name = istream.read_string();\n \n     int _len0 = istream.read_long();\n-    value.children = new node[ _len0 ];\n+    value.children = new TreeNode[ _len0 ];\n     for (int i = 0; i < value.children.length; ++i)\n-      value.children [ i ] = nodeHelper.read(istream);\n+      value.children [ i ] = TreeNodeHelper.read(istream);\n     return value;\n   }\n \n   /**\n-   * Get the node type code definition.\n+   * Get the TreeNode type code definition.\n    */\n   public static synchronized TypeCode type()\n   {\n@@ -131,15 +131,15 @@ public static synchronized TypeCode type()\n                   return ORB.init().create_recursive_tc(_id);\n                 active = true;\n \n-                // List all memebers of the node structure.\n+                // List all memebers of the TreeNode structure.\n                 StructMember[] members = new StructMember[ 2 ];\n                 TypeCode memberType;\n                 memberType = ORB.init().create_string_tc(0);\n                 members [ 0 ] = new StructMember(\"name\", memberType, null);\n                 memberType = ORB.init().create_recursive_tc(\"\");\n                 members [ 1 ] = new StructMember(\"children\", memberType, null);\n                 typeCode =\n-                  ORB.init().create_struct_tc(nodeHelper.id(), \"node\", members);\n+                  ORB.init().create_struct_tc(TreeNodeHelper.id(), \"TreeNode\", members);\n                 active = false;\n               }\n           }\n@@ -148,13 +148,13 @@ public static synchronized TypeCode type()\n   }\n \n   /**\n-   * Write the node into the common data reprentation (CDR) stream.\n+   * Write the TreeNode into the common data reprentation (CDR) stream.\n    */\n-  public static void write(OutputStream ostream, node value)\n+  public static void write(OutputStream ostream, TreeNode value)\n   {\n     ostream.write_string(value.name);\n     ostream.write_long(value.children.length);\n     for (int i = 0; i < value.children.length; ++i)\n-      nodeHelper.write(ostream, value.children [ i ]);\n+      TreeNodeHelper.write(ostream, value.children [ i ]);\n   }\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/nodeHelper.java"}, {"sha": "ec180ce579afa628b732b89ad2f84732536e6132", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNodeHolder.java", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* nodeHolder.java --\n+/* TreeNodeHolder.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,57 +44,57 @@\n import org.omg.CORBA.portable.Streamable;\n \n /**\n- * The node holder is a wrapper about the node data structure. It\n- * can be used where the node must be passed both to and from\n+ * The TreeNode holder is a wrapper about the TreeNode data structure. It\n+ * can be used where the TreeNode must be passed both to and from\n  * the method being called. The same structure holds the tree,\n- * as it can be represented as a root node with children.\n+ * as it can be represented as a root TreeNode with children.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class nodeHolder\n+public class TreeNodeHolder\n   implements Streamable\n {\n   /**\n-   * Stores the node value.\n+   * Stores the TreeNode value.\n    */\n-  public node value;\n+  public TreeNode value;\n \n   /**\n-   * Creates the node holder with the null initial value.\n+   * Creates the TreeNode holder with the null initial value.\n    */\n-  public nodeHolder()\n+  public TreeNodeHolder()\n   {\n   }\n \n   /**\n-   * Creates the node holder with the given initial value.\n+   * Creates the TreeNode holder with the given initial value.\n    */\n-  public nodeHolder(node initialValue)\n+  public TreeNodeHolder(TreeNode initialValue)\n   {\n     value = initialValue;\n   }\n \n   /**\n-   * Reads the node value from the common data representation (CDR)\n+   * Reads the TreeNode value from the common data representation (CDR)\n    * stream.\n    */\n   public void _read(InputStream in)\n   {\n-    value = nodeHelper.read(in);\n+    value = TreeNodeHelper.read(in);\n   }\n \n   /**\n-   * Writes the node value into common data representation (CDR)\n+   * Writes the TreeNode value into common data representation (CDR)\n    * stream.\n    * @return\n    */\n   public TypeCode _type()\n   {\n-    return nodeHelper.type();\n+    return TreeNodeHelper.type();\n   }\n \n   public void _write(OutputStream out)\n   {\n-    nodeHelper.write(out, value);\n+    TreeNodeHelper.write(out, value);\n   }\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/nodeHolder.java"}, {"sha": "cf20d61ecdc277335c66159d979eb8ad78d46b91", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisException.java", "status": "renamed", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisException.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* ourUserException.java --\n+/* WeThrowThisException.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -49,10 +49,15 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class ourUserException\n+public class WeThrowThisException\n   extends UserException\n   implements IDLEntity\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * Our specific field, transferred to client.\n    */\n@@ -63,7 +68,7 @@\n    *\n    * @param _ourField the value of our specific field.\n    */\n-  public ourUserException(int _ourField)\n+  public WeThrowThisException(int _ourField)\n   {\n     ourField = _ourField;\n   }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/ourUserException.java"}, {"sha": "4d5eee74b4b4e067882dbad54df446b44d0c1675", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisExceptionHelper.java", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* ourUserExceptionHelper.java --\n+/* WeThrowThisExceptionHelper.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -50,14 +50,14 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class ourUserExceptionHelper\n+public abstract class WeThrowThisExceptionHelper\n {\n   /**\n    * The exception repository id. This name is also used to find the\n    * mapping local CORBA class.\n    */\n   private static String _id =\n-    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/ourUserException:1.0\";\n+    \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisException:1.0\";\n \n   /**\n    * Get the exception repository id.\n@@ -71,17 +71,17 @@ public static String id()\n    * Extract the exception from the given Any where it might be\n    * wrapped.\n    */\n-  public static ourUserException extract(Any a)\n+  public static WeThrowThisException extract(Any a)\n   {\n     return read(a.create_input_stream());\n   }\n \n   /**\n    * Read the exception from the CDR stream.\n    */\n-  public static ourUserException read(org.omg.CORBA.portable.InputStream istream)\n+  public static WeThrowThisException read(org.omg.CORBA.portable.InputStream istream)\n   {\n-    ourUserException value = new ourUserException(0);\n+    WeThrowThisException value = new WeThrowThisException(0);\n \n     // The repository ID is not used\n     istream.read_string();\n@@ -98,16 +98,16 @@ public static synchronized TypeCode type()\n     TypeCode member = null;\n     member = ORB.init().get_primitive_tc(TCKind.tk_long);\n     members [ 0 ] = new StructMember(\"ourField\", member, null);\n-    return ORB.init().create_struct_tc(ourUserExceptionHelper.id(),\n-                                       \"ourUserException\", members\n+    return ORB.init().create_struct_tc(WeThrowThisExceptionHelper.id(),\n+                                       \"WeThrowThisException\", members\n                                       );\n   }\n \n   /**\n    * Write the exception into the CDR stream.\n    */\n   public static void write(org.omg.CORBA.portable.OutputStream ostream,\n-                           ourUserException value\n+                           WeThrowThisException value\n                           )\n   {\n     ostream.write_string(id());", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/ourUserExceptionHelper.java"}, {"sha": "237c23086ebffa4a226052ccba22fbe9187dbecd", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/_DemoTesterImplBase.java", "status": "renamed", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterImplBase.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterImplBase.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterImplBase.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* _comTesterImplBase.java --\n+/* _DemoTesterImplBase.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -53,13 +53,16 @@\n \n /**\n  * The base for the class that is actually implementing the functionality\n- * of the object on the server side ({@link comServant} of our case).\n+ * of the object on the server side ({@link DemoServant} of our case).\n+ * \n+ * Following CORBA standards, the name of this class must start from\n+ * underscore and end by the \"ImplBase\".\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class _comTesterImplBase\n+public abstract class _DemoTesterImplBase\n   extends ObjectImpl\n-  implements comTester, InvokeHandler\n+  implements DemoTester, InvokeHandler\n {\n /**\n  * When the server receives the request message from client, it\n@@ -138,7 +141,7 @@ public OutputStream _invoke(String a_method, InputStream in,\n       }\n     else\n     /*\n-      Throws either 'ourUserException' with the 'ourField' field\n+      Throws either 'WeThrowThisException' with the 'ourField' field\n       initialised to the passed positive value\n       or system exception (if the parameter is zero or negative).\n      */\n@@ -150,21 +153,21 @@ or system exception (if the parameter is zero or negative).\n             throwException(parameter);\n             out = rh.createReply();\n           }\n-        catch (ourUserException exception)\n+        catch (WeThrowThisException exception)\n           {\n             out = rh.createExceptionReply();\n-            ourUserExceptionHelper.write(out, exception);\n+            WeThrowThisExceptionHelper.write(out, exception);\n           }\n       }\n     else\n     /* Passes and returns the structures. */\n     if (a_method.equals(\"passStructure\"))\n       {\n-        passThis in_structure = passThisHelper.read(in);\n-        returnThis result = null;\n+        StructureToPass in_structure = StructureToPassHelper.read(in);\n+        StructureToReturn result = null;\n         result = passStructure(in_structure);\n         out = rh.createReply();\n-        returnThisHelper.write(out, result);\n+        StructureToReturnHelper.write(out, result);\n       }\n     else\n     /* Passes and returns the string sequence. */\n@@ -180,11 +183,11 @@ or system exception (if the parameter is zero or negative).\n     /** Pass and return the tree structure */\n     if (a_method.equals(\"passTree\"))\n       {\n-        nodeHolder tree = new nodeHolder();\n-        tree.value = nodeHelper.read(in);\n+        TreeNodeHolder tree = new TreeNodeHolder();\n+        tree.value = TreeNodeHelper.read(in);\n         passTree(tree);\n         out = rh.createReply();\n-        nodeHelper.write(out, tree.value);\n+        TreeNodeHelper.write(out, tree.value);\n       }\n \n     else\n@@ -201,6 +204,6 @@ or system exception (if the parameter is zero or negative).\n   public String[] _ids()\n   {\n     // They are the same as for the stub.\n-    return _comTesterStub._ids;\n+    return _DemoTesterStub._ids;\n   }\n }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/_comTesterImplBase.java"}, {"sha": "c8e0ccd6d278f85865f4ddc4c40c0f57fe9c9985", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/_DemoTesterStub.java", "status": "renamed", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2F_DemoTesterStub.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* _comTesterStub.java --\n+/* _DemoTesterStub.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -55,23 +55,26 @@\n  * side. It has all the same methods as the actual implementation\n  * on the server side. These methods contain the code for remote\n  * invocation.\n+ * \n+ * Following CORBA standards, the name of this class must start from\n+ * underscore and end by the \"Stub\".\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class _comTesterStub\n+public class _DemoTesterStub\n   extends ObjectImpl\n-  implements comTester\n+  implements DemoTester\n {\n   /**\n-   * A string array of comTester repository ids.\n+   * A string array of DemoTester repository ids.\n    */\n   public static String[] _ids =\n     {\n-      \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/comTester:1.0\"\n+      \"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/DemoTester:1.0\"\n     };\n \n   /**\n-   * Return an array of comTester repository ids.\n+   * Return an array of DemoTester repository ids.\n    */\n   public String[] _ids()\n   {\n@@ -217,7 +220,7 @@ public String[] passStrings(String[] arg)\n   /**\n     Passes and returns the structures.\n     */\n-  public returnThis passStructure(passThis in_structure)\n+  public StructureToReturn passStructure(StructureToPass in_structure)\n   {\n     InputStream in = null;\n     try\n@@ -226,13 +229,13 @@ public returnThis passStructure(passThis in_structure)\n         OutputStream out = _request(\"passStructure\", true);\n \n         // Write the structure, using its helper.\n-        passThisHelper.write(out, in_structure);\n+        StructureToPassHelper.write(out, in_structure);\n \n         // Invoke the method.\n         in = _invoke(out);\n \n         // Read the returned structer, using another helper.\n-        returnThis result = returnThisHelper.read(in);\n+        StructureToReturn result = StructureToReturnHelper.read(in);\n         return result;\n       }\n     catch (ApplicationException ex)\n@@ -253,23 +256,23 @@ public returnThis passStructure(passThis in_structure)\n   /**\n    * Pass and return the tree structure\n    */\n-  public void passTree(nodeHolder tree)\n+  public void passTree(TreeNodeHolder tree)\n   {\n     InputStream in = null;\n     try\n       {\n         // Get the stream where the parameters must be written.\n         OutputStream out = _request(\"passTree\", true);\n \n-        // Write the tree (node with its chilred, grandchildren and so on),\n+        // Write the tree (TreeNode with its chilred, grandchildren and so on),\n         // using the appropriate helper.\n-        nodeHelper.write(out, tree.value);\n+        TreeNodeHelper.write(out, tree.value);\n \n         // Call the method.\n         in = _invoke(out);\n \n         // Read the returned tree.\n-        tree.value = nodeHelper.read(in);\n+        tree.value = TreeNodeHelper.read(in);\n       }\n     catch (ApplicationException ex)\n       {\n@@ -382,10 +385,10 @@ public void theField(int newTheField)\n    * of the positive value of this argument, and system\n    * exception otherwise.\n    *\n-   * @throws ourUserException\n+   * @throws WeThrowThisException\n    */\n   public void throwException(int parameter)\n-                      throws ourUserException\n+                      throws WeThrowThisException\n   {\n     InputStream in = null;\n     try\n@@ -408,9 +411,9 @@ public void throwException(int parameter)\n \n         // If this is the user exception we expect to catch, read and throw\n         // it here. The system exception, if thrown, is handled by _invoke.\n-        if (id.equals(\"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/ourUserException:1.0\")\n+        if (id.equals(\"IDL:gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisException:1.0\")\n            )\n-          throw ourUserExceptionHelper.read(in);\n+          throw WeThrowThisExceptionHelper.read(in);\n         else\n           throw new MARSHAL(id);\n       }", "previous_filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/_comTesterStub.java"}, {"sha": "7e403d8d6860f5cb107e7f6d97ef5aa5356d6079", "filename": "libjava/classpath/examples/gnu/classpath/examples/midi/Demo.java", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmidi%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmidi%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmidi%2FDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,137 @@\n+/* Demo.java -- And example of MIDI support\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA. */\n+\n+package gnu.classpath.examples.midi;\n+\n+import java.awt.*;\n+import java.awt.event.*;\n+import java.util.*;\n+import javax.sound.midi.*;\n+\n+/**\n+ * An example how javax.sound.midi facilities work.\n+ */\n+public class Demo extends Frame implements ItemListener\n+{\n+  Choice midiInChoice = new Choice();\n+  Choice midiOutChoice = new Choice();\n+\n+  MidiDevice inDevice = null;\n+  MidiDevice outDevice = null;\n+  \n+  ArrayList inDevices = new ArrayList();\n+  ArrayList outDevices = new ArrayList();\n+\n+  public Demo () throws Exception\n+  {\n+    MenuBar mb = new MenuBar ();\n+    Menu menu = new Menu (\"File\");\n+    MenuItem quit = new MenuItem(\"Quit\", new MenuShortcut('Q'));\n+    quit.addActionListener(new ActionListener()\n+      {\n+\tpublic void actionPerformed(ActionEvent e)\n+\t{\n+\t  System.exit(0);\n+\t}\n+      });\n+    menu.add (quit);\n+    mb.add(menu);\n+    \n+    setTitle(\"synthcity: the GNU Classpath MIDI Demo\");\n+    setLayout(new FlowLayout());\n+    \n+    MidiDevice.Info[] infos = MidiSystem.getMidiDeviceInfo();\n+\n+    for (int i = 0; i < infos.length; i++)\n+      {\n+\tMidiDevice device = MidiSystem.getMidiDevice(infos[i]);\n+\tif (device.getMaxReceivers() > 0)\n+\t  {\n+\t    midiOutChoice.addItem(infos[i].getDescription());\n+\t    outDevices.add(device);\n+\t  }\n+\tif (device.getMaxTransmitters() > 0)\n+\t  {\n+\t    midiInChoice.addItem(infos[i].getDescription());\n+\t    inDevices.add(device);\n+\t  }\n+      }\n+\n+    setMenuBar (mb);\n+    add(new Label(\"MIDI IN: \"));\n+    add(midiInChoice);\n+    add(new Label(\"   MIDI OUT: \"));\n+    add(midiOutChoice);\n+\n+    midiInChoice.addItemListener(this);\n+    midiOutChoice.addItemListener(this);\n+\n+    pack();\n+    show();\n+  }\n+  \n+  public void itemStateChanged (ItemEvent e)\n+  {\n+    try\n+      {\n+\tif (e.getItemSelectable() == midiInChoice)\n+\t  {\n+\t    if (inDevice != null)\n+\t      inDevice.close();\n+\t    inDevice =  (MidiDevice) \n+\t      inDevices.get(midiInChoice.getSelectedIndex());\n+\t  }\n+\t\n+\tif (e.getItemSelectable() == midiOutChoice)\n+\t  {\n+\t    if (outDevice != null)\n+\t      outDevice.close();\n+\t    outDevice = (MidiDevice)\n+\t      outDevices.get(midiOutChoice.getSelectedIndex());\n+\t  }\n+\t\n+\tif (inDevice != null && outDevice != null)\n+\t  {\n+\t    if (! inDevice.isOpen())\n+\t      inDevice.open();\n+\t    if (! outDevice.isOpen())\n+\t      outDevice.open();\n+\t    Transmitter t = inDevice.getTransmitter();\n+\t    if (t == null)\n+\t      System.err.println (inDevice + \".getTransmitter() == null\");\n+\t    Receiver r = outDevice.getReceiver();\n+\t    if (r == null)\n+\t      System.err.println (outDevice + \".getReceiver() == null\");\n+\t    \n+\t    if (t != null && r != null)\n+\t      t.setReceiver (r);\n+\t  }\n+      }\n+    catch (Exception ex)\n+      {\n+\tex.printStackTrace();\n+      }\n+  }\n+\n+  public static void main (String args[]) throws Exception\n+    {\n+      new Demo();\n+    }\n+}"}, {"sha": "b53ba3b5c85dbd8c467b3818e813119b09f1e221", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ButtonDemo.java", "status": "added", "additions": 284, "deletions": 0, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,284 @@\n+/* ButtonDemo.java -- An example showing various buttons in Swing.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JToggleButton;\n+import javax.swing.SwingConstants;\n+import javax.swing.plaf.metal.MetalIconFactory;\n+\n+/**\n+ * A simple button demo showing various buttons in different states.\n+ */\n+public class ButtonDemo \n+  extends JFrame \n+  implements ActionListener \n+{\n+ \n+  private JCheckBox buttonState;  \n+  private JButton button1;\n+  private JButton button2;\n+  private JButton button3;\n+  private JButton button4;\n+\n+  private JCheckBox toggleState;    \n+  private JToggleButton toggle1;\n+  private JToggleButton toggle2;\n+  private JToggleButton toggle3;\n+  private JToggleButton toggle4;\n+    \n+  private JCheckBox checkBoxState;\n+  private JCheckBox checkBox1;\n+  private JCheckBox checkBox2;\n+  private JCheckBox checkBox3;\n+\n+  private JCheckBox radioState;\n+  private JRadioButton radio1;\n+  private JRadioButton radio2;\n+  private JRadioButton radio3;\n+\n+  /**\n+   * Creates a new demo instance.\n+   * \n+   * @param title  the frame title.\n+   */\n+  public ButtonDemo(String title) \n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+\n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    JPanel content = new JPanel(new BorderLayout());\n+    JPanel panel = new JPanel(new GridLayout(4, 1));\n+    panel.add(createButtonPanel());\n+    panel.add(createTogglePanel());\n+    panel.add(createCheckBoxPanel());\n+    panel.add(createRadioPanel());\n+    content.add(panel);\n+    return content;        \n+  }\n+    \n+  private JPanel createButtonPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.buttonState = new JCheckBox(\"Enabled\", true);\n+    this.buttonState.setActionCommand(\"BUTTON_STATE\");\n+    this.buttonState.addActionListener(this);\n+    panel.add(this.buttonState, BorderLayout.EAST);\n+        \n+    JPanel buttonPanel = new JPanel();\n+    buttonPanel.setBorder(BorderFactory.createTitledBorder(\"JButton\"));\n+    this.button1 = new JButton(\"Button 1\");\n+        \n+    this.button2 = new JButton(\"Button 2\");\n+    this.button2.setIcon(MetalIconFactory.getInternalFrameDefaultMenuIcon());\n+        \n+    this.button3 = new JButton(\"Button 3\");\n+    this.button3.setIcon(MetalIconFactory.getFileChooserHomeFolderIcon());\n+    this.button3.setHorizontalTextPosition(SwingConstants.CENTER);\n+    this.button3.setVerticalTextPosition(SwingConstants.BOTTOM);\n+        \n+    this.button4 = new JButton(\"Button 4\");\n+    this.button4.setIcon(MetalIconFactory.getFileChooserUpFolderIcon());\n+    this.button4.setText(null);\n+        \n+    buttonPanel.add(button1);\n+    buttonPanel.add(button2);\n+    buttonPanel.add(button3);\n+    buttonPanel.add(button4);\n+        \n+    panel.add(buttonPanel);\n+     \n+    return panel;\n+  }\n+    \n+  private JPanel createTogglePanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+       \n+    this.toggleState = new JCheckBox(\"Enabled\", true);\n+    this.toggleState.setActionCommand(\"TOGGLE_STATE\");\n+    this.toggleState.addActionListener(this);\n+        \n+    panel.add(this.toggleState, BorderLayout.EAST);\n+        \n+    JPanel buttonPanel = new JPanel();\n+    buttonPanel.setBorder(BorderFactory.createTitledBorder(\"JToggleButton\"));\n+        \n+    this.toggle1 = new JToggleButton(\"Toggle 1\");\n+        \n+    this.toggle2 = new JToggleButton(\"Toggle 2\");\n+    this.toggle2.setIcon(MetalIconFactory.getInternalFrameDefaultMenuIcon());\n+        \n+    this.toggle3 = new JToggleButton(\"Toggle 3\");\n+    this.toggle3.setIcon(MetalIconFactory.getFileChooserHomeFolderIcon());\n+    this.toggle3.setHorizontalTextPosition(SwingConstants.CENTER);\n+    this.toggle3.setVerticalTextPosition(SwingConstants.BOTTOM);\n+        \n+    this.toggle4 = new JToggleButton(\"Toggle 4\");\n+    this.toggle4.setIcon(MetalIconFactory.getFileChooserUpFolderIcon());\n+    this.toggle4.setText(null);\n+\n+    ButtonGroup toggleGroup = new ButtonGroup();\n+    toggleGroup.add(toggle1);\n+    toggleGroup.add(toggle2);\n+    toggleGroup.add(toggle3);\n+    toggleGroup.add(toggle4);\n+        \n+    buttonPanel.add(toggle1);\n+    buttonPanel.add(toggle2);\n+    buttonPanel.add(toggle3);\n+    buttonPanel.add(toggle4);\n+        \n+    panel.add(buttonPanel);\n+      \n+    return panel;\n+  }\n+\n+  private JPanel createCheckBoxPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+      \n+    this.checkBoxState = new JCheckBox(\"Enabled\", true);\n+    this.checkBoxState.setActionCommand(\"CHECKBOX_STATE\");\n+    this.checkBoxState.addActionListener(this);\n+        \n+    panel.add(this.checkBoxState, BorderLayout.EAST);\n+        \n+    JPanel buttonPanel = new JPanel();\n+    buttonPanel.setBorder(BorderFactory.createTitledBorder(\"JCheckBox\"));\n+    this.checkBox1 = new JCheckBox(\"CheckBox 1\");\n+        \n+    this.checkBox2 = new JCheckBox(\"CheckBox 2\");\n+       \n+    this.checkBox3 = new JCheckBox(\"CheckBox 3\");\n+                \n+    buttonPanel.add(checkBox1);\n+    buttonPanel.add(checkBox2);\n+    buttonPanel.add(checkBox3);\n+        \n+    panel.add(buttonPanel);\n+        \n+    return panel;\n+  }\n+\n+  private JPanel createRadioPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+        \n+    this.radioState = new JCheckBox(\"Enabled\", true);\n+    this.radioState.setActionCommand(\"RADIO_STATE\");\n+    this.radioState.addActionListener(this);\n+    panel.add(this.radioState, BorderLayout.EAST);\n+        \n+    JPanel buttonPanel = new JPanel();\n+    buttonPanel.setBorder(BorderFactory.createTitledBorder(\"JRadioButton\"));\n+    this.radio1 = new JRadioButton(\"Radio 1\");\n+        \n+    this.radio2 = new JRadioButton(\"Radio 2\");\n+        \n+    this.radio3 = new JRadioButton(\"Radio 3\");\n+        \n+    ButtonGroup radioGroup = new ButtonGroup();\n+    radioGroup.add(radio1);\n+    radioGroup.add(radio2);\n+    radioGroup.add(radio3);\n+        \n+    buttonPanel.add(radio1);\n+    buttonPanel.add(radio2);\n+    buttonPanel.add(radio3);\n+        \n+    panel.add(buttonPanel);\n+       \n+    return panel;\n+  }\n+    \n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"BUTTON_STATE\")) \n+    {\n+      button1.setEnabled(buttonState.isSelected());\n+      button2.setEnabled(buttonState.isSelected());\n+      button3.setEnabled(buttonState.isSelected());\n+      button4.setEnabled(buttonState.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"TOGGLE_STATE\")) \n+    {\n+      toggle1.setEnabled(toggleState.isSelected());\n+      toggle2.setEnabled(toggleState.isSelected());\n+      toggle3.setEnabled(toggleState.isSelected());\n+      toggle4.setEnabled(toggleState.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"CHECKBOX_STATE\")) \n+    {\n+      checkBox1.setEnabled(checkBoxState.isSelected());\n+      checkBox2.setEnabled(checkBoxState.isSelected());\n+      checkBox3.setEnabled(checkBoxState.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"RADIO_STATE\")) \n+    {\n+      radio1.setEnabled(radioState.isSelected());\n+      radio2.setEnabled(radioState.isSelected());\n+      radio3.setEnabled(radioState.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+  }\n+\n+  public static void main(String[] args) \n+  {\n+    ButtonDemo app = new ButtonDemo(\"Button Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "7d041a0b0e7fe675c0b3fdbf24b0061a99d1eb41", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ClasspathSwingActivityBoard.launch", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FClasspathSwingActivityBoard.launch?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<launchConfiguration type=\"org.eclipse.cdt.launch.localCLaunch\">\n+<stringAttribute key=\"org.eclipse.cdt.launch.DEBUGGER_ID\" value=\"org.eclipse.cdt.debug.mi.core.CDebugger\"/>\n+<stringAttribute key=\"org.eclipse.cdt.launch.protocol\" value=\"mi\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.debug.mi.core.STOP_ON_SOLIB_EVENTS\" value=\"false\"/>\n+<stringAttribute key=\"org.eclipse.cdt.launch.DEBUGGER_START_MODE\" value=\"run\"/>\n+<listAttribute key=\"org.eclipse.cdt.debug.mi.core.SOLIB_PATH\"/>\n+<booleanAttribute key=\"org.eclipse.debug.core.appendEnvironmentVariables\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.launch.ENABLE_REGISTER_BOOKKEEPING\" value=\"false\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.debug.mi.core.AUTO_SOLIB\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.launch.DEBUGGER_STOP_AT_MAIN\" value=\"true\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.launch.use_terminal\" value=\"true\"/>\n+<stringAttribute key=\"org.eclipse.cdt.launch.PROJECT_ATTR\" value=\"jamvm\"/>\n+<booleanAttribute key=\"org.eclipse.cdt.launch.ENABLE_VARIABLE_BOOKKEEPING\" value=\"false\"/>\n+<stringAttribute key=\"org.eclipse.cdt.debug.mi.core.DEBUG_NAME\" value=\"gdb\"/>\n+<stringAttribute key=\"org.eclipse.cdt.launch.PROGRAM_NAME\" value=\"src/jamvm\"/>\n+<stringAttribute key=\"org.eclipse.cdt.launch.PROGRAM_ARGUMENTS\" value=\"-Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel gnu.classpath.examples.swing.Demo\"/>\n+<stringAttribute key=\"org.eclipse.cdt.debug.mi.core.GDB_INIT\" value=\"\"/>\n+</launchConfiguration>"}, {"sha": "52431cb5d53e9d3dd304ad10089813e0e6f2be1c", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ComboBoxDemo.java", "status": "added", "additions": 360, "deletions": 0, "changes": 360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,360 @@\n+/* ComboBoxDemo.java -- An example showing various combo boxes in Swing.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListCellRenderer;\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.metal.MetalIconFactory;\n+\n+/**\n+ * A simple demo showing various combo boxes in different states.\n+ */\n+public class ComboBoxDemo \n+  extends JFrame \n+  implements ActionListener \n+{\n+ \n+  class CustomCellRenderer extends DefaultListCellRenderer\n+  {\n+    public Component getListCellRendererComponent(JList list,\n+                                              Object value,\n+                                              int index,\n+                                              boolean isSelected,\n+                                              boolean cellHasFocus)\n+    {\n+      DefaultListCellRenderer result = (DefaultListCellRenderer) \n+          super.getListCellRendererComponent(list, value, index, isSelected, \n+\t  cellHasFocus);\n+      Icon icon = (Icon) value;\n+      result.setIcon(icon);\n+      result.setText(\"Index = \" + index);\n+      return result;\n+    }\n+  }\n+\n+  private JCheckBox comboState1;  \n+  private JComboBox combo1;\n+  private JComboBox combo2;\n+\n+  private JCheckBox comboState2;    \n+  private JComboBox combo3;\n+  private JComboBox combo4;\n+    \n+  private JCheckBox comboState3;    \n+  private JComboBox combo5;\n+  private JComboBox combo6;\n+\n+  private JCheckBox comboState4;    \n+  private JComboBox combo7;\n+  private JComboBox combo8;\n+\n+  private JCheckBox comboState5;    \n+  private JComboBox combo9;\n+  private JComboBox combo10;\n+  \n+  private JCheckBox comboState6;\n+  private JComboBox combo11;\n+  private JComboBox combo12;\n+  \n+  /**\n+   * Creates a new demo instance.\n+   * \n+   * @param title  the frame title.\n+   */\n+  public ComboBoxDemo(String title) \n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+       \n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    JPanel content = new JPanel(new BorderLayout());\n+    JPanel panel = new JPanel(new GridLayout(6, 1));\n+    panel.add(createPanel1());\n+    panel.add(createPanel2());\n+    panel.add(createPanel3());\n+    panel.add(createPanel4());\n+    panel.add(createPanel5());\n+    panel.add(createPanel6());\n+    content.add(panel);\n+    return content;        \n+  }\n+    \n+  private JPanel createPanel1() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState1 = new JCheckBox(\"Enabled\", true);\n+    this.comboState1.setActionCommand(\"COMBO_STATE1\");\n+    this.comboState1.addActionListener(this);\n+    panel.add(this.comboState1, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Regular: \"));\n+    this.combo1 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+        \n+    this.combo2 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+    this.combo2.setEditable(true);\n+        \n+    controlPanel.add(combo1);\n+    controlPanel.add(combo2);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+    \n+  private JPanel createPanel2() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState2 = new JCheckBox(\"Enabled\", true);\n+    this.comboState2.setActionCommand(\"COMBO_STATE2\");\n+    this.comboState2.addActionListener(this);\n+    panel.add(this.comboState2, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Large Font: \"));\n+    this.combo3 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+    this.combo3.setFont(new Font(\"Dialog\", Font.PLAIN, 20));\n+        \n+    this.combo4 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+    this.combo4.setEditable(true);\n+    this.combo4.setFont(new Font(\"Dialog\", Font.PLAIN, 20));\n+        \n+    controlPanel.add(combo3);\n+    controlPanel.add(combo4);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+\n+  private JPanel createPanel3() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState3 = new JCheckBox(\"Enabled\", true);\n+    this.comboState3.setActionCommand(\"COMBO_STATE3\");\n+    this.comboState3.addActionListener(this);\n+    panel.add(this.comboState3, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Colored Background: \"));\n+    this.combo5 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+    this.combo5.setBackground(Color.yellow);\n+    \n+    this.combo6 = new JComboBox(new Object[] {\"Australia\", \"New Zealand\", \n+            \"England\"});\n+    this.combo6.setEditable(true);\n+    this.combo6.setBackground(Color.yellow);\n+        \n+    controlPanel.add(combo5);\n+    controlPanel.add(combo6);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+    \n+  /**\n+   * This panel contains combo boxes that are empty.\n+   * \n+   * @return A panel.\n+   */\n+  private JPanel createPanel4() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState4 = new JCheckBox(\"Enabled\", true);\n+    this.comboState4.setActionCommand(\"COMBO_STATE4\");\n+    this.comboState4.addActionListener(this);\n+    panel.add(this.comboState4, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Empty: \"));\n+    this.combo7 = new JComboBox();\n+    this.combo8 = new JComboBox();\n+    this.combo8.setEditable(true);\n+        \n+    controlPanel.add(combo7);\n+    controlPanel.add(combo8);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+    \n+  /**\n+   * This panel contains combo boxes that are narrow but contain long text \n+   * items.\n+   * \n+   * @return A panel.\n+   */\n+  private JPanel createPanel5() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState5 = new JCheckBox(\"Enabled\", true);\n+    this.comboState5.setActionCommand(\"COMBO_STATE5\");\n+    this.comboState5.addActionListener(this);\n+    panel.add(this.comboState5, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Narrow: \"));\n+    this.combo9 = new JComboBox(new Object[] {\n+            \"A really long item that will be truncated when displayed\"});\n+    this.combo9.setPreferredSize(new Dimension(100, 30));\n+    this.combo10 = new JComboBox(new Object[] {\n+            \"A really long item that will be truncated when displayed\"});\n+    this.combo10.setPreferredSize(new Dimension(100, 30));\n+    this.combo10.setEditable(true);\n+        \n+    controlPanel.add(combo9);\n+    controlPanel.add(combo10);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+\n+  /**\n+   * This panel contains combo boxes with a custom renderer.\n+   * \n+   * @return A panel.\n+   */\n+  private JPanel createPanel6() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.comboState6 = new JCheckBox(\"Enabled\", true);\n+    this.comboState6.setActionCommand(\"COMBO_STATE6\");\n+    this.comboState6.addActionListener(this);\n+    panel.add(this.comboState6, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Custom Renderer: \"));\n+    this.combo11 = new JComboBox(new Object[] {\n+            MetalIconFactory.getFileChooserHomeFolderIcon(),\n+            MetalIconFactory.getFileChooserNewFolderIcon()});\n+    this.combo11.setPreferredSize(new Dimension(100, 30));\n+    this.combo11.setRenderer(new CustomCellRenderer());\n+    this.combo12 = new JComboBox(new Object[] {\n+            MetalIconFactory.getFileChooserHomeFolderIcon(),\n+            MetalIconFactory.getFileChooserNewFolderIcon()});\n+    this.combo12.setPreferredSize(new Dimension(100, 30));\n+    this.combo12.setRenderer(new CustomCellRenderer());\n+    this.combo12.setEditable(true);\n+        \n+    controlPanel.add(combo11);\n+    controlPanel.add(combo12);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+\n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"COMBO_STATE1\")) \n+    {\n+      combo1.setEnabled(comboState1.isSelected());\n+      combo2.setEnabled(comboState1.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE2\")) \n+    {\n+      combo3.setEnabled(comboState2.isSelected());\n+      combo4.setEnabled(comboState2.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE3\")) \n+    {\n+      combo5.setEnabled(comboState3.isSelected());\n+      combo6.setEnabled(comboState3.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE4\")) \n+    {\n+      combo7.setEnabled(comboState4.isSelected());\n+      combo8.setEnabled(comboState4.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE5\")) \n+    {\n+      combo9.setEnabled(comboState5.isSelected());\n+      combo10.setEnabled(comboState5.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE6\")) \n+    {\n+      combo11.setEnabled(comboState6.isSelected());\n+      combo12.setEnabled(comboState6.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+  }\n+\n+  public static void main(String[] args) \n+  {\n+    try\n+    {\n+      UIManager.setLookAndFeel(new javax.swing.plaf.metal.MetalLookAndFeel());\n+    }\n+    catch (Exception e) {\n+        e.printStackTrace();\n+    }\n+    ComboBoxDemo app = new ComboBoxDemo(\"ComboBox Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "549a42e4b9991a17cc91eeef5cf3a7bba97db573", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/Demo.java", "status": "modified", "additions": 112, "deletions": 102, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -24,20 +24,16 @@\n \n import java.awt.*;\n import java.awt.event.*;\n-import java.awt.font.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n \n import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-import javax.swing.plaf.metal.MetalLookAndFeel;\n import javax.swing.tree.*;\n import javax.swing.border.*;\n \n+import javax.swing.plaf.metal.DefaultMetalTheme;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+import javax.swing.plaf.metal.OceanTheme;\n+\n import java.net.URL;\n-import java.util.*;\n \n public class Demo\n {\n@@ -51,26 +47,44 @@\n         if (System.getProperty(\"swing.defaultlaf\") == null)\n           {\n             StringBuffer text = new StringBuffer();\n-            text.append(\"\\tYou may change the Look and Feel of this\\n\");\n-            text.append(\"\\tDemo by setting the system property\\n\");\n-            text.append(\"\\t-Dswing.defaultlaf=<LAFClassName>\\n\\n\");\n-            text.append(\"\\tPossible values for <LAFClassName> are:\\n\");\n-            text.append(\"\\t  * javax.swing.plaf.metal.MetalLookAndFeel\\n\");\n-            text.append(\"\\t\\tthe default Java L&F\\n\");\n-            text.append(\"\\t  * gnu.classpath.examples.swing.GNULookAndFeel\\n\");\n-            text.append(\"\\tthe GNU Look and Feel\\n\");\n-            text.append(\"\\t(derived from javax.swing.plaf.basic.BasicLookAndFeel\\n\\n\");\n-            text.append(\"\\tthe default is gnu.classpath.examples.swing.GNULookAndFeel\\n\");\n-            JEditorPane textPane = new JEditorPane();\n-            // temporary hack, preferred size should be computed by the\n-            // component\n-            textPane.setPreferredSize(new Dimension(400, 300));\n-            textPane.setText(text.toString());\n-            JOptionPane.showMessageDialog(null, textPane,\n-                                          \"Look and Feel notice\",\n-                                          JOptionPane.INFORMATION_MESSAGE);\n-            \n-            UIManager.setLookAndFeel(new GNULookAndFeel());\n+            text.append(\"You may change the Look and Feel of this\\n\");\n+            text.append(\"Demo by setting the system property\\n\");\n+            text.append(\"-Dswing.defaultlaf=<LAFClassName>\\n\");\n+\t    text.append(\"\\n\");\n+            text.append(\"Possible values for <LAFClassName> are:\\n\");\n+\t    text.append(\"\\n\");\n+            text.append(\"* javax.swing.plaf.metal.MetalLookAndFeel\\n\");\n+            text.append(\"  the default GNU Classpath L&F\\n\");\n+\t    text.append(\"\\n\");\n+            text.append(\"* gnu.classpath.examples.swing.GNULookAndFeel\\n\");\n+            text.append(\"  the GNU Look and Feel\\n\");\n+            text.append(\"  (derived from javax.swing.plaf.basic.BasicLookAndFeel)\\n\");\n+\t    text.append(\"\\n\");\n+            text.append(\"MetalLookAndFeel supports different Themes.\\n\");\n+\t    text.append(\"DefaultMetalTheme (the default) and OceanTheme (in development)\\n\");\n+\n+\t    final String DEFAULT = \"MetalLookAndFeel (default)\";\n+\t    final String OCEAN = \"MetalLookAndFeel (Ocean)\";\n+\t    final String GNU = \"GNULookAndFeel\";\n+\t    final String[] lafs = new String[] { DEFAULT, OCEAN, GNU };\n+\n+\t    int laf = JOptionPane.showOptionDialog(null, text /* textPane */,\n+\t\t\t\t\t\t   \"Look and Feel choice\",\n+\t\t\t\t\t\t   JOptionPane.OK_OPTION,\n+\t\t\t\t\t\t   JOptionPane.QUESTION_MESSAGE,\n+\t\t\t\t\t\t   null, lafs, DEFAULT);\n+        if (laf == 0)\n+          {\n+            MetalLookAndFeel.setCurrentTheme(new DefaultMetalTheme());\n+            UIManager.setLookAndFeel(new MetalLookAndFeel());\n+          }\n+\t    if (laf == 1)\n+\t      {\n+\t        MetalLookAndFeel.setCurrentTheme(new OceanTheme());\n+\t        UIManager.setLookAndFeel(new MetalLookAndFeel());\n+\t      }\n+\t    else if (laf == 2)\n+\t      UIManager.setLookAndFeel(new GNULookAndFeel());\n           }\n       }\n     catch (UnsupportedLookAndFeelException e)\n@@ -147,10 +161,7 @@ public void actionPerformed(ActionEvent e)\n \n     JMenu examples = new JMenu(\"Examples\");\n     new PopUpAction(\"Buttons\",\n-\t\t    mkPanel(new JComponent[]\n-\t\t\t{mkBigButton(\"mango\"), \n-\t\t\t mkBigButton(\"guava\"),\n-\t\t\t mkBigButton(\"lemon\")}),\n+\t\t    (new ButtonDemo(\"Button Demo\")).createContent(),\n \t\t    examples);\n     \n     new PopUpAction(\"Toggles\",\n@@ -166,9 +177,13 @@ public void actionPerformed(ActionEvent e)\n \t\t    examples);\n \n     new PopUpAction(\"Slider\",\n-\t\t    mkSliders(),\n+\t\t    (new SliderDemo(\"Slider Demo\")).createContent(),\n \t\t    examples);\n \n+    new PopUpAction(\"ProgressBar\",\n+                    ProgressBarDemo.createContent(),\n+                    examples);\n+\n     new PopUpAction(\"List\",\n \t\t    mkListPanel(new String[] { \"hello\",\n \t\t\t\t\t       \"this\",\n@@ -181,16 +196,16 @@ public void actionPerformed(ActionEvent e)\n \t\t    examples);\n \n     new PopUpAction(\"Scrollbar\",\n-\t\t    mkScrollBar(),\n+\t\t    (new ScrollBarDemo(\"ScrollBarDemo\")).createContent(),\n \t\t    examples);\n \n     new PopUpAction(\"Viewport\",\n \t\t    mkViewportBox(mkBigButton(\"View Me!\")),\n \t\t    examples);\n \n     new PopUpAction(\"ScrollPane\",\n-\t\t    mkScrollPane(mkBigButton(\"Scroll Me!\")),\n-\t\t    examples);\n+                    mkScrollPane(mkBigButton(\"Scroll Me!\")),\n+                    examples);\n \n     new PopUpAction(\"TabPane\",\n \t\t    mkTabs(new String[] {\"happy\",\n@@ -203,19 +218,19 @@ public void actionPerformed(ActionEvent e)\n \t\t    examples);\n \n     new PopUpAction(\"TextField\",\n-\t\t    mkTextField(\"Hello, World!\"),\n+\t\t    (new TextFieldDemo(\"TextField Demo\")).createContent(),\n \t\t    examples);\n \n+    new PopUpAction(\"FileChooser\",\n+                    (new FileChooserDemo(\"FileChooser Demo\")).createContent(),\n+                    examples);\n+\n     new PopUpAction(\"ColorChooser\",\n \t\t    mkColorChooser(),\n \t\t    examples);\n \n     new PopUpAction(\"ComboBox\",\n-\t\t    mkComboBox(new String[] {\"Stop\",\n-\t\t\t\t\t     \"Software\",\n-\t\t\t\t\t     \"Hoarders\",\n-\t\t\t\t\t     \"Support\",\n-\t\t\t\t\t     \"GNU!\"}),\n+\t\t    (new ComboBoxDemo(\"ComboBox Demo\")).createContent(),\n \t\t    examples);\n \n     new PopUpAction(\"Editor\",\n@@ -317,6 +332,7 @@ else if (title == null)\n     else\n       b = new JButton(title, icon);\n     \n+    b.setToolTipText(title);\n     if (hAlign != -1) b.setHorizontalAlignment(hAlign);\n     if (vAlign != -1) b.setVerticalAlignment(vAlign);\n     if (hPos != -1) b.setHorizontalTextPosition(hPos);\n@@ -640,6 +656,14 @@ public void actionPerformed(ActionEvent e)\n     panel.add(but, BorderLayout.NORTH);\n     but.doClick();\n     but.doClick();\n+    JInternalFrame palette = new JInternalFrame(\"Palette\", true, true, true, \n+        true);\n+    palette.putClientProperty(\"JInternalFrame.isPalette\", Boolean.TRUE);\n+    desk.add(palette, JDesktopPane.PALETTE_LAYER);\n+    JLabel label = new JLabel(\"This is a floating palette!\");\n+    palette.getContentPane().add(label);\n+    palette.pack();\n+    palette.setVisible(true);\n     return panel;\n   }\n \n@@ -678,26 +702,6 @@ static JTabbedPane mkTabbedPane()\n     return tabs;\n   }\n \n-  static JComponent mkSliders()\n-  {\n-    JSlider slider = new JSlider();\n-    slider.setPaintTrack(true);\n-    slider.setPaintTicks(true);\n-    slider.setMajorTickSpacing(30);\n-    slider.setMinorTickSpacing(5);\n-    slider.setPaintLabels(true);\n-    slider.setInverted(false);\n-    JProgressBar progress = new JProgressBar();\n-    BoundedRangeModel model = new DefaultBoundedRangeModel(10, 1, 0, 100);\n-    progress.setModel(model);\n-    slider.setModel(model);\n-    JPanel panel = new JPanel();\n-    panel.setLayout(new GridLayout(1, 2));\n-    panel.add(slider);\n-    panel.add(progress);\n-    return panel;\n-  }\n-\n   public Demo()\n   {\n     frame = new JFrame(\"Swing Activity Board\");\n@@ -735,11 +739,17 @@ public static JCheckBox mkCheckbox(String label)\n     return c;\n   }\n \n-  public static JRadioButton mkRadio(String label)\n+  public static JPanel mkRadio(String label)\n   {\n+    JPanel p = new JPanel();\n     JRadioButton c = new JRadioButton(label);\n-    c.setFont(new Font(\"Luxi\", Font.PLAIN, 14));\n-    return c;\n+    JRadioButton d = new JRadioButton(\"not \" + label);\n+    ButtonGroup bg = new ButtonGroup();\n+    bg.add(c);\n+    bg.add(d);\n+    p.add(c);\n+    p.add(d);\n+    return p;\n   }\n \n   public static JList mkList(Object[] elts)\n@@ -1002,31 +1012,34 @@ private static JTable mkTable()\n   \n   private JPanel mkButtonBar()\n   {    \n-    JPanel panel = new JPanel ();\n-    panel.setLayout(new FlowLayout());\n+    JPanel panel = new JPanel (new GridLayout(2, 1));\n+    JPanel panelA = new JPanel(new FlowLayout());\n+    JPanel panelB = new JPanel(new FlowLayout());\n \n     new PopUpAction(\"Buttons\",\n-\t\t    mkPanel(new JComponent[]\n-\t\t\t{mkBigButton(\"mango\"), \n-\t\t\t mkBigButton(\"guava\"),\n-\t\t\t mkBigButton(\"lemon\")}),\n-\t\t    panel);\n+\t\t    (new ButtonDemo(\"Button Demo\")).createContent(),\n+\t\t    panelA);\n     \n     new PopUpAction(\"Toggles\",\n \t\t    mkToggle(\"cool and refreshing\"),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"Checkbox\",\n \t\t    mkCheckbox(\"ice cold\"),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"Radio\",\n \t\t    mkRadio(\"delicious\"),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"Slider\",\n-\t\t    mkSliders(),\n-\t\t    panel);\n+\t\t    (new SliderDemo(\"Slider Demo\")).createContent(),\n+\t\t    panelA);\n+\n+    new PopUpAction(\"ProgressBar\",\n+            ProgressBarDemo.createContent(),\n+             panelA);\n+\n \n     new PopUpAction(\"List\",\n \t\t    mkListPanel(new String[] { \"hello\",\n@@ -1037,72 +1050,69 @@ private JPanel mkButtonBar()\n                                                \"that\",\n                                                \"wraps\",\n                                                \"over\"}),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"Scrollbar\",\n-\t\t    mkScrollBar(),\n-\t\t    panel);\n+\t\t    (new ScrollBarDemo(\"ScrollBar Demo\")).createContent(),\n+\t\t    panelA);\n \n     new PopUpAction(\"Viewport\",\n \t\t    mkViewportBox(mkBigButton(\"View Me!\")),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"ScrollPane\",\n \t\t    mkScrollPane(mkBigButton(\"Scroll Me!\")),\n-\t\t    panel);\n+\t\t    panelA);\n \n     new PopUpAction(\"TabPane\",\n \t\t    mkTabs(new String[] {\"happy\",\n \t\t\t\t\t \"sad\",\n \t\t\t\t\t \"indifferent\"}),\n-\t\t    panel);\n+\t\t    panelB);\n \n     new PopUpAction(\"Spinner\",\n \t\t    mkSpinner(),\n-\t\t    panel);\n+\t\t    panelB);\n \n     new PopUpAction(\"TextField\",\n-\t\t    mkTextField(\"Hello, World!\"),\n-\t\t    panel);\n+\t\t    (new TextFieldDemo(\"TextField Demo\")).createContent(),\n+\t\t    panelB);\n+\n+    new PopUpAction(\"FileChooser\",\n+                    (new FileChooserDemo(\"FileChooser Demo\")).createContent(),\n+                    panelB);\n \n     new PopUpAction(\"ColorChooser\",\n \t\t    mkColorChooser(),\n-\t\t    panel);\n+\t\t    panelB);\n \n     new PopUpAction(\"ComboBox\",\n-\t\t    mkComboBox(new String[] {\"Stop\",\n-\t\t\t\t\t     \"Software\",\n-\t\t\t\t\t     \"Hoarders\",\n-\t\t\t\t\t     \"Support\",\n-\t\t\t\t\t     \"GNU!\"}),\n-\t\t    panel);\n+\t\t    (new ComboBoxDemo(\"ComboBox Demo\")).createContent(),\n+\t\t    panelB);\n \n     new PopUpAction(\"Editor\",\n                     mkEditorPane(),\n-                    panel);\n+                    panelB);\n     \n     new PopUpAction(\"Tree\",\n                     mkTree(),\n-                    panel);\n+                    panelB);\n     \n     new PopUpAction(\"Table\",\n                     mkTable(),\n-                    panel);\n+                    panelB);\n     \n     JButton exitDisposer = mkDisposerButton(frame);\n-    panel.add(exitDisposer);\n+    panelB.add(exitDisposer);\n     exitDisposer.addActionListener(new ActionListener()\n       {\n \tpublic void actionPerformed(ActionEvent e)\n \t{\n \t  System.exit(1);\n \t}\n       });\n+    panel.add(panelA);\n+    panel.add(panelB);\n     return panel;\n   }\n-\n-  public static JTextField mkTextField(String sometext)\n-  {\n-    return new JTextField(sometext, 40);\n-  }\n }"}, {"sha": "70bb56d66cf7d4f1c79c52e3b490399cfcfb64e0", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/FileChooserDemo.java", "status": "added", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,228 @@\n+/* FileChooserDemo.java -- An example showing file choosers in Swing.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.io.File;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.filechooser.FileFilter;\n+\n+/**\n+ * A simple demo showing the {@link JFileChooser} component used in different\n+ * ways.\n+ */\n+public class FileChooserDemo extends JFrame implements ActionListener \n+{\n+  /**\n+   * A file filter for Java source files.\n+   */\n+  static class JavaFileFilter extends FileFilter\n+  {\n+    public String getDescription() \n+    {\n+      return \"Java Source Files (.java)\";\n+    }\n+    public boolean accept(File f)\n+    {\n+      if (f != null) \n+      {\n+        return f.getName().endsWith(\".java\") || f.isDirectory();\n+      }\n+      else \n+        return false;\n+    }\n+  }\n+    \n+  /** A label to display the selected file. */\n+  JLabel selectedFileLabel;\n+    \n+  /** \n+   * A list showing the selected files (where multi selections are \n+   * allowed). \n+   */\n+  JList selectedFilesList;\n+    \n+  /** A label to display the return code for the JFileChooser. */\n+  JLabel returnCodeLabel;\n+    \n+  /**\n+   * Creates a new demo instance. \n+   * \n+   * @param frameTitle  the frame title.\n+   */\n+  public FileChooserDemo(String frameTitle) \n+  {\n+    super(frameTitle);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+      \n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the\n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */\n+  JPanel createContent()\n+  {      \n+    JPanel panel = new JPanel(new BorderLayout());\n+     \n+    // create a panel of buttons to select the different styles of file \n+    // chooser...\n+    JPanel buttonPanel = new JPanel(new GridLayout(5, 1));\n+    JButton openButton = new JButton(\"Open...\");\n+    openButton.setActionCommand(\"OPEN\");\n+    openButton.addActionListener(this);\n+    buttonPanel.add(openButton);\n+    JButton saveButton = new JButton(\"Save...\");\n+    saveButton.setActionCommand(\"SAVE\");\n+    saveButton.addActionListener(this);\n+    buttonPanel.add(saveButton);\n+    JButton queryButton = new JButton(\"Select Directory...\");\n+    queryButton.setActionCommand(\"SELECT_DIRECTORY\");\n+    queryButton.addActionListener(this);\n+    buttonPanel.add(queryButton);\n+    JButton openJavaButton = new JButton(\"Open Java file...\");\n+    openJavaButton.setActionCommand(\"OPEN_JAVA\");\n+    openJavaButton.addActionListener(this);\n+    buttonPanel.add(openJavaButton);\n+    JButton openMultiButton = new JButton(\"Open multiple files...\");\n+    openMultiButton.setActionCommand(\"OPEN_MULTI\");\n+    openMultiButton.addActionListener(this);\n+    buttonPanel.add(openMultiButton);\n+    panel.add(buttonPanel, BorderLayout.WEST);\n+    \n+    // create a panel to display the selected file(s) and the return code\n+    JPanel displayPanel = new JPanel(new BorderLayout());\n+     \n+    selectedFileLabel = new JLabel(\"-\");\n+    selectedFileLabel.setBorder(BorderFactory.createTitledBorder(\"Selected File/Directory: \"));\n+    displayPanel.add(selectedFileLabel, BorderLayout.NORTH);\n+        \n+    selectedFilesList = new JList();\n+    JScrollPane sp = new JScrollPane(selectedFilesList);\n+    sp.setBorder(BorderFactory.createTitledBorder(\"Selected Files: \"));\n+    displayPanel.add(sp);\n+\n+    returnCodeLabel = new JLabel(\"0\");\n+    returnCodeLabel.setBorder(BorderFactory.createTitledBorder(\"Return Code:\"));\n+    displayPanel.add(returnCodeLabel, BorderLayout.SOUTH);\n+        \n+    panel.add(displayPanel);\n+    return panel;        \n+  }\n+    \n+  /**\n+   * When the user clicks on a button, launch the appropriate file chooser\n+   * and report the results.\n+   * \n+   * @param e  the event.\n+   */\n+  public void actionPerformed(ActionEvent e)\n+  {\n+    int option = 0;\n+    File selectedFile = null;\n+    File[] selectedFiles = new File[0];\n+    \n+    if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+    else if (e.getActionCommand().equals(\"OPEN\"))\n+      {\n+        JFileChooser chooser = new JFileChooser();\n+        option = chooser.showOpenDialog(this);\n+        selectedFile = chooser.getSelectedFile();\n+        selectedFiles = chooser.getSelectedFiles();\n+      }\n+    else if (e.getActionCommand().equals(\"OPEN_MULTI\"))\n+      {\n+        JFileChooser chooser = new JFileChooser();\n+        chooser.setMultiSelectionEnabled(true);\n+        option = chooser.showOpenDialog(this);\n+        selectedFile = chooser.getSelectedFile();\n+        selectedFiles = chooser.getSelectedFiles();\n+      }\n+    else if (e.getActionCommand().equals(\"OPEN_JAVA\"))\n+      {\n+        JFileChooser chooser = new JFileChooser();\n+        chooser.setAcceptAllFileFilterUsed(false);\n+        chooser.setFileFilter(new JavaFileFilter());\n+        option = chooser.showOpenDialog(this);\n+        selectedFile = chooser.getSelectedFile();\n+        selectedFiles = chooser.getSelectedFiles();\n+      }\n+    else if (e.getActionCommand().equals(\"SAVE\"))\n+      {\n+        JFileChooser chooser = new JFileChooser();\n+        option = chooser.showSaveDialog(this);\n+        selectedFile = chooser.getSelectedFile();\n+        selectedFiles = chooser.getSelectedFiles();\n+      }\n+    else if (e.getActionCommand().equals(\"SELECT_DIRECTORY\"))\n+      {\n+        JFileChooser chooser = new JFileChooser();\n+        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+        option = chooser.showDialog(this, \"Select\");\n+        selectedFile = chooser.getSelectedFile();\n+        selectedFiles = chooser.getSelectedFiles();\n+      }\n+     \n+    // display the selection and return code\n+    if (selectedFile != null)\n+      selectedFileLabel.setText(selectedFile.toString());\n+    else\n+      selectedFileLabel.setText(\"null\");\n+    DefaultListModel listModel = new DefaultListModel();\n+    for (int i = 0; i < selectedFiles.length; i++)\n+      listModel.addElement(selectedFiles[i]);\n+    selectedFilesList.setModel(listModel);\n+    returnCodeLabel.setText(Integer.toString(option));\n+  }\n+    \n+  public static void main(String[] args) \n+  {\n+    FileChooserDemo app = new FileChooserDemo(\"File Chooser Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "c8fd09d744c7da4f3a7fbf0e60dc64ca98edd921", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/GNULookAndFeel.java", "status": "modified", "additions": 182, "deletions": 2, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FGNULookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FGNULookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FGNULookAndFeel.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -22,8 +22,13 @@\n package gnu.classpath.examples.swing;\n \n import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Graphics;\n \n+import javax.swing.Icon;\n import javax.swing.ImageIcon;\n+import javax.swing.JCheckBox;\n+import javax.swing.JRadioButton;\n import javax.swing.UIDefaults;\n import javax.swing.plaf.ColorUIResource;\n import javax.swing.plaf.IconUIResource;\n@@ -64,8 +69,10 @@ public UIDefaults getDefaults()\n           \"MenuBar.background\", new ColorUIResource(blueGray),\n           \"MenuItem.background\", new ColorUIResource(blueGray),\n           \"ScrollBar.background\", new ColorUIResource(blueGray),\n-\n-\t  \"Tree.closedIcon\",\n+          \"CheckBox.icon\", new CheckBoxIcon(),\n+          \"RadioButton.icon\", new RadioButtonIcon(),\n+\t  \n+\t\"Tree.closedIcon\",\n \t  new IconUIResource(new ImageIcon\n \t\t\t     (getClass().getResource\n \t\t\t      (iconspath + \"TreeClosed.png\"))),\n@@ -82,4 +89,177 @@ public UIDefaults getDefaults()\n       }\n     return LAF_defaults;\n   }\n+  \n+  /**\n+   * The icon used for CheckBoxes in the BasicLookAndFeel. This is an empty\n+   * icon with a size of 13x13 pixels.\n+   */\n+  static class CheckBoxIcon\n+    implements Icon\n+  {\n+    /**\n+     * Returns the height of the icon. The BasicLookAndFeel CheckBox icon\n+     * has a height of 13 pixels.\n+     *\n+     * @return the height of the icon\n+     */\n+    public int getIconHeight()\n+    {\n+      return 13;\n+    }\n+\n+    /**\n+     * Returns the width of the icon. The BasicLookAndFeel CheckBox icon\n+     * has a width of 13 pixels.\n+     *\n+     * @return the height of the icon\n+     */\n+    public int getIconWidth()\n+    {\n+      return 13;\n+    }\n+\n+    /**\n+     * Paints the icon. The BasicLookAndFeel CheckBox icon is empty and does\n+     * not need to be painted.\n+     *\n+     * @param c the component to be painted\n+     * @param g the Graphics context to be painted with\n+     * @param x the x position of the icon\n+     * @param y the y position of the icon\n+     */\n+    public void paintIcon(Component c, Graphics g, int x, int y)\n+    {\n+      Color save = g.getColor();\n+      g.setColor(c.getForeground());\n+      g.drawRect(x, y, getIconWidth(), getIconHeight());    \n+      \n+      JCheckBox item = (JCheckBox) c;\n+      if (item.isSelected()) \n+        {\n+          g.drawLine(3 + x, 5 + y, 3 + x, 9 + y);\n+          g.drawLine(4 + x, 5 + y, 4 + x, 9 + y);\n+          g.drawLine(5 + x, 7 + y, 9 + x, 3 + y);\n+          g.drawLine(5 + x, 8 + y, 9 + x, 4 + y);\n+        }\n+      \n+      g.setColor(save);\n+    }\n+  }\n+  \n+  /**\n+   * The icon used for RadioButtons in the GNULookAndFeel. This is an empty\n+   * icon with a size of 13x13 pixels.\n+   */\n+  static class RadioButtonIcon\n+    implements Icon\n+  {\n+    /**\n+     * Returns the height of the icon. The GNULookAndFeel RadioButton icon\n+     * has a height of 13 pixels.\n+     *\n+     * @return the height of the icon\n+     */\n+    public int getIconHeight()\n+    {\n+      return 13;\n+    }\n+\n+    /**\n+     * Returns the width of the icon. The GNULookAndFeel RadioButton icon\n+     * has a width of 13 pixels.\n+     *\n+     * @return the height of the icon\n+     */\n+    public int getIconWidth()\n+    {\n+      return 13;\n+    }\n+\n+    /**\n+     * Paints the icon. The GNULookAndFeel RadioButton icon is empty and does\n+     * not need to be painted.\n+     *\n+     * @param c the component to be painted\n+     * @param g the Graphics context to be painted with\n+     * @param x the x position of the icon\n+     * @param y the y position of the icon\n+     */\n+    public void paintIcon(Component c, Graphics g, int x, int y)\n+    {\n+      Color savedColor = g.getColor();\n+      JRadioButton b = (JRadioButton) c;\n+      \n+      // draw outer circle\n+      if (b.isEnabled())\n+        g.setColor(Color.GRAY);\n+      else\n+        g.setColor(Color.GRAY);\n+      g.drawLine(x + 2, y + 1, x + 3, y + 1);\n+      g.drawLine(x + 4, y, x + 7, y);\n+      g.drawLine(x + 8, y + 1, x + 9, y + 1);\n+      g.drawLine(x + 10, y + 2, x + 10, y + 3);\n+      g.drawLine(x + 11, y + 4, x + 11, y + 7);\n+      g.drawLine(x + 10, y + 8, x + 10, y + 9);\n+      g.drawLine(x + 8, y + 10, x + 9, y + 10);\n+      g.drawLine(x + 4, y + 11, x + 7, y + 11);\n+      g.drawLine(x + 2, y + 10, x + 3, y + 10);\n+      g.drawLine(x + 1, y + 9, x + 1, y + 8);\n+      g.drawLine(x, y + 7, x, y + 4);\n+      g.drawLine(x + 1, y + 2, x + 1, y + 3);\n+\n+      if (b.getModel().isArmed())\n+        {\n+          g.setColor(Color.GRAY);\n+          g.drawLine(x + 4, y + 1, x + 7, y + 1);\n+          g.drawLine(x + 4, y + 10, x + 7, y + 10);\n+          g.drawLine(x + 1, y + 4, x + 1, y + 7);\n+          g.drawLine(x + 10, y + 4, x + 10, y + 7);\n+          g.fillRect(x + 2, y + 2, 8, 8);\n+        }\n+      else \n+        {\n+          // only draw inner highlight if not filled\n+          if (b.isEnabled())\n+            {\n+              g.setColor(Color.WHITE);\n+          \n+              g.drawLine(x + 2, y + 8, x + 2, y + 9);\n+              g.drawLine(x + 1, y + 4, x + 1, y + 7);\n+              g.drawLine(x + 2, y + 2, x + 2, y + 3);\n+              g.drawLine(x + 3, y + 2, x + 3, y + 2);\n+              g.drawLine(x + 4, y + 1, x + 7, y + 1);\n+              g.drawLine(x + 8, y + 2, x + 9, y + 2);\n+            }\n+        }\n+\n+      // draw outer highlight\n+      if (b.isEnabled())\n+        {\n+          g.setColor(Color.WHITE);\n+          \n+          // outer\n+          g.drawLine(x + 10, y + 1, x + 10, y + 1);\n+          g.drawLine(x + 11, y + 2, x + 11, y + 3);\n+          g.drawLine(x + 12, y + 4, x + 12, y + 7);\n+          g.drawLine(x + 11, y + 8, x + 11, y + 9);\n+          g.drawLine(x + 10, y + 10, x + 10, y + 10);\n+          g.drawLine(x + 8, y + 11, x + 9, y + 11);\n+          g.drawLine(x + 4, y + 12, x + 7, y + 12);\n+          g.drawLine(x + 2, y + 11, x + 3, y + 11);\n+        }\n+      \n+      if (b.isSelected())\n+        {\n+          if (b.isEnabled())\n+            g.setColor(Color.BLACK);\n+          else\n+            g.setColor(Color.GRAY);\n+          g.drawLine(x + 4, y + 3, x + 7, y + 3);\n+          g.fillRect(x + 3, y + 4, 6, 4);\n+          g.drawLine(x + 4, y + 8, x + 7, y + 8);\n+        }\n+      g.setColor(savedColor);\n+    }  \n+  }\n }"}, {"sha": "d62175bcd7935fde97ec37d1de9e81a17fb518ea", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ProgressBarDemo.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FProgressBarDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FProgressBarDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FProgressBarDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,219 @@\n+/* ProgressBarDemo.java -- A demonstration of JProgressBars\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JProgressBar;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+\n+public class ProgressBarDemo\n+  extends JFrame\n+  implements ActionListener\n+{\n+\n+  /**\n+   * Creates a new ProgressBarDemo window with the specified title.\n+   *\n+   * @param title the title of the program window\n+   */\n+  ProgressBarDemo(String title)\n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    getContentPane().add(content);\n+    getContentPane().add(closePanel, BorderLayout.SOUTH);\n+  }\n+\n+  static JPanel createContent()\n+  {\n+    JPanel content = new JPanel();\n+    content.setLayout(new BoxLayout(content, BoxLayout.Y_AXIS));\n+    JPanel horizontalProgressBar = createHorizontalProgressBar();\n+    content.add(horizontalProgressBar);\n+    content.add(Box.createVerticalStrut(10));\n+    JPanel verticalProgressBar = createVerticalProgressBar();\n+    content.add(verticalProgressBar);\n+    return content;\n+  }\n+\n+  private static JPanel createHorizontalProgressBar()\n+  {\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));\n+\n+    // Plain progress bar.\n+    final JProgressBar hor1 = new JProgressBar(JProgressBar.HORIZONTAL, 0, 100);\n+    panel.add(hor1);\n+    final JSlider slider1 = new JSlider(JSlider.HORIZONTAL, 0, 100, 0);\n+    slider1.addChangeListener(new ChangeListener()\n+      {\n+        public void stateChanged(ChangeEvent event)\n+        {\n+          hor1.setValue(slider1.getValue());\n+        }\n+      });\n+    panel.add(slider1);\n+\n+    panel.add(Box.createVerticalStrut(5));\n+\n+    // Plain progress bar with some text.\n+    final JProgressBar hor2 = new JProgressBar(JProgressBar.HORIZONTAL, 0, 100);\n+    hor2.setString(\"ProgressBar Demo\");\n+    hor2.setStringPainted(true);\n+    panel.add(hor2);\n+    final JSlider slider2 = new JSlider(JSlider.HORIZONTAL, 0, 100, 0);\n+    slider2.addChangeListener(new ChangeListener()\n+      {\n+        public void stateChanged(ChangeEvent event)\n+        {\n+          hor2.setValue(slider2.getValue());\n+        }\n+      });\n+    panel.add(slider2);\n+\n+    panel.add(Box.createVerticalStrut(5));\n+\n+    // Indeterminate progress bar.\n+    final JProgressBar hor3 = new JProgressBar(JProgressBar.HORIZONTAL, 0, 100);\n+    hor3.setIndeterminate(true);\n+    panel.add(hor3);\n+\n+    panel.add(Box.createVerticalStrut(5));\n+\n+    // Indeterminate progress bar with text.\n+    final JProgressBar hor4 = new JProgressBar(JProgressBar.HORIZONTAL, 0, 100);\n+    hor4.setIndeterminate(true);\n+    hor4.setString(\"Indeterminate ProgressBar\");\n+    hor4.setStringPainted(true);\n+    panel.add(hor4);\n+\n+    return panel;\n+  }\n+\n+  private static JPanel createVerticalProgressBar()\n+  {\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));\n+    final JProgressBar vert = new JProgressBar(JProgressBar.VERTICAL, 0, 100);\n+    panel.add(vert);\n+    final JSlider slider = new JSlider(JSlider.VERTICAL, 0, 100, 0);\n+    slider.addChangeListener(new ChangeListener()\n+      {\n+        public void stateChanged(ChangeEvent event)\n+        {\n+          vert.setValue(slider.getValue());\n+        }\n+      });\n+    panel.add(slider);\n+\n+    panel.add(Box.createHorizontalStrut(5));\n+\n+    final JProgressBar vert2 = new JProgressBar(JProgressBar.VERTICAL, 0, 100);\n+    vert2.setString(\"ProgressBar Demo\");\n+    panel.add(vert2);\n+    vert2.setStringPainted(true);\n+    final JSlider slider2 = new JSlider(JSlider.VERTICAL, 0, 100, 0);\n+    slider2.addChangeListener(new ChangeListener()\n+      {\n+        public void stateChanged(ChangeEvent event)\n+        {\n+          vert2.setValue(slider2.getValue());\n+        }\n+      });\n+    panel.add(slider2);\n+\n+    panel.add(Box.createHorizontalStrut(5));\n+\n+    // Indeterminate progress bar.\n+    final JProgressBar vert3 = new JProgressBar(JProgressBar.VERTICAL, 0, 100);\n+    vert3.setIndeterminate(true);\n+    panel.add(vert3);\n+\n+    panel.add(Box.createHorizontalStrut(5));\n+\n+    // Indeterminate progress bar with text.\n+    final JProgressBar vert4 = new JProgressBar(JProgressBar.VERTICAL, 0, 100);\n+    vert4.setIndeterminate(true);\n+    vert4.setString(\"Indeterminate ProgressBar\");\n+    vert4.setStringPainted(true);\n+    panel.add(vert4);\n+    return panel;\n+  }\n+\n+  public void actionPerformed(ActionEvent event)\n+  {\n+    // TODO Auto-generated method stub\n+    \n+  }\n+\n+  /**\n+   * The entry point when running as a standalone program.\n+   *\n+   * @param args command line arguments\n+   */\n+  public static void main(String[] args)\n+  {\n+    SwingUtilities.invokeLater(\n+      new Runnable()\n+        {\n+          public void run()\n+          {\n+            ProgressBarDemo app = new ProgressBarDemo(\"ProgressBar Demo\");\n+            app.pack();\n+            app.setVisible(true);\n+          }\n+        });\n+  }\n+}"}, {"sha": "fce137301d75e861b2b4bfb47399297e2846814b", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ScrollBarDemo.java", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,141 @@\n+/* ScrollBarDemo.java -- An example showing scroll bars in Swing.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+\n+/**\n+ * A simple scroll bar demo showing various scroll bars in different states.\n+ */\n+public class ScrollBarDemo \n+  extends JFrame \n+  implements ActionListener \n+{\n+\n+  /**\n+   * Creates a new demo instance.\n+   * \n+   * @param title  the frame title.\n+   */\n+  public ScrollBarDemo(String title) \n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+       \n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    JPanel content = new JPanel(new BorderLayout());\n+    JPanel panel = createScrollBarPanel();\n+    content.add(panel);\n+    return content;        \n+  }\n+    \n+  private JPanel createScrollBarPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    \n+    JPanel horizontalPanel = new JPanel();\n+        \n+    JScrollBar scroll1a = new JScrollBar(JScrollBar.HORIZONTAL);\n+    JScrollBar scroll1b = new JScrollBar(JScrollBar.HORIZONTAL);\n+    scroll1b.setEnabled(false);\n+    JScrollBar scroll1c = new JScrollBar(JScrollBar.HORIZONTAL);\n+    scroll1c.putClientProperty(\"JScrollBar.isFreeStanding\", Boolean.FALSE);\n+    JScrollBar scroll1d = new JScrollBar(JScrollBar.HORIZONTAL);\n+    scroll1d.putClientProperty(\"JScrollBar.isFreeStanding\", Boolean.FALSE);\n+    scroll1d.setEnabled(false);\n+    horizontalPanel.add(scroll1a);\n+    horizontalPanel.add(scroll1b);\n+    horizontalPanel.add(scroll1c);\n+    horizontalPanel.add(scroll1d);\n+        \n+    panel.add(horizontalPanel, BorderLayout.NORTH);\n+     \n+    JPanel verticalPanel = new JPanel();\n+    verticalPanel.setLayout(new GridLayout(1, 7));\n+        \n+    JScrollBar scroll2a = new JScrollBar(JScrollBar.VERTICAL);\n+    JScrollBar scroll2b = new JScrollBar(JScrollBar.VERTICAL);\n+    scroll2b.setEnabled(false);\n+    JScrollBar scroll2c = new JScrollBar(JScrollBar.VERTICAL);\n+    scroll2c.putClientProperty(\"JScrollBar.isFreeStanding\", Boolean.FALSE);\n+    JScrollBar scroll2d = new JScrollBar(JScrollBar.VERTICAL);\n+    scroll2d.setEnabled(false);\n+    scroll2d.putClientProperty(\"JScrollBar.isFreeStanding\", Boolean.FALSE);\n+      \n+    verticalPanel.add(scroll2a);\n+    verticalPanel.add(new JPanel());\n+    verticalPanel.add(scroll2b);\n+    verticalPanel.add(new JPanel());\n+    verticalPanel.add(scroll2c);\n+    verticalPanel.add(new JPanel());\n+    verticalPanel.add(scroll2d);\n+        \n+    panel.add(verticalPanel, BorderLayout.EAST);\n+        \n+    JPanel centerPanel = new JPanel(new GridLayout(1, 2));\n+    centerPanel.add(new JScrollBar(JScrollBar.HORIZONTAL));\n+    centerPanel.add(new JScrollBar(JScrollBar.VERTICAL));\n+    panel.add(centerPanel);\n+    return panel;        \n+  }\n+    \n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+  }\n+\n+  public static void main(String[] args) \n+  {\n+    ScrollBarDemo app = new ScrollBarDemo(\"ScrollBar Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "736024c48dad5f5eea6e01feffd2582d79099aa0", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/SliderDemo.java", "status": "added", "additions": 249, "deletions": 0, "changes": 249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,249 @@\n+/* SliderDemo.java -- An example showing JSlider in various configurations.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSlider;\n+\n+public class SliderDemo extends JFrame implements ActionListener \n+{\n+   \n+  JSlider hslider1;\n+  JSlider hslider2;\n+  JSlider hslider3;\n+  JSlider hslider4;\n+  JSlider hslider5;\n+  JSlider hslider6;\n+  JSlider hslider7;\n+  JSlider hslider8;\n+  \n+  JSlider vslider1;\n+  JSlider vslider2;\n+  JSlider vslider3;\n+  JSlider vslider4;\n+  JSlider vslider5;\n+  JSlider vslider6;\n+  JSlider vslider7;\n+  JSlider vslider8;\n+\n+  JCheckBox enabledCheckBox;\n+  \n+  public SliderDemo(String frameTitle) \n+  {\n+    super(frameTitle);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+       \n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    JPanel content = new JPanel(new BorderLayout());\n+    JPanel panel = new JPanel(new GridLayout(1, 2));\n+    panel.add(createHorizontalPanel());\n+    panel.add(createVerticalPanel());\n+    enabledCheckBox = new JCheckBox(\"Enabled\");\n+    enabledCheckBox.setSelected(true);\n+    enabledCheckBox.setActionCommand(\"TOGGLE_ENABLED\");\n+    enabledCheckBox.addActionListener(this);\n+    JPanel checkBoxPanel = new JPanel();\n+    checkBoxPanel.add(enabledCheckBox);\n+    JPanel panel2 = new JPanel(new BorderLayout());\n+    panel2.add(panel);\n+    panel2.add(checkBoxPanel, BorderLayout.SOUTH);\n+    content.add(panel2);\n+    return content;        \n+  }\n+    \n+  private JPanel createHorizontalPanel() \n+  {\n+    JPanel panel = new JPanel(new GridLayout(8, 1));\n+  \n+    hslider1 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    panel.add(hslider1);\n+        \n+    hslider2 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider2.setMajorTickSpacing(20);\n+    hslider2.setMinorTickSpacing(5);\n+    hslider2.setPaintTicks(true);\n+    panel.add(hslider2);\n+\n+    hslider3 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider3.setMajorTickSpacing(20);\n+    hslider3.setMinorTickSpacing(5);\n+    hslider3.setPaintLabels(true);\n+    hslider3.setPaintTicks(true);\n+    panel.add(hslider3);\n+\n+    hslider4 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider4.putClientProperty(\"JSlider.isFilled\", Boolean.TRUE);\n+    hslider4.setMajorTickSpacing(20);\n+    hslider4.setMinorTickSpacing(5);\n+    hslider4.setPaintLabels(true);\n+    hslider4.setPaintTicks(true);\n+    panel.add(hslider4);\n+\n+    hslider5 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider5.setInverted(true);\n+    panel.add(hslider5);\n+        \n+    hslider6 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider6.setInverted(true);\n+    hslider6.setMajorTickSpacing(20);\n+    hslider6.setMinorTickSpacing(5);\n+    hslider6.setPaintTicks(true);\n+    panel.add(hslider6);\n+\n+    hslider7 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider7.setInverted(true);\n+    hslider7.setMajorTickSpacing(20);\n+    hslider7.setMinorTickSpacing(5);\n+    hslider7.setPaintLabels(true);\n+    hslider7.setPaintTicks(true);\n+    panel.add(hslider7);\n+\n+    hslider8 = new JSlider(JSlider.HORIZONTAL, 0, 100, 35);\n+    hslider8.putClientProperty(\"JSlider.isFilled\", Boolean.TRUE);\n+    hslider8.setInverted(true);\n+    hslider8.setMajorTickSpacing(20);\n+    hslider8.setMinorTickSpacing(5);\n+    hslider8.setPaintLabels(true);\n+    hslider8.setPaintTicks(true);\n+    panel.add(hslider8);\n+\n+    return panel;\n+  }\n+    \n+  private JPanel createVerticalPanel() \n+  {\n+    JPanel panel = new JPanel(new GridLayout(1, 8));\n+  \n+    vslider1 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    panel.add(vslider1);\n+        \n+    vslider2 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider2.setMajorTickSpacing(20);\n+    vslider2.setMinorTickSpacing(5);\n+    vslider2.setPaintTicks(true);\n+    panel.add(vslider2);\n+\n+    vslider3 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider3.setMajorTickSpacing(20);\n+    vslider3.setMinorTickSpacing(5);\n+    vslider3.setPaintLabels(true);\n+    vslider3.setPaintTicks(true);\n+    panel.add(vslider3);\n+\n+    vslider4 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider4.putClientProperty(\"JSlider.isFilled\", Boolean.TRUE);\n+    vslider4.setMajorTickSpacing(20);\n+    vslider4.setMinorTickSpacing(5);\n+    vslider4.setPaintLabels(true);\n+    vslider4.setPaintTicks(true);\n+    panel.add(vslider4);\n+\n+    vslider5 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider5.setInverted(true);\n+    panel.add(vslider5);\n+        \n+    vslider6 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider6.setInverted(true);\n+    vslider6.setMajorTickSpacing(20);\n+    vslider6.setMinorTickSpacing(5);\n+    vslider6.setPaintTicks(true);\n+    panel.add(vslider6);\n+\n+    vslider7 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider7.setInverted(true);\n+    vslider7.setMajorTickSpacing(20);\n+    vslider7.setMinorTickSpacing(5);\n+    vslider7.setPaintLabels(true);\n+    vslider7.setPaintTicks(true);\n+    panel.add(vslider7);\n+\n+    vslider8 = new JSlider(JSlider.VERTICAL, 0, 100, 35);\n+    vslider8.putClientProperty(\"JSlider.isFilled\", Boolean.TRUE);\n+    vslider8.setInverted(true);\n+    vslider8.setMajorTickSpacing(20);\n+    vslider8.setMinorTickSpacing(5);\n+    vslider8.setPaintLabels(true);\n+    vslider8.setPaintTicks(true);\n+    panel.add(vslider8);\n+    return panel;\n+  }\n+    \n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+    else if (e.getActionCommand().equals(\"TOGGLE_ENABLED\"))\n+    {\n+      boolean enabled = enabledCheckBox.isSelected();\n+      hslider1.setEnabled(enabled);\n+      hslider2.setEnabled(enabled);\n+      hslider3.setEnabled(enabled);\n+      hslider4.setEnabled(enabled);\n+      hslider5.setEnabled(enabled);\n+      hslider6.setEnabled(enabled);\n+      hslider7.setEnabled(enabled);\n+      hslider8.setEnabled(enabled);\n+      vslider1.setEnabled(enabled);\n+      vslider2.setEnabled(enabled);\n+      vslider3.setEnabled(enabled);\n+      vslider4.setEnabled(enabled);\n+      vslider5.setEnabled(enabled);\n+      vslider6.setEnabled(enabled);\n+      vslider7.setEnabled(enabled);\n+      vslider8.setEnabled(enabled);\n+    }\n+  }\n+  public static void main(String[] args) \n+  {\n+    SliderDemo app = new SliderDemo(\"Slider Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "5ddf116806154130600d00433258075b093afcb7", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TextFieldDemo.java", "status": "added", "additions": 488, "deletions": 0, "changes": 488, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,488 @@\n+/* TextFieldDemo.java -- An example showing various textfields in Swing.\n+   Copyright (C) 2005,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.GridLayout;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.DefaultCaret;\n+import javax.swing.text.JTextComponent;\n+\n+/**\n+ * A simple textfield demo showing various textfields in different states.\n+ */\n+public class TextFieldDemo \n+  extends JFrame\n+  implements ActionListener\n+{\n+\n+  /**\n+   * A custom caret for demonstration purposes. This class is inspired by the\n+   * CornerCaret from the OReilly Swing book.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  static class CornerCaret extends DefaultCaret\n+  {\n+    public CornerCaret()\n+    {\n+      super();\n+      setBlinkRate(500);\n+    }\n+\n+    protected synchronized void damage(Rectangle r)\n+    {\n+      if (r == null) return;\n+      x = r.x;\n+      y = r.y + (r.height * 4 / 5 - 3);\n+      width = 5;\n+      height = 5;\n+      repaint();\n+    }\n+\n+    public void paint(Graphics g)\n+    {\n+      JTextComponent comp = getComponent();\n+      if (comp == null) return;\n+      int dot = getDot();\n+      Rectangle r = null;\n+      try\n+        {\n+          r = comp.modelToView(dot);\n+        }\n+      catch (BadLocationException e)\n+        {\n+          return;\n+        }\n+      if (r == null) return;\n+      int dist = r.height * 4 / 5 - 3;\n+      if ((x != r.x) || (y != r.y + dist))\n+        {\n+          repaint();\n+          x = r.x;\n+          y = r.y + dist;\n+          width = 5;\n+          height = 5;\n+        }\n+      if (isVisible())\n+        {\n+          g.drawLine(r.x, r.y + dist, r.x, r.y + dist + 4);\n+          g.drawLine(r.x, r.y + dist + 4, r.x + 4, r.y + dist + 4);\n+        }\n+    }\n+  }\n+\n+  /**\n+   * The left aligned textfields and state buttons.\n+   */\n+  JTextField textfield1;\n+  JTextField textfield2;  \n+  JTextField textfield3;\n+  JCheckBox enabled1;\n+  JCheckBox editable1;\n+JPanel textFieldPanel1;\n+  /**\n+   * The right aligned textfields and state buttons.\n+   */\n+  JTextField textfield4;\n+  JTextField textfield5;  \n+  JTextField textfield6;\n+  JCheckBox enabled2;\n+  JCheckBox editable2;\n+\n+  /**\n+   * The centered textfields and state buttons.\n+   */\n+  JTextField textfield7;\n+  JTextField textfield8;  \n+  JTextField textfield9;\n+  JCheckBox enabled3;\n+  JCheckBox editable3;\n+\n+  /**\n+   * The custom colored textfields and state buttons.\n+   */\n+  JTextField textfield10;\n+  JTextField textfield11;  \n+  JTextField textfield12;\n+  JTextField textfield13;\n+  JTextField textfield14;\n+  JCheckBox enabled4;\n+  JCheckBox editable4;\n+\n+  /**\n+   * Some miscallenous textfield demos.\n+   */\n+  JTextField textfield15;\n+  JTextField textfield16;\n+  JCheckBox enabled5;\n+  JCheckBox editable5;\n+\n+  /**\n+   * Creates a new demo instance.\n+   * \n+   * @param title  the frame title.\n+   */\n+  public TextFieldDemo(String title) \n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+\n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    JPanel content = new JPanel(new BorderLayout());\n+    JPanel panel = new JPanel(new GridLayout(5, 1));\n+    panel.add(createLeftAlignedPanel());\n+    panel.add(createRightAlignedPanel());\n+    panel.add(createCenteredPanel());\n+    panel.add(createCustomColoredPanel());\n+    panel.add(createMiscPanel());\n+    content.add(panel);\n+    //content.setPreferredSize(new Dimension(400, 300));\n+    return content;        \n+  }\n+    \n+  private JPanel createLeftAlignedPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    panel.setBorder(BorderFactory.createTitledBorder(\"Left aligned\"));\n+    \n+    textFieldPanel1 = new JPanel();\n+    textFieldPanel1.setLayout(new BoxLayout(textFieldPanel1, BoxLayout.X_AXIS));\n+\n+    textfield1 = new JTextField(\"Hello World!\");\n+    textfield1.setHorizontalAlignment(JTextField.LEFT);\n+    textfield1.setFont(new Font(\"Dialog\", Font.PLAIN, 8));\n+    textFieldPanel1.add(textfield1);\n+\n+    textfield2 = new JTextField(\"Hello World!\");\n+    textfield2.setHorizontalAlignment(JTextField.LEFT);\n+    textfield2.setFont(new Font(\"Dialog\", Font.ITALIC, 12));\n+    textFieldPanel1.add(textfield2);\n+\n+    textfield3 = new JTextField(\"Hello World!\");\n+    textfield3.setHorizontalAlignment(JTextField.LEFT);\n+    textfield3.setFont(new Font(\"Dialog\", Font.BOLD, 14));\n+    textFieldPanel1.add(textfield3);\n+\n+    panel.add(textFieldPanel1);\n+\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    enabled1 = new JCheckBox(\"enabled\");\n+    enabled1.setSelected(true);\n+    enabled1.addActionListener(this);\n+    enabled1.setActionCommand(\"ENABLED1\");\n+    statePanel.add(enabled1);\n+    editable1 = new JCheckBox(\"editable\");\n+    editable1.setSelected(true);\n+    editable1.addActionListener(this);\n+    editable1.setActionCommand(\"EDITABLE1\");\n+    statePanel.add(editable1);\n+    statePanel.add(Box.createVerticalGlue());\n+    panel.add(statePanel, BorderLayout.EAST);\n+\n+    return panel;\n+  }\n+\n+  private JPanel createRightAlignedPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    panel.setBorder(BorderFactory.createTitledBorder(\"Right aligned\"));\n+    \n+    JPanel textFieldPanel = new JPanel();\n+    textFieldPanel.setLayout(new BoxLayout(textFieldPanel, BoxLayout.X_AXIS));\n+\n+    textfield4 = new JTextField(\"Hello World!\");\n+    textfield4.setHorizontalAlignment(JTextField.RIGHT);\n+    textfield4.setFont(new Font(\"Dialog\", Font.PLAIN, 8));\n+    textFieldPanel.add(textfield4);\n+\n+    textfield5 = new JTextField(\"Hello World!\");\n+    textfield5.setHorizontalAlignment(JTextField.RIGHT);\n+    textfield5.setFont(new Font(\"Dialog\", Font.ITALIC, 12));\n+    textFieldPanel.add(textfield5);\n+\n+    textfield6 = new JTextField(\"Hello World!\");\n+    textfield6.setHorizontalAlignment(JTextField.RIGHT);\n+    textfield6.setFont(new Font(\"Dialog\", Font.BOLD, 14));\n+    textFieldPanel.add(textfield6);\n+\n+    panel.add(textFieldPanel);\n+\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    enabled2 = new JCheckBox(\"enabled\");\n+    enabled2.setSelected(true);\n+    enabled2.addActionListener(this);\n+    enabled2.setActionCommand(\"ENABLED2\");\n+    statePanel.add(enabled2);\n+    editable2 = new JCheckBox(\"editable\");\n+    editable2.setSelected(true);\n+    editable2.addActionListener(this);\n+    editable2.setActionCommand(\"EDITABLE2\");\n+    statePanel.add(editable2);\n+    statePanel.add(Box.createVerticalGlue());\n+    panel.add(statePanel, BorderLayout.EAST);\n+\n+    return panel;\n+  }\n+\n+  private JPanel createCenteredPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    panel.setBorder(BorderFactory.createTitledBorder(\"Centered\"));\n+    \n+    JPanel textFieldPanel = new JPanel();\n+    textFieldPanel.setLayout(new BoxLayout(textFieldPanel, BoxLayout.X_AXIS));\n+\n+    textfield7 = new JTextField(\"Hello World!\");\n+    textfield7.setHorizontalAlignment(JTextField.CENTER);\n+    textfield7.setFont(new Font(\"Dialog\", Font.PLAIN, 8));\n+    textFieldPanel.add(textfield7);\n+\n+    textfield8 = new JTextField(\"Hello World!\");\n+    textfield8.setHorizontalAlignment(JTextField.CENTER);\n+    textfield8.setFont(new Font(\"Dialog\", Font.ITALIC, 12));\n+    textFieldPanel.add(textfield8);\n+\n+    textfield9 = new JTextField(\"Hello World!\");\n+    textfield9.setHorizontalAlignment(JTextField.CENTER);\n+    textfield9.setFont(new Font(\"Dialog\", Font.BOLD, 14));\n+    textFieldPanel.add(textfield9);\n+\n+    panel.add(textFieldPanel);\n+\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    enabled3 = new JCheckBox(\"enabled\");\n+    enabled3.setSelected(true);\n+    enabled3.addActionListener(this);\n+    enabled3.setActionCommand(\"ENABLED3\");\n+    statePanel.add(enabled3);\n+    editable3 = new JCheckBox(\"editable\");\n+    editable3.setSelected(true);\n+    editable3.addActionListener(this);\n+    editable3.setActionCommand(\"EDITABLE3\");\n+    statePanel.add(editable3);\n+    statePanel.add(Box.createVerticalGlue());\n+    panel.add(statePanel, BorderLayout.EAST);\n+\n+    return panel;\n+  }\n+\n+  private JPanel createCustomColoredPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    \n+    JPanel textFieldPanel = new JPanel();\n+    panel.setBorder(BorderFactory.createTitledBorder(\"Custom colors\"));\n+    textFieldPanel.setLayout(new BoxLayout(textFieldPanel, BoxLayout.X_AXIS));\n+\n+    textfield10 = new JTextField(\"custom foreground\");\n+    textfield10.setForeground(Color.GREEN);\n+    textFieldPanel.add(textfield10);\n+\n+    textfield11 = new JTextField(\"custom background\");\n+    textfield11.setForeground(Color.YELLOW);\n+    textFieldPanel.add(textfield11);\n+\n+    textfield12 = new JTextField(\"custom disabled textcolor\");\n+    textfield12.setDisabledTextColor(Color.BLUE);\n+    textFieldPanel.add(textfield12);\n+\n+    textfield13 = new JTextField(\"custom selected text color\");\n+    textfield13.setSelectedTextColor(Color.RED);\n+    textFieldPanel.add(textfield13);\n+\n+    textfield14 = new JTextField(\"custom selection color\");\n+    textfield14.setSelectionColor(Color.CYAN);\n+    textFieldPanel.add(textfield14);\n+\n+    panel.add(textFieldPanel);\n+\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    enabled4 = new JCheckBox(\"enabled\");\n+    enabled4.setSelected(true);\n+    enabled4.addActionListener(this);\n+    enabled4.setActionCommand(\"ENABLED4\");\n+    statePanel.add(enabled4);\n+    editable4 = new JCheckBox(\"editable\");\n+    editable4.setSelected(true);\n+    editable4.addActionListener(this);\n+    editable4.setActionCommand(\"EDITABLE4\");\n+    statePanel.add(editable4);\n+    statePanel.add(Box.createVerticalGlue());\n+    panel.add(statePanel, BorderLayout.EAST);\n+\n+    return panel;\n+  }\n+\n+  private JPanel createMiscPanel() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    panel.setBorder(BorderFactory.createTitledBorder(\"Miscallenous\"));\n+    \n+    JPanel textFieldPanel = new JPanel();\n+    textFieldPanel.setLayout(new BoxLayout(textFieldPanel, BoxLayout.X_AXIS));\n+\n+    textfield15 = new JTextField(\"Custom Caret\");\n+    textfield15.setCaret(new CornerCaret());\n+    textFieldPanel.add(textfield15);\n+\n+    textfield16 = new JTextField(\"Custom Caret color\");\n+    textfield16.setCaretColor(Color.MAGENTA);\n+    textFieldPanel.add(textfield16);\n+\n+    panel.add(textFieldPanel);\n+\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    enabled5 = new JCheckBox(\"enabled\");\n+    enabled5.setSelected(true);\n+    enabled5.addActionListener(this);\n+    enabled5.setActionCommand(\"ENABLED5\");\n+    statePanel.add(enabled5);\n+    editable5 = new JCheckBox(\"editable\");\n+    editable5.setSelected(true);\n+    editable5.addActionListener(this);\n+    editable5.setActionCommand(\"EDITABLE5\");\n+    statePanel.add(editable5);\n+    statePanel.add(Box.createVerticalGlue());\n+    panel.add(statePanel, BorderLayout.EAST);\n+\n+    return panel;\n+  }\n+\n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"CLOSE\"))\n+      {\n+        System.exit(0);\n+      }\n+    else if (e.getActionCommand().equals(\"ENABLED1\"))\n+      {\n+        boolean enabled = enabled1.isSelected();\n+        textfield1.setEnabled(enabled);\n+        textfield2.setEnabled(enabled);\n+        textfield3.setEnabled(enabled);\n+      }\n+    else if (e.getActionCommand().equals(\"EDITABLE1\"))\n+      {\n+        boolean editable = editable1.isSelected();\n+        textfield1.setEditable(editable);\n+        textfield2.setEditable(editable);\n+        textfield3.setEditable(editable);\n+      }\n+    else if (e.getActionCommand().equals(\"ENABLED2\"))\n+      {\n+        boolean enabled = enabled2.isSelected();\n+        textfield4.setEnabled(enabled);\n+        textfield5.setEnabled(enabled);\n+        textfield6.setEnabled(enabled);\n+      }\n+    else if (e.getActionCommand().equals(\"EDITABLE2\"))\n+      {\n+        boolean editable = editable2.isSelected();\n+        textfield4.setEditable(editable);\n+        textfield5.setEditable(editable);\n+        textfield6.setEditable(editable);\n+      }\n+    else if (e.getActionCommand().equals(\"ENABLED3\"))\n+      {\n+        boolean enabled = enabled3.isSelected();\n+        textfield7.setEnabled(enabled);\n+        textfield8.setEnabled(enabled);\n+        textfield9.setEnabled(enabled);\n+      }\n+    else if (e.getActionCommand().equals(\"EDITABLE3\"))\n+      {\n+        boolean editable = editable3.isSelected();\n+        textfield7.setEditable(editable);\n+        textfield8.setEditable(editable);\n+        textfield9.setEditable(editable);\n+      }\n+    else if (e.getActionCommand().equals(\"ENABLED4\"))\n+      {\n+        boolean enabled = enabled4.isSelected();\n+        textfield10.setEnabled(enabled);\n+        textfield11.setEnabled(enabled);\n+        textfield12.setEnabled(enabled);\n+        textfield13.setEnabled(enabled);\n+        textfield14.setEnabled(enabled);\n+      }\n+    else if (e.getActionCommand().equals(\"EDITABLE4\"))\n+      {\n+        boolean editable = editable4.isSelected();\n+        textfield10.setEditable(editable);\n+        textfield11.setEditable(editable);\n+        textfield12.setEditable(editable);\n+        textfield13.setEditable(editable);\n+        textfield14.setEditable(editable);\n+      }\n+  }\n+\n+  public static void main(String[] args) \n+  {\n+    TextFieldDemo app = new TextFieldDemo(\"TextField Demo\");\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "f0d2a3b0d485796ab77bdb82071e983cee10cf9f", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,10 +39,8 @@ target_triplet = @target@\n subdir = external\n DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -84,10 +82,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -224,6 +226,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -237,6 +240,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "15c949d22531efa39cc7c5cbec79264600e6a017", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,10 +39,8 @@ target_triplet = @target@\n subdir = external/sax\n DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -75,10 +73,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -215,6 +217,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -228,6 +231,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "6305a265c5d4d893d6f62404ba81a27143c6d8fc", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,10 +39,8 @@ target_triplet = @target@\n subdir = external/w3c_dom\n DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n-\t$(top_srcdir)/../../config/lead-dot.m4 \\\n-\t$(top_srcdir)/../../config/no-executables.m4 \\\n-\t$(top_srcdir)/../../libtool.m4 $(top_srcdir)/m4/accross.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 $(top_srcdir)/m4/iconv.m4 \\\n \t$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \\\n \t$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/pkg.m4 \\\n@@ -75,10 +73,14 @@ CLASSPATH_MODULE = @CLASSPATH_MODULE@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n@@ -215,6 +217,7 @@ build_vendor = @build_vendor@\n datadir = @datadir@\n default_toolkit = @default_toolkit@\n exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -228,6 +231,7 @@ libexecdir = @libexecdir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n oldincludedir = @oldincludedir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@"}, {"sha": "866ec2cc945997b50eaa62455becfb6ab53234b8", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractCdrInput.java", "status": "renamed", "additions": 400, "deletions": 304, "changes": 704, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cdrInput.java --\n+/* AbstractCdrInput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -39,16 +39,17 @@\n package gnu.CORBA.CDR;\n \n import gnu.CORBA.BigDecimalHelper;\n-import gnu.CORBA.Functional_ORB;\n+import gnu.CORBA.OrbFunctional;\n import gnu.CORBA.GIOP.CharSets_OSF;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n import gnu.CORBA.IOR;\n-import gnu.CORBA.IOR_Delegate;\n+import gnu.CORBA.IorDelegate;\n+import gnu.CORBA.Minor;\n import gnu.CORBA.TypeCodeHelper;\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.Version;\n import gnu.CORBA.gnuAny;\n-import gnu.CORBA.stubFinder;\n+import gnu.CORBA.StubLocator;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.AnySeqHolder;\n@@ -81,38 +82,44 @@\n import java.math.BigDecimal;\n \n /**\n- * A simple CORBA CDR (common data representation)\n- * input stream, reading data from the\n- * given {@link java.io.InputStream}. The primitive types\n- * are aligned on they natural boundaries by implementing the\n- * abstract method {@link #align(int boundary)}.\n- *\n- * The same class also implements {@link org.omg.CORBA.DataInputStream} to\n- * read the object content in a user defined way.\n- *\n+ * A simple CORBA CDR (common data representation) input stream, reading data\n+ * from the given {@link java.io.InputStream}. The primitive types are aligned\n+ * on they natural boundaries by implementing the abstract method\n+ * {@link #align(int boundary)}.\n+ * \n+ * The same class also implements {@link org.omg.CORBA.DataInputStream} to read\n+ * the object content in a user defined way.\n+ * \n+ * TODO This class uses 16 bits per Unicode character only, as it was until jdk\n+ * 1.4 inclusive.\n+ * \n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public abstract class cdrInput\n+public abstract class AbstractCdrInput\n   extends org.omg.CORBA_2_3.portable.InputStream\n   implements org.omg.CORBA.DataInputStream\n {\n   /**\n-   * The message, explaining that the exception has been thrown due\n-   * unexpected end of the input stream. This usually happens the\n-   * server and client disagree on communication or data representation\n-   * rules.\n+   * The runtime, associated with this stream. This field is only used when\n+   * reading and writing value types and filled-in in gnu.CORBA.CDR.Vio.\n+   */\n+  public transient gnuRuntime runtime;\n+\n+  /**\n+   * The message, explaining that the exception has been thrown due unexpected\n+   * end of the input stream. This usually happens the server and client\n+   * disagree on communication or data representation rules.\n    */\n   protected static final String UNEXP_EOF = \"Unexpected end of stream\";\n \n   /**\n-   * This instance is used to convert primitive data types into the\n-   * byte sequences.\n+   * This instance is used to convert primitive data types into the byte\n+   * sequences.\n    */\n-  protected abstractDataInputStream b;\n+  protected AbstractDataInput b;\n \n   /**\n-   * The input stream, from where the data are actually\n-   * being read.\n+   * The input stream, from where the data are actually being read.\n    */\n   protected java.io.InputStream actual_stream;\n \n@@ -129,81 +136,99 @@\n   /**\n    * The code set information.\n    */\n-  protected cxCodeSet codeset = cxCodeSet.STANDARD;\n+  protected CodeSetServiceContext codeset = CodeSetServiceContext.STANDARD;\n \n   /**\n-   * The name of the currently used narrow charset, null if\n-   * the native narrow charset is used.\n+   * The name of the currently used narrow charset, null if the native narrow\n+   * charset is used.\n    */\n   private String narrow_charset = null;\n \n   /**\n-   * The name of the currently used wide charset, null if\n-   * the native wide charset is used.\n+   * The name of the currently used wide charset, null if the native wide\n+   * charset is used.\n    */\n   private String wide_charset = null;\n \n   /**\n-   * True if the native code set is used for narrow characters.\n-   * If the set is native, no the intermediate Reader object\n-   * is instantiated when writing characters.\n+   * True if the native code set is used for narrow characters. If the set is\n+   * native, no the intermediate Reader object is instantiated when writing\n+   * characters.\n    */\n   private boolean narrow_native;\n \n   /**\n-   * True if the native code set is used for wide characters.\n-   * If the set is native, no the intermediate Reader object\n-   * is instantiated when writing characters.\n+   * True if the native code set is used for wide characters. If the set is\n+   * native, no the intermediate Reader object is instantiated when writing\n+   * characters.\n    */\n   private boolean wide_native;\n \n   /**\n-   * If true, the stream expect\n-   * the multi-byte data in the form \"less significant byte\n-   * first\" (Little Endian). This is the opposite to the\n-   * java standard (Big Endian).\n+   * If true, the stream expect the multi-byte data in the form \"less\n+   * significant byte first\" (Little Endian). This is the opposite to the java\n+   * standard (Big Endian).\n    */\n   private boolean little_endian;\n \n   /**\n-   * Creates the stream. The stream reads Big Endian by\n-   * default.\n-   *\n+   * Creates the stream. The stream reads Big Endian by default.\n+   * \n    * @param readFrom a stream to read CORBA input from.\n    */\n-  public cdrInput(java.io.InputStream readFrom)\n+  public AbstractCdrInput(java.io.InputStream readFrom)\n   {\n     setInputStream(readFrom);\n-    setCodeSet(cxCodeSet.STANDARD);\n+    setCodeSet(CodeSetServiceContext.STANDARD);\n   }\n \n   /**\n-   * Creates the stream, requiring the subsequent call\n-   * of {@link #setInputStream(java.io.InputStream)}.\n+   * Creates the stream, requiring the subsequent call of\n+   * {@link #setInputStream(java.io.InputStream)}.\n    */\n-  public cdrInput()\n+  public AbstractCdrInput()\n   {\n-    setCodeSet(cxCodeSet.STANDARD);\n+    setCodeSet(CodeSetServiceContext.STANDARD);\n   }\n \n   /**\n-   * Set the Big Endian or Little Endian encoding.\n-   * The stream reads Big Endian by default.\n-   *\n-   * @param use_little_endian if true, the stream expect\n-   * the multi-byte data in the form \"less significant byte\n-   * first\" (Little Endian). This is the opposite to the\n-   * java standard (Big Endian).\n+   * Set the Big Endian or Little Endian encoding. The stream reads Big Endian\n+   * by default.\n+   * \n+   * @param use_little_endian if true, the stream expect the multi-byte data in\n+   * the form \"less significant byte first\" (Little Endian). This is the\n+   * opposite to the java standard (Big Endian).\n    */\n   public void setBigEndian(boolean use_big_endian)\n   {\n     little_endian = !use_big_endian;\n     setInputStream(actual_stream);\n   }\n \n+  /**\n+   * Get the used encoding.\n+   * \n+   * @param true for Big Endian, false for Little Endian.\n+   */\n+  public boolean isBigEndian()\n+  {\n+    return !little_endian;\n+  }\n+\n+  /**\n+   * Clone all important settings to another stream.\n+   */\n+  public void cloneSettings(AbstractCdrInput stream)\n+  {\n+    stream.setBigEndian(isBigEndian());\n+    stream.setCodeSet(getCodeSet());\n+    stream.setVersion(giop);\n+    stream.setOrb(orb);\n+  }\n+\n   /**\n    * Set the input stream that receives the CORBA input.\n-   *\n+   * \n    * @param readFrom the stream.\n    */\n   public void setInputStream(java.io.InputStream readFrom)\n@@ -217,13 +242,14 @@ public void setInputStream(java.io.InputStream readFrom)\n   }\n \n   /**\n-   * Set the alignment offset, if the index of the first byte in the\n-   * stream is different from 0.\n+   * Set the alignment offset, if the index of the first byte in the stream is\n+   * different from 0.\n    */\n   public abstract void setOffset(int offset);\n \n   /**\n    * Set the orb, associated with this stream.\n+   * \n    * @param an_orb\n    */\n   public void setOrb(ORB an_orb)\n@@ -232,8 +258,8 @@ public void setOrb(ORB an_orb)\n   }\n \n   /**\n-   * Set the GIOP version. Some data types are written differently\n-   * for the different versions. The default version is 1.0 .\n+   * Set the GIOP version. Some data types are written differently for the\n+   * different versions. The default version is 1.0 .\n    */\n   public void setVersion(Version giop_version)\n   {\n@@ -246,8 +272,8 @@ public void setVersion(Version giop_version)\n   public abstract void align(int boundary);\n \n   /**\n-   * Reads the CORBA unsigned long (java int), returning the\n-   * value in the sufficiently large java long.\n+   * Reads the CORBA unsigned long (java int), returning the value in the\n+   * sufficiently large java long.\n    */\n   public long gnu_read_ulong()\n   {\n@@ -260,6 +286,7 @@ public long gnu_read_ulong()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -270,8 +297,8 @@ public long gnu_read_ulong()\n   }\n \n   /**\n-   * Read the unsigned short integer value and return it as java\n-   * int, sufficiently large to hold all values.\n+   * Read the unsigned short integer value and return it as java int,\n+   * sufficiently large to hold all values.\n    */\n   public int gnu_read_ushort()\n   {\n@@ -283,6 +310,7 @@ public int gnu_read_ushort()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -295,6 +323,7 @@ public int gnu_read_ushort()\n \n   /**\n    * Return the associated {@link ORB}.\n+   * \n    * @return the associated {@link ORB} or null is no such is set.\n    */\n   public ORB orb()\n@@ -306,7 +335,7 @@ public ORB orb()\n    * Read a single byte directly from the buffer.\n    */\n   public int read()\n-           throws java.io.IOException\n+    throws java.io.IOException\n   {\n     try\n       {\n@@ -315,6 +344,7 @@ public int read()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -324,7 +354,7 @@ public int read()\n    * Read bytes directly from the buffer.\n    */\n   public int read(byte[] x, int ofs, int len)\n-           throws java.io.IOException\n+    throws java.io.IOException\n   {\n     try\n       {\n@@ -333,6 +363,7 @@ public int read(byte[] x, int ofs, int len)\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -342,7 +373,7 @@ public int read(byte[] x, int ofs, int len)\n    * Read bytes directly from the buffer.\n    */\n   public int read(byte[] x)\n-           throws java.io.IOException\n+    throws java.io.IOException\n   {\n     try\n       {\n@@ -351,24 +382,25 @@ public int read(byte[] x)\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n   }\n \n   /**\n-   * Read the CORBA object. The object to read is represented in the\n-   * form of the plain (not a string-encoded) IOR profile without the\n-   * heading endian indicator. The responsible method for reading such\n-   * data is {@link IOR.read_no_endian}.\n-   *\n-   * The returned object is usually casted into the given type using\n-   * the .narrow method of its helper, despite in some cases the direct\n-   * cast would also work.\n-   *\n-   * The null objects are recognised from the empty profile set.\n-   * For such objects, null is returned.\n-   *\n+   * Read the CORBA object. The object to read is represented in the form of the\n+   * plain (not a string-encoded) IOR profile without the heading endian\n+   * indicator. The responsible method for reading such data is\n+   * {@link IOR.read_no_endian}.\n+   * \n+   * The returned object is usually casted into the given type using the .narrow\n+   * method of its helper, despite in some cases the direct cast would also\n+   * work.\n+   * \n+   * The null objects are recognised from the empty profile set. For such\n+   * objects, null is returned.\n+   * \n    * @return the loaded and constructed object.\n    */\n   public org.omg.CORBA.Object read_Object()\n@@ -384,41 +416,42 @@ public org.omg.CORBA.Object read_Object()\n         // Check maybe this is a remote reference to the local object.\n         // This is only possible if we access the repository of the\n         // connected object.\n-        if (orb instanceof Functional_ORB)\n+        if (orb instanceof OrbFunctional)\n           {\n-            Functional_ORB forb = (Functional_ORB) orb;\n+            OrbFunctional forb = (OrbFunctional) orb;\n             org.omg.CORBA.Object local = forb.find_local_object(ior);\n             if (local != null)\n               return local;\n           }\n \n         // Search for the available stubs.\n-        ObjectImpl impl = stubFinder.search(orb, ior);\n+        ObjectImpl impl = StubLocator.search(orb, ior);\n         try\n           {\n             if (impl._get_delegate() == null)\n-              impl._set_delegate(new IOR_Delegate(orb, ior));\n+              impl._set_delegate(new IorDelegate(orb, ior));\n           }\n         catch (BAD_OPERATION ex)\n           {\n             // Some colaborants may throw this exception\n             // in response to the attempt to get the unset delegate.\n-            impl._set_delegate(new IOR_Delegate(orb, ior));\n+            impl._set_delegate(new IorDelegate(orb, ior));\n           }\n \n         return impl;\n       }\n     catch (IOException ex)\n       {\n-        BAD_OPERATION bad = new BAD_OPERATION();\n+        MARSHAL bad = new MARSHAL();\n+        bad.minor = Minor.IOR;\n         bad.initCause(ex);\n         throw bad;\n       }\n   }\n \n   /**\n-   * Read the type code. The type code format is defined in the\n-   * CORBA documenation.\n+   * Read the type code. The type code format is defined in the CORBA\n+   * documenation.\n    */\n   public TypeCode read_TypeCode()\n   {\n@@ -438,9 +471,8 @@ public TypeCode read_TypeCode()\n   }\n \n   /**\n-   * Read the CORBA {@link Any}. This method first reads the\n-   * type code, then delegates the functionality\n-   * to {@link Any#read_value}.\n+   * Read the CORBA {@link Any}. This method first reads the type code, then\n+   * delegates the functionality to {@link Any#read_value}.\n    */\n   public Any read_any()\n   {\n@@ -451,8 +483,7 @@ public Any read_any()\n   }\n \n   /**\n-   * Read the boolean, treating any non zero byte as true,\n-   * zero byte as false.\n+   * Read the boolean, treating any non zero byte as true, zero byte as false.\n    */\n   public boolean read_boolean()\n   {\n@@ -463,6 +494,7 @@ public boolean read_boolean()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -481,12 +513,13 @@ public void read_boolean_array(boolean[] x, int offs, int len)\n       {\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.read() == 0 ? false : true;\n+            x[i] = b.read() == 0 ? false : true;\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -498,8 +531,8 @@ public void read_boolean_array(boolean[] x, int offs, int len)\n   }\n \n   /**\n-   * Read a character using narrow charset encoding. Depending form\n-   * which encoding is set, this still can be Unicode or ever wider.\n+   * Read a character using narrow charset encoding. Depending form which\n+   * encoding is set, this still can be Unicode or ever wider.\n    */\n   public char read_char()\n   {\n@@ -513,6 +546,7 @@ public char read_char()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -533,18 +567,19 @@ public void read_char_array(char[] x, int offset, int length)\n         if (narrow_native)\n           {\n             for (int i = offset; i < offset + length; i++)\n-              x [ i ] = (char) b.read();\n+              x[i] = (char) b.read();\n           }\n         else\n           {\n-            InputStreamReader reader =\n-              new InputStreamReader((InputStream) b, narrow_charset);\n+            InputStreamReader reader = new InputStreamReader((InputStream) b,\n+              narrow_charset);\n             reader.read(x, offset, length);\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -568,6 +603,7 @@ public double read_double()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -588,12 +624,13 @@ public void read_double_array(double[] x, int offs, int len)\n         align(8);\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.readDouble();\n+            x[i] = b.readDouble();\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -605,26 +642,24 @@ public void read_double_array(double[] x, int offs, int len)\n   }\n \n   /**\n-   * Read the encapsulated stream.\n-   * If the encapsulated sequence appears to be in the\n-   * Little endian format, the flag of the returned stream\n-   * is set to read Little endian.\n+   * Read the encapsulated stream. If the encapsulated sequence appears to be in\n+   * the Little endian format, the flag of the returned stream is set to read\n+   * Little endian.\n    */\n-  public cdrBufInput read_encapsulation()\n+  public BufferredCdrInput read_encapsulation()\n   {\n     try\n       {\n         int l = read_long();\n \n-        byte[] r = new byte[ l ];\n+        byte[] r = new byte[l];\n         int n = 0;\n-        reading:\n-        while (n < r.length)\n+        reading: while (n < r.length)\n           {\n             n += read(r, n, r.length - n);\n           }\n \n-        cdrBufInput capsule = new cdrBufInput(r);\n+        BufferredCdrInput capsule = new BufferredCdrInput(r);\n         capsule.setOrb(orb);\n \n         int endian = capsule.read_octet();\n@@ -639,6 +674,7 @@ public cdrBufInput read_encapsulation()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -650,9 +686,8 @@ public cdrBufInput read_encapsulation()\n   }\n \n   /**\n-   * Read the CORBA fixed (the end of the <code>fixed</code>\n-   * can be determined by its last byte). The scale is always\n-   * assumed to be zero.\n+   * Read the CORBA fixed (the end of the <code>fixed</code> can be determined\n+   * by its last byte). The scale is always assumed to be zero.\n    */\n   public BigDecimal read_fixed()\n   {\n@@ -663,6 +698,7 @@ public BigDecimal read_fixed()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -686,6 +722,7 @@ public float read_float()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -706,12 +743,13 @@ public void read_float_array(float[] x, int offs, int len)\n         align(4);\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.readFloat();\n+            x[i] = b.readFloat();\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -735,6 +773,7 @@ public int read_long()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -755,12 +794,13 @@ public void read_long_array(int[] x, int offs, int len)\n         align(4);\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.readInt();\n+            x[i] = b.readInt();\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -783,7 +823,9 @@ public long read_longlong()\n       }\n     catch (EOFException ex)\n       {\n-        throw new MARSHAL(UNEXP_EOF);\n+        MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n+        throw t;\n       }\n \n     catch (IOException ex)\n@@ -802,12 +844,13 @@ public void read_longlong_array(long[] x, int offs, int len)\n         align(8);\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.readLong();\n+            x[i] = b.readLong();\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -830,6 +873,7 @@ public byte read_octet()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -852,6 +896,7 @@ public void read_octet_array(byte[] x, int offs, int len)\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -863,24 +908,24 @@ public void read_octet_array(byte[] x, int offs, int len)\n   }\n \n   /**\n-   * Read the length of the byte array as CORBA long and then\n-   * the array itseld.\n+   * Read the length of the byte array as CORBA long and then the array itseld.\n    */\n   public byte[] read_sequence()\n   {\n     try\n       {\n         int l = read_long();\n-        byte[] b = new byte[ l ];\n+        byte[] buf = new byte[l];\n         if (l > 0)\n           {\n-            read(b);\n+            b.readFully(buf);\n           }\n-        return b;\n+        return buf;\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -904,6 +949,7 @@ public short read_short()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -924,12 +970,13 @@ public void read_short_array(short[] x, int offs, int len)\n         align(2);\n         for (int i = offs; i < offs + len; i++)\n           {\n-            x [ i ] = b.readShort();\n+            x[i] = b.readShort();\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -941,21 +988,21 @@ public void read_short_array(short[] x, int offs, int len)\n   }\n \n   /**\n-   * Read a singe byte string. The method firs reads the\n-   * byte array and then calls a constructor to create a\n-   * string from this array. The character encoding, if\n-   * previously set, is taken into consideration.\n-   *\n+   * Read a singe byte string. The method firs reads the byte array and then\n+   * calls a constructor to create a string from this array. The character\n+   * encoding, if previously set, is taken into consideration.\n+   * \n    * @return a loaded string.\n    */\n   public String read_string()\n   {\n+    int n = 0;\n     try\n       {\n         align(4);\n \n-        int n = b.readInt();\n-        byte[] s = new byte[ n ];\n+        n = b.readInt();\n+        byte[] s = new byte[n];\n         b.read(s);\n \n         // Discard the null terminator.\n@@ -967,96 +1014,138 @@ public String read_string()\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n-\n     catch (IOException ex)\n       {\n         throw new Unexpected();\n       }\n+    catch (NegativeArraySizeException nex)\n+      {\n+        MARSHAL m = new MARSHAL(\"Input stream broken, got \" + n + \"(0x\"\n+          + Integer.toHexString(n) + \") as a string size\");\n+        m.minor = Minor.Negative;\n+        throw m;\n+      }\n   }\n \n   /**\n-   * Reads the CORBA unsigned long (java int), delegating\n-   * functionality to {@link #read_long}.\n+   * Reads the CORBA unsigned long (java int), delegating functionality to\n+   * {@link #read_long}.\n    */\n   public int read_ulong()\n   {\n     return read_long();\n   }\n \n   /**\n-   * Reads the array of CORBA unsigned long (java integer) values,\n-   * delegating functionality to\n-   * {@link #real_long_array}.\n+   * Reads the array of CORBA unsigned long (java integer) values, delegating\n+   * functionality to {@link #real_long_array}.\n    */\n   public void read_ulong_array(int[] x, int offs, int len)\n   {\n     read_long_array(x, offs, len);\n   }\n \n   /**\n-   * Read the CORBA unsigned long long value,\n-   * delegating functionality to {@link #read_longlong}.\n-   * There is no way to return values over the limit of\n-   * the java signed long in other way than returning\n-   * the negative value.\n+   * Read the CORBA unsigned long long value, delegating functionality to\n+   * {@link #read_longlong}. There is no way to return values over the limit of\n+   * the java signed long in other way than returning the negative value.\n    */\n   public long read_ulonglong()\n   {\n     return read_longlong();\n   }\n \n   /**\n-   * Reads the array of CORBA long long (java long) values,\n-   * delegating functionality to\n-   * {@link #real_longlong_array}.\n+   * Reads the array of CORBA long long (java long) values, delegating\n+   * functionality to {@link #real_longlong_array}.\n    */\n   public void read_ulonglong_array(long[] x, int offs, int len)\n   {\n     read_longlong_array(x, offs, len);\n   }\n \n   /**\n-   * Read the unsigned short integer value. Due strange specification,\n-   * the returned value must be the short type as well, so the\n-   * the best solution seems just to delegete functionality to\n-   * read_short.\n+   * Read the unsigned short integer value. Due strange specification, the\n+   * returned value must be the short type as well, so the the best solution\n+   * seems just to delegete functionality to read_short.\n    */\n   public short read_ushort()\n   {\n     return read_short();\n   }\n \n   /**\n-   * Read an array of unsigned short values, delegating the\n-   * functionality to {@link read_short_array}.\n+   * Read an array of unsigned short values, delegating the functionality to\n+   * {@link read_short_array}.\n    */\n   public void read_ushort_array(short[] x, int offs, int len)\n   {\n     read_short_array(x, offs, len);\n   }\n \n   /**\n-   * Reads the wide character using the encoding, specified in the\n-   * wide_charset.\n+   * Reads the wide character using the encoding, specified in the wide_charset.\n    */\n   public char read_wchar()\n   {\n     try\n       {\n         if (giop.until_inclusive(1, 1))\n-          align(2);\n+          {\n+            align(2);\n \n-        if (wide_native)\n-          return (char) b.readShort();\n+            if (wide_native)\n+              return (char) b.readShort();\n+            else\n+              return (char) new InputStreamReader((InputStream) b, wide_charset).read();\n+          }\n         else\n-          return (char) new InputStreamReader((InputStream) b, wide_charset).read();\n+          {\n+            int l = b.read();\n+            if (l == 2 && wide_native)\n+              return b.readChar();\n+            else if (l <= 0)\n+              {\n+                 MARSHAL m = new MARSHAL(\"wchar size \" + l);\n+                 m.minor = Minor.Negative;\n+                 throw m;\n+              }\n+            else\n+              {\n+                byte[] bytes = new byte[l];\n+                b.readFully(bytes);\n+                String cs;\n+\n+                if (bytes.length > 2 && bytes[0] == 0xFE && bytes[1] == 0xFF)\n+                  cs = new String(bytes, 2, bytes.length - 2, wide_charset);\n+                else if (bytes.length > 2 && bytes[0] == 0xFF\n+                  && bytes[1] == 0xFE)\n+                  {\n+                    // Litle endian detected - swap bytes.\n+                    byte t;\n+                    for (int i = 3; i < bytes.length; i = i + 2)\n+                      {\n+                        t = bytes[i];\n+                        bytes[i - 1] = bytes[i];\n+                        bytes[i] = t;\n+                      }\n+                    cs = new String(bytes, 2, bytes.length - 2, wide_charset);\n+                  }\n+                else\n+                  cs = new String(bytes, wide_charset);\n+\n+                return cs.charAt(0);\n+              }\n+          }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -1067,8 +1156,8 @@ public char read_wchar()\n   }\n \n   /**\n-   * Read an array of \"wide chars\", each representing a two byte\n-   * Unicode character, high byte first.\n+   * Read an array of \"wide chars\", each representing a two byte Unicode\n+   * character, high byte first.\n    */\n   public void read_wchar_array(char[] x, int offset, int length)\n   {\n@@ -1080,18 +1169,19 @@ public void read_wchar_array(char[] x, int offset, int length)\n         if (wide_native)\n           {\n             for (int i = offset; i < offset + length; i++)\n-              x [ i ] = (char) b.readShort();\n+              x[i] = (char) b.readShort();\n           }\n         else\n           {\n-            InputStreamReader reader =\n-              new InputStreamReader((InputStream) b, wide_charset);\n+            InputStreamReader reader = new InputStreamReader((InputStream) b,\n+              wide_charset);\n             reader.read(x, offset, length);\n           }\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -1103,13 +1193,11 @@ public void read_wchar_array(char[] x, int offset, int length)\n   }\n \n   /**\n-   * Reads the string in wide character format\n-   * (ussually UTF-16, Unicode). Takes the currently set charset\n-   * into consideration.\n-   *\n-   * If the native (UTF-16) encoding is used\n-   * of the GIOP protocol is before 1.2, delegates functionality\n-   * to \"plain\" {@link #read_wstring_UTF_16}.\n+   * Reads the string in wide character format (ussually UTF-16, Unicode). Takes\n+   * the currently set charset into consideration.\n+   * \n+   * If the native (UTF-16) encoding is used of the GIOP protocol is before 1.2,\n+   * delegates functionality to \"plain\" {@link #read_wstring_UTF_16}.\n    */\n   public String read_wstring()\n   {\n@@ -1121,14 +1209,15 @@ public String read_wstring()\n         align(4);\n \n         int n = b.readInt();\n-        byte[] s = new byte[ n ];\n+        byte[] s = new byte[n];\n         b.read(s);\n \n         return new String(s, 0, n, wide_charset);\n       }\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -1140,43 +1229,54 @@ public String read_wstring()\n   }\n \n   /**\n-   * Reads first length of the string and the all characters as an\n-   * Unicode (UTF-16) characters. Mind that GIOP 1.1 has the extra\n-   * null character at the end that must be discarded.\n+   * Reads first length of the string and the all characters as an Unicode\n+   * (UTF-16) characters. Mind that GIOP 1.1 has the extra null character at the\n+   * end that must be discarded.\n    */\n   public String read_wstring_UTF_16()\n   {\n     try\n       {\n         int p = 0;\n         int n = read_long();\n+        \n+        if (n<0)\n+          {\n+            MARSHAL m = new MARSHAL(\"Negative string size\");\n+            m.minor = Minor.Negative;\n+            throw m;\n+          }\n \n         // The null terminator that is no longer present since 1.2 .\n         int nt = giop.since_inclusive(1, 2) ? 0 : 1;\n \n         // Convert bytes to shorts.\n         n = n / 2;\n \n-        char[] s = new char[ n ];\n+        // Empty string.\n+        if (n == 0)\n+          return \"\";\n+\n+        char[] s = new char[n];\n \n         for (int i = 0; i < s.length; i++)\n-          s [ i ] = (char) b.readShort();\n+          s[i] = (char) b.readShort();\n \n         // Check for the byte order marker here.\n-        if (s [ 0 ] == 0xFEFF)\n+        if (s[0] == 0xFEFF)\n           {\n             // Big endian encoding - do nothing, but move the pointer\n             // one position forward.\n             p = 1;\n           }\n-        else if (s [ 0 ] == 0xFFFE)\n+        else if (s[0] == 0xFFFE)\n           {\n             // Little endian encoding, swap the bytes and move one\n             // position forward.\n             p = 1;\n \n             for (int i = p; i < s.length; i++)\n-              s [ i ] = swap(s [ i ]);\n+              s[i] = swap(s[i]);\n           }\n \n         // Discard the null terminator and, if needed, the endian marker.\n@@ -1186,6 +1286,7 @@ else if (s [ 0 ] == 0xFFFE)\n     catch (EOFException ex)\n       {\n         MARSHAL t = new MARSHAL(UNEXP_EOF);\n+        t.minor = Minor.EOF;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -1213,7 +1314,7 @@ public static char swap(char x)\n   /**\n    * Set the current code set context.\n    */\n-  public void setCodeSet(cxCodeSet a_codeset)\n+  public void setCodeSet(CodeSetServiceContext a_codeset)\n   {\n     this.codeset = a_codeset;\n     narrow_charset = CharSets_OSF.getName(codeset.char_data);\n@@ -1226,7 +1327,7 @@ public void setCodeSet(cxCodeSet a_codeset)\n   /**\n    * Get the current code set context.\n    */\n-  public cxCodeSet getCodeSet()\n+  public CodeSetServiceContext getCodeSet()\n   {\n     return codeset;\n   }\n@@ -1235,9 +1336,9 @@ public cxCodeSet getCodeSet()\n    * Read the object that is an instance of the given class. The current\n    * implementation delegates functionality to the parameterless\n    * {@link readObject()}.\n-   *\n+   * \n    * @param klass a class of that this object the instance is.\n-   *\n+   * \n    * @return the returned object.\n    */\n   public org.omg.CORBA.Object read_Object(Class klass)\n@@ -1247,11 +1348,11 @@ public org.omg.CORBA.Object read_Object(Class klass)\n \n   /**\n    * Read a value type structure from the stream.\n-   *\n-   * OMG specification states the writing format is outside the scope\n-   * of GIOP definition. This implementation uses java serialization\n-   * mechanism, calling {@link ObjectInputStream#readObject}\n-   *\n+   * \n+   * OMG specification states the writing format is outside the scope of GIOP\n+   * definition. This implementation uses java serialization mechanism, calling\n+   * {@link ObjectInputStream#readObject}\n+   * \n    * @return an value type structure, unmarshaled from the stream\n    */\n   public Serializable read_Value()\n@@ -1260,14 +1361,13 @@ public Serializable read_Value()\n   }\n \n   /**\n-   * Read the abstract interface. An abstract interface can be either\n-   * CORBA value type or CORBA object and is returned as an abstract\n-   * java.lang.Object.\n-   *\n-   * As specified in OMG specification, this reads a single\n-   * boolean and then delegates either to {@link #read_Object()} (for false)\n-   * or to {@link #read_Value()} (for true).\n-   *\n+   * Read the abstract interface. An abstract interface can be either CORBA\n+   * value type or CORBA object and is returned as an abstract java.lang.Object.\n+   * \n+   * As specified in OMG specification, this reads a single boolean and then\n+   * delegates either to {@link #read_Object()} (for false) or to\n+   * {@link #read_Value()} (for true).\n+   * \n    * @return an abstract interface, unmarshaled from the stream\n    */\n   public java.lang.Object read_Abstract()\n@@ -1276,10 +1376,10 @@ public java.lang.Object read_Abstract()\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_char_array(CharSeqHolder holder, int offset, int length)\n   {\n@@ -1288,10 +1388,10 @@ public void read_char_array(CharSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_wchar_array(WCharSeqHolder holder, int offset, int length)\n   {\n@@ -1300,23 +1400,23 @@ public void read_wchar_array(WCharSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the char array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the char array to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing char array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private char[] ensureArray(char[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new char[ offset + length ];\n+      return new char[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        char[] value = new char[ offset + length ];\n+        char[] value = new char[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1325,10 +1425,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_ulong_array(ULongSeqHolder holder, int offset, int length)\n   {\n@@ -1337,10 +1437,10 @@ public void read_ulong_array(ULongSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_long_array(LongSeqHolder holder, int offset, int length)\n   {\n@@ -1349,23 +1449,22 @@ public void read_long_array(LongSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the int array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the int array to fit the newly read values.\n+   * \n    * @param holder_value the existing int array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private int[] ensureArray(int[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new int[ offset + length ];\n+      return new int[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        int[] value = new int[ offset + length ];\n+        int[] value = new int[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1374,10 +1473,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_float_array(FloatSeqHolder holder, int offset, int length)\n   {\n@@ -1386,23 +1485,23 @@ public void read_float_array(FloatSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the float array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the float array to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing float array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private float[] ensureArray(float[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new float[ offset + length ];\n+      return new float[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        float[] value = new float[ offset + length ];\n+        float[] value = new float[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1411,10 +1510,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_double_array(DoubleSeqHolder holder, int offset, int length)\n   {\n@@ -1423,23 +1522,23 @@ public void read_double_array(DoubleSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the double array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the double array to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing double array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private double[] ensureArray(double[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new double[ offset + length ];\n+      return new double[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        double[] value = new double[ offset + length ];\n+        double[] value = new double[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1448,10 +1547,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_short_array(ShortSeqHolder holder, int offset, int length)\n   {\n@@ -1467,23 +1566,23 @@ public void read_ushort_array(UShortSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the short array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the short array to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing short array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private short[] ensureArray(short[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new short[ offset + length ];\n+      return new short[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        short[] value = new short[ offset + length ];\n+        short[] value = new short[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1492,10 +1591,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_octet_array(OctetSeqHolder holder, int offset, int length)\n   {\n@@ -1504,23 +1603,23 @@ public void read_octet_array(OctetSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the byte array to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the byte array to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing byte array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private byte[] ensureArray(byte[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new byte[ offset + length ];\n+      return new byte[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        byte[] value = new byte[ offset + length ];\n+        byte[] value = new byte[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1529,51 +1628,49 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_longlong_array(LongLongSeqHolder holder, int offset,\n-                                  int length\n-                                 )\n+    int length)\n   {\n     holder.value = ensureArray(holder.value, offset, length);\n     read_longlong_array(holder.value, offset, length);\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_ulonglong_array(ULongLongSeqHolder holder, int offset,\n-                                   int length\n-                                  )\n+    int length)\n   {\n     holder.value = ensureArray(holder.value, offset, length);\n     read_ulonglong_array(holder.value, offset, length);\n   }\n \n   /**\n-   * If required, allocate or resize the array of longs to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the array of longs to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing array, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private long[] ensureArray(long[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new long[ offset + length ];\n+      return new long[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        long[] value = new long[ offset + length ];\n+        long[] value = new long[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1582,10 +1679,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_boolean_array(BooleanSeqHolder holder, int offset, int length)\n   {\n@@ -1594,23 +1691,23 @@ public void read_boolean_array(BooleanSeqHolder holder, int offset, int length)\n   }\n \n   /**\n-   * If required, allocate or resize the array of booleans to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the array of booleans to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing array of booleans, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private boolean[] ensureArray(boolean[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new boolean[ offset + length ];\n+      return new boolean[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        boolean[] value = new boolean[ offset + length ];\n+        boolean[] value = new boolean[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1619,38 +1716,38 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * Read an array. In OMG specification is written that if the data does\n-   * not fit into the holder value field, that array must be resized.\n-   * The implementation follows this rule. If the holder value field\n-   * contains null, it is newly instantiated.\n+   * Read an array. In OMG specification is written that if the data does not\n+   * fit into the holder value field, that array must be resized. The\n+   * implementation follows this rule. If the holder value field contains null,\n+   * it is newly instantiated.\n    */\n   public void read_any_array(AnySeqHolder holder, int offset, int length)\n   {\n     holder.value = ensureArray(holder.value, offset, length);\n     for (int i = offset; i < offset + length; i++)\n       {\n-        holder.value [ i ] = read_any();\n+        holder.value[i] = read_any();\n       }\n   }\n \n   /**\n-   * If required, allocate or resize the array of Anys to fit the newly\n-   * read values.\n-   *\n+   * If required, allocate or resize the array of Anys to fit the newly read\n+   * values.\n+   * \n    * @param holder_value the existing array of Anys, may be null.\n    * @param offset the required offset to read.\n    * @param length the length of the new sequence.\n-   *\n+   * \n    * @return the allocated or resized array, same array if no such operations\n    * are required.\n    */\n   private Any[] ensureArray(Any[] holder_value, int offset, int length)\n   {\n     if (holder_value == null)\n-      return new Any[ offset + length ];\n+      return new Any[offset + length];\n     else if (holder_value.length < offset + length)\n       {\n-        Any[] value = new Any[ offset + length ];\n+        Any[] value = new Any[offset + length];\n         System.arraycopy(holder_value, 0, value, 0, holder_value.length);\n         return value;\n       }\n@@ -1659,11 +1756,10 @@ else if (holder_value.length < offset + length)\n   }\n \n   /**\n-   * This method is required to represent the DataInputStream as a value\n-   * type object.\n-   *\n-   * @return a single entity \"IDL:omg.org/CORBA/DataInputStream:1.0\",\n-   * always.\n+   * This method is required to represent the DataInputStream as a value type\n+   * object.\n+   * \n+   * @return a single entity \"IDL:omg.org/CORBA/DataInputStream:1.0\", always.\n    */\n   public String[] _truncatable_ids()\n   {", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/cdrInput.java"}, {"sha": "7b4d5ec58ff73d598051bee493d3d2c29cf3e947", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractCdrOutput.java", "status": "renamed", "additions": 100, "deletions": 62, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cdrOutput.java --\n+/* AbstractCdrOutput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -39,27 +39,28 @@\n package gnu.CORBA.CDR;\n \n import gnu.CORBA.BigDecimalHelper;\n-import gnu.CORBA.GIOP.CharSets_OSF;\n-import gnu.CORBA.GIOP.cxCodeSet;\n-import gnu.CORBA.Poa.gnuServantObject;\n import gnu.CORBA.IOR;\n-import gnu.CORBA.Simple_delegate;\n+import gnu.CORBA.IorProvider;\n+import gnu.CORBA.Minor;\n import gnu.CORBA.TypeCodeHelper;\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.Version;\n-import gnu.CORBA.primitiveTypeCode;\n+import gnu.CORBA.GIOP.CharSets_OSF;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n+import gnu.CORBA.typecodes.PrimitiveTypeCode;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.BAD_OPERATION;\n import org.omg.CORBA.Context;\n import org.omg.CORBA.ContextList;\n+import org.omg.CORBA.DataInputStream;\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.TypeCode;\n-import org.omg.CORBA.TypeCodePackage.BadKind;\n import org.omg.CORBA.UserException;\n+import org.omg.CORBA.TypeCodePackage.BadKind;\n import org.omg.CORBA.portable.Delegate;\n import org.omg.CORBA.portable.ObjectImpl;\n import org.omg.CORBA.portable.OutputStream;\n@@ -68,7 +69,6 @@\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.io.Serializable;\n-\n import java.math.BigDecimal;\n \n /**\n@@ -79,18 +79,27 @@\n  * The same class also implements the {@link DataInputStream},\n  * providing support for writing the value type objects\n  * in a user defined way.\n+ * \n+ * TODO This class uses 16 bits per Unicode character only, as it was until\n+ * jdk 1.4 inclusive.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public abstract class cdrOutput\n+public abstract class AbstractCdrOutput\n   extends org.omg.CORBA_2_3.portable.OutputStream\n   implements org.omg.CORBA.DataOutputStream\n {\n+  /**\n+   * The runtime, associated with this stream. This field is only used when \n+   * reading and writing value types and filled-in in gnu.CORBA.CDR.Vio.\n+   */\n+  public transient gnuRuntime runtime;  \n+  \n   /**\n    * This instance is used to convert primitive data types into the\n    * byte sequences.\n    */\n-  protected abstractDataOutputStream b;\n+  protected AbstractDataOutput b;\n \n   /**\n    * The associated orb, if any.\n@@ -105,7 +114,7 @@\n   /**\n    * The code set information.\n    */\n-  protected cxCodeSet codeset;\n+  protected CodeSetServiceContext codeset;\n \n   /**\n    * The name of the currently used narrow charset.\n@@ -148,31 +157,42 @@\n    *\n    * @param writeTo a stream to write CORBA output to.\n    */\n-  public cdrOutput(java.io.OutputStream writeTo)\n+  public AbstractCdrOutput(java.io.OutputStream writeTo)\n   {\n     setOutputStream(writeTo);\n-    setCodeSet(cxCodeSet.STANDARD);\n+    setCodeSet(CodeSetServiceContext.STANDARD);\n   }\n \n   /**\n    * Creates the stream, requiring the subsequent call\n    * of {@link #setOutputStream(java.io.OutputStream)}.\n    */\n-  public cdrOutput()\n+  public AbstractCdrOutput()\n   {\n-    setCodeSet(cxCodeSet.STANDARD);\n+    setCodeSet(CodeSetServiceContext.STANDARD);\n   }\n \n   /**\n    * Set the alignment offset, if the index of the first byte in the\n    * stream is different from 0.\n    */\n   public abstract void setOffset(int an_offset);\n+  \n+  /**\n+   * Clone all important settings to another stream.\n+   */\n+  public void cloneSettings(AbstractCdrOutput stream)\n+  {\n+    stream.setBigEndian(!little_endian);\n+    stream.setCodeSet(getCodeSet());\n+    stream.setVersion(giop);\n+    stream.setOrb(orb);\n+  }  \n \n   /**\n    * Set the current code set context.\n    */\n-  public void setCodeSet(cxCodeSet a_codeset)\n+  public void setCodeSet(CodeSetServiceContext a_codeset)\n   {\n     this.codeset = a_codeset;\n     narrow_charset = CharSets_OSF.getName(codeset.char_data);\n@@ -185,7 +205,7 @@ public void setCodeSet(cxCodeSet a_codeset)\n   /**\n    * Get the current code set context.\n    */\n-  public cxCodeSet getCodeSet()\n+  public CodeSetServiceContext getCodeSet()\n   {\n     return codeset;\n   }\n@@ -255,9 +275,9 @@ public void setBigEndian(boolean use_big_endian)\n    *\n    * @return the encapsulated stream.\n    */\n-  public cdrOutput createEncapsulation()\n+  public AbstractCdrOutput createEncapsulation()\n   {\n-    return new encapsulatedOutput(this, !little_endian);\n+    return new EncapsulationStream(this, !little_endian);\n   }\n \n   /**\n@@ -313,53 +333,56 @@ public void write_Context(Context context, ContextList contexts)\n   }\n \n   /**\n-  * Read the CORBA object. The object is written\n-  * form of the plain (not a string-encoded) IOR profile without the\n-  * heading endian indicator. The responsible method for reading such\n-  * data is {@link IOR.write_no_endian}.\n-  *\n-  * The null value is written as defined in OMG specification\n-  * (zero length string, followed by an empty set of profiles).\n-  */\n+   * Read the CORBA object. The object is written form of the plain (not a\n+   * string-encoded) IOR profile without the heading endian indicator. The\n+   * responsible method for reading such data is {@link IOR.write_no_endian}.\n+   * \n+   * The null value is written as defined in OMG specification (zero length\n+   * string, followed by an empty set of profiles).\n+   */\n   public void write_Object(org.omg.CORBA.Object x)\n   {\n-    if (x == null)\n+    ORB w_orb = orb;\n+    if (x instanceof IorProvider)\n       {\n-        IOR.write_null(this);\n+        ((IorProvider) x).getIor()._write_no_endian(this);\n         return;\n       }\n-    else if (x instanceof gnuServantObject)\n+    else if (x == null)\n       {\n-        // The ORB may be different if several ORBs coexist\n-        // in the same machine.\n-        gnuServantObject g = (gnuServantObject) x;\n-        IOR ior = g.orb.getLocalIor(x);\n-        ior._write_no_endian(this);\n+        IOR.write_null(this);\n         return;\n       }\n     else if (x instanceof ObjectImpl)\n       {\n         Delegate d = ((ObjectImpl) x)._get_delegate();\n \n-        if (d instanceof Simple_delegate)\n+        if (d instanceof IorProvider)\n           {\n-            Simple_delegate ido = (Simple_delegate) d;\n-            ido.getIor()._write_no_endian(this);\n+            ((IorProvider) d).getIor()._write_no_endian(this);\n             return;\n           }\n+        else\n+          {\n+            ORB d_orb = d.orb(x);\n+            if (d_orb != null)\n+              w_orb = d_orb;\n+          }\n       }\n \n     // Either this is not an ObjectImpl or it has the\n     // unexpected delegate. Try to convert via ORBs\n     // object_to_string().\n-    if (orb != null)\n+    if (w_orb != null)\n       {\n-        IOR ior = IOR.parse(orb.object_to_string(x));\n+        IOR ior = IOR.parse(w_orb.object_to_string(x));\n         ior._write_no_endian(this);\n         return;\n       }\n     else\n-      throw new BAD_OPERATION(\"Please set the ORB for this stream.\");\n+      throw new BAD_OPERATION(\n+        \"Please set the ORB for this stream, cannot write \"\n+          + x.getClass().getName());\n   }\n \n   /**\n@@ -399,7 +422,7 @@ public void write_any(Any x)\n       }\n     else\n       {\n-        primitiveTypeCode p = new primitiveTypeCode(TCKind.tk_null);\n+        PrimitiveTypeCode p = new PrimitiveTypeCode(TCKind.tk_null);\n         write_TypeCode(p);\n       }\n   }\n@@ -726,6 +749,7 @@ public void write_sequence(byte[] buf)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.CDR;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -737,7 +761,7 @@ public void write_sequence(byte[] buf)\n    * representing the stream buffer length (the number of\n    * bytes being subsequently written).\n    */\n-  public void write_sequence(cdrBufOutput from)\n+  public void write_sequence(BufferedCdrOutput from)\n   {\n     try\n       {\n@@ -747,6 +771,7 @@ public void write_sequence(cdrBufOutput from)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.CDR;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -874,28 +899,41 @@ public void write_ushort_array(short[] x, int ofs, int len)\n   }\n \n   /**\n-   * Writes the character as two byte short integer (Unicode value),\n-   * high byte first. Writes in Big Endian, but never writes the\n-   * endian indicator.\n-   *\n-   * The character is always written using the native UTF-16BE charset\n-   * because its size under arbitrary encoding is not evident.\n+   * Writes the character as two byte short integer (Unicode value), high byte\n+   * first. Writes in Big Endian, but never writes the endian indicator.\n+   * \n+   * The character is always written using the native UTF-16BE charset because\n+   * its size under arbitrary encoding is not evident.\n    */\n   public void write_wchar(char x)\n   {\n     try\n       {\n         if (giop.until_inclusive(1, 1))\n-          align(2);\n+          {\n+            align(2);\n \n-        if (wide_native)\n-          b.writeShort(x);\n+            if (wide_native)\n+              b.writeShort(x);\n+            else\n+              {\n+                OutputStreamWriter ow = new OutputStreamWriter(\n+                  (OutputStream) b, wide_charset);\n+                ow.write(x);\n+                ow.flush();\n+              }\n+          }\n+        else if (wide_native)\n+          {\n+            b.writeByte(2);\n+            b.writeChar(x);\n+          }\n         else\n           {\n-            OutputStreamWriter ow =\n-              new OutputStreamWriter((OutputStream) b, wide_charset);\n-            ow.write(x);\n-            ow.flush();\n+            String encoded = new String(new char[] { x });\n+            byte[] bytes = encoded.getBytes(wide_charset);\n+            b.write(bytes.length + 2);\n+            b.write(bytes);\n           }\n       }\n     catch (IOException ex)\n@@ -906,13 +944,13 @@ public void write_wchar(char x)\n \n   /**\n    * Write the array of wide chars.\n-   *\n+   * \n    * @param chars the array of wide chars\n    * @param offset offset\n    * @param length length\n-   *\n-   * The char array is always written using the native UTF-16BE charset\n-   * because the character size under arbitrary encoding is not evident.\n+   * \n+   * The char array is always written using the native UTF-16BE charset because\n+   * the character size under arbitrary encoding is not evident.\n    */\n   public void write_wchar_array(char[] chars, int offset, int length)\n   {\n@@ -998,12 +1036,12 @@ public String[] _truncatable_ids()\n   /** {@inheritDoc} */\n   public void write_Abstract(java.lang.Object value)\n   {\n-    write_Abstract(value);\n+    write_abstract_interface(value);\n   }\n \n   /** {@inheritDoc} */\n   public void write_Value(Serializable value)\n   {\n-    write_Value(value);\n+    write_value(value);\n   }\n }\n\\ No newline at end of file", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/cdrOutput.java"}, {"sha": "4d120fa2c0c5b9b91f3836423f59edf333b338c9", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractDataInput.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* abstractDataInputStream.java --\n+/* AbstractDataInput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -50,7 +50,7 @@\n  * @author Warren Levy (warrenl@cygnus.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public interface abstractDataInputStream\n+public interface AbstractDataInput\n {\n   /**\n    * This method reads bytes from the underlying stream into the specified", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/abstractDataInputStream.java"}, {"sha": "e37c0cb7dddeacfb62d006e2eeb60435bf7fc476", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractDataOutput.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractDataOutput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* abstractDataOutputStream.java --\n+/* AbstractDataOutput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -50,7 +50,7 @@\n  * @author Warren Levy (warrenl@cygnus.com)\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public interface abstractDataOutputStream\n+public interface AbstractDataOutput\n {\n   /**\n    * This method flushes any unwritten bytes to the underlying stream.", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/abstractDataOutputStream.java"}, {"sha": "e2710628a52daae0153ffd0e61d73b54ac3997ea", "filename": "libjava/classpath/gnu/CORBA/CDR/AligningInput.java", "status": "renamed", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* aligningInputStream.java --\n+/* AligningInput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -48,7 +48,7 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class aligningInputStream\n+public class AligningInput\n   extends ByteArrayInputStream\n {\n   /**\n@@ -61,23 +61,11 @@\n    *\n    * @param a_buffer a buffer to read from.\n    */\n-  public aligningInputStream(byte[] a_buffer)\n+  public AligningInput(byte[] a_buffer)\n   {\n     super(a_buffer);\n   }\n \n-  /**\n-   * Create a stream, reading from the given buffer region.\n-   *\n-   * @param a_buffer a buffer to read from.\n-   * @param offset the offset of the region.\n-   * @param length thr length of the region.\n-   */\n-  public aligningInputStream(byte[] a_buffer, int offset, int length)\n-  {\n-    super(a_buffer, offset, length);\n-  }\n-\n   /**\n    * Set the alignment offset, if the index of the first byte in the\n    * stream is different from 0.\n@@ -119,4 +107,25 @@ public byte[] getBuffer()\n   {\n     return buf;\n   }\n+  \n+  /**\n+   * Get the current position in the buffer.\n+   * \n+   * @return The position in the buffer, taking offset into consideration.\n+   */\n+  public int getPosition()\n+  {\n+    return pos + offset;\n+  }  \n+  \n+  /**\n+   * Jump to the given position, taking offset into consideration.\n+   */\n+  public void seek(int position)\n+  {\n+    if (position < offset || position > (count+offset))\n+      throw new ArrayIndexOutOfBoundsException(position\n+        + \" is out of valid [\"+offset+\"..\" + (count+offset) + \"[ range\");\n+    pos = position - offset;\n+  }  \n }", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/aligningInputStream.java"}, {"sha": "135f75af6a719650ef05f3832447a23dda797b5f", "filename": "libjava/classpath/gnu/CORBA/CDR/AligningOutput.java", "status": "renamed", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAligningOutput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* aligningOutputStream.java --\n+/* AligningOutput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,7 +38,6 @@\n \n package gnu.CORBA.CDR;\n \n-import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n \n import org.omg.CORBA.BAD_PARAM;\n@@ -49,7 +48,7 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class aligningOutputStream\n+public class AligningOutput\n   extends ByteArrayOutputStream\n {\n   /**\n@@ -60,14 +59,14 @@\n   /**\n    * Create a stream with the default intial buffer size.\n    */\n-  public aligningOutputStream()\n+  public AligningOutput()\n   {\n   }\n \n   /**\n    * Create a stream with the given intial buffer size.\n    */\n-  public aligningOutputStream(int initial_size)\n+  public AligningOutput(int initial_size)\n   {\n     super(initial_size);\n   }\n@@ -118,4 +117,32 @@ public void skip(int bytes)\n         write(0);\n       }\n   }\n+  \n+  /**\n+   * Get the current position in the buffer.\n+   * \n+   * @return The position in the buffer, taking offset into consideration.\n+   */\n+  public int getPosition()\n+  {\n+    return size()+offset;\n+  }\n+  \n+  /**\n+   * Seek to the given position (not in use).\n+   */\n+  public void seek(int position)\n+  {\n+    count = position - offset;\n+  }\n+  \n+  /**\n+   * Get the buffer without copying it. Use with care.\n+   */\n+  public byte[] getBuffer()\n+  {\n+    return buf;\n+  }\n+  \n+\n }", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/aligningOutputStream.java"}, {"sha": "7a4d9c5aa8f283d125f500ff5b7cc85553d672c4", "filename": "libjava/classpath/gnu/CORBA/CDR/ArrayValueHelper.java", "status": "added", "additions": 254, "deletions": 0, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FArrayValueHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FArrayValueHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FArrayValueHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,254 @@\n+/* ArrayValueHelper.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import gnu.CORBA.ObjectCreator;\n+\n+import org.omg.CORBA.BooleanSeqHelper;\n+import org.omg.CORBA.CharSeqHelper;\n+import org.omg.CORBA.DoubleSeqHelper;\n+import org.omg.CORBA.FloatSeqHelper;\n+import org.omg.CORBA.LongLongSeqHelper;\n+import org.omg.CORBA.LongSeqHelper;\n+import org.omg.CORBA.OctetSeqHelper;\n+import org.omg.CORBA.ShortSeqHelper;\n+import org.omg.CORBA.portable.BoxedValueHelper;\n+import org.omg.CORBA.portable.InputStream;\n+import org.omg.CORBA.portable.OutputStream;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.rmi.Remote;\n+\n+import javax.rmi.CORBA.Util;\n+import javax.rmi.CORBA.ValueHandler;\n+\n+/**\n+ * Writes arrays as a boxed value types. A single instance is used to write a\n+ * single array. This class is only used with RMI/IIOP, to handle array boxed\n+ * values.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+class ArrayValueHelper\n+  implements BoxedValueHelper\n+{\n+  /**\n+   * The value handler (one for all instances).\n+   */\n+  static ValueHandler handler = Util.createValueHandler();\n+\n+  /**\n+   * A class of the array being written.\n+   */\n+  Class arrayClass;\n+\n+  /**\n+   * The array component class.\n+   */\n+  Class component;\n+\n+  /**\n+   * The array component repository Id.\n+   */\n+  String componentId;\n+\n+  /**\n+   * If true, the array members are written as objects rather than as values.\n+   * True for Remotes and CORBA objects.\n+   */\n+  boolean written_as_object()\n+  {\n+    return org.omg.CORBA.Object.class.isAssignableFrom(component)\n+      || Remote.class.isAssignableFrom(component);\n+  }\n+\n+  /**\n+   * Creates the instance of the helper to write this specific array class.\n+   */\n+  ArrayValueHelper(Class an_arrayClass)\n+  {\n+    arrayClass = an_arrayClass;\n+  }\n+\n+  /**\n+   * Get the array repository Id that will be the RMI repository id.\n+   */\n+  public String get_id()\n+  {\n+    return ObjectCreator.getRepositoryId(arrayClass);\n+  }\n+\n+  /**\n+   * Read the array from the input stream.\n+   */\n+  public Serializable read_value(InputStream input)\n+  {\n+    if (input instanceof HeadlessInput)\n+      {\n+        ((HeadlessInput) input).subsequentCalls = true;\n+      }\n+\n+    component = arrayClass.getComponentType();\n+\n+    if (component.equals(byte.class))\n+      return OctetSeqHelper.read(input);\n+    else if (component.equals(String.class))\n+      {\n+        // String array is optimized because this may be frequent.\n+        String[] s = new String[input.read_long()];\n+\n+        for (int i = 0; i < s.length; i++)\n+          s[i] = (String) Vio.read(input, Vio.m_StringValueHelper);\n+        return s;\n+      }\n+    else if (component.equals(int.class))\n+      return LongSeqHelper.read(input);\n+    else if (component.equals(long.class))\n+      return LongLongSeqHelper.read(input);\n+    else if (component.equals(double.class))\n+      return DoubleSeqHelper.read(input);\n+    else if (component.equals(float.class))\n+      return FloatSeqHelper.read(input);\n+    else if (component.equals(boolean.class))\n+      return BooleanSeqHelper.read(input);\n+    else if (component.equals(short.class))\n+      return ShortSeqHelper.read(input);\n+    else if (component.equals(char.class))\n+      return CharSeqHelper.read(input);\n+    else\n+      {\n+        // Read others, use reflection.\n+        int n = input.read_long();\n+\n+        gnuValueStream s = null;\n+\n+        Serializable array = (Serializable) Array.newInstance(component, n);\n+        if (written_as_object())\n+          for (int i = 0; i < n; i++)\n+            {\n+              gnuRuntime g;\n+              int position;\n+              if (input instanceof gnuValueStream)\n+                {\n+                  s = (gnuValueStream) input;\n+                  g = s.getRunTime();\n+                  position = s.getPosition();\n+                }\n+              else\n+                {\n+                  g = null;\n+                  position = -1;\n+                }\n+\n+              if (input instanceof HeadlessInput)\n+                ((HeadlessInput) input).subsequentCalls = true;\n+\n+              Object o = handler.readValue(input, position, component, null, g);\n+              Array.set(array, i, o);\n+            }\n+        else\n+          for (int i = 0; i < n; i++)\n+            Array.set(array, i, Vio.read(input, component));\n+        return array;\n+      }\n+  }\n+\n+  /**\n+   * Write the array to the input stream.\n+   */\n+  public void write_value(OutputStream output, Serializable value)\n+  {\n+    if (output instanceof gnuValueStream)\n+      {\n+        gnuRuntime r = ((gnuValueStream) output).getRunTime();\n+        if (r != null)\n+          r.target = null;\n+      }\n+\n+    if (value instanceof byte[])\n+      OctetSeqHelper.write(output, (byte[]) value);\n+    else if (value instanceof String[])\n+      {\n+        String[] s = (String[]) value;\n+        output.write_long(s.length);\n+        for (int i = 0; i < s.length; i++)\n+          Vio.write(output, s[i], Vio.m_StringValueHelper);\n+      }\n+    else if (value instanceof int[])\n+      LongSeqHelper.write(output, (int[]) value);\n+    else if (value instanceof long[])\n+      LongLongSeqHelper.write(output, (long[]) value);\n+    else if (value instanceof double[])\n+      DoubleSeqHelper.write(output, (double[]) value);\n+    else if (value instanceof float[])\n+      FloatSeqHelper.write(output, (float[]) value);\n+    else if (value instanceof boolean[])\n+      BooleanSeqHelper.write(output, (boolean[]) value);\n+    else if (value instanceof short[])\n+      ShortSeqHelper.write(output, (short[]) value);\n+    else if (value instanceof char[])\n+      CharSeqHelper.write(output, (char[]) value);\n+    else\n+      {\n+        // Write others, use reflection.\n+        component = arrayClass.getComponentType();\n+\n+        int n = Array.getLength(value);\n+        output.write_long(n);\n+        if (written_as_object())\n+          for (int i = 0; i < n; i++)\n+            {\n+              Object o = Array.get(value, i);\n+              if (o == null)\n+                output.write_Object(null);\n+              else\n+                // CORBA objects have another notation.\n+                handler.writeValue(output, (Serializable) o);\n+            }\n+        else\n+          {\n+            for (int i = 0; i < n; i++)\n+              Vio.write(output, (Serializable) Array.get(value, i),\n+                component);\n+          }\n+\n+      }\n+  }\n+}"}, {"sha": "1559d75a41e0b3efdfc111fca9dabd4a936b026b", "filename": "libjava/classpath/gnu/CORBA/CDR/BigEndianInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -49,7 +49,7 @@\n  */\n public class BigEndianInputStream\n   extends DataInputStream\n-  implements abstractDataInputStream\n+  implements AbstractDataInput\n {\n   /**\n    * Delegates to the parent constructor."}, {"sha": "7d3b02ec9508af6811f00075e109488a2d9100b0", "filename": "libjava/classpath/gnu/CORBA/CDR/BigEndianOutputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBigEndianOutputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -50,7 +50,7 @@\n  */\n public class BigEndianOutputStream\n   extends DataOutputStream\n-  implements abstractDataOutputStream\n+  implements AbstractDataOutput\n {\n   /**\n    * Delegate functionality to the parent constructor."}, {"sha": "69bf95beb66fe7db40584d043303cb5554aad932", "filename": "libjava/classpath/gnu/CORBA/CDR/BufferedCdrOutput.java", "status": "renamed", "additions": 55, "deletions": 14, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferedCdrOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferedCdrOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferedCdrOutput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cdrBufOutput.java --\n+/* BufferedCdrOutput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -41,41 +41,47 @@\n import java.io.ByteArrayOutputStream;\n \n /**\n- * A CORBA output stream, writing data into the internal\n- * buffer ({@link ByteArrayOutputStream}).\n- *\n+ * A CORBA output stream, writing data into the internal buffer ({@link ByteArrayOutputStream}).\n+ * \n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class cdrBufOutput\n-  extends cdrOutput\n+public class BufferedCdrOutput\n+  extends AbstractCdrOutput\n+  implements gnuValueStream\n {\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+\n   /**\n    * The byte buffer.\n    */\n-  public final aligningOutputStream buffer;\n+  public final AligningOutput buffer;\n \n   /**\n    * Creates the instance with the given initial buffer size.\n+   * \n    * @param bufSize the buffer size.\n    */\n-  public cdrBufOutput(int bufSize)\n+  public BufferedCdrOutput(int bufSize)\n   {\n-    buffer = new aligningOutputStream(bufSize);\n+    buffer = new AligningOutput(bufSize);\n     setOutputStream(buffer);\n   }\n \n   /**\n    * Creates the instance with the default buffer size.\n    */\n-  public cdrBufOutput()\n+  public BufferedCdrOutput()\n   {\n-    buffer = new aligningOutputStream();\n+    buffer = new AligningOutput();\n     setOutputStream(buffer);\n   }\n \n   /**\n-   * Set the alignment offset, if the index of the first byte in the\n-   * stream is different from 0.\n+   * Set the alignment offset, if the index of the first byte in the stream is\n+   * different from 0.\n    */\n   public void setOffset(int an_offset)\n   {\n@@ -95,7 +101,7 @@ public void align(int boundary)\n    */\n   public org.omg.CORBA.portable.InputStream create_input_stream()\n   {\n-    cdrBufInput in = new cdrBufInput(buffer.toByteArray());\n+    BufferredCdrInput in = new BufferredCdrInput(buffer.toByteArray());\n     in.setOrb(orb);\n \n     in.setVersion(giop);\n@@ -112,4 +118,39 @@ public void reset()\n     buffer.reset();\n     setOutputStream(buffer);\n   }\n+\n+  /**\n+   * Get the current position in the buffer.\n+   * \n+   * @return The position in the buffer, taking offset into consideration.\n+   */\n+  public int getPosition()\n+  {\n+    return buffer.getPosition();\n+  }\n+\n+  /**\n+   * Get the associated RunTime.\n+   */\n+  public gnuRuntime getRunTime()\n+  {\n+    return runtime;\n+  }\n+\n+  /**\n+   * Replace the instance of RunTime.\n+   */\n+  public void setRunTime(gnuRuntime a_runtime)\n+  {\n+    runtime = a_runtime;\n+  }\n+\n+  /**\n+   * Seek to the given position.\n+   */\n+  public void seek(int position)\n+  {\n+    buffer.seek(position);\n+  }\n+\n }", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/cdrBufOutput.java"}, {"sha": "f0159a88dac5d06026ad6ad53713f7e7c0987ad5", "filename": "libjava/classpath/gnu/CORBA/CDR/BufferredCdrInput.java", "status": "renamed", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferredCdrInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferredCdrInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FBufferredCdrInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cdrBufInput.java --\n+/* BufferredCdrInput.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -43,28 +43,30 @@\n  * The CDR input stream that reads data from the byte buffer.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n- *\n- * TODO character encoding. Now the encoding can be set, but it is ignored.\n- * If you take this task, scan 'TODO character encoding' for\n- * relevant places.\n  */\n-public class cdrBufInput\n-  extends cdrInput\n+public class BufferredCdrInput\n+  extends AbstractCdrInput \n+  implements gnuValueStream\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * The byte array input stream to read data from.\n    */\n-  public final aligningInputStream buffer;\n+  public final AligningInput buffer;\n \n   /**\n    * Creates the CDR input stream that reads from the given buffer\n    * array.\n    *\n    * @param a_buffer an array to read from.\n    */\n-  public cdrBufInput(byte[] a_buffer)\n+  public BufferredCdrInput(byte[] a_buffer)\n   {\n-    buffer = new aligningInputStream(a_buffer);\n+    buffer = new AligningInput(a_buffer);\n     setInputStream(buffer);\n   }\n \n@@ -112,4 +114,40 @@ public void reset()\n     buffer.reset();\n     setInputStream(buffer);\n   }\n+  \n+  /**\n+   * Get the current position in the buffer.\n+   * \n+   * @return The position in the buffer, taking offset into consideration.\n+   */\n+  public int getPosition()\n+  {\n+    return buffer.getPosition();\n+  }\n+  \n+  /**\n+   * Jump to the given position, taking offset into consideration.\n+   */\n+  public void seek(int position)\n+  {\n+    buffer.seek(position);\n+    setInputStream(buffer);\n+  }\n+  \n+  /**\n+   * Get the associated RunTime.\n+   */\n+  public gnuRuntime getRunTime()\n+  {\n+    return runtime;\n+  }  \n+  \n+  /**\n+   * Replace the instance of RunTime.\n+   */\n+  public void setRunTime(gnuRuntime a_runtime)\n+  {\n+    runtime = a_runtime;\n+  }\n+  \n }", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/cdrBufInput.java"}, {"sha": "4945d9c906af41ceea2a9df976252c88e7e333b6", "filename": "libjava/classpath/gnu/CORBA/CDR/EncapsulationStream.java", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FEncapsulationStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FEncapsulationStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FEncapsulationStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -48,8 +48,8 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class encapsulatedOutput\n-  extends cdrOutput\n+public class EncapsulationStream\n+  extends AbstractCdrOutput\n {\n   /**\n    * The Big Endian (most siginificant byte first flag).\n@@ -64,7 +64,7 @@\n   /**\n    * The byte buffer.\n    */\n-  public final aligningOutputStream buffer;\n+  public final AligningOutput buffer;\n \n   /**\n    * The stream, where the data are being encapsulated.\n@@ -75,11 +75,11 @@\n    * Create the EncapsulationOutput with the given parent stream\n    * and the specified encoding.\n    */\n-  public encapsulatedOutput(org.omg.CORBA.portable.OutputStream _parent,\n+  public EncapsulationStream(org.omg.CORBA.portable.OutputStream _parent,\n                             boolean use_big_endian)\n   {\n     super();\n-    buffer = new aligningOutputStream();\n+    buffer = new AligningOutput();\n     setOutputStream(buffer);\n     parent = _parent;\n     write(use_big_endian?BIG_ENDIAN:LITTLE_ENDIAN);\n@@ -126,7 +126,7 @@ public void close()\n    */\n   public org.omg.CORBA.portable.InputStream create_input_stream()\n   {\n-    cdrBufInput in = new cdrBufInput(buffer.toByteArray());\n+    BufferredCdrInput in = new BufferredCdrInput(buffer.toByteArray());\n     in.setOrb(orb);\n \n     in.setVersion(giop);", "previous_filename": "libjava/classpath/gnu/CORBA/CDR/encapsulatedOutput.java"}, {"sha": "0c18dafb1951fd2a9387e5508050f687a6add865", "filename": "libjava/classpath/gnu/CORBA/CDR/HeadlessInput.java", "status": "added", "additions": 749, "deletions": 0, "changes": 749, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,749 @@\n+/* HeadlessInput.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import gnu.CORBA.Minor;\n+\n+import org.omg.CORBA.Any;\n+import org.omg.CORBA.AnySeqHolder;\n+import org.omg.CORBA.BooleanSeqHolder;\n+import org.omg.CORBA.CharSeqHolder;\n+import org.omg.CORBA.Context;\n+import org.omg.CORBA.DataInputStream;\n+import org.omg.CORBA.DoubleSeqHolder;\n+import org.omg.CORBA.FloatSeqHolder;\n+import org.omg.CORBA.LongLongSeqHolder;\n+import org.omg.CORBA.LongSeqHolder;\n+import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.ORB;\n+import org.omg.CORBA.OctetSeqHolder;\n+import org.omg.CORBA.Principal;\n+import org.omg.CORBA.ShortSeqHolder;\n+import org.omg.CORBA.TypeCode;\n+import org.omg.CORBA.ULongLongSeqHolder;\n+import org.omg.CORBA.ULongSeqHolder;\n+import org.omg.CORBA.UShortSeqHolder;\n+import org.omg.CORBA.WCharSeqHolder;\n+import org.omg.CORBA.portable.BoxedValueHelper;\n+import org.omg.CORBA.portable.InputStream;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n+/**\n+ * Substitutes the main stream in factories when the header is already behind.\n+ * Overrides methods that may be invoked from the factory, forcing not to read\n+ * the header if called first time on this stream.\n+ * \n+ * This stream reverts to default behavior if one or more call are made (reading\n+ * value types that are nested fields of the value type).\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class HeadlessInput\n+  extends org.omg.CORBA_2_3.portable.InputStream\n+  implements DataInputStream, gnuValueStream\n+{\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+\n+  /**\n+   * Indicates that no positional information is available.\n+   */\n+  static final int NONE = -1;\n+\n+  /**\n+   * If true, this is not the first call.\n+   */\n+  public boolean subsequentCalls;\n+\n+  /**\n+   * The enclosed stream.\n+   */\n+  final BufferredCdrInput stream;\n+\n+  /**\n+   * Create an instance, reading from the given buffer.\n+   * \n+   * @param a_stram a stream from where the data will be read.\n+   * @param inheritSettings a stream from that endian and other settings are\n+   * inherited.\n+   */\n+  public HeadlessInput(BufferredCdrInput a_stream, InputStream inheritSettings)\n+  {\n+    stream = a_stream;\n+\n+    if (inheritSettings instanceof AbstractCdrInput)\n+      {\n+        AbstractCdrInput t = (AbstractCdrInput) inheritSettings;\n+        t.cloneSettings(stream);\n+      }\n+    else if (stream.orb() == null)\n+      stream.setOrb(inheritSettings.orb());\n+\n+    if (inheritSettings instanceof gnuValueStream\n+      && stream.getRunTime() == null)\n+      {\n+        stream.setRunTime(((gnuValueStream) inheritSettings).getRunTime());\n+      }\n+  }\n+\n+  /**\n+   * Tries to read using boxed value helper.\n+   */\n+  public Serializable read_value(BoxedValueHelper helper)\n+  {\n+    if (subsequentCalls)\n+      return stream.read_value(helper);\n+    else\n+      {\n+        subsequentCalls = true;\n+        return helper.read_value(this);\n+      }\n+  }\n+\n+  /**\n+   * Tries to locate a factory using repository id.\n+   */\n+  public Serializable read_value(String repository_id)\n+  {\n+    if (subsequentCalls)\n+      return stream.read_value(repository_id);\n+    else\n+      {\n+        subsequentCalls = true;\n+        Serializable value = (Serializable) Vio.readValue(this, NONE, null,\n+          null, repository_id, null, null);\n+        return value;\n+      }\n+  }\n+\n+  /**\n+   * Try to read when having an unitialised value.\n+   */\n+  public Serializable read_value(Serializable value)\n+  {\n+    if (subsequentCalls)\n+      return stream.read_value(value);\n+    else\n+      {\n+        subsequentCalls = true;\n+        value = (Serializable) Vio.readValue(this, NONE, value, null, null,\n+          null, null);\n+        return value;\n+      }\n+  }\n+\n+  /**\n+   * Try to read when having an unitialised value.\n+   */\n+  public Serializable read_value(Class clz)\n+  {\n+    if (subsequentCalls)\n+      return stream.read_value(clz);\n+    else\n+      {\n+        try\n+          {\n+            subsequentCalls = true;\n+            Serializable value = (Serializable) Vio.instantiateAnyWay(clz);\n+            value = (Serializable) Vio.readValue(this, NONE, value, null, null,\n+              null, null);\n+            return value;\n+          }\n+        catch (Exception ex)\n+          {\n+            MARSHAL m = new MARSHAL(\"Can't read an instance of \"\n+              + clz.getName());\n+            m.minor = Minor.Value;\n+            m.initCause(ex);\n+            throw m;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int available()\n+    throws IOException\n+  {\n+    return stream.available();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void close()\n+    throws IOException\n+  {\n+    stream.close();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void mark(int readlimit)\n+  {\n+    stream.mark(readlimit);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public boolean markSupported()\n+  {\n+    return stream.markSupported();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public ORB orb()\n+  {\n+    return stream.orb();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Object read_abstract_interface()\n+  {\n+    return stream.read_abstract_interface();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Object read_abstract_interface(Class clz)\n+  {\n+    return stream.read_abstract_interface(clz);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Any read_any()\n+  {\n+    return stream.read_any();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_boolean_array(boolean[] value, int offset, int length)\n+  {\n+    stream.read_boolean_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public boolean read_boolean()\n+  {\n+    return stream.read_boolean();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_char_array(char[] value, int offset, int length)\n+  {\n+    stream.read_char_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public char read_char()\n+  {\n+    return stream.read_char();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Context read_Context()\n+  {\n+    return stream.read_Context();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_double_array(double[] value, int offset, int length)\n+  {\n+    stream.read_double_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public double read_double()\n+  {\n+    return stream.read_double();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public BigDecimal read_fixed()\n+  {\n+    return stream.read_fixed();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_float_array(float[] value, int offset, int length)\n+  {\n+    stream.read_float_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public float read_float()\n+  {\n+    return stream.read_float();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_long_array(int[] value, int offset, int length)\n+  {\n+    stream.read_long_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int read_long()\n+  {\n+    return stream.read_long();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_longlong_array(long[] value, int offset, int length)\n+  {\n+    stream.read_longlong_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public long read_longlong()\n+  {\n+    return stream.read_longlong();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public org.omg.CORBA.Object read_Object()\n+  {\n+    return stream.read_Object();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public org.omg.CORBA.Object read_Object(Class klass)\n+  {\n+    return stream.read_Object(klass);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_octet_array(byte[] value, int offset, int length)\n+  {\n+    stream.read_octet_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public byte read_octet()\n+  {\n+    return stream.read_octet();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Principal read_Principal()\n+  {\n+    return stream.read_Principal();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_short_array(short[] value, int offset, int length)\n+  {\n+    stream.read_short_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public short read_short()\n+  {\n+    return stream.read_short();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public String read_string()\n+  {\n+    return stream.read_string();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public TypeCode read_TypeCode()\n+  {\n+    return stream.read_TypeCode();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ulong_array(int[] value, int offset, int length)\n+  {\n+    stream.read_ulong_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int read_ulong()\n+  {\n+    return stream.read_ulong();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ulonglong_array(long[] value, int offset, int length)\n+  {\n+    stream.read_ulonglong_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public long read_ulonglong()\n+  {\n+    return stream.read_ulonglong();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ushort_array(short[] value, int offset, int length)\n+  {\n+    stream.read_ushort_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public short read_ushort()\n+  {\n+    return stream.read_ushort();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Serializable read_value()\n+  {\n+    return read_value((Serializable) null);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_wchar_array(char[] value, int offset, int length)\n+  {\n+    stream.read_wchar_array(value, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public char read_wchar()\n+  {\n+    return stream.read_wchar();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public String read_wstring()\n+  {\n+    return stream.read_wstring();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int read()\n+    throws IOException\n+  {\n+    return stream.read();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int read(byte[] b, int off, int len)\n+    throws IOException\n+  {\n+    return stream.read(b, off, len);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int read(byte[] b)\n+    throws IOException\n+  {\n+    return stream.read(b);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void reset()\n+    throws IOException\n+  {\n+    stream.reset();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public long skip(long n)\n+    throws IOException\n+  {\n+    return stream.skip(n);\n+  }\n+\n+  /**\n+   * Get a string representation.\n+   */\n+  public String toString()\n+  {\n+    return \"HeadlessInput+\" + stream.toString();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public String[] _truncatable_ids()\n+  {\n+    return stream._truncatable_ids();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public Object read_Abstract()\n+  {\n+    return stream.read_Abstract();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_any_array(AnySeqHolder holder, int offset, int length)\n+  {\n+    stream.read_any_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_boolean_array(BooleanSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_boolean_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_char_array(CharSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_char_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_double_array(DoubleSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_double_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_float_array(FloatSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_float_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_long_array(LongSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_long_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_longlong_array(LongLongSeqHolder holder, int offset,\n+    int length)\n+  {\n+    stream.read_longlong_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_octet_array(OctetSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_octet_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_short_array(ShortSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_short_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ulong_array(ULongSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_ulong_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ulonglong_array(ULongLongSeqHolder holder, int offset,\n+    int length)\n+  {\n+    stream.read_ulonglong_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_ushort_array(UShortSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_ushort_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to read_value.\n+   */\n+  public Serializable read_Value()\n+  {\n+    return read_value();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void read_wchar_array(WCharSeqHolder holder, int offset, int length)\n+  {\n+    stream.read_wchar_array(holder, offset, length);\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public int getPosition()\n+  {\n+    return stream.getPosition();\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public gnuRuntime getRunTime()\n+  {\n+    return stream.runtime;\n+  }\n+\n+  /**\n+   * Replace the instance of RunTime.\n+   */\n+  public void setRunTime(gnuRuntime a_runtime)\n+  {\n+    stream.runtime = a_runtime;\n+  }\n+\n+  /**\n+   * Delegates functionality to the underlying stream.\n+   */\n+  public void seek(int position)\n+  {\n+    stream.seek(position);\n+  }\n+\n+}\n\\ No newline at end of file"}, {"sha": "3259a48770cb20cfcdd506d6e072f1b76065d45c", "filename": "libjava/classpath/gnu/CORBA/CDR/IDLTypeHelper.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FIDLTypeHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FIDLTypeHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FIDLTypeHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,169 @@\n+/* IDLTypeHelper.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import gnu.CORBA.Minor;\n+\n+import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.portable.BoxedValueHelper;\n+import org.omg.CORBA.portable.InputStream;\n+import org.omg.CORBA.portable.OutputStream;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+\n+/**\n+ * Handles case when the CORBA IDL type with the known helper is wrapped into\n+ * Value type.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class IDLTypeHelper\n+  implements BoxedValueHelper\n+{\n+  /**\n+   * A helper class.\n+   */\n+  protected Class helper;\n+\n+  /**\n+   * Argument values for Helper.id().\n+   */\n+  static final Object[] ARGS_ID_V = new Object[0];\n+\n+  /**\n+   * Argument types for Helper.id()).\n+   */\n+  static final Class[] ARGS_ID = new Class[0];\n+\n+  /**\n+   * Argument types for Helper.read.\n+   */\n+  static final Class[] ARGS_READ = new Class[] { org.omg.CORBA.portable.InputStream.class };\n+\n+  /**\n+   * Create an IDLTypeHelper that works via given helper class.\n+   */\n+  public IDLTypeHelper(Class a_helperClass)\n+  {\n+    helper = a_helperClass;\n+  }\n+\n+  /**\n+   * Get the Id, returned by this helper (use reflection).\n+   */\n+  public String get_id()\n+  {\n+    try\n+      {\n+        Method m = helper.getMethod(\"id\", ARGS_ID);\n+        return (String) m.invoke(null, ARGS_ID_V);\n+      }\n+    catch (Exception ex)\n+      {\n+        MARSHAL m = new MARSHAL(msg() + \" id()\");\n+        m.minor = Minor.Boxed;\n+        m.initCause(ex);\n+        throw m;\n+      }\n+  }\n+\n+  /**\n+   * Read an instance from the stream.\n+   */\n+  public Serializable read_value(InputStream input)\n+  {\n+    try\n+      {\n+        Method m = helper.getMethod(\"read\", ARGS_READ);\n+        return (Serializable) m.invoke(null, new Object[] { input });\n+      }\n+    catch (Exception ex)\n+      {\n+        MARSHAL m = new MARSHAL(msg() + \" read(..)\");\n+        m.minor = Minor.Boxed;        \n+        m.initCause(ex);\n+        throw m;\n+      }\n+  }\n+\n+  /**\n+   * Write the instance to the stream.\n+   */\n+  public void write_value(OutputStream output, Serializable value)\n+  {\n+    try\n+      {\n+        Method[] m = helper.getMethods();\n+\n+        for (int i = 0; i < m.length; i++)\n+          {\n+            if (m[i].getName().equals(\"write\")\n+              && ((m[i].getModifiers() & Modifier.STATIC) != 0))\n+              {\n+                Class[] p = m[i].getParameterTypes();\n+\n+                if (p.length == 2 && OutputStream.class.isAssignableFrom(p[0])\n+                  && p[1].isAssignableFrom(value.getClass()))\n+                  {\n+                    m[i].invoke(null, new Object[] { output, value });\n+                    return;\n+                  }\n+              }\n+          }\n+      }\n+    catch (Exception ex)\n+      {\n+        MARSHAL m = new MARSHAL(msg() + \" write(..)\");\n+        m.minor = Minor.Boxed;        \n+        m.initCause(ex);\n+        throw m;\n+      }\n+  }\n+\n+  /**\n+   * Create the start of message for exceptions.\n+   */\n+  String msg()\n+  {\n+    return \"Failed calling \" + helper.getName() + \" method: \";\n+  }\n+\n+}"}, {"sha": "02cfa08ae8e0dfa8739117cfe8c772e5de50de15", "filename": "libjava/classpath/gnu/CORBA/CDR/LittleEndianInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -55,7 +55,7 @@\n  */\n public class LittleEndianInputStream\n   extends FilterInputStream\n-  implements abstractDataInputStream\n+  implements AbstractDataInput\n {\n   // Byte buffer, used to make primitive read calls more efficient.\n   byte[] buf = new byte[ 8 ];"}, {"sha": "6791a82e7c390c12526638b7784958b45be571c5", "filename": "libjava/classpath/gnu/CORBA/CDR/LittleEndianOutputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianOutputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -55,7 +55,7 @@\n  */\n public class LittleEndianOutputStream\n   extends FilterOutputStream\n-  implements abstractDataOutputStream\n+  implements AbstractDataOutput\n {\n   /**\n    * This method initializes an instance of <code>DataOutputStream</code> to"}, {"sha": "314dd8eb948347c49f66b867c8c18ce849ab3f27", "filename": "libjava/classpath/gnu/CORBA/CDR/UnknownExceptionCtxHandler.java", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FUnknownExceptionCtxHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FUnknownExceptionCtxHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FUnknownExceptionCtxHandler.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,292 @@\n+/* UnknownExceptionCtxHandler.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import gnu.CORBA.Minor;\n+import gnu.CORBA.ObjectCreator;\n+import gnu.CORBA.GIOP.ServiceContext;\n+\n+import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.NO_IMPLEMENT;\n+import org.omg.CORBA.StringValueHelper;\n+import org.omg.CORBA.portable.OutputStream;\n+\n+import java.lang.reflect.Constructor;\n+import java.util.StringTokenizer;\n+\n+import javax.rmi.CORBA.Util;\n+\n+/**\n+ * Reads the data about an unknown exception from the UnknownExceptionInfo.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class UnknownExceptionCtxHandler\n+  extends Vio\n+{\n+  /**\n+   * Encode exception and add its recored to the message service contexts.\n+   */\n+  public static ServiceContext[] addExceptionContext(ServiceContext[] current,\n+    Throwable exception, Object details)\n+  {\n+    try\n+      {\n+        ServiceContext[] c = new ServiceContext[current.length + 1];\n+        if (current.length > 0)\n+          System.arraycopy(current, 0, c, 0, current.length);\n+\n+        BufferedCdrOutput output = new BufferedCdrOutput();\n+\n+        if (details instanceof OutputStream)\n+          output.setOrb(((OutputStream) output).orb());\n+\n+        if (details instanceof AbstractCdrOutput)\n+          ((AbstractCdrOutput) details).cloneSettings(output);\n+\n+        write(output, exception);\n+\n+        ServiceContext xc = new ServiceContext();\n+        xc.context_id = ServiceContext.UnknownExceptionInfo;\n+        xc.context_data = output.buffer.toByteArray();\n+        c[current.length] = xc;\n+        return c;\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+        return current;\n+      }\n+  }\n+\n+  /**\n+   * Write data about unknown exception.\n+   */\n+  public static void write(BufferedCdrOutput output, Throwable t)\n+  {\n+    t.fillInStackTrace();\n+    output.write_Value(t);\n+  }\n+\n+  /**\n+   * Read the data about an unknown exception from the UnknownExceptionInfo.\n+   * Following the documentation, this must be just value type, but it seems\n+   * that in Sun's implementation is is not, as starts from 0x0. For value type,\n+   * this would be null.\n+   * \n+   * TODO Implement reading and writing in Sun format, making Classpath IIOP\n+   * interoperable with Sun's implementation. Current inmplementation reads and\n+   * reproduces the exception class type only.\n+   * \n+   * @param input the input stream to read the context (orb and other settings\n+   * are inherited from the main stream that received the message).\n+   * \n+   * @param contexts all service contexts that were present in the message.\n+   * \n+   * @return the Throwable, extracted from context, on null, if this has failed.\n+   */\n+  public static Throwable read(BufferredCdrInput input, ServiceContext[] contexts)\n+  {\n+    input.mark(Integer.MAX_VALUE);\n+\n+    int h = input.read_long();\n+    if (h == 0)\n+      {\n+        // This block reads exception info in the Sun specific format.\n+        // (currently we read the exception name only).\n+        try\n+          {\n+            // We may need to jump back if the value is read via value\n+            // factory.\n+            input.mark(512);\n+\n+            int value_tag = input.read_long();\n+            checkTag(value_tag);\n+\n+            String codebase = null;\n+            String[] ids = null;\n+            String id = null;\n+\n+            // Check for the agreed null value.\n+            if (value_tag == vt_NULL)\n+              return null;\n+            else if (value_tag == vt_INDIRECTION)\n+              return (Throwable) readIndirection(input);\n+            else\n+              {\n+                // Read the value.\n+                if ((value_tag & vf_CODEBASE) != 0)\n+                  {\n+                    // The codebase is present. The codebase is a space\n+                    // separated list of URLs from where the implementing\n+                    // code can be downloaded.\n+                    codebase = read_string(input);\n+                  }\n+\n+                if ((value_tag & vf_MULTIPLE_IDS) != 0)\n+                  {\n+                    // Multiple supported repository ids are present.\n+                    ids = read_string_array(input);\n+                  }\n+                else if ((value_tag & vf_ID) != 0)\n+                  {\n+                    // Single supported repository id is present.\n+                    id = read_string(input);\n+                  }\n+              }\n+\n+            java.lang.Object ox = createInstance(id, ids, codebase);\n+\n+            return (Throwable) ox;\n+          }\n+        catch (Exception ex)\n+          {\n+            ex.printStackTrace();\n+            return null;\n+          }\n+      }\n+    else\n+      {\n+        input.reset();\n+        // Read as defined in OMG documentation.\n+        return (Throwable) input.read_Value();\n+      }\n+  }\n+\n+  /**\n+   * Load exception by name and create the instance. The reason why this is\n+   * different from Vio is because some exceptions have no parameterless\n+   * constructor, but have a constructor with the string parameter instead.\n+   */\n+  static Object createInstance(String id, String[] ids, String codebase)\n+  {\n+    Object o = _createInstance(id, codebase);\n+\n+    if (ids != null)\n+      for (int i = 0; i < ids.length && o == null; i++)\n+        o = _createInstance(ids[i], codebase);\n+    return o;\n+  }\n+\n+  static Object _createInstance(String id, String codebase)\n+  {\n+    if (id == null)\n+      return null;\n+    if (id.equals(StringValueHelper.id()))\n+      return \"\";\n+    StringTokenizer st = new StringTokenizer(id, \":\");\n+\n+    String prefix = st.nextToken();\n+    if (prefix.equalsIgnoreCase(\"IDL\"))\n+      return ObjectCreator.Idl2Object(id);\n+    else if (prefix.equalsIgnoreCase(\"RMI\"))\n+      {\n+        String className = st.nextToken();\n+        String hashCode = st.nextToken();\n+        String sid = null;\n+        if (st.hasMoreElements())\n+          sid = st.nextToken();\n+\n+        try\n+          {\n+            Class objectClass = Util.loadClass(className, codebase,\n+              Vio.class.getClassLoader());\n+\n+            String rid = ObjectCreator.getRepositoryId(objectClass);\n+\n+            if (!rid.equals(id))\n+              {\n+                // If direct string comparison fails, compare by meaning.\n+                StringTokenizer st2 = new StringTokenizer(rid, \":\");\n+                if (!st2.nextToken().equals(\"RMI\"))\n+                  throw new InternalError(\"RMI format expected: '\" + rid + \"'\");\n+                if (!st2.nextToken().equals(className))\n+                  throwIt(\"Class name mismatch\", id, rid, null);\n+\n+                try\n+                  {\n+                    long h1 = Long.parseLong(hashCode, 16);\n+                    long h2 = Long.parseLong(st2.nextToken(), 16);\n+                    if (h1 != h2)\n+                      throwIt(\"Hashcode mismatch\", id, rid, null);\n+\n+                    if (sid != null && st2.hasMoreTokens())\n+                      {\n+                        long s1 = Long.parseLong(hashCode, 16);\n+                        long s2 = Long.parseLong(st2.nextToken(), 16);\n+                        if (s1 != s2)\n+                          throwIt(\"serialVersionUID mismatch\", id, rid, null);\n+                      }\n+                  }\n+                catch (NumberFormatException e)\n+                  {\n+                    throwIt(\"Invalid hashcode or svuid format: \", id, rid, e);\n+                  }\n+              }\n+\n+            // Some RemoteExceptions have no public parameterless constructor,\n+            // but they have constructor taking string as parameter.\n+            try\n+              {\n+                return objectClass.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                // Try instantiate passing string as parameter.\n+                Constructor c = objectClass.getConstructor(new Class[] { String.class });\n+                return c.newInstance(new Object[] { \"<message unavailable>\" });\n+              }\n+          }\n+        catch (MARSHAL m)\n+          {\n+            m.minor = Minor.Instantiation;\n+            throw m;\n+          }\n+        catch (Exception ex)\n+          {\n+            MARSHAL m = new MARSHAL(\"Unable to instantiate \" + id);\n+            m.minor = Minor.Instantiation;\n+            m.initCause(ex);\n+            throw m;\n+          }\n+      }\n+    else\n+      throw new NO_IMPLEMENT(\"Unsupported prefix \" + prefix + \":\");\n+  }\n+}"}, {"sha": "9b719fd7c50a8dedb935a668ea074e9ee89d0726", "filename": "libjava/classpath/gnu/CORBA/CDR/VMVio.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVMVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVMVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVMVio.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,101 @@\n+/* VMVio.java -- Native operations, required by value IO.\n+ Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+/**\n+ * This is a temporary replacement for the native call that would allocate \n+ * objects without public constructors. The replacement only allocates\n+ * objects with public parameterless constructor and objects with public\n+ * constructor taking string (like some Throwables).\n+ *\n+ * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n+ * \n+ * TODO FIXME replace by native call like in VMObjectInputStream.\n+ * Required modification of Classpath the build system.\n+ */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import java.lang.reflect.Constructor;\n+\n+public class VMVio\n+{\n+  /**\n+   * Allocates a new Object of type clazz but without running the default\n+   * constructor on it. It then calls the given constructor on it. The given\n+   * constructor method comes from the constr_clazz which is a super class of\n+   * the given clazz.\n+   */\n+  public static Object allocateObject(Class clazz, Class constr_clazz,\n+    Constructor constructor)\n+    throws InstantiationException\n+  {\n+    try\n+      {\n+        Constructor c = clazz.getConstructor(new Class[0]);\n+        c.setAccessible(true);\n+        return c.newInstance(new Object[0]);\n+      }\n+    catch (Exception ex)\n+      {\n+        try\n+          {\n+            Constructor c = clazz.getConstructor(new Class[] { String.class });\n+            return c.newInstance(new Object[] { \"\" });\n+          }\n+        catch (Exception ex2)\n+          {\n+            Constructor c[] = clazz.getConstructors();\n+\n+            for (int i = 0; i < c.length; i++)\n+              {\n+                try\n+                  {\n+                    c[i].setAccessible(true);\n+                    Class[] args = c[i].getParameterTypes();\n+                    return c[i].newInstance(new Object[args.length]);\n+                  }\n+                catch (Exception ex3)\n+                  {\n+                    // Try another one.\n+                  }\n+              }\n+          }\n+        throw new InstantiationException(clazz.getName());\n+      }\n+  }\n+}"}, {"sha": "fd878cb3555eed79d954a2b0c28152bc27b6c534", "filename": "libjava/classpath/gnu/CORBA/CDR/Vio.java", "status": "modified", "additions": 1088, "deletions": 371, "changes": 1459, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* gnuValueBaseHelper.java --\n+/* Vio.java -- Value type IO operations.\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,6 +38,7 @@\n \n package gnu.CORBA.CDR;\n \n+import gnu.CORBA.Minor;\n import gnu.CORBA.ObjectCreator;\n \n import org.omg.CORBA.CustomMarshal;\n@@ -46,106 +47,144 @@\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.StringSeqHelper;\n+import org.omg.CORBA.StringValueHelper;\n+import org.omg.CORBA.SystemException;\n+import org.omg.CORBA.WStringValueHelper;\n import org.omg.CORBA.portable.BoxedValueHelper;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.Streamable;\n import org.omg.CORBA.portable.ValueFactory;\n \n-import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.Serializable;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Modifier;\n+import java.util.StringTokenizer;\n \n-import java.lang.reflect.Method;\n+import javax.rmi.CORBA.Util;\n+import javax.rmi.CORBA.ValueHandler;\n \n /**\n  * A specialised class for reading and writing the value types.\n- *\n- * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ * \n+ * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public abstract class Vio\n {\n   /**\n-   * If true, wrap value type data into chunks. This decrease the\n-   * performance, but is required for the interoperability with\n-   * Sun's CORBA implementation. Chunking may increase the security,\n-   * as there is more control on the number of bytes being transferred.\n-   *\n+   * If true, wrap value type data into chunks. This decrease the performance,\n+   * and is not required for interoperability with jdk 1.5, but is left in the\n+   * implementation as the optional mode for solving possible interoperability\n+   * problems with non-Sun CORBA implementations.\n+   * \n    * The current implementation would accept both single chunk or multiple\n-   * chunks, but will always send a single chunk.\n+   * chunks, but will always send a single chunk (if true) or unchunked data (if\n+   * false).\n    */\n-  public static boolean USE_CHUNKING = true;\n+  public static boolean USE_CHUNKING = false;\n \n   /**\n-   * The first field in the value record. The last octet may contain\n-   * additional flags (vf_CODEBASE, vf_ID and vf_MULTIPLE_IDS). The tag\n-   * value is different for the indirections (vt_INDIRECTION) and\n-   * nulls (vt_NULL).\n+   * The first field in the value record. The last octet may contain additional\n+   * flags (vf_CODEBASE, vf_ID and vf_MULTIPLE_IDS). The tag value is different\n+   * for the indirections (vt_INDIRECTION) and nulls (vt_NULL).\n    */\n   public static final int vt_VALUE_TAG = 0x7fffff00;\n \n   /**\n-   * The value tag flag, indicating that the codebase URL is present\n-   * in the value tag record.\n+   * The value tag flag, indicating that the codebase URL is present in the\n+   * value tag record.\n    */\n   public static final int vf_CODEBASE = 0x1;\n \n   /**\n-   * The value tag flag, indicating that a single repository id is present\n-   * in the value tag record.\n+   * The value tag flag, indicating that a single repository id is present in\n+   * the value tag record.\n    */\n   public static final int vf_ID = 0x2;\n \n   /**\n-   * The value tag flag, indicating, that there are multiple repository\n-   * ids present in the record. If this flag is set, the flag vf_ID must\n-   * also be set, resulting the value of the least significant byte 0x6.\n+   * The value tag flag, indicating, that there are multiple repository ids\n+   * present in the record. If this flag is set, the flag vf_ID must also be\n+   * set, resulting the value of the least significant byte 0x6.\n    */\n   public static final int vf_MULTIPLE_IDS = 0x4;\n \n   /**\n    * The value tag flag, indicating the presence of chunking. Each chunk is\n-   * preceeded by a positive int, indicating the number of bytes in the chunk.\n-   * A sequence of chunks is terminated by a non positive int.\n+   * preceeded by a positive int, indicating the number of bytes in the chunk. A\n+   * sequence of chunks is terminated by a non positive int.\n    */\n   public static final int vf_CHUNKING = 0x8;\n \n   /**\n    * The indirection tag value. Such tag must be followed by the CORBA long,\n    * indicating the offset in the CORBA message, where the indirected\n-   * information is present. This offset is assumed zero at the position\n-   * where the mentioned CORBA long starts and can refer both forward\n-   * (positive values) and backward (negative values).\n+   * information is present. This offset is assumed zero at the position where\n+   * the mentioned CORBA long starts and can refer both forward (positive\n+   * values) and backward (negative values).\n    */\n   public static final int vt_INDIRECTION = 0xffffffff;\n \n   /**\n-   * This tag value means that the value object being transferred is equal\n-   * to null.\n+   * This tag value means that the value object being transferred is equal to\n+   * null.\n    */\n   public static final int vt_NULL = 0x0;\n \n   /**\n-   * Read the value base from the given input stream. Determines the\n-   * required class from the repository id. This includes operations\n-   * that are not required when an unitialised instance or at least\n-   * class of the value type is known. Hence it may be faster to use\n-   * the alternative methods, read(InputStream, Class) or\n-   * read(InputStream, Serializable).\n-   *\n+   * The size of CORBA long (java int).\n+   */\n+  static final int INT_SIZE = 4;\n+\n+  /**\n+   * The String value helper (one instance is sufficient).\n+   */\n+  public static final WStringValueHelper m_StringValueHelper = new WStringValueHelper();\n+\n+  /**\n+   * An instance of the value handler.\n+   */\n+  static ValueHandler handler = Util.createValueHandler();\n+\n+  /**\n+   * Read the value base from the given input stream. Determines the required\n+   * class from the repository id. This includes operations that are not\n+   * required when an unitialised instance or at least class of the value type\n+   * is known. Hence it may be faster to use the alternative methods,\n+   * read(InputStream, Class) or read(InputStream, Serializable).\n+   * \n    * @param input a stream to read from.\n-   *\n+   * @param repository_id a repository id of the object being read, may be null.\n+   * \n    * @return the loaded value.\n-   *\n+   * \n    * @throws MARSHAL if the reading has failed due any reason.\n    */\n   public static Serializable read(InputStream input)\n   {\n-    // Explicitly prevent the stream from closing as we may need\n-    // to read the subsequent bytes as well. Stream may be auto-closed\n-    // in its finalizer.\n+    return read(input, (String) null);\n+  }\n+\n+  /**\n+   * Read the value base from the given input stream. Determines the required\n+   * class from the repository id. This includes operations that are not\n+   * required when an unitialised instance or at least class of the value type\n+   * is known. Hence it may be faster to use the alternative methods,\n+   * read(InputStream, Class) or read(InputStream, Serializable).\n+   * \n+   * @param an_input a stream to read from.\n+   * @param repository_id a repository id of the object being read, may be null.\n+   * \n+   * @return the loaded value.\n+   * \n+   * @throws MARSHAL if the reading has failed due any reason.\n+   */\n+  public static Serializable read(InputStream input, String repository_id)\n+  {\n     try\n       {\n+        final int position = getCurrentPosition(input);\n         // We may need to jump back if the value is read via value factory.\n         input.mark(512);\n \n@@ -154,18 +193,13 @@ public static Serializable read(InputStream input)\n \n         String codebase = null;\n         String[] ids = null;\n-        String id = null;\n-\n-        // The existing implementing object.\n-        java.lang.Object ox = null;\n+        String id = repository_id;\n \n         // Check for the agreed null value.\n         if (value_tag == vt_NULL)\n           return null;\n         else if (value_tag == vt_INDIRECTION)\n-\n-          // TODO FIXME Implement support for indirections.\n-          throw new NO_IMPLEMENT(\"Indirections unsupported\");\n+          return readIndirection(input);\n         else\n           {\n             // Read the value.\n@@ -174,152 +208,173 @@ else if (value_tag == vt_INDIRECTION)\n                 // The codebase is present. The codebase is a space\n                 // separated list of URLs from where the implementing\n                 // code can be downloaded.\n-                codebase = input.read_string();\n+                codebase = read_string(input);\n               }\n \n             if ((value_tag & vf_MULTIPLE_IDS) != 0)\n               {\n                 // Multiple supported repository ids are present.\n-                ids = StringSeqHelper.read(input);\n-                for (int i = 0; (i < ids.length) && (ox == null); i++)\n-                  {\n-                    ox = ObjectCreator.Idl2Object(ids [ i ]);\n-\n-                    if (ox == null)\n-                      {\n-                        // Try to find the value factory.\n-                        ValueFactory f =\n-                          ((org.omg.CORBA_2_3.ORB) input.orb()).lookup_value_factory(ids [ i ]);\n-\n-                        if (f != null)\n-                          {\n-                            // Reset, as the value factory reads from beginning.\n-                            input.reset();\n-                            return f.read_value((org.omg.CORBA_2_3.portable.InputStream) input);\n-                          }\n-                      }\n-                  }\n+                ids = read_string_array(input);\n               }\n             else if ((value_tag & vf_ID) != 0)\n               {\n                 // Single supported repository id is present.\n-                id = input.read_string();\n-                ox = ObjectCreator.Idl2Object(id);\n-\n-                if (ox == null)\n-                  {\n-                    // Try to find the value factory.\n-                    ValueFactory f =\n-                      ((org.omg.CORBA_2_3.ORB) input.orb()).lookup_value_factory(id);\n-\n-                    if (f != null)\n-                      {\n-                        input.reset();\n-                        return f.read_value((org.omg.CORBA_2_3.portable.InputStream) input);\n-                      }\n-                  }\n+                id = read_string(input);\n               }\n           }\n \n-        if (ox == null)\n-          throw new MARSHAL(\"Unable to instantiate the value type\");\n+        BoxedValueHelper helper = getHelper(null, id);\n+        // The existing implementing object.\n+        java.lang.Object ox = null;\n+\n+        if (helper != null)\n+          ox = null; // Helper will care about the instantiating.\n+        else if (id.equals(WStringValueHelper.id()))\n+          helper = m_StringValueHelper;\n         else\n-          {\n-            read_instance(input, ox, value_tag, null);\n-            return (Serializable) ox;\n-          }\n+          ox = createInstance(id, ids, codebase);\n+        return (Serializable) read_instance(input, position, ox, value_tag,\n+          helper, id, ids, codebase);\n       }\n     catch (Exception ex)\n       {\n-        throw new MARSHAL(ex + \":\" + ex.getMessage());\n+        MARSHAL m = new MARSHAL();\n+        m.minor = Minor.Value;        \n+        m.initCause(ex);\n+        throw m;\n       }\n   }\n \n   /**\n-   * Read the value base from the given input stream when\n-   * the value base class is available. Hence there is no need\n-   * to guess it from the repository id.\n-   *\n+   * Read the value base from the given input stream when the value base class\n+   * is available. Hence there is no need to guess it from the repository id.\n+   * \n    * @param input a stream to read from.\n    * @param value_class the class of the value being read.\n-   *\n+   * \n    * @return the loaded value.\n-   *\n+   * \n    * @throws MARSHAL if the reading has failed due any reason.\n    */\n   public static Serializable read(InputStream input, Class value_class)\n   {\n-    // Explicitly prevent the stream from closing as we may need\n-    // to read the subsequent bytes as well. Stream may be auto-closed\n-    // in its finalizer.\n+    final int position = getCurrentPosition(input);\n+\n+    String id = null;\n+    String[] ids = null;\n+    String codebase = null;\n+\n     try\n       {\n         int value_tag = input.read_long();\n         checkTag(value_tag);\n \n-        // The existing implementing object.\n-        java.lang.Object ox = value_class.newInstance();\n-\n         // Check for the agreed null value.\n         if (value_tag == vt_NULL)\n           return null;\n         else if (value_tag == vt_INDIRECTION)\n-\n-          // TODO FIXME Implement support for indirections.\n-          throw new NO_IMPLEMENT(\"Indirections unsupported\");\n+          return readIndirection(input);\n         else\n           {\n             // Read the value.\n             if ((value_tag & vf_CODEBASE) != 0)\n               {\n-                // The codebase is present, but skip it.\n-                input.read_string();\n+                // The codebase is present.\n+                codebase = read_string(input);\n               }\n \n             if ((value_tag & vf_MULTIPLE_IDS) != 0)\n               {\n-                // Multiple supported repository ids are present, but skip them.\n-                StringSeqHelper.read(input);\n+                // Multiple supported repository ids are present.\n+                ids = read_string_array(input);\n               }\n             else if ((value_tag & vf_ID) != 0)\n               {\n-                // Single supported repository id is present, but skip it.\n-                input.read_string();\n+                // Single supported repository id is present.\n+                id = read_string(input);\n               }\n           }\n \n-        read_instance(input, ox, value_tag, null);\n+        BoxedValueHelper vHelper = id != null ? getHelper(value_class, id)\n+          : getHelper(value_class, ids);\n+\n+        java.lang.Object ox;\n+\n+        if (vHelper == null)\n+          {\n+            try\n+              {\n+                ox = createInstance(id, ids, codebase);\n+              }\n+            catch (Exception e)\n+              {\n+                ox = null;\n+              }\n+\n+            if (ox != null)\n+              {\n+                if (value_class != null\n+                  && !value_class.isAssignableFrom(ox.getClass()))\n+                  {\n+                    MARSHAL m = new MARSHAL(ox.getClass() + \" is not a \"\n+                    + value_class.getName());\n+                    m.minor = Minor.ClassCast;\n+                    throw m;\n+                  }\n+              }\n+          }\n+        else\n+          ox = null;\n+\n+        ox = read_instance(input, position, ox, value_tag, vHelper, id, ids,\n+          codebase);\n         return (Serializable) ox;\n       }\n+    catch (MARSHAL m)\n+      {\n+        throw m;\n+      }\n+    catch (SystemException sysEx)\n+      {\n+        // OK.\n+        throw sysEx;\n+      }\n     catch (Exception ex)\n       {\n-        throw new MARSHAL(ex + \":\" + ex.getMessage());\n+        MARSHAL m = new MARSHAL(\"Cant read \" + value_class);\n+        m.minor = Minor.Value;\n+        m.initCause(ex);\n+        throw m;\n       }\n   }\n \n   /**\n-   * Read the value base from the given input stream when\n-   * the unitialised instance is available. Hence there is no need\n-   * to guess the class from the repository id and then to instantiate\n-   * an instance.\n-   *\n+   * Read the value base from the given input stream when the unitialised\n+   * instance is available. Hence there is no need to guess the class from the\n+   * repository id and then to instantiate an instance.\n+   * \n    * @param input a stream to read from.\n-   *\n-   * @param value_instance an pre-created instance of the value. If the\n-   * helper is not null, this parameter is ignored an should be null.\n-   *\n-   * @param helper a helper to create an instance and read the object-\n-   * specific part of the record. If the value_instance is used instead,\n-   * this parameter should be null.\n-   *\n+   * \n+   * @param value_instance an pre-created instance of the value. If the helper\n+   * is not null, this parameter is ignored an should be null.\n+   * \n+   * @param helper a helper to create an instance and read the object- specific\n+   * part of the record. If the value_instance is used instead, this parameter\n+   * should be null.\n+   * \n    * @return the loaded value.\n-   *\n+   * \n    * @throws MARSHAL if the reading has failed due any reason.\n    */\n   public static Object read(InputStream input, Object value_instance,\n-    Object helper\n-  )\n+    BoxedValueHelper helper)\n   {\n+    final int position = getCurrentPosition(input);\n+\n+    String id = null;\n+    String[] ids = null;\n+    String codebase = null;\n+\n     try\n       {\n         int value_tag = input.read_long();\n@@ -329,253 +384,479 @@ public static Object read(InputStream input, Object value_instance,\n         if (value_tag == vt_NULL)\n           return null;\n         else if (value_tag == vt_INDIRECTION)\n-\n-          // TODO FIXME Implement support for indirections.\n-          throw new NO_IMPLEMENT(\"Indirections unsupported\");\n+          return readIndirection(input);\n         else\n           {\n             // Read the value.\n             if ((value_tag & vf_CODEBASE) != 0)\n               {\n-                // The codebase is present, but skip it.\n-                input.read_string();\n+                // The codebase is present.\n+                codebase = read_string(input);\n               }\n \n             if ((value_tag & vf_MULTIPLE_IDS) != 0)\n               {\n-                // Multiple supported repository ids are present, but skip them.\n-                StringSeqHelper.read(input);\n+                // Multiple supported repository ids are present.\n+                ids = read_string_array(input);\n               }\n             else if ((value_tag & vf_ID) != 0)\n               {\n-                // Single supported repository id is present, but skip it.\n-                input.read_string();\n+                // Single supported repository id is present.\n+                id = read_string(input);\n               }\n           }\n \n-        value_instance =\n-          read_instance(input, value_instance, value_tag, helper);\n+        Class value_class = value_instance == null ? null\n+          : value_instance.getClass();\n+\n+        if (helper == null)\n+          helper = id != null ? getHelper(value_class, id) : getHelper(\n+            value_class, ids);\n+\n+        value_instance = read_instance(input, position, value_instance,\n+          value_tag, helper, id, ids, codebase);\n         return value_instance;\n       }\n     catch (Exception ex)\n       {\n-        throw new MARSHAL(ex + \":\" + ex.getMessage());\n+        MARSHAL m = new MARSHAL();\n+        m.minor = Minor.Value;\n+        m.initCause(ex);\n+        throw m;\n       }\n   }\n \n   /**\n-   * Read using provided boxed value helper. This method expects\n-   * the full value type header, followed by contents, that are\n-   * delegated to the provided helper. It handles null.\n-   *\n+   * Read using provided boxed value helper. This method expects the full value\n+   * type header, followed by contents, that are delegated to the provided\n+   * helper. It handles null.\n+   * \n    * @param input the stream to read from.\n-   * @param helper the helper that reads the type-specific part of\n-   * the content.\n-   *\n-   * @return the value, created by the helper, or null if the\n-   * header indicates that null was previously written.\n+   * @param helper the helper that reads the type-specific part of the content.\n+   * \n+   * @return the value, created by the helper, or null if the header indicates\n+   * that null was previously written.\n    */\n-  public static Serializable read(InputStream input, Object helper)\n+  public static Serializable read(InputStream input, BoxedValueHelper helper)\n   {\n     return (Serializable) read(input, null, helper);\n   }\n \n   /**\n-   * Fill in the instance fields by the data from the input stream.\n-   * The method assumes that the value header, if any, is already\n-   * behind. The information from the stream is stored into the\n-   * passed ox parameter.\n-   *\n+   * Fill in the instance fields by the data from the input stream. The method\n+   * assumes that the value header, if any, is already behind. The information\n+   * from the stream is stored into the passed ox parameter.\n+   * \n    * @param input an input stream to read from.\n-   *\n+   * \n    * @param value a pre-instantiated value type object, must be either\n-   * Streamable or CustomMarshal. If the helper is used, this parameter\n-   * is ignored and should be null.\n-   *\n+   * Streamable or CustomMarshal. If the helper is used, this parameter is\n+   * ignored and should be null.\n+   * \n    * @param value_tag the tag that must be read previously.\n-   * @param helper the helper for read object specific part; may be\n-   * null to read in using other methods.\n-   *\n+   * @param helper the helper for read object specific part; may be null to read\n+   * in using other methods.\n+   * \n    * @return the value that was read.\n    */\n-  private static Object read_instance(InputStream input, Object value,\n-    int value_tag, Object helper\n-  )\n+  static Object read_instance(InputStream input, final int position,\n+    Object value, int value_tag, BoxedValueHelper helper, String id,\n+    String[] ids, String codebase)\n   {\n+    if (helper != m_StringValueHelper && id != null)\n+      if (id.equals(StringValueHelper.id()))\n+        {\n+          value = null;\n+          helper = m_StringValueHelper;\n+        }\n+\n     try\n       {\n         if ((value_tag & vf_CHUNKING) != 0)\n           {\n-            ByteArrayOutputStream bout = null;\n-            int n = -1;\n-\n-            // Read all chunks.\n-            int chunk_size = input.read_long();\n-            if (chunk_size < 0)\n-              throw new MARSHAL(\"Invalid first chunk size \" + chunk_size);\n-\n-            byte[] r = new byte[ chunk_size ];\n-\n-            while (chunk_size > 0)\n-              {\n-                if (r.length < chunk_size)\n-                  r = new byte[ chunk_size + 256 ];\n-\n-                n = 0;\n-                reading:\n-                while (n < chunk_size)\n-                  n += input.read(r, n, r.length - n);\n-\n-                // Read the size of the next chunk.\n-                chunk_size = input.read_long();\n-\n-                // If the value is non negative, there is more than one chunk.\n-                // Accumulate chunks in the buffer.\n-                // The last chunk (or the only chunk, if only one chunk is\n-                // present) is not written in the buffer. It is stored in the\n-                // array r, avoiding unnecessary buffer operations.\n-                if (chunk_size > 0)\n-                  {\n-                    bout = new ByteArrayOutputStream(2 * chunk_size);\n-                    bout.write(r, 0, chunk_size);\n-                  }\n-              }\n+            BufferedCdrOutput output = createBuffer(input, 1024);\n+            // Read the current (not a nested one) value in this spec case.\n+            readNestedValue(value_tag, input, output, -1);\n+            BufferredCdrInput ci = new BufferredCdrInput(output.buffer.getBuffer());\n+            ci.setRunTime(output.getRunTime());\n \n-            if (bout != null)\n-              {\n-                // More than one chunk was present.\n-                // Add the last chunk.\n-                bout.write(r, 0, n);\n-                input = new noHeaderInput(bout.toByteArray());\n-              }\n-            else\n-              {\n-                // Only one chunk was present.\n-                input = new noHeaderInput(r);\n-              }\n+            input = new HeadlessInput(ci, input);\n           }\n         else\n           {\n-            if (input instanceof cdrBufInput)\n+            if (input instanceof BufferredCdrInput)\n               {\n                 // Highly probable case.\n-                input =\n-                  new noHeaderInput(((cdrBufInput) input).buffer.getBuffer());\n+                input = new HeadlessInput((BufferredCdrInput) input, null);\n+              }\n+            else if (input instanceof HeadlessInput)\n+              {\n+                // There is no need to instantiate one more HeadlessInput\n+                // as we can just reset.\n+                ((HeadlessInput) input).subsequentCalls = false;\n               }\n             else\n               {\n-                cdrBufOutput bout = new cdrBufOutput();\n+                BufferedCdrOutput bout = new BufferedCdrOutput();\n                 int c;\n                 while ((c = input.read()) >= 0)\n                   bout.write((byte) c);\n-                input = new noHeaderInput(bout.buffer.toByteArray());\n+                input = new HeadlessInput(\n+                  (BufferredCdrInput) bout.create_input_stream(), input);\n               }\n           }\n       }\n     catch (IOException ex)\n       {\n         MARSHAL m = new MARSHAL(\"Unable to read chunks\");\n+        m.minor = Minor.Value;\n         m.initCause(ex);\n         throw m;\n       }\n \n-    // The user-defines io operations are implemented.\n-    if (value instanceof CustomMarshal)\n+    return readValue(input, position, value, helper, id, ids, codebase);\n+  }\n+\n+  /**\n+   * Create a buffer, inheriting critical settings from the passed input stream.\n+   */\n+  private static BufferedCdrOutput createBuffer(InputStream input, int proposed_size)\n+  {\n+    BufferedCdrOutput bout;\n+    bout = new BufferedCdrOutput(2 * proposed_size + 256);\n+\n+    if (input instanceof BufferredCdrInput)\n       {\n-        CustomMarshal marsh = (CustomMarshal) value;\n-        try\n+        BufferredCdrInput in = (BufferredCdrInput) input;\n+        bout.setBigEndian(in.isBigEndian());\n+      }\n+\n+    if (input instanceof gnuValueStream)\n+      bout.setRunTime(((gnuValueStream) input).getRunTime());\n+    else\n+      bout.setRunTime(new gnuRuntime(null, null));\n+    return bout;\n+  }\n+\n+  /**\n+   * Read the chunked nested value from the given input stream, transferring the\n+   * contents to the given output stream.\n+   * \n+   * @param value_tag the value tag of the value being read.\n+   * @param input the input stream from where the remainder of the nested value\n+   * must be read.\n+   * @param output the output stream where the unchunked nested value must be\n+   * copied.\n+   * \n+   * @return the tag that ended the nested value.\n+   */\n+  public static int readNestedValue(int value_tag, InputStream input,\n+    BufferedCdrOutput output, int level)\n+    throws IOException\n+  {\n+    String id = null;\n+    if (level < -1)\n+      {\n+        // For the first level, this information is already behind.\n+        output.write_long(value_tag - vf_CHUNKING);\n+\n+        // The nested value should be aways chunked.\n+        if ((value_tag & vf_CHUNKING) == 0)\n+          {\n+            MARSHAL m = new MARSHAL(\"readNestedValue: must be chunked\");\n+            m.minor = Minor.Chunks;\n+            throw m;\n+          }\n+        else if (value_tag == vt_NULL)\n+          {\n+            MARSHAL m = new MARSHAL(\"readNestedValue: nul\");\n+            m.minor = Minor.Chunks;\n+            throw m;\n+          }\n+        else if (value_tag == vt_INDIRECTION)\n           {\n-            marsh.unmarshal((DataInputStream) input);\n+            MARSHAL m = new MARSHAL(\"readNestedValue: indirection\");\n+            m.minor = Minor.Chunks;\n+            throw m;\n           }\n-        catch (ClassCastException ex)\n+        else\n           {\n-            incorrect_plug_in(ex);\n+            // Read the value.\n+            if ((value_tag & vf_CODEBASE) != 0)\n+              {\n+                String codebase = read_string(input);\n+                write_string(output, codebase);\n+              }\n+\n+            if ((value_tag & vf_MULTIPLE_IDS) != 0)\n+              {\n+                // Multiple supported repository ids are present.\n+                String[] ids = read_string_array(input);\n+                id = ids[0];\n+                write_string_array(output, ids);\n+              }\n+            else if ((value_tag & vf_ID) != 0)\n+              {\n+                id = read_string(input);\n+                write_string(output, id);\n+              }\n           }\n       }\n+\n+    int n = -1;\n+\n+    // Read all chunks.\n+    int chunk_size;\n+\n+    byte[] r = null;\n+\n+    while (true)\n+      {\n+        // Read the size of the next chunk or it may also be the\n+        // header of the nested value.\n+        chunk_size = input.read_long();\n+\n+        // End of chunk terminator.\n+        if (chunk_size < 0 && chunk_size >= level)\n+          return chunk_size;\n+        else if (chunk_size >= 0x7FFFFF00)\n+          {\n+            int onInput = getCurrentPosition(input) - 4;\n+            int onOutput = output.getPosition();\n+            output.getRunTime().redirect(onInput, onOutput);\n+            // Value over 0x7FFFFF00 indicates that the nested value\n+            // starts here. Read the nested value, storing it into the output.\n+            // First parameter is actually the value tag.\n+            chunk_size = readNestedValue(chunk_size, input, output, level - 1);\n+            if (chunk_size < 0 && chunk_size >= level)\n+              return chunk_size;\n+          }\n+        else\n+          {\n+            // The chunk follows.\n+            if (r == null || r.length < chunk_size)\n+              r = new byte[chunk_size + 256];\n+\n+            n = 0;\n+            reading: while (n < chunk_size)\n+              n += input.read(r, n, chunk_size - n);\n+            output.write(r, 0, n);\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Read the value (the header must be behind).\n+   */\n+  public static Serializable readValue(InputStream input, final int position,\n+    Object value, BoxedValueHelper helper, String id, String[] ids,\n+    String codebase)\n+  {\n+    gnuRuntime g;\n+    gnuValueStream c = ((gnuValueStream) input);\n+    if (c.getRunTime() == null)\n+      {\n+        g = new gnuRuntime(codebase, value);\n+        c.setRunTime(g);\n+      }\n+    else\n+      {\n+        g = c.getRunTime();\n+        g.addCodeBase(codebase);\n+        g.target = (Serializable) value;\n+      }\n+    if (value != null)\n+      g.objectWritten(value, position);\n+\n+    if (input instanceof HeadlessInput)\n+      ((HeadlessInput) input).subsequentCalls = false;\n+\n+    boolean ok = true;\n+\n+    // The user-defined io operations are implemented.\n+    if (value instanceof CustomMarshal)\n+      {\n+        CustomMarshal marsh = (CustomMarshal) value;\n+        marsh.unmarshal((DataInputStream) input);\n+      }\n     else\n     // The IDL-generated io operations are implemented.\n     if (value instanceof Streamable)\n       {\n         ((Streamable) value)._read(input);\n       }\n-    else if (helper instanceof BoxedValueHelper)\n-      value = ((BoxedValueHelper) helper).read_value(input);\n-    else if (helper instanceof ValueFactory)\n-      value =\n-        ((ValueFactory) helper).read_value((org.omg.CORBA_2_3.portable.InputStream) input);\n+    else if (helper != null)\n+      {\n+        // If helper is non-null the value should normally be null.\n+        value = helper.read_value(input);\n+        g.objectWritten(value, position);\n+      }\n     else\n+      {\n+        ok = false;\n+        ValueFactory factory = null;\n+        org.omg.CORBA_2_3.ORB orb = (org.omg.CORBA_2_3.ORB) input.orb();\n \n-      // Stating the interfaces that the USER should use.\n-      throw new MARSHAL(\"The \" + value.getClass().getName() +\n-        \" must implement either StreamableValue or CustomValue.\"\n-      );\n+        if (id != null)\n+          factory = orb.lookup_value_factory(id);\n \n-    // The negative end of state marker is expected from OMG standard.\n-    // If the chunking is used, this marker is already extracted.\n-    if ((value_tag & vf_CHUNKING) == 0)\n+        if (factory == null && ids != null)\n+          {\n+            for (int i = 0; i < ids.length && factory == null; i++)\n+              {\n+                factory = orb.lookup_value_factory(ids[i]);\n+              }\n+          }\n+\n+        if (factory != null)\n+          {\n+            value = factory.read_value((org.omg.CORBA_2_3.portable.InputStream) input);\n+            ok = true;\n+          }\n+      }\n+\n+    if (!ok && value instanceof Serializable)\n+    // Delegate to ValueHandler\n       {\n-        int eor = input.read_long();\n-        if (eor >= 0)\n-          throw new MARSHAL(\"End of state marker has an invalid value \" + eor);\n+        if (ids != null && ids.length > 0)\n+          id = ids[0];\n+\n+        value = handler.readValue(input, position, value.getClass(), id, g);\n+        ok = true;\n       }\n \n-    return value;\n+    if (!ok)\n+      {\n+        if (value != null)\n+          {\n+            MARSHAL m = new MARSHAL(value.getClass().getName()\n+            + \" must be Streamable, CustomMarshal or Serializable\");\n+            m.minor = Minor.UnsupportedValue;\n+            throw m;\n+          }\n+        else\n+          {\n+            MARSHAL m = new MARSHAL(\"Unable to instantiate \" + id + \":\" + list(ids)\n+            + \" helper \" + helper);\n+            m.minor = Minor.UnsupportedValue;\n+            throw m;\n+          }\n+      }\n+    else\n+      return (Serializable) value;\n+  }\n+\n+  /**\n+   * Conveniency method to list ids in exception reports.\n+   */\n+  static String list(String[] s)\n+  {\n+    if (s == null)\n+      return \"null\";\n+    else\n+      {\n+        StringBuffer b = new StringBuffer(\"{\");\n+        for (int i = 0; i < s.length; i++)\n+          {\n+            b.append(s[i]);\n+            b.append(\" \");\n+          }\n+        b.append(\"}\");\n+        return b.toString();\n+      }\n   }\n \n   /**\n    * Write the value base into the given stream.\n-   *\n+   * \n    * @param output a stream to write to.\n-   *\n+   * \n    * @param value a value type object, must be either Streamable or\n    * CustomMarshal.\n-   *\n+   * \n    * @throws MARSHAL if the writing failed due any reason.\n    */\n   public static void write(OutputStream output, Serializable value)\n   {\n     // Write null if this is a null value.\n     if (value == null)\n       output.write_long(vt_NULL);\n+    else if (value instanceof String)\n+      write(output, value, m_StringValueHelper);\n     else\n-      write(output, value, ObjectCreator.toIDL(value.getClass().getName()));\n-  }\n-\n-  /**\n-   * Write the value base into the given stream, stating that it is an\n-   * instance of the given class. The written record has no repository\n-   * id and requires to supply a class or initialised instance for reading\n-   * rather than an actual class it is.\n-   *\n-   * This results writing a different repository id.\n-   *\n-   * If the passed value implements the {@link CustomMarshal},\n-   * the helper uses {@link CustomMarshal#marshal}\n-   * to write the content in a user defined way. Otherwise,\n-   * this implementation initialises the {@link ObjectOutputStream}\n-   * and writes through it.\n-   *\n+      write(output, value, value.getClass());\n+  }\n+\n+  /**\n+   * Write the value base into the given stream, stating that it is an instance\n+   * of the given class.\n+   * \n    * @param output a stream to write to.\n-   *\n+   * \n    * @param value a value to write.\n-   *\n+   * \n    * @throws MARSHAL if the writing failed due any reason.\n    */\n   public static void write(OutputStream output, Serializable value,\n-    Class substitute\n-  )\n+    Class substitute)\n   {\n     // Write null if this is a null value.\n     if (value == null)\n       output.write_long(vt_NULL);\n+    else if (value instanceof String || substitute == String.class)\n+      writeString(output, value);\n+    else\n+      {\n+        String vId = ObjectCreator.getRepositoryId(value.getClass());\n+        if (substitute == null || value.getClass().equals(substitute))\n+          write_instance(output, value, vId, getHelper(value.getClass(), vId));\n+        else\n+          {\n+            String vC = ObjectCreator.getRepositoryId(substitute);\n+            String[] ids = new String[] { vId, vC };\n+            BoxedValueHelper h = getHelper(substitute.getClass(), ids);\n+            // If the helper is available, it is also responsible for\n+            // providing the repository Id. Otherwise, write both\n+            // ids.\n+            if (h == null)\n+              write_instance(output, value, ids, null);\n+            else\n+              write_instance(output, value, h.get_id(), null);\n+          }\n+      }\n+  }\n \n+  /**\n+   * Write the value base into the given stream, supplementing it with an array\n+   * of the provided repository ids plus the repository id, derived from the\n+   * passed value.\n+   * \n+   * @param output a stream to write to.\n+   * \n+   * @param value a value to write.\n+   * \n+   * @throws MARSHAL if the writing failed due any reason.\n+   */\n+  public static void write(OutputStream output, Serializable value,\n+    String[] multiple_ids)\n+  {\n+    // Write null if this is a null value.\n+    if (value == null)\n+      output.write_long(vt_NULL);\n     else\n-      write(output, value, ObjectCreator.toIDL(substitute.getName()));\n+      {\n+        String[] ids = new String[multiple_ids.length + 1];\n+        ids[0] = ObjectCreator.getRepositoryId(value.getClass());\n+        System.arraycopy(multiple_ids, 0, ids, 1, multiple_ids.length);\n+        BoxedValueHelper h = getHelper(value.getClass(), ids);\n+        write_instance(output, value, ids, h);\n+      }\n   }\n \n   /**\n-   * Write value when its repository Id is explicitly given.\n-   *\n+   * Write value when its repository Id is explicitly given. Only this Id is\n+   * written, the type of value is not taken into consideration.\n+   * \n    * @param output an output stream to write into.\n    * @param value a value to write.\n    * @param id a value repository id.\n@@ -585,172 +866,608 @@ public static void write(OutputStream output, Serializable value, String id)\n     if (value == null)\n       output.write_long(vt_NULL);\n     else\n-      write_instance(output, value, id, null);\n+      write_instance(output, value, id, getHelper(value.getClass(), id));\n   }\n \n   /**\n-   * Write standard value type header, followed by contents, produced\n-   * by the boxed value helper.\n-   *\n+   * Write standard value type header, followed by contents, produced by the\n+   * boxed value helper.\n+   * \n    * @param output the stream to write to.\n    * @param value the value to write, can be null.\n-   * @param helper the helper that writes the value content if it is\n-   * not null.\n+   * @param helper the helper that writes the value content if it is not null\n+   * (must be provided for this method).\n    */\n   public static void write(OutputStream output, Serializable value,\n-    Object helper\n-  )\n+    BoxedValueHelper helper)\n   {\n+    if (helper == null)\n+      throw new AssertionError(\"Helper must be provided\");\n     if (value == null)\n       output.write_long(vt_NULL);\n     else\n+      write_instance(output, value, helper.get_id(), helper);\n+  }\n+\n+  /**\n+   * Write the parameter that is surely a string and not null.\n+   */\n+  private static void writeString(OutputStream output, Serializable string)\n+  {\n+    write_instance(output, string, m_StringValueHelper.get_id(),\n+      m_StringValueHelper);\n+  }\n+\n+  /**\n+   * Write value when its repository Id is explicitly given. Does not handle\n+   * null.\n+   * \n+   * @param output an output stream to write into.\n+   * @param value a value to write.\n+   * @param id a value repository id (can be either single string or string\n+   * array).\n+   * @param helper a helper, writing object - specifical part. Can be null if\n+   * the value should be written using other methods.\n+   */\n+  static void write_instance(OutputStream output, Serializable value,\n+    Object ids, BoxedValueHelper helper)\n+  {\n+    gnuValueStream rout = null;\n+    gnuRuntime runtime = null;\n+\n+    try\n       {\n-        String id;\n+        if (output instanceof gnuValueStream)\n+          {\n+            int position;\n+            rout = (gnuValueStream) output;\n+            runtime = rout.getRunTime();\n+\n+            if (runtime == null)\n+              {\n+                runtime = new gnuRuntime(null, value);\n+                rout.setRunTime(runtime);\n+                rout.getRunTime().objectWritten(value,\n+                  position = rout.getPosition());\n+              }\n+            else if (runtime.target == value)\n+              {\n+                if (!writeSelf(output, value))\n+                  throw new InternalError(\"Recursive helper call for \"\n+                    + value.getClass().getName());\n+                return;\n+              }\n+            else\n+              {\n+                position = runtime.isWrittenAt(value);\n+                if (position >= 0)\n+                  {\n+                    // The object was already written.\n+                    output.write_long(vt_INDIRECTION);\n+                    output.write_long(position - rout.getPosition());\n+                    // Replacing object write data by indirection reference.\n+                    return;\n+                  }\n+                else\n+                  {\n+                    runtime.objectWritten(value, position = rout.getPosition());\n+                  }\n+              }\n+          }\n+\n+        int value_tag = vt_VALUE_TAG;\n+\n+        if (ids instanceof String)\n+          value_tag |= vf_ID;\n+        else if (ids instanceof String[])\n+          // OMG standard requires to set both flags.\n+          value_tag |= vf_MULTIPLE_IDS | vf_ID;\n \n-        if (helper instanceof BoxedValueHelper)\n-          id = ((BoxedValueHelper) helper).get_id();\n+        int chunkSizeLocation;\n+\n+        OutputStream outObj;\n+\n+        if (USE_CHUNKING)\n+          {\n+            // Wrap the value being written into one chunk (makes sense only for\n+            // compatibility reasons).\n+            outObj = output;\n+            value_tag |= vf_CHUNKING;\n+          }\n+        else\n+          outObj = output;\n+\n+        output.write_long(value_tag);\n+\n+        if ((value_tag & vf_MULTIPLE_IDS) != 0)\n+          write_string_array(output, (String[]) ids);\n+        else if ((value_tag & vf_ID) != 0)\n+          write_string(output, (String) ids);\n+\n+        if (USE_CHUNKING)\n+          {\n+            // So far, write 0x55555555 instead of the chunk size (alignment may\n+            // take place).\n+            output.write_long(0x55555555);\n+            // If the chunking is involved, the chunk size must be written here.\n+            chunkSizeLocation = rout.getPosition() - INT_SIZE;\n+          }\n         else\n-          id = \"\";\n+          // Not in use for this case.\n+          chunkSizeLocation = -1;\n+\n+        writeValue(outObj, value, helper);\n \n-        write_instance(output, value, id, helper);\n+        if (USE_CHUNKING)\n+          {\n+            // Write the chunk size where the place for it was reserved.\n+            int chunkSize = rout.getPosition() - chunkSizeLocation - INT_SIZE;\n+            int current = rout.getPosition();\n+            rout.seek(chunkSizeLocation);\n+            output.write_long(chunkSize);\n+            rout.seek(current);\n+\n+            // The end of record marker.\n+            output.write_long(-1);\n+          }\n+      }\n+    finally\n+      {\n+        if (runtime != null)\n+          runtime.target = null;\n       }\n   }\n \n   /**\n-   * Write value when its repository Id is explicitly given.\n-   * Does not handle null.\n-   *\n-   * @param output an output stream to write into.\n-   * @param value a value to write.\n-   * @param id a value repository id.\n-   * @param helper a helper, writing object - specifica part. Can be null\n-   * if the value should be written unsing other methods.\n+   * Write value (after header).\n    */\n-  private static void write_instance(OutputStream output, Serializable value,\n-    String id, Object helper\n-  )\n+  static void writeValue(OutputStream output, Serializable value,\n+    BoxedValueHelper helper)\n   {\n-    // This implementation always writes a single repository id.\n-    // It never writes multiple repository ids and currently does not use\n-    // a codebase.\n-    int value_tag = vt_VALUE_TAG | vf_ID;\n+    ((gnuValueStream) output).getRunTime().target = value;\n+    if (helper != null)\n+      helper.write_value(output, value);\n+    else if (!writeSelf(output, value))\n+      {\n+        // Try to find helper via class loader.\n+        boolean ok = false;\n \n-    OutputStream outObj;\n-    cdrBufOutput out = null;\n+        if (!ok)\n+          {\n+            if (output instanceof BufferedCdrOutput)\n+              {\n+                BufferedCdrOutput b = (BufferedCdrOutput) output;\n+                if (b.runtime == null)\n+                  b.runtime = new gnuRuntime(null, value);\n+              }\n \n-    if (USE_CHUNKING)\n+            handler.writeValue(output, value);\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Try to write value supposing that it implements self-streamable interfaces.\n+   * Return false if it does not or true on success.\n+   */\n+  static boolean writeSelf(OutputStream output, Serializable value)\n+  {\n+    // User defined write method is present.\n+    if (value instanceof CustomMarshal)\n       {\n-        out = new cdrBufOutput();\n-        out.setOrb(output.orb());\n-        outObj = out;\n-        value_tag |= vf_CHUNKING;\n+        ((CustomMarshal) value).marshal((DataOutputStream) output);\n+        return true;\n       }\n-    else\n-      outObj = output;\n+    else if (value instanceof Streamable)\n+      {\n+        ((Streamable) value)._write(output);\n+        return true;\n+      }\n+    return false;\n+  }\n \n-    output.write_long(value_tag);\n-    output.write_string(id);\n+  /**\n+   * Read the indirection data and return the object that was already written to\n+   * this stream.\n+   * \n+   * @param an_input the input stream, must be BufferredCdrInput.\n+   */\n+  static Serializable readIndirection(InputStream an_input)\n+  {\n+    if (!(an_input instanceof gnuValueStream))\n+      throw new NO_IMPLEMENT(gnuValueStream.class.getName()\n+        + \" expected as parameter\");\n \n-    if (helper instanceof BoxedValueHelper)\n+    gnuValueStream in = (gnuValueStream) an_input;\n+\n+    int current_pos = in.getPosition();\n+\n+    int offset = an_input.read_long();\n+    if (offset > -INT_SIZE)\n       {\n-        ((BoxedValueHelper) helper).write_value(outObj, value);\n+        MARSHAL m = new MARSHAL(\"Indirection tag refers to \" + offset\n+        + \" (must be less than -\" + INT_SIZE + \")\");\n+        m.minor = Minor.Offset;\n+        throw m;\n       }\n-    else\n-    // User defince write method is present.\n-    if (value instanceof CustomMarshal)\n+\n+    int stored_at = current_pos + offset;\n+\n+    if (in.getRunTime() == null)\n+      {\n+        MARSHAL m = new MARSHAL(stored_at + \" offset \" + offset + \": not written\");\n+        m.minor = Minor.Value;\n+        throw m;\n+      }\n+\n+    return (Serializable) in.getRunTime().isObjectWrittenAt(stored_at, offset);\n+  }\n+\n+  /**\n+   * Check the passed value tag for correctness.\n+   * \n+   * @param value_tag a tag to check, must be between 0x7fffff00 and 0x7fffffff\n+   * \n+   * @throws MARSHAL if the tag is outside this interval.\n+   */\n+  static void checkTag(int value_tag)\n+  {\n+    if ((value_tag < 0x7fffff00 || value_tag > 0x7fffffff)\n+      && value_tag != vt_NULL && value_tag != vt_INDIRECTION)\n+      {\n+        MARSHAL m = new MARSHAL(\"Invalid value record, unsupported header tag: \"\n+        + value_tag + \" (0x\" + Integer.toHexString(value_tag) + \")\");\n+        m.minor = Minor.ValueHeaderTag;\n+        throw m;\n+      }\n+\n+    if ((value_tag & vf_MULTIPLE_IDS) != 0 && (value_tag & vf_ID) == 0)\n       {\n+        MARSHAL m = new MARSHAL(\"Invalid value record header flag combination (0x\"\n+        + Integer.toHexString(value_tag) + \")\");\n+        m.minor = Minor.ValueHeaderFlags;\n+        throw m;\n+      }\n+  }\n+\n+  /**\n+   * Throw MARSHAL.\n+   */\n+  static void throwIt(String msg, String id1, String id2, Throwable e)\n+    throws MARSHAL\n+  {\n+    MARSHAL m = new MARSHAL(msg + \":'\" + id1 + \"' versus '\" + id2 + \"'\");\n+    if (e != null)\n+      m.initCause(e);\n+    m.minor = Minor.Value;\n+    throw m;\n+  }\n+\n+  /**\n+   * Load class by name and create the instance.\n+   */\n+  static Object createInstance(String id, String[] ids, String codebase)\n+  {\n+    Object o = null;\n+\n+    if (id != null)\n+      o = _createInstance(id, codebase);\n+\n+    if (ids != null)\n+      for (int i = 0; i < ids.length && o == null; i++)\n+        o = _createInstance(ids[i], codebase);\n+    return o;\n+  }\n+\n+  static Object _createInstance(String id, String codebase)\n+  {\n+    if (id == null)\n+      return null;\n+    if (id.equals(StringValueHelper.id()))\n+      return \"\";\n+    StringTokenizer st = new StringTokenizer(id, \":\");\n+\n+    String prefix = st.nextToken();\n+    if (prefix.equalsIgnoreCase(\"IDL\"))\n+      return ObjectCreator.Idl2Object(id);\n+    else if (prefix.equalsIgnoreCase(\"RMI\"))\n+      {\n+        String className = st.nextToken();\n+        String hashCode = st.nextToken();\n+        String sid = null;\n+        if (st.hasMoreElements())\n+          sid = st.nextToken();\n+\n         try\n           {\n-            ((CustomMarshal) value).marshal((DataOutputStream) outObj);\n+            Class objectClass = Util.loadClass(className, codebase,\n+              Vio.class.getClassLoader());\n+\n+            String rid = ObjectCreator.getRepositoryId(objectClass);\n+\n+            if (!rid.equals(id))\n+              {\n+                // If direct string comparison fails, compare by meaning.\n+                StringTokenizer st2 = new StringTokenizer(rid, \":\");\n+                if (!st2.nextToken().equals(\"RMI\"))\n+                  throw new InternalError(\"RMI format expected: '\" + rid + \"'\");\n+                if (!st2.nextToken().equals(className))\n+                  throwIt(\"Class name mismatch\", id, rid, null);\n+\n+                try\n+                  {\n+                    long h1 = Long.parseLong(hashCode, 16);\n+                    long h2 = Long.parseLong(st2.nextToken(), 16);\n+                    if (h1 != h2)\n+                      throwIt(\"Hashcode mismatch\", id, rid, null);\n+\n+                    if (sid != null && st2.hasMoreTokens())\n+                      {\n+                        long s1 = Long.parseLong(hashCode, 16);\n+                        long s2 = Long.parseLong(st2.nextToken(), 16);\n+                        if (s1 != s2)\n+                          throwIt(\"serialVersionUID mismatch\", id, rid, null);\n+                      }\n+                  }\n+                catch (NumberFormatException e)\n+                  {\n+                    throwIt(\"Invalid hashcode or svuid format: \", id, rid, e);\n+                  }\n+              }\n+\n+            // Low - level instantiation required here.\n+            return instantiateAnyWay(objectClass);\n           }\n-        catch (ClassCastException ex)\n+        catch (Exception ex)\n           {\n-            incorrect_plug_in(ex);\n+            MARSHAL m = new MARSHAL(\"Unable to instantiate \" + id);\n+            m.minor = Minor.Instantiation;\n+            m.initCause(ex);\n+            throw m;\n           }\n       }\n-    else if (value instanceof Streamable)\n+    else\n+      throw new NO_IMPLEMENT(\"Unsupported prefix \" + prefix + \":\");\n+  }\n+\n+  /**\n+   * Read string, expecting the probable indirection.\n+   */\n+  static String read_string(InputStream input)\n+  {\n+    gnuValueStream g = (gnuValueStream) input;\n+    int previous = g.getPosition();\n+    int l = input.read_long();\n+    if (l != vt_INDIRECTION)\n       {\n-        ((Streamable) value)._write(outObj);\n+        g.seek(previous);\n+        String s = input.read_string();\n+        if (g.getRunTime() == null)\n+          g.setRunTime(new gnuRuntime(null, null));\n+        g.getRunTime().singleIdWritten(s, previous);\n+        return s;\n       }\n     else\n       {\n-        // Try to find helper via class loader.\n-        boolean ok = false;\n-        try\n+        gnuRuntime r = g.getRunTime();\n+        int base = g.getPosition();\n+        int delta = input.read_long();\n+        if (r == null)\n           {\n-            Class helperClass = Class.forName(ObjectCreator.toHelperName(id));\n-\n-            // It will be the helper for the encapsulated boxed value, not the\n-            // for the global boxed value type itself.\n-            Method write =\n-              helperClass.getMethod(\"write\",\n-                new Class[]\n-                {\n-                  org.omg.CORBA.portable.OutputStream.class, value.getClass()\n-                }\n-              );\n-            write.invoke(null, new Object[] { outObj, value });\n-            ok = true;\n+            previous = g.getPosition();\n+            g.seek(base + delta);\n+            String indir = input.read_string();\n+            g.seek(previous);\n+            return indir;\n           }\n-        catch (Exception ex)\n+        else\n           {\n-            ok = false;\n+            return (String) r.isObjectWrittenAt(base + delta, delta);\n           }\n+      }\n+  }\n \n-        // Stating the interfaces that the USER should use.\n-        if (!ok)\n-          throw new MARSHAL(\"The \" + value.getClass().getName() +\n-            \" must implement either StreamableValue\" + \" or CustomValue.\"\n-          );\n+  /**\n+   * Read string array, expecting the probable indirection.\n+   */\n+  static String[] read_string_array(InputStream input)\n+  {\n+    gnuValueStream g = (gnuValueStream) input;\n+    int previous = g.getPosition();\n+    int l = input.read_long();\n+    if (l != vt_INDIRECTION)\n+      {\n+        g.seek(previous);\n+        String[] s = StringSeqHelper.read(input);\n+        if (g.getRunTime() == null)\n+          g.setRunTime(new gnuRuntime(null, null));\n+        g.getRunTime().objectWritten(s, previous);\n+        return s;\n       }\n+    else\n+      {\n+        gnuRuntime r = g.getRunTime();\n+        int base = g.getPosition();\n+        int delta = input.read_long();\n+        if (r == null)\n+          {\n+            previous = g.getPosition();\n+            g.seek(base + delta);\n+            String[] indir = StringSeqHelper.read(input);\n+            g.seek(previous);\n+            return indir;\n+          }\n+        else\n+          {\n+            return (String[]) r.isObjectWrittenAt(base + delta, delta);\n+          }\n+      }\n+  }\n \n-    if (USE_CHUNKING)\n+  /**\n+   * Write repository Id, probably shared.\n+   */\n+  static void write_string(OutputStream output, String id)\n+  {\n+    if (output instanceof gnuValueStream)\n       {\n-        output.write_long(out.buffer.size());\n-        try\n+        gnuValueStream b = (gnuValueStream) output;\n+        if (b != null)\n+          {\n+            int written = b.getRunTime().idWrittenAt(id);\n+            if (written >= 0)\n+              {\n+                // Reuse existing id record.\n+                output.write_long(vt_INDIRECTION);\n+                int p = b.getPosition();\n+                output.write_long(written - p);\n+              }\n+            else\n+              {\n+                b.getRunTime().singleIdWritten(id, b.getPosition());\n+                output.write_string(id);\n+              }\n+          }\n+      }\n+    else\n+      output.write_string(id);\n+  }\n+\n+  /**\n+   * Write repository Id, probably shared.\n+   */\n+  static void write_string_array(OutputStream output, String[] ids)\n+  {\n+    if (output instanceof gnuValueStream)\n+      {\n+        gnuValueStream b = (gnuValueStream) output;\n+        if (b != null)\n           {\n-            out.buffer.writeTo(output);\n+            int written = b.getRunTime().idWrittenAt(ids);\n+            if (written >= 0)\n+              {\n+                // Reuse existing id record.\n+                output.write_long(vt_INDIRECTION);\n+                int p = b.getPosition();\n+                output.write_long(written - p);\n+              }\n+            else\n+              {\n+                b.getRunTime().multipleIdsWritten(ids, b.getPosition());\n+                StringSeqHelper.write(output, ids);\n+              }\n           }\n-        catch (IOException ex)\n+      }\n+    else\n+      StringSeqHelper.write(output, ids);\n+  }\n+\n+  /**\n+   * Get the helper that could write the given object, or null if no pre-defined\n+   * helper available for this object.\n+   */\n+  public static BoxedValueHelper getHelper(Class x, Object ids)\n+  {\n+    if (x != null && x.equals(String.class))\n+      return m_StringValueHelper;\n+    else if (x != null && x.isArray())\n+      return new ArrayValueHelper(x);\n+    else if (ids instanceof String)\n+      return locateHelper((String) ids);\n+    else if (ids instanceof String[])\n+      {\n+        String[] ia = (String[]) ids;\n+        BoxedValueHelper h;\n+        for (int i = 0; i < ia.length; i++)\n           {\n-            MARSHAL m = new MARSHAL();\n-            m.initCause(ex);\n-            throw m;\n+            h = locateHelper(ia[i]);\n+            if (h != null)\n+              return h;\n           }\n+        return null;\n       }\n+    else\n+      return null;\n+  }\n \n-    // The end of record marker, required by OMG standard.\n-    output.write_long(-1);\n+  /**\n+   * Get the helper that could write the given object, or null if no pre-defined\n+   * helper available for this object.\n+   */\n+  public static BoxedValueHelper getHelper(Class x, String id)\n+  {\n+    if (x != null && x.equals(String.class))\n+      return m_StringValueHelper;\n+    else if (x != null && x.isArray())\n+      return new ArrayValueHelper(x);\n+    else\n+      return locateHelper(id);\n   }\n \n   /**\n-   * This can be called if the alternative CORBA implementation\n-   * is incorrectly plugged in.\n-   *\n-   * @throws NO_IMPLEMENT, always.\n+   * Try to locate helper from the repository id.\n    */\n-  static void incorrect_plug_in(Throwable ex) throws NO_IMPLEMENT\n+  static BoxedValueHelper locateHelper(String id)\n   {\n-    NO_IMPLEMENT no = new NO_IMPLEMENT(\"Incorrect CORBA plug-in\");\n-    no.initCause(ex);\n-    throw no;\n+    if (id != null)\n+      {\n+        if (id.equals(m_StringValueHelper.get_id()))\n+          return m_StringValueHelper;\n+        else\n+        // Try to locate helper for IDL type.\n+        if (id.startsWith(\"IDL:\"))\n+          {\n+            try\n+              {\n+                Class helperClass = ObjectCreator.findHelper(id);\n+                if (BoxedValueHelper.class.isAssignableFrom(helperClass))\n+                  return (BoxedValueHelper) helperClass.newInstance();\n+                else if (helperClass != null)\n+                  return new IDLTypeHelper(helperClass);\n+                else\n+                  return null;\n+              }\n+            catch (Exception ex)\n+              {\n+                return null;\n+              }\n+          }\n+      }\n+    return null;\n   }\n \n   /**\n-   * Check the passed value tag for correctness.\n-   *\n-   * @param value_tag a tag to check, must be between 0x7fffff00 and 0x7fffffff\n-   *\n-   * @throws MARSHAL if the tag is outside this interval.\n+   * Get the current position.\n    */\n-  private static final void checkTag(int value_tag)\n+  static int getCurrentPosition(InputStream x)\n   {\n-    if ((value_tag < 0x7fffff00 || value_tag > 0x7fffffff) &&\n-      value_tag != vt_NULL &&\n-      value_tag != vt_INDIRECTION\n-    )\n-      throw new MARSHAL(\"Invalid value record, unsupported header tag: \" +\n-        value_tag\n-      );\n+    if (x instanceof gnuValueStream)\n+      return ((gnuValueStream) x).getPosition();\n+    else\n+      return 0;\n+  }\n+\n+  /**\n+   * Instantiate an instance of this class anyway; also in the case when it has\n+   * no parameterless or any other constructor. The fields will be assigned\n+   * while reading the class from the stream.\n+   * \n+   * @param clazz a class for that the instance should be instantiated.\n+   */\n+  public static Object instantiateAnyWay(Class clazz)\n+    throws Exception\n+  {\n+    Class first_nonserial = clazz;\n+\n+    while (Serializable.class.isAssignableFrom(first_nonserial)\n+      || Modifier.isAbstract(first_nonserial.getModifiers()))\n+      first_nonserial = first_nonserial.getSuperclass();\n+\n+    final Class local_constructor_class = first_nonserial;\n+\n+    Constructor constructor = local_constructor_class.getDeclaredConstructor(new Class[0]);\n+\n+    return VMVio.allocateObject(clazz, constructor.getDeclaringClass(),\n+      constructor);\n   }\n }\n\\ No newline at end of file"}, {"sha": "774c92816aeda14082f5a6f645431cf0f071b64a", "filename": "libjava/classpath/gnu/CORBA/CDR/gnuRuntime.java", "status": "added", "additions": 336, "deletions": 0, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,336 @@\n+/* gnuRuntime.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+import gnu.CORBA.Minor;\n+\n+import org.omg.CORBA.LocalObject;\n+import org.omg.CORBA.MARSHAL;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.IdentityHashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.TreeSet;\n+\n+/**\n+ * Our implementation of the sending context runtime.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class gnuRuntime\n+  extends LocalObject\n+  implements org.omg.SendingContext.RunTime\n+{\n+  /**\n+   * The data entry about the object that was written.\n+   */\n+  static class Entry\n+  {\n+    /**\n+     * The stream position, where the object was written.\n+     */\n+    int at;\n+\n+    /**\n+     * The object that was written.\n+     */\n+    Object object;\n+\n+    public String toString()\n+    {\n+      return object + \"[\" + at + \"] \"+object.getClass().getName();\n+    }\n+  }\n+\n+  /**\n+   * The instruction that the actual object is stored at different location.\n+   * Used when processing chunked data where positions shifts due removing the\n+   * chunking tags.\n+   */\n+  static class Redirection\n+    extends Entry\n+  {\n+    public String toString()\n+    {\n+      return \"->\" + at;\n+    }\n+  }\n+\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+\n+  /**\n+   * The history of the written objects, maps object to records. The different\n+   * objects must be treated as different regardless that .equals returns.\n+   */\n+  private Map sh_objects = new IdentityHashMap();\n+\n+  /**\n+   * The written repository Ids that can be shared.\n+   */\n+  private Map sh_ids = new TreeMap(new Comparator()\n+  {\n+    public int compare(Object a, Object b)\n+    {\n+      if (a instanceof String && b instanceof String)\n+        // Comparing string with string.\n+        return ((String) a).compareTo((String) b);\n+      else if (a instanceof String[] && b instanceof String[])\n+        {\n+          // Comparing array with array.\n+          String[] sa = (String[]) a;\n+          String[] sb = (String[]) b;\n+\n+          if (sa.length != sb.length)\n+            return sa.length - sb.length;\n+          else\n+            {\n+              int c;\n+              for (int i = 0; i < sa.length; i++)\n+                {\n+                  c = sa[i].compareTo(sb[i]);\n+                  if (c != 0)\n+                    return c;\n+                }\n+              return 0;\n+            }\n+        }\n+      else\n+        // Comparing string with array.\n+        return a instanceof String ? 1 : -1;\n+    }\n+  });\n+\n+  /**\n+   * The history of the written objects, maps positions to records. The\n+   * different objects must be treated as different regardless that .equals\n+   * returns.\n+   */\n+  private Map positions = new HashMap();\n+\n+  /**\n+   * The Codebase.\n+   */\n+  private String codebase;\n+\n+  /**\n+   * The pre-created instance of the object being written (avoid\n+   * re-instantiation).\n+   */\n+  public Serializable target;\n+\n+  /**\n+   * Create Runtime.\n+   * \n+   * @param a_id a repository Id, if only one Id was specified in the stream.\n+   * @param a_ids a repository Ids, if the multiple Ids were specified in te\n+   * stream.\n+   * @param a_codabase a codebase, if it was specified in the stream.\n+   */\n+  public gnuRuntime(String a_codebase, Object a_target)\n+  {\n+    if (a_target instanceof Serializable)\n+      target = (Serializable) a_target;\n+\n+    codebase = a_codebase;\n+  }\n+\n+  /**\n+   * Mark the given object as written at the given position.\n+   */\n+  public void objectWritten(Object object, int at)\n+  {\n+    if (object == null || at < 0)\n+      return; // No positional information provided.\n+    if (sh_objects.containsKey(object))\n+      throw new AssertionError(\"Repetetive writing of the same object \"\n+        + object + \" at \" + at + dump());\n+\n+    Entry e = new Entry();\n+    e.at = at;\n+    e.object = object;\n+\n+    sh_objects.put(object, e);\n+    positions.put(new Integer(at), e);\n+  }\n+\n+  /**\n+   * Check if the object is already written.\n+   * \n+   * @return the position, at that the object is allready written or -1 if it is\n+   * not yet written.\n+   */\n+  public int isWrittenAt(Object x)\n+  {\n+    Entry e = (Entry) sh_objects.get(x);\n+    return e == null ? -1 : e.at;\n+  }\n+\n+  /**\n+   * Set redirection, indicating that the object, searched at the p_searched\n+   * position can be actually found at the p_present position.\n+   */\n+  public void redirect(int p_searched, int p_present)\n+  {\n+    Redirection redirection = new Redirection();\n+    redirection.at = p_present;\n+    positions.put(new Integer(p_searched), redirection);\n+  }\n+\n+  /**\n+   * Get the object, written at the given position. This returs both shared\n+   * objects and repository Ids.\n+   * \n+   * @return the position, at that the object is allready written.\n+   * \n+   * @throws MARSHAL if there is no object written at that position.\n+   */\n+  public Object isObjectWrittenAt(int x, int offset)\n+  {\n+    Entry e = (Entry) positions.get(new Integer(x));\n+    if (e instanceof Redirection)\n+      return isObjectWrittenAt(e.at, offset);\n+    else if (e != null)\n+      return e.object;\n+    else\n+      {\n+        MARSHAL m = new MARSHAL(\"No object was written at \" + x + \n+          \" (offset \" + offset + \") r \" + this + dump());\n+        m.minor = Minor.Graph;\n+        throw m;\n+      }\n+  }\n+\n+  /**\n+   * Mark the given object as written at the given position.\n+   */\n+  public void singleIdWritten(String id, int at)\n+  {\n+    if (sh_ids.containsKey(id))\n+      throw new InternalError(\"Repetetive writing of the same string \" +\n+        id + dump());\n+\n+    Entry e = new Entry();\n+    e.at = at;\n+    e.object = id;\n+\n+    sh_ids.put(id, e);\n+    positions.put(new Integer(at), e);\n+  }\n+\n+  /**\n+   * Mark the given object as written at the given position.\n+   */\n+  public void multipleIdsWritten(String[] ids, int at)\n+  {\n+    if (sh_ids.containsKey(ids))\n+      throw new InternalError(\"Repetetive writing of the same string \" + \n+        ids + dump());\n+\n+    Entry e = new Entry();\n+    e.at = at;\n+    e.object = ids;\n+\n+    sh_ids.put(ids, e);\n+    positions.put(new Integer(at), e);\n+  }\n+\n+  /**\n+   * Check if the object is already written.\n+   * \n+   * @return the position, at that the object is allready written or -1 if it is\n+   * not yet written.\n+   */\n+  public int idWrittenAt(Object x)\n+  {\n+    Entry e = (Entry) sh_ids.get(x);\n+    return e == null ? -1 : e.at;\n+  }\n+\n+  /**\n+   * Get the codebase.\n+   */\n+  public String getCodeBase()\n+  {\n+    return codebase;\n+  }\n+\n+  /**\n+   * Set the codebase, preserving the old value if the passed parameter is null\n+   * and forming the space delimited list if both new and old values are not\n+   * null.\n+   */\n+  public void addCodeBase(String base)\n+  {\n+    if (base != null)\n+      {\n+        if (codebase == null)\n+          codebase = base;\n+        else\n+          codebase = codebase + \" \" + base;\n+      }\n+  }\n+\n+  /**\n+   * Dump all objects that are currently stored.\n+   */\n+  public String dump()\n+  {\n+    StringBuffer b = new StringBuffer(\" Stream content: \\n\");\n+\n+    // Sort by position.\n+    TreeSet t = new TreeSet(positions.keySet());\n+    Iterator p = t.iterator();\n+\n+    while (p.hasNext())\n+      {\n+        Object k = p.next();\n+        b.append(\"     \" + k + \": \" + ((Entry) positions.get(k)).toString()\n+          + \"\\n\");\n+      }\n+    return b.toString();\n+  }\n+\n+}"}, {"sha": "663c99018619f7af33b26ef15eb446e80f87cadc", "filename": "libjava/classpath/gnu/CORBA/CDR/gnuValueStream.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuValueStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuValueStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuValueStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,71 @@\n+/* gnuValueStream.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.CDR;\n+\n+/**\n+ * A stream, implementing this interface, provides methods to get/set a position\n+ * and get the RunTime.\n+ *\n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public interface gnuValueStream\n+{\n+  /**\n+   * Get the current position in the buffer.\n+   * \n+   * @return The position in the buffer, taking offset into consideration.\n+   */\n+  public int getPosition();\n+  \n+  /**\n+   * Jump to the given position, taking offset into consideration.\n+   */\n+  public void seek(int position);\n+  \n+  /**\n+   * Get the RunTime information. \n+   */\n+  public gnuRuntime getRunTime();\n+  \n+  /**\n+   * Replace the instance of RunTime. \n+   */\n+  public void setRunTime(gnuRuntime a_runtime);\n+  \n+}"}, {"sha": "0c787ddc2df0256c76dd3b5586e6d686facb4c1c", "filename": "libjava/classpath/gnu/CORBA/CDR/noHeaderInput.java", "status": "removed", "additions": 0, "deletions": 166, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FnoHeaderInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FnoHeaderInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FnoHeaderInput.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af", "patch": "@@ -1,166 +0,0 @@\n-/* noHeaderInput.java --\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.CORBA.CDR;\n-\n-import org.omg.CORBA.CustomMarshal;\n-import org.omg.CORBA.DataInputStream;\n-import org.omg.CORBA.MARSHAL;\n-import org.omg.CORBA.portable.BoxedValueHelper;\n-import org.omg.CORBA.portable.Streamable;\n-import org.omg.CORBA.portable.ValueFactory;\n-\n-import java.io.Serializable;\n-\n-/**\n- * Substitutes the main stream in factories when the header is already\n- * behind. Overrides methods that may be invoked from the factory,\n- * forcing not to read the header if called first time on this stream.\n- *\n- * This stream reverts to default behavior if one or more call are\n- * made (reading value types that are nested fields of the value type).\n- *\n- * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n- */\n-class noHeaderInput\n-  extends cdrBufInput\n-  implements DataInputStream\n-{\n-  /**\n-   * If true, this is not the first call.\n-   */\n-  boolean notFirst;\n-\n-  /**\n-   * Create an instance, reading from the given buffer.\n-   */\n-  public noHeaderInput(byte[] buffer)\n-  {\n-    super(buffer);\n-  }\n-\n-  /**\n-   * Read when knowning the class instance.\n-   */\n-  public Serializable read_value(Class clz)\n-  {\n-    if (notFirst)\n-      return super.read_value(clz);\n-    else\n-      {\n-        try\n-          {\n-            notFirst = true;\n-            return read_value((Serializable) clz.newInstance());\n-          }\n-        catch (Exception ex)\n-          {\n-            MARSHAL m = new MARSHAL(\"Unable to create an instance\");\n-            m.initCause(ex);\n-            throw m;\n-          }\n-      }\n-  }\n-\n-  /**\n-   * Tries to read using boxed value helper.\n-   */\n-  public Serializable read_value(BoxedValueHelper helper)\n-  {\n-    if (notFirst)\n-      return super.read_value(helper);\n-    else\n-      {\n-        notFirst = true;\n-        return helper.read_value(this);\n-      }\n-  }\n-\n-  /**\n-   * Tries to locate a factory using repository id.\n-   */\n-  public Serializable read_value(String repository_id)\n-  {\n-    if (notFirst)\n-      return super.read_value(repository_id);\n-    else\n-      {\n-        notFirst = true;\n-\n-        ValueFactory factory =\n-          ((org.omg.CORBA_2_3.ORB) orb()).lookup_value_factory(repository_id);\n-        if (factory == null)\n-          throw new MARSHAL(\"No factory\");\n-        return factory.read_value(this);\n-      }\n-  }\n-\n-  /**\n-   * Try to read when having an unitialised value.\n-   */\n-  public Serializable read_value(Serializable value)\n-  {\n-    if (notFirst)\n-      return super.read_value(value);\n-    else\n-      {\n-        notFirst = true;\n-\n-        // The user-defines io operations are implemented.\n-        if (value instanceof CustomMarshal)\n-          {\n-            CustomMarshal marsh = (CustomMarshal) value;\n-            try\n-              {\n-                marsh.unmarshal((DataInputStream) this);\n-              }\n-            catch (ClassCastException ex)\n-              {\n-                Vio.incorrect_plug_in(ex);\n-              }\n-          }\n-        else\n-        // The IDL-generated io operations are implemented.\n-        if (value instanceof Streamable)\n-          {\n-            ((Streamable) value)._read(this);\n-          }\n-        return value;\n-      }\n-  }\n-}\n\\ No newline at end of file"}, {"sha": "93dd1cdcdfbfe192df774f5195a22834b2c5db61", "filename": "libjava/classpath/gnu/CORBA/CdrEncapsCodecImpl.java", "status": "renamed", "additions": 30, "deletions": 28, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCdrEncapsCodecImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCdrEncapsCodecImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCdrEncapsCodecImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cdrEncapsCodec.java --\n+/* CdrEncapsCodecImpl.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,9 +38,9 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.CDR.cdrBufInput;\n-import gnu.CORBA.CDR.cdrBufOutput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.LocalObject;\n@@ -57,19 +57,19 @@\n /**\n  * The local {@link Codec} implementation for ENCODING_CDR_ENCAPS\n  * encoding. This is a local implementation; the remote side should\n- * have its own Codec of this kind.\n+ * have its own Codec of this kind. \n  *\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class cdrEncapsCodec\n+public class CdrEncapsCodecImpl\n   extends LocalObject\n   implements Codec\n {\n-  /**\n-   * The default version of encoding, used in parameterless constructor.\n+  /** \n+   * Use serialVersionUID for interoperability. \n    */\n-  private static final Version DEFAULT_VERSION = new Version(1, 2);\n+  private static final long serialVersionUID = 1;\n \n   /**\n    * If set to true, no wide string or wide character is allowed (GIOP 1.0).\n@@ -99,7 +99,7 @@\n   /**\n    * Create an instance of this Codec, encoding following the given version.\n    */\n-  public cdrEncapsCodec(ORB _orb, Version _version)\n+  public CdrEncapsCodecImpl(ORB _orb, Version _version)\n   {\n     orb = _orb;\n     version = _version;\n@@ -125,8 +125,8 @@ public String[] _ids()\n   public Any decode(byte[] them)\n              throws FormatMismatch\n   {\n-    cdrBufInput input = createInput(them);\n-    cdrBufInput encapsulation = createEncapsulation(them, input);\n+    BufferredCdrInput input = createInput(them);\n+    BufferredCdrInput encapsulation = createEncapsulation(them, input);\n \n     TypeCode type = encapsulation.read_TypeCode();\n \n@@ -142,9 +142,9 @@ public Any decode(byte[] them)\n     return readAny(type, encapsulation);\n   }\n \n-  private cdrBufInput createEncapsulation(byte[] them, cdrBufInput input)\n+  private BufferredCdrInput createEncapsulation(byte[] them, BufferredCdrInput input)\n   {\n-    cdrBufInput encapsulation;\n+    BufferredCdrInput encapsulation;\n \n     if ((them [ 0 ] | them [ 1 ] | them [ 2 ] | them [ 3 ]) == 0)\n       {\n@@ -163,10 +163,10 @@ public byte[] encode(Any that)\n   {\n     checkTypePossibility(\"\", that.type());\n \n-    cdrBufOutput output = createOutput(that);\n+    BufferedCdrOutput output = createOutput(that);\n \n-    // cdrBufOutput has internal support for this encoding.\n-    cdrOutput encapsulation = output.createEncapsulation();\n+    // BufferedCdrOutput has internal support for this encoding.\n+    AbstractCdrOutput encapsulation = output.createEncapsulation();\n \n     try\n       {\n@@ -179,6 +179,7 @@ public byte[] encode(Any that)\n     catch (Exception ex)\n       {\n         MARSHAL m = new MARSHAL();\n+        m.minor = Minor.Encapsulation;\n         m.initCause(ex);\n         throw m;\n       }\n@@ -206,8 +207,8 @@ public Any decode_value(byte[] them, TypeCode type)\n         throw new TypeMismatch(ex.getMessage());\n       }\n \n-    cdrBufInput input = createInput(them);\n-    cdrBufInput encapsulation = createEncapsulation(them, input);\n+    BufferredCdrInput input = createInput(them);\n+    BufferredCdrInput encapsulation = createEncapsulation(them, input);\n     return readAny(type, encapsulation);\n   }\n \n@@ -217,13 +218,13 @@ public Any decode_value(byte[] them, TypeCode type)\n    * @param type a type of the Any to read.\n    * @param input the encapsulation stream.\n    */\n-  private Any readAny(TypeCode type, cdrBufInput encapsulation)\n+  private Any readAny(TypeCode type, BufferredCdrInput encapsulation)\n                throws MARSHAL\n   {\n     gnuAny a = new gnuAny();\n     a.setOrb(orb);\n \n-    // cdrBufInput has internal support for this encoding.\n+    // BufferredCdrInput has internal support for this encoding.\n     a.read_value(encapsulation, type);\n     return a;\n   }\n@@ -234,9 +235,9 @@ public byte[] encode_value(Any that)\n   {\n     checkTypePossibility(\"\", that.type());\n \n-    cdrBufOutput output = createOutput(that);\n+    BufferedCdrOutput output = createOutput(that);\n \n-    cdrOutput encapsulation = output.createEncapsulation();\n+    AbstractCdrOutput encapsulation = output.createEncapsulation();\n \n     try\n       {\n@@ -248,6 +249,7 @@ public byte[] encode_value(Any that)\n     catch (Exception ex)\n       {\n         MARSHAL m = new MARSHAL();\n+        m.minor = Minor.Encapsulation;\n         m.initCause(ex);\n         throw m;\n       }\n@@ -256,7 +258,7 @@ public byte[] encode_value(Any that)\n \n   /**\n    * Create the CDR output stream for writing the given Any.\n-   * The cdrBufOutput has internal support for encapsulation encodings.\n+   * The BufferedCdrOutput has internal support for encapsulation encodings.\n    *\n    * @param that the Any that will be written.\n    *\n@@ -265,10 +267,10 @@ public byte[] encode_value(Any that)\n    * @throws InvalidTypeForEncoding if that Any cannot be written under the\n    * given version.\n    */\n-  private cdrBufOutput createOutput(Any that)\n+  private BufferedCdrOutput createOutput(Any that)\n                              throws InvalidTypeForEncoding\n   {\n-    cdrBufOutput output = new cdrBufOutput();\n+    BufferedCdrOutput output = new BufferedCdrOutput();\n     output.setOrb(orb);\n     output.setVersion(version);\n     return output;\n@@ -325,9 +327,9 @@ else if (kind == TCKind._tk_struct || kind == TCKind._tk_union)\n    *\n    * @return the stream.\n    */\n-  private cdrBufInput createInput(byte[] them)\n+  private BufferredCdrInput createInput(byte[] them)\n   {\n-    cdrBufInput input = new cdrBufInput(them);\n+    BufferredCdrInput input = new BufferredCdrInput(them);\n     input.setOrb(orb);\n     input.setVersion(version);\n     return input;", "previous_filename": "libjava/classpath/gnu/CORBA/cdrEncapsCodec.java"}, {"sha": "ce5761007c0a5b58340bf6b829a3ddcd451bc010", "filename": "libjava/classpath/gnu/CORBA/Connected_objects.java", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -90,17 +90,6 @@\n      * applicable.\n      */\n     public final java.lang.Object identity;\n-\n-    public boolean equals(java.lang.Object other)\n-    {\n-      if (other instanceof cObject)\n-        {\n-          cObject o = (cObject) other;\n-          return o.object.equals(object) && o.port == port;\n-        }\n-      else\n-        return false;\n-    }\n   }\n \n   /**"}, {"sha": "25bea92309924cefb322e9724e8843c350a26c25", "filename": "libjava/classpath/gnu/CORBA/CorbaList.java", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCorbaList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCorbaList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCorbaList.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* corbaArrayList.java --\n+/* CorbaList.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -52,7 +52,7 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class corbaArrayList\n+public class CorbaList\n   extends ArrayList\n   implements Serializable\n {\n@@ -64,15 +64,15 @@\n   /**\n    * Creates the list with the given initial size.\n    */\n-  public corbaArrayList(int initial_size)\n+  public CorbaList(int initial_size)\n   {\n     super(initial_size);\n   }\n \n   /**\n    * Creates the list with the default size.\n    */\n-  public corbaArrayList()\n+  public CorbaList()\n   {\n   }\n ", "previous_filename": "libjava/classpath/gnu/CORBA/corbaArrayList.java"}, {"sha": "51df047192c9df955398ad9e42c7ae9b7a7260f0", "filename": "libjava/classpath/gnu/CORBA/DefaultSocketFactory.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDefaultSocketFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDefaultSocketFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDefaultSocketFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,79 @@\n+/* DefaultSocketFactory.java --\n+ Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.CORBA;\n+\n+import gnu.CORBA.interfaces.SocketFactory;\n+\n+import java.io.IOException;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+\n+/**\n+ * The default socket factory that forges \"plain\" server and client sockets. The\n+ * class can be replaced by setting the gnu.CORBA.SocketFactory property.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class DefaultSocketFactory\n+  implements SocketFactory\n+{\n+  /**\n+   * It is enough to have one instance of this class for all ORBs.\n+   */\n+  public static final DefaultSocketFactory Singleton = new DefaultSocketFactory();\n+\n+  /**\n+   * Create a client socket.\n+   */\n+  public Socket createClientSocket(String host, int port)\n+    throws IOException\n+  {\n+    return new Socket(host, port);\n+  }\n+\n+  /**\n+   * Create a server socket.\n+   */\n+  public ServerSocket createServerSocket(int port)\n+    throws IOException\n+  {\n+    return new ServerSocket(port);\n+  }\n+\n+}"}, {"sha": "7060f86b27fb446d65b539dc4c0b3c2f9025f764", "filename": "libjava/classpath/gnu/CORBA/DynAn/AbstractAny.java", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FAbstractAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FAbstractAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FAbstractAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* abstractDynAny.java --\n+/* AbstractAny.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,7 +38,7 @@\n \n package gnu.CORBA.DynAn;\n \n-import gnu.CORBA.typeNamer;\n+import gnu.CORBA.TypeKindNamer;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.LocalObject;\n@@ -54,7 +54,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class abstractDynAny\n+public abstract class AbstractAny\n   extends LocalObject\n   implements Serializable\n {\n@@ -108,12 +108,12 @@\n   /**\n    * The change value listener.\n    */\n-  valueChangedListener listener;\n+  ValueChangeListener listener;\n \n   /**\n    * Create the abstract dyn any.\n    */\n-  public abstractDynAny(TypeCode oType, TypeCode aType,\n+  public AbstractAny(TypeCode oType, TypeCode aType,\n                         gnuDynAnyFactory aFactory, ORB anOrb\n                        )\n   {\n@@ -163,8 +163,8 @@ void checkType(TypeCode expected, TypeCode actual)\n    */\n   String typeMismatch(TypeCode expected, TypeCode actual)\n   {\n-    return typeNamer.nameIt(expected) + \" expected \" +\n-           typeNamer.nameIt(actual);\n+    return TypeKindNamer.nameIt(expected) + \" expected \" +\n+           TypeKindNamer.nameIt(actual);\n   }\n \n   /**", "previous_filename": "libjava/classpath/gnu/CORBA/DynAn/abstractDynAny.java"}, {"sha": "c96cbedc73bc22fa4fc0d0e2c253c6092532bfce", "filename": "libjava/classpath/gnu/CORBA/DynAn/DivideableAny.java", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* anyDivideable.java --\n+/* DivideableAny.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,7 +38,7 @@\n \n package gnu.CORBA.DynAn;\n \n-import gnu.CORBA.typeNamer;\n+import gnu.CORBA.TypeKindNamer;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.CompletionStatus;\n@@ -58,8 +58,8 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class anyDivideable\n-  extends abstractDynAny\n+public abstract class DivideableAny\n+  extends AbstractAny\n   implements Serializable\n {\n   /**\n@@ -78,7 +78,7 @@\n    */\n   protected int pos = 0;\n \n-  public anyDivideable(TypeCode oType, TypeCode aType,\n+  public DivideableAny(TypeCode oType, TypeCode aType,\n                        gnuDynAnyFactory aFactory, ORB anOrb\n                       )\n   {\n@@ -486,9 +486,9 @@ public boolean equal(DynAny other)\n       {\n         if (!official_type.equal(other.type()))\n           return false;\n-        else if (other instanceof anyDivideable)\n+        else if (other instanceof DivideableAny)\n           {\n-            anyDivideable x = (anyDivideable) other;\n+            DivideableAny x = (DivideableAny) other;\n             if (x.array.length != array.length)\n               return false;\n \n@@ -499,7 +499,7 @@ else if (other instanceof anyDivideable)\n               }\n             return true;\n           }\n-        else if (other == null || other instanceof abstractDynAny)\n+        else if (other == null || other instanceof AbstractAny)\n           return false;\n         else\n           return other.to_any().equal(to_any());", "previous_filename": "libjava/classpath/gnu/CORBA/DynAn/anyDivideable.java"}, {"sha": "a3e3680d9663c5ea393f3dde5f43bdce038dac73", "filename": "libjava/classpath/gnu/CORBA/DynAn/RecordAny.java", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* abstractRecord.java --\n+/* RecordAny.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -39,7 +39,7 @@\n package gnu.CORBA.DynAn;\n \n import gnu.CORBA.Unexpected;\n-import gnu.CORBA.holderFactory;\n+import gnu.CORBA.HolderLocator;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n@@ -65,8 +65,8 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class abstractRecord\n-  extends anyDivideable\n+public abstract class RecordAny\n+  extends DivideableAny\n   implements DynAny, Serializable\n {\n   /**\n@@ -80,7 +80,7 @@\n    *\n    * @param fields The DynAny's, representing the fields of the structure.\n    */\n-  public abstractRecord(TypeCode oType, TypeCode aType,\n+  public RecordAny(TypeCode oType, TypeCode aType,\n                         gnuDynAnyFactory aFactory, ORB anOrb\n                        )\n   {\n@@ -277,15 +277,15 @@ public DynAny copy()\n         c [ i ] = array [ i ].copy();\n       }\n \n-    abstractRecord d = newInstance(official_type, final_type, factory, orb);\n+    RecordAny d = newInstance(official_type, final_type, factory, orb);\n     d.array = c;\n     return d;\n   }\n \n   /**\n    * Create a new instance when copying.\n    */\n-  protected abstract abstractRecord newInstance(TypeCode oType, TypeCode aType,\n+  protected abstract RecordAny newInstance(TypeCode oType, TypeCode aType,\n                                                 gnuDynAnyFactory aFactory,\n                                                 ORB anOrb\n                                                );\n@@ -297,7 +297,7 @@ public Any to_any()\n   {\n     try\n       {\n-        Streamable sHolder = holderFactory.createHolder(official_type);\n+        Streamable sHolder = HolderLocator.createHolder(official_type);\n \n         Class sHolderClass = sHolder.getClass();\n         Field sHolderValue = sHolderClass.getField(\"value\");\n@@ -371,7 +371,7 @@ public void from_any(Any an_any)\n             fField = structure.getClass().getField(fNames [ i ]);\n             field = fField.get(structure);\n             fType = array [ i ].type();\n-            holder = holderFactory.createHolder(fType);\n+            holder = HolderLocator.createHolder(fType);\n \n             member = createAny();\n             holder.getClass().getField(\"value\").set(holder, field);", "previous_filename": "libjava/classpath/gnu/CORBA/DynAn/abstractRecord.java"}, {"sha": "da4e9618ee727440506187cad8f36f06195f8e4d", "filename": "libjava/classpath/gnu/CORBA/DynAn/UndivideableAny.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FUndivideableAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FUndivideableAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FUndivideableAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -55,8 +55,8 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class anyUndivideable\n-  extends abstractDynAny\n+public abstract class UndivideableAny\n+  extends AbstractAny\n   implements Serializable\n {\n   /**\n@@ -67,7 +67,7 @@\n   /**\n    * Create a new instance with the given typecode.\n    */\n-  public anyUndivideable(TypeCode oType, TypeCode aType,\n+  public UndivideableAny(TypeCode oType, TypeCode aType,\n                          gnuDynAnyFactory aFactory, ORB anOrb)\n   {\n     super(oType, aType, aFactory, anOrb);", "previous_filename": "libjava/classpath/gnu/CORBA/DynAn/anyUndivideable.java"}, {"sha": "5972761599918e4783e3614cd842ef6618df0087", "filename": "libjava/classpath/gnu/CORBA/DynAn/ValueChangeListener.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FValueChangeListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FValueChangeListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FValueChangeListener.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* valueChangedListener.java --\n+/* ValueChangeListener.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -44,7 +44,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public interface valueChangedListener\n+public interface ValueChangeListener\n {\n   void changed();\n }\n\\ No newline at end of file", "previous_filename": "libjava/classpath/gnu/CORBA/DynAn/valueChangedListener.java"}, {"sha": "23141de3d96fb8f0907cbaf34baafa069dc1a45d", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynAny.java", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,14 +38,14 @@\n \n package gnu.CORBA.DynAn;\n \n-import gnu.CORBA.CDR.cdrBufOutput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n import gnu.CORBA.OctetHolder;\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.WCharHolder;\n import gnu.CORBA.WStringHolder;\n-import gnu.CORBA.holderFactory;\n-import gnu.CORBA.typeNamer;\n-import gnu.CORBA.universalHolder;\n+import gnu.CORBA.HolderLocator;\n+import gnu.CORBA.TypeKindNamer;\n+import gnu.CORBA.GeneralHolder;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.AnyHolder;\n@@ -84,7 +84,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class gnuDynAny extends abstractDynAny implements DynAny, Serializable\n+public class gnuDynAny extends AbstractAny implements DynAny, Serializable\n {\n   /**\n    * Use serialVersionUID for interoperability.\n@@ -132,7 +132,7 @@ public DynAny copy()\n   {\n     if (holder != null)\n       {\n-        cdrBufOutput buffer = new cdrBufOutput();\n+        BufferedCdrOutput buffer = new BufferedCdrOutput();\n         holder._write(buffer);\n \n         gnuDynAny other;\n@@ -165,7 +165,7 @@ public DynAny copy()\n   public DynAny current_component() throws TypeMismatch\n   {\n     throw new TypeMismatch(\"Not applicable for \" +\n-      typeNamer.nameIt(final_type)\n+      TypeKindNamer.nameIt(final_type)\n     );\n   }\n \n@@ -193,14 +193,14 @@ public void from_any(Any an_any) throws TypeMismatch, InvalidValue\n       {\n         throw new InvalidValue(ISNULL);\n       }\n-    else if (a_holder instanceof universalHolder)\n+    else if (a_holder instanceof GeneralHolder)\n       {\n-        holder = holderFactory.createHolder(official_type);\n+        holder = HolderLocator.createHolder(official_type);\n         if (holder == null)\n-          holder = holderFactory.createHolder(final_type);\n+          holder = HolderLocator.createHolder(final_type);\n \n         if (holder == null)\n-          holder = ((universalHolder) a_holder).Clone();\n+          holder = ((GeneralHolder) a_holder).Clone();\n         else\n           {\n             InputStream in = an_any.create_input_stream();\n@@ -890,7 +890,7 @@ public void insert_dyn_any(DynAny d) throws TypeMismatch, InvalidValue\n    */\n   public boolean equal(DynAny other)\n   {\n-    if (other instanceof abstractDynAny)\n+    if (other instanceof AbstractAny)\n       {\n         if (other instanceof gnuDynAny)\n           {\n@@ -899,10 +899,10 @@ public boolean equal(DynAny other)\n             if (!x.holder.getClass().equals(holder.getClass()))\n               return false;\n \n-            cdrBufOutput b1 = new cdrBufOutput();\n+            BufferedCdrOutput b1 = new BufferedCdrOutput();\n             x.holder._write(b1);\n \n-            cdrBufOutput b2 = new cdrBufOutput(b1.buffer.size() + 10);\n+            BufferedCdrOutput b2 = new BufferedCdrOutput(b1.buffer.size() + 10);\n             holder._write(b2);\n \n             return Arrays.equals(b1.buffer.toByteArray(),"}, {"sha": "b8b39bfbcdfb18d461151d8fc9eac9cf9b5fcc30", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynAnyFactory.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAnyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAnyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynAnyFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -40,8 +40,8 @@\n \n import gnu.CORBA.Poa.ORB_1_4;\n import gnu.CORBA.Unexpected;\n-import gnu.CORBA.holderFactory;\n-import gnu.CORBA.typeNamer;\n+import gnu.CORBA.HolderLocator;\n+import gnu.CORBA.TypeKindNamer;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.LocalObject;\n@@ -227,7 +227,7 @@ public DynAny create_alias(TypeCode official, TypeCode type)\n    */\n   public DynAny create_simple(TypeCode official, TypeCode type)\n   {\n-    Streamable holder = holderFactory.createHolder(type);\n+    Streamable holder = HolderLocator.createHolder(type);\n     return new gnuDynAny(holder, official, type, this, orb);\n   }\n \n@@ -314,7 +314,7 @@ public DynAny create_dyn_any_from_type_code(TypeCode official, TypeCode type)\n             case TCKind._tk_Principal :\n             case TCKind._tk_abstract_interface :\n               throw new InconsistentTypeCode(\"Following API, the \" +\n-                                             typeNamer.nameIt(type) +\n+                                             TypeKindNamer.nameIt(type) +\n                                              \" must not be supported.\"\n                                             );\n "}, {"sha": "825cd0a563890f86e0ceb26adf16733d8c66196e", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynArray.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,7 +39,7 @@\n package gnu.CORBA.DynAn;\n \n import gnu.CORBA.Unexpected;\n-import gnu.CORBA.holderFactory;\n+import gnu.CORBA.HolderLocator;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.BAD_PARAM;\n@@ -66,7 +66,7 @@\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class gnuDynArray\n-  extends anyDivideable\n+  extends DivideableAny\n   implements DynArray, Serializable\n {\n   /**\n@@ -238,10 +238,10 @@ public Any to_any()\n     try\n       {\n         Streamable memberHolder =\n-          holderFactory.createHolder(official_components);\n+          HolderLocator.createHolder(official_components);\n \n         if (memberHolder == null)\n-          memberHolder = holderFactory.createHolder(final_components);\n+          memberHolder = HolderLocator.createHolder(final_components);\n \n         Class memberHolderClass = memberHolder.getClass();\n         Class memberClass = memberHolderClass.getField(\"value\").getType();\n@@ -260,7 +260,7 @@ public Any to_any()\n             Array.set(members, i, member);\n           }\n \n-        Streamable arrayHolder = holderFactory.createHolder(official_type);\n+        Streamable arrayHolder = HolderLocator.createHolder(official_type);\n         arrayHolder.getClass().getField(\"value\").set(arrayHolder, members);\n \n         Any g = createAny();\n@@ -296,9 +296,9 @@ public void from_any(Any an_any)\n           {\n             if (holderClass == null)\n               {\n-                holder = holderFactory.createHolder(official_components);\n+                holder = HolderLocator.createHolder(official_components);\n                 if (holder == null)\n-                  holder = holderFactory.createHolder(final_components);\n+                  holder = HolderLocator.createHolder(final_components);\n                 holderClass = holder.getClass();\n               }\n             else"}, {"sha": "6eb7fe2bcaceb295dd7a0f98d4321582d46933d7", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynEnum.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynEnum.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynEnum.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynEnum.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -60,7 +60,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class gnuDynEnum extends anyUndivideable implements DynEnum\n+public class gnuDynEnum extends UndivideableAny implements DynEnum\n {\n   /**\n    * Use serialVersionUID for interoperability."}, {"sha": "9655f0387da9a7c488bf1c909a7d02bf869e9318", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynFixed.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynFixed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynFixed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynFixed.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -57,7 +57,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class gnuDynFixed extends anyUndivideable implements DynFixed\n+public class gnuDynFixed extends UndivideableAny implements DynFixed\n {\n   /**\n    * Use serialVersionUID for interoperability."}, {"sha": "b15aff3e124d3fe61632b9270371fa1b8242673f", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynStruct.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynStruct.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynStruct.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynStruct.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -54,7 +54,7 @@\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class gnuDynStruct\n-  extends abstractRecord\n+  extends RecordAny\n   implements DynStruct, Serializable\n {\n   /**\n@@ -89,7 +89,7 @@ public gnuDynStruct(TypeCode oType, TypeCode aType,\n   }\n \n   /** @inheritDoc */\n-  protected abstractRecord newInstance(TypeCode oType, TypeCode aType,\n+  protected RecordAny newInstance(TypeCode oType, TypeCode aType,\n                                        gnuDynAnyFactory aFactory, ORB anOrb)\n   {\n     return new gnuDynStruct(oType, aType, aFactory, anOrb);"}, {"sha": "ef5aed645129b3e6d334a0c73ed84371baa83349", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynUnion.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -62,8 +62,8 @@\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class gnuDynUnion\n-  extends anyDivideable\n-  implements DynUnion, Serializable, valueChangedListener\n+  extends DivideableAny\n+  implements DynUnion, Serializable, ValueChangeListener\n {\n   /**\n    * Use serialVersionUID for interoperability.\n@@ -96,7 +96,7 @@ public gnuDynUnion(TypeCode oType, TypeCode aType, gnuDynAnyFactory aFactory,\n         discriminator =\n           factory.create_dyn_any_from_type_code(final_type.discriminator_type());\n \n-        ((abstractDynAny) discriminator).listener = this;\n+        ((AbstractAny) discriminator).listener = this;\n \n         if (final_type.default_index() >= 0)\n           set_to_default_member();\n@@ -114,7 +114,7 @@ public gnuDynUnion(TypeCode oType, TypeCode aType, gnuDynAnyFactory aFactory,\n   /*\n    * (non-Javadoc)\n    *\n-   * @see gnu.CORBA.DynAn.anyDivideable#to_any()\n+   * @see gnu.CORBA.DynAn.DivideableAny#to_any()\n    */\n   public Any to_any()\n   {\n@@ -171,7 +171,7 @@ public DynAny copy()\n         gnuDynUnion other =\n           new gnuDynUnion(official_type, final_type, factory, orb);\n         other.discriminator = discriminator.copy();\n-        ((abstractDynAny) other.discriminator).listener = other;\n+        ((AbstractAny) other.discriminator).listener = other;\n         if (array.length == 1)\n           {\n             other.array = new DynAny[] { other.discriminator };"}, {"sha": "0c31d4093e2e5797c7f3dd99b0656987b1ae4635", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynValue.java", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.CORBA.DynAn;\n \n+import gnu.CORBA.Minor;\n import gnu.CORBA.Unexpected;\n \n import org.omg.CORBA.Any;\n@@ -66,7 +67,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class gnuDynValue extends abstractRecord implements DynValue,\n+public class gnuDynValue extends RecordAny implements DynValue,\n   Serializable\n {\n   /**\n@@ -243,7 +244,7 @@ public void set_to_value()\n   /**\n    * Create a new instance.\n    */\n-  protected abstractRecord newInstance(TypeCode oType, TypeCode aType,\n+  protected RecordAny newInstance(TypeCode oType, TypeCode aType,\n     gnuDynAnyFactory aFactory, ORB anOrb\n   )\n   {\n@@ -301,9 +302,12 @@ public Any to_any()\n             ValueFactory factory =\n               ((org.omg.CORBA_2_3.ORB) orb).lookup_value_factory(official_type.id());\n             if (factory == null)\n-              throw new MARSHAL(\"Factory for \" + official_type.id() +\n-                \" not registered.\"\n-              );\n+              {\n+                MARSHAL m = new MARSHAL(\"Factory for \" + official_type.id() +\n+                \" not registered.\");\n+                m.minor = Minor.Factory;\n+                throw m;\n+              }\n \n             OutputStream out = orb.create_output_stream();\n "}, {"sha": "a13e9fc2c505b8eab960fcac43bd0b49bd10b8b4", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynValueBox.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValueBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValueBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValueBox.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,7 +39,7 @@\n package gnu.CORBA.DynAn;\n \n import gnu.CORBA.Unexpected;\n-import gnu.CORBA.holderFactory;\n+import gnu.CORBA.HolderLocator;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.ORB;\n@@ -65,7 +65,7 @@\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class gnuDynValueBox\n-  extends anyDivideable\n+  extends DivideableAny\n   implements DynValueBox, Serializable\n {\n   /**\n@@ -208,7 +208,7 @@ public void from_any(Any an_any)\n       {\n         try\n           {\n-            Streamable holder = holderFactory.createHolder(content);\n+            Streamable holder = HolderLocator.createHolder(content);\n             Field v = holder.getClass().getField(\"value\");\n             v.set(holder, s);\n "}, {"sha": "8fc8697a4f3413b51cec55b26e79eb9f01880a9e", "filename": "libjava/classpath/gnu/CORBA/EmptyExceptionHolder.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -125,6 +125,7 @@ public void _write(OutputStream output)\n     catch (Exception ex)\n       {\n         BAD_OPERATION bad = new BAD_OPERATION();\n+        bad.minor = Minor.CDR;\n         bad.initCause(ex);\n         throw bad;\n       }"}, {"sha": "8b75205056b81bb24df0dbecebbe3a8a9999f7b9", "filename": "libjava/classpath/gnu/CORBA/ExceptionCreator.java", "status": "removed", "additions": 0, "deletions": 245, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af", "patch": "@@ -1,245 +0,0 @@\n-/* ExceptionCreator.java --\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.CORBA;\n-\n-import org.omg.CORBA.CompletionStatus;\n-import org.omg.CORBA.CompletionStatusHelper;\n-import org.omg.CORBA.MARSHAL;\n-import org.omg.CORBA.SystemException;\n-import org.omg.CORBA.UNKNOWN;\n-import org.omg.CORBA.UserException;\n-import org.omg.CORBA.portable.InputStream;\n-import org.omg.CORBA.portable.OutputStream;\n-\n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Method;\n-\n-/**\n- * Creates the objects from the agreed IDL names.\n- *\n- * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n- */\n-public class ExceptionCreator\n-{\n-  /**\n-   * The standard OMG prefix.\n-   */\n-  public static final String OMG_PREFIX = \"omg.org/\";\n-\n-  /**\n-   * The standard java prefix.\n-   */\n-  public static final String JAVA_PREFIX = \"org.omg.\";\n-\n-  /**\n-   * Create the system exception with the given idl name.\n-   *\n-   * @param idl the exception IDL name, must match the syntax\n-   * \"IDL:<class/name>:1.0\".\n-   * @param minor the exception minor code.\n-   * @param completed the exception completion status.\n-   *\n-   * @return the created exception.\n-   */\n-  public static SystemException createSystemException(String idl, int minor,\n-                                                      CompletionStatus completed\n-                                                     )\n-  {\n-    try\n-      {\n-        String cl = toClassName(idl);\n-        Class exClass = Class.forName(cl);\n-\n-        Constructor constructor =\n-          exClass.getConstructor(new Class[]\n-                                 {\n-                                   String.class, int.class,\n-                                   CompletionStatus.class\n-                                 }\n-                                );\n-\n-        Object exception =\n-          constructor.newInstance(new Object[]\n-                                  {\n-                                    \" Remote exception \" + idl + \", minor \" +\n-                                    minor + \", \" + completed + \".\",\n-                                    new Integer(minor), completed\n-                                  }\n-                                 );\n-\n-        return (SystemException) exception;\n-      }\n-    catch (Exception ex)\n-      {\n-        ex.printStackTrace();\n-        return new UNKNOWN(\"Unsupported system exception\", minor, completed);\n-      }\n-  }\n-\n-  /**\n-   * Read the system exception from the given stream.\n-   * @param input the CDR stream to read from.\n-   * @return the exception that has been stored in the stream\n-   * (IDL name, minor code and completion status).\n-   */\n-  public static SystemException readSystemException(InputStream input)\n-  {\n-    String idl = input.read_string();\n-    int minor = input.read_ulong();\n-    CompletionStatus status = CompletionStatusHelper.read(input);\n-\n-    SystemException exception =\n-      ExceptionCreator.createSystemException(idl, minor, status);\n-\n-    return exception;\n-  }\n-\n-  /**\n-   * Reads the user exception, having the given Id, from the\n-   * input stream. The id is expected to be in the form like\n-   * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n-   *\n-   * @param idl the exception idl name.\n-   * @param input the stream to read from.\n-   *\n-   * @return the loaded exception.\n-   * @return null if the helper class cannot be found.\n-   */\n-  public static UserException readUserException(String idl, InputStream input)\n-  {\n-    try\n-      {\n-        String helper = toHelperName(idl);\n-        Class helperClass = Class.forName(helper);\n-\n-        Method read =\n-          helperClass.getMethod(\"read\",\n-                                new Class[]\n-                                {\n-                                  org.omg.CORBA.portable.InputStream.class\n-                                }\n-                               );\n-\n-        return (UserException) read.invoke(null, new Object[] { input });\n-      }\n-    catch (MARSHAL mex)\n-      {\n-        // This one is ok to throw\n-        throw mex;\n-      }\n-    catch (Exception ex)\n-      {\n-        ex.printStackTrace();\n-        return null;\n-      }\n-  }\n-\n-  /**\n-   * Writes the system exception data to CDR output stream.\n-   *\n-   * @param output a stream to write data to.\n-   * @param ex an exception to write.\n-   */\n-  public static void writeSystemException(OutputStream output,\n-                                          SystemException ex\n-                                         )\n-  {\n-    String exIDL = toIDL(ex.getClass().getName());\n-    output.write_string(exIDL);\n-    output.write_ulong(ex.minor);\n-    CompletionStatusHelper.write(output, ex.completed);\n-  }\n-\n-  /**\n-   * Converts teh given IDL name to class name.\n-   *\n-   * @param IDL the idl name.\n-   *\n-   */\n-  protected static String toClassName(String IDL)\n-  {\n-    String s = IDL;\n-    int a = s.indexOf(':') + 1;\n-    int b = s.lastIndexOf(':');\n-\n-    s = IDL.substring(a, b);\n-\n-    if (s.startsWith(OMG_PREFIX))\n-      s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n-\n-    return s.replace('/', '.');\n-  }\n-\n-  /**\n-   * Gets the helper class name from the string like\n-   * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n-   *\n-   * @param IDL the idl name.\n-   */\n-  protected static String toHelperName(String IDL)\n-  {\n-    String s = IDL;\n-    int a = s.indexOf(':') + 1;\n-    int b = s.lastIndexOf(':');\n-\n-    s = IDL.substring(a, b);\n-\n-    if (s.startsWith(OMG_PREFIX))\n-      s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n-\n-    return s.replace('/', '.') + \"Helper\";\n-  }\n-\n-  /**\n-   * Convert the class name to IDL name.\n-   *\n-   * @param cn the class name.\n-   *\n-   * @return the idl name.\n-   */\n-  protected static String toIDL(String cn)\n-  {\n-    if (cn.startsWith(JAVA_PREFIX))\n-      cn = cn.substring(JAVA_PREFIX.length());\n-\n-    cn = cn.replace('.', '/');\n-\n-    return \"IDL:\" + OMG_PREFIX + cn + \":1.0\";\n-  }\n-}"}, {"sha": "cbdf46f259ad4cb3840d3c3ac6bf23353361e5cf", "filename": "libjava/classpath/gnu/CORBA/ForwardRequestHelper.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FForwardRequestHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -81,6 +81,7 @@ public static ForwardRequest extract(Any any)\n     catch (ClassCastException cex)\n       {\n         BAD_OPERATION bad = new BAD_OPERATION(\"ForwardRequest expected\");\n+        bad.minor = Minor.Any;\n         bad.initCause(cex);\n         throw bad;\n       }"}, {"sha": "bffb02678aa019f2e9197fa867c99177f6cca930", "filename": "libjava/classpath/gnu/CORBA/GIOP/CharSets_OSF.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCharSets_OSF.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCharSets_OSF.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCharSets_OSF.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -47,7 +47,10 @@\n /**\n  * This class contains the codes, used to identify character sets\n  * in CORBA. These codes are defined in Open Software Foundation (OSF)\n- * code set registry\n+ * code set registry.\n+ * \n+ * The name of this class specially sets \"OSF\" apart if somebody would start\n+ * searching Open Software Foundation abbreviation.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */"}, {"sha": "38039c2ed217d21cdaca0dadab90ffe0dad2a240", "filename": "libjava/classpath/gnu/CORBA/GIOP/CloseMessage.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCloseMessage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCloseMessage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCloseMessage.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,15 +38,13 @@\n \n package gnu.CORBA.GIOP;\n \n-import gnu.CORBA.IOR;\n+import gnu.CORBA.Minor;\n \n import org.omg.CORBA.MARSHAL;\n \n import java.io.IOException;\n import java.io.OutputStream;\n \n-import java.net.Socket;\n-\n /**\n  * The explicit command to close the connection.\n  *\n@@ -60,6 +58,11 @@\n public class CloseMessage\n   extends MessageHeader\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * The singleton close message is typically enough, despite new\n    * instances may be instantiated if the specific version field\n@@ -95,6 +98,7 @@ public static void close(OutputStream socketStream)\n     catch (IOException ex)\n       {\n         MARSHAL m = new MARSHAL(\"Unable to flush the stream\");\n+        m.minor = Minor.Header;\n         m.initCause(ex);\n         throw m;\n       }"}, {"sha": "ab565db3797ee715a8f9668b28d53035be5b2063", "filename": "libjava/classpath/gnu/CORBA/GIOP/CodeSetServiceContext.java", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,8 +38,8 @@\n \n package gnu.CORBA.GIOP;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.IOR;\n import gnu.CORBA.IOR.CodeSets_profile;\n \n@@ -51,7 +51,7 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class cxCodeSet\n+public class CodeSetServiceContext\n   extends ServiceContext\n {\n   /**\n@@ -62,7 +62,7 @@\n   /**\n    * The standard component to include in the messages.\n    */\n-  public static final cxCodeSet STANDARD = new cxCodeSet();\n+  public static final CodeSetServiceContext STANDARD = new CodeSetServiceContext();\n \n   /**\n    * The encoding, used to transfer the narrow (1 byte) character data.\n@@ -84,13 +84,13 @@\n    *\n    * @param contexts the array of contexts, can be null.\n    */\n-  public static cxCodeSet find(ServiceContext[] contexts)\n+  public static CodeSetServiceContext find(ServiceContext[] contexts)\n   {\n     if (contexts != null)\n       for (int i = 0; i < contexts.length; i++)\n         {\n-          if (contexts [ i ] instanceof cxCodeSet)\n-            return (cxCodeSet) contexts [ i ];\n+          if (contexts [ i ] instanceof CodeSetServiceContext)\n+            return (CodeSetServiceContext) contexts [ i ];\n         }\n     return STANDARD;\n   }\n@@ -102,12 +102,12 @@ public static cxCodeSet find(ServiceContext[] contexts)\n    * If you take this task, scan 'TODO character encoding' for\n    * relevant places.\n    */\n-  public static cxCodeSet negotiate(IOR.CodeSets_profile profile)\n+  public static CodeSetServiceContext negotiate(IOR.CodeSets_profile profile)\n   {\n     if (profile.negotiated != null)\n       return profile.negotiated;\n \n-    cxCodeSet use = new cxCodeSet();\n+    CodeSetServiceContext use = new CodeSetServiceContext();\n \n     use.char_data =\n       negotiate(profile.narrow, STANDARD.char_data, CharSets_OSF.ISO8859_1);\n@@ -124,9 +124,9 @@ public static cxCodeSet negotiate(IOR.CodeSets_profile profile)\n    * Read the context from the given stream. Does not read the\n    * code sets id.\n    */\n-  public void readContext(cdrInput input)\n+  public void readContext(AbstractCdrInput input)\n   {\n-    cdrInput encap = input.read_encapsulation();\n+    AbstractCdrInput encap = input.read_encapsulation();\n \n     char_data = encap.read_ulong();\n     wide_char_data = encap.read_ulong();\n@@ -145,11 +145,11 @@ public String toString()\n    * Write the context to the given stream, including the code\n    * sets id.\n    */\n-  public void write(cdrOutput output)\n+  public void write(AbstractCdrOutput output)\n   {\n     output.write_ulong(ID);\n \n-    cdrOutput enout = output.createEncapsulation();\n+    AbstractCdrOutput enout = output.createEncapsulation();\n \n     enout.write_long(char_data);\n     enout.write_ulong(wide_char_data);", "previous_filename": "libjava/classpath/gnu/CORBA/GIOP/cxCodeSet.java"}, {"sha": "77ea20e38f0b51f43feb1402602e0fec9c93056f", "filename": "libjava/classpath/gnu/CORBA/GIOP/ContextHandler.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FContextHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FContextHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FContextHandler.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* contextSupportingHeader.java --\n+/* ContextHandler.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -46,7 +46,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public abstract class contextSupportingHeader\n+public abstract class ContextHandler\n {\n \n   /**", "previous_filename": "libjava/classpath/gnu/CORBA/GIOP/contextSupportingHeader.java"}, {"sha": "99942fee359bd8ac3a3700f3915ccb642fb59762", "filename": "libjava/classpath/gnu/CORBA/GIOP/ErrorMessage.java", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FErrorMessage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FErrorMessage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FErrorMessage.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,14 +38,17 @@\n \n package gnu.CORBA.GIOP;\n \n+import gnu.CORBA.OrbFunctional;\n import gnu.CORBA.IOR;\n+import gnu.CORBA.Minor;\n \n import java.io.IOException;\n import java.io.OutputStream;\n \n import java.net.Socket;\n \n import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.ORB;\n \n /**\n  * The error message is sent in response to the message, encoded\n@@ -59,6 +62,11 @@\n public class ErrorMessage\n   extends MessageHeader\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * Create a new error message, setting the message field\n    * to the {@link MESSAGE_ERROR} and the version number to\n@@ -73,14 +81,22 @@ public ErrorMessage(gnu.CORBA.Version msg_version)\n   /**\n    * Send the error message to the given IOR address.\n    *\n-   * @param to the IOR address (host and port, other fields\n+   * @param ior the IOR address (host and port, other fields\n    * are not used).\n+   * \n+   * @param orb the ORB, sending the error message.\n    */\n-  public void send(IOR ior)\n+  public void send(IOR ior, ORB orb)\n   {\n     try\n       {\n-        Socket socket = new Socket(ior.Internet.host, ior.Internet.port);\n+        Socket socket;\n+        \n+        if (orb instanceof OrbFunctional)\n+          socket = ((OrbFunctional) orb).socketFactory.createClientSocket(\n+            ior.Internet.host, ior.Internet.port);\n+        else\n+          socket = new Socket(ior.Internet.host, ior.Internet.port);\n \n         OutputStream socketOutput = socket.getOutputStream();\n         write(socketOutput);\n@@ -90,6 +106,7 @@ public void send(IOR ior)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Header;\n         t.initCause(ex);\n         throw t;\n       }"}, {"sha": "e1bdb512bfbda929f278a1c999fecf29c7b69d57", "filename": "libjava/classpath/gnu/CORBA/GIOP/MessageHeader.java", "status": "modified", "additions": 148, "deletions": 52, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* MessageHeader.java -- GIOP 1.0 message header.\n+/* MessageHeader.java -- GIOP message header.\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,32 +38,38 @@\n \n package gnu.CORBA.GIOP;\n \n+import gnu.CORBA.Minor;\n+import gnu.CORBA.Version;\n+import gnu.CORBA.CDR.BigEndianInputStream;\n import gnu.CORBA.CDR.BigEndianOutputStream;\n import gnu.CORBA.CDR.LittleEndianInputStream;\n import gnu.CORBA.CDR.LittleEndianOutputStream;\n-import gnu.CORBA.CDR.abstractDataOutputStream;\n-import gnu.CORBA.Version;\n+import gnu.CORBA.CDR.AbstractDataInput;\n+import gnu.CORBA.CDR.AbstractDataOutput;\n \n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.portable.IDLEntity;\n \n-import java.io.DataInputStream;\n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.OutputStream;\n-\n+import java.net.Socket;\n import java.util.Arrays;\n-import gnu.CORBA.CDR.BigEndianInputStream;\n-import gnu.CORBA.CDR.abstractDataInputStream;\n-import java.io.InputStream;\n \n /**\n  * The GIOP message header.\n- *\n+ * \n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public class MessageHeader\n   implements IDLEntity\n {\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+\n   /**\n    * Request message.\n    */\n@@ -80,16 +86,15 @@\n   public static final byte CANCEL_REQUEST = 2;\n \n   /**\n-   * Locate request message, used to check the server ability to\n-   * process requests for the object reference.\n-   * This message is also used to get the\n+   * Locate request message, used to check the server ability to process\n+   * requests for the object reference. This message is also used to get the\n    * address where the object reference should be sent.\n    */\n   public static final byte LOCATE_REQUEST = 3;\n \n   /**\n-   * Locate reply message, sent in response to the\n-   * {@link #LocateRequest} message.\n+   * Locate reply message, sent in response to the {@link #LocateRequest}\n+   * message.\n    */\n   public static final byte LOCATE_REPLY = 4;\n \n@@ -104,8 +109,8 @@\n   public static final byte MESSAGE_ERROR = 6;\n \n   /**\n-   * The fragment messge, following the previous message that\n-   * has more fragments flag set. Added in GIOP 1.1\n+   * The fragment messge, following the previous message that has more fragments\n+   * flag set. Added in GIOP 1.1\n    */\n   public static final byte FRAGMENT = 7;\n \n@@ -117,12 +122,9 @@\n   /**\n    * The message type names.\n    */\n-  protected static String[] types =\n-    new String[]\n-    {\n-      \"Request\", \"Reply\", \"Cancel\", \"Locate request\", \"Locate reply\",\n-      \"Close connection\", \"Error\", \"Fragment\"\n-    };\n+  protected static String[] types = new String[] { \"Request\", \"Reply\",\n+    \"Cancel\", \"Locate request\", \"Locate reply\", \"Close connection\", \"Error\",\n+    \"Fragment\" };\n \n   /**\n    * The GIOP version. Initialised to 1.0 .\n@@ -154,7 +156,7 @@ public MessageHeader()\n \n   /**\n    * Create an empty message header, corresponding the given version.\n-   *\n+   * \n    * @param major the major message header version.\n    * @param minor the minot message header version.\n    */\n@@ -164,19 +166,27 @@ public MessageHeader(int major, int minor)\n   }\n \n   /**\n-   * Checks if the message is encoded in the Big Endian, most significant\n-   * byte first.\n+   * Checks if the message is encoded in the Big Endian, most significant byte\n+   * first.\n    */\n   public boolean isBigEndian()\n   {\n     return (flags & 0x1) == 0;\n   }\n \n+  /**\n+   * Checks if the message is partial, and more subsequent fragments follow.\n+   */\n+  public boolean moreFragmentsFollow()\n+  {\n+    return (flags & 0x2) != 0;\n+  }\n+\n   /**\n    * Set the encoding to use.\n-   *\n-   * @param use_big_endian if true (default), the Big Endian\n-   * encoding is used. If false, the Little Endian encoding is used.\n+   * \n+   * @param use_big_endian if true (default), the Big Endian encoding is used.\n+   * If false, the Little Endian encoding is used.\n    */\n   public void setBigEndian(boolean use_big_endian)\n   {\n@@ -196,16 +206,16 @@ public int getHeaderSize()\n \n   /**\n    * Get the message type as string.\n-   *\n+   * \n    * @param type the message type as int (the field {@link message_type}).\n-   *\n+   * \n    * @return the message type as string.\n    */\n   public String getTypeString(int type)\n   {\n     try\n       {\n-        return types [ type ];\n+        return types[type];\n       }\n     catch (ArrayIndexOutOfBoundsException ex)\n       {\n@@ -215,10 +225,10 @@ public String getTypeString(int type)\n \n   /**\n    * Creates reply header, matching the message header version number.\n-   *\n+   * \n    * @return one of {@link gnu.CORBA.GIOP.v1_0.ReplyHeader},\n-   * {@link gnu.CORBA.GIOP.v1_2.ReplyHeader}, etc - depending on\n-   * the version number in this header.\n+   * {@link gnu.CORBA.GIOP.v1_2.ReplyHeader}, etc - depending on the version\n+   * number in this header.\n    */\n   public ReplyHeader create_reply_header()\n   {\n@@ -230,10 +240,10 @@ public ReplyHeader create_reply_header()\n \n   /**\n    * Creates request header, matching the message header version number.\n-   *\n+   * \n    * @return one of {@link gnu.CORBA.GIOP.v1_0.RequestHeader},\n-   * {@link gnu.CORBA.GIOP.v1_2.RequestHeader}, etc - depending on\n-   * the version number in this header.\n+   * {@link gnu.CORBA.GIOP.v1_2.RequestHeader}, etc - depending on the version\n+   * number in this header.\n    */\n   public RequestHeader create_request_header()\n   {\n@@ -261,24 +271,28 @@ public ErrorMessage create_error_message()\n \n   /**\n    * Read the header from the stream.\n-   *\n+   * \n    * @param istream a stream to read from.\n-   *\n+   * \n    * @throws MARSHAL if this is not a GIOP 1.0 header.\n    */\n   public void read(java.io.InputStream istream)\n-            throws MARSHAL\n+    throws MARSHAL\n   {\n     try\n       {\n-        byte[] xMagic = new byte[ MAGIC.length ];\n+        byte[] xMagic = new byte[MAGIC.length];\n         istream.read(xMagic);\n         if (!Arrays.equals(xMagic, MAGIC))\n-          throw new MARSHAL(\"Not a GIOP message\");\n+          {\n+            MARSHAL m = new MARSHAL(\"Not a GIOP message\");\n+            m.minor = Minor.Giop;\n+            throw m;\n+          }\n \n         version = Version.read_version(istream);\n \n-        abstractDataInputStream din;\n+        AbstractDataInput din;\n \n         flags = (byte) istream.read();\n \n@@ -295,33 +309,34 @@ public void read(java.io.InputStream istream)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Header;\n         t.initCause(ex);\n         throw t;\n       }\n   }\n \n   /**\n    * Get the short string summary of the message.\n-   *\n+   * \n    * @return a short message summary.\n    */\n   public String toString()\n   {\n-    return \"GIOP \" + version + \", \" + (isBigEndian() ? \"Big\" : \"Little\") +\n-           \" endian, \" + getTypeString(message_type) + \", \" + message_size +\n-           \" bytes. \";\n+    return \"GIOP \" + version + \", \" + (isBigEndian() ? \"Big\" : \"Little\")\n+      + \" endian, \" + getTypeString(message_type) + \", \" + message_size\n+      + \" bytes. \";\n   }\n \n   /**\n    * Write the header to stream.\n-   *\n+   * \n    * @param out a stream to write into.\n    */\n   public void write(java.io.OutputStream out)\n   {\n     try\n       {\n-        abstractDataOutputStream dout;\n+        AbstractDataOutput dout;\n \n         if (isBigEndian())\n           dout = new BigEndianOutputStream(out);\n@@ -333,18 +348,99 @@ public void write(java.io.OutputStream out)\n \n         // Write version number.\n         version.write((OutputStream) dout);\n-\n         dout.write(flags);\n-\n         dout.write(message_type);\n-\n         dout.writeInt(message_size);\n       }\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Header;\n         t.initCause(ex);\n         throw t;\n       }\n   }\n+\n+  /**\n+   * Read data, followed by the message header. Handle fragmented messages.\n+   * \n+   * @param source the data source to read from.\n+   * @param service the socket on that the time outs are set. Can be null (no\n+   * timeouts are set).\n+   * @param to_read the timeout while reading the message.\n+   * @param to_pause the timeout for pauses between the message parts.\n+   */\n+  public byte[] readMessage(InputStream source, Socket service, int to_read,\n+    int to_pause)\n+  {\n+    try\n+      {\n+        byte[] r = new byte[message_size];\n+\n+        int n = 0;\n+        if (service != null)\n+          service.setSoTimeout(to_read);\n+\n+        reading: while (n < r.length)\n+          {\n+            n += source.read(r, n, r.length - n);\n+          }\n+        if (service != null)\n+          service.setSoTimeout(to_pause);\n+\n+        // Read the message remainder if the message is fragmented.\n+        if (moreFragmentsFollow())\n+          {\n+            ByteArrayOutputStream buffer = new ByteArrayOutputStream(\n+              2 * r.length);\n+            buffer.write(r);\n+\n+            if (r.length < 10)\n+              // Increase the buffer size if the default value (size of the\n+              // previous message) is really too small.\n+              r = new byte[1024];\n+\n+            MessageHeader h2 = new MessageHeader();\n+\n+            do\n+              {\n+                h2.read(source);\n+\n+                int dn;\n+\n+                n = 0;\n+                reading: while (n < h2.message_size)\n+                  {\n+                    dn = source.read(r, 0, h2.message_size - n);\n+\n+                    if (n == 0 && service != null)\n+                      service.setSoTimeout(to_read);\n+\n+                    if (n == 0 && version.since_inclusive(1, 2))\n+                      {\n+                        // Skip the four byte request id.\n+                        buffer.write(r, 4, dn - 4);\n+                      }\n+                    else\n+                      buffer.write(r, 0, dn);\n+                    n = +dn;\n+                  }\n+\n+                if (service != null)\n+                  service.setSoTimeout(to_pause);\n+              }\n+            while (h2.moreFragmentsFollow());\n+            return buffer.toByteArray();\n+          }\n+        else\n+          return r;\n+      }\n+    catch (IOException ioex)\n+      {\n+        MARSHAL m = new MARSHAL(\"Unable to read the message continuation.\");\n+        m.minor = Minor.Header;\n+        m.initCause(ioex);\n+        throw m;\n+      }\n+  }\n }\n\\ No newline at end of file"}, {"sha": "d14482903313bb9efafdcc9bb5377d7fce5c2070", "filename": "libjava/classpath/gnu/CORBA/GIOP/ReplyHeader.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,16 +38,16 @@\n \n package gnu.CORBA.GIOP;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n \n /**\n  * The header of the standard reply.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public abstract class ReplyHeader\n-  extends contextSupportingHeader\n+  extends ContextHandler\n {\n   /**\n    * Reply status, if no exception occured.\n@@ -121,7 +121,7 @@ public String getStatusString()\n    *\n    * @param in a stream to read from.\n    */\n-  public abstract void read(cdrInput in);\n+  public abstract void read(AbstractCdrInput in);\n \n   /**\n    * Returns a short string representation.\n@@ -141,5 +141,5 @@ public String toString()\n    *\n    * @param out a stream to write into.\n    */\n-  public abstract void write(cdrOutput out);\n+  public abstract void write(AbstractCdrOutput out);\n }"}, {"sha": "3cfadfd7867198a0d4dbd2cef201683fbc238196", "filename": "libjava/classpath/gnu/CORBA/GIOP/RequestHeader.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,8 +38,8 @@\n \n package gnu.CORBA.GIOP;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n \n import org.omg.CORBA.portable.IDLEntity;\n \n@@ -49,7 +49,7 @@\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public abstract class RequestHeader\n-  extends contextSupportingHeader\n+  extends ContextHandler\n   implements IDLEntity\n {\n   /**\n@@ -137,7 +137,7 @@ public String bytes(byte[] array)\n    *\n    * @param in a stream to read from.\n    */\n-  public abstract void read(cdrInput in);\n+  public abstract void read(AbstractCdrInput in);\n \n   /**\n    * Return a string representation.\n@@ -149,6 +149,6 @@ public String bytes(byte[] array)\n    *\n    * @param out a stream to write into.\n    */\n-  public abstract void write(cdrOutput out);\n+  public abstract void write(AbstractCdrOutput out);\n \n }"}, {"sha": "78519510cb75b719de6400df95f90fe3b0775122", "filename": "libjava/classpath/gnu/CORBA/GIOP/ServiceContext.java", "status": "modified", "additions": 70, "deletions": 18, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,8 +38,8 @@\n \n package gnu.CORBA.GIOP;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n \n import org.omg.CORBA.BAD_INV_ORDER;\n import org.omg.CORBA.BAD_PARAM;\n@@ -48,7 +48,7 @@\n \n /**\n  * Contains the ORB service data being passed.\n- *\n+ * \n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public class ServiceContext\n@@ -59,6 +59,50 @@\n    */\n   private static final long serialVersionUID = 1;\n \n+  /* Standard values for the context_id. */\n+  public static final int TransactionService = 0;\n+\n+  /**\n+   * Defines code sets, used to encode wide and narrow characters. Required for\n+   * messages with data structures, involving wide characters.\n+   */\n+  public static final int CodeSets = 1;\n+\n+  public static final int ChainBypassCheck = 2;\n+\n+  public static final int ChainBypassInfo = 3;\n+\n+  public static final int LogicalThreadId = 4;\n+\n+  public static final int BI_DIR_IIOP = 5;\n+\n+  public static final int SendingContextRunTime = 6;\n+\n+  public static final int INVOCATION_POLICIES = 7;\n+\n+  public static final int FORWARDED_IDENTITY = 8;\n+\n+  /**\n+   * Contains exception details if exception being transferred is other than\n+   * System or User exception. javax.rmi uses this context to transfer arbitrary\n+   * java exceptions as CORBA value types.\n+   */\n+  public static final int UnknownExceptionInfo = 9;\n+\n+  public static final int RTCorbaPriority = 10;\n+\n+  public static final int RTCorbaPriorityRange = 11;\n+\n+  public static final int FT_GROUP_VERSION = 12;\n+\n+  public static final int FT_REQUEST = 13;\n+\n+  public static final int ExceptionDetailMessage = 14;\n+\n+  public static final int SecurityAttributeService = 15;\n+\n+  public static final int ActivityService = 16;\n+\n   /**\n    * The context id (for instance, 0x1 for code sets context). At the moment of\n    * writing, the OMG defines 16 standard values and provides rules to register\n@@ -90,18 +134,18 @@ public ServiceContext(org.omg.IOP.ServiceContext from)\n \n   /**\n    * Read the context values from the stream.\n-   *\n+   * \n    * @param istream a stream to read from.\n    */\n-  public static ServiceContext read(cdrInput istream)\n+  public static ServiceContext read(AbstractCdrInput istream)\n   {\n     int id = istream.read_ulong();\n \n     switch (id)\n       {\n-        case cxCodeSet.ID:\n+        case CodeSetServiceContext.ID:\n \n-          cxCodeSet codeset = new cxCodeSet();\n+          CodeSetServiceContext codeset = new CodeSetServiceContext();\n           codeset.readContext(istream);\n           return codeset;\n \n@@ -117,7 +161,7 @@ public static ServiceContext read(cdrInput istream)\n   /**\n    * Read a sequence of contexts from the input stream.\n    */\n-  public static ServiceContext[] readSequence(cdrInput istream)\n+  public static ServiceContext[] readSequence(AbstractCdrInput istream)\n   {\n     int size = istream.read_long();\n     ServiceContext[] value = new gnu.CORBA.GIOP.ServiceContext[size];\n@@ -128,10 +172,10 @@ public static ServiceContext[] readSequence(cdrInput istream)\n \n   /**\n    * Write the context values into the stream.\n-   *\n+   * \n    * @param ostream a stream to write the data to.\n    */\n-  public void write(cdrOutput ostream)\n+  public void write(AbstractCdrOutput ostream)\n   {\n     ostream.write_ulong(context_id);\n     ostream.write_sequence(context_data);\n@@ -140,7 +184,7 @@ public void write(cdrOutput ostream)\n   /**\n    * Write the sequence of contexts into the input stream.\n    */\n-  public static void writeSequence(cdrOutput ostream, ServiceContext[] value)\n+  public static void writeSequence(AbstractCdrOutput ostream, ServiceContext[] value)\n   {\n     ostream.write_long(value.length);\n     for (int i = 0; i < value.length; i++)\n@@ -172,8 +216,7 @@ public static void add(org.omg.IOP.ServiceContext[] cx,\n         // Replace context.\n         if (!replace)\n           throw new BAD_INV_ORDER(\"Repetetive setting of the context \"\n-                                  + service_context.context_id, 15,\n-            CompletionStatus.COMPLETED_NO);\n+            + service_context.context_id, 15, CompletionStatus.COMPLETED_NO);\n         else\n           cx[exists] = service_context;\n       }\n@@ -205,15 +248,13 @@ public static ServiceContext[] add(ServiceContext[] cx,\n         // Replace context.\n         if (!replace)\n           throw new BAD_INV_ORDER(\"Repetetive setting of the context \"\n-                                  + service_context.context_id, 15,\n-            CompletionStatus.COMPLETED_NO);\n+            + service_context.context_id, 15, CompletionStatus.COMPLETED_NO);\n         else\n           cx[exists] = new ServiceContext(service_context);\n         return cx;\n       }\n   }\n \n-\n   /**\n    * Find context with the given name in the context array.\n    */\n@@ -227,8 +268,8 @@ public static org.omg.IOP.ServiceContext findContext(int ctx_name,\n   }\n \n   /**\n-   * Find context with the given name in the context array,\n-   * converting into org.omg.IOP.ServiceContext.\n+   * Find context with the given name in the context array, converting into\n+   * org.omg.IOP.ServiceContext.\n    */\n   public static org.omg.IOP.ServiceContext findContext(int ctx_name,\n     ServiceContext[] cx)\n@@ -239,6 +280,17 @@ public static org.omg.IOP.ServiceContext findContext(int ctx_name,\n     throw new BAD_PARAM(\"No context with id \" + ctx_name);\n   }\n \n+  /**\n+   * Find context with the given name in the context array without conversions.\n+   */\n+  public static ServiceContext find(int ctx_name, ServiceContext[] cx)\n+  {\n+    for (int i = 0; i < cx.length; i++)\n+      if (cx[i].context_id == ctx_name)\n+        return cx[i];\n+    return null;\n+  }\n+\n   /**\n    * Return a string representation.\n    */"}, {"sha": "c085c17fb9b73c9fe14c236d01ef929699eb6056", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/ReplyHeader.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,10 +38,10 @@\n \n package gnu.CORBA.GIOP.v1_0;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.GIOP.ServiceContext;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n /**\n  * The header of the standard reply.\n@@ -98,13 +98,13 @@ public String contexts()\n    * @param in a stream to read from.\n    */\n \n-  public void read(cdrInput in)\n+  public void read(AbstractCdrInput in)\n   {\n     service_context = ServiceContext.readSequence(in);\n     request_id = in.read_ulong();\n     reply_status = in.read_ulong();\n \n-    in.setCodeSet(cxCodeSet.find(service_context));\n+    in.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n \n   /**\n@@ -128,12 +128,12 @@ public String toString()\n    *\n    * @param out a stream to write into.\n    */\n-  public void write(cdrOutput out)\n+  public void write(AbstractCdrOutput out)\n   {\n     ServiceContext.writeSequence(out, service_context);\n     out.write_ulong(request_id);\n     out.write_ulong(reply_status);\n \n-    out.setCodeSet(cxCodeSet.find(service_context));\n+    out.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n }"}, {"sha": "5cf723cbc4299dcd471ac84ba0820c3d135c9805", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/RequestHeader.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,10 +38,10 @@\n \n package gnu.CORBA.GIOP.v1_0;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.GIOP.ServiceContext;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n import org.omg.CORBA.portable.IDLEntity;\n \n@@ -112,7 +112,7 @@ public String contexts()\n    *\n    * @param in a stream to read from.\n    */\n-  public void read(cdrInput in)\n+  public void read(AbstractCdrInput in)\n   {\n     service_context = ServiceContext.readSequence(in);\n     request_id = in.read_ulong();\n@@ -121,7 +121,7 @@ public void read(cdrInput in)\n     operation = in.read_string();\n     requesting_principal = in.read_sequence();\n \n-    in.setCodeSet(cxCodeSet.find(service_context));\n+    in.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n \n   /**\n@@ -143,7 +143,7 @@ public String toString()\n    *\n    * @param out a stream to write into.\n    */\n-  public void write(cdrOutput out)\n+  public void write(AbstractCdrOutput out)\n   {\n     ServiceContext.writeSequence(out, service_context);\n     out.write_ulong(request_id);\n@@ -152,6 +152,6 @@ public void write(cdrOutput out)\n     out.write_string(operation);\n     out.write_sequence(requesting_principal);\n \n-    out.setCodeSet(cxCodeSet.find(service_context));\n+    out.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n }"}, {"sha": "3fc1541d9ab8ca95a05efc77d3d08bd69cbfbc2a", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_2/ReplyHeader.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FReplyHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FReplyHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FReplyHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,10 +38,10 @@\n \n package gnu.CORBA.GIOP.v1_2;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.GIOP.ServiceContext;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n /**\n  * GIOP 1.2 reply header.\n@@ -56,7 +56,7 @@\n    */\n   public ReplyHeader()\n   {\n-    service_context = new ServiceContext[] { cxCodeSet.STANDARD };\n+    service_context = new ServiceContext[] { CodeSetServiceContext.STANDARD };\n   }\n \n   /**\n@@ -89,13 +89,13 @@ public String getStatusString()\n    *\n    * @param in a stream to read from.\n    */\n-  public void read(cdrInput in)\n+  public void read(AbstractCdrInput in)\n   {\n     request_id = in.read_ulong();\n     reply_status = in.read_ulong();\n     service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in);\n \n-    in.setCodeSet(cxCodeSet.find(service_context));\n+    in.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n \n   /**\n@@ -107,12 +107,12 @@ public void read(cdrInput in)\n    *\n    * @param out a stream to write into.\n    */\n-  public void write(cdrOutput out)\n+  public void write(AbstractCdrOutput out)\n   {\n     out.write_ulong(request_id);\n     out.write_ulong(reply_status);\n     gnu.CORBA.GIOP.ServiceContext.writeSequence(out, service_context);\n \n-    out.setCodeSet(cxCodeSet.find(service_context));\n+    out.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n }"}, {"sha": "6b37b6c676cc4a0e1317982442f3c1d3cc281c04", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_2/RequestHeader.java", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_2%2FRequestHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,10 +38,11 @@\n \n package gnu.CORBA.GIOP.v1_2;\n \n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.Minor;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.GIOP.ServiceContext;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n import java.io.IOException;\n \n@@ -58,6 +59,11 @@\n public class RequestHeader\n   extends gnu.CORBA.GIOP.v1_0.RequestHeader\n {\n+  /** \n+   * Use serialVersionUID for interoperability. \n+   */\n+  private static final long serialVersionUID = 1;\n+  \n   /**\n    * Indicates that the object is addressed by the object key.\n    */\n@@ -89,7 +95,7 @@\n    */\n   public RequestHeader()\n   {\n-    service_context = new ServiceContext[] { cxCodeSet.STANDARD };\n+    service_context = new ServiceContext[] { CodeSetServiceContext.STANDARD };\n   }\n \n   /**\n@@ -123,7 +129,7 @@ public boolean isResponseExpected()\n    *\n    * @param in a stream to read from.\n    */\n-  public void read(cdrInput in)\n+  public void read(AbstractCdrInput in)\n   {\n     try\n       {\n@@ -150,20 +156,23 @@ public void read(cdrInput in)\n               throw new NO_IMPLEMENT(\"Object addressing by by IOR addressing info\");\n \n             default :\n-              throw new MARSHAL(\"Unknow addressing method in request, \" +\n+              MARSHAL m = new MARSHAL(\"Unknow addressing method in request, \" +\n                                 AddressingDisposition\n                                );\n+              m.minor = Minor.UnsupportedAddressing;\n+              throw m;\n           }\n \n         operation = in.read_string();\n         service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in);\n \n         // No requesting principal in this new format.\n-        in.setCodeSet(cxCodeSet.find(service_context));\n+        in.setCodeSet(CodeSetServiceContext.find(service_context));\n       }\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Header;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -186,7 +195,7 @@ public String toString()\n    *\n    * @param out a stream to write into.\n    */\n-  public void write(cdrOutput out)\n+  public void write(AbstractCdrOutput out)\n   {\n     out.write_ulong(request_id);\n \n@@ -208,6 +217,6 @@ public void write(cdrOutput out)\n     ServiceContext.writeSequence(out, service_context);\n \n     // No requesting principal in this new format.\n-    out.setCodeSet(cxCodeSet.find(service_context));\n+    out.setCodeSet(CodeSetServiceContext.find(service_context));\n   }\n }"}, {"sha": "ffba69d79f6f40ede2876310475f73b766ad24ce", "filename": "libjava/classpath/gnu/CORBA/GeneralHolder.java", "status": "renamed", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGeneralHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGeneralHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGeneralHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,8 +38,8 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.CDR.cdrBufInput;\n-import gnu.CORBA.CDR.cdrBufOutput;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n \n import org.omg.CORBA.BAD_OPERATION;\n import org.omg.CORBA.MARSHAL;\n@@ -60,18 +60,18 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class universalHolder\n+public class GeneralHolder\n   implements Streamable\n {\n   /**\n    * The binary data, stored inside this holder.\n    */\n-  private cdrBufOutput value = new cdrBufOutput();\n+  private BufferedCdrOutput value = new BufferedCdrOutput();\n \n   /**\n    * Create the universal holder that uses the given buffer to store the data.\n    */\n-  public universalHolder(cdrBufOutput buffer)\n+  public GeneralHolder(BufferedCdrOutput buffer)\n   {\n     value = buffer;\n   }\n@@ -89,9 +89,9 @@ public void _read(InputStream input)\n   {\n     try\n       {\n-        if (input instanceof cdrBufInput)\n+        if (input instanceof BufferredCdrInput)\n           {\n-            cdrBufInput b = (cdrBufInput) input;\n+            BufferredCdrInput b = (BufferredCdrInput) input;\n             value.write(b.buffer.getBuffer());\n           }\n         else\n@@ -110,6 +110,7 @@ public void _read(InputStream input)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Any;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -122,7 +123,9 @@ public void _read(InputStream input)\n    */\n   public TypeCode _type()\n   {\n-    throw new BAD_OPERATION();\n+    BAD_OPERATION bad = new BAD_OPERATION();\n+    bad.minor = Minor.Inappropriate;\n+    throw bad;\n   }\n \n   /**\n@@ -142,6 +145,7 @@ public void _write(OutputStream output)\n     catch (IOException ex)\n       {\n         MARSHAL t = new MARSHAL();\n+        t.minor = Minor.Any;\n         t.initCause(ex);\n         throw t;\n       }\n@@ -158,13 +162,13 @@ InputStream getInputStream()\n   /**\n    * Clone.\n    */\n-  public universalHolder Clone()\n+  public GeneralHolder Clone()\n   {\n     try\n       {\n-        cdrBufOutput nb = new cdrBufOutput(value.buffer.size());\n+        BufferedCdrOutput nb = new BufferedCdrOutput(value.buffer.size());\n         value.buffer.writeTo(nb);\n-        return new universalHolder(nb);\n+        return new GeneralHolder(nb);\n       }\n     catch (IOException ex)\n       {", "previous_filename": "libjava/classpath/gnu/CORBA/universalHolder.java"}, {"sha": "edd4d2cf7a4f00bab42d2fc26623fcd314256719", "filename": "libjava/classpath/gnu/CORBA/HolderLocator.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FHolderLocator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FHolderLocator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FHolderLocator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* holderFactory.java --\n+/* HolderLocator.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -75,7 +75,7 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class holderFactory\n+public class HolderLocator\n {\n   /**\n    * The array, sufficiently large to use any {@link TCKind}._tk* constant as", "previous_filename": "libjava/classpath/gnu/CORBA/holderFactory.java"}, {"sha": "5d6d3152f8f2eb6a1d9cc389a508e467b8603243", "filename": "libjava/classpath/gnu/CORBA/IOR.java", "status": "modified", "additions": 73, "deletions": 23, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,12 +38,12 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.CDR.cdrBufInput;\n-import gnu.CORBA.CDR.cdrBufOutput;\n-import gnu.CORBA.CDR.cdrInput;\n-import gnu.CORBA.CDR.cdrOutput;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.GIOP.CharSets_OSF;\n-import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.CompletionStatus;\n@@ -59,6 +59,8 @@\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.zip.Adler32;\n \n /**\n  * The implementaton of the Interoperable Object Reference (IOR). IOR can be\n@@ -174,16 +176,16 @@ private String name(int set)\n      * The negotiated coding result for this IOR. Saves time, requred for\n      * negotiation computations.\n      */\n-    public cxCodeSet negotiated;\n+    public CodeSetServiceContext negotiated;\n \n     /**\n      * Read the code set profile information from the given input stream.\n      *\n      * @param profile a stream to read from.\n      */\n-    public void read(cdrInput profile)\n+    public void read(AbstractCdrInput profile)\n     {\n-      cdrBufInput encapsulation = profile.read_encapsulation();\n+      BufferredCdrInput encapsulation = profile.read_encapsulation();\n       narrow.read(encapsulation);\n       wide.read(encapsulation);\n     }\n@@ -201,9 +203,9 @@ public String toString()\n      *\n      * @param profile a stream to write into.\n      */\n-    public void write(cdrOutput profile)\n+    public void write(AbstractCdrOutput profile)\n     {\n-      cdrOutput encapsulation = profile.createEncapsulation();\n+      AbstractCdrOutput encapsulation = profile.createEncapsulation();\n       narrow.write(encapsulation);\n       wide.write(encapsulation);\n       try\n@@ -274,13 +276,13 @@ public String toString()\n     /**\n      * Write the internet profile (except the heading tag.\n      */\n-    public void write(cdrOutput out)\n+    public void write(AbstractCdrOutput out)\n     {\n       try\n         {\n           // Need to write the Internet profile into the separate\n           // stream as we must know the size in advance.\n-          cdrOutput b = out.createEncapsulation();\n+          AbstractCdrOutput b = out.createEncapsulation();\n \n           version.write(b);\n           b.write_string(host);\n@@ -310,6 +312,7 @@ public void write(cdrOutput out)\n       catch (Exception e)\n         {\n           MARSHAL m = new MARSHAL(\"Unable to write Internet profile.\");\n+          m.minor = Minor.IOR;\n           m.initCause(e);\n           throw m;\n         }\n@@ -392,7 +395,7 @@ public static IOR parse(String stringified_reference)\n             buf.write(cx);\n           }\n \n-        cdrBufInput cdr = new cdrBufInput(buf.toByteArray());\n+        BufferredCdrInput cdr = new BufferredCdrInput(buf.toByteArray());\n \n         r._read(cdr);\n         return r;\n@@ -411,7 +414,7 @@ public static IOR parse(String stringified_reference)\n    * @param c a stream to read from.\n    * @throws IOException if the stream throws it.\n    */\n-  public void _read(cdrInput c)\n+  public void _read(AbstractCdrInput c)\n     throws IOException, BAD_PARAM\n   {\n     int endian;\n@@ -433,13 +436,13 @@ public void _read(cdrInput c)\n    * If the stream contains a null value, the Id and Internet fields become\n    * equal to null. Otherwise Id contains some string (possibly empty).\n    *\n-   * Id is checked for null in cdrInput that then returns null instead of\n+   * Id is checked for null in AbstractCdrInput that then returns null instead of\n    * object.\n    *\n    * @param c a stream to read from.\n    * @throws IOException if the stream throws it.\n    */\n-  public void _read_no_endian(cdrInput c)\n+  public void _read_no_endian(AbstractCdrInput c)\n     throws IOException, BAD_PARAM\n   {\n     Id = c.read_string();\n@@ -456,7 +459,7 @@ public void _read_no_endian(cdrInput c)\n     for (int i = 0; i < n_profiles; i++)\n       {\n         int tag = c.read_long();\n-        cdrBufInput profile = c.read_encapsulation();\n+        BufferredCdrInput profile = c.read_encapsulation();\n \n         if (tag == Internet_profile.TAG_INTERNET_IOP)\n           {\n@@ -515,7 +518,7 @@ public void _read_no_endian(cdrInput c)\n    * Write this IOR record to the provided CDR stream. This procedure writes the\n    * zero (Big Endian) marker first.\n    */\n-  public void _write(cdrOutput out)\n+  public void _write(AbstractCdrOutput out)\n   {\n     // Always use Big Endian.\n     out.write(0);\n@@ -528,7 +531,7 @@ public void _write(cdrOutput out)\n    * The null value is written as defined in OMG specification (zero length\n    * string, followed by an empty set of profiles).\n    */\n-  public static void write_null(cdrOutput out)\n+  public static void write_null(AbstractCdrOutput out)\n   {\n     // Empty Id string.\n     out.write_string(\"\");\n@@ -541,7 +544,7 @@ public static void write_null(cdrOutput out)\n    * Write this IOR record to the provided CDR stream. The procedure writed data\n    * in Big Endian, but does NOT add any endian marker to the beginning.\n    */\n-  public void _write_no_endian(cdrOutput out)\n+  public void _write_no_endian(AbstractCdrOutput out)\n   {\n     // Write repository id.\n     out.write_string(Id);\n@@ -595,7 +598,7 @@ public String toString()\n    */\n   public String toStringifiedReference()\n   {\n-    cdrBufOutput out = new cdrBufOutput();\n+    BufferedCdrOutput out = new BufferedCdrOutput();\n \n     _write(out);\n \n@@ -675,7 +678,7 @@ private static void addComponentTo(TaggedProfile profile,\n         TaggedComponent[] present;\n         if (profile.profile_data.length > 0)\n           {\n-            cdrBufInput in = new cdrBufInput(profile.profile_data);\n+            BufferredCdrInput in = new BufferredCdrInput(profile.profile_data);\n \n             present = new TaggedComponent[in.read_long()];\n \n@@ -687,7 +690,7 @@ private static void addComponentTo(TaggedProfile profile,\n         else\n           present = new TaggedComponent[0];\n \n-        cdrBufOutput out = new cdrBufOutput(profile.profile_data.length\n+        BufferedCdrOutput out = new BufferedCdrOutput(profile.profile_data.length\n                                             + component.component_data.length\n                                             + 8);\n \n@@ -715,4 +718,51 @@ private static void addComponentTo(TaggedProfile profile,\n       // The future supported tagged profiles should be added here.\n       throw new BAD_PARAM(\"Unsupported profile type \" + profile.tag);\n   }\n+  \n+  /**\n+   * Checks for equality.\n+   */\n+  public boolean equals(Object x)\n+  {\n+    if (x instanceof IOR)\n+      {\n+        boolean keys;\n+        boolean hosts = true;\n+\n+        IOR other = (IOR) x;\n+        \n+        if (Internet==null || other.Internet==null)\n+          return Internet == other.Internet;\n+        \n+        if (key != null && other.key != null)\n+          keys = Arrays.equals(key, other.key);\n+        else\n+          keys = key == other.key;\n+\n+        if (Internet != null && Internet.host != null)\n+          if (other.Internet != null && other.Internet.host != null)\n+            hosts = other.Internet.host.equals(Internet.host);\n+\n+        return keys & hosts && Internet.port==other.Internet.port;\n+      }\n+    else\n+      return false;\n+  }\n+  \n+  /**\n+   * Get the hashcode of this IOR.\n+   */\n+  public int hashCode()\n+  {\n+    Adler32 adler = new Adler32();\n+    if (key != null)\n+      adler.update(key);\n+    if (Internet != null)\n+      {\n+        if (Internet.host != null)\n+          adler.update(Internet.host.getBytes());\n+        adler.update(Internet.port);\n+      }\n+    return (int) adler.getValue();\n+  }\n }\n\\ No newline at end of file"}, {"sha": "2b77de58e0e862b869c519b1f960b106a2100177", "filename": "libjava/classpath/gnu/CORBA/Interceptor/IORInterceptors.java", "status": "modified", "additions": 82, "deletions": 1, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,16 +38,20 @@\n \n package gnu.CORBA.Interceptor;\n \n+import org.omg.CORBA.OBJ_ADAPTER;\n+import org.omg.CORBA.OMGVMCID;\n import org.omg.PortableInterceptor.IORInfo;\n import org.omg.PortableInterceptor.IORInterceptor;\n import org.omg.PortableInterceptor.IORInterceptorOperations;\n+import org.omg.PortableInterceptor.IORInterceptor_3_0Operations;\n+import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n \n /**\n  * A block of the all registered IOR interceptors.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class IORInterceptors implements IORInterceptorOperations\n+public class IORInterceptors implements IORInterceptor_3_0Operations\n {\n   /**\n    * The array of all registered IOR interceptors.\n@@ -106,4 +110,81 @@ public String name()\n   {\n     return getClass().getName();\n   }\n+\n+  /**\n+   * Call this method for all registered CORBA 3.0 interceptors.\n+   */\n+  public void adapter_manager_state_changed(int adapterManagerId, short adapterState)\n+  {\n+    for (int i = 0; i < interceptors.length; i++)\n+      {\n+        try\n+          {\n+            if (interceptors[i] instanceof IORInterceptor_3_0Operations)\n+              {\n+                ((IORInterceptor_3_0Operations) interceptors[i]).\n+                  adapter_manager_state_changed(adapterManagerId, adapterState);\n+              }\n+          }\n+        catch (Exception exc)\n+          {\n+            OBJ_ADAPTER oa = new OBJ_ADAPTER(\"components_established failed\");\n+            oa.initCause(exc);\n+            oa.minor = 6 | OMGVMCID.value;\n+            throw oa;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Call this method for all registered CORBA 3.0 interceptors.\n+   */\n+  public void adapter_state_changed(ObjectReferenceTemplate[] adapters, short adaptersState)\n+  {\n+    for (int i = 0; i < interceptors.length; i++)\n+      {\n+        try\n+          {\n+            if (interceptors[i] instanceof IORInterceptor_3_0Operations)\n+              {\n+                ((IORInterceptor_3_0Operations) interceptors[i]).\n+                  adapter_state_changed(adapters, adaptersState);\n+              }\n+          }\n+        catch (Exception exc)\n+          {\n+            OBJ_ADAPTER oa = new OBJ_ADAPTER(\"components_established failed\");\n+            oa.initCause(exc);\n+            oa.minor = 6 | OMGVMCID.value;\n+            throw oa;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Call this method for all registered CORBA 3.0 interceptors.\n+   * \n+   * @throws OBJ_ADAPTER minor 6 on any failure (as defined by OMG specs).\n+   */\n+  public void components_established(IORInfo info)\n+  {\n+    for (int i = 0; i < interceptors.length; i++)\n+      {\n+        try\n+          {\n+            if (interceptors[i] instanceof IORInterceptor_3_0Operations)\n+              {\n+                ((IORInterceptor_3_0Operations) interceptors[i]).\n+                  components_established(info);\n+              }\n+          }\n+        catch (Exception exc)\n+          {\n+            OBJ_ADAPTER oa = new OBJ_ADAPTER(\"components_established failed\");\n+            oa.initCause(exc);\n+            oa.minor = 6 | OMGVMCID.value;\n+            throw oa;\n+          }\n+      }\n+  }\n }\n\\ No newline at end of file"}, {"sha": "4bb895bb376333d2693743fcccfebd8e9a510259", "filename": "libjava/classpath/gnu/CORBA/Interceptor/Registrator.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -39,6 +39,7 @@\n package gnu.CORBA.Interceptor;\n \n import gnu.CORBA.Poa.ORB_1_4;\n+import gnu.CORBA.ObjectCreator;\n import gnu.CORBA.gnuCodecFactory;\n \n import org.omg.CORBA.BAD_INV_ORDER;\n@@ -87,7 +88,7 @@ public class Registrator extends LocalObject implements ORBInitInfo\n   /**\n    * The agreed properties prefix.\n    */\n-  public final static String m_prefix =\n+  public static final String m_prefix =\n     \"org.omg.PortableInterceptor.ORBInitializerClass.\";\n \n   /**\n@@ -182,7 +183,8 @@ private void checkProperties(Properties props)\n                 try\n                   {\n                     String cn = sk.substring(m_prefix.length());\n-                    Class iClass = Class.forName(cn);\n+                    Class iClass = ObjectCreator.forName(cn);\n+                    \n                     ORBInitializer initializer =\n                       (ORBInitializer) iClass.newInstance();\n                     m_initializers.add(initializer);\n@@ -467,4 +469,4 @@ public boolean hasIorInterceptors()\n   {\n     return m_ior.size() > 0;\n   }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "a33afc3362e378bc748f5b43231c5ca3770db108", "filename": "libjava/classpath/gnu/CORBA/Interceptor/gnuIcCurrent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIcCurrent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIcCurrent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIcCurrent.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.CORBA.Interceptor;\n \n-import gnu.CORBA.CDR.cdrBufOutput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n import gnu.CORBA.Poa.ORB_1_4;\n \n import org.omg.CORBA.Any;\n@@ -198,7 +198,7 @@ public Any[] clone_slots()\n         Any[] r = get_slots();\n         Any[] copy = new Any[ r.length ];\n \n-        cdrBufOutput buf = new cdrBufOutput();\n+        BufferedCdrOutput buf = new BufferedCdrOutput();\n         buf.setOrb(orb);\n \n         for (int i = 0; i < copy.length; i++)"}, {"sha": "256a28cb5671cbd196b20c98a4d991a87ddc8367", "filename": "libjava/classpath/gnu/CORBA/Interceptor/gnuIorInfo.java", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIorInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIorInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuIorInfo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -40,12 +40,14 @@\n \n import gnu.CORBA.IOR;\n import gnu.CORBA.Poa.ORB_1_4;\n+import gnu.CORBA.Poa.gnuPOA;\n \n import org.omg.CORBA.LocalObject;\n import org.omg.CORBA.Policy;\n import org.omg.IOP.TaggedComponent;\n import org.omg.PortableInterceptor.IORInfo;\n-import org.omg.PortableServer.POA;\n+import org.omg.PortableInterceptor.ObjectReferenceFactory;\n+import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n \n /**\n  * Implements IORInfo.\n@@ -67,7 +69,7 @@ public class gnuIorInfo extends LocalObject implements IORInfo\n   /**\n    * The POA, to that IOR is related.\n    */\n-  public final POA poa;\n+  public final gnuPOA poa;\n \n   /**\n    * The IOR itself.\n@@ -77,7 +79,7 @@ public class gnuIorInfo extends LocalObject implements IORInfo\n   /**\n    * Create an instance.\n    */\n-  public gnuIorInfo(ORB_1_4 an_orb, POA a_poa, IOR an_ior)\n+  public gnuIorInfo(ORB_1_4 an_orb, gnuPOA a_poa, IOR an_ior)\n   {\n     orb = an_orb;\n     poa = a_poa;\n@@ -113,8 +115,42 @@ public Policy get_effective_policy(int policy_type)\n   /**\n    * Return the state of the object POA.\n    */\n-  short state()\n+  public short state()\n   {\n     return (short) poa.the_POAManager().get_state().value();\n   }\n+\n+  /**\n+   * Get the adapter template, associated with this poa.\n+   */\n+  public ObjectReferenceTemplate adapter_template()\n+  {\n+    return poa.getReferenceTemplate();\n+  }\n+\n+  /**\n+   * Get the object factory of the current POA.\n+   */\n+  public ObjectReferenceFactory current_factory()\n+  {\n+    return poa.getReferenceFactory();\n+  }\n+\n+  /**\n+   * Set the object factory of the current POA. \n+   */\n+  public void current_factory(ObjectReferenceFactory factory)\n+  {\n+    poa.setReferenceFactory(factory);\n+  }\n+\n+  /**\n+   * The method currently uses system identity hashcode that should be \n+   * different for each object.\n+   */\n+  public int manager_id()\n+  {\n+    // The System.identityHashCode is also called in gnuPoaManager.    \n+    return System.identityHashCode(poa.the_POAManager());\n+  }\n }\n\\ No newline at end of file"}, {"sha": "8d5c681e70528005bc4eb8a77e5ee7130a26967c", "filename": "libjava/classpath/gnu/CORBA/Interceptor/gnuServerRequestInfo.java", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuServerRequestInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuServerRequestInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FgnuServerRequestInfo.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -42,6 +42,7 @@\n import gnu.CORBA.GIOP.RequestHeader;\n import gnu.CORBA.ObjectCreator;\n import gnu.CORBA.Poa.gnuServantObject;\n+import gnu.CORBA.OrbFunctional;\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.gnuRequest;\n \n@@ -453,4 +454,23 @@ public Parameter[] arguments()\n       }\n     return p;\n   }\n+\n+  /** @inheritDoc */\n+  public String[] adapter_name()\n+  {\n+    return m_object.poa.getReferenceTemplate().adapter_name();\n+  }\n+\n+  /** @inheritDoc */\n+  public String orb_id()\n+  {\n+    return m_object.orb.orb_id;\n+  }\n+\n+  /** @inheritDoc */\n+  public String server_id()\n+  {\n+    return OrbFunctional.server_id;\n+  }\n+  \n }\n\\ No newline at end of file"}, {"sha": "27fb5de9a559bfb32771ac6f99c4478ade45be9c", "filename": "libjava/classpath/gnu/CORBA/IorDelegate.java", "status": "renamed", "additions": 34, "deletions": 58, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,9 +38,8 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.CDR.cdrBufInput;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n import gnu.CORBA.GIOP.ReplyHeader;\n-import gnu.CORBA.Poa.activeObjectMap;\n \n import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.Context;\n@@ -70,23 +69,12 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class IOR_Delegate extends Simple_delegate\n+public class IorDelegate extends SimpleDelegate\n {\n-  /**\n-   * True if the current IOR does not map into the local servant. If false, the\n-   * IOR is either local or should be checked.\n-   */\n-  boolean remote_ior;\n-\n-  /**\n-   * If not null, this field contains data about the local servant.\n-   */\n-  activeObjectMap.Obj local_ior;\n-\n   /**\n    * Contructs an instance of object using the given IOR.\n    */\n-  public IOR_Delegate(ORB an_orb, IOR an_ior)\n+  public IorDelegate(ORB an_orb, IOR an_ior)\n   {\n     super(an_orb, an_ior);\n   }\n@@ -168,37 +156,36 @@ protected gnuRequest getRequestInstance(org.omg.CORBA.Object target)\n    * request to the new direction. The ReplyHeader.LOCATION_FORWARD_PERM will\n    * cause additionally to remember the new location by this delegate, so\n    * subsequent calls will be immediately delivered to the new target.\n-   *\n+   * \n    * @param target the target object.\n    * @param output the output stream, previously returned by\n    * {@link #request(org.omg.CORBA.Object, String, boolean)}.\n-   *\n+   * \n    * @return the input stream, to read the response from or null for a one-way\n    * request.\n-   *\n+   * \n    * @throws SystemException if the SystemException has been thrown on the\n    * remote side (the exact type and the minor code matches the data of the\n    * remote exception that has been thrown).\n-   *\n+   * \n    * @throws org.omg.CORBA.portable.ApplicationException as specified.\n    * @throws org.omg.CORBA.portable.RemarshalException as specified.\n    */\n   public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n     throws ApplicationException, RemarshalException\n   {\n-    streamRequest request = (streamRequest) output;\n-    Forwardings:\n-    while (true)\n+    StreamBasedRequest request = (StreamBasedRequest) output;\n+    Forwardings: while (true)\n       {\n         try\n           {\n             if (request.response_expected)\n               {\n-                binaryReply response = request.request.submit();\n+                RawReply response = request.request.submit();\n \n                 // Read reply header.\n                 ReplyHeader rh = response.header.create_reply_header();\n-                cdrBufInput input = response.getStream();\n+                BufferredCdrInput input = response.getStream();\n                 input.setOrb(orb);\n                 rh.read(input);\n                 request.request.m_rph = rh;\n@@ -207,34 +194,33 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n \n                 switch (rh.reply_status)\n                   {\n-                    case ReplyHeader.NO_EXCEPTION :\n+                    case ReplyHeader.NO_EXCEPTION:\n                       if (request.request.m_interceptor != null)\n-                        request.request.m_interceptor.\n-                          receive_reply(request.request.m_info);\n+                        request.request.m_interceptor.receive_reply(request.request.m_info);\n                       if (response.header.version.since_inclusive(1, 2))\n                         input.align(8);\n                       return input;\n \n-                    case ReplyHeader.SYSTEM_EXCEPTION :\n+                    case ReplyHeader.SYSTEM_EXCEPTION:\n                       if (response.header.version.since_inclusive(1, 2))\n                         input.align(8);\n                       showException(request, input);\n \n-                      throw ObjectCreator.readSystemException(input);\n+                      throw ObjectCreator.readSystemException(input,\n+                        rh.service_context);\n \n-                    case ReplyHeader.USER_EXCEPTION :\n+                    case ReplyHeader.USER_EXCEPTION:\n                       if (response.header.version.since_inclusive(1, 2))\n                         input.align(8);\n                       showException(request, input);\n \n-                      throw new ApplicationException(request.\n-                        request.m_exception_id, input\n-                      );\n+                      throw new ApplicationException(\n+                        request.request.m_exception_id, input);\n \n-                    case ReplyHeader.LOCATION_FORWARD_PERM :\n+                    case ReplyHeader.LOCATION_FORWARD_PERM:\n                       moved_permanently = true;\n \n-                    case ReplyHeader.LOCATION_FORWARD :\n+                    case ReplyHeader.LOCATION_FORWARD:\n                       if (response.header.version.since_inclusive(1, 2))\n                         input.align(8);\n \n@@ -245,10 +231,8 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n                         }\n                       catch (IOException ex)\n                         {\n-                          MARSHAL t =\n-                            new MARSHAL(\"Cant read forwarding info\", 5102,\n-                              CompletionStatus.COMPLETED_NO\n-                            );\n+                          MARSHAL t = new MARSHAL(\"Cant read forwarding info\",\n+                            5102, CompletionStatus.COMPLETED_NO);\n                           t.initCause(ex);\n                           throw t;\n                         }\n@@ -277,8 +261,8 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n \n                       r.setIor(forwarded);\n \n-                      IOR_contructed_object it =\n-                        new IOR_contructed_object(orb, forwarded);\n+                      IorObject it = new IorObject(orb,\n+                        forwarded);\n \n                       r.m_target = it;\n \n@@ -298,11 +282,10 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n                             setIor(prev_ior);\n                         }\n \n-                    default :\n-                      throw new MARSHAL(\"Unknow reply status: \" +\n-                        rh.reply_status, 8000 + rh.reply_status,\n-                        CompletionStatus.COMPLETED_NO\n-                      );\n+                    default:\n+                      throw new MARSHAL(\"Unknow reply status: \"\n+                        + rh.reply_status, 8000 + rh.reply_status,\n+                        CompletionStatus.COMPLETED_NO);\n                   }\n               }\n             else\n@@ -314,8 +297,7 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n         catch (ForwardRequest forwarded)\n           {\n             ForwardRequest fw = forwarded;\n-            Forwarding2:\n-            while (true)\n+            Forwarding2: while (true)\n               {\n                 try\n                   {\n@@ -356,7 +338,7 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n   /**\n    * Show exception to interceptor.\n    */\n-  void showException(streamRequest request, cdrBufInput input)\n+  void showException(StreamBasedRequest request, BufferredCdrInput input)\n     throws ForwardRequest\n   {\n     input.mark(2048);\n@@ -408,9 +390,10 @@ public OutputStream request(org.omg.CORBA.Object target, String operation,\n     request.set_target(target);\n     request.setOperation(operation);\n \n-    streamRequest out = request.getParameterStream();\n+    StreamBasedRequest out = request.getParameterStream();\n     out.response_expected = response_expected;\n     request.setORB(orb);\n+    out.setOrb(orb);\n \n     return out;\n   }\n@@ -447,20 +430,13 @@ public void release(org.omg.CORBA.Object target)\n   public void setIor(IOR an_ior)\n   {\n     super.setIor(an_ior);\n-    remote_ior = false;\n-    local_ior = null;\n   }\n \n   /**\n    * Checks if the ior is local so far it is easy.\n    */\n   public boolean is_local(org.omg.CORBA.Object self)\n   {\n-    if (remote_ior)\n-      return false;\n-    else if (local_ior != null)\n-      return true;\n-    else\n-      return super.is_local(self);\n+    return false;\n   }\n }\n\\ No newline at end of file", "previous_filename": "libjava/classpath/gnu/CORBA/IOR_Delegate.java"}, {"sha": "02f5a495d496679df37b593a569157c8595929ed", "filename": "libjava/classpath/gnu/CORBA/IorObject.java", "status": "renamed", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorObject.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* IOR_contructed_object.java --\n+/* IorObject.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -46,8 +46,9 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class IOR_contructed_object\n+public class IorObject\n   extends ObjectImpl\n+  implements IorProvider\n {\n   /**\n    * The IOR, from which the object was constructed.\n@@ -64,10 +65,10 @@\n    *\n    * @param an_ior the IOR.\n    */\n-  public IOR_contructed_object(ORB orb, IOR an_ior)\n+  public IorObject(ORB orb, IOR an_ior)\n   {\n     ior = an_ior;\n-    _set_delegate(new IOR_Delegate(orb, ior));\n+    _set_delegate(new IorDelegate(orb, ior));\n     id = new String[] { ior.Id };\n   }\n \n@@ -76,12 +77,20 @@ public IOR_contructed_object(ORB orb, IOR an_ior)\n    *\n    * @param an_ior the IOR in the string form.\n    */\n-  public IOR_contructed_object(Functional_ORB orb, String an_ior)\n+  public IorObject(OrbFunctional orb, String an_ior)\n   {\n     ior = IOR.parse(an_ior);\n-    _set_delegate(new IOR_Delegate(orb, ior));\n+    _set_delegate(new IorDelegate(orb, ior));\n     id = new String[] { ior.Id };\n   }\n+  \n+  /**\n+   * Get the IOR of this object.\n+   */\n+  public IOR getIor()\n+  {\n+    return ior;\n+  }\n \n   public String[] _ids()\n   {", "previous_filename": "libjava/classpath/gnu/CORBA/IOR_contructed_object.java"}, {"sha": "875b5de1f7d63b28ac557714e9971d5100d15bff", "filename": "libjava/classpath/gnu/CORBA/IorProvider.java", "status": "renamed", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorProvider.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* IDLEntity.java --\n+/* IorProvider.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -35,16 +35,18 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n-package org.omg.CORBA;\n-\n-import java.io.Serializable;\n+package gnu.CORBA;\n \n /**\n- * Indicates that this class has a corresponding Helper class.\n- * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n+ * Marks the possibility of the implementing object to return the associated\n+ * IOR.\n+ *\n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public interface IDLEntity\n-  extends Serializable\n+public interface IorProvider\n {\n+  /**\n+   * Get the IOR of the associated object.\n+   */\n+  IOR getIor();\n }", "previous_filename": "libjava/classpath/org/omg/CORBA/IDLEntity.java"}, {"sha": "511a34d559b5d760fabb940ebf1862db027f2611", "filename": "libjava/classpath/gnu/CORBA/Minor.java", "status": "added", "additions": 282, "deletions": 0, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FMinor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FMinor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FMinor.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,282 @@\n+/* Minor.java --\n+ Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+ This file is part of GNU Classpath.\n+\n+ GNU Classpath is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2, or (at your option)\n+ any later version.\n+\n+ GNU Classpath is distributed in the hope that it will be useful, but\n+ WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GNU Classpath; see the file COPYING.  If not, write to the\n+ Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+ 02110-1301 USA.\n+\n+ Linking this library statically or dynamically with other modules is\n+ making a combined work based on this library.  Thus, the terms and\n+ conditions of the GNU General Public License cover the whole\n+ combination.\n+\n+ As a special exception, the copyright holders of this library give you\n+ permission to link this library with independent modules to produce an\n+ executable, regardless of the license terms of these independent\n+ modules, and to copy and distribute the resulting executable under\n+ terms of your choice, provided that you also meet, for each linked\n+ independent module, the terms and conditions of the license of that\n+ module.  An independent module is a module which is not derived from\n+ or based on this library.  If you modify this library, you may extend\n+ this exception to your version of the library, but you are not\n+ obligated to do so.  If you do not wish to do so, delete this\n+ exception statement from your version. */\n+\n+\n+package gnu.CORBA;\n+\n+\n+/**\n+ * Provides information and operations, related to about the 20 bit vendor minor\n+ * code Id. This code is included into all CORBA system exceptions and is also\n+ * transferred to remote side.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public interface Minor\n+{\n+  // Note: MARSHAL done.\n+\n+  /* MARSHAL */\n+\n+  /**\n+   * The GNU Classpath VMCID. The last 12 bits can be used to mark up to 4096\n+   * possible exceptions.\n+   */\n+  int vendor = 0x47430000;\n+\n+  /*\n+   * Minor codes form MARSHAL exception.\n+   */\n+\n+  /**\n+   * The message being received is not a GIOP message. It does not start from\n+   * the expected magic sequence byte[] { 'G', 'I', 'O', 'P' }.\n+   */\n+  int Giop = 1 | vendor;\n+\n+  /**\n+   * The unexpected IOException while reading or writing the GIOP message header\n+   * or the subsequent request or response header\n+   */\n+  int Header = 2 | vendor;\n+\n+  /**\n+   * The data stream ended before reading all expected values from it. This\n+   * usually means that the CORBA message is corrupted, but may also indicate\n+   * that the server expects the remote method being invoked to have more or\n+   * different parameters.\n+   */\n+  int EOF = 3 | vendor;\n+\n+  /**\n+   * The unexpected IOException while reading or writing the data via Commond\n+   * Data Representation stream.\n+   */\n+  int CDR = 5 | vendor;\n+\n+  /**\n+   * The unexpected IOException while reading or writing the Value type.\n+   */\n+  int Value = 6 | vendor;\n+\n+  /**\n+   * The unexpected IOException while handling request forwarding.\n+   */\n+  int Forwarding = 7 | vendor;\n+\n+  /**\n+   * The unexpected IOException while handling data encapsulation, tagged\n+   * components, tagged profiles, etc.\n+   */\n+  int Encapsulation = 8 | vendor;\n+\n+  /**\n+   * The unexpected IOException while inserting or extracting data to/from the\n+   * Any or DynamicAny.\n+   */\n+  int Any = 9 | vendor;\n+\n+  /**\n+   * The unexpected UserException in the context where it cannot be handled and\n+   * must be converted to the SystemException.\n+   */\n+  int UserException = 10 | vendor;\n+\n+  /**\n+   * While the operation could formally be applied to the target, the OMG\n+   * standard states that it is actually not applicable. For example, some CORBA\n+   * objects like POA are always local and should not be passed to or returned\n+   * from the remote side.\n+   */\n+  int Inappropriate = 11 | vendor;\n+\n+  /**\n+   * When reading data, it was discovered that size of the data structure like\n+   * string, sequence or character is written as the negative number.\n+   */\n+  int Negative = 12 | vendor;\n+\n+  /**\n+   * Reference to non-existing node in the data grapth while reading the value\n+   * types.\n+   */\n+  int Graph = 14 | vendor;\n+\n+  /**\n+   * Unexpected exception was thrown from the IDL type helper while handling the\n+   * object of this type as a boxed value.\n+   */\n+  int Boxed = 15 | vendor;\n+\n+  /**\n+   * Unable to instantiate an value type object while reading it from the\n+   * stream.\n+   */\n+  int Instantiation = 16 | vendor;\n+\n+  /**\n+   * The header tag of the value type being read from the CDR stream contains an\n+   * unexpected value outside 0x7fffff00 .. 0x7fffffff and also not null and not\n+   * an indirection.\n+   */\n+  int ValueHeaderTag = 17 | vendor;\n+\n+  /**\n+   * The header tag flags of the value type being read from the CDR stream make\n+   * the invalid combination (for instance, 0x7fffff04).\n+   */\n+  int ValueHeaderFlags = 18 | vendor;\n+\n+  /**\n+   * The value type class, written on the wire, is not compatible with the\n+   * expected class, passed as a parameter to the InputStream.read_value.\n+   */\n+  int ClassCast = 19 | vendor;\n+\n+  /**\n+   * Positive or otherwise invalid indirection offset when reading the data\n+   * graph of the value type.\n+   */\n+  int Offset = 20 | vendor;\n+\n+  /**\n+   * Errors while reading the chunked value type.\n+   */\n+  int Chunks = 21 | vendor;\n+\n+  /**\n+   * No means are provided to write this value type.\n+   */\n+  int UnsupportedValue = 22 | vendor;\n+\n+  /**\n+   * The value factory, required for the operation being invoked, is not\n+   * registered with this ORB.\n+   */\n+  int Factory = 23 | vendor;\n+\n+  /**\n+   * Unsupported object addressing method in GIOP request header.\n+   */\n+  int UnsupportedAddressing = 24 | vendor;\n+\n+  /**\n+   * Invalid stringified object reference (IOR).\n+   */\n+  int IOR = 25 | vendor;\n+\n+  /**\n+   * Problems with converting between stubs, ties, interfaces and\n+   * implementations.\n+   */\n+  int TargetConversion = 26 | vendor;\n+\n+  /**\n+   * Problems with reading or writing the fields of the value type object.\n+   */\n+  int ValueFields = 27 | vendor;\n+\n+  /**\n+   * The instance of the value type is not serializable.\n+   */\n+  int NonSerializable = 28 | vendor;\n+\n+  /* BAD_OPERATION */\n+\n+  /**\n+   * The remote side requested to invoke the method that is not available on\n+   * that target (client and server probably disagree in the object definition).\n+   */\n+  int Method = 0 | vendor;\n+\n+  /**\n+   * Failed to activate the inactive object.\n+   */\n+  int Activation = 10 | vendor;\n+\n+  /*\n+   * Any - Attempt to extract from the Any value of the different type that was\n+   * stored into that Any.\n+   */\n+\n+  /* ClassCast - Unable to narrow the object into stub. */\n+\n+  /**\n+   * The policies, applying to ORB or POA prevent the requested operation.\n+   */\n+  int Policy = 11 | vendor;\n+\n+  /**\n+   * Socket related errors like failure to open socket on the expected port,\n+   * failure to get a free port when required and so on.\n+   */\n+  int Socket = 12 | vendor;\n+\n+  /**\n+   * The passed value for enumeration is outside the valid range for that\n+   * enumeration.\n+   */\n+  int Enumeration = 14 | vendor;\n+\n+  /**\n+   * The passed policy code is outside the valid range of the possible policies\n+   * for the given policy type.\n+   */\n+  int PolicyType = 15 | vendor;\n+  \n+  /* NO_RESOURCES */\n+  \n+  /**\n+   * Unable to get a free port for a new socket. Proably too many objects under\n+   * unsuitable POA policy.\n+   */\n+  int Ports = 20 | vendor;\n+  \n+  /**\n+   * Too many parallel calls (too many parallel threads). The thread control\n+   * prevents malicios client from knocking the server out by suddenly\n+   * submitting large number of requests.\n+   */\n+  int Threads = 21 | vendor;\n+  \n+  /**\n+   * The IOR starts with file://, http:// or ftp://, but this local or remote\n+   * resource is not accessible.\n+   */\n+  int Missing_IOR = 22 | vendor;\n+\n+}"}, {"sha": "ee27e68cd79be0af8f64c3afc044ec24d5aeb860", "filename": "libjava/classpath/gnu/CORBA/NamingService/Ext.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FExt.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -73,7 +73,7 @@\n    * The converter class converts between string and array form of the\n    * name.\n    */\n-  private snConverter converter = new snConverter();\n+  private NameTransformer converter = new NameTransformer();\n \n   /**\n    * Create the extensions for the given instance of the context."}, {"sha": "6116ba94e7494659d4ef27399a50eabe0cab7716", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameComponentComparator.java", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameComponentComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameComponentComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameComponentComparator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* cmpNameComponent.java --\n+/* NameComponentComparator.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -49,18 +49,18 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public final class cmpNameComponent\n+public final class NameComponentComparator\n   implements Comparator\n {\n   /**\n    * The singleton instance of the name comparator.\n    */\n-  public static final cmpNameComponent singleton = new cmpNameComponent();\n+  public static final NameComponentComparator singleton = new NameComponentComparator();\n \n   /**\n    * It is enough to have a singleton.\n    */\n-  private cmpNameComponent()\n+  private NameComponentComparator()\n   {\n   }\n \n@@ -93,6 +93,6 @@ public final int compare(Object nc_a, Object nc_b)\n    */\n   public boolean equals(Object x)\n   {\n-    return x instanceof cmpNameComponent;\n+    return x instanceof NameComponentComparator;\n   }\n }", "previous_filename": "libjava/classpath/gnu/CORBA/NamingService/cmpNameComponent.java"}, {"sha": "422db1c58dad63124b29eff7a7d80363e956b7aa", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameParser.java", "status": "modified", "additions": 153, "deletions": 44, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,44 +1,45 @@\n /* NameParser.java --\n- Copyright (C) 2005 Free Software Foundation, Inc.\n-\n- This file is part of GNU Classpath.\n-\n- GNU Classpath is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2, or (at your option)\n- any later version.\n-\n- GNU Classpath is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License\n- along with GNU Classpath; see the file COPYING.  If not, write to the\n- Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n- 02110-1301 USA.\n-\n- Linking this library statically or dynamically with other modules is\n- making a combined work based on this library.  Thus, the terms and\n- conditions of the GNU General Public License cover the whole\n- combination.\n-\n- As a special exception, the copyright holders of this library give you\n- permission to link this library with independent modules to produce an\n- executable, regardless of the license terms of these independent\n- modules, and to copy and distribute the resulting executable under\n- terms of your choice, provided that you also meet, for each linked\n- independent module, the terms and conditions of the license of that\n- module.  An independent module is a module which is not derived from\n- or based on this library.  If you modify this library, you may extend\n- this exception to your version of the library, but you are not\n- obligated to do so.  If you do not wish to do so, delete this\n- exception statement from your version. */\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package gnu.CORBA.NamingService;\n \n-import gnu.CORBA.Functional_ORB;\n+import gnu.CORBA.Minor;\n+import gnu.CORBA.OrbFunctional;\n import gnu.CORBA.IOR;\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.Version;\n@@ -51,11 +52,15 @@\n import org.omg.CORBA.portable.Delegate;\n import org.omg.CORBA.portable.ObjectImpl;\n import org.omg.CosNaming.NamingContext;\n-import org.omg.CosNaming.NamingContextExtHelper;\n-import org.omg.CosNaming.NamingContextHelper;\n import org.omg.CosNaming._NamingContextStub;\n \n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n import java.io.UnsupportedEncodingException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n import java.net.URLDecoder;\n import java.util.ArrayList;\n import java.util.StringTokenizer;\n@@ -74,7 +79,7 @@\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class NameParser\n-  extends snConverter\n+  extends NameTransformer\n {\n   /**\n    * The corbaloc prefix.\n@@ -90,6 +95,21 @@\n    * The IOR prefix.\n    */\n   public static final String pxIOR = \"ior\";\n+  \n+  /**\n+   * The file:// prefix.\n+   */\n+  public static final String pxFILE = \"file://\";\n+  \n+  /**\n+   * The ftp:// prefix.\n+   */\n+  public static final String pxFTP = \"ftp://\";\n+  \n+  /**\n+   * The http:// prefix.\n+   */\n+  public static final String pxHTTP = \"http://\";\n \n   /**\n    * Marks iiop protocol.\n@@ -114,7 +134,7 @@\n   /**\n    * The string to name converter, initialized on demand.\n    */\n-  static snConverter converter;\n+  static NameTransformer converter;\n \n   /**\n    * The current position.\n@@ -134,6 +154,9 @@\n    * 2. corbaloc:rir:[/key] <br>\n    * 3. corbaname:[iiop][version.subversion@]:host[:port]/key <br>\n    * 4. corbaname:rir:[/key] <br>\n+   * 5. file://[file name]<br>\n+   * 6. http://[url]<br>\n+   * 7. ftp://[url]<br>\n    * \n    * Protocol defaults to IOP, the object key defaults to the NameService.\n    * \n@@ -143,9 +166,31 @@\n    * @return the resolved object.\n    */\n   public synchronized org.omg.CORBA.Object corbaloc(String corbaloc,\n-    Functional_ORB orb)\n+    OrbFunctional orb)\n     throws BAD_PARAM\n   {\n+    return corbaloc(corbaloc, orb, 0);\n+  }\n+  \n+  /**\n+   * Parse controlling against the infinite recursion loop.\n+   */\n+  private org.omg.CORBA.Object corbaloc(String corbaloc,\n+    OrbFunctional orb, int recursion)\n+  {\n+    // The used CORBA specification does not state how many times we should to\n+    //redirect, but the infinite loop may be used to knock out the system.\n+    // by malicious attempt.\n+    if (recursion > 10)\n+      throw new DATA_CONVERSION(\"More than 10 redirections\");\n+    \n+    if (corbaloc.startsWith(pxFILE))\n+      return corbaloc(readFile(corbaloc.substring(pxFILE.length())), orb, recursion+1);\n+    else if (corbaloc.startsWith(pxHTTP))\n+      return corbaloc(readUrl(corbaloc), orb, recursion+1);\n+    else if (corbaloc.startsWith(pxFTP))\n+      return corbaloc(readUrl(corbaloc), orb, recursion+1);\n+\n     boolean corbaname;\n \n     // The alternative addresses, if given.\n@@ -304,6 +349,70 @@ else if (t[p].equalsIgnoreCase(pxIOR))\n     else\n       throw new DATA_CONVERSION(\"Unsupported protocol '\" + t[p] + \"'\");\n   }\n+  \n+  /**\n+   * Read IOR from the file in the local file system.\n+   */\n+  String readFile(String file)\n+  {\n+    File f = new File(file);\n+    if (!f.exists())\n+      {\n+        DATA_CONVERSION err = new DATA_CONVERSION(f.getAbsolutePath()\n+          + \" does not exist.\");\n+        err.minor = Minor.Missing_IOR;\n+      }\n+    try\n+      {\n+        char[] c = new char[(int) f.length()];\n+        FileReader fr = new FileReader(f);\n+        fr.read(c);\n+        fr.close();\n+        return new String(c).trim();\n+      }\n+    catch (IOException ex)\n+      {\n+        DATA_CONVERSION d = new DATA_CONVERSION();\n+        d.initCause(ex);\n+        d.minor = Minor.Missing_IOR;\n+        throw (d);\n+      }\n+  }\n+  \n+  /**\n+   * Read IOR from the remote URL.\n+   */\n+  String readUrl(String url)\n+  {\n+    URL u;\n+    try\n+      {\n+        u = new URL(url);\n+      }\n+    catch (MalformedURLException mex)\n+      {\n+        throw new BAD_PARAM(\"Malformed URL: '\" + url + \"'\");\n+      }\n+\n+    try\n+      {\n+        InputStreamReader r = new InputStreamReader(u.openStream());\n+\n+        StringBuffer b = new StringBuffer();\n+        int c;\n+\n+        while ((c = r.read()) > 0)\n+          b.append((char) c);\n+\n+        return b.toString().trim();\n+      }\n+    catch (Exception exc)\n+      {\n+        DATA_CONVERSION d = new DATA_CONVERSION(\"Reading \" + url + \" failed.\");\n+        d.minor = Minor.Missing_IOR;\n+        throw d;\n+      }\n+  }\n \n   private org.omg.CORBA.Object resolve(org.omg.CORBA.Object object)\n   {\n@@ -329,7 +438,7 @@ private org.omg.CORBA.Object resolve(org.omg.CORBA.Object object)\n       }\n \n     if (converter == null)\n-      converter = new snConverter();\n+      converter = new NameTransformer();\n \n     try\n       {\n@@ -380,7 +489,7 @@ private String readKey(String delimiter)\n \n   static NameParser n = new NameParser();\n \n-  static void corbalocT(String ior, Functional_ORB orb)\n+  static void corbalocT(String ior, OrbFunctional orb)\n   {\n     System.out.println(ior);\n     System.out.println(n.corbaloc(ior, orb));\n@@ -391,7 +500,7 @@ public static void main(String[] args)\n   {\n     try\n       {\n-        Functional_ORB orb = (Functional_ORB) ORB.init(args, null);\n+        OrbFunctional orb = (OrbFunctional) ORB.init(args, null);\n         corbalocT(\"corbaloc:iiop:1.3@155axyz.com/Prod/aTradingService\", orb);\n         corbalocT(\"corbaloc:iiop:2.7@255bxyz.com/Prod/bTradingService\", orb);\n         corbalocT(\"corbaloc:iiop:355cxyz.com/Prod/cTradingService\", orb);"}, {"sha": "0e0782a5756cffb6eff7f9c8399f74e58456dfd9", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameTransformer.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* snConverter.java --\n+/* NameTransformer.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -51,7 +51,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class snConverter\n+public class NameTransformer\n {\n   /**\n    * A string, indicating the escape character.\n@@ -301,7 +301,7 @@ public static void main(String[] args)\n     NameComponent b = new NameComponent(\"b/z\", \"b.k\");\n     NameComponent c = new NameComponent(\"c\", \"\");\n \n-    snConverter sn = new snConverter();\n+    NameTransformer sn = new NameTransformer();\n \n     try\n       {", "previous_filename": "libjava/classpath/gnu/CORBA/NamingService/snConverter.java"}, {"sha": "95deb0096bd69e2bc0792594a49960ee28f6597e", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingMap.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -66,7 +66,7 @@\n    */\n   public NamingMap()\n   {\n-    map = new TreeMap(cmpNameComponent.singleton);\n+    map = new TreeMap(NameComponentComparator.singleton);\n   }\n \n   /**"}, {"sha": "bf72637d7d74733f7d3222e61e50525f8ec58469", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingServiceTransient.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -1,4 +1,4 @@\n-/* Server.java --\n+/* NamingServiceTransient.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,7 +38,7 @@\n \n package gnu.CORBA.NamingService;\n \n-import gnu.CORBA.Functional_ORB;\n+import gnu.CORBA.OrbFunctional;\n import gnu.CORBA.IOR;\n \n import org.omg.CosNaming.NamingContextExt;\n@@ -102,7 +102,7 @@ public static void main(String[] args)\n     try\n       {\n         // Create and initialize the ORB\n-        final Functional_ORB orb = new Functional_ORB();\n+        final OrbFunctional orb = new OrbFunctional();\n \n         if (args.length > 1)\n           for (int i = 0; i < args.length - 1; i++)\n@@ -114,7 +114,7 @@ public static void main(String[] args)\n                 iorf = args[i + 1];\n             }\n \n-        Functional_ORB.setPort(port);\n+        OrbFunctional.setPort(port);\n \n         // Create the servant and register it with the ORB\n         NamingContextExt namer = new Ext(new TransientContext());\n@@ -159,6 +159,6 @@ public void run()\n \n     // Restore the default value for allocating ports for the subsequent\n     // objects.\n-    Functional_ORB.setPort(Functional_ORB.DEFAULT_INITIAL_PORT);\n+    OrbFunctional.setPort(OrbFunctional.DEFAULT_INITIAL_PORT);\n   }\n }"}, {"sha": "5937e76b31ecbd76381746aa38c572e7dbc53e2b", "filename": "libjava/classpath/gnu/CORBA/ObjectCreator.java", "status": "modified", "additions": 270, "deletions": 127, "changes": 397, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,27 +38,37 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.CDR.cdrBufOutput;\n+import gnu.CORBA.CDR.UnknownExceptionCtxHandler;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.GIOP.ServiceContext;\n+import gnu.CORBA.typecodes.RecordTypeCode;\n+import gnu.classpath.VMStackWalker;\n \n import org.omg.CORBA.Any;\n import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.CompletionStatusHelper;\n import org.omg.CORBA.MARSHAL;\n-import org.omg.CORBA.StructMember;\n import org.omg.CORBA.SystemException;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.UNKNOWN;\n import org.omg.CORBA.UserException;\n+import org.omg.CORBA.portable.IDLEntity;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n+import org.omg.CORBA.portable.ValueBase;\n \n-import java.lang.reflect.Constructor;\n import java.lang.reflect.Method;\n+import java.util.Map;\n+import java.util.WeakHashMap;\n+\n+import javax.rmi.CORBA.Util;\n \n /**\n  * Creates java objects from the agreed IDL names for the simple case when the\n  * CORBA object is directly mapped into the locally defined java class.\n- *\n+ * \n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public class ObjectCreator\n@@ -78,92 +88,138 @@\n    */\n   public static final String CLASSPATH_PREFIX = \"gnu.CORBA.\";\n \n+  /**\n+   * Maps classes to they IDL or RMI names. Computing RMI name is an expensive\n+   * operations, so frequently used RMI keys are reused. The map must be weak to\n+   * ensure that the class can be unloaded, when applicable.\n+   */\n+  public static Map m_names = new WeakHashMap();\n+\n+  /**\n+   * Maps IDL strings into known classes. The map must be weak to ensure that\n+   * the class can be unloaded, when applicable.\n+   */\n+  public static Map m_classes = new WeakHashMap();\n+\n+  /**\n+   * Maps IDL types to they helpers.\n+   */\n+  public static Map m_helpers = new WeakHashMap();\n+\n   /**\n    * Try to instantiate an object with the given IDL name. The object must be\n    * mapped to the local java class. The omg.org domain must be mapped into the\n    * object in either org/omg or gnu/CORBA namespace.\n-   *\n+   * \n    * @param IDL name\n    * @return instantiated object instance or null if no such available.\n    */\n   public static java.lang.Object createObject(String idl, String suffix)\n   {\n-    try\n-      {\n-        return Class.forName(toClassName(JAVA_PREFIX, idl) + suffix)\n-                    .newInstance();\n-      }\n-    catch (Exception ex)\n+    synchronized (m_classes)\n       {\n-        try\n+        Class known = (Class) (suffix == null ? m_classes.get(idl)\n+          : m_classes.get(idl + 0xff + suffix));\n+        Object object;\n+\n+        if (known != null)\n           {\n-            return Class.forName(toClassName(CLASSPATH_PREFIX, idl) + suffix)\n-                        .newInstance();\n+            try\n+              {\n+                return known.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                RuntimeException rex = new RuntimeException(idl + \" suffix \"\n+                  + suffix, ex);\n+                throw rex;\n+              }\n           }\n-        catch (Exception exex)\n+        else\n           {\n-            return null;\n+            if (suffix == null)\n+              suffix = \"\";\n+            try\n+              {\n+                known = forName(toClassName(JAVA_PREFIX, idl) + suffix);\n+                object = known.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                try\n+                  {\n+                    known = forName(toClassName(CLASSPATH_PREFIX, idl)\n+                      + suffix);\n+                    object = known.newInstance();\n+                  }\n+                catch (Exception exex)\n+                  {\n+                    return null;\n+                  }\n+              }\n+            m_classes.put(idl + 0xff + suffix, known);\n+            return object;\n           }\n       }\n   }\n \n   /**\n-   * Create the system exception with the given idl name.\n-   *\n-   * @param idl the exception IDL name, must match the syntax \"IDL:<class/name>:1.0\".\n-   * @param minor the exception minor code.\n-   * @param completed the exception completion status.\n-   *\n-   * @return the created exception.\n+   * Read the system exception from the given stream.\n+   * \n+   * @param input the CDR stream to read from.\n+   * @param contexts the service contexts in request/reply header/\n+   * \n+   * @return the exception that has been stored in the stream (IDL name, minor\n+   * code and completion status).\n    */\n-  public static SystemException createSystemException(String idl, int minor,\n-    CompletionStatus completed\n-  )\n+  public static SystemException readSystemException(InputStream input,\n+    ServiceContext[] contexts)\n   {\n+    SystemException exception;\n+\n+    String idl = input.read_string();\n+    int minor = input.read_ulong();\n+    CompletionStatus completed = CompletionStatusHelper.read(input);\n+\n     try\n       {\n-        String cl = toClassName(JAVA_PREFIX, idl);\n-        Class exClass = Class.forName(cl);\n-\n-        Constructor constructor =\n-          exClass.getConstructor(new Class[]\n-            {\n-              String.class, int.class, CompletionStatus.class\n-            }\n-          );\n-\n-        Object exception =\n-          constructor.newInstance(new Object[]\n-            {\n-              \" Remote exception \" + idl + \", minor \" + minor + \", \" +\n-              completed + \".\", new Integer(minor), completed\n-            }\n-          );\n-\n-        return (SystemException) exception;\n+        exception = (SystemException) createObject(idl, null);\n+        exception.minor = minor;\n+        exception.completed = completed;\n       }\n     catch (Exception ex)\n       {\n-        ex.printStackTrace();\n-        return new UNKNOWN(\"Unsupported system exception\", minor, completed);\n+        UNKNOWN u = new UNKNOWN(\"Unsupported system exception \" + idl, minor,\n+          completed);\n+        u.initCause(ex);\n+        throw u;\n       }\n-  }\n \n-  /**\n-   * Read the system exception from the given stream.\n-   *\n-   * @param input the CDR stream to read from.\n-   * @return the exception that has been stored in the stream (IDL name, minor\n-   * code and completion status).\n-   */\n-  public static SystemException readSystemException(InputStream input)\n-  {\n-    String idl = input.read_string();\n-    int minor = input.read_ulong();\n-    CompletionStatus status = CompletionStatusHelper.read(input);\n+    try\n+      {\n+        // If UnknownExceptionInfo is present in the contexts, read it and\n+        // set as a cause of this exception.\n+        ServiceContext uEx = ServiceContext.find(\n+          ServiceContext.UnknownExceptionInfo, contexts);\n \n-    SystemException exception =\n-      ObjectCreator.createSystemException(idl, minor, status);\n+        if (uEx != null)\n+          {\n+            BufferredCdrInput in = new BufferredCdrInput(uEx.context_data);\n+            in.setOrb(in.orb());\n+            if (input instanceof AbstractCdrInput)\n+              {\n+                ((AbstractCdrInput) input).cloneSettings(in);\n+              }\n+\n+            Throwable t = UnknownExceptionCtxHandler.read(in, contexts);\n+            exception.initCause(t);\n+          }\n+      }\n+    catch (Exception ex)\n+      {\n+        // Unsupported context format. Do not terminate as the user program may\n+        // not need it.\n+      }\n \n     return exception;\n   }\n@@ -172,24 +228,21 @@ public static SystemException readSystemException(InputStream input)\n    * Reads the user exception, having the given Id, from the input stream. The\n    * id is expected to be in the form like\n    * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n-   *\n+   * \n    * @param idl the exception idl name.\n    * @param input the stream to read from.\n-   *\n+   * \n    * @return the loaded exception.\n    * @return null if the helper class cannot be found.\n    */\n   public static UserException readUserException(String idl, InputStream input)\n   {\n     try\n       {\n-        String helper = toHelperName(idl);\n-        Class helperClass = Class.forName(helper);\n+        Class helperClass = findHelper(idl);\n \n-        Method read =\n-          helperClass.getMethod(\"read\",\n-            new Class[] { org.omg.CORBA.portable.InputStream.class }\n-          );\n+        Method read = helperClass.getMethod(\"read\",\n+          new Class[] { org.omg.CORBA.portable.InputStream.class });\n \n         return (UserException) read.invoke(null, new Object[] { input });\n       }\n@@ -208,7 +261,7 @@ public static UserException readUserException(String idl, InputStream input)\n   /**\n    * Gets the helper class name from the string like\n    * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n-   *\n+   * \n    * @param IDL the idl name.\n    */\n   public static String toHelperName(String IDL)\n@@ -227,25 +280,24 @@ public static String toHelperName(String IDL)\n \n   /**\n    * Writes the system exception data to CDR output stream.\n-   *\n+   * \n    * @param output a stream to write data to.\n    * @param ex an exception to write.\n    */\n   public static void writeSystemException(OutputStream output,\n-    SystemException ex\n-  )\n+    SystemException ex)\n   {\n-    String exIDL = toIDL(ex.getClass().getName());\n+    String exIDL = getRepositoryId(ex.getClass());\n     output.write_string(exIDL);\n     output.write_ulong(ex.minor);\n     CompletionStatusHelper.write(output, ex.completed);\n   }\n \n   /**\n    * Converts the given IDL name to class name.\n-   *\n+   * \n    * @param IDL the idl name.\n-   *\n+   * \n    */\n   protected static String toClassName(String prefix, String IDL)\n   {\n@@ -265,34 +317,43 @@ protected static String toClassName(String prefix, String IDL)\n    * Converts the given IDL name to class name and tries to load the matching\n    * class. The OMG prefix (omg.org) is replaced by the java prefix org.omg. No\n    * other prefixes are added.\n-   *\n+   * \n    * @param IDL the idl name.\n-   *\n-   * TODO Cache the returned classes, avoiding these string manipulations each\n-   * time the conversion is required.\n-   *\n+   * \n    * @return the matching class or null if no such is available.\n    */\n   public static Class Idl2class(String IDL)\n   {\n-    String s = IDL;\n-    int a = s.indexOf(':') + 1;\n-    int b = s.lastIndexOf(':');\n-\n-    s = IDL.substring(a, b);\n-\n-    if (s.startsWith(OMG_PREFIX))\n-      s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n-\n-    String cn = s.replace('/', '.');\n-\n-    try\n+    synchronized (m_classes)\n       {\n-        return Class.forName(cn);\n-      }\n-    catch (ClassNotFoundException ex)\n-      {\n-        return null;\n+        Class c = (Class) m_classes.get(IDL);\n+\n+        if (c != null)\n+          return c;\n+        else\n+          {\n+            String s = IDL;\n+            int a = s.indexOf(':') + 1;\n+            int b = s.lastIndexOf(':');\n+\n+            s = IDL.substring(a, b);\n+\n+            if (s.startsWith(OMG_PREFIX))\n+              s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n+\n+            String cn = s.replace('/', '.');\n+\n+            try\n+              {\n+                c = forName(cn);\n+                m_classes.put(IDL, c);\n+                return c;\n+              }\n+            catch (ClassNotFoundException ex)\n+              {\n+                return null;\n+              }\n+          }\n       }\n   }\n \n@@ -301,9 +362,9 @@ public static Class Idl2class(String IDL)\n    * and create an object instance with parameterless constructor. The OMG\n    * prefix (omg.org) is replaced by the java prefix org.omg. No other prefixes\n    * are added.\n-   *\n+   * \n    * @param IDL the idl name.\n-   *\n+   * \n    * @return instantiated object instance or null if such attempt was not\n    * successful.\n    */\n@@ -325,47 +386,64 @@ public static java.lang.Object Idl2Object(String IDL)\n   }\n \n   /**\n-   * Convert the class name to IDL name.\n-   *\n-   * @param cn the class name.\n-   *\n-   * @return the idl name.\n+   * Convert the class name to IDL or RMI name (repository id). If the class\n+   * inherits from IDLEntity, ValueBase or SystemException, returns repository\n+   * Id in the IDL:(..) form. If it does not, returns repository Id in the\n+   * RMI:(..) form.\n+   * \n+   * @param cx the class for that the name must be computed.\n+   * \n+   * @return the idl or rmi name.\n    */\n-  public static String toIDL(String cn)\n+  public static synchronized String getRepositoryId(Class cx)\n   {\n-    if (cn.startsWith(JAVA_PREFIX))\n-      cn = OMG_PREFIX + cn.substring(JAVA_PREFIX.length()).replace('.', '/');\n-    else if (cn.startsWith(CLASSPATH_PREFIX))\n-      cn =\n-        OMG_PREFIX +\n-        cn.substring(CLASSPATH_PREFIX.length()).replace('.', '/');\n-\n-    return \"IDL:\" + cn + \":1.0\";\n+    String name = (String) m_names.get(cx);\n+    if (name != null)\n+      return name;\n+\n+    String cn = cx.getName();\n+    if (!(IDLEntity.class.isAssignableFrom(cx)\n+      || ValueBase.class.isAssignableFrom(cx) || SystemException.class.isAssignableFrom(cx)))\n+      {\n+        // Not an IDL entity.\n+        name = Util.createValueHandler().getRMIRepositoryID(cx);\n+      }\n+    else\n+      {\n+        if (cn.startsWith(JAVA_PREFIX))\n+          cn = OMG_PREFIX\n+            + cn.substring(JAVA_PREFIX.length()).replace('.', '/');\n+        else if (cn.startsWith(CLASSPATH_PREFIX))\n+          cn = OMG_PREFIX\n+            + cn.substring(CLASSPATH_PREFIX.length()).replace('.', '/');\n+\n+        name = \"IDL:\" + cn + \":1.0\";\n+      }\n+    m_names.put(cx, name);\n+    return name;\n   }\n \n   /**\n    * Insert the passed parameter into the given Any, assuming that the helper\n    * class is available. The helper class must have the \"Helper\" suffix and be\n    * in the same package as the class of the object being inserted.\n-   *\n+   * \n    * @param into the target to insert.\n-   *\n+   * \n    * @param object the object to insert. It can be any object as far as the\n    * corresponding helper is provided.\n-   *\n+   * \n    * @return true on success, false otherwise.\n    */\n   public static boolean insertWithHelper(Any into, Object object)\n   {\n     try\n       {\n         String helperClassName = object.getClass().getName() + \"Helper\";\n-        Class helperClass = Class.forName(helperClassName);\n+        Class helperClass = forName(helperClassName);\n \n-        Method insert =\n-          helperClass.getMethod(\"insert\",\n-            new Class[] { Any.class, object.getClass() }\n-          );\n+        Method insert = helperClass.getMethod(\"insert\", new Class[] {\n+          Any.class, object.getClass() });\n \n         insert.invoke(null, new Object[] { into, object });\n \n@@ -385,20 +463,20 @@ public static boolean insertSysException(Any into, SystemException exception)\n   {\n     try\n       {\n-        cdrBufOutput output = new cdrBufOutput();\n+        BufferedCdrOutput output = new BufferedCdrOutput();\n \n-        String m_exception_id = toIDL(exception.getClass().getName());\n+        String m_exception_id = getRepositoryId(exception.getClass());\n         output.write_string(m_exception_id);\n         output.write_ulong(exception.minor);\n         CompletionStatusHelper.write(output, exception.completed);\n \n         String name = getDefaultName(m_exception_id);\n \n-        universalHolder h = new universalHolder(output);\n+        GeneralHolder h = new GeneralHolder(output);\n \n         into.insert_Streamable(h);\n \n-        recordTypeCode r = new recordTypeCode(TCKind.tk_except);\n+        RecordTypeCode r = new RecordTypeCode(TCKind.tk_except);\n         r.setId(m_exception_id);\n         r.setName(name);\n         into.type(r);\n@@ -444,4 +522,69 @@ else if (exception instanceof UserException)\n     if (!ok)\n       throw new InternalError(\"Exception wrapping broken\");\n   }\n+\n+  /**\n+   * Find helper for the class with the given name.\n+   */\n+  public static Class findHelper(String idl)\n+  {\n+    synchronized (m_helpers)\n+      {\n+        Class c = (Class) m_helpers.get(idl);\n+        if (c != null)\n+          return c;\n+        try\n+          {\n+            String helper = toHelperName(idl);\n+            c = forName(helper);\n+\n+            m_helpers.put(idl, c);\n+            return c;\n+          }\n+        catch (Exception ex)\n+          {\n+            return null;\n+          }\n+      }\n+  }\n+  \n+  /**\n+   * Load the class with the given name. This method tries to use the context\n+   * class loader first. If this fails, it searches for the suitable class\n+   * loader in the caller stack trace. This method is a central point where all\n+   * requests to find a class by name are delegated.\n+   */\n+  public static Class forName(String className) throws ClassNotFoundException\n+  {\n+    try\n+      {\n+        return Class.forName(className, true,\n+                             Thread.currentThread().getContextClassLoader());\n+      }\n+    catch (ClassNotFoundException nex)\n+      {\n+        /**\n+         * Returns the first user defined class loader on the call stack, or\n+         * null when no non-null class loader was found.\n+         */\n+        Class[] ctx = VMStackWalker.getClassContext();\n+        for (int i = 0; i < ctx.length; i++)\n+          {\n+            // Since we live in a class loaded by the bootstrap\n+            // class loader, getClassLoader is safe to call without\n+            // needing to be wrapped in a privileged action.\n+            ClassLoader cl = ctx[i].getClassLoader();\n+            try\n+              {\n+                if (cl != null)\n+                  return Class.forName(className, true, cl);\n+              }\n+            catch (ClassNotFoundException nex2)\n+              {\n+                // Try next.\n+              }\n+          }\n+      }\n+    throw new ClassNotFoundException(className);\n+  }\n }\n\\ No newline at end of file"}, {"sha": "06d7538d70f220638810c17e39d5163d88b754dc", "filename": "libjava/classpath/gnu/CORBA/OctetHolder.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOctetHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOctetHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOctetHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.CORBA;\n \n-import gnu.CORBA.primitiveTypeCode;\n+import gnu.CORBA.typecodes.PrimitiveTypeCode;\n \n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n@@ -64,7 +64,7 @@\n    * The default type code for this holder.\n    */\n   private static final TypeCode t_octet =\n-    new primitiveTypeCode(TCKind.tk_octet);\n+    new PrimitiveTypeCode(TCKind.tk_octet);\n \n   /**\n    * The <code>long</code> (CORBA <code>octet</code>) value,"}, {"sha": "a0f9993c1a003e0d18dee70ab250516064213f6d", "filename": "libjava/classpath/gnu/CORBA/OrbFocused.java", "status": "added", "additions": 375, "deletions": 0, "changes": 375, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "patch": "@@ -0,0 +1,375 @@\n+/* OrbFocused.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA;\n+\n+import gnu.CORBA.Poa.ORB_1_4;\n+\n+import org.omg.CORBA.BAD_INV_ORDER;\n+import org.omg.CORBA.BAD_OPERATION;\n+import org.omg.CORBA.BAD_PARAM;\n+import org.omg.CORBA.CompletionStatus;\n+import org.omg.CORBA.NO_RESOURCES;\n+import org.omg.CORBA.portable.InvokeHandler;\n+\n+import java.applet.Applet;\n+import java.net.ServerSocket;\n+import java.util.Iterator;\n+import java.util.Properties;\n+import java.util.Random;\n+import java.util.StringTokenizer;\n+\n+/**\n+ * This class implements the ORB that uses a single port or the restricted port\n+ * range for all its objects. It is required to for use together with various\n+ * firewalls that does not allow opening multiple randomly selected ports, as\n+ * the defauld CORBA implementation used to do. The firewal must be configured\n+ * to allow CORBA to work on one fixed port or (for better performance) on a\n+ * small fixed range of ports. This does not restrict the maximal number of the\n+ * connected objects as the objects can share the same port.\n+ * \n+ * The used port or the used port range can be specified via property\n+ * gnu.CORBA.ListenerPort. The value of this property is a single port or range\n+ * of ports, boundary values (inclusive) being separeted by dash (for instance,\n+ * \"1245-1250\").\n+ * \n+ * It is possible to instantiate multiple instances of the focused ORBs and\n+ * combine them with the ordinary ORBs. If you instantiate several instances of\n+ * the focused ORBs on the same host, they used port sets should not overlap.\n+ * \n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class OrbFocused\n+  extends ORB_1_4\n+{\n+  /**\n+   * The name of the fixed port range property. The presence of this property\n+   * indicates that the default focused ORB must be used.\n+   */\n+  public static final String LISTENER_PORT = \"gnu.CORBA.ListenerPort\";\n+\n+  /**\n+   * The start of the range of the available ports, inclusive.\n+   */\n+  int m_ports_from = -1;\n+\n+  /**\n+   * The end of the range of the available ports, inclusive.\n+   */\n+  int m_ports_to = -1;\n+\n+  /**\n+   * The requests to port are served in parallel threads.\n+   */\n+  static final int PARALLEL = 0;\n+\n+  /**\n+   * The requests to port are served in the same thread.\n+   */\n+  static final int SEQUENTIAL = 1;\n+\n+  /**\n+   * The random number generator to get a random port in the valid range.\n+   */\n+  Random m_random = new Random();\n+\n+  /**\n+   * Parse the \"gnu.CORBA.ListenerPort\" property and initialize the valid port\n+   * set range.\n+   */\n+  public void setPortRange(String property)\n+  {\n+    int from, to;\n+    try\n+      {\n+        StringTokenizer st = new StringTokenizer(property, \" -\");\n+        if (st.countTokens() == 1)\n+          from = to = Integer.parseInt(st.nextToken());\n+        else\n+          {\n+            from = Integer.parseInt(st.nextToken());\n+            to = Integer.parseInt(st.nextToken());\n+            m_random = new Random();\n+          }\n+        setPortRange(from, to);\n+      }\n+    catch (Exception ex)\n+      {\n+        throw new BAD_PARAM(\"Unable to parse port range '\" + property + \"'\");\n+      }\n+  }\n+\n+  /**\n+   * Set the port range.\n+   * \n+   * @param from - start of the port range, inclusive.\n+   * @param to - end of the port range, inclusive.\n+   */\n+  public void setPortRange(int from, int to)\n+  {\n+    if (from < 0 || to < 0 || to < from)\n+      throw new BAD_PARAM(\"Invalid range\");\n+    m_ports_from = from;\n+    m_ports_to = to;\n+  }\n+\n+  /**\n+   * Get the port from the previously specified usage range.\n+   */\n+  int getPortFromRange(int attempt)\n+  {\n+    if (m_ports_from == m_ports_to)\n+      return m_ports_from;\n+    else if (m_ports_to - m_ports_from < RANDOM_PORT_ATTEMPTS)\n+      return m_ports_from + (attempt % (m_ports_to - m_ports_from + 1));\n+    else\n+      return m_random.nextInt(m_ports_to - m_ports_from + 1) + m_ports_from;\n+  }\n+\n+  /**\n+   * Get the shared port server where the new object can be added. This may\n+   * result reusing the existing server or instantiating a new server. If the\n+   * new server is instantiated and the ORB is already running, the server is\n+   * started.\n+   */\n+  protected portServer getPortServer(int type)\n+  {\n+    portServer p;\n+\n+    int n;\n+    if (m_ports_from < m_ports_to)\n+      n = RANDOM_PORT_ATTEMPTS;\n+    else\n+      n = 1;\n+\n+    Ports: for (int a = 0; a < n; a++)\n+      {\n+        int port = getPortFromRange(a);\n+        for (int i = 0; i < portServers.size(); i++)\n+          {\n+            p = (portServer) portServers.get(i);\n+            if (p.s_port == port)\n+              {\n+                return (portServer) p;\n+              }\n+          }\n+        // The server is not yet instantiated. Instantiate.\n+        try\n+          {\n+            // Check if the port is ok:\n+            ServerSocket s = socketFactory.createServerSocket(port);\n+            s.close();\n+\n+            portServer shared;\n+\n+            switch (type)\n+              {\n+                case PARALLEL:\n+                  shared = new portServer(port);\n+                  break;\n+\n+                case SEQUENTIAL:\n+                  shared = new sharedPortServer(port);\n+                  break;\n+\n+                default:\n+                  throw new InternalError(\"Invalid server type \" + type);\n+              }\n+\n+            portServers.add(shared);\n+\n+            if (running)\n+              shared.start();\n+\n+            return shared;\n+          }\n+        catch (Exception ex)\n+          {\n+            // Port is taken or probably other problems.\n+            continue Ports;\n+          }\n+      }\n+    throw new NO_RESOURCES(\"No free port available at \" + m_ports_from + \"-\"\n+      + m_ports_to, Minor.Ports, CompletionStatus.COMPLETED_NO);\n+  }\n+\n+  /**\n+   * Start the ORBs main working cycle (receive invocation - invoke on the local\n+   * object - send response - wait for another invocation).\n+   * \n+   * The method only returns after calling {@link #shutdown(boolean)}.\n+   */\n+  public void run()\n+  {\n+    if (m_ports_from < 0 || m_ports_to < 0)\n+      throw new BAD_INV_ORDER(\"For \" + getClass().getName() + \" \"\n+        + LISTENER_PORT + \" property must be set\");\n+\n+    running = true;\n+\n+    // Start all port servers. In the current subclass, the portServers\n+    // collection must be already filled in.\n+    Iterator iter = portServers.iterator();\n+\n+    while (iter.hasNext())\n+      {\n+        portServer subserver = (portServer) iter.next();\n+\n+        if (!subserver.isAlive())\n+          {\n+            // Reuse the current thread for the last portServer.\n+            if (!iter.hasNext())\n+              {\n+                // Discard the iterator.\n+                iter = null;\n+                subserver.run();\n+                return;\n+              }\n+            else\n+              subserver.start();\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Get free port from the allowed range. This method instantiates the port\n+   * server for the returned port.\n+   */\n+  public int getFreePort()\n+    throws BAD_OPERATION\n+  {\n+    portServer s = getPortServer(PARALLEL);\n+    return s.s_port;\n+  }\n+\n+  /**\n+   * Connect the given CORBA object to this ORB, explicitly specifying the\n+   * object key and the identity of the thread (and port), where the object must\n+   * be served. The identity is normally the POA.\n+   * \n+   * The new port server will be started only if there is no one already running\n+   * for the same identity. Otherwise, the task of the existing port server will\n+   * be widened, including duty to serve the given object. All objects,\n+   * connected to a single identity by this method, will process they requests\n+   * subsequently in the same thread. The method is used when the expected\n+   * number of the objects is too large to have a single port and thread per\n+   * object. This method is used by POAs, having a single thread policy.\n+   * \n+   * @param object the object, must implement the {@link InvokeHandler})\n+   * interface.\n+   * @param key the object key, usually used to identify the object from remote\n+   * side.\n+   * @param port the port, where the object must be connected.\n+   * \n+   * @throws BAD_PARAM if the object does not implement the\n+   * {@link InvokeHandler}).\n+   */\n+  public void connect_1_thread(org.omg.CORBA.Object object, byte[] key,\n+    java.lang.Object identity)\n+  {\n+    sharedPortServer shared = (sharedPortServer) identities.get(identity);\n+    if (shared == null)\n+      {\n+        shared = (sharedPortServer) getPortServer(SEQUENTIAL);\n+        identities.put(identity, shared);\n+        if (running)\n+          {\n+            shared.start();\n+          }\n+      }\n+\n+    Connected_objects.cObject ref = connected_objects.add(key, object,\n+      shared.s_port, identity);\n+    IOR ior = createIOR(ref);\n+    prepareObject(object, ior);\n+  }\n+\n+  /**\n+   * In this type of ORB, the service is started by {@link #getPortServer}. The\n+   * method below is not in use and should return without action.\n+   */\n+  public void startService(IOR ior)\n+  {\n+  }\n+\n+  /**\n+   * Set parameters (additionally search for the port range property).\n+   */\n+  protected void set_parameters(Applet applet, Properties props)\n+  {\n+    super.set_parameters(applet, props);\n+    String lp = applet.getParameter(LISTENER_PORT);\n+    if (lp != null)\n+      setPortRange(lp);\n+  }\n+\n+  /**\n+   * Set parameters (additionally search for the port range property).\n+   */\n+  protected void set_parameters(String[] args, Properties props)\n+  {\n+    super.set_parameters(args, props);\n+    String lp = null;\n+\n+    String lpKey = \"-\" + LISTENER_PORT;\n+\n+    if (args != null)\n+      if (args.length >= 2)\n+        {\n+          for (int i = 0; i < args.length - 1; i++)\n+            if (args[i].equals(lpKey))\n+              lp = args[i + 1];\n+        }\n+\n+    if (lp != null)\n+      setPortRange(lp);\n+\n+  }\n+\n+  /**\n+   * Additionally set the port range property, when applicable.\n+   */\n+  protected void useProperties(Properties props)\n+  {\n+    super.useProperties(props);\n+    String lp = props.getProperty(LISTENER_PORT);\n+    if (lp != null)\n+      setPortRange(lp);\n+  }\n+\n+}"}, {"sha": "f147e817a0f9f9824eb30ea82228a1509612d0eb", "filename": "libjava/classpath/gnu/CORBA/OrbFunctional.java", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Functional_ORB.java"}, {"sha": "c0401800a892616865c4e3c7d007551dc33613a5", "filename": "libjava/classpath/gnu/CORBA/OrbRestricted.java", "status": "renamed", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Restricted_ORB.java"}, {"sha": "9faf0883dedf17ff7bac868219c1d87242e36f64", "filename": "libjava/classpath/gnu/CORBA/Poa/AOM.java", "status": "renamed", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Poa/activeObjectMap.java"}, {"sha": "44ebaf45351cee2bc8273c0180c26807fa180d73", "filename": "libjava/classpath/gnu/CORBA/Poa/AccessiblePolicy.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAccessiblePolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAccessiblePolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAccessiblePolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Poa/vPolicy.java"}, {"sha": "903f8bfbbe1dc0222460a4b261911f2a9d33fe2c", "filename": "libjava/classpath/gnu/CORBA/Poa/DynamicImpHandler.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FDynamicImpHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FDynamicImpHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FDynamicImpHandler.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Poa/dynImpHandler.java"}, {"sha": "b1d5eaf8c036fb7615c3f5603783fd58a30436f7", "filename": "libjava/classpath/gnu/CORBA/Poa/ForwardedServant.java", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FForwardedServant.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FForwardedServant.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FForwardedServant.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "72dd8f0cf502633f004aeb668a91fb9f633b44c7", "filename": "libjava/classpath/gnu/CORBA/Poa/LocalDelegate.java", "status": "modified", "additions": 41, "deletions": 38, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalDelegate.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a2c0bb106c3ad4abdd81874f9fdd7a2af692cac7", "filename": "libjava/classpath/gnu/CORBA/Poa/LocalRequest.java", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FLocalRequest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "bb00aab70eb1c2307966ea26c50d2364999e4373", "filename": "libjava/classpath/gnu/CORBA/Poa/ORB_1_4.java", "status": "modified", "additions": 44, "deletions": 7, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FORB_1_4.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "e65214d4a9ab3068323e77d5b75e07535a4707c9", "filename": "libjava/classpath/gnu/CORBA/Poa/ServantDelegateImpl.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FServantDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FServantDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FServantDelegateImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Poa/servantDelegate.java"}, {"sha": "b2edc4056ab809277518e0343a1f6d2d2c1e1b42", "filename": "libjava/classpath/gnu/CORBA/Poa/StandardPolicies.java", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FStandardPolicies.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FStandardPolicies.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FStandardPolicies.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Poa/policySets.java"}, {"sha": "17d5a0f9e04d65683dba21a6787665513940f1a7", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuAdapterActivator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuAdapterActivator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuAdapterActivator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuAdapterActivator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "91531909a6a588b65b2c014345038002cceffb13", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuIdAssignmentPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdAssignmentPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdAssignmentPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdAssignmentPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "0b5fa1420bd7e38bdf71d4b53f2fbd244796a525", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuIdUniquenessPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdUniquenessPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdUniquenessPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuIdUniquenessPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "f1721beef64aa250bbb4b64543db12ebebc44703", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuImplicitActivationPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuImplicitActivationPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuImplicitActivationPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuImplicitActivationPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "f26596cd951d161abc08bc1fd890a1386f4554e1", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuLifespanPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuLifespanPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuLifespanPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuLifespanPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "6f2a019a3bbfee65a00853b41a6b0075155d6ef5", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOA.java", "status": "modified", "additions": 331, "deletions": 140, "changes": 471, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7710306b74891f82bbd359ba0785cb5a376c20b0", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOAManager.java", "status": "modified", "additions": 54, "deletions": 6, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "2f77639c698863e9bd4992240d12a64bba3bd162", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuRequestProcessingPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuRequestProcessingPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuRequestProcessingPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuRequestProcessingPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "020897a45b44b8283e19b3fdb7dd5844e2da0abf", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuServantObject.java", "status": "modified", "additions": 35, "deletions": 25, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "9fb61ab3f1f1ce87f677955dd3b2160c78adcc5a", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuServantRetentionPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantRetentionPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantRetentionPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantRetentionPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "1de94a101458eb6ad493307dbd9b5c468bd4de0e", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuThreadPolicy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuThreadPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuThreadPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuThreadPolicy.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a36f4b4b2d7c6abe8ee5e789647be31af7be472d", "filename": "libjava/classpath/gnu/CORBA/RawReply.java", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRawReply.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRawReply.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRawReply.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/binaryReply.java"}, {"sha": "4d509cc525338f1fb32d86a7c9d36d3dee01f5cb", "filename": "libjava/classpath/gnu/CORBA/ResponseHandlerImpl.java", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FResponseHandlerImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FResponseHandlerImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FResponseHandlerImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/bufferedResponseHandler.java"}, {"sha": "a6f7aa52b8d470f66ba67ce0b95326b5f26ca4b4", "filename": "libjava/classpath/gnu/CORBA/ServiceRequestAdapter.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c6e20e173744b946b5cfa107d1d640f702236435", "filename": "libjava/classpath/gnu/CORBA/SimpleDelegate.java", "status": "renamed", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimpleDelegate.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/Simple_delegate.java"}, {"sha": "e48a9a5da176847016972ddebf1beea27d759450", "filename": "libjava/classpath/gnu/CORBA/SocketRepository.java", "status": "modified", "additions": 66, "deletions": 20, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "66796d653c9de06a8cd2b227a90ded10642218db", "filename": "libjava/classpath/gnu/CORBA/StreamBasedRequest.java", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamBasedRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamBasedRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamBasedRequest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/streamRequest.java"}, {"sha": "de2fda0ba895e2ef0529354ddfad941aa88e1645", "filename": "libjava/classpath/gnu/CORBA/StreamHolder.java", "status": "renamed", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStreamHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/streamReadyHolder.java"}, {"sha": "d9e5ee4712caba79d217aa6ba32a314cb1d7f464", "filename": "libjava/classpath/gnu/CORBA/StubLocator.java", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStubLocator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStubLocator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FStubLocator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/stubFinder.java"}, {"sha": "4ffb0b74446f484490a02a9a31bde09550c66fe5", "filename": "libjava/classpath/gnu/CORBA/TypeCodeHelper.java", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeCodeHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeCodeHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeCodeHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3296db3600a41f4baca22d3ecfabd849aba8e4d3", "filename": "libjava/classpath/gnu/CORBA/TypeKindNamer.java", "status": "renamed", "additions": 39, "deletions": 36, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeKindNamer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeKindNamer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FTypeKindNamer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/typeNamer.java"}, {"sha": "efc27c22081d802bdaed8f2f81e45109ce8e4a18", "filename": "libjava/classpath/gnu/CORBA/Version.java", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FVersion.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FVersion.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FVersion.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3c6a87fbe2d8ee831bd7a5c529bc812b2c2762d8", "filename": "libjava/classpath/gnu/CORBA/WCharHolder.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWCharHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWCharHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWCharHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7f18791dfee3357d3c234f64fba655cd0eab39d8", "filename": "libjava/classpath/gnu/CORBA/WStringHolder.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWStringHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWStringHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FWStringHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "17a5f4a40e571cc733ad9e76e87ebd1e87142123", "filename": "libjava/classpath/gnu/CORBA/_PolicyImplBase.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2F_PolicyImplBase.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2F_PolicyImplBase.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2F_PolicyImplBase.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "729386da2c48be3111c5a6f16051d6a8fee6e626", "filename": "libjava/classpath/gnu/CORBA/gnuAny.java", "status": "modified", "additions": 81, "deletions": 58, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "8cf9ccf7bc42a9673348640580cf043555ef1789", "filename": "libjava/classpath/gnu/CORBA/gnuCodecFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "68584c3891cb41283441114094d0a6f3f4c5886e", "filename": "libjava/classpath/gnu/CORBA/gnuContextList.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "5f0c0c9f50dc02d33bb47c8c1893194519acae8a", "filename": "libjava/classpath/gnu/CORBA/gnuExceptionList.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3645a3e8dd226a67900af348b7890d75bf47e4ae", "filename": "libjava/classpath/gnu/CORBA/gnuNVList.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuNVList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuNVList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuNVList.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "5adf741292626647074f7504e51be02e555b6f06", "filename": "libjava/classpath/gnu/CORBA/gnuRequest.java", "status": "modified", "additions": 70, "deletions": 64, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "8263113ec2a8465e8a43e37a27d01b54fb4a590f", "filename": "libjava/classpath/gnu/CORBA/gnuValueHolder.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuValueHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuValueHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuValueHolder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7797dcbf91775163682c8a5bde0cefa9685354e4", "filename": "libjava/classpath/gnu/CORBA/interfaces/SocketFactory.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2FSocketFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2FSocketFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2FSocketFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "101475b2da1933b98f57aebfd7562e754ca1d707", "filename": "libjava/classpath/gnu/CORBA/interfaces/package.html", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Finterfaces%2Fpackage.html?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3cb8ebfb39346b9c94941ce5401057f37074aad8", "filename": "libjava/classpath/gnu/CORBA/typecodes/AliasTypeCode.java", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FAliasTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FAliasTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FAliasTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/aliasTypeCode.java"}, {"sha": "bb798101a99f590c486344a1e8532aad29b414b0", "filename": "libjava/classpath/gnu/CORBA/typecodes/ArrayTypeCode.java", "status": "renamed", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FArrayTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FArrayTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FArrayTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/primitiveArrayTypeCode.java"}, {"sha": "c5fae63bd2888422cabf22911ccb5277462ac710", "filename": "libjava/classpath/gnu/CORBA/typecodes/FixedTypeCode.java", "status": "renamed", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/fixedTypeCode.java"}, {"sha": "0a907844ad90380d6e1f28ea1ee0c72207d85de6", "filename": "libjava/classpath/gnu/CORBA/typecodes/GeneralTypeCode.java", "status": "renamed", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FGeneralTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FGeneralTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FGeneralTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/generalTypeCode.java"}, {"sha": "22d39a82c9741bc1a5ecb384a3b9c2a4cf7c064c", "filename": "libjava/classpath/gnu/CORBA/typecodes/PrimitiveTypeCode.java", "status": "renamed", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FPrimitiveTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FPrimitiveTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FPrimitiveTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/primitiveTypeCode.java"}, {"sha": "89f3425465bbc275f44af319f510dc99d4487559", "filename": "libjava/classpath/gnu/CORBA/typecodes/RecordTypeCode.java", "status": "renamed", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecordTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecordTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecordTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/recordTypeCode.java"}, {"sha": "0e6ac375e50b88577f58d29506d045c560d2080f", "filename": "libjava/classpath/gnu/CORBA/typecodes/RecursiveTypeCode.java", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/recursiveTypeCode.java"}, {"sha": "2d1689b456054c3681dde40e8de2fb9a9c74128f", "filename": "libjava/classpath/gnu/CORBA/typecodes/StringTypeCode.java", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FStringTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FStringTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FStringTypeCode.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/CORBA/stringTypeCode.java"}, {"sha": "891b3b96574d91707abecdee18aa81f238c3167b", "filename": "libjava/classpath/gnu/CORBA/typecodes/package.html", "status": "renamed", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2Fpackage.html?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/java/net/protocol/http/event/package.html"}, {"sha": "6307b8abd796610c66067956deb9ca43bdb59b89", "filename": "libjava/classpath/gnu/classpath/ByteArray.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FByteArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FByteArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FByteArray.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "524f04099aab7b5286ec321fc4519f9f69e7b188", "filename": "libjava/classpath/gnu/classpath/SystemProperties.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FSystemProperties.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "b0d9b6565621b0cac5abb7e833bc9a731c2e8a65", "filename": "libjava/classpath/gnu/classpath/jdwp/event/VmDeathEvent.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FVmDeathEvent.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d029e61e10d94d92e2c9ea8b4f98c79cbf23729d", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/StepFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "83ad4094660ffce6d193b0a8eabc741d192d4c61", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/ThreadOnlyFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FThreadOnlyFilter.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a9dc6cc815faf05fe7e70c636900a91fbd2746fe", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ArrayReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "b77c3a833a2f03fd67d7bb1b35a1e73609cf4297", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ArrayTypeCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FArrayTypeCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "cc591b17dd1ebb06195f78e3100539926f717ba2", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ClassLoaderReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassLoaderReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassLoaderReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassLoaderReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "cfec20bc7cea4aa4c054754994b88d0afb367e71", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ClassObjectReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassObjectReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassObjectReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassObjectReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "f60da7b702157f0e6e15bbd9025182d39fea9f01", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ClassTypeCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FClassTypeCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "e4b1b602ef5aeac0bd1c08f526642ca4d7fcf47c", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/EventRequestCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FEventRequestCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "53308d7c11bbc6cc0f7f7513ebe815f70cc2d399", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/MethodCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FMethodCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FMethodCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FMethodCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ef421ea5b286ab75378e9823eda8b0a31dd51d1d", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ObjectReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7338480fcab91cdeb5fee038c8f2293ceab89227", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "7890a8e4b1bc39b0a9d434d1ee4018d40ba1a611", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/StackFrameCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStackFrameCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStackFrameCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStackFrameCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "13fde0ac732e95d15cd5098c1f2195ecbcb3bc0a", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/StringReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ba36251f6658572f25c7e4c7a57c45055ab48fbf", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ThreadGroupReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadGroupReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "559e405b65a342465fb7d906fb3354f253b315e0", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ThreadReferenceCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FThreadReferenceCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "6bdb236818c99fc1410138a2c4a2a4f493bae58f", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.java", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ca7b5511853d2ad62589e863e8cff4f96687278c", "filename": "libjava/classpath/gnu/java/awt/AWTUtilities.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "99f90c9f85db3b0db499fb50f357dc1e9757948f", "filename": "libjava/classpath/gnu/java/awt/EmbeddedWindow.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c79f403edfd1aec691aae665c98122f52c3e4a2d", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontMetrics.java", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d80306c8a82ab5983c476cef5e96f082d8def7eb", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c9ed3012658a9fe21bd18ad378a74c1cd66df1f9", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 45, "deletions": 8, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c3ae581b14f83fc9394f6c70acf014888ac8c2ac", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkTextLayout.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ed7dc74d22e6628ecd589e0685f7e7c7b553b78f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "fe0dae70dd0dd8f90463dd89b658e9a7c8339bad", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "f5ba3ad2c5e2da2c14fde9177e9fc3c4e7561d3e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "99cca0cffa7dbcc3940897b0bc4c3cd0f23f376d", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "591b528035dad08d9c9ab3ad9076596778801c58", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtToolkit.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtToolkit.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "583d2f5cbeed3fd61eda13232a5be7459d9035b2", "filename": "libjava/classpath/gnu/java/beans/DummyAppletContext.java", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDummyAppletContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDummyAppletContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDummyAppletContext.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a675e8c901254667d03b5a420b5e8a0a22b65855", "filename": "libjava/classpath/gnu/java/beans/decoder/BooleanHandler.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2Fdecoder%2FBooleanHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2Fdecoder%2FBooleanHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2Fdecoder%2FBooleanHandler.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "79ce6e8f470365e76c242649fafa9a5c0a254f9b", "filename": "libjava/classpath/gnu/java/io/PlatformHelper.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "81a3c7d1fd4c58d9279f288e2bb944ff4f290e26", "filename": "libjava/classpath/gnu/java/net/LineInputStream.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "680e45d3e49795fba568cd96bd1604904bdc1e4d", "filename": "libjava/classpath/gnu/java/net/protocol/http/ByteArrayResponseBodyReader.java", "status": "removed", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FByteArrayResponseBodyReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FByteArrayResponseBodyReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FByteArrayResponseBodyReader.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af"}, {"sha": "a4487d146e810645ed4b44ce5146ad79d8049e85", "filename": "libjava/classpath/gnu/java/net/protocol/http/ChunkedInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "0be7a097e5b77026ed7e516b9bd769e13bc97d5c", "filename": "libjava/classpath/gnu/java/net/protocol/http/Cookie.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "573a7918d82de2c5f898a575acf1a81c4354c9d0", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPConnection.java", "status": "modified", "additions": 77, "deletions": 97, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d5da7d61ae4f623bab205bd0fde23f85c8aa2dc5", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPURLConnection.java", "status": "modified", "additions": 60, "deletions": 48, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "9306fc411c921cf9ad1a1dac3df188d7e2612994", "filename": "libjava/classpath/gnu/java/net/protocol/http/Headers.java", "status": "modified", "additions": 34, "deletions": 51, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "16cf56a2919d10e14c1fc9875da8e7c8fdee1e19", "filename": "libjava/classpath/gnu/java/net/protocol/http/LimitedLengthInputStream.java", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "b9441b3f7369e3144c86e43595b46aff5c72f276", "filename": "libjava/classpath/gnu/java/net/protocol/http/Request.java", "status": "modified", "additions": 77, "deletions": 114, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "58d74542c308ce91a9abee086d65faa5b1b984c7", "filename": "libjava/classpath/gnu/java/net/protocol/http/Response.java", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "49e1b376f0f36ebbd29fb3deb5e325a83058d46a", "filename": "libjava/classpath/gnu/java/net/protocol/http/ResponseBodyReader.java", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseBodyReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseBodyReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseBodyReader.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af"}, {"sha": "c880fbce6f0361c5cfd4a784836799305ff07d49", "filename": "libjava/classpath/gnu/java/net/protocol/http/event/RequestListener.java", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2Fevent%2FRequestListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2Fevent%2FRequestListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2Fevent%2FRequestListener.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af"}, {"sha": "e854874208ac505fad8f75edbfa5c1c29fa23636", "filename": "libjava/classpath/gnu/java/net/protocol/jar/Connection.java", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "fcddbd6c3510daf6c1f62b96ff53431d0c3893b6", "filename": "libjava/classpath/gnu/java/nio/SocketChannelImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "466f3dd558758983164494a29d2502965741e647", "filename": "libjava/classpath/gnu/java/nio/channels/FileChannelImpl.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "fa1dbc412f4c33db71058b1fe5bf0442d456c770", "filename": "libjava/classpath/gnu/java/nio/charset/UTF_16Decoder.java", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "63f2855d520f5ad1a4238f9de664731b12d612f3", "filename": "libjava/classpath/gnu/java/nio/charset/UnicodeLittle.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUnicodeLittle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUnicodeLittle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUnicodeLittle.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "873e9ecda419526e4d8f3825de2738e266bee8f5", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvProvider.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "9f18d129e7187a2c7a9e7b81ba2351e75b6983de", "filename": "libjava/classpath/gnu/java/rmi/dgc/DGCImpl_Stub.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl_Stub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl_Stub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl_Stub.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "2e1e7805531b9b1341bdbc94bf3eb5c9ef89adf0", "filename": "libjava/classpath/gnu/java/rmi/server/RMIClassLoaderImpl.java", "status": "added", "additions": 350, "deletions": 0, "changes": 350, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "587d57fc7bbb0b2de33e56388873878844619b37", "filename": "libjava/classpath/gnu/java/rmi/server/RMIObjectInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a8da72563203f518ea77cfbba1551abfcee96241", "filename": "libjava/classpath/gnu/java/rmi/server/UnicastServer.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3064f041b9d3938d81f96876721d974128426c06", "filename": "libjava/classpath/gnu/java/security/PolicyFile.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "02b1c03776247cd1cfc1e6ebcf04caa47230cb90", "filename": "libjava/classpath/gnu/java/security/der/BitString.java", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "09ec1e2dff0b08e6af8b767edb7fb21a1552d839", "filename": "libjava/classpath/gnu/java/security/der/DERReader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "591fc688cc0ede80f7cf719106e1c0862df44f2d", "filename": "libjava/classpath/gnu/java/security/provider/DiffieHellmanKeyFactoryImpl.java", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "1b68d274fa8bdaa9ea6a2e01008b44894be348d9", "filename": "libjava/classpath/gnu/java/security/provider/DiffieHellmanKeyPairGeneratorImpl.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyPairGeneratorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyPairGeneratorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyPairGeneratorImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "e553bbcbd8a1ea8914170d0af7df80118a867fbc", "filename": "libjava/classpath/gnu/java/security/provider/Gnu.java", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d8f5c6158e3f9d062566c9c024e804b17871e894", "filename": "libjava/classpath/gnu/java/security/x509/ext/BasicConstraints.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FBasicConstraints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FBasicConstraints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FBasicConstraints.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "97097a2f38006010f0f143ff5ac8a6a2c5501cfe", "filename": "libjava/classpath/gnu/java/security/x509/ext/Extension.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FExtension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FExtension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FExtension.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "4afd8ae66111ca7a548ea732fe2f0c00431a6c85", "filename": "libjava/classpath/gnu/java/text/BaseBreakIterator.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FBaseBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FBaseBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FBaseBreakIterator.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "4797af7cf798168a25a851019ea31b70247c7d40", "filename": "libjava/classpath/gnu/javax/crypto/DiffieHellmanImpl.java", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FDiffieHellmanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FDiffieHellmanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FDiffieHellmanImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "f70cd7d2aec0366744837f3d3aa1f06c2e093a3b", "filename": "libjava/classpath/gnu/javax/crypto/GnuDHPrivateKey.java", "status": "renamed", "additions": 42, "deletions": 33, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FGnuDHPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FGnuDHPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FGnuDHPrivateKey.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/java/net/protocol/http/event/ConnectionEvent.java"}, {"sha": "0a4c29db6f13b5589d35b5c0a5896162dc9b6bbe", "filename": "libjava/classpath/gnu/javax/crypto/RSACipherImpl.java", "status": "added", "additions": 311, "deletions": 0, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FRSACipherImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FRSACipherImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2FRSACipherImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c4a582bfa200f9e7e45b235fc155ed5a534b5268", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPDecoder.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPDecoder.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d3c62e7597ee0dab86157c2d6d8341c264f3744d", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPException.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPException.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "246e0eacfeb7c9abf0c1569eb1021368b8ae16c4", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPFileHeader.java", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPFileHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPFileHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPFileHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "3341d4b4aedc7f9283fb80ae569e31f2877fbd75", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPImageReader.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "b175c7d076beaf67d59359064e738fffa6be3ca3", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPImageReaderSpi.java", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReaderSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReaderSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageReaderSpi.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "edcb4e644cc63d1ea2f6ddcc702121205af5bc3d", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPInfoHeader.java", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPInfoHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPInfoHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPInfoHeader.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "702c93ab3cae77b004e801fa49ddc7de9706639a", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeBF16.java", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ee64f4b0eacb1c5505df86b45aec443ce21150e3", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeBF32.java", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF32.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF32.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF32.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "9ca82d9ee4a84dbc04c292cf89fbc2da2b653ec0", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRGB1.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB1.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB1.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB1.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "2a910cb3063bffc8a25e6dd70df17b5a29f8fd6a", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRGB24.java", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB24.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB24.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB24.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "a10d390ab82df9c55b79080c3dcd288c9f1790ce", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRGB4.java", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB4.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "dfe4a19e8be8c910c2e25ad73561f3b9034dad87", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRGB8.java", "status": "renamed", "additions": 48, "deletions": 40, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRGB8.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89", "previous_filename": "libjava/classpath/gnu/javax/rmi/CORBA/ValueHandlerImpl.java"}, {"sha": "55d314f05f1e2df51890be9caa8ba0b51b88898e", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRLE4.java", "status": "added", "additions": 176, "deletions": 0, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE4.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "1d00e6751d06246fab8d444741bdff4c025e66ca", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeRLE8.java", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeRLE8.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "e80cabf6b2b8bba9cc9499456a0a4f9a90b6494e", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/CorbaInput.java", "status": "added", "additions": 297, "deletions": 0, "changes": 297, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaInput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "1c723407980977a28ba6c9e21b4c03e94cc4e2f9", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/CorbaOutput.java", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FCorbaOutput.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "5bdf7dac933d4747e8a41b83ce1c9b48204418c9", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/DefaultWriteObjectTester.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDefaultWriteObjectTester.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDefaultWriteObjectTester.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDefaultWriteObjectTester.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "0607c9f9626798775a135aad4043c5052a5363bf", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/DelegateFactory.java", "status": "modified", "additions": 54, "deletions": 22, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ea4f73811f07100c344742fac491718d8b405d8d", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java", "status": "modified", "additions": 289, "deletions": 63, "changes": 352, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "91bfa3776dc4243cbbbbded8e4dd902f95b832bf", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/RmiUtilities.java", "status": "added", "additions": 946, "deletions": 0, "changes": 946, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "afc254ddb49155acd0c17e0c80bb0883b7fb6f1a", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/StubDelegateImpl.java", "status": "modified", "additions": 234, "deletions": 28, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "70e751a6f2cd89e23bc57a6f07fec95319078e3e", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/TieTargetRecord.java", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FTieTargetRecord.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FTieTargetRecord.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FTieTargetRecord.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "66a4e24ff18c7e19125dcd35ebbabffb9224c996", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/UtilDelegateImpl.java", "status": "modified", "additions": 658, "deletions": 56, "changes": 714, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "dc3b3cd6ee8c8d2f5cd2d7f5922b37d717fde6ad", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/ValueHandlerDelegateImpl.java", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerDelegateImpl.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "4a841387dd7617816a889b19f5d58c7530e57758", "filename": "libjava/classpath/gnu/javax/rmi/PortableServer.java", "status": "removed", "additions": 0, "deletions": 141, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e549bfaaec38f68307e7f34e46ea57ea1809af/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java?ref=02e549bfaaec38f68307e7f34e46ea57ea1809af"}, {"sha": "fb9e684d096ffa3b9c11f97ec05e82c5032ff7e6", "filename": "libjava/classpath/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.java", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaInputPortDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaInputPortDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaInputPortDevice.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "4951be6059ca7b83f462d9662fcf9a7f79291010", "filename": "libjava/classpath/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.java", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiDeviceProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiDeviceProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiDeviceProvider.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "c91f1e39851630a8c7c0f3a8f62f300a8118639e", "filename": "libjava/classpath/gnu/javax/sound/midi/alsa/AlsaMidiSequencerDevice.java", "status": "added", "additions": 519, "deletions": 0, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiSequencerDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiSequencerDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaMidiSequencerDevice.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "bc5a5593967207b84704ba4e2d98625fa017ed03", "filename": "libjava/classpath/gnu/javax/sound/midi/alsa/AlsaOutputPortDevice.java", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaOutputPortDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaOutputPortDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaOutputPortDevice.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "d666be1f1ba7ae9f9c8860329e6f05ad2c5e1be0", "filename": "libjava/classpath/gnu/javax/sound/midi/alsa/AlsaPortDevice.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaPortDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaPortDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Falsa%2FAlsaPortDevice.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "baf61732d1867be2735ffeaea092fb4743324799", "filename": "libjava/classpath/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "ca09b30507855ce0ef42e0785ed8773b987c8f37", "filename": "libjava/classpath/gnu/javax/sound/midi/dssi/DSSISynthesizer.java", "status": "added", "additions": 745, "deletions": 0, "changes": 745, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSISynthesizer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "011ca3c6a3d95e62325ef6d35ed45488098accfa", "filename": "libjava/classpath/gnu/xml/aelfred2/JAXPFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FJAXPFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FJAXPFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FJAXPFactory.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "6864ff659711587f0b6c393b4d8a460752cf9625", "filename": "libjava/classpath/gnu/xml/aelfred2/SAXDriver.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FSAXDriver.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "29b8dc72e536b91fec1aba7f73459746e11c3af8", "filename": "libjava/classpath/gnu/xml/dom/DomDocument.java", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "03420c463e8f6bd563d9cb22fe15e287204af67b", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeDocument.java", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}, {"sha": "8391767490c0c3ab01e69347335dc2ea53278dd4", "filename": "libjava/classpath/gnu/xml/pipeline/ValidationConsumer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FValidationConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f523f3a1047919d3563daf1ef47ba87336ebe89/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FValidationConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FValidationConsumer.java?ref=8f523f3a1047919d3563daf1ef47ba87336ebe89"}]}