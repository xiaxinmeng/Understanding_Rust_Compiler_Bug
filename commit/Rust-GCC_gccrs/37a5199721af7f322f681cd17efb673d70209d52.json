{"sha": "37a5199721af7f322f681cd17efb673d70209d52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhNTE5OTcyMWFmN2YzMjJmNjgxY2QxN2VmYjY3M2Q3MDIwOWQ1Mg==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-13T02:43:43Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-13T02:43:43Z"}, "message": "ipa.c: remove static_{ctors,dtors} globals\n\ngcc/ChangeLog:\n\n2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* ipa.c (record_cdtor_fn): Adjust.\n\t(build_cdtor_fns): Likewise.\n\t(ipa_cdtor_merge): Make static_ctors and static_dtors local\n\tvariables.\n\nFrom-SVN: r238281", "tree": {"sha": "6743a0203c0e5509e7021bc68d14dec280c80387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6743a0203c0e5509e7021bc68d14dec280c80387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37a5199721af7f322f681cd17efb673d70209d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a5199721af7f322f681cd17efb673d70209d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a5199721af7f322f681cd17efb673d70209d52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a5199721af7f322f681cd17efb673d70209d52/comments", "author": null, "committer": null, "parents": [{"sha": "3cc578b969fb0000072519ed61312ee6ad0f0197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc578b969fb0000072519ed61312ee6ad0f0197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cc578b969fb0000072519ed61312ee6ad0f0197"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "1e15b9612d574e8fb56b8a1a7cf218116eaf3f18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a5199721af7f322f681cd17efb673d70209d52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a5199721af7f322f681cd17efb673d70209d52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37a5199721af7f322f681cd17efb673d70209d52", "patch": "@@ -1,3 +1,10 @@\n+2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* ipa.c (record_cdtor_fn): Adjust.\n+\t(build_cdtor_fns): Likewise.\n+\t(ipa_cdtor_merge): Make static_ctors and static_dtors local\n+\tvariables.\n+\n 2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* genextract.c (struct accum_extract): Add constructor and make"}, {"sha": "2609e327fd2171b2c1d878b8f2d3e7df9133c00f", "filename": "gcc/ipa.c", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a5199721af7f322f681cd17efb673d70209d52/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a5199721af7f322f681cd17efb673d70209d52/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=37a5199721af7f322f681cd17efb673d70209d52", "patch": "@@ -989,11 +989,6 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   cgraph_build_static_cdtor_1 (which, body, priority, false);\n }\n \n-/* A vector of FUNCTION_DECLs declared as static constructors.  */\n-static vec<tree> static_ctors;\n-/* A vector of FUNCTION_DECLs declared as static destructors.  */\n-static vec<tree> static_dtors;\n-\n /* When target does not have ctors and dtors, we call all constructor\n    and destructor by special initialization/destruction function\n    recognized by collect2.\n@@ -1002,12 +997,12 @@ static vec<tree> static_dtors;\n    destructors and turn them into normal functions.  */\n \n static void\n-record_cdtor_fn (struct cgraph_node *node)\n+record_cdtor_fn (struct cgraph_node *node, vec<tree> *ctors, vec<tree> *dtors)\n {\n   if (DECL_STATIC_CONSTRUCTOR (node->decl))\n-    static_ctors.safe_push (node->decl);\n+    ctors->safe_push (node->decl);\n   if (DECL_STATIC_DESTRUCTOR (node->decl))\n-    static_dtors.safe_push (node->decl);\n+    dtors->safe_push (node->decl);\n   node = cgraph_node::get (node->decl);\n   DECL_DISREGARD_INLINE_LIMITS (node->decl) = 1;\n }\n@@ -1018,7 +1013,7 @@ record_cdtor_fn (struct cgraph_node *node)\n    they are destructors.  */\n \n static void\n-build_cdtor (bool ctor_p, vec<tree> cdtors)\n+build_cdtor (bool ctor_p, const vec<tree> &cdtors)\n {\n   size_t i,j;\n   size_t len = cdtors.length ();\n@@ -1135,20 +1130,20 @@ compare_dtor (const void *p1, const void *p2)\n    functions have magic names which are detected by collect2.  */\n \n static void\n-build_cdtor_fns (void)\n+build_cdtor_fns (vec<tree> *ctors, vec<tree> *dtors)\n {\n-  if (!static_ctors.is_empty ())\n+  if (!ctors->is_empty ())\n     {\n       gcc_assert (!targetm.have_ctors_dtors || in_lto_p);\n-      static_ctors.qsort (compare_ctor);\n-      build_cdtor (/*ctor_p=*/true, static_ctors);\n+      ctors->qsort (compare_ctor);\n+      build_cdtor (/*ctor_p=*/true, *ctors);\n     }\n \n-  if (!static_dtors.is_empty ())\n+  if (!dtors->is_empty ())\n     {\n       gcc_assert (!targetm.have_ctors_dtors || in_lto_p);\n-      static_dtors.qsort (compare_dtor);\n-      build_cdtor (/*ctor_p=*/false, static_dtors);\n+      dtors->qsort (compare_dtor);\n+      build_cdtor (/*ctor_p=*/false, *dtors);\n     }\n }\n \n@@ -1161,14 +1156,16 @@ build_cdtor_fns (void)\n static unsigned int\n ipa_cdtor_merge (void)\n {\n+  /* A vector of FUNCTION_DECLs declared as static constructors.  */\n+  auto_vec<tree, 20> ctors;\n+  /* A vector of FUNCTION_DECLs declared as static destructors.  */\n+  auto_vec<tree, 20> dtors;\n   struct cgraph_node *node;\n   FOR_EACH_DEFINED_FUNCTION (node)\n     if (DECL_STATIC_CONSTRUCTOR (node->decl)\n \t|| DECL_STATIC_DESTRUCTOR (node->decl))\n-       record_cdtor_fn (node);\n-  build_cdtor_fns ();\n-  static_ctors.release ();\n-  static_dtors.release ();\n+       record_cdtor_fn (node, &ctors, &dtors);\n+  build_cdtor_fns (&ctors, &dtors);\n   return 0;\n }\n "}]}