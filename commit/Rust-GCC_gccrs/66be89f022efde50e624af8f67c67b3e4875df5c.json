{"sha": "66be89f022efde50e624af8f67c67b3e4875df5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZiZTg5ZjAyMmVmZGU1MGU2MjRhZjhmNjdjNjdiM2U0ODc1ZGY1Yw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2009-09-17T23:03:55Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2009-09-17T23:03:55Z"}, "message": "re PR c++/39365 (++ operator with volatile bool increments)\n\n2009-09-17  Andrew Pinski  <pinskia@gcc.gnu.org>\n\n        PR c++/39365\n        * typeck.c (cp_build_unary_op): Check TREE_CODE for bools instead of\n        using same_type_p.\n        (convert_for_assignment): Likewise.\n        * cvt.c (type_promotes_to): Likewise.\n\n2009-09-17  Andrew Pinski  <pinskia@gcc.gnu.org>\n\n        PR c++/39365\n        * g++.dg/expr/bool3.C: New test.\n        * g++.dg/expr/bool4.C: New test.\n\nFrom-SVN: r151823", "tree": {"sha": "f0fd7e2928c9eb9dc2b97430594e87df6200f816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0fd7e2928c9eb9dc2b97430594e87df6200f816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66be89f022efde50e624af8f67c67b3e4875df5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66be89f022efde50e624af8f67c67b3e4875df5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66be89f022efde50e624af8f67c67b3e4875df5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66be89f022efde50e624af8f67c67b3e4875df5c/comments", "author": null, "committer": null, "parents": [{"sha": "695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695a8e6210f36efd711a23ab4b2bd4f1cbf8a857"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "8bf0dde422651b3b2234b9e91697d45aa2e2cbd1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -1,3 +1,9 @@\n+2009-09-17  Andrew Pinski  <pinskia@gcc.gnu.org>\n+\n+\tPR c++/39365\n+\t* g++.dg/expr/bool3.C: New test.\n+\t* g++.dg/expr/bool4.C: New test.\n+\n 2009-09-14  Richard Henderson  <rth@redhat.com>\n             Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "aff002dc6666a79ed94df2cc8171710c8fc1bb35", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -1287,7 +1287,7 @@ type_promotes_to (tree type)\n \n   /* bool always promotes to int (not unsigned), even if it's the same\n      size.  */\n-  if (type == boolean_type_node)\n+  if (TREE_CODE (type) == BOOLEAN_TYPE)\n     type = integer_type_node;\n \n   /* Normally convert enums to int, but convert wide enums to something"}, {"sha": "059511396c5f538203a8efc365a208b02e7befc4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -4556,7 +4556,7 @@ cp_build_unary_op (enum tree_code code, tree xarg, int noconvert,\n \t  return error_mark_node;\n \n \t/* Forbid using -- on `bool'.  */\n-\tif (same_type_p (declared_type, boolean_type_node))\n+\tif (TREE_CODE (declared_type) == BOOLEAN_TYPE)\n \t  {\n \t    if (code == POSTDECREMENT_EXPR || code == PREDECREMENT_EXPR)\n \t      {\n@@ -6787,7 +6787,7 @@ convert_for_assignment (tree type, tree rhs,\n   /* If -Wparentheses, warn about a = b = c when a has type bool and b\n      does not.  */\n   if (warn_parentheses\n-      && type == boolean_type_node\n+      && TREE_CODE (type) == BOOLEAN_TYPE\n       && TREE_CODE (rhs) == MODIFY_EXPR\n       && !TREE_NO_WARNING (rhs)\n       && TREE_CODE (TREE_TYPE (rhs)) != BOOLEAN_TYPE"}, {"sha": "c53270b79ce5e0fb398225113954b4d99d652317", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -1,3 +1,11 @@\n+2009-09-17  Andrew Pinski  <pinskia@gcc.gnu.org>\n+\n+\tPR c++/39365\n+\t* typeck.c (cp_build_unary_op): Check TREE_CODE for bools instead of\n+\tusing same_type_p.\n+\t(convert_for_assignment): Likewise.\n+\t* cvt.c (type_promotes_to): Likewise.\n+\n 2009-09-17  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc/testsuite/gcc.dg/dfp/dfp-dbg.h: Define EXTERN."}, {"sha": "61669e27befd6d9fc59708afda3c390b68974618", "filename": "gcc/testsuite/g++.dg/expr/bool3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool3.C?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do run }\n+// PR C++/29295\n+// make sure that a typedef for a bool will have the\n+//  the same results as a bool itself.\n+\n+extern \"C\" void abort();\n+typedef volatile bool my_bool;\n+int main()\n+{ \n+  my_bool b = false;\n+  int i;\n+\n+  b++;\n+  b++;\n+  i = b;\n+  if (i != 1)\n+    abort ();\n+  return 0;\n+}\n+\n+"}, {"sha": "dce51ec332e5217d1d6efb807e1a234ed91beca1", "filename": "gcc/testsuite/g++.dg/expr/bool4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66be89f022efde50e624af8f67c67b3e4875df5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool4.C?ref=66be89f022efde50e624af8f67c67b3e4875df5c", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// make sure that a typedef for a bool will have the\n+//  the same results as a bool itself.\n+\n+\n+typedef volatile bool my_bool;\n+int main()\n+{\n+  my_bool b = false;\n+  b--; // { dg-error \"\" }\n+  return 0;\n+}\n+"}]}