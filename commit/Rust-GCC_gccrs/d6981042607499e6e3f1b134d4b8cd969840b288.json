{"sha": "d6981042607499e6e3f1b134d4b8cd969840b288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5ODEwNDI2MDc0OTllNmUzZjFiMTM0ZDRiOGNkOTY5ODQwYjI4OA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2012-12-06T01:38:00Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2012-12-06T01:38:00Z"}, "message": "pa.md: Use \"const_int 0\" instead of match_test to simplify opaque cond in all call insns.\n\n\t* config/pa/pa.md: Use \"const_int 0\" instead of match_test to simplify\n\topaque cond in all call insns.\n\nFrom-SVN: r194235", "tree": {"sha": "fb8bb8f1def3b6c4d72ed5ba02adaaefc0199488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb8bb8f1def3b6c4d72ed5ba02adaaefc0199488"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6981042607499e6e3f1b134d4b8cd969840b288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6981042607499e6e3f1b134d4b8cd969840b288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6981042607499e6e3f1b134d4b8cd969840b288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6981042607499e6e3f1b134d4b8cd969840b288/comments", "author": null, "committer": null, "parents": [{"sha": "955948756e87ce781c96fe3a5051ef66f1d54cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/955948756e87ce781c96fe3a5051ef66f1d54cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/955948756e87ce781c96fe3a5051ef66f1d54cf9"}], "stats": {"total": 59, "additions": 32, "deletions": 27}, "files": [{"sha": "f10efac9a182c02c4a9917bcb5cfeb2591e4b6e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6981042607499e6e3f1b134d4b8cd969840b288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6981042607499e6e3f1b134d4b8cd969840b288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6981042607499e6e3f1b134d4b8cd969840b288", "patch": "@@ -1,3 +1,8 @@\n+2012-12-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* config/pa/pa.md: Use \"const_int 0\" instead of match_test to simplify\n+\topaque cond in all call insns.\n+\n 2012-12-05  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/55604"}, {"sha": "9c6a361c6b5cc5792abb7d6e9f3cdee827abec5b", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6981042607499e6e3f1b134d4b8cd969840b288/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6981042607499e6e3f1b134d4b8cd969840b288/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=d6981042607499e6e3f1b134d4b8cd969840b288", "patch": "@@ -5384,7 +5384,7 @@\n   \"* return pa_output_mul_insn (0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_insn \"\"\n@@ -5397,7 +5397,7 @@\n   \"* return pa_output_mul_insn (0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_expand \"muldi3\"\n@@ -5490,7 +5490,7 @@\n    return pa_output_div_insn (operands, 0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_insn \"\"\n@@ -5506,7 +5506,7 @@\n    return pa_output_div_insn (operands, 0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_expand \"udivsi3\"\n@@ -5551,7 +5551,7 @@\n    return pa_output_div_insn (operands, 1, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_insn \"\"\n@@ -5567,7 +5567,7 @@\n    return pa_output_div_insn (operands, 1, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_expand \"modsi3\"\n@@ -5608,7 +5608,7 @@\n   return pa_output_mod_insn (0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_insn \"\"\n@@ -5623,7 +5623,7 @@\n   return pa_output_mod_insn (0, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_expand \"umodsi3\"\n@@ -5664,7 +5664,7 @@\n   return pa_output_mod_insn (1, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n (define_insn \"\"\n@@ -5679,7 +5679,7 @@\n   return pa_output_mod_insn (1, insn);\"\n   [(set_attr \"type\" \"milli\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_millicode_call (insn)\")))])\n \n ;;- and instructions\n@@ -7209,7 +7209,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n (define_insn \"call_symref_pic\"\n@@ -7285,7 +7285,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -7369,7 +7369,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n (define_insn \"call_reg\"\n@@ -7385,7 +7385,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -7462,7 +7462,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -7545,7 +7545,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 12)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 12)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n (define_expand \"call_value\"\n@@ -7673,7 +7673,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n (define_insn \"call_val_symref_pic\"\n@@ -7755,7 +7755,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -7845,7 +7845,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 0)\")))])\n \n (define_insn \"call_val_reg\"\n@@ -7862,7 +7862,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -7945,7 +7945,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n ;; This pattern is split if it is necessary to save and restore the\n@@ -8034,7 +8034,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"dyncall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 12)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 12)]\n \t      (symbol_ref \"pa_attr_length_indirect_call (insn)\")))])\n \n ;; Call subroutine returning any type.\n@@ -8130,7 +8130,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"sibcall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 1)\")))])\n \n (define_insn \"sibcall_internal_symref_64bit\"\n@@ -8147,7 +8147,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"sibcall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 1)\")))])\n \n (define_expand \"sibcall_value\"\n@@ -8218,7 +8218,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"sibcall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 1)\")))])\n \n (define_insn \"sibcall_value_internal_symref_64bit\"\n@@ -8236,7 +8236,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"sibcall\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 8)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 8)]\n \t      (symbol_ref \"pa_attr_length_call (insn, 1)\")))])\n \n (define_insn \"nop\"\n@@ -9275,7 +9275,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n }\"\n   [(set_attr \"type\" \"sh_func_adrs\")\n    (set (attr \"length\")\n-\t(cond [(and (match_test \"0\") (eq (const_int 0) (pc))) (const_int 28)]\n+\t(cond [(and (const_int 0) (eq (const_int 0) (pc))) (const_int 28)]\n \t      (plus (symbol_ref \"pa_attr_length_millicode_call (insn)\")\n \t\t    (const_int 20))))])\n "}]}