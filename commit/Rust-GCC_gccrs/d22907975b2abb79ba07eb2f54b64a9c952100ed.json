{"sha": "d22907975b2abb79ba07eb2f54b64a9c952100ed", "node_id": "C_kwDOANBUbNoAKGQyMjkwNzk3NWIyYWJiNzliYTA3ZWIyZjU0YjY0YTljOTUyMTAwZWQ", "commit": {"author": {"name": "Jiang Haochen", "email": "haochen.jiang@intel.com", "date": "2021-12-21T08:12:02Z"}, "committer": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2021-12-21T08:30:16Z"}, "message": "i386: Add missing BMI intrinsic to align with clang\n\ngcc/ChangeLog:\n\n\t* config/i386/bmiintrin.h (_tzcnt_u16): New intrinsic.\n\t(_andn_u32): Ditto.\n\t(_andn_u64): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/bmi-1.c: Add test for new intrinsic.\n\t* gcc.target/i386/bmi-2.c: Ditto.\n\t* gcc.target/i386/bmi-3.c: Ditto.", "tree": {"sha": "d489d6dc5e44e999e2ba93035ded8b925263bcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d489d6dc5e44e999e2ba93035ded8b925263bcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d22907975b2abb79ba07eb2f54b64a9c952100ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22907975b2abb79ba07eb2f54b64a9c952100ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22907975b2abb79ba07eb2f54b64a9c952100ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22907975b2abb79ba07eb2f54b64a9c952100ed/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fad101f3063d722e3348d07dc93cf737f8709e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fad101f3063d722e3348d07dc93cf737f8709e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fad101f3063d722e3348d07dc93cf737f8709e4"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "92450a644ebc9c26852ba74c3ad76f945bb9451f", "filename": "gcc/config/i386/bmiintrin.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Fconfig%2Fi386%2Fbmiintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Fconfig%2Fi386%2Fbmiintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbmiintrin.h?ref=d22907975b2abb79ba07eb2f54b64a9c952100ed", "patch": "@@ -40,12 +40,24 @@ __tzcnt_u16 (unsigned short __X)\n   return __builtin_ia32_tzcnt_u16 (__X);\n }\n \n+extern __inline unsigned short __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_tzcnt_u16 (unsigned short __X)\n+{\n+  return __builtin_ia32_tzcnt_u16 (__X);\n+}\n+\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __andn_u32 (unsigned int __X, unsigned int __Y)\n {\n   return ~__X & __Y;\n }\n \n+extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_andn_u32 (unsigned int __X, unsigned int __Y)\n+{\n+  return __andn_u32 (__X, __Y);\n+}\n+\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __bextr_u32 (unsigned int __X, unsigned int __Y)\n {\n@@ -114,6 +126,12 @@ __andn_u64 (unsigned long long __X, unsigned long long __Y)\n   return ~__X & __Y;\n }\n \n+extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_andn_u64 (unsigned long long __X, unsigned long long __Y)\n+{\n+  return __andn_u64 (__X, __Y);\n+}\n+\n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __bextr_u64 (unsigned long long __X, unsigned long long __Y)\n {"}, {"sha": "141adaac016476a5b30872b21962bb6e6d4429a5", "filename": "gcc/testsuite/gcc.target/i386/bmi-1.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-1.c?ref=d22907975b2abb79ba07eb2f54b64a9c952100ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fno-ipa-icf -mbmi \" } */\n-/* { dg-final { scan-assembler \"andn\\[^\\\\n]*eax\" } } */\n+/* { dg-final { scan-assembler-times \"andn\\[^\\\\n]*eax\" 2 } } */\n /* { dg-final { scan-assembler-times \"bextr\\[ \\\\t]+\\[^\\\\n]*eax\" 2 } } */\n /* { dg-final { scan-assembler-times \"blsi\\[^\\\\n]*eax\" 2 } } */\n /* { dg-final { scan-assembler-times \"blsmsk\\[^\\\\n]*eax\" 2 } } */\n@@ -15,6 +15,12 @@ func_andn32 (unsigned int X, unsigned int Y)\n   return __andn_u32(X, Y);\n }\n \n+unsigned int\n+func_andn32_2 (unsigned int X, unsigned int Y)\n+{\n+  return _andn_u32(X, Y);\n+}\n+\n unsigned int\n func_bextr32 (unsigned int X, unsigned int Y)\n {"}, {"sha": "3f9052a499171f83c83b059c29029d8eecac6a64", "filename": "gcc/testsuite/gcc.target/i386/bmi-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c?ref=d22907975b2abb79ba07eb2f54b64a9c952100ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! ia32  } } } */\n /* { dg-options \"-O2 -fno-ipa-icf -mbmi \" } */\n-/* { dg-final { scan-assembler \"andn\\[^\\\\n]*rax\" } } */\n+/* { dg-final { scan-assembler-times \"andn\\[^\\\\n]*rax\" 2 } } */\n /* { dg-final { scan-assembler-times \"bextr\\[ \\\\t]+\\[^\\\\n]*rax\" 2 } } */\n /* { dg-final { scan-assembler-times \"blsi\\[^\\\\n]*rax\" 2 } } */\n /* { dg-final { scan-assembler-times \"blsmsk\\[^\\\\n]*rax\" 2 } } */\n@@ -15,6 +15,12 @@ func_andn64 (unsigned long long X, unsigned long long Y)\n   return __andn_u64 (X, Y);\n }\n \n+unsigned long long\n+func_andn64_2 (unsigned long long X, unsigned long long Y)\n+{\n+  return _andn_u64 (X, Y);\n+}\n+\n unsigned long long\n func_bextr64 (unsigned long long X, unsigned long long Y)\n {"}, {"sha": "0b91bc25bf8eeb367f0d30b0ebaf55a41184df23", "filename": "gcc/testsuite/gcc.target/i386/bmi-3.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22907975b2abb79ba07eb2f54b64a9c952100ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-3.c?ref=d22907975b2abb79ba07eb2f54b64a9c952100ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mbmi \" } */\n-/* { dg-final { scan-assembler \"tzcntw\\[^\\\\n]*(%|)ax\" } } */\n+/* { dg-final { scan-assembler-times \"tzcntw\\[^\\\\n]*%?ax\" 2 } } */\n \n #include <x86intrin.h>\n \n@@ -9,3 +9,9 @@ func_tzcnt16 (unsigned short X)\n {\n   return __tzcnt_u16(X);\n }\n+\n+unsigned short\n+func_tzcnt16_2 (unsigned short X)\n+{\n+  return _tzcnt_u16(X);\n+}"}]}