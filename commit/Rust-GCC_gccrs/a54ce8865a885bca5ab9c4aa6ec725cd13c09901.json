{"sha": "a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "node_id": "C_kwDOANBUbNoAKGE1NGNlODg2NWE4ODViY2E1YWI5YzRhYTZlYzcyNWNkMTNjMDk5MDE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-03T16:06:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-12T12:23:10Z"}, "message": "libstdc++: Print assertion messages to stderr [PR59675]\n\nThis replaces the printf used by failed debug assertions with fprintf,\nso we can write to stderr.\n\nTo avoid including <stdio.h> the assert function is moved into the\nlibrary. To avoid programs using a vague linkage definition of the old\ninline function, the function is renamed. Code compiled with old\nversions of GCC might still call the old function, but code compiled\nwith the newer GCC will call the new function and write to stderr.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/59675\n\t* acinclude.m4 (libtool_VERSION): Bump version.\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.30): Add version and\n\texport new symbol.\n\t* configure: Regenerate.\n\t* include/bits/c++config (__replacement_assert): Remove, declare\n\t__glibcxx_assert_fail instead.\n\t* src/c++11/debug.cc (__glibcxx_assert_fail): New function to\n\treplace __replacement_assert, writing to stderr instead of\n\tstdout.\n\t* testsuite/util/testsuite_abi.cc: Update latest version.", "tree": {"sha": "f023249b8da983be57093f004e3eb94cc2d22b29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f023249b8da983be57093f004e3eb94cc2d22b29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68d62cb20637b2faf2c2cc1716a0786b07a6a76f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d62cb20637b2faf2c2cc1716a0786b07a6a76f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d62cb20637b2faf2c2cc1716a0786b07a6a76f"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "4adfdf646acbcb63c9c8bb5199d17ac5c9970366", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -3798,7 +3798,7 @@ changequote([,])dnl\n fi\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:29:0\n+libtool_VERSION=6:30:0\n \n # Everything parsed; figure out what files and settings to use.\n case $enable_symvers in"}, {"sha": "8f3c7b3827ead76b35ccc3d29e8f91563947b92e", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -2397,6 +2397,12 @@ GLIBCXX_3.4.29 {\n \n } GLIBCXX_3.4.28;\n \n+GLIBCXX_3.4.30 {\n+\n+    _ZSt21__glibcxx_assert_fail*;\n+\n+} GLIBCXX_3.4.29;\n+\n # Symbols in the support library (libsupc++) have their own tag.\n CXXABI_1.3 {\n "}, {"sha": "3a572475546f1d8eab8b7b2629eeb33d8bb22134", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -74892,7 +74892,7 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n fi\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:29:0\n+libtool_VERSION=6:30:0\n \n # Everything parsed; figure out what files and settings to use.\n case $enable_symvers in"}, {"sha": "4b7fa6593001f4ca3370f75ffdd7eff3a09d0575", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -526,22 +526,17 @@ namespace std\n   // Avoid the use of assert, because we're trying to keep the <cassert>\n   // include out of the mix.\n   extern \"C++\" _GLIBCXX_NORETURN\n-  inline void\n-  __replacement_assert(const char* __file, int __line,\n-\t\t       const char* __function, const char* __condition)\n-  _GLIBCXX_NOEXCEPT\n-  {\n-    __builtin_printf(\"%s:%d: %s: Assertion '%s' failed.\\n\", __file, __line,\n-\t\t     __function, __condition);\n-    __builtin_abort();\n-  }\n+  void\n+  __glibcxx_assert_fail(const char* __file, int __line,\n+\t\t\tconst char* __function, const char* __condition)\n+  _GLIBCXX_NOEXCEPT;\n }\n-#define __glibcxx_assert_impl(_Condition)\t\t\t       \\\n-  if (__builtin_expect(!bool(_Condition), false))\t\t       \\\n-  {\t\t\t\t\t\t\t\t       \\\n-    __glibcxx_constexpr_assert(false);\t\t\t\t       \\\n-    std::__replacement_assert(__FILE__, __LINE__, __PRETTY_FUNCTION__, \\\n-\t\t\t      #_Condition);\t\t\t       \\\n+#define __glibcxx_assert_impl(_Condition)\t\t\t\t\\\n+  if (__builtin_expect(!bool(_Condition), false))\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    __glibcxx_constexpr_assert(false);\t\t\t\t\t\\\n+    std::__glibcxx_assert_fail(__FILE__, __LINE__, __PRETTY_FUNCTION__,\t\\\n+\t\t\t       #_Condition);\t\t\t\t\\\n   }\n # else // ! VERBOSE_ASSERT\n # define __glibcxx_assert_impl(_Condition)\t\t\\\n@@ -550,7 +545,7 @@ namespace std\n     __glibcxx_constexpr_assert(false);\t\t\t\\\n     __builtin_abort();\t\t\t\t\t\\\n   }\n-#endif\n+# endif\n #endif\n \n #if defined(_GLIBCXX_ASSERTIONS)"}, {"sha": "77cb2a2c7edb1a1bb49692828509c7a4c61eb790", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -33,7 +33,8 @@\n #include <debug/vector>\n \n #include <cassert>\n-#include <cstdio>\n+#include <cstdio>\t// for std::fprintf, stderr\n+#include <cstdlib>\t// for std::abort\n #include <cctype>\t// for std::isspace.\n #include <cstring>\t// for std::strstr.\n \n@@ -43,6 +44,21 @@\n \n #include \"mutex_pool.h\"\n \n+#ifdef _GLIBCXX_VERBOSE_ASSERT\n+namespace std\n+{\n+  [[__noreturn__]]\n+  void\n+  __glibcxx_assert_fail(const char* file, int line,\n+\t\t\tconst char* function, const char* condition) noexcept\n+  {\n+    fprintf(stderr, \"%s:%d: %s: Assertion '%s' failed.\\n\",\n+\t\t      file, line, function, condition);\n+    abort();\n+  }\n+}\n+#endif\n+\n using namespace std;\n \n namespace"}, {"sha": "1ca7da4fcd03b67b6342be14bd22e30aee7766df", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54ce8865a885bca5ab9c4aa6ec725cd13c09901/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=a54ce8865a885bca5ab9c4aa6ec725cd13c09901", "patch": "@@ -210,6 +210,7 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"GLIBCXX_3.4.27\");\n       known_versions.push_back(\"GLIBCXX_3.4.28\");\n       known_versions.push_back(\"GLIBCXX_3.4.29\");\n+      known_versions.push_back(\"GLIBCXX_3.4.30\");\n       known_versions.push_back(\"GLIBCXX_LDBL_3.4.29\");\n       known_versions.push_back(\"GLIBCXX_IEEE128_3.4.29\");\n       known_versions.push_back(\"CXXABI_1.3\");\n@@ -245,7 +246,7 @@ check_version(symbol& test, bool added)\n \ttest.version_status = symbol::incompatible;\n \n       // Check that added symbols are added in the latest pre-release version.\n-      bool latestp = (test.version_name == \"GLIBCXX_3.4.29\"\n+      bool latestp = (test.version_name == \"GLIBCXX_3.4.30\"\n \t  // XXX remove next 3 lines when baselines have been regenerated\n \t  // to include {IEEE128,LDBL} symbols:\n \t\t     || test.version_name == \"GLIBCXX_LDBL_3.4.29\""}]}