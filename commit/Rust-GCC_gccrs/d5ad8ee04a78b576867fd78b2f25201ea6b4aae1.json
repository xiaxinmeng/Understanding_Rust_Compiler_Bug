{"sha": "d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhZDhlZTA0YTc4YjU3Njg2N2ZkNzhiMmYyNTIwMWVhNmI0YWFlMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T10:40:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T10:40:00Z"}, "message": "i386: Fix ix86_add_reg_usage_to_vzeroupper [PR94308]\n\nThe following patch ICEs due to my recent change r10-6451-gb7b3378f91c.\nSince that patch, for explicit vzeroupper in the sources (when an intrinsic\nis used), we start with the *avx_vzeroupper_1 pattern which contains just the\nUNSPECV_VZEROUPPER and no sets/clobbers.  The vzeroupper pass then adds some\nsets to those, but doesn't add clobbers and finally there is an\n&& epilogue_completed splitter that splits this into the *avx_vzeroupper\npattern which has the right number of sets/clobbers (16 on 64-bit, 8 on\n32-bit) + the UNSPECV_VZEROUPPER first.\nThe problem with this testcase on !TARGET_64BIT is that the vzeroupper pass\nadds 8 sets to the pattern, i.e. the maximum number, but INSN_CODE stays\nto be the one of the *avx_vzeroupper_1 pattern.  The splitter doesn't do\nanything here, because it sees the number of rtxes in the PARALLEL already\nthe right count, but during final we see that the *avx_vzeroupper_1 pattern\nhas \"#\" output template and ICE that we forgot to split it.\n\nThe following patch fixes it by forcing re-recognition of the insn after we\nmake the changes to it in ix86_add_reg_usage_to_vzeroupper.  Anything that\nwill call recog_memoized later on will recog it and find out it is in this\ncase already *avx_vzeroupper rather than *avx_vzeroupper_1.\n\n2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94308\n\t* config/i386/i386-features.c (ix86_add_reg_usage_to_vzeroupper): Set\n\tINSN_CODE (insn) to -1 when changing the pattern.\n\n\t* gcc.target/i386/pr94308.c: New test.", "tree": {"sha": "5b7fb4087753fa702ae1a87ef7bcdbdb924ab1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b7fb4087753fa702ae1a87ef7bcdbdb924ab1bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "b2743d65a3777a464f6e58c6a3eda77eb5850e4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94308\n+\t* config/i386/i386-features.c (ix86_add_reg_usage_to_vzeroupper): Set\n+\tINSN_CODE (insn) to -1 when changing the pattern.\n+\n 2020-03-25  Martin Liska  <mliska@suse.cz>\n \n \tPR target/93274"}, {"sha": "66b120d21a7b6215196b968dd9e1b2d93cce58e6", "filename": "gcc/config/i386/i386-features.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Fconfig%2Fi386%2Fi386-features.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Fconfig%2Fi386%2Fi386-features.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.c?ref=d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "patch": "@@ -1792,6 +1792,7 @@ ix86_add_reg_usage_to_vzeroupper (rtx_insn *insn, bitmap live_regs)\n       RTVEC_ELT (vec, j) = gen_rtx_SET (reg, reg);\n     }\n   XVEC (pattern, 0) = vec;\n+  INSN_CODE (insn) = -1;\n   df_insn_rescan (insn);\n }\n "}, {"sha": "5196036f64adbaec8b2f686ebdbfadef545678b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "patch": "@@ -1,3 +1,8 @@\n+2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94308\n+\t* gcc.target/i386/pr94308.c: New test.\n+\n 2020-03-25  Martin Liska  <mliska@suse.cz>\n \n \tPR target/93274"}, {"sha": "1dcbba94762d70fd44db2af4521d52be736ded00", "filename": "gcc/testsuite/gcc.target/i386/pr94308.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94308.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad8ee04a78b576867fd78b2f25201ea6b4aae1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94308.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94308.c?ref=d5ad8ee04a78b576867fd78b2f25201ea6b4aae1", "patch": "@@ -0,0 +1,31 @@\n+/* PR target/94308 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mfpmath=sse -mavx2 -mfma\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+foo (float *x, const float *y, const float *z, unsigned int w)\n+{\n+  unsigned int a;\n+  const unsigned int b = w / 8;\n+  const float *c = y;\n+  const float *d = z;\n+  __m256 e = _mm256_setzero_ps ();\n+  __m256 f, g;\n+  for (a = 0; a < b; a++)\n+    {\n+      f = _mm256_loadu_ps (c);\n+      g = _mm256_loadu_ps (d);\n+      c += 8;\n+      d += 8;\n+      e = _mm256_fmadd_ps (f, g, e);\n+    }\n+  __attribute__ ((aligned (32))) float h[8];\n+  _mm256_storeu_ps (h, e);\n+  _mm256_zeroupper ();\n+  float i = h[0] + h[1] + h[2] + h[3] + h[4] + h[5] + h[6] + h[7];\n+  for (a = b * 8; a < w; a++)\n+    i += (*c++) * (*d++);\n+  *x = i;\n+}"}]}