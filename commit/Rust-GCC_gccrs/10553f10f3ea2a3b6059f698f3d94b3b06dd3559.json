{"sha": "10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1NTNmMTBmM2VhMmEzYjYwNTlmNjk4ZjNkOTRiM2IwNmRkMzU1OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-06-18T15:21:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-06-18T15:21:19Z"}, "message": "md.texi (Standard Names): Change insn pattern name from truncM2 to btruncM2 for 'trunc' built-in description.\n\n\t* doc/md.texi (Standard Names): Change insn pattern name\n\tfrom truncM2 to btruncM2 for 'trunc' built-in description.\n\tAdd rintM2 insn pattern description.\n\nFrom-SVN: r101159", "tree": {"sha": "716dacafdeda98fdd047b13ccf807636a0e452ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/716dacafdeda98fdd047b13ccf807636a0e452ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10553f10f3ea2a3b6059f698f3d94b3b06dd3559/comments", "author": null, "committer": null, "parents": [{"sha": "eb2de0c09d794650494cdca09b5613fbf374fb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2de0c09d794650494cdca09b5613fbf374fb86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2de0c09d794650494cdca09b5613fbf374fb86"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "2fefbb6f94e5aea0e634e19eac463fcf73282c5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10553f10f3ea2a3b6059f698f3d94b3b06dd3559/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10553f10f3ea2a3b6059f698f3d94b3b06dd3559/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "patch": "@@ -1,3 +1,9 @@\n+2005-06-18  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* doc/md.texi (Standard Names): Change insn pattern name\n+\tfrom truncM2 to btruncM2 for 'trunc' built-in description.\n+\tAdd rintM2 insn pattern description.\n+\n 2005-06-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-decl.c (locate_old_decl): Add format attribute."}, {"sha": "6a3b76e3fde9ced9551a39cb9ebdd265e927f1c8", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10553f10f3ea2a3b6059f698f3d94b3b06dd3559/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10553f10f3ea2a3b6059f698f3d94b3b06dd3559/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=10553f10f3ea2a3b6059f698f3d94b3b06dd3559", "patch": "@@ -3100,8 +3100,8 @@ corresponds to the C data type @code{double} and the @code{floorf}\n built-in function uses the mode which corresponds to the C data\n type @code{float}.\n \n-@cindex @code{trunc@var{m}2} instruction pattern\n-@item @samp{trunc@var{m}2}\n+@cindex @code{btrunc@var{m}2} instruction pattern\n+@item @samp{btrunc@var{m}2}\n Store the argument rounded to integer towards zero.\n \n The @code{trunc} built-in function of C always uses the mode which\n@@ -3136,6 +3136,17 @@ corresponds to the C data type @code{double} and the @code{nearbyintf}\n built-in function uses the mode which corresponds to the C data\n type @code{float}.\n \n+@cindex @code{rint@var{m}2} instruction pattern\n+@item @samp{rint@var{m}2}\n+Store the argument rounded according to the default rounding mode and\n+raise the inexact exception when the result differs in value from\n+the argument\n+\n+The @code{rint} built-in function of C always uses the mode which\n+corresponds to the C data type @code{double} and the @code{rintf}\n+built-in function uses the mode which corresponds to the C data\n+type @code{float}.\n+\n @cindex @code{ffs@var{m}2} instruction pattern\n @item @samp{ffs@var{m}2}\n Store into operand 0 one plus the index of the least significant 1-bit"}]}