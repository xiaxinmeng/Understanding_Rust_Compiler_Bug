{"sha": "2219aed9ad6f2678eac457b7de0984dbcde18679", "node_id": "C_kwDOANBUbNoAKDIyMTlhZWQ5YWQ2ZjI2NzhlYWM0NTdiN2RlMDk4NGRiY2RlMTg2Nzk", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-03-08T06:16:21Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-03-13T16:25:26Z"}, "message": "RISC-V: Fine tunning merge operand constraint\n\ngcc/ChangeLog:\n\n\t* config/riscv/vector-iterators.md (=vd,vr): Fine tune.\n\t(=vd,vd,vr,vr): Ditto.\n\t* config/riscv/vector.md: Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/merge_constraint-2.c: New test.", "tree": {"sha": "f9a85b7cc9296c4ce5581b52c2004fadc5fd8aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9a85b7cc9296c4ce5581b52c2004fadc5fd8aa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2219aed9ad6f2678eac457b7de0984dbcde18679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2219aed9ad6f2678eac457b7de0984dbcde18679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2219aed9ad6f2678eac457b7de0984dbcde18679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2219aed9ad6f2678eac457b7de0984dbcde18679/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dd51550b7d140f5fcc60f892cf68b59ff667b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd51550b7d140f5fcc60f892cf68b59ff667b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd51550b7d140f5fcc60f892cf68b59ff667b66"}], "stats": {"total": 1014, "additions": 566, "deletions": 448}, "files": [{"sha": "266563a3aa05a3cc8a2e4a0a79dd2c3e04941503", "filename": "gcc/config/riscv/vector-iterators.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector-iterators.md?ref=2219aed9ad6f2678eac457b7de0984dbcde18679", "patch": "@@ -813,9 +813,9 @@\n \t\t     (UNSPEC_VSLIDE1UP \"1up\") (UNSPEC_VSLIDE1DOWN \"1down\")\n \t\t     (UNSPEC_VFSLIDE1UP \"1up\") (UNSPEC_VFSLIDE1DOWN \"1down\")])\n \n-(define_int_attr ud_constraint [(UNSPEC_VSLIDEUP \"=&vr,&vr\") (UNSPEC_VSLIDEDOWN \"=vd,vr\")\n-\t\t\t\t(UNSPEC_VSLIDE1UP \"=&vr,&vr\") (UNSPEC_VSLIDE1DOWN \"=vd,vr\")\n-\t\t\t\t(UNSPEC_VFSLIDE1UP \"=&vr,&vr\") (UNSPEC_VFSLIDE1DOWN \"=vd,vr\")])\n+(define_int_attr ud_constraint [(UNSPEC_VSLIDEUP \"=&vr,&vr,&vr,&vr\") (UNSPEC_VSLIDEDOWN \"=vd,vd,vr,vr\")\n+\t\t\t\t(UNSPEC_VSLIDE1UP \"=&vr,&vr,&vr,&vr\") (UNSPEC_VSLIDE1DOWN \"=vd,vd,vr,vr\")\n+\t\t\t\t(UNSPEC_VFSLIDE1UP \"=&vr,&vr,&vr,&vr\") (UNSPEC_VFSLIDE1DOWN \"=vd,vd,vr,vr\")])\n \n (define_int_attr UNSPEC [(UNSPEC_VSLIDE1UP \"UNSPEC_VSLIDE1UP\")\n \t\t\t (UNSPEC_VSLIDE1DOWN \"UNSPEC_VSLIDE1DOWN\")])"}, {"sha": "977d3f2042ccaaf472be1fb4bcd1c03d3811fa19", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 445, "deletions": 445, "changes": 890, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=2219aed9ad6f2678eac457b7de0984dbcde18679", "patch": "@@ -4653,123 +4653,123 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_widen_mul_plus<su><mode>\"\n-  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus:VWEXTI\n \t    (mult:VWEXTI\n \t      (any_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t      (any_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0\"))\n-\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0,    0\"))\n+\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vwmacc<u>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_mul_plus<su><mode>_scalar\"\n-  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus:VWEXTI\n \t    (mult:VWEXTI\n \t      (any_extend:VWEXTI\n \t        (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r\")))\n+\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r,    r\")))\n \t      (any_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0\"))\n-\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0,    0\"))\n+\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vwmacc<u>.vx\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_mul_plussu<mode>\"\n-  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus:VWEXTI\n \t    (mult:VWEXTI\n \t      (sign_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t      (zero_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0\"))\n-\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0,    0\"))\n+\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vwmaccsu.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_mul_plussu<mode>_scalar\"\n-  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus:VWEXTI\n \t    (mult:VWEXTI\n \t      (sign_extend:VWEXTI\n \t        (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r\")))\n+\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r,    r\")))\n \t      (zero_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0\"))\n-\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0,    0\"))\n+\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vwmaccsu.vx\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_mul_plusus<mode>_scalar\"\n-  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTI 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus:VWEXTI\n \t    (mult:VWEXTI\n \t      (zero_extend:VWEXTI\n \t        (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r\")))\n+\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    r,    r\")))\n \t      (sign_extend:VWEXTI\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0\"))\n-\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t    (match_operand:VWEXTI 2 \"register_operand\"               \"    0,    0\"))\n+\t  (match_operand:VWEXTI 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vwmaccus.vx\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwmuladd\")\n@@ -4908,55 +4908,55 @@\n    (set_attr \"mode\" \"<VB:MODE>\")])\n \n (define_insn \"@pred_<misc_op><mode>\"\n-  [(set (match_operand:VB 0 \"register_operand\"          \"=&vr\")\n+  [(set (match_operand:VB 0 \"register_operand\"          \"=&vr,  &vr\")\n \t(if_then_else:VB\n \t  (unspec:VB\n-\t    [(match_operand:VB 1 \"vector_mask_operand\" \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"  \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"      \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"      \"    i\")\n+\t    [(match_operand:VB 1 \"vector_mask_operand\" \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"  \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"      \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"      \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VB\n-\t    [(match_operand:VB 3 \"register_operand\"    \"   vr\")] VMISC)\n-\t  (match_operand:VB 2 \"vector_merge_operand\"   \"  0vu\")))]\n+\t    [(match_operand:VB 3 \"register_operand\"    \"   vr,   vr\")] VMISC)\n+\t  (match_operand:VB 2 \"vector_merge_operand\"   \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vm<misc_op>.m\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vmsfs\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_iota<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\"            \"=&vr\")\n+  [(set (match_operand:VI 0 \"register_operand\"            \"=&vr,  &vr\")\n \t(if_then_else:VI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"    \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VI\n-\t    [(match_operand:<VM> 3 \"register_operand\"    \"   vr\")] UNSPEC_VIOTA)\n-\t  (match_operand:VI 2 \"vector_merge_operand\"     \"  0vu\")))]\n+\t    [(match_operand:<VM> 3 \"register_operand\"    \"   vr,   vr\")] UNSPEC_VIOTA)\n+\t  (match_operand:VI 2 \"vector_merge_operand\"     \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"viota.m\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vmiota\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_series<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VI 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 3 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 4 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 5 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 3 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 4 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 5 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (vec_series:VI (const_int 0) (const_int 1))\n-\t  (match_operand:VI 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t  (match_operand:VI 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vid.v\\t%0%p1\"\n   [(set_attr \"type\" \"vmidx\")\n@@ -4973,124 +4973,124 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_<optab><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_float_binop:VF\n-\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr\")\n-\t    (match_operand:VF 4 \"register_operand\"       \" vr, vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\")\n+\t    (match_operand:VF 4 \"register_operand\"       \" vr, vr, vr, vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vf<insn>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<optab><mode>_scalar\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (commutative_float_binop:VF\n \t    (vec_duplicate:VF\n-\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f\"))\n-\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f,  f,  f\"))\n+\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vf<insn>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<optab><mode>_scalar\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (non_commutative_float_binop:VF\n-\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr\")\n+\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\")\n \t    (vec_duplicate:VF\n-\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f\")))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f,  f,  f\")))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vf<insn>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<optab><mode>_reverse_scalar\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (non_commutative_float_binop:VF\n \t    (vec_duplicate:VF\n-\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f\"))\n-\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t      (match_operand:<VEL> 4 \"register_operand\"  \"  f,  f,  f,  f\"))\n+\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfr<insn>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<copysign><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VF\n-\t    [(match_operand:VF 3 \"register_operand\"       \" vr, vr\")\n-\t     (match_operand:VF 4 \"register_operand\"       \" vr, vr\")] VCOPYSIGNS)\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t    [(match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\")\n+\t     (match_operand:VF 4 \"register_operand\"       \" vr, vr, vr, vr\")] VCOPYSIGNS)\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfsgnj<nx>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfsgnj\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<copysign><mode>_scalar\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VF\n-\t    [(match_operand:VF 3 \"register_operand\"      \" vr, vr\")\n-\t\t (vec_duplicate:VF\n-\t       (match_operand:<VEL> 4 \"register_operand\" \"  f,  f\"))] VCOPYSIGNS)\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t    [(match_operand:VF 3 \"register_operand\"      \" vr, vr, vr, vr\")\n+\t     (vec_duplicate:VF\n+\t       (match_operand:<VEL> 4 \"register_operand\" \"  f,  f,  f,  f\"))] VCOPYSIGNS)\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfsgnj<nx>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfsgnj\")\n@@ -5711,19 +5711,19 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_<optab><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_float_unop:VF\n-\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t    (match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vf<insn>.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n@@ -5734,38 +5734,38 @@\n    (set (attr \"avl_type\") (symbol_ref \"INTVAL (operands[7])\"))])\n \n (define_insn \"@pred_<misc_op><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"           \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VF\n-\t    [(match_operand:VF 3 \"register_operand\"       \" vr, vr\")] VFMISC)\n-\t  (match_operand:VF 2 \"vector_merge_operand\"     \"0vu,0vu\")))]\n+\t    [(match_operand:VF 3 \"register_operand\"       \" vr, vr, vr, vr\")] VFMISC)\n+\t  (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vf<misc_op>.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"<float_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_class<mode>\"\n-  [(set (match_operand:<VCONVERT> 0 \"register_operand\"   \"=vd, vr\")\n+  [(set (match_operand:<VCONVERT> 0 \"register_operand\"       \"=vd, vd, vr, vr\")\n \t(if_then_else:<VCONVERT>\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"            \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"            \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:<VCONVERT>\n-\t    [(match_operand:VF 3 \"register_operand\"          \" vr, vr\")] UNSPEC_VFCLASS)\n-\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \"0vu,0vu\")))]\n+\t    [(match_operand:VF 3 \"register_operand\"          \" vr, vr, vr, vr\")] UNSPEC_VFCLASS)\n+\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfclass.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfclass\")\n@@ -5781,88 +5781,88 @@\n \n ;; Vector Widening Add/Subtract/Multiply.\n (define_insn \"@pred_dual_widen_<optab><mode>\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"              \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                  \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"              \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                  \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_widen_binop:VWEXTF\n \t    (float_extend:VWEXTF\n-\t      (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t      (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t    (float_extend:VWEXTF\n-\t      (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"  0vu\")))]\n+\t      (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<insn>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vf<widen_binop_insn_type>\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_dual_widen_<optab><mode>_scalar\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"              \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                  \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"              \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                  \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_widen_binop:VWEXTF\n \t    (float_extend:VWEXTF\n-\t      (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t      (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t    (float_extend:VWEXTF\n \t      (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t\t(match_operand:<VSUBEL> 4 \"register_operand\"       \"    f\"))))\n-\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"  0vu\")))]\n+\t\t(match_operand:<VSUBEL> 4 \"register_operand\"       \"    f,    f\"))))\n+\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<insn>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vf<widen_binop_insn_type>\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_single_widen_<plus_minus:optab><mode>\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"              \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                  \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"              \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                  \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus_minus:VWEXTF\n-\t    (match_operand:VWEXTF 3 \"register_operand\"             \"   vr\")\n+\t    (match_operand:VWEXTF 3 \"register_operand\"             \"   vr,   vr\")\n \t    (float_extend:VWEXTF\n-\t      (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))\n-\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"  0vu\")))]\n+\t      (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))\n+\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<insn>.wv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vf<widen_binop_insn_type>\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_single_widen_<plus_minus:optab><mode>_scalar\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                  \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"              \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"                  \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                  \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"           \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"              \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"                  \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                  \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus_minus:VWEXTF\n-\t    (match_operand:VWEXTF 3 \"register_operand\"             \"   vr\")\n+\t    (match_operand:VWEXTF 3 \"register_operand\"             \"   vr,   vr\")\n \t    (float_extend:VWEXTF\n \t      (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t\t(match_operand:<VSUBEL> 4 \"register_operand\"       \"    f\"))))\n-\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"  0vu\")))]\n+\t\t(match_operand:<VSUBEL> 4 \"register_operand\"       \"    f,    f\"))))\n+\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"           \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<insn>.wf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vf<widen_binop_insn_type>\")\n@@ -5876,100 +5876,100 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_widen_mul_<optab><mode>\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus_minus:VWEXTF\n-\t    (match_operand:VWEXTF 2 \"register_operand\"               \"    0\")\n+\t    (match_operand:VWEXTF 2 \"register_operand\"               \"    0,    0\")\n \t    (mult:VWEXTF\n \t      (float_extend:VWEXTF\n-\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t        (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t      (float_extend:VWEXTF\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\"))))\n-\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\"))))\n+\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<macc_nmsac>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_mul_<optab><mode>_scalar\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                    \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                    \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                    \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                    \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"             \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                    \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                    \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (plus_minus:VWEXTF\n-\t    (match_operand:VWEXTF 2 \"register_operand\"               \"    0\")\n+\t    (match_operand:VWEXTF 2 \"register_operand\"               \"    0,    0\")\n \t    (mult:VWEXTF\n \t      (float_extend:VWEXTF\n \t        (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    f\")))\n+\t          (match_operand:<VSUBEL> 3 \"register_operand\"       \"    f,    f\")))\n \t      (float_extend:VWEXTF\n-\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\"))))\n-\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"             \"  0vu\")))]\n+\t        (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\"))))\n+\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"             \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<macc_nmsac>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_neg_mul_<optab><mode>\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                      \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                      \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"               \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                  \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                      \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                      \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                      \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"               \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                  \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                      \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                      \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                      \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (neg:VWEXTF\n \t    (plus_minus:VWEXTF\n-\t      (match_operand:VWEXTF 2 \"register_operand\"               \"    0\")\n+\t      (match_operand:VWEXTF 2 \"register_operand\"               \"    0,    0\")\n \t      (mult:VWEXTF\n \t        (float_extend:VWEXTF\n-\t          (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n+\t          (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n \t        (float_extend:VWEXTF\n-\t          (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))))\n-\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"               \"  0vu\")))]\n+\t          (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))))\n+\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"               \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<nmacc_msac>.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfwmuladd\")\n    (set_attr \"mode\" \"<V_DOUBLE_TRUNC>\")])\n \n (define_insn \"@pred_widen_neg_mul_<optab><mode>_scalar\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                      \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                      \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"               \"vmWc1\")\n-\t     (match_operand 6 \"vector_length_operand\"                  \"   rK\")\n-\t     (match_operand 7 \"const_int_operand\"                      \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"                      \"    i\")\n-\t     (match_operand 9 \"const_int_operand\"                      \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"               \"vmWc1,vmWc1\")\n+\t     (match_operand 6 \"vector_length_operand\"                  \"   rK,   rK\")\n+\t     (match_operand 7 \"const_int_operand\"                      \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"                      \"    i,    i\")\n+\t     (match_operand 9 \"const_int_operand\"                      \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (neg:VWEXTF\n \t    (plus_minus:VWEXTF\n-\t      (match_operand:VWEXTF 2 \"register_operand\"               \"    0\")\n+\t      (match_operand:VWEXTF 2 \"register_operand\"               \"    0,    0\")\n \t      (mult:VWEXTF\n \t        (float_extend:VWEXTF\n \t          (vec_duplicate:<V_DOUBLE_TRUNC>\n-\t            (match_operand:<VSUBEL> 3 \"register_operand\"       \"    f\")))\n+\t            (match_operand:<VSUBEL> 3 \"register_operand\"       \"    f,    f\")))\n \t        (float_extend:VWEXTF\n-\t          (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr\")))))\n-\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"               \"  0vu\")))]\n+\t          (match_operand:<V_DOUBLE_TRUNC> 4 \"register_operand\" \"   vr,   vr\")))))\n+\t  (match_operand:VWEXTF 5 \"vector_merge_operand\"               \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfw<nmacc_msac>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfwmuladd\")\n@@ -6167,21 +6167,21 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_merge<mode>_scalar\"\n-  [(set (match_operand:VF 0 \"register_operand\"      \"=vd\")\n+  [(set (match_operand:VF 0 \"register_operand\"      \"=vd,vd\")\n     (if_then_else:VF\n-      (match_operand:<VM> 4 \"register_operand\"      \" vm\")\n+      (match_operand:<VM> 4 \"register_operand\"      \" vm,vm\")\n       (if_then_else:VF\n         (unspec:<VM>\n           [(match_dup 4)\n-           (match_operand 5 \"vector_length_operand\" \" rK\")\n-           (match_operand 6 \"const_int_operand\"     \"  i\")\n-           (match_operand 7 \"const_int_operand\"     \"  i\")\n+           (match_operand 5 \"vector_length_operand\" \" rK,rK\")\n+           (match_operand 6 \"const_int_operand\"     \"  i, i\")\n+           (match_operand 7 \"const_int_operand\"     \"  i, i\")\n            (reg:SI VL_REGNUM)\n            (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n         (vec_duplicate:VF\n-          (match_operand:<VEL> 3 \"register_operand\" \"  f\"))\n-        (match_operand:VF 2 \"register_operand\"      \" vr\"))\n-      (match_operand:VF 1 \"vector_merge_operand\"    \"0vu\")))]\n+          (match_operand:<VEL> 3 \"register_operand\" \"  f, f\"))\n+        (match_operand:VF 2 \"register_operand\"      \" vr,vr\"))\n+      (match_operand:VF 1 \"vector_merge_operand\"    \" vu, 0\")))]\n   \"TARGET_VECTOR\"\n   \"vfmerge.vfm\\t%0,%2,%3,%4\"\n   [(set_attr \"type\" \"vfmerge\")\n@@ -6195,57 +6195,57 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_fcvt_x<v_su>_f<mode>\"\n-  [(set (match_operand:<VCONVERT> 0 \"register_operand\"       \"=vd, vr\")\n+  [(set (match_operand:<VCONVERT> 0 \"register_operand\"       \"=vd, vd, vr, vr\")\n \t(if_then_else:<VCONVERT>\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"            \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"            \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:<VCONVERT>\n-\t     [(match_operand:VF 3 \"register_operand\"         \" vr, vr\")] VFCVTS)\n-\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \"0vu,0vu\")))]\n+\t     [(match_operand:VF 3 \"register_operand\"         \" vr, vr, vr, vr\")] VFCVTS)\n+\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfcvt.x<v_su>.f.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfcvtftoi\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<fix_cvt><mode>\"\n-  [(set (match_operand:<VCONVERT> 0 \"register_operand\"       \"=vd, vr\")\n+  [(set (match_operand:<VCONVERT> 0 \"register_operand\"       \"=vd, vd, vr, vr\")\n \t(if_then_else:<VCONVERT>\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"            \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"            \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"        \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"            \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_fix:<VCONVERT>\n-\t     (match_operand:VF 3 \"register_operand\"          \" vr, vr\"))\n-\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \"0vu,0vu\")))]\n+\t     (match_operand:VF 3 \"register_operand\"          \" vr, vr, vr, vr\"))\n+\t  (match_operand:<VCONVERT> 2 \"vector_merge_operand\" \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfcvt.rtz.x<u>.f.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfcvtftoi\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_<float_cvt><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"              \"=vd, vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"              \"=vd, vd, vr, vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"    \" vm,Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"       \" rK, rK\")\n-\t     (match_operand 5 \"const_int_operand\"           \"  i,  i\")\n-\t     (match_operand 6 \"const_int_operand\"           \"  i,  i\")\n-\t     (match_operand 7 \"const_int_operand\"           \"  i,  i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"    \" vm, vm,Wc1,Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"       \" rK, rK, rK, rK\")\n+\t     (match_operand 5 \"const_int_operand\"           \"  i,  i,  i,  i\")\n+\t     (match_operand 6 \"const_int_operand\"           \"  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"           \"  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_float:VF\n-\t     (match_operand:<VCONVERT> 3 \"register_operand\" \" vr, vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"        \"0vu,0vu\")))]\n+\t     (match_operand:<VCONVERT> 3 \"register_operand\" \" vr, vr, vr, vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"        \" vu,  0, vu,  0\")))]\n   \"TARGET_VECTOR\"\n   \"vfcvt.f.x<u>.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfcvtitof\")\n@@ -6259,76 +6259,76 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_widen_fcvt_x<v_su>_f<mode>\"\n-  [(set (match_operand:VWCONVERTI 0 \"register_operand\"         \"=&vr\")\n+  [(set (match_operand:VWCONVERTI 0 \"register_operand\"         \"=&vr,  &vr\")\n \t(if_then_else:VWCONVERTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"         \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"             \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"             \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"             \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"         \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"             \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"             \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"             \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VWCONVERTI\n-\t     [(match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr\")] VFCVTS)\n-\t  (match_operand:VWCONVERTI 2 \"vector_merge_operand\"  \"  0vu\")))]\n+\t     [(match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr,   vr\")] VFCVTS)\n+\t  (match_operand:VWCONVERTI 2 \"vector_merge_operand\"  \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfwcvt.x<v_su>.f.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfwcvtftoi\")\n    (set_attr \"mode\" \"<VNCONVERT>\")])\n \n (define_insn \"@pred_widen_<fix_cvt><mode>\"\n-  [(set (match_operand:VWCONVERTI 0 \"register_operand\"        \"=&vr\")\n+  [(set (match_operand:VWCONVERTI 0 \"register_operand\"        \"=&vr,  &vr\")\n \t(if_then_else:VWCONVERTI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"        \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"            \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"            \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"            \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"        \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"            \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"            \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"            \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_fix:VWCONVERTI\n-\t     (match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr\"))\n-\t  (match_operand:VWCONVERTI 2 \"vector_merge_operand\" \"  0vu\")))]\n+\t     (match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr,   vr\"))\n+\t  (match_operand:VWCONVERTI 2 \"vector_merge_operand\" \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfwcvt.rtz.x<u>.f.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfwcvtftoi\")\n    (set_attr \"mode\" \"<VNCONVERT>\")])\n \n (define_insn \"@pred_widen_<float_cvt><mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\"                \"=&vr\")\n+  [(set (match_operand:VF 0 \"register_operand\"                \"=&vr,  &vr\")\n \t(if_then_else:VF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"        \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"            \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"            \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"            \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"     \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"        \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"            \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"            \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"            \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_float:VF\n-\t     (match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr\"))\n-\t  (match_operand:VF 2 \"vector_merge_operand\"         \"  0vu\")))]\n+\t     (match_operand:<VNCONVERT> 3 \"register_operand\" \"   vr,   vr\"))\n+\t  (match_operand:VF 2 \"vector_merge_operand\"         \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfwcvt.f.x<u>.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfwcvtitof\")\n    (set_attr \"mode\" \"<VNCONVERT>\")])\n \n (define_insn \"@pred_extend<mode>\"\n-  [(set (match_operand:VWEXTF 0 \"register_operand\"                 \"=&vr\")\n+  [(set (match_operand:VWEXTF 0 \"register_operand\"                 \"=&vr,  &vr\")\n \t(if_then_else:VWEXTF\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"          \"vmWc1\")\n-\t     (match_operand 4 \"vector_length_operand\"             \"   rK\")\n-\t     (match_operand 5 \"const_int_operand\"                 \"    i\")\n-\t     (match_operand 6 \"const_int_operand\"                 \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"                 \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"          \"vmWc1,vmWc1\")\n+\t     (match_operand 4 \"vector_length_operand\"             \"   rK,   rK\")\n+\t     (match_operand 5 \"const_int_operand\"                 \"    i,    i\")\n+\t     (match_operand 6 \"const_int_operand\"                 \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"                 \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (float_extend:VWEXTF\n-\t     (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr\"))\n-\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"          \"  0vu\")))]\n+\t     (match_operand:<V_DOUBLE_TRUNC> 3 \"register_operand\" \"   vr,   vr\"))\n+\t  (match_operand:VWEXTF 2 \"vector_merge_operand\"          \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vfwcvt.f.f.v\\t%0,%3%p1\"\n   [(set_attr \"type\" \"vfwcvtftof\")\n@@ -6454,189 +6454,189 @@\n ;; For example, The LMUL = 1 corresponding mode of VNx16QImode is VNx4QImode\n ;; for -march=rv*zve32* wheras VNx8QImode for -march=rv*zve64*\n (define_insn \"@pred_reduc_<reduc><mode><vlmul1>\"\n-  [(set (match_operand:<VLMUL1> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1> 0 \"register_operand\"          \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm,Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"        \" rK, rK\")\n-\t      (match_operand 6 \"const_int_operand\"            \"  i,  i\")\n-\t      (match_operand 7 \"const_int_operand\"            \"  i,  i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"     \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"        \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"            \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"            \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t   (any_reduc:VI\n \t     (vec_duplicate:VI\n \t       (vec_select:<VEL>\n-\t         (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr\")\n+\t         (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t         (parallel [(const_int 0)])))\n-\t     (match_operand:VI 3 \"register_operand\"           \" vr, vr\"))\n-\t   (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC))]\n+\t     (match_operand:VI 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t   (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN > 32\"\n   \"vred<reduc>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vired\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_reduc_<reduc><mode><vlmul1_zve32>\"\n-  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"          \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1_ZVE32>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm,Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"              \" rK, rK\")\n-\t      (match_operand 6 \"const_int_operand\"                  \"  i,  i\")\n-\t      (match_operand 7 \"const_int_operand\"                  \"  i,  i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"              \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t   (any_reduc:VI_ZVE32\n \t     (vec_duplicate:VI_ZVE32\n \t       (vec_select:<VEL>\n-\t         (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr\")\n+\t         (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t         (parallel [(const_int 0)])))\n-\t     (match_operand:VI_ZVE32 3 \"register_operand\"           \" vr, vr\"))\n-\t   (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC))]\n+\t     (match_operand:VI_ZVE32 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t   (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN == 32\"\n   \"vred<reduc>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vired\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_widen_reduc_plus<v_su><mode><vwlmul1>\"\n-  [(set (match_operand:<VWLMUL1> 0 \"register_operand\"           \"=&vr\")\n+  [(set (match_operand:<VWLMUL1> 0 \"register_operand\"           \"=&vr,  &vr\")\n \t(unspec:<VWLMUL1>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1\")\n-\t      (match_operand 5 \"vector_length_operand\"         \"   rK\")\n-\t      (match_operand 6 \"const_int_operand\"             \"    i\")\n-\t      (match_operand 7 \"const_int_operand\"             \"    i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1,vmWc1\")\n+\t      (match_operand 5 \"vector_length_operand\"         \"   rK,   rK\")\n+\t      (match_operand 6 \"const_int_operand\"             \"    i,    i\")\n+\t      (match_operand 7 \"const_int_operand\"             \"    i,    i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VWI 3 \"register_operand\"             \"   vr\")\n-\t   (match_operand:<VWLMUL1> 4 \"register_operand\"       \"   vr\")\n-\t   (match_operand:<VWLMUL1> 2 \"vector_merge_operand\"   \"  0vu\")] WREDUC))]\n+\t   (match_operand:VWI 3 \"register_operand\"             \"   vr,   vr\")\n+\t   (match_operand:<VWLMUL1> 4 \"register_operand\"       \"   vr,   vr\")\n+\t   (match_operand:<VWLMUL1> 2 \"vector_merge_operand\"   \"   vu,    0\")] WREDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN > 32\"\n   \"vwredsum<v_su>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwred\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_widen_reduc_plus<v_su><mode><vwlmul1_zve32>\"\n-  [(set (match_operand:<VWLMUL1_ZVE32> 0 \"register_operand\"           \"=&vr\")\n+  [(set (match_operand:<VWLMUL1_ZVE32> 0 \"register_operand\"           \"=&vr,  &vr\")\n \t(unspec:<VWLMUL1_ZVE32>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"            \"vmWc1\")\n-\t      (match_operand 5 \"vector_length_operand\"               \"   rK\")\n-\t      (match_operand 6 \"const_int_operand\"                   \"    i\")\n-\t      (match_operand 7 \"const_int_operand\"                   \"    i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"            \"vmWc1,vmWc1\")\n+\t      (match_operand 5 \"vector_length_operand\"               \"   rK,   rK\")\n+\t      (match_operand 6 \"const_int_operand\"                   \"    i,    i\")\n+\t      (match_operand 7 \"const_int_operand\"                   \"    i,    i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VWI_ZVE32 3 \"register_operand\"             \"   vr\")\n-\t   (match_operand:<VWLMUL1_ZVE32> 4 \"register_operand\"       \"   vr\")\n-\t   (match_operand:<VWLMUL1_ZVE32> 2 \"vector_merge_operand\"   \"  0vu\")] WREDUC))]\n+\t   (match_operand:VWI_ZVE32 3 \"register_operand\"             \"   vr,   vr\")\n+\t   (match_operand:<VWLMUL1_ZVE32> 4 \"register_operand\"       \"   vr,   vr\")\n+\t   (match_operand:<VWLMUL1_ZVE32> 2 \"vector_merge_operand\"   \"   vu,    0\")] WREDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN == 32\"\n   \"vwredsum<v_su>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"viwred\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_reduc_<reduc><mode><vlmul1>\"\n-  [(set (match_operand:<VLMUL1> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1> 0 \"register_operand\"          \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"      \" vm,Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"         \" rK, rK\")\n-\t      (match_operand 6 \"const_int_operand\"             \"  i,  i\")\n-\t      (match_operand 7 \"const_int_operand\"             \"  i,  i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"      \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"         \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"             \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"             \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t   (any_freduc:VF\n \t     (vec_duplicate:VF\n \t       (vec_select:<VEL>\n-\t         (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr\")\n+\t         (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t         (parallel [(const_int 0)])))\n-\t     (match_operand:VF 3 \"register_operand\"           \" vr, vr\"))\n-\t   (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC))]\n+\t     (match_operand:VF 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t   (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN > 32\"\n   \"vfred<reduc>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfredu\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_reduc_<reduc><mode><vlmul1_zve32>\"\n-  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"          \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1_ZVE32>\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm,Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"              \" rK, rK\")\n-\t      (match_operand 6 \"const_int_operand\"                  \"  i,  i\")\n-\t      (match_operand 7 \"const_int_operand\"                  \"  i,  i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"              \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t   (any_freduc:VF_ZVE32\n \t     (vec_duplicate:VF_ZVE32\n \t       (vec_select:<VEL>\n-\t         (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr\")\n+\t         (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t         (parallel [(const_int 0)])))\n-\t     (match_operand:VF_ZVE32 3 \"register_operand\"           \" vr, vr\"))\n-\t   (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC))]\n+\t     (match_operand:VF_ZVE32 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t   (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN == 32\"\n   \"vfred<reduc>.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfredu\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_reduc_plus<order><mode><vlmul1>\"\n-  [(set (match_operand:<VLMUL1> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1> 0 \"register_operand\"             \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1>\n \t  [(unspec:<VLMUL1>\n \t    [(unspec:<VM>\n-\t       [(match_operand:<VM> 1 \"vector_mask_operand\"      \" vm,Wc1\")\n-\t        (match_operand 5 \"vector_length_operand\"         \" rK, rK\")\n-\t        (match_operand 6 \"const_int_operand\"             \"  i,  i\")\n-\t        (match_operand 7 \"const_int_operand\"             \"  i,  i\")\n+\t       [(match_operand:<VM> 1 \"vector_mask_operand\"      \" vm, vm,Wc1,Wc1\")\n+\t        (match_operand 5 \"vector_length_operand\"         \" rK, rK, rK, rK\")\n+\t        (match_operand 6 \"const_int_operand\"             \"  i,  i,  i,  i\")\n+\t        (match_operand 7 \"const_int_operand\"             \"  i,  i,  i,  i\")\n \t        (reg:SI VL_REGNUM)\n \t        (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t     (plus:VF\n \t       (vec_duplicate:VF\n \t         (vec_select:<VEL>\n-\t           (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr\")\n+\t           (match_operand:<VLMUL1> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t           (parallel [(const_int 0)])))\n-\t       (match_operand:VF 3 \"register_operand\"           \" vr, vr\"))\n-\t     (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC)] ORDER))]\n+\t       (match_operand:VF 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t     (match_operand:<VLMUL1> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC)] ORDER))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN > 32\"\n   \"vfred<order>sum.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfred<order>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_reduc_plus<order><mode><vlmul1_zve32>\"\n-  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"          \"=vd, vr\")\n+  [(set (match_operand:<VLMUL1_ZVE32> 0 \"register_operand\"            \"=vd, vd, vr, vr\")\n \t(unspec:<VLMUL1_ZVE32>\n \t  [(unspec:<VLMUL1_ZVE32>\n \t    [(unspec:<VM>\n-\t       [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm,Wc1\")\n-\t        (match_operand 5 \"vector_length_operand\"              \" rK, rK\")\n-\t        (match_operand 6 \"const_int_operand\"                  \"  i,  i\")\n-\t        (match_operand 7 \"const_int_operand\"                  \"  i,  i\")\n+\t       [(match_operand:<VM> 1 \"vector_mask_operand\"           \" vm, vm,Wc1,Wc1\")\n+\t        (match_operand 5 \"vector_length_operand\"              \" rK, rK, rK, rK\")\n+\t        (match_operand 6 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n+\t        (match_operand 7 \"const_int_operand\"                  \"  i,  i,  i,  i\")\n \t        (reg:SI VL_REGNUM)\n \t        (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t     (plus:VF_ZVE32\n \t       (vec_duplicate:VF_ZVE32\n \t         (vec_select:<VEL>\n-\t           (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr\")\n+\t           (match_operand:<VLMUL1_ZVE32> 4 \"register_operand\" \" vr, vr, vr, vr\")\n \t           (parallel [(const_int 0)])))\n-\t       (match_operand:VF_ZVE32 3 \"register_operand\"           \" vr, vr\"))\n-\t     (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \"0vu,0vu\")] UNSPEC_REDUC)] ORDER))]\n+\t       (match_operand:VF_ZVE32 3 \"register_operand\"           \" vr, vr, vr, vr\"))\n+\t     (match_operand:<VLMUL1_ZVE32> 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")] UNSPEC_REDUC)] ORDER))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN == 32\"\n   \"vfred<order>sum.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfred<order>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_widen_reduc_plus<order><mode><vwlmul1>\"\n-  [(set (match_operand:<VWLMUL1> 0 \"register_operand\"             \"=&vr\")\n+  [(set (match_operand:<VWLMUL1> 0 \"register_operand\"             \"=&vr,  &vr\")\n \t(unspec:<VWLMUL1>\n \t  [(unspec:<VWLMUL1>\n \t    [(unspec:<VM>\n-\t       [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1\")\n-\t        (match_operand 5 \"vector_length_operand\"         \"   rK\")\n-\t        (match_operand 6 \"const_int_operand\"             \"    i\")\n-\t        (match_operand 7 \"const_int_operand\"             \"    i\")\n+\t       [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1,vmWc1\")\n+\t        (match_operand 5 \"vector_length_operand\"         \"   rK,   rK\")\n+\t        (match_operand 6 \"const_int_operand\"             \"    i,    i\")\n+\t        (match_operand 7 \"const_int_operand\"             \"    i,    i\")\n \t        (reg:SI VL_REGNUM)\n \t        (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t     (match_operand:VWF 3 \"register_operand\"             \"   vr\")\n-\t     (match_operand:<VWLMUL1> 4 \"register_operand\"       \"   vr\")\n-\t     (match_operand:<VWLMUL1> 2 \"vector_merge_operand\"   \"  0vu\")] UNSPEC_WREDUC_SUM)] ORDER))]\n+\t     (match_operand:VWF 3 \"register_operand\"             \"   vr,   vr\")\n+\t     (match_operand:<VWLMUL1> 4 \"register_operand\"       \"   vr,   vr\")\n+\t     (match_operand:<VWLMUL1> 2 \"vector_merge_operand\"   \"   vu,    0\")] UNSPEC_WREDUC_SUM)] ORDER))]\n   \"TARGET_VECTOR && TARGET_MIN_VLEN > 32\"\n   \"vfwred<order>sum.vs\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfwred<order>\")\n@@ -6750,16 +6750,16 @@\n   [(set (match_operand:V 0 \"register_operand\"             \"<ud_constraint>\")\n \t(unspec:V\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \"     vm,    Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"    \"     rK,     rK\")\n-\t      (match_operand 6 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 7 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 8 \"const_int_operand\"        \"      i,      i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:V 2 \"vector_merge_operand\"      \"    0vu,    0vu\")\n-\t   (match_operand:V 3 \"register_operand\"          \"     vr,     vr\")\n-\t   (match_operand 4 \"pmode_reg_or_uimm5_operand\"  \"     rK,     rK\")] VSLIDES))]\n+\t   (match_operand:V 2 \"vector_merge_operand\"      \" vu,  0, vu,  0\")\n+\t   (match_operand:V 3 \"register_operand\"          \" vr, vr, vr, vr\")\n+\t   (match_operand 4 \"pmode_reg_or_uimm5_operand\"  \" rK, rK, rK, rK\")] VSLIDES))]\n   \"TARGET_VECTOR\"\n   \"vslide<ud>.v%o4\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vslide<ud>\")\n@@ -6770,16 +6770,16 @@\n   [(set (match_operand:VI_QHS 0 \"register_operand\"        \"<ud_constraint>\")\n \t(unspec:VI_QHS\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \"     vm,    Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"    \"     rK,     rK\")\n-\t      (match_operand 6 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 7 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 8 \"const_int_operand\"        \"      i,      i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VI_QHS 2 \"vector_merge_operand\" \"    0vu,    0vu\")\n-\t   (match_operand:VI_QHS 3 \"register_operand\"     \"     vr,     vr\")\n-\t   (match_operand:<VEL> 4 \"reg_or_0_operand\"      \"     rJ,     rJ\")] VSLIDES1))]\n+\t   (match_operand:VI_QHS 2 \"vector_merge_operand\" \" vu,  0, vu,  0\")\n+\t   (match_operand:VI_QHS 3 \"register_operand\"     \" vr, vr, vr, vr\")\n+\t   (match_operand:<VEL> 4 \"reg_or_0_operand\"      \" rK, rK, rK, rK\")] VSLIDES1))]\n   \"TARGET_VECTOR\"\n   \"vslide<ud>.vx\\t%0,%3,%z4%p1\"\n   [(set_attr \"type\" \"vislide<ud>\")\n@@ -6811,16 +6811,16 @@\n   [(set (match_operand:VI_D 0 \"register_operand\"          \"<ud_constraint>\")\n \t(unspec:VI_D\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \"     vm,    Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"    \"     rK,     rK\")\n-\t      (match_operand 6 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 7 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 8 \"const_int_operand\"        \"      i,      i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VI_D 2 \"vector_merge_operand\"   \"    0vu,    0vu\")\n-\t   (match_operand:VI_D 3 \"register_operand\"       \"     vr,     vr\")\n-\t   (match_operand:<VEL> 4 \"reg_or_0_operand\"      \"     rJ,     rJ\")] VSLIDES1))]\n+\t   (match_operand:VI_D 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")\n+\t   (match_operand:VI_D 3 \"register_operand\"       \" vr, vr, vr, vr\")\n+\t   (match_operand:<VEL> 4 \"reg_or_0_operand\"      \" rK, rK, rK, rK\")] VSLIDES1))]\n   \"TARGET_VECTOR\"\n   \"vslide<ud>.vx\\t%0,%3,%z4%p1\"\n   [(set_attr \"type\" \"vislide<ud>\")\n@@ -6830,17 +6830,17 @@\n   [(set (match_operand:VI_D 0 \"register_operand\"          \"<ud_constraint>\")\n \t(unspec:VI_D\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \"     vm,    Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"    \"     rK,     rK\")\n-\t      (match_operand 6 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 7 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 8 \"const_int_operand\"        \"      i,      i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VI_D 2 \"vector_merge_operand\"   \"    0vu,    0vu\")\n-\t   (match_operand:VI_D 3 \"register_operand\"       \"     vr,     vr\")\n+\t   (match_operand:VI_D 2 \"vector_merge_operand\"   \" vu,  0, vu,  0\")\n+\t   (match_operand:VI_D 3 \"register_operand\"       \" vr, vr, vr, vr\")\n \t   (sign_extend:<VEL>\n-\t     (match_operand:<VSUBEL> 4 \"reg_or_0_operand\" \"     rJ,     rJ\"))] VSLIDES1))]\n+\t     (match_operand:<VSUBEL> 4 \"reg_or_0_operand\" \" rJ, rJ, rJ, rJ\"))] VSLIDES1))]\n   \"TARGET_VECTOR\"\n   \"vslide<ud>.vx\\t%0,%3,%z4%p1\"\n   [(set_attr \"type\" \"vislide<ud>\")\n@@ -6851,96 +6851,96 @@\n   [(set (match_operand:VF 0 \"register_operand\"            \"<ud_constraint>\")\n \t(unspec:VF\n \t  [(unspec:<VM>\n-\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \"     vm,    Wc1\")\n-\t      (match_operand 5 \"vector_length_operand\"    \"     rK,     rK\")\n-\t      (match_operand 6 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 7 \"const_int_operand\"        \"      i,      i\")\n-\t      (match_operand 8 \"const_int_operand\"        \"      i,      i\")\n+\t     [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, vm,Wc1,Wc1\")\n+\t      (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK\")\n+\t      (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i\")\n+\t      (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i\")\n \t      (reg:SI VL_REGNUM)\n \t      (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:VF 2 \"vector_merge_operand\"     \"    0vu,    0vu\")\n-\t   (match_operand:VF 3 \"register_operand\"         \"     vr,     vr\")\n-\t   (match_operand:<VEL> 4 \"register_operand\"      \"      f,      f\")] VFSLIDES1))]\n+\t   (match_operand:VF 2 \"vector_merge_operand\"     \" vu,  0, vu,  0\")\n+\t   (match_operand:VF 3 \"register_operand\"         \" vr, vr, vr, vr\")\n+\t   (match_operand:<VEL> 4 \"register_operand\"      \"  f,  f,  f,  f\")] VFSLIDES1))]\n   \"TARGET_VECTOR\"\n   \"vfslide<ud>.vf\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vfslide<ud>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; vrgather\n (define_insn \"@pred_gather<mode>\"\n-  [(set (match_operand:V 0 \"register_operand\"              \"=&vr\")\n+  [(set (match_operand:V 0 \"register_operand\"              \"=&vr,  &vr\")\n \t(if_then_else:V\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"  \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"     \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"         \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"         \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"         \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"  \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"     \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"         \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"         \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"         \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:V\n-\t    [(match_operand:V 3 \"register_operand\"        \"   vr\")\n-\t     (match_operand:<VINDEX> 4 \"register_operand\" \"   vr\")] UNSPEC_VRGATHER)\n-\t  (match_operand:V 2 \"vector_merge_operand\"       \"  0vu\")))]\n+\t    [(match_operand:V 3 \"register_operand\"        \"   vr,   vr\")\n+\t     (match_operand:<VINDEX> 4 \"register_operand\" \"   vr,   vr\")] UNSPEC_VRGATHER)\n+\t  (match_operand:V 2 \"vector_merge_operand\"       \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vrgather.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vgather\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"@pred_gather<mode>_scalar\"\n-  [(set (match_operand:V 0 \"register_operand\"               \"=&vr\")\n+  [(set (match_operand:V 0 \"register_operand\"               \"=&vr,  &vr\")\n \t(if_then_else:V\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"   \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"      \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"          \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"          \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"          \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"   \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"      \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"          \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"          \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"          \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:V\n-\t    [(match_operand:V 3 \"register_operand\"         \"   vr\")\n-\t     (match_operand 4 \"pmode_reg_or_uimm5_operand\" \"   rK\")] UNSPEC_VRGATHER)\n-\t  (match_operand:V 2 \"vector_merge_operand\"        \"  0vu\")))]\n+\t    [(match_operand:V 3 \"register_operand\"         \"   vr,   vr\")\n+\t     (match_operand 4 \"pmode_reg_or_uimm5_operand\" \"   rK,   rK\")] UNSPEC_VRGATHER)\n+\t  (match_operand:V 2 \"vector_merge_operand\"        \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vrgather.v%o4\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vgather\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; vrgatherei16\n (define_insn \"@pred_gatherei16<mode>\"\n-  [(set (match_operand:VEI16 0 \"register_operand\"              \"=&vr\")\n+  [(set (match_operand:VEI16 0 \"register_operand\"              \"=&vr,  &vr\")\n \t(if_then_else:VEI16\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"         \"   rK\")\n-\t     (match_operand 6 \"const_int_operand\"             \"    i\")\n-\t     (match_operand 7 \"const_int_operand\"             \"    i\")\n-\t     (match_operand 8 \"const_int_operand\"             \"    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\"      \"vmWc1,vmWc1\")\n+\t     (match_operand 5 \"vector_length_operand\"         \"   rK,   rK\")\n+\t     (match_operand 6 \"const_int_operand\"             \"    i,    i\")\n+\t     (match_operand 7 \"const_int_operand\"             \"    i,    i\")\n+\t     (match_operand 8 \"const_int_operand\"             \"    i,    i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:VEI16\n-\t    [(match_operand:VEI16 3 \"register_operand\"        \"   vr\")\n-\t     (match_operand:<VINDEXEI16> 4 \"register_operand\" \"   vr\")] UNSPEC_VRGATHEREI16)\n-\t  (match_operand:VEI16 2 \"vector_merge_operand\"       \"  0vu\")))]\n+\t    [(match_operand:VEI16 3 \"register_operand\"        \"   vr,   vr\")\n+\t     (match_operand:<VINDEXEI16> 4 \"register_operand\" \"   vr,   vr\")] UNSPEC_VRGATHEREI16)\n+\t  (match_operand:VEI16 2 \"vector_merge_operand\"       \"   vu,    0\")))]\n   \"TARGET_VECTOR\"\n   \"vrgatherei16.vv\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vgather\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; vcompress\n (define_insn \"@pred_compress<mode>\"\n-  [(set (match_operand:V 0 \"register_operand\"            \"=&vr\")\n+  [(set (match_operand:V 0 \"register_operand\"            \"=&vr,  &vr\")\n \t(unspec:V\n \t  [(unspec:<VM>\n-\t    [(match_operand:<VM> 3 \"register_operand\"    \"  vm\")\n-\t     (match_operand 4 \"vector_length_operand\"    \"  rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"   i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"   i\")\n+\t    [(match_operand:<VM> 3 \"register_operand\"    \"  vm,  vm\")\n+\t     (match_operand 4 \"vector_length_operand\"    \"  rK,  rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"   i,   i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"   i,   i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t   (match_operand:V 2 \"register_operand\"          \"  vr\")\n-\t   (match_operand:V 1 \"vector_merge_operand\"        \" 0vu\")] UNSPEC_VCOMPRESS))]\n+\t   (match_operand:V 2 \"register_operand\"         \"  vr,  vr\")\n+\t   (match_operand:V 1 \"vector_merge_operand\"     \"  vu,   0\")] UNSPEC_VCOMPRESS))]\n   \"TARGET_VECTOR\"\n   \"vcompress.vm\\t%0,%2,%3\"\n   [(set_attr \"type\" \"vcompress\")\n@@ -6970,19 +6970,19 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"@pred_fault_load<mode>\"\n-  [(set (match_operand:V 0 \"register_operand\"              \"=vd,    vr\")\n+  [(set (match_operand:V 0 \"register_operand\"              \"=vd,    vd,    vr,    vr\")\n \t(if_then_else:V\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"   vm,   Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \"   rK,    rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"    i,     i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"    i,     i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"    i,     i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"   vm,    vm,   Wc1,   Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"    \"   rK,    rK,    rK,    rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"    i,     i,     i,     i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"    i,     i,     i,     i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"    i,     i,     i,     i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (unspec:V\n-\t    [(match_operand:V 3 \"memory_operand\"         \"    m,     m\")] UNSPEC_VLEFF)\n-\t  (match_operand:V 2 \"vector_merge_operand\"      \"  0vu,   0vu\")))\n+\t    [(match_operand:V 3 \"memory_operand\"         \"    m,     m,     m,     m\")] UNSPEC_VLEFF)\n+\t  (match_operand:V 2 \"vector_merge_operand\"      \"   vu,     0,    vu,     0\")))\n    (set (reg:SI VL_REGNUM) (unspec:SI [(match_dup 0)] UNSPEC_VLEFF))]\n   \"TARGET_VECTOR\"\n   \"vle<sew>ff.v\\t%0,%3%p1\""}, {"sha": "8d9d5655839d5bb3c4d5d1853471637f1dcd644f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/merge_constraint-2.c", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fmerge_constraint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2219aed9ad6f2678eac457b7de0984dbcde18679/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fmerge_constraint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fmerge_constraint-2.c?ref=2219aed9ad6f2678eac457b7de0984dbcde18679", "patch": "@@ -0,0 +1,118 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfadd_vv_f32m1 (v, v, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f1 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfadd_vf_f32m1 (v, 8.9, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f2 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfdiv_vv_f32m1 (v, v, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f4 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfdiv_vf_f32m1 (v, 8.9, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f5 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfrdiv_vf_f32m1 (v, 8.9, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f6 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfsgnj_vv_f32m1 (v, v, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f7 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfsgnj_vf_f32m1 (v, 8.9, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f8 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfsqrt_v_f32m1 (v, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f9 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfrec7_v_f32m1 (v, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+void f10 (int8_t* base1,int8_t* base2,int8_t* out,int n)\n+{\n+  vint8mf4_t v = __riscv_vle8_v_i8mf4 (base1, 32);\n+  vbool32_t m = __riscv_vlm_v_b32 (base1 + 200, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vmerge_vxm_i8mf4 (v, 100, m, 32);\n+    v = __riscv_vle8_v_i8mf4_tu (v, base2, 32);\n+  }\n+  __riscv_vse8_v_i8mf4 (out, v, 32);\n+}\n+\n+void f11 (void* base1,void* base2,void* out,int n)\n+{\n+  vfloat32m1_t v = __riscv_vle32_v_f32m1 (base1, 32);\n+  vbool32_t m = __riscv_vlm_v_b32 (base1 + 200, 32);\n+  for (int i = 0; i < n; i++){\n+    v = __riscv_vfmerge_vfm_f32m1 (v, 8.9, m, 32);\n+    v = __riscv_vle32_v_f32m1_tu (v, base2, 32);\n+  }\n+  __riscv_vse32_v_f32m1 (out, v, 32);\n+}\n+\n+/* { dg-final { scan-assembler-not {vmv1r} } } */"}]}