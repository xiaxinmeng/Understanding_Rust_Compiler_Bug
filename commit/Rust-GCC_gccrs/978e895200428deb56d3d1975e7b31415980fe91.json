{"sha": "978e895200428deb56d3d1975e7b31415980fe91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4ZTg5NTIwMDQyOGRlYjU2ZDNkMTk3NWU3YjMxNDE1OTgwZmU5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:52:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:52:33Z"}, "message": "(INITIAL_ELIMINATION_OFFSET): Subtract\ncurrent_function_pretend_args_size from OFFSET for AP.\n\nFrom-SVN: r3961", "tree": {"sha": "0adae7df73cfecf04259f477ff6a5b01b85e4457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0adae7df73cfecf04259f477ff6a5b01b85e4457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/978e895200428deb56d3d1975e7b31415980fe91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978e895200428deb56d3d1975e7b31415980fe91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978e895200428deb56d3d1975e7b31415980fe91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978e895200428deb56d3d1975e7b31415980fe91/comments", "author": null, "committer": null, "parents": [{"sha": "2700ac936a66273b66757ce51c42df0fe6180870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2700ac936a66273b66757ce51c42df0fe6180870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2700ac936a66273b66757ce51c42df0fe6180870"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "c69aade111f3db08893347c4d0d1b2ac0b063047", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978e895200428deb56d3d1975e7b31415980fe91/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978e895200428deb56d3d1975e7b31415980fe91/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=978e895200428deb56d3d1975e7b31415980fe91", "patch": "@@ -601,7 +601,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n /* Definitions for register eliminations.\n \n-   We have two registers that can be eliminated on the i386.  First, the\n+   We have two registers that can be eliminated on the Alpha.  First, the\n    frame pointer register can often be eliminated in favor of the stack\n    pointer register.  Secondly, the argument pointer register can always be\n    eliminated; it is replaced with either the stack or frame pointer. */\n@@ -630,9 +630,14 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n { if ((FROM) == FRAME_POINTER_REGNUM && (TO) == STACK_POINTER_REGNUM)\t\\\n     (OFFSET) = 0;\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    (OFFSET) = (get_frame_size () + current_function_outgoing_args_size \\\n-\t\t+ current_function_pretend_args_size\t\t\t\\\n-\t\t+ alpha_sa_size () + 15) & ~ 15;\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      (OFFSET) = ((get_frame_size () + current_function_outgoing_args_size \\\n+\t\t   + current_function_pretend_args_size\t\t\t\\\n+\t\t   + alpha_sa_size () + 15)\t\t\t\t\\\n+\t\t  & ~ 15);\t\t\t\t\t\t\\\n+      if ((FROM) == ARG_POINTER_REGNUM)\t\t\t\t\t\\\n+\t(OFFSET) -= current_function_pretend_args_size;\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n }\n \n /* Define this if stack space is still allocated for a parameter passed"}]}