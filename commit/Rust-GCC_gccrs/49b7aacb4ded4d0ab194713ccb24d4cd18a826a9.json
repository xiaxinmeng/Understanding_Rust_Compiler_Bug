{"sha": "49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliN2FhY2I0ZGVkNGQwYWIxOTQ3MTNjY2IyNGQ0Y2QxOGE4MjZhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-05-21T23:27:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-21T23:27:50Z"}, "message": "init.c (build_vec_delete): Copy the address into a temporary variable before calling build_vec_delete_1.\n\n        * init.c (build_vec_delete): Copy the address into a temporary\n        variable before calling build_vec_delete_1.\n        * decl2.c (delete_sanity): Don't call stabilize_reference.\n\nFrom-SVN: r67072", "tree": {"sha": "00dff20d1a02c10136c2bb463d14aef3ad2b267b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00dff20d1a02c10136c2bb463d14aef3ad2b267b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9008d5b47e4efee754b14d5587a61fd9e61b10b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9008d5b47e4efee754b14d5587a61fd9e61b10b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9008d5b47e4efee754b14d5587a61fd9e61b10b1"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "44375350950e0588bea72cf04bf97b77b3ce29bc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "patch": "@@ -1,3 +1,9 @@\n+2003-05-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* init.c (build_vec_delete): Copy the address into a temporary\n+\tvariable before calling build_vec_delete_1.\n+\t* decl2.c (delete_sanity): Don't call stabilize_reference.\n+\n 2003-05-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* pt.c (register_specialization): Update the decl's location,"}, {"sha": "e24d558c465cdfbc55828e069945061ac198094c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "patch": "@@ -490,8 +490,7 @@ delete_sanity (tree exp, tree size, int doing_vec, int use_global_delete)\n   if (TREE_CODE (exp) == OFFSET_REF)\n     exp = resolve_offset_ref (exp);\n   exp = convert_from_reference (exp);\n-  t = stabilize_reference (exp);\n-  t = build_expr_type_conversion (WANT_POINTER, t, true);\n+  t = build_expr_type_conversion (WANT_POINTER, exp, true);\n \n   if (t == NULL_TREE || t == error_mark_node)\n     {"}, {"sha": "1b6ba8f40c05bb7c6dcf75dfc9153ed07f5490ed", "filename": "gcc/cp/init.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49b7aacb4ded4d0ab194713ccb24d4cd18a826a9/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=49b7aacb4ded4d0ab194713ccb24d4cd18a826a9", "patch": "@@ -3359,21 +3359,24 @@ build_vec_delete (base, maxindex, auto_delete_vec, use_global_delete)\n      int use_global_delete;\n {\n   tree type;\n+  tree rval;\n+  tree base_init = NULL_TREE;\n \n   if (TREE_CODE (base) == OFFSET_REF)\n     base = resolve_offset_ref (base);\n \n   type = TREE_TYPE (base);\n \n-  base = stabilize_reference (base);\n-\n   if (TREE_CODE (type) == POINTER_TYPE)\n     {\n       /* Step back one from start of vector, and read dimension.  */\n       tree cookie_addr;\n \n       if (TREE_SIDE_EFFECTS (base))\n-\tbase = save_expr (base);\n+\t{\n+\t  base_init = get_target_expr (base);\n+\t  base = TARGET_EXPR_SLOT (base_init);\n+\t}\n       type = strip_array_types (TREE_TYPE (type));\n       cookie_addr = build (MINUS_EXPR,\n \t\t\t   build_pointer_type (sizetype),\n@@ -3388,7 +3391,10 @@ build_vec_delete (base, maxindex, auto_delete_vec, use_global_delete)\n       type = strip_array_types (type);\n       base = build_unary_op (ADDR_EXPR, base, 1);\n       if (TREE_SIDE_EFFECTS (base))\n-\tbase = save_expr (base);\n+\t{\n+\t  base_init = get_target_expr (base);\n+\t  base = TARGET_EXPR_SLOT (base_init);\n+\t}\n     }\n   else\n     {\n@@ -3397,6 +3403,10 @@ build_vec_delete (base, maxindex, auto_delete_vec, use_global_delete)\n       return error_mark_node;\n     }\n \n-  return build_vec_delete_1 (base, maxindex, type, auto_delete_vec,\n+  rval = build_vec_delete_1 (base, maxindex, type, auto_delete_vec,\n \t\t\t     use_global_delete);\n+  if (base_init)\n+    rval = build (COMPOUND_EXPR, TREE_TYPE (rval), base_init, rval);\n+\n+  return rval;\n }"}]}