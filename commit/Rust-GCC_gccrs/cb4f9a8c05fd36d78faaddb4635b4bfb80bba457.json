{"sha": "cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0ZjlhOGMwNWZkMzZkNzhmYWFkZGI0NjM1YjRiZmI4MGJiYTQ1Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-15T00:19:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-15T00:19:07Z"}, "message": "LWG 3039 Unnecessary decay in thread and packaged_task\n\n\t* include/std/future (__constrain_pkgdtask): Replace with ...\n\t(packaged_task::__not_same): New alias template, using\n\t__remove_cvref_t instead of decay.\n\t* include/std/thread (thread::__not_same): Add comment.\n\nFrom-SVN: r261618", "tree": {"sha": "5d50c2c7af59c9318d5d85923118f76535e23f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d50c2c7af59c9318d5d85923118f76535e23f50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "024e96b90bd2bc4f88aaeb62295d6c919a5cd804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024e96b90bd2bc4f88aaeb62295d6c919a5cd804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024e96b90bd2bc4f88aaeb62295d6c919a5cd804"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "aafffa58c5c4f58b186e559b2b523d5a84a82bca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "patch": "@@ -1,3 +1,11 @@\n+2018-06-15  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tLWG 3039 Unnecessary decay in thread and packaged_task\n+\t* include/std/future (__constrain_pkgdtask): Replace with ...\n+\t(packaged_task::__not_same): New alias template, using\n+\t__remove_cvref_t instead of decay.\n+\t* include/std/thread (thread::__not_same): Add comment.\n+\n 2018-06-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tLWG 3075 basic_string needs deduction guides from basic_string_view"}, {"sha": "937c05ef2b24fc0c45174ceca65c42996de6dfb5", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "patch": "@@ -1462,22 +1462,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t static_cast<_Alloc&>(_M_impl));\n     }\n \n-  template<typename _Task, typename _Fn, bool\n-\t   = is_same<_Task, typename decay<_Fn>::type>::value>\n-    struct __constrain_pkgdtask\n-    { typedef void __type; };\n-\n-  template<typename _Task, typename _Fn>\n-    struct __constrain_pkgdtask<_Task, _Fn, true>\n-    { };\n-\n   /// packaged_task\n   template<typename _Res, typename... _ArgTypes>\n     class packaged_task<_Res(_ArgTypes...)>\n     {\n       typedef __future_base::_Task_state_base<_Res(_ArgTypes...)> _State_type;\n       shared_ptr<_State_type>                   _M_state;\n \n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 3039. Unnecessary decay in thread and packaged_task\n+      template<typename _Fn, typename _Fn2 = __remove_cvref_t<_Fn>>\n+\tusing __not_same\n+\t  = typename enable_if<!is_same<packaged_task, _Fn2>::value>::type;\n+\n     public:\n       // Construction and destruction\n       packaged_task() noexcept { }\n@@ -1488,8 +1485,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tpackaged_task(allocator_arg_t, const _Allocator& __a) noexcept\n \t{ }\n \n-      template<typename _Fn, typename = typename\n-\t       __constrain_pkgdtask<packaged_task, _Fn>::__type>\n+      template<typename _Fn, typename = __not_same<_Fn>>\n \texplicit\n \tpackaged_task(_Fn&& __fn)\n \t: packaged_task(allocator_arg, std::allocator<int>(),\n@@ -1499,11 +1495,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 2097.  packaged_task constructors should be constrained\n       // 2407. [this constructor should not be] explicit\n-      template<typename _Fn, typename _Alloc, typename = typename\n-\t       __constrain_pkgdtask<packaged_task, _Fn>::__type>\n+      template<typename _Fn, typename _Alloc, typename = __not_same<_Fn>>\n \tpackaged_task(allocator_arg_t, const _Alloc& __a, _Fn&& __fn)\n \t: _M_state(__create_task_state<_Res(_ArgTypes...)>(\n-\t\t    std::forward<_Fn>(__fn), __a))\n+\t\t   std::forward<_Fn>(__fn), __a))\n \t{ }\n \n       ~packaged_task()"}, {"sha": "13acd6a3091a58d9dbdcbb4200b60df940c6d0d0", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb4f9a8c05fd36d78faaddb4635b4bfb80bba457/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=cb4f9a8c05fd36d78faaddb4635b4bfb80bba457", "patch": "@@ -104,6 +104,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     // _GLIBCXX_RESOLVE_LIB_DEFECTS\n     // 2097.  packaged_task constructors should be constrained\n+    // 3039. Unnecessary decay in thread and packaged_task\n     template<typename _Tp>\n       using __not_same = __not_<is_same<__remove_cvref_t<_Tp>, thread>>;\n "}]}