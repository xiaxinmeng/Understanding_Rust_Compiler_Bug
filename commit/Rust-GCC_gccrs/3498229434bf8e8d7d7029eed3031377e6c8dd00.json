{"sha": "3498229434bf8e8d7d7029eed3031377e6c8dd00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5ODIyOTQzNGJmOGU4ZDdkNzAyOWVlZDMwMzEzNzdlNmM4ZGQwMA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-04-11T06:21:05Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-04-11T06:21:05Z"}, "message": "varasm.c (text_section): Use TEXT_SECTION_ASM_OP and ASM_OUTPUT_ALIGN instead of SECTION_FORMAT_STRING...\n\n2004-04-11  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * varasm.c (text_section): Use TEXT_SECTION_ASM_OP and\n        ASM_OUTPUT_ALIGN instead of SECTION_FORMAT_STRING\n        and NORMAL_TEXT_SECTION_NAME.\n        (unlikely_text_section): Check targetm.have_named_sections\n        instead of TARGET_ASM_NAMED_SECTION and use TEXT_SECTION_ASM_OP\n        instead of SECTION_FORMAT_STRING.\n        * config/mips/iris5.h (current_section_name): Add\n        in_unlikely_executed_text case and move the abort into the switch.\n        * config/rs6000/sysv4.h (HOT_TEXT_SECTION_NAME): Remove.\n        (NORMAL_TEXT_SECTION_NAME): Remove.\n        (UNLIKELY_EXECUTED_TEXT_SECTION_NAME): Remove.\n        (SECTION_FORMAT_STRING): Remove.\n        * defaults.h (SECTION_FORMAT_STRING): Remove.\n        * tm.texi (NORMAL_TEXT_SECTION_NAME): Remove.\n        (SECTION_FORMAT_STRING): Remove.\n\nFrom-SVN: r80593", "tree": {"sha": "ab47828054759e24da4513df7c736dc1a32acd86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab47828054759e24da4513df7c736dc1a32acd86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3498229434bf8e8d7d7029eed3031377e6c8dd00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3498229434bf8e8d7d7029eed3031377e6c8dd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3498229434bf8e8d7d7029eed3031377e6c8dd00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3498229434bf8e8d7d7029eed3031377e6c8dd00/comments", "author": null, "committer": null, "parents": [{"sha": "0333e091f7ac72f1354ee14d2d2c219bb290e100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0333e091f7ac72f1354ee14d2d2c219bb290e100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0333e091f7ac72f1354ee14d2d2c219bb290e100"}], "stats": {"total": 62, "additions": 30, "deletions": 32}, "files": [{"sha": "839e6483e554a951ead7331989976c56a5eaf400", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -1,3 +1,21 @@\n+2004-04-11  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* varasm.c (text_section): Use TEXT_SECTION_ASM_OP and\n+\tASM_OUTPUT_ALIGN instead of SECTION_FORMAT_STRING\n+\tand NORMAL_TEXT_SECTION_NAME.\n+\t(unlikely_text_section): Check targetm.have_named_sections\n+\tinstead of TARGET_ASM_NAMED_SECTION and use TEXT_SECTION_ASM_OP\n+\tinstead of SECTION_FORMAT_STRING.\n+\t* config/mips/iris5.h (current_section_name): Add\n+\tin_unlikely_executed_text case and move the abort into the switch.\n+\t* config/rs6000/sysv4.h (HOT_TEXT_SECTION_NAME): Remove.\n+\t(NORMAL_TEXT_SECTION_NAME): Remove.\n+\t(UNLIKELY_EXECUTED_TEXT_SECTION_NAME): Remove.\n+\t(SECTION_FORMAT_STRING): Remove.\n+\t* defaults.h (SECTION_FORMAT_STRING): Remove.\n+\t* tm.texi (NORMAL_TEXT_SECTION_NAME): Remove.\n+\t(SECTION_FORMAT_STRING): Remove.\n+\n 2004-04-10  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-typeck.c (common_type): Prefer long long to long when same"}, {"sha": "0e7eaaddd6883d2ce0ec60efc4437b3172b449d3", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -213,6 +213,7 @@ current_section_name (void)\t\t\t\t\t\t\\\n   switch (in_section)\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n     case no_section:\treturn NULL;\t\t\t\t\t\\\n+    case in_unlikely_executed_text:\t\t\t\t\t\\\n     case in_text:\treturn \".text\";\t\t\t\t\t\\\n     case in_data:\treturn \".data\";\t\t\t\t\t\\\n     case in_bss:\treturn \".bss\";\t\t\t\t\t\\\n@@ -223,8 +224,8 @@ current_section_name (void)\t\t\t\t\t\t\\\n \treturn \".rdata\";\t\t\t\t\t\t\\\n     case in_named:\t\t\t\t\t\t\t\\\n       return in_named_name;\t\t\t\t\t\t\\\n+    default: abort();\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  abort ();\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n unsigned int\t\t\t\t\t\t\t\t\\"}, {"sha": "1e0ac3707f6d3d1d2d152f6ed294dad559bdad2a", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -434,11 +434,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define\tBSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n \n-#define HOT_TEXT_SECTION_NAME \".text\"\n-#define NORMAL_TEXT_SECTION_NAME \".text\"\n-#define UNLIKELY_EXECUTED_TEXT_SECTION_NAME \".text.unlikely\"\n-#define SECTION_FORMAT_STRING \".section\\t\\\"%s\\\"\\n\\t.align 2\\n\"\n-\n /* Override elfos.h definition.  */\n #undef\tINIT_SECTION_ASM_OP\n #define\tINIT_SECTION_ASM_OP \"\\t.section\\t\\\".init\\\",\\\"ax\\\"\""}, {"sha": "697ed8eca0ca1af47ae7e11d975ab17ed2c29327", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -631,10 +631,6 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define UNLIKELY_EXECUTED_TEXT_SECTION_NAME \"text.unlikely\"\n #endif\n \n-#ifndef SECTION_FORMAT_STRING\n-#define SECTION_FORMAT_STRING \"\\t.section\\t%s\\n\\t.align 2\\n\"\n-#endif\n-\n #ifndef HAS_LONG_COND_BRANCH\n #define HAS_LONG_COND_BRANCH 0\n #endif"}, {"sha": "39ddcc391309057eb74fdc75015cefd60df81b68", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -5802,13 +5802,6 @@ frequently executed functions of the program.  If not defined, GCC will provide\n a default definition if the target supports named sections.\n @end defmac\n \n-@defmac NORMAL_TEXT_SECTION_NAME\n-If defined, a C string constant for the name of the section containing code \n-that does not go into the ``unlikely executed text'' partition.  This is used\n-as part of the optimization that partitions hot and cold basic blocks into\n-separate sections in the .o and executable files.\n-@end defmac\n-\n @defmac UNLIKELY_EXECUTED_TEXT_SECTION_NAME\n If defined, a C string constant for the name of the section containing unlikely\n executed functions in the program.\n@@ -5860,12 +5853,6 @@ finalization code.  If not defined, GCC will assume such a section does\n not exist.\n @end defmac\n \n-@defmac SECTION_FORMAT_STRING\n-If defined, format string used by fprintf to write out the\n-text section headers for the hot and cold sections of the\n-assembly file, when hot and cold partitioning is being performed.\n-@end defmac\n-\n @defmac CRT_CALL_STATIC_FUNCTION (@var{section_op}, @var{function})\n If defined, an ASM statement that switches to a different section\n via @var{section_op}, calls @var{function}, and switches back to"}, {"sha": "780bba8a11a7c1c2361c244b50dc0f36fef0e8a2", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3498229434bf8e8d7d7029eed3031377e6c8dd00/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=3498229434bf8e8d7d7029eed3031377e6c8dd00", "patch": "@@ -208,7 +208,8 @@ text_section (void)\n   if (in_section != in_text)\n     {\n       in_section = in_text;\n-      fprintf (asm_out_file, SECTION_FORMAT_STRING, NORMAL_TEXT_SECTION_NAME);\n+      fprintf (asm_out_file, \"%s\\n\", TEXT_SECTION_ASM_OP);\n+      ASM_OUTPUT_ALIGN (asm_out_file, 2);\n     }\n }\n \n@@ -221,15 +222,15 @@ unlikely_text_section (void)\n       &&  (in_section != in_named \n \t   || strcmp (in_named_name, UNLIKELY_EXECUTED_TEXT_SECTION_NAME) != 0))\n     {\n-#ifdef TARGET_ASM_NAMED_SECTION\n-\t\n-      named_section (NULL_TREE, UNLIKELY_EXECUTED_TEXT_SECTION_NAME, 0);\n+      if (targetm.have_named_sections)\n+        named_section (NULL_TREE, UNLIKELY_EXECUTED_TEXT_SECTION_NAME, 0);\n+      else\n+\t{\n+\t  in_section = in_unlikely_executed_text;\n+\t  fprintf (asm_out_file, \"%s\\n\", TEXT_SECTION_ASM_OP);\n+\t  ASM_OUTPUT_ALIGN (asm_out_file, 2);\n+\t}\n       \n-#else\n-      in_section = in_unlikely_executed_text;\n-      fprintf (asm_out_file, SECTION_FORMAT_STRING, \n-\t       UNLIKELY_EXECUTED_TEXT_SECTION_NAME);\n-#endif /* ifdef TARGET_ASM_NAMED_SECTION */\n       if (!unlikely_section_label_printed)\n \t{\n \t  fprintf (asm_out_file, \"__%s_unlikely_section:\\n\", "}]}