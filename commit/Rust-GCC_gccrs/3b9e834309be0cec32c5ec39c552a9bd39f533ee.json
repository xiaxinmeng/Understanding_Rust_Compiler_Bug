{"sha": "3b9e834309be0cec32c5ec39c552a9bd39f533ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I5ZTgzNDMwOWJlMGNlYzMyYzVlYzM5YzU1MmE5YmQzOWY1MzNlZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-01-18T17:55:03Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-01-18T17:55:03Z"}, "message": "* gcc-interface/utils.c (create_var_decl_1): Fix formatting nits.\n\nFrom-SVN: r156018", "tree": {"sha": "1f75c5d8b28882df30c3e8f281916a7e53031441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f75c5d8b28882df30c3e8f281916a7e53031441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b9e834309be0cec32c5ec39c552a9bd39f533ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9e834309be0cec32c5ec39c552a9bd39f533ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9e834309be0cec32c5ec39c552a9bd39f533ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9e834309be0cec32c5ec39c552a9bd39f533ee/comments", "author": null, "committer": null, "parents": [{"sha": "f249b40509dc146068a828032871baef906f688b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f249b40509dc146068a828032871baef906f688b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f249b40509dc146068a828032871baef906f688b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "a794e5b734226c8e6d770af8c3a9cdb942655e6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9e834309be0cec32c5ec39c552a9bd39f533ee/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9e834309be0cec32c5ec39c552a9bd39f533ee/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3b9e834309be0cec32c5ec39c552a9bd39f533ee", "patch": "@@ -1,3 +1,7 @@\n+2010-01-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (create_var_decl_1): Fix formatting nits.\n+\n 2010-01-18  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/42068"}, {"sha": "1444d6e8bccdc3c258823c4fb755dba7d13acce2", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9e834309be0cec32c5ec39c552a9bd39f533ee/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9e834309be0cec32c5ec39c552a9bd39f533ee/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=3b9e834309be0cec32c5ec39c552a9bd39f533ee", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -1385,8 +1385,9 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n   /* At the global level, an initializer requiring code to be generated\n      produces elaboration statements.  Check that such statements are allowed,\n      that is, not violating a No_Elaboration_Code restriction.  */\n-  if (global_bindings_p () && var_init != 0 && ! init_const)\n+  if (global_bindings_p () && var_init != 0 && !init_const)\n     Check_Elaboration_Code_Allowed (gnat_node);\n+\n   DECL_INITIAL  (var_decl) = var_init;\n   TREE_READONLY (var_decl) = const_flag;\n   DECL_EXTERNAL (var_decl) = extern_flag;\n@@ -1401,7 +1402,7 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n      go in DATA instead, thus increasing the size of the executable.  */\n   if (!flag_no_common\n       && TREE_CODE (var_decl) == VAR_DECL\n-      && TREE_PUBLIC   (var_decl)\n+      && TREE_PUBLIC (var_decl)\n       && !have_global_bss_p ())\n     DECL_COMMON (var_decl) = 1;\n "}]}