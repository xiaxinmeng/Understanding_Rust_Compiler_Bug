{"sha": "09c954dc79de82ab6220e151d032e3957a5a6008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDljOTU0ZGM3OWRlODJhYjYyMjBlMTUxZDAzMmUzOTU3YTVhNjAwOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:44:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:44:35Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* hostparm.ads: Put back definition of OpenVMS as False to aid\n\tthe transition process.\n\t* sem_ch7.adb: Minor reformatting.\n\t* prj-env.adb: Minor code fix.\n\t* gnat_rm.texi: Complete previous change.\n\t* sem_ch3.adb: Minor reformatting.\n\t* sem_ch6.adb: Minor reformatting.\n\t* sem_elab.adb: Minor reformatting.\n\t* exp_strm.adb: Complete previous change.\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Unreferenced_Entity): Do not issue a\n\twarning when a constant is unreferenced and its type has pragma\n\tUnreferenced_Objects.\n\n2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb: Flag2 is now known as\n\tIs_Hidden_Non_Overridden_Subprogram.\n\t(Is_Hidden_Non_Overridden_Subprogram): New routine.\n\t(Set_Is_Hidden_Non_Overridden_Subprogram): New routine.\n\t(Write_Entity_Fields): Output Flag2.\n\t* einfo.ads: New attribute Is_Hidden_Non_Overridden_Subprogram\n\talong with occurrences in entities.\n\t(Is_Hidden_Non_Overridden_Subprogram): New routine and pragma Inline.\n\t(Set_Is_Hidden_Non_Overridden_Subprogram): New routine\n\tand pragma Inline.\n\t* sem_ch7.adb (Install_Package_Entity): Do not enter implicitly\n\tdeclared non-overriden homographs into visibility.\n\t* sem_ch13.adb (Freeze_Entity_Checks): Hide all\n\timplicitly declared non-overriden homographs.\n\t(Hide_Non_Overridden_Subprograms): New routine.\n\nFrom-SVN: r213434", "tree": {"sha": "0d65d5c8f677d7c79d2b41e87cc5cfa0ce8be44c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d65d5c8f677d7c79d2b41e87cc5cfa0ce8be44c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09c954dc79de82ab6220e151d032e3957a5a6008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c954dc79de82ab6220e151d032e3957a5a6008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c954dc79de82ab6220e151d032e3957a5a6008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c954dc79de82ab6220e151d032e3957a5a6008/comments", "author": null, "committer": null, "parents": [{"sha": "cd916532cfb9d71581ba8b1749d669d5d63cfa8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd916532cfb9d71581ba8b1749d669d5d63cfa8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd916532cfb9d71581ba8b1749d669d5d63cfa8c"}], "stats": {"total": 315, "additions": 257, "deletions": 58}, "files": [{"sha": "69794aa4006d81eb9a4d52467f6c7135c9bf3431", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -1,3 +1,39 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* hostparm.ads: Put back definition of OpenVMS as False to aid\n+\tthe transition process.\n+\t* sem_ch7.adb: Minor reformatting.\n+\t* prj-env.adb: Minor code fix.\n+\t* gnat_rm.texi: Complete previous change.\n+\t* sem_ch3.adb: Minor reformatting.\n+\t* sem_ch6.adb: Minor reformatting.\n+\t* sem_elab.adb: Minor reformatting.\n+\t* exp_strm.adb: Complete previous change.\n+\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Unreferenced_Entity): Do not issue a\n+\twarning when a constant is unreferenced and its type has pragma\n+\tUnreferenced_Objects.\n+\n+2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Flag2 is now known as\n+\tIs_Hidden_Non_Overridden_Subprogram.\n+\t(Is_Hidden_Non_Overridden_Subprogram): New routine.\n+\t(Set_Is_Hidden_Non_Overridden_Subprogram): New routine.\n+\t(Write_Entity_Fields): Output Flag2.\n+\t* einfo.ads: New attribute Is_Hidden_Non_Overridden_Subprogram\n+\talong with occurrences in entities.\n+\t(Is_Hidden_Non_Overridden_Subprogram): New routine and pragma Inline.\n+\t(Set_Is_Hidden_Non_Overridden_Subprogram): New routine\n+\tand pragma Inline.\n+\t* sem_ch7.adb (Install_Package_Entity): Do not enter implicitly\n+\tdeclared non-overriden homographs into visibility.\n+\t* sem_ch13.adb (Freeze_Entity_Checks): Hide all\n+\timplicitly declared non-overriden homographs.\n+\t(Hide_Non_Overridden_Subprograms): New routine.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* snames.ads-tmpl, s-os_lib.adb, s-os_lib.ads, s-fileio.adb: Remove"}, {"sha": "038fe398bf5af2fcb90b06de690cdc8f7710f8d3", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -270,6 +270,8 @@ package body Einfo is\n    --  the spec of Einfo for further details.\n \n    --    Is_Inlined_Always               Flag1\n+   --    Is_Hidden_Non_Overridden_Subprogram\n+   --                                    Flag2\n    --    Is_Frozen                       Flag4\n    --    Has_Discriminants               Flag5\n    --    Is_Dispatching_Operation        Flag6\n@@ -569,7 +571,6 @@ package body Einfo is\n    --    No_Predicate_On_Actual          Flag275\n    --    No_Dynamic_Predicate_On_Actual  Flag276\n \n-   --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n    --    (unused)                        Flag132\n@@ -2072,6 +2073,12 @@ package body Einfo is\n       return Flag57 (Id);\n    end Is_Hidden;\n \n+   function Is_Hidden_Non_Overridden_Subprogram (Id : E) return B is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Procedure));\n+      return Flag2 (Id);\n+   end Is_Hidden_Non_Overridden_Subprogram;\n+\n    function Is_Hidden_Open_Scope (Id : E) return B is\n    begin\n       return Flag171 (Id);\n@@ -4854,6 +4861,12 @@ package body Einfo is\n       Set_Flag57 (Id, V);\n    end Set_Is_Hidden;\n \n+   procedure Set_Is_Hidden_Non_Overridden_Subprogram (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Procedure));\n+      Set_Flag2 (Id, V);\n+   end Set_Is_Hidden_Non_Overridden_Subprogram;\n+\n    procedure Set_Is_Hidden_Open_Scope (Id : E; V : B := True) is\n    begin\n       Set_Flag171 (Id, V);\n@@ -8373,6 +8386,8 @@ package body Einfo is\n       W (\"Is_Generic_Instance\",             Flag130 (Id));\n       W (\"Is_Generic_Type\",                 Flag13  (Id));\n       W (\"Is_Hidden\",                       Flag57  (Id));\n+      W (\"Is_Hidden_Non_Overridden_Subprogram\",\n+                                            Flag2   (Id));\n       W (\"Is_Hidden_Open_Scope\",            Flag171 (Id));\n       W (\"Is_Immediately_Visible\",          Flag7   (Id));\n       W (\"Is_Implementation_Defined\",       Flag254 (Id));"}, {"sha": "4cda04445845f2287f97a8a5d695be4e2777282a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -2429,6 +2429,12 @@ package Einfo is\n --       child unit, and when compiling a private child unit (see Install_\n --       Private_Declaration in sem_ch7).\n \n+--    Is_Hidden_Non_Overridden_Subprogram (Flag2)\n+--       Defined in all entities. Set for implicitly declared non-generic\n+--       subprograms that require overriding or are null procedures, and are\n+--       hidden by a non-conformant homograph with the same characteristics\n+--       (Ada RM 8.3 12.3/2).\n+\n --    Is_Hidden_Open_Scope (Flag171)\n --       Defined in all entities. Set for a scope that contains the\n --       instantiation of a child unit, and whose entities are not visible\n@@ -5666,6 +5672,7 @@ package Einfo is\n    --    Is_Discriminant_Check_Function      (Flag264)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Generic_Actual_Subprogram        (Flag274)  (non-generic case only)\n+   --    Is_Hidden_Non_Overridden_Subprogram (Flag2)    (non-generic case only)\n    --    Is_Inlined_Always                   (Flag1)    (non-generic case only)\n    --    Is_Instantiated                     (Flag126)  (generic case only)\n    --    Is_Intrinsic_Subprogram             (Flag64)\n@@ -5959,9 +5966,10 @@ package Einfo is\n    --    Is_Called                           (Flag102)  (non-generic case only)\n    --    Is_Constructor                      (Flag76)\n    --    Is_Eliminated                       (Flag124)\n+   --    Is_Generic_Actual_Subprogram        (Flag274)  (non-generic case only)\n+   --    Is_Hidden_Non_Overridden_Subprogram (Flag2)    (non-generic case only)\n    --    Is_Inlined_Always                   (Flag1)    (non-generic case only)\n    --    Is_Instantiated                     (Flag126)  (generic case only)\n-   --    Is_Generic_Actual_Subprogram        (Flag274)  (non-generic case only)\n    --    Is_Interrupt_Handler                (Flag89)\n    --    Is_Intrinsic_Subprogram             (Flag64)\n    --    Is_Invariant_Procedure              (Flag257)  (non-generic case only)\n@@ -6673,6 +6681,7 @@ package Einfo is\n    function Is_Frozen                           (Id : E) return B;\n    function Is_Generic_Instance                 (Id : E) return B;\n    function Is_Hidden                           (Id : E) return B;\n+   function Is_Hidden_Non_Overridden_Subprogram (Id : E) return B;\n    function Is_Hidden_Open_Scope                (Id : E) return B;\n    function Is_Immediately_Visible              (Id : E) return B;\n    function Is_Implementation_Defined           (Id : E) return B;\n@@ -7311,6 +7320,8 @@ package Einfo is\n    procedure Set_Is_Generic_Instance             (Id : E; V : B := True);\n    procedure Set_Is_Generic_Type                 (Id : E; V : B := True);\n    procedure Set_Is_Hidden                       (Id : E; V : B := True);\n+   procedure Set_Is_Hidden_Non_Overridden_Subprogram\n+                                                 (Id : E; V : B := True);\n    procedure Set_Is_Hidden_Open_Scope            (Id : E; V : B := True);\n    procedure Set_Is_Immediately_Visible          (Id : E; V : B := True);\n    procedure Set_Is_Implementation_Defined       (Id : E; V : B := True);\n@@ -8079,6 +8090,7 @@ package Einfo is\n    pragma Inline (Is_Generic_Type);\n    pragma Inline (Is_Generic_Unit);\n    pragma Inline (Is_Hidden);\n+   pragma Inline (Is_Hidden_Non_Overridden_Subprogram);\n    pragma Inline (Is_Hidden_Open_Scope);\n    pragma Inline (Is_Immediately_Visible);\n    pragma Inline (Is_Implementation_Defined);\n@@ -8536,6 +8548,7 @@ package Einfo is\n    pragma Inline (Set_Is_Generic_Instance);\n    pragma Inline (Set_Is_Generic_Type);\n    pragma Inline (Set_Is_Hidden);\n+   pragma Inline (Set_Is_Hidden_Non_Overridden_Subprogram);\n    pragma Inline (Set_Is_Hidden_Open_Scope);\n    pragma Inline (Set_Is_Immediately_Visible);\n    pragma Inline (Set_Is_Implementation_Defined);"}, {"sha": "dfb5f0dd2e093583b674d04ed09615ecf7ccf1a3", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -620,14 +620,11 @@ package body Exp_Strm is\n       --  and we are in the body of the default implementation of a 'Read\n       --  attribute, set target type to force a constraint check (13.13.2(35)).\n       --  If the type of the discriminant is currently private, add another\n-      --  unchecked conversion from the full view. We also do this check if\n-      --  this is an elementary read call in the source program (as opposed\n-      --  to one generated as part of a composite read).\n-\n-      if (Nkind (Targ) = N_Identifier\n-           and then Is_Internal_Name (Chars (Targ))\n-           and then Is_TSS (Scope (Entity (Targ)), TSS_Stream_Read))\n-        or else Comes_From_Source (N)\n+      --  unchecked conversion from the full view.\n+\n+      if Nkind (Targ) = N_Identifier\n+        and then Is_Internal_Name (Chars (Targ))\n+        and then Is_TSS (Scope (Entity (Targ)), TSS_Stream_Read)\n       then\n          Res :=\n            Unchecked_Convert_To (Base_Type (U_Type),"}, {"sha": "05f79b8ee5fdce1a4aa54ac33791e53757ee64ed", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -3762,6 +3762,7 @@ MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n MECHANISM_NAME ::= Value | Reference\n+@end smallexample\n \n @noindent\n This pragma is identical to @code{Import_Procedure} except that the"}, {"sha": "b9b7bf4bfc886107d2df15503ff436eb4a4128e0", "filename": "gcc/ada/hostparm.ads", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fhostparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fhostparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fhostparm.ads?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,13 +41,8 @@ package Hostparm is\n    -- HOST Parameters --\n    ---------------------\n \n-   Gnat_VMSp : Integer;\n-   pragma Import (C, Gnat_VMSp, \"__gnat_vmsp\");\n-\n-   OpenVMS : Boolean := Gnat_VMSp /= 0;\n-   --  Set True for OpenVMS host. See also OpenVMS target boolean in\n-   --  system-vms.ads and system-vms_64.ads and OpenVMS_On_Target boolean in\n-   --  Targparm. This is not a constant, because it can be modified by -gnatdm.\n+   OpenVMS : Boolean := False;\n+   --  Set True for OpenVMS host\n \n    Direct_Separator : constant Character;\n    pragma Import (C, Direct_Separator, \"__gnat_dir_separator\");"}, {"sha": "30f2b993e03ec662b89488a15fe6bb39ef387137", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -2047,8 +2047,8 @@ package body Prj.Env is\n                            Normalize_Pathname\n                              (Name_Buffer (First .. Last),\n                               Resolve_Links => Opt.Follow_Links_For_Dirs);\n-               New_Len  : Natural;\n-               New_Last : Natural;\n+               New_Len  : Positive;\n+               New_Last : Positive;\n \n             begin\n                --  If the absolute path was resolved and is different from"}, {"sha": "e0222b744a78366479151acbf3594ed3966883fa", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -9934,13 +9934,138 @@ package body Sem_Ch13 is\n    --------------------------\n \n    procedure Freeze_Entity_Checks (N : Node_Id) is\n+      procedure Hide_Non_Overridden_Subprograms (Typ : Entity_Id);\n+      --  Inspect the primitive operations of type Typ and hide all pairs of\n+      --  implicitly declared non-overridden homographs (Ada RM 8.3 12.3/2).\n+\n+      -------------------------------------\n+      -- Hide_Non_Overridden_Subprograms --\n+      -------------------------------------\n+\n+      procedure Hide_Non_Overridden_Subprograms (Typ : Entity_Id) is\n+         procedure Hide_Matching_Homographs\n+           (Subp_Id    : Entity_Id;\n+            Start_Elmt : Elmt_Id);\n+         --  Inspect a list of primitive operations starting with Start_Elmt\n+         --  and find matching implicitly declared non-overridden homographs\n+         --  of Subp_Id. If found, all matches along with Subp_Id are hidden\n+         --  from all visibility.\n+\n+         function Is_Non_Overridden_Or_Null_Procedure\n+           (Subp_Id : Entity_Id) return Boolean;\n+         --  Determine whether subprogram Subp_Id is implicitly declared non-\n+         --  overridden subprogram or an implicitly declared null procedure.\n+\n+         ------------------------------\n+         -- Hide_Matching_Homographs --\n+         ------------------------------\n+\n+         procedure Hide_Matching_Homographs\n+           (Subp_Id    : Entity_Id;\n+            Start_Elmt : Elmt_Id)\n+         is\n+            Prim      : Entity_Id;\n+            Prim_Elmt : Elmt_Id;\n+\n+         begin\n+            Prim_Elmt := Start_Elmt;\n+            while Present (Prim_Elmt) loop\n+               Prim := Node (Prim_Elmt);\n+\n+               --  The current primitive is implicitly declared non-overridden\n+               --  homograph of Subp_Id. Hide both subprograms from visibility.\n+\n+               if Chars (Prim) = Chars (Subp_Id)\n+                 and then Ekind (Prim) = Ekind (Subp_Id)\n+                 and then Is_Non_Overridden_Or_Null_Procedure (Prim)\n+               then\n+                  Set_Is_Hidden_Non_Overridden_Subprogram (Prim);\n+                  Set_Is_Immediately_Visible              (Prim, False);\n+                  Set_Is_Potentially_Use_Visible          (Prim, False);\n+\n+                  Set_Is_Hidden_Non_Overridden_Subprogram (Subp_Id);\n+                  Set_Is_Immediately_Visible              (Subp_Id, False);\n+                  Set_Is_Potentially_Use_Visible          (Subp_Id, False);\n+               end if;\n+\n+               Next_Elmt (Prim_Elmt);\n+            end loop;\n+         end Hide_Matching_Homographs;\n+\n+         -----------------------------------------\n+         -- Is_Non_Overridden_Or_Null_Procedure --\n+         -----------------------------------------\n+\n+         function Is_Non_Overridden_Or_Null_Procedure\n+           (Subp_Id : Entity_Id) return Boolean\n+         is\n+            Alias_Id : Entity_Id;\n+\n+         begin\n+            --  The subprogram is inherited (implicitly declared), it does not\n+            --  override and does not cover a primitive of an interface.\n+\n+            if Ekind_In (Subp_Id, E_Function, E_Procedure)\n+              and then Present (Alias (Subp_Id))\n+              and then No (Interface_Alias (Subp_Id))\n+              and then No (Overridden_Operation (Subp_Id))\n+            then\n+               Alias_Id := Alias (Subp_Id);\n+\n+               if Requires_Overriding (Alias_Id) then\n+                  return True;\n+\n+               elsif Nkind (Parent (Alias_Id)) = N_Procedure_Specification\n+                 and then Null_Present (Parent (Alias_Id))\n+               then\n+                  return True;\n+               end if;\n+            end if;\n+\n+            return False;\n+         end Is_Non_Overridden_Or_Null_Procedure;\n+\n+         --  Local variables\n+\n+         Prim_Ops  : constant Elist_Id := Direct_Primitive_Operations (Typ);\n+         Prim      : Entity_Id;\n+         Prim_Elmt : Elmt_Id;\n+\n+      --  Start of processing for Hide_Non_Overridden_Subprograms\n+\n+      begin\n+         --  Inspect the list of primitives looking for a non-overriding\n+         --  inherited null procedure.\n+\n+         if Present (Prim_Ops) then\n+            Prim_Elmt := First_Elmt (Prim_Ops);\n+            while Present (Prim_Elmt) loop\n+               Prim := Node (Prim_Elmt);\n+               Next_Elmt (Prim_Elmt);\n+\n+               if Is_Non_Overridden_Or_Null_Procedure (Prim) then\n+                  Hide_Matching_Homographs\n+                    (Subp_Id    => Prim,\n+                     Start_Elmt => Prim_Elmt);\n+               end if;\n+            end loop;\n+         end if;\n+      end Hide_Non_Overridden_Subprograms;\n+\n+      ---------------------\n+      -- Local variables --\n+      ---------------------\n+\n       E : constant Entity_Id := Entity (N);\n \n       Non_Generic_Case : constant Boolean := Nkind (N) = N_Freeze_Entity;\n       --  True in non-generic case. Some of the processing here is skipped\n       --  for the generic case since it is not needed. Basically in the\n       --  generic case, we only need to do stuff that might generate error\n       --  messages or warnings.\n+\n+   --  Start of processing for Freeze_Entity_Checks\n+\n    begin\n       --  Remember that we are processing a freezing entity. Required to\n       --  ensure correct decoration of internal entities associated with\n@@ -9976,6 +10101,18 @@ package body Sem_Ch13 is\n          Add_Internal_Interface_Entities (E);\n       end if;\n \n+      --  After all forms of overriding have been resolved, a tagged type may\n+      --  be left with a set of implicitly declared and possibly erroneous\n+      --  abstract subprograms, null procedures and subprograms that require\n+      --  overriding. If this set contains fully conformat homographs, then one\n+      --  is chosen arbitrarily (already done during resolution), otherwise all\n+      --  remaining non-conformant homographs must be hidden from visibility\n+      --  (Ada RM 8.3 12.3/2).\n+\n+      if Is_Tagged_Type (E) then\n+         Hide_Non_Overridden_Subprograms (E);\n+      end if;\n+\n       --  Check CPP types\n \n       if Ekind (E) = E_Record_Type"}, {"sha": "1221e02fc380b0eeb74e82bee12c4d45be493b38", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -13156,8 +13156,8 @@ package body Sem_Ch3 is\n             Old_C := First_Component (Typ);\n             while Present (Old_C) loop\n                if Original_Record_Component (Old_C) = Old_C\n-                and then Chars (Old_C) /= Name_uTag\n-                and then Chars (Old_C) /= Name_uParent\n+                 and then Chars (Old_C) /= Name_uTag\n+                 and then Chars (Old_C) /= Name_uParent\n                then\n                   Append_Elmt (Old_C, Comp_List);\n                end if;\n@@ -15389,10 +15389,10 @@ package body Sem_Ch3 is\n       Discriminant :=\n          First_Stored_Discriminant (Explicitly_Discriminated_Type);\n       while Present (Discriminant) loop\n-         Append_Elmt (\n-           Get_Discriminant_Value (\n-             Discriminant, Explicitly_Discriminated_Type, Constraint),\n-           Expansion);\n+         Append_Elmt\n+           (Get_Discriminant_Value\n+              (Discriminant, Explicitly_Discriminated_Type, Constraint),\n+            To => Expansion);\n          Next_Stored_Discriminant (Discriminant);\n       end loop;\n "}, {"sha": "1bfa90e46cd8b8e7f220c7671c3818af7245a2d0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -9907,7 +9907,7 @@ package body Sem_Ch6 is\n                      then\n                         Append_Elmt\n                           (Current_Scope,\n-                             Private_Dependents (Base_Type (Formal_Type)));\n+                           To => Private_Dependents (Base_Type (Formal_Type)));\n \n                         --  Freezing is delayed to ensure that Register_Prim\n                         --  will get called for this operation, which is needed"}, {"sha": "28a8516a81d933d58802d7e46647b98542578bee", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -281,8 +281,7 @@ package body Sem_Ch7 is\n       else\n          Spec_Id := Current_Entity_In_Scope (Defining_Entity (N));\n \n-         if Present (Spec_Id)\n-           and then Is_Package_Or_Generic_Package (Spec_Id)\n+         if Present (Spec_Id) and then Is_Package_Or_Generic_Package (Spec_Id)\n          then\n             Pack_Decl := Unit_Declaration_Node (Spec_Id);\n \n@@ -701,8 +700,7 @@ package body Sem_Ch7 is\n                         --  of accessing global entities.\n \n                         if Has_Pragma_Inline (E) then\n-                           if Outer\n-                             and then Check_Subprogram_Refs (D) = OK\n+                           if Outer and then Check_Subprogram_Refs (D) = OK\n                            then\n                               Has_Referencer_Except_For_Subprograms := True;\n                            else\n@@ -724,8 +722,7 @@ package body Sem_Ch7 is\n                            end if;\n \n                            if Has_Pragma_Inline (E) or else Is_Inlined (E) then\n-                              if Outer\n-                                and then Check_Subprogram_Refs (D) = OK\n+                              if Outer and then Check_Subprogram_Refs (D) = OK\n                               then\n                                  Has_Referencer_Except_For_Subprograms := True;\n                               else\n@@ -1982,10 +1979,21 @@ package body Sem_Ch7 is\n             Write_Eol;\n          end if;\n \n-         if not Is_Child_Unit (Id) then\n+         if Is_Child_Unit (Id) then\n+            null;\n+\n+         --  Do not enter implicitly inherited non-overridden subprograms of\n+         --  a tagged type back into visibility if they have non-conformant\n+         --  homographs (Ada RM 8.3 12.3/2).\n+\n+         elsif Ekind_In (Id, E_Function, E_Procedure)\n+           and then Is_Hidden_Non_Overridden_Subprogram (Id)\n+         then\n+            null;\n+\n+         else\n             Set_Is_Immediately_Visible (Id);\n          end if;\n-\n       end if;\n    end Install_Package_Entity;\n \n@@ -2022,8 +2030,7 @@ package body Sem_Ch7 is\n             --  field. This field will be empty if the entity has already been\n             --  installed due to a previous call.\n \n-            if Present (Full_View (Priv))\n-              and then Is_Visible_Dependent (Priv)\n+            if Present (Full_View (Priv)) and then Is_Visible_Dependent (Priv)\n             then\n                if Is_Private_Type (Priv) then\n                   Deps := Private_Dependents (Priv);\n@@ -2460,9 +2467,9 @@ package body Sem_Ch7 is\n               or else Type_In_Use (Etype (Id))\n               or else Type_In_Use (Etype (First_Formal (Id)))\n               or else (Present (Next_Formal (First_Formal (Id)))\n-                         and then\n-                           Type_In_Use\n-                             (Etype (Next_Formal (First_Formal (Id))))));\n+                        and then\n+                          Type_In_Use\n+                            (Etype (Next_Formal (First_Formal (Id))))));\n          else\n             if In_Use (P) and then not Is_Hidden (Id) then\n \n@@ -2643,7 +2650,7 @@ package body Sem_Ch7 is\n             --  The following test may be redundant, as this is already\n             --  diagnosed in sem_ch3. ???\n \n-            if  Is_Indefinite_Subtype (Full)\n+            if Is_Indefinite_Subtype (Full)\n               and then not Is_Indefinite_Subtype (Id)\n             then\n                Error_Msg_Sloc := Sloc (Parent (Id));\n@@ -2818,8 +2825,7 @@ package body Sem_Ch7 is\n       elsif Ekind_In (P, E_Generic_Package, E_Package)\n         and then not Ignore_Abstract_State\n         and then Present (Abstract_States (P))\n-        and then\n-            not Is_Null_State (Node (First_Elmt (Abstract_States (P))))\n+        and then not Is_Null_State (Node (First_Elmt (Abstract_States (P))))\n       then\n          return True;\n       end if;\n@@ -2946,8 +2952,7 @@ package body Sem_Ch7 is\n \n       elsif Ekind_In (P, E_Generic_Package, E_Package)\n         and then Present (Abstract_States (P))\n-        and then\n-          not Is_Null_State (Node (First_Elmt (Abstract_States (P))))\n+        and then not Is_Null_State (Node (First_Elmt (Abstract_States (P))))\n       then\n          Error_Msg_N\n            (\"info: & requires body (non-null abstract state aspect)?Y?\", P);\n@@ -3009,12 +3014,10 @@ package body Sem_Ch7 is\n            or else\n              (Is_Generic_Subprogram (E)\n                and then not Has_Completion (E))\n-\n          then\n             Error_Msg_Node_2 := E;\n             Error_Msg_NE\n-              (\"info: & requires body (& requires completion)?Y?\",\n-               E, P);\n+              (\"info: & requires body (& requires completion)?Y?\", E, P);\n \n          --  Entity that does not require completion\n "}, {"sha": "296c2a2340f92518dac24b8ef2f22509898e92a0", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -2429,8 +2429,8 @@ package body Sem_Elab is\n                       Decl);\n                   Error_Msg_N (\"\\Program_Error [<<\", Decl);\n \n-               elsif\n-                 Present (Corresponding_Body (Unit_Declaration_Node (Proc)))\n+               elsif Present\n+                       (Corresponding_Body (Unit_Declaration_Node (Proc)))\n                then\n                   Append_Elmt (Proc, Intra_Procs);\n                end if;"}, {"sha": "3971cccd836459c73464292e2f5a2a4910e08be2", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c954dc79de82ab6220e151d032e3957a5a6008/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=09c954dc79de82ab6220e151d032e3957a5a6008", "patch": "@@ -4015,14 +4015,16 @@ package body Sem_Warn is\n                end if;\n \n             when E_Constant =>\n-               if Present (Renamed_Object (E))\n-                 and then Comes_From_Source (Renamed_Object (E))\n-               then\n-                  Error_Msg_N -- CODEFIX\n-                    (\"?u?renamed constant & is not referenced!\", E);\n-               else\n-                  Error_Msg_N -- CODEFIX\n-                    (\"?u?constant & is not referenced!\", E);\n+               if not Has_Pragma_Unreferenced_Objects (Etype (E)) then\n+                  if Present (Renamed_Object (E))\n+                    and then Comes_From_Source (Renamed_Object (E))\n+                  then\n+                     Error_Msg_N -- CODEFIX\n+                       (\"?u?renamed constant & is not referenced!\", E);\n+                  else\n+                     Error_Msg_N -- CODEFIX\n+                       (\"?u?constant & is not referenced!\", E);\n+                  end if;\n                end if;\n \n             when E_In_Parameter     |"}]}