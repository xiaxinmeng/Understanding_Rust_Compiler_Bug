{"sha": "913884f792bf4ba684ef4513cf79168d37d86e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzODg0Zjc5MmJmNGJhNjg0ZWY0NTEzY2Y3OTE2OGQzN2Q4NmU5Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-31T23:52:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-31T23:52:41Z"}, "message": "re PR c/83595 (ICE: in linemap_macro_map_lookup, at libcpp/line-map.c:1008 on invalid code)\n\n\tPR c/83595\n\t* c-parser.c (c_parser_braced_init, c_parser_initelt,\n\tc_parser_conditional_expression, c_parser_cast_expression,\n\tc_parser_sizeof_expression, c_parser_alignof_expression,\n\tc_parser_postfix_expression, c_parser_omp_declare_reduction,\n\tc_parser_transaction_expression): Use set_error () method instead\n\tof setting value member to error_mark_node.\n\n\t* gcc.dg/pr83595.c: New test.\n\nFrom-SVN: r256054", "tree": {"sha": "9c53b4ced0d7b041c52b65821e840ca33e21a678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c53b4ced0d7b041c52b65821e840ca33e21a678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/913884f792bf4ba684ef4513cf79168d37d86e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913884f792bf4ba684ef4513cf79168d37d86e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913884f792bf4ba684ef4513cf79168d37d86e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913884f792bf4ba684ef4513cf79168d37d86e92/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "8e6e1fed4f077be80f22f4deb13cf70f94f2c1cf", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=913884f792bf4ba684ef4513cf79168d37d86e92", "patch": "@@ -1,3 +1,13 @@\n+2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/83595\n+\t* c-parser.c (c_parser_braced_init, c_parser_initelt,\n+\tc_parser_conditional_expression, c_parser_cast_expression,\n+\tc_parser_sizeof_expression, c_parser_alignof_expression,\n+\tc_parser_postfix_expression, c_parser_omp_declare_reduction,\n+\tc_parser_transaction_expression): Use set_error () method instead\n+\tof setting value member to error_mark_node.\n+\n 2017-12-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* c-decl.c (header_for_builtin_fn): Add integer rounding _Float<N>"}, {"sha": "c27fdaf39f970198b952e0b7de801d06d150b5cc", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=913884f792bf4ba684ef4513cf79168d37d86e92", "patch": "@@ -4582,7 +4582,7 @@ c_parser_braced_init (c_parser *parser, tree type, bool nested_p,\n   c_token *next_tok = c_parser_peek_token (parser);\n   if (next_tok->type != CPP_CLOSE_BRACE)\n     {\n-      ret.value = error_mark_node;\n+      ret.set_error ();\n       ret.original_code = ERROR_MARK;\n       ret.original_type = NULL;\n       braces.skip_until_found_close (parser);\n@@ -4649,7 +4649,7 @@ c_parser_initelt (c_parser *parser, struct obstack * braced_init_obstack)\n \t      else\n \t\t{\n \t\t  struct c_expr init;\n-\t\t  init.value = error_mark_node;\n+\t\t  init.set_error ();\n \t\t  init.original_code = ERROR_MARK;\n \t\t  init.original_type = NULL;\n \t\t  c_parser_error (parser, \"expected identifier\");\n@@ -4785,7 +4785,7 @@ c_parser_initelt (c_parser *parser, struct obstack * braced_init_obstack)\n \t      else\n \t\t{\n \t\t  struct c_expr init;\n-\t\t  init.value = error_mark_node;\n+\t\t  init.set_error ();\n \t\t  init.original_code = ERROR_MARK;\n \t\t  init.original_type = NULL;\n \t\t  c_parser_error (parser, \"expected %<=%>\");\n@@ -6693,7 +6693,7 @@ c_parser_conditional_expression (c_parser *parser, struct c_expr *after,\n   if (!c_parser_require (parser, CPP_COLON, \"expected %<:%>\"))\n     {\n       c_inhibit_evaluation_warnings -= cond.value == truthvalue_true_node;\n-      ret.value = error_mark_node;\n+      ret.set_error ();\n       ret.original_code = ERROR_MARK;\n       ret.original_type = NULL;\n       return ret;\n@@ -7071,7 +7071,7 @@ c_parser_cast_expression (c_parser *parser, struct c_expr *after)\n       parens.skip_until_found_close (parser);\n       if (type_name == NULL)\n \t{\n-\t  ret.value = error_mark_node;\n+\t  ret.set_error ();\n \t  ret.original_code = ERROR_MARK;\n \t  ret.original_type = NULL;\n \t  return ret;\n@@ -7297,7 +7297,7 @@ c_parser_sizeof_expression (c_parser *parser)\n \t  struct c_expr ret;\n \t  c_inhibit_evaluation_warnings--;\n \t  in_sizeof--;\n-\t  ret.value = error_mark_node;\n+\t  ret.set_error ();\n \t  ret.original_code = ERROR_MARK;\n \t  ret.original_type = NULL;\n \t  return ret;\n@@ -7383,7 +7383,7 @@ c_parser_alignof_expression (c_parser *parser)\n \t  struct c_expr ret;\n \t  c_inhibit_evaluation_warnings--;\n \t  in_alignof--;\n-\t  ret.value = error_mark_node;\n+\t  ret.set_error ();\n \t  ret.original_code = ERROR_MARK;\n \t  ret.original_type = NULL;\n \t  return ret;\n@@ -7838,7 +7838,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t  && !targetm.fixed_point_supported_p ())\n \t{\n \t  error_at (loc, \"fixed-point types not supported for this target\");\n-\t  expr.value = error_mark_node;\n+\t  expr.set_error ();\n \t}\n       break;\n     case CPP_CHAR:\n@@ -17748,7 +17748,7 @@ c_parser_omp_declare_reduction (c_parser *parser, enum pragma_context context)\n       struct c_expr initializer;\n       tree omp_priv = NULL_TREE, omp_orig = NULL_TREE;\n       bool bad = false;\n-      initializer.value = error_mark_node;\n+      initializer.set_error ();\n       if (!c_parser_require (parser, CPP_CLOSE_PAREN, \"expected %<)%>\"))\n \tbad = true;\n       else if (c_parser_next_token_is (parser, CPP_NAME)\n@@ -18305,7 +18305,7 @@ c_parser_transaction_expression (c_parser *parser, enum rid keyword)\n   else\n     {\n      error:\n-      ret.value = error_mark_node;\n+      ret.set_error ();\n       ret.original_code = ERROR_MARK;\n       ret.original_type = NULL;\n     }"}, {"sha": "a9b2008f2d43a1e842576973e1d394524ffc58ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=913884f792bf4ba684ef4513cf79168d37d86e92", "patch": "@@ -1,5 +1,8 @@\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/83595\n+\t* gcc.dg/pr83595.c: New test.\n+\n \tPR middle-end/83608\n \t* g++.dg/opt/pr83608.C: New test.\n "}, {"sha": "b67970e5ecc0a3b7e6be4c88ac0fc61382fe0c34", "filename": "gcc/testsuite/gcc.dg/pr83595.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83595.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913884f792bf4ba684ef4513cf79168d37d86e92/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83595.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83595.c?ref=913884f792bf4ba684ef4513cf79168d37d86e92", "patch": "@@ -0,0 +1,9 @@\n+/* PR c/83595 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+foo ()\n+{\n+  (())((int){0);\t/* { dg-error \"expected expression before\" } */\n+}"}]}