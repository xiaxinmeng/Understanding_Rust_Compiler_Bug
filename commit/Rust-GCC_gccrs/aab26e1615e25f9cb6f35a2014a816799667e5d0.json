{"sha": "aab26e1615e25f9cb6f35a2014a816799667e5d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFiMjZlMTYxNWUyNWY5Y2I2ZjM1YTIwMTRhODE2Nzk5NjY3ZTVkMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T22:55:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-22T22:55:23Z"}, "message": "(SYMLINK): Deleted; unused.\n\n(oldobjext): Deleted; no longer used.\n(FLAGS_TO_PASS): Include objext and exeext.\n(STAGESTUFF, protoize.o, unprotoize.o): Use $(objext), not .o.\n(test_protoize_simple, compare{,3}, gnucompare{,3}): Likewise.\n(STAGESTUFF, specs, gcc-cross, collect2): Add missing $(exeext).\n(libgcc1.null, libgcc[12].a, stage[1-4]): Likewise.\n(xgcc, cc1, cc1obj, enquire): Use $@ instead of filename for -o value.\n(collect2, mips-tfile, mips-tdump, gen*): Likewise.\n(bi-arity, bi-opcode, bi-opname, cccp, cppmain): Likewise.\n(protoize, unprotoize, gen-protos, fix-header): Likewise.\n(crtbegin.o, crtend.o): Don't use -o; move output to proper\nfilename (using objext) instead.\n(BI_ALL, BC_ALL, bytecode): Deleted; unused.\n(bi-*.o, cexp.o, stamp-{proto,fixinc}): Remove unneeded $(srcdir).\n(getopt{,1}.o, SYSCALLS.c.X): Likewise.\n(install-driver): New target.\n(install-normal): Depend on it.\n(install-common): Don't depend on xgcc.\n(maketest): Deleted; no longer used.\n(stage[1-4]): Use name collect-ld, not real-ld.\n(risky-stage[1-4]): Use stage[1-4] as dependencies; don't copy.\n\nFrom-SVN: r9770", "tree": {"sha": "63580bc5c8748b3566add04ec4fb92e74899ac3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63580bc5c8748b3566add04ec4fb92e74899ac3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aab26e1615e25f9cb6f35a2014a816799667e5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab26e1615e25f9cb6f35a2014a816799667e5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab26e1615e25f9cb6f35a2014a816799667e5d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab26e1615e25f9cb6f35a2014a816799667e5d0/comments", "author": null, "committer": null, "parents": [{"sha": "fbb47000290ffac917cf053694d889be94399aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb47000290ffac917cf053694d889be94399aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb47000290ffac917cf053694d889be94399aaa"}], "stats": {"total": 323, "additions": 133, "deletions": 190}, "files": [{"sha": "fe316005eb8e86f7c9d67f317ebd21359cabfc84", "filename": "gcc/Makefile.in", "status": "modified", "additions": 133, "deletions": 190, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab26e1615e25f9cb6f35a2014a816799667e5d0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab26e1615e25f9cb6f35a2014a816799667e5d0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=aab26e1615e25f9cb6f35a2014a816799667e5d0", "patch": "@@ -69,7 +69,6 @@ INSTALL = install -c\n # These permit overriding just for certain files.\n INSTALL_PROGRAM = $(INSTALL)\n INSTALL_DATA = $(INSTALL)\n-SYMLINK = ln -s\n MAKEINFO = makeinfo\n TEXI2DVI = texi2dvi\n # For GNUmake: let us decide what gets passed to recursive makes.\n@@ -190,9 +189,8 @@ assertdir = $(tooldir)/include\n infodir = $(prefix)/info\n # Extension (if any) to put in installed man-page filename.\n manext = .1\n-exeext =\n objext = .o\n-oldobjext = .o\n+exeext =\n \n # Directory in which to put man pages.\n mandir = $(prefix)/man/man1\n@@ -461,6 +459,8 @@ FLAGS_TO_PASS = \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n \t\"RANLIB_TEST_FOR_TARGET=$(RANLIB_TEST_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n+\t\"exeext=$(exeext)\" \\\n+\t\"objext=$(objext)\" \\\n \t\"exec_prefix=$(exec_prefix)\" \\\n \t\"prefix=$(prefix)\" \\\n \t\"tooldir=$(tooldir)\" \\\n@@ -505,7 +505,7 @@ CCCP=cccp\n #CCCP=cppmain\n \n # Files to be copied away after each stage in building.\n-STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n+STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n  insn-attr.h insn-attrtab.c insn-opinit.c \\\n  stamp-flags stamp-config stamp-codes \\\n@@ -517,8 +517,9 @@ STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n  bc-arity.h bc-opcode.h bc-opname.h \\\n  stamp-bcarity stamp-bcopcode stamp-bcopname \\\n  bi-arity$(exeext) bi-opcode$(exeext) bi-opname$(exeext) \\\n- $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) $(CCCP) \\\n- cc1obj$(exeext) enquire$(exeext) protoize$(exeext) unprotoize$(exeext) \\\n+ $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n+ $(CCCP)$(exeext) cc1obj$(exeext) enquire$(exeext) \\\n+ protoize$(exeext) unprotoize$(exeext) \\\n  specs collect2$(exeext) $(USE_COLLECT2) underscore.c \\\n  $(LANG_STAGESTUFF)\n \n@@ -660,24 +661,24 @@ stamp-objlist: Makefile $(OBJS) $(BC_OBJS)\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n xgcc: gcc.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o xgcc gcc.o version.o $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gcc.o version.o $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n-specs: xgcc\n+specs: xgcc$(exeext)\n \t$(GCC_FOR_TARGET) -dumpspecs > tmp-specs\n \tmv tmp-specs specs\n \n # We do want to create an executable named `xgcc', so we can use it to\n # compile libgcc2.a.\n # Also create gcc-cross, so that install-common will install properly.\n gcc-cross: xgcc\n-\tcp xgcc gcc-cross\n+\tcp xgcc$(exeext) gcc-cross$(exeext)\n \n cc1: $(P) $(C_OBJS) $(OBJS) $(BC_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cc1 $(C_OBJS) $(OBJS) $(BC_OBJS) $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) $(OBJS) $(BC_OBJS) $(LIBS)\n \n cc1obj: $(P) $(OBJC_OBJS) $(OBJS) $(BC_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cc1obj $(OBJC_OBJS) $(OBJS) $(BC_OBJS) $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(OBJC_OBJS) $(OBJS) $(BC_OBJS) $(LIBS)\n \n # Copy float.h from its source.\n gfloat.h: $(FLOAT_H)\n@@ -696,10 +697,8 @@ float.h-cross:\n # Used to compile enquire with standard cc, but have forgotten why.\n # Let's try with GCC.\n enquire: enquire.o $(GCC_PARTS)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ENQUIRE_LDFLAGS) enquire.o -o enquire\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ENQUIRE_LDFLAGS) enquire.o -o $@\n enquire.o: $(srcdir)/enquire.c $(GCC_PASSES) stmp-int-hdrs\n-#\t-if [ \"$(srcdir)\" != \".\" ]; then rm -f ./enquire.c; else true; fi\n-#\t-cp $(srcdir)/enquire.c . > /dev/null 2>&1\n # Breaking this line caused a problem with one version of GNU make.\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -c $(srcdir)/enquire.c\n \n@@ -728,8 +727,8 @@ libgcc1.conv: libgcc1.a\n libgcc1.null: $(GCC_PASSES)\n \techo \"__foo () {}\" > dummy.c\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) -c dummy.c\n-\t$(OLDAR) $(OLDAR_FLAGS) libgcc1.null dummy.o\n-\trm -f dummy.o dummy.c\n+\t$(OLDAR) $(OLDAR_FLAGS) libgcc1.null dummy$(objext)\n+\trm -f dummy$(objext) dummy.c\n \n # This is $(LIBGCC1) for a cross-compiler.\n # We have no automatic way of building libgcc1.a, \n@@ -755,12 +754,12 @@ libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n \tfor name in $(LIB1FUNCS); \\\n \tdo \\\n \t  echo $${name}; \\\n-\t  rm -f $${name}.o; \\\n+\t  rm -f $${name}$(objext); \\\n \t  $(OLDCC) $(CCLIBFLAGS) $(INCLUDES) -c -DL$${name} $(srcdir)/libgcc1.c; \\\n \t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  mv libgcc1$(oldobjext) $${name}.o; \\\n-\t  $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1.a $${name}.o; \\\n-\t  rm -f $${name}.o; \\\n+\t  mv libgcc1$(objext) $${name}$(objext); \\\n+\t  $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1.a $${name}$(objext); \\\n+\t  rm -f $${name}$(objext); \\\n \tdone\n # Some shells crash when a loop has no items.\n # So make sure there is always at least one--`..'.\n@@ -778,9 +777,9 @@ libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n \t    else true; fi; \\\n \t    $(OLDCC) $(CCLIBFLAGS) $(INCLUDES) -c $${file}; \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1.a $${name}.o; \\\n+\t    $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1.a $${name}$(objext); \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    rm -f $${name}.[so]; \\\n+\t    rm -f $${name}.s $${name}$(objext); \\\n \t  else true; \\\n \t  fi; \\\n \tdone\n@@ -806,9 +805,9 @@ libgcc1-asm.a: libgcc2.ready config.status $(srcdir)/config/$(LIB1ASMSRC)\n \t  echo $${name}; \\\n \t  $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} libgcc1.S; \\\n \t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  mv libgcc1.o $${name}.o; \\\n-\t  $(AR) $(AR_FLAGS) tmplibgcc1.a $${name}.o; \\\n-\t  rm -f $${name}.o; \\\n+\t  mv libgcc1$(objext) $${name}$(objext); \\\n+\t  $(AR) $(AR_FLAGS) tmplibgcc1.a $${name}$(objext); \\\n+\t  rm -f $${name}$(objext); \\\n \tdone\n \t-rm -f libgcc1.S\n \tmv tmplibgcc1.a libgcc1-asm.a\n@@ -855,10 +854,10 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n \tdo \\\n \t  echo $${name}; \\\n \t  $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} \\\n-\t      $(srcdir)/libgcc2.c -o $${name}.o; \\\n+\t      $(srcdir)/libgcc2.c -o $${name}$(objext); \\\n \t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}.o; \\\n-\t  rm -f $${name}.o; \\\n+\t  $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}$(objext); \\\n+\t  rm -f $${name}$(objext); \\\n \tdone\n # Some shells crash when a loop has no items.\n # So make sure there is always at least one--`..'.\n@@ -876,8 +875,8 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n \t    else true; fi; \\\n \t    $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c $${file}; \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}.o; \\\n-\t    rm -f $${name}.[so]; \\\n+\t    $(AR) $(AR_FLAGS) tmplibgcc2.a $${name}$(objext); \\\n+\t    rm -f $${name}.s $${name}$(objext); \\\n \t  else true; \\\n \t  fi; \\\n \tdone\n@@ -902,7 +901,7 @@ libgcc.a: $(LIBGCC1) $(LIBGCC2)\n # message from ar, we make sure all files are writable.\n \t-(cd tmpcopy; chmod +w * > /dev/null 2>&1)\n \t(cd tmpcopy; $(AR) x ../$(LIBGCC2))\n-\t(cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc.a *.o)\n+\t(cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc.a *$(objext))\n \trm -rf tmpcopy\n \t-if $(RANLIB_TEST) ; then $(RANLIB) tmplibgcc.a; else true; fi\n # Actually build it in tmplibgcc.a, then rename at end,\n@@ -996,12 +995,14 @@ sublibobjc.a: cc1obj stmp-int-hdrs libgcc2.ready\n crtbegin.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(CRTSTUFF_T_CFLAGS) \\\n \t  -DCRT_BEGIN -finhibit-size-directive -fno-inline-functions \\\n-\t  -g0 -c $(srcdir)/crtstuff.c -o crtbegin.o\n+\t  -g0 -c $(srcdir)/crtstuff.c\n+\tmv crtstuff$(objext) $@\n \n crtend.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(CRTSTUFF_T_CFLAGS) \\\n \t  -DCRT_END -finhibit-size-directive -fno-inline-functions \\\n-\t  -g0 -c $(srcdir)/crtstuff.c -o crtend.o\n+\t  -g0 -c $(srcdir)/crtstuff.c -o\n+\tmv crtstuff$(objext) $@\n \f\n # Compiling object files from source files.\n \n@@ -1045,9 +1046,9 @@ ld: collect2\n \n collect2 : collect2.o cplus-dem.o underscore.o version.o $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n-\t-rm -f collect2\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o collect2 collect2.o cplus-dem.o \\\n-\t  underscore.o version.o $(LIBS)\n+\t-rm -f collect2$(exeext)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ collect2.o \\\n+\t  cplus-dem.o underscore.o version.o $(LIBS)\n \n collect2.o : collect2.c $(CONFIG_H) gstab.h obstack.h demangle.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n@@ -1212,12 +1213,12 @@ $(out_object_file): $(out_file) $(CONFIG_H) \\\n \n # Build auxiliary files that support ecoff format.\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o mips-tfile mips-tfile.o version.o $(LIBS)\n+\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n \n mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H)\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o mips-tdump mips-tdump.o version.o $(LIBS)\n+\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n \n mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H)\n \n@@ -1374,77 +1375,77 @@ $(MD_FILE): $(MD_DEPS)\n \tmv tmp-$@ $@\n \n genconfig : genconfig.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genconfig \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  genconfig.o $(HOST_RTL) $(HOST_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n \n genflags : genflags.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genflags \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genflags.o $(HOST_RTL) $(HOST_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n \n gencodes : gencodes.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gencodes \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencodes.o $(HOST_RTL) $(HOST_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n \n genemit : genemit.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genemit \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genemit.o $(HOST_RTL) $(HOST_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n \n genopinit : genopinit.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genopinit \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genopinit.o $(HOST_RTL) $(HOST_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n \n genrecog : genrecog.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genrecog \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genrecog.o $(HOST_RTL) $(HOST_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c\n \n genextract : genextract.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genextract \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genextract.o $(HOST_RTL) $(HOST_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(build_xm_file) insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n \n genpeep : genpeep.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genpeep \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genpeep.o $(HOST_RTL) $(HOST_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n \n genattr : genattr.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genattr \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattr.o $(HOST_RTL) $(HOST_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n \n genattrtab : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_RTLANAL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genattrtab \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_RTLANAL) $(HOST_LIBS)\n \n genattrtab.o : genattrtab.c $(RTL_H)  $(build_xm_file) insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n \n genoutput : genoutput.o $(HOST_RTL) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genoutput \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genoutput.o $(HOST_RTL) $(HOST_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(build_xm_file)\n@@ -1490,56 +1491,46 @@ $(HOST_PREFIX_1):\n \ttouch $(HOST_PREFIX_1)\n \f\n # Remake bytecode files.\n-# BI_ALL=bi-run.o\n-BI_ALL=\n-BC_ALL=bc-opname.h bc-opcode.h bc-arity.h\n BI_OBJ=bi-parser.o bi-lexer.o bi-reverse.o\n \n-\n bc-emit.o : bc-emit.c $(CONFIG_H) $(RTL_H) real.h $(BYTECODE_H) \\\n-\t bc-arity.h bc-opcode.h bc-typecd.h bc-typecd.def bi-run.h bytetypes.h\n+   bc-arity.h bc-opcode.h bc-typecd.h bc-typecd.def bi-run.h bytetypes.h\n bc-optab.o : bc-optab.c $(CONFIG_H) $(REAL_H) $(BYTECODE_H) \\\n-\t\tbc-opcode.h bc-typecd.h bc-typecd.def\n-\n-\n-bytecode: $(BI_ALL) $(BC_ALL)\n+   bc-opcode.h bc-typecd.h bc-typecd.def\n \n bi-arity: bi-arity.o $(BI_OBJ) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o bi-arity \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t bi-arity.o $(BI_OBJ) $(HOST_LIBS)\n bi-opcode: bi-opcode.o $(BI_OBJ) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o bi-opcode \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t bi-opcode.o $(BI_OBJ) $(HOST_LIBS)\n bi-opname: bi-opname.o $(BI_OBJ) $(HOST_LIBDEPS)\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o bi-opname \\\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t bi-opname.o $(BI_OBJ) $(HOST_LIBS)\n \n-bi-run.o:\t$(srcdir)/bi-run.c $(srcdir)/bi-run.h $(srcdir)/bc-typecd.h \\\n-  bc-opname.h bc-arity.h bc-opcode.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/bi-run.c\n $(srcdir)/bi-parser.h: $(srcdir)/bi-parser.c\n $(srcdir)/bi-parser.c: $(srcdir)/bi-parser.y\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) -d bi-parser.y -o bi-parser.c\n-bi-parser.o: $(srcdir)/bi-parser.c $(srcdir)/bi-defs.h $(build_xm_file)\n+\n+bi-parser.o: bi-parser.c bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-parser.c\n-bi-lexer.o: $(srcdir)/bi-lexer.c $(srcdir)/bi-parser.h $(build_xm_file)\n+bi-lexer.o: bi-lexer.c bi-parser.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-lexer.c\n-bi-arity.o: bi-arity.c $(srcdir)/bi-defs.h $(build_xm_file)\n+bi-arity.o: bi-arity.c bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-arity.c\n-bi-opcode.o: bi-opcode.c $(srcdir)/bi-defs.h $(build_xm_file)\n+bi-opcode.o: bi-opcode.c bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-opcode.c\n-bi-opname.o: bi-opname.c $(srcdir)/bi-defs.h $(build_xm_file)\n+bi-opname.o: bi-opname.c bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-opname.c\n-bi-reverse.o: bi-reverse.c $(srcdir)/bi-defs.h\n+bi-reverse.o: bi-reverse.c bi-defs.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-reverse.c\n \n-\n bc-arity.h: stamp-bcarity ; @true\n stamp-bcarity : $(srcdir)/bytecode.def bi-arity $(srcdir)/move-if-change\n \t./bi-arity < $(srcdir)/bytecode.def >tmp-bc-arity.h\n@@ -1576,11 +1567,13 @@ cpp: $(CCCP)\n \tln $(CCCP)$(exeext) cpp$(exeext) > /dev/null 2>&1 \\\n \t || cp $(CCCP)$(exeext) cpp$(exeext)\n cccp: cccp.o cexp.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cccp cccp.o cexp.o version.o $(LIBS)\n-cexp.o: $(srcdir)/cexp.c $(CONFIG_H)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o \\\n+\t  version.o $(LIBS)\n+cexp.o: cexp.c $(CONFIG_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/cexp.c\n $(srcdir)/cexp.c: $(srcdir)/cexp.y\n \tcd $(srcdir); $(BISON) -o cexp.c cexp.y\n+\n cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status\n # The reason we use $(libdir)/g++-include rather than using libsubdir\n # is for compatibility with the current version of libg++.\n@@ -1594,9 +1587,8 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status\n \n cppmain: cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n   version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cppmain \\\n-\t  cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n-\t  version.o $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cppmain.o cpplib.o cpphash.o \\\n+\t  cppalloc.o cpperror.o cppexp.o version.o $(LIBS)\n \n cpplib.o: cpplib.c $(CONFIG_H) pcp.h version.c config.status\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n@@ -1613,17 +1605,16 @@ cpplib.o: cpplib.c $(CONFIG_H) pcp.h version.c config.status\n proto: config.status protoize unprotoize SYSCALLS.c.X\n \n protoize: protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n-\t  protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o protoize\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t  protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS)\n protoize.o: stamp-proto ; @true\n \n unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n-\t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) \\\n-\t   -o unprotoize\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS)\n unprotoize.o:\tstamp-proto ; @true\n \n-stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n+stamp-proto: protoize.c getopt.h $(CONFIG_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1632,7 +1623,7 @@ stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(includedir)\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n \t  -DUNPROTOIZE $(srcdir)/protoize.c\n-\tmv protoize.o unprotoize.o\n+\tmv protoize$(objext) unprotoize$(objext)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1643,13 +1634,14 @@ stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \t  $(srcdir)/protoize.c\n \ttouch stamp-proto\n \n-getopt.o: $(srcdir)/getopt.c getopt.h\n+getopt.o: getopt.c getopt.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/getopt.c\n-getopt1.o: $(srcdir)/getopt1.c getopt.h\n+getopt1.o: getopt1.c getopt.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/getopt1.c\n \n # This info describes the target machine, so compile with GCC just built.\n-SYSCALLS.c.X: $(srcdir)/sys-types.h $(srcdir)/sys-protos.h $(GCC_PASSES) stmp-int-hdrs\n+SYSCALLS.c.X: $(srcdir)/sys-types.h $(srcdir)/sys-protos.h $(GCC_PASSES) \\\n+   stmp-int-hdrs\n \t-rm -f SYSCALLS.c tmp-SYSCALLS.s\n \tcat $(srcdir)/sys-types.h $(srcdir)/sys-protos.h > SYSCALLS.c\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n@@ -1680,7 +1672,7 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \t  -DSTD_PROTO_DIR=0\" tmp-proto.c\n \t@echo Expect zero differences.\n \tdiff $(srcdir)/protoize.c tmp-proto.c | cat\n-\t-rm -f tmp-proto.[cso]\n+\t-rm -f tmp-proto.[cs] tmp-proto$(objext)\n \f\n # Build the include directory.  The stamp files are stmp-* rather than\n # stamp-* so that mostlyclean does not force the include directory to\n@@ -1718,7 +1710,7 @@ stmp-headers: stmp-int-hdrs gfloat.h\n \ttouch stmp-headers\n \n # Build fixed copies of system files.\n-stmp-fixinc: $(srcdir)/$(FIXINCLUDES) gsyslimits.h\n+stmp-fixinc: $(FIXINCLUDES) gsyslimits.h\n \trm -rf include\n \tmkdir include\n \tif [ x$(FIXINCLUDES) != xMakefile.in ]; \\\n@@ -1762,7 +1754,7 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \tmv tmp-deduced.h deduced.h\n \n gen-protos: gen-protos.o scan.o cppalloc.o $(HOST_LIBDEPS)\n-\t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gen-protos \\\n+\t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  gen-protos.o scan.o cppalloc.o $(HOST_LIBS)\n \n gen-protos.o: gen-protos.c scan.h $(build_xm_file)\n@@ -1780,9 +1772,11 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefil\n \tmv xsys-protos.hT xsys-protos.h\n \trm -rf fixtmp.c\n \n-fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) cpplib.o cpphash.o cppalloc.o cppexp.o cpperror.o version.o\n-\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o fix-header \\\n-\t  fix-header.o scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o version.o cppexp.o $(HOST_LIBS)\n+fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) \\\n+   cpplib.o cpphash.o cppalloc.o cppexp.o cpperror.o version.o\n+\t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ fix-header.o \\\n+\t   scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o version.o \\\n+\t   cppexp.o $(HOST_LIBS)\n \n fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n@@ -1973,8 +1967,10 @@ maintainer-clean: distclean bytecode.maintainer-clean lang.maintainer-clean\n install: $(INSTALL_TARGET) ; @true\n \n # Copy the compiler files into directories where they will be run.\n+# Install the driver last so that the window when things are\n+# broken is small.\n install-normal: install-common $(INSTALL_HEADERS) $(INSTALL_LIBGCC) \\\n-    install-man install-info lang.install-normal\n+    install-libobjc install-man install-info lang.install-normal install-driver\n \n # Do nothing while making gcc with a cross-compiler. The person who\n # makes gcc for the target machine has to know how to put a complete\n@@ -2019,7 +2015,7 @@ install-dir:\n \t-if [ -d $(mandir) ] ; then true ; else mkdir $(mandir) ; chmod a+rx $(mandir) ; fi\n \n # Install the compiler executables built during cross compilation.\n-install-common: native install-dir xgcc $(EXTRA_PARTS) lang.install-common\n+install-common: native install-dir $(EXTRA_PARTS) lang.install-common\n \tfor file in $(COMPILERS); do \\\n \t  if [ -f $$file ] ; then \\\n \t    rm -f $(libsubdir)/$$file; \\\n@@ -2044,8 +2040,23 @@ install-common: native install-dir xgcc $(EXTRA_PARTS) lang.install-common\n \t  rm -f $(libsubdir)/specs; \\\n \t  $(INSTALL_DATA) specs $(libsubdir)/specs; \\\n \tfi\n+# Install protoize if it was compiled.\n+\t-if [ -f protoize$(exeext) ]; \\\n+\tthen \\\n+\t    rm -f $(bindir)/protoize$(exeext); \\\n+\t    $(INSTALL_PROGRAM) protoize$(exeext) $(bindir)/protoize$(exeext); \\\n+\t    rm -f $(bindir)/unprotoize$(exeext); \\\n+\t    $(INSTALL_PROGRAM) unprotoize$(exeext) $(bindir)/unprotoize$(exeext); \\\n+\t    rm -f $(libsubdir)/SYSCALLS.c.X; \\\n+\t    $(INSTALL_DATA) SYSCALLS.c.X $(libsubdir)/SYSCALLS.c.X; \\\n+\t    chmod a-x $(libsubdir)/SYSCALLS.c.X; \\\n+\tfi\n+\t-rm -f $(libsubdir)/cpp$(exeext)\n+\t$(INSTALL_PROGRAM) cpp$(exeext) $(libsubdir)/cpp$(exeext)\n+\n # Install the driver program as $(target)-gcc\n # and also as either gcc (if native) or $(tooldir)/bin/gcc.\n+install-driver: xgcc\n \t-if [ -f gcc-cross$(exeext) ] ; then \\\n \t  rm -f $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n \t  $(INSTALL_PROGRAM) gcc-cross$(exeext) $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n@@ -2062,19 +2073,6 @@ install-common: native install-dir xgcc $(EXTRA_PARTS) lang.install-common\n \t    || cp $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target)-gcc-1$(exeext); \\\n \t  mv $(bindir)/$(target)-gcc-1$(exeext) $(bindir)/$(target)-gcc$(exeext); \\\n \tfi\n-# Install protoize if it was compiled.\n-\t-if [ -f protoize$(exeext) ]; \\\n-\tthen \\\n-\t    rm -f $(bindir)/protoize$(exeext); \\\n-\t    $(INSTALL_PROGRAM) protoize$(exeext) $(bindir)/protoize$(exeext); \\\n-\t    rm -f $(bindir)/unprotoize$(exeext); \\\n-\t    $(INSTALL_PROGRAM) unprotoize$(exeext) $(bindir)/unprotoize$(exeext); \\\n-\t    rm -f $(libsubdir)/SYSCALLS.c.X; \\\n-\t    $(INSTALL_DATA) SYSCALLS.c.X $(libsubdir)/SYSCALLS.c.X; \\\n-\t    chmod a-x $(libsubdir)/SYSCALLS.c.X; \\\n-\tfi\n-\t-rm -f $(libsubdir)/cpp$(exeext)\n-\t$(INSTALL_PROGRAM) cpp$(exeext) $(libsubdir)/cpp$(exeext)\n \n # Install the info files.\n install-info: doc install-dir lang.install-info\n@@ -2305,25 +2303,6 @@ diff:\n \t  $(LANG_DIFF_EXCLUDES) \\\n \t  gcc-$(oldversion) gcc-$(version) > diffs\n \n-# do make -f ../gcc/Makefile maketest DIR=../gcc\n-# in the intended test directory to make it a suitable test directory.\n-# THIS IS OBSOLETE; use the -srcdir operand in configure instead. \n-maketest:\n-\tln -s $(DIR)/*.[chy] .\n-\tln -s $(DIR)/configure .\n-\tln -s $(DIR)/*.def .\n-\t-rm -f =*\n-\tln -s $(DIR)/.gdbinit .\n-\tln -s $(DIR)/$(FIXINCLUDES) .\n-\t-ln -s $(DIR)/bison.simple .\n-\tln -s $(DIR)/config .\n-\tln -s $(DIR)/move-if-change .\n-# The then and else were swapped to avoid a problem on Ultrix.\n-\tif [ ! -f Makefile ] ; then ln -s $(DIR)/Makefile .; else false; fi\n-\t-rm tm.h aux-output.c config.h md\n-\tmake clean\n-# You must then run config to set up for compilation.\n-\n bootstrap: force\n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the\n@@ -2352,14 +2331,14 @@ bootstrap3: force\n \n # ./ avoids bug in some versions of tail.\n compare: force\n-\tfor file in *.o; do \\\n+\tfor file in *$(objext); do \\\n \t  tail +16c ./$$file > tmp-foo1; \\\n \t  tail +16c stage2/$$file > tmp-foo2 2>/dev/null \\\n \t    && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n \tdone\n \tfor dir in tmp-foo $(SUBDIRS); do \\\n-\t  if [ \"`echo $$dir/*.o`\" != \"$$dir/*.o\" ] ; then \\\n-\t    for file in $$dir/*.o; do \\\n+\t  if [ \"`echo $$dir/*$(objext)`\" != \"$$dir/*$(objext)\" ] ; then \\\n+\t    for file in $$dir/*$(objext); do \\\n \t      tail +16c ./$$file > tmp-foo1; \\\n \t      tail +16c stage2/$$file > tmp-foo2 2>/dev/null \\\n \t        && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n@@ -2370,14 +2349,14 @@ compare: force\n \n # Similar, but compare with stage3 directory\n compare3: force\n-\tfor file in *.o; do \\\n+\tfor file in *$(objext); do \\\n \t  tail +16c ./$$file > tmp-foo1; \\\n \t  tail +16c stage3/$$file > tmp-foo2 2>/dev/null \\\n \t    && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n \tdone\n \tfor dir in tmp-foo $(SUBDIRS); do \\\n-\t  if [ \"`echo $$dir/*.o`\" != \"$$dir/*.o\" ] ; then \\\n-\t    for file in $$dir/*.o; do \\\n+\t  if [ \"`echo $$dir/*$(objext)`\" != \"$$dir/*$(objext)\" ] ; then \\\n+\t    for file in $$dir/*$(objext); do \\\n \t      tail +16c ./$$file > tmp-foo1; \\\n \t      tail +16c stage3/$$file > tmp-foo2 2>/dev/null \\\n \t        && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n@@ -2391,11 +2370,11 @@ compare3: force\n # running tail and the overhead of twice copying each object file.\n \n gnucompare: force\n-\tfor file in *.o; do \\\n+\tfor file in *$(objext); do \\\n \t  cmp --ignore-initial=16 $$file stage2/$$file || true ; \\\n \tdone\n \tfor dir in tmp-foo $(SUBDIRS); do \\\n-\t  if [ \"`echo $$dir/*.o`\" != \"$$dir/*.o\" ] ; then \\\n+\t  if [ \"`echo $$dir/*$(objext)`\" != \"$$dir/*$(objext)\" ] ; then \\\n \t    for file in $$dir/*.o; do \\\n \t      cmp --ignore-initial=16 $$file stage2/$$file || true ; \\\n \t    done; \\\n@@ -2404,12 +2383,12 @@ gnucompare: force\n \n # Similar, but compare with stage3 directory\n gnucompare3: force\n-\tfor file in *.o; do \\\n+\tfor file in *$(objext); do \\\n \t  cmp --ignore-initial=16 $$file stage3/$$file || true ; \\\n \tdone\n \tfor dir in tmp-foo $(SUBDIRS); do \\\n-\t  if [ \"`echo $$dir/*.o`\" != \"$$dir/*.o\" ] ; then \\\n-\t    for file in $$dir/*.o; do \\\n+\t  if [ \"`echo $$dir/*$(objext)`\" != \"$$dir/*$(objext)\" ] ; then \\\n+\t    for file in $$dir/*$(objext); do \\\n \t      cmp --ignore-initial=16 $$file stage3/$$file || true ; \\\n \t    done; \\\n \t  fi; \\\n@@ -2425,9 +2404,9 @@ stage1-start:\n \t-mv $(STAGESTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as ] ; then cp as stage1 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage1 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage1 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage1 || cp as$(exeext) stage1 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage1 || cp ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage1 || cp collect-ld$(exeext) stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n@@ -2442,9 +2421,9 @@ stage2-start:\n \t-mv $(STAGESTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as ] ; then cp as stage2 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage2 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage2 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage2 || cp as$(exeext) stage2 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage2 || cp ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f collect-ld ] ; then ln -s collect-ld$(exeext) stage2 || cp collect-ld$(exeext) stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage2/libgcc.a; else true; fi\n@@ -2459,9 +2438,9 @@ stage3-start:\n \t-mv $(STAGESTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as ] ; then cp as stage3 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage3 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage3 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage3 || cp as$(exeext) stage3 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage3 || cp ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage3 || cp collect-ld$(exeext) stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage3/libgcc.a; else true; fi\n@@ -2476,9 +2455,9 @@ stage4-start:\n \t-mv $(STAGESTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as ] ; then cp as stage4 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage4 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage4 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage4 || cp as$(exeext) stage4 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage4 || cp ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage4 || cp collect-ld$(exeext) stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage4/libgcc.a; else true; fi\n@@ -2487,52 +2466,16 @@ stage4: force stage4-start lang.stage4\n # Copy just the executable files from a particular stage into a subdirectory,\n # and delete the object files.  Use this if you're just verifying a version\n # that is pretty sure to work, and you are short of disk space.\n-risky-stage1: force\n-\t-if [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n-\t-mv $(GCC_PARTS) stage1\n-# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n-# dir will work properly.\n-\t-if [ -f as ] ; then cp as stage1 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage1 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage1 ; else true ; fi\n-\t-rm -f stage1/libgcc.a\n-\t-cp libgcc.a stage1 && $(RANLIB) stage1/libgcc.a\n-\t-make clean\n+risky-stage1: stage1\n+\t- make clean\n \n-risky-stage2: force\n-\t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n-\t-mv $(GCC_PARTS) stage2\n-# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n-# dir will work properly.\n-\t-if [ -f as ] ; then cp as stage2 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage2 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage2 ; else true ; fi\n-\t-rm -f stage2/libgcc.a\n-\t-cp libgcc.a stage2 && $(RANLIB) stage2/libgcc.a\n+risky-stage2: stage2\n \t-make clean\n \n-risky-stage3: force\n-\t-if [ -d stage3 ] ; then true ; else mkdir stage3 ; fi\n-\t-mv $(GCC_PARTS) stage3\n-# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n-# dir will work properly.\n-\t-if [ -f as ] ; then cp as stage3 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage3 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage3 ; else true ; fi\n-\t-rm -f stage3/libgcc.a\n-\t-cp libgcc.a stage3 && $(RANLIB) stage3/libgcc.a\n+risky-stage3: stage3\n \t-make clean\n \n-risky-stage4: force\n-\t-if [ -d stage4 ] ; then true ; else mkdir stage4 ; fi\n-\t-mv $(GCC_PARTS) stage4\n-# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n-# dir will work properly.\n-\t-if [ -f as ] ; then cp as stage4 ; else true ; fi\n-\t-if [ -f ld ] ; then cp ld stage4 ; else true ; fi\n-\t-if [ -f real-ld ] ; then cp real-ld stage4 ; else true ; fi\n-\t-rm -f stage4/libgcc.a\n-\t-cp libgcc.a stage4 && $(RANLIB) stage4/libgcc.a\n+risky-stage4: stage4\n \t-make clean\n \n #In GNU Make, ignore whether `stage*' exists."}]}