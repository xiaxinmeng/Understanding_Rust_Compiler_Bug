{"sha": "c0f0e35a6d913017e973fa097cd4df0eea757329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBmMGUzNWE2ZDkxMzAxN2U5NzNmYTA5N2NkNGRmMGVlYTc1NzMyOQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-02-07T20:15:55Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-02-07T20:15:55Z"}, "message": "re PR fortran/50555 (synonymous namelist/statement function dummy argument not allowed (r178939))\n\n2016-02-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/50555\n\t* primary.c (match_actual_arg): If symbol has attribute flavor of\n\tnamelist, generate an error. (gfc_match_rvalue): Likewise return\n\tMATCH_ERROR.\n\t* resolve.c (resolve_symbol): Scan arument list of procedures and\n\tgenerate an error if a namelist is found.\n\n\tPR fortran/50555\n\t* gfortran.dg/namelist_args.f90: New test.\n\nFrom-SVN: r233203", "tree": {"sha": "2e8313d888a90be8c25d68bbb0469ca89cb793a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e8313d888a90be8c25d68bbb0469ca89cb793a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0f0e35a6d913017e973fa097cd4df0eea757329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f0e35a6d913017e973fa097cd4df0eea757329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f0e35a6d913017e973fa097cd4df0eea757329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f0e35a6d913017e973fa097cd4df0eea757329/comments", "author": null, "committer": null, "parents": [{"sha": "fc7d77bbf6b7b0d9aefde864c89c0c97de50b95b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc7d77bbf6b7b0d9aefde864c89c0c97de50b95b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc7d77bbf6b7b0d9aefde864c89c0c97de50b95b"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "16a7c3d9b196361a46c7e0cb9c3972e37698820b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c0f0e35a6d913017e973fa097cd4df0eea757329", "patch": "@@ -1,3 +1,12 @@\n+2016-02-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/50555\n+\t* primary.c (match_actual_arg): If symbol has attribute flavor of\n+\tnamelist, generate an error. (gfc_match_rvalue): Likewise return\n+\tMATCH_ERROR.\n+\t* resolve.c (resolve_symbol): Scan arument list of procedures and\n+\tgenerate an error if a namelist is found.\n+\n 2016-02-05  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/66089"}, {"sha": "d25d3de66b0e21f18c99d159cbe559442d1776b6", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=c0f0e35a6d913017e973fa097cd4df0eea757329", "patch": "@@ -1552,6 +1552,12 @@ match_actual_arg (gfc_expr **result)\n \n \t  sym = symtree->n.sym;\n \t  gfc_set_sym_referenced (sym);\n+\t  if (sym->attr.flavor == FL_NAMELIST)\n+\t    {\n+\t      gfc_error (\"Namelist '%s' can not be an argument at %L\",\n+\t      sym->name, &where);\n+\t      break;\n+\t    }\n \t  if (sym->attr.flavor != FL_PROCEDURE\n \t      && sym->attr.flavor != FL_UNKNOWN)\n \t    break;\n@@ -3219,6 +3225,10 @@ gfc_match_rvalue (gfc_expr **result)\n       m = gfc_match_actual_arglist (0, &e->value.function.actual);\n       break;\n \n+    case FL_NAMELIST:\n+      m = MATCH_ERROR;\n+      break;\n+\n     default:\n       gfc_error (\"Symbol at %C is not appropriate for an expression\");\n       return MATCH_ERROR;"}, {"sha": "e6c3ff952e276fcb33cc375c8ea1c86b71c4518e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=c0f0e35a6d913017e973fa097cd4df0eea757329", "patch": "@@ -14226,6 +14226,21 @@ resolve_symbol (gfc_symbol *sym)\n       break;\n \n     case FL_PROCEDURE:\n+      if (sym->formal && !sym->formal_ns)\n+\t{\n+\t  /* Check that none of the arguments are a namelist.  */\n+\t  gfc_formal_arglist *formal = sym->formal;\n+\n+\t  for (; formal; formal = formal->next)\n+\t    if (formal->sym && formal->sym->attr.flavor == FL_NAMELIST)\n+\t      {\n+\t\tgfc_error (\"Namelist '%s' can not be an argument to \"\n+\t\t\t   \"subroutine or function at %L\",\n+\t\t\t   formal->sym->name, &sym->declared_at);\n+\t\treturn;\n+\t      }\n+\t}\n+\n       if (!resolve_fl_procedure (sym, mp_flag))\n \treturn;\n       break;"}, {"sha": "8d3438efb2757a5cc3f12c36f7992256c12064b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0f0e35a6d913017e973fa097cd4df0eea757329", "patch": "@@ -1,3 +1,8 @@\n+2016-02-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/50555\n+\t* gfortran.dg/namelist_args.f90: New test.\n+\n 2016-02-05  Jeff Law  <law@redhat.com>\n \n         PR tree-optimization/68541"}, {"sha": "132efcebdfb2569f195c67c46b630aec77d0059b", "filename": "gcc/testsuite/gfortran.dg/namelist_args.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_args.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f0e35a6d913017e973fa097cd4df0eea757329/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_args.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_args.f90?ref=c0f0e35a6d913017e973fa097cd4df0eea757329", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! { dg-options -std=gnu }\n+! PR50555 synonymous namelist/statement function dummy argument not allowed\n+subroutine g(k1, k2, k3)\n+  integer, intent(in) :: k1, k2, k3\n+  print *, k\n+end subroutine\n+function j(k1, k2, k3)\n+  integer, intent(in) :: k1, k2, k3\n+  j = 25 * k\n+end function\n+program pr50555\n+  namelist /i/ j\n+  call g(k,l,i) ! { dg-error \"can not be an argument\" }\n+  f(k,l,i)=0    ! { dg-error \"can not be an argument\" }\n+  h = j(k,l,i)  ! { dg-error \"can not be an argument\" }\n+end program\n+! Note: -std=gnu needed because line 15 function statement is obsolescent"}]}