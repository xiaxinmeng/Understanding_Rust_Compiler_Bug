{"sha": "8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1N2FlYTZlYzhhMzVjNGZiYjhmNDZlYWU1MGIyNzhhNjAyZmEyNA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2000-03-20T23:44:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-03-20T23:44:30Z"}, "message": "* tree.h (safe_for_unsave): Prototype.\n\nFrom-SVN: r32656", "tree": {"sha": "4679924706827c4345ff084be97dd7c09844096b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4679924706827c4345ff084be97dd7c09844096b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "3390bdae1fc965681ee0c4b93dc10a0c8bf17bd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "patch": "@@ -3,6 +3,8 @@\n \t* sdbout.c (sdbout_one_type): Add braces to avoid \"ambigous else\"\n \twarning.\n \n+\t* tree.h (safe_for_unsave): Prototype.\n+\n 2000-03-20  Richard Henderson  <rth@cygnus.com>\n \n \t* regmove.c (stack_memref_p): Fix typo, reorg for readability."}, {"sha": "5ca097f79d08760a01adea5c2a5a47c0449549a7", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c57aea6ec8a35c4fbb8f46eae50b278a602fa24/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=8c57aea6ec8a35c4fbb8f46eae50b278a602fa24", "patch": "@@ -1996,11 +1996,6 @@ extern int first_rtl_op\t\t\tPARAMS ((enum tree_code));\n \n extern tree unsave_expr\t\t\tPARAMS ((tree));\n \n-/* safe_for_reeval_p (EXP) returns nonzero if it is possible to\n-   expand EXP multiple times.  */\n-\n-extern int safe_for_reeval_p\t\tPARAMS ((tree));\n-\n /* Reset EXP in place so that it can be expaned again.  Does not\n    recurse into subtrees.  */\n \n@@ -2021,6 +2016,10 @@ extern void (*lang_unsave_expr_now)     PARAMS ((tree));\n /* If non-null, a language specific version of safe_for_unsave. */\n extern int (*lang_safe_for_unsave)\tPARAMS ((tree));\n \n+/* Return nonzero if it is safe to unsave EXPR, else return zero.\n+   It is not safe to unsave EXPR if it contains any embedded RTL_EXPRs.  */\n+extern int safe_for_unsave PARAMS ((tree));\n+\n /* Return 1 if EXP contains a PLACEHOLDER_EXPR; i.e., if it represents a size\n    or offset that depends on a field within a record.\n "}]}