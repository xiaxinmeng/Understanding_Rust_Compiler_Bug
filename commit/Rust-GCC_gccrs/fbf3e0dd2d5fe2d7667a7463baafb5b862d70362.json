{"sha": "fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmM2UwZGQyZDVmZTJkNzY2N2E3NDYzYmFhZmI1Yjg2MmQ3MDM2Mg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-01-16T08:51:38Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-01-16T08:51:38Z"}, "message": "* Makefile.in: Add $(DESTDIR).\n\nFrom-SVN: r75964", "tree": {"sha": "6764d4233307458514d83b3368527afb88a34f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6764d4233307458514d83b3368527afb88a34f49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362/comments", "author": null, "committer": null, "parents": [{"sha": "701b701b5450f41ef44ddaef7fc0d5a96b03b70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701b701b5450f41ef44ddaef7fc0d5a96b03b70f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701b701b5450f41ef44ddaef7fc0d5a96b03b70f"}], "stats": {"total": 86, "additions": 45, "deletions": 41}, "files": [{"sha": "d8abacbdb450c267c5de2f66e06e9d2555f45277", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 39, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "patch": "@@ -1,3 +1,7 @@\n+2004-01-16  Andreas Jaeger  <aj@suse.de>\n+\n+\t* Makefile.in: Add $(DESTDIR).\n+\n 2004-01-15  Olivier Hainque  <hainque@act-europe.fr>\n \n \t* decl.c (gnat_to_gnu_entity, E_Variable): Retrieve the object size\n@@ -152,7 +156,7 @@\n \n 2004-01-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n-\t* Make-lang.in: Revert stamp-xgnatug change from 2003-12-18. \n+\t* Make-lang.in: Revert stamp-xgnatug change from 2003-12-18.\n \tUpdate comment and copyright date.\n \t* stamp-xgnatug: Delete.\n \n@@ -177,14 +181,14 @@\n \n \t* sprint.adb: Minor updates to avoid -gnatwa warnings\n \n-\t* s-secsta.ads, s-secsta.adb: \n+\t* s-secsta.ads, s-secsta.adb:\n \t(SS_Get_Max): New function to obtain high water mark for ss stack\n \tDefault_Secondary_Stack is not a constant since it may be modified by\n \tthe binder generated main program if the -D switch is used.\n \n \t* switch-b.adb: New -Dnnn switch for binder\n \n-\t* switch-c.adb: \n+\t* switch-c.adb:\n \tMake -gnatg imply all warnings currently in -gnatwa\n \n \t* vms_conv.adb: Minor reformatting\n@@ -509,7 +513,7 @@\n \tto __gnat_map_signal, imported from init.c to support\n \tsignal -> exception mappings that depend on the vxWorks version.\n \n-\t* init.c: \n+\t* init.c:\n \tCreated and exported __gnat_map_signal to support signal -> exception\n \tmapping that is dependent on the VxWorks version.\n \tChange mapping of SIGBUS from Program_Error to Storage_Error on VxWorks\n@@ -538,7 +542,7 @@\n \n \t* sem_ch3.adb: Minor reformatting\n \n-\t* sem_prag.adb: \n+\t* sem_prag.adb:\n \tFix bad prototype of Same_Base_Type in body (code reading cleanup)\n \tMinor reformatting throughout\n \n@@ -794,7 +798,7 @@\n \n \tPR ada/11724\n \n-\t* adaint.h, adaint.c, g-os_lib.ads: \n+\t* adaint.h, adaint.c, g-os_lib.ads:\n \tDo not assume that the offset argument to lseek(2) is a 32 bit integer,\n \ton some platforms (including FreeBSD), it is a 64 bit value.\n \tIntroduce a __gnat_lseek wrapper in adaint.c to allow for portability.\n@@ -812,19 +816,19 @@\n \t* gnatlbr.adb: Clean up: replace Library_Version by\n \tVerbose_Library_Version.\n \n-\t* make.adb, lib-writ.adb, exp_attr.adb: \n+\t* make.adb, lib-writ.adb, exp_attr.adb:\n \tClean up: replace Library_Version by Verbose_Library_Version.\n \n \t* 5lintman.adb: Removed.\n \n-\t* Makefile.in: \n+\t* Makefile.in:\n \tUpdate and simplify computation of LIBRARY_VERSION.\n \tFix computation of GSMATCH_VERSION.\n \t5lintman.adb is no longer used: replaced by 7sintman.adb.\n \n 2003-12-03  Robert Dewar  <dewar@gnat.com>\n \n-\t* exp_ch5.adb: \n+\t* exp_ch5.adb:\n \t(Possible_Bit_Aligned_Component): Maybe_Bit_Aligned_Large_Component new\n \tname. Modified to consider small non-bit-packed arrays as troublesome\n \tand in need of component-by-component assigment expansion.\n@@ -838,22 +842,22 @@\n \n 2003-12-03  Jose Ruiz  <ruiz@act-europe.fr>\n \n-\t* Makefile.in: \n+\t* Makefile.in:\n \tWhen defining LIBGNAT_TARGET_PAIRS for bare board targets, remove the\n \tredundant inclusion of EXTRA_HIE_NONE_TARGET_PAIRS, which is always\n \tincluded in HIE_NONE_TARGET_PAIRS.\n \n 2003-12-03  Ed Schonberg  <schonberg@gnat.com>\n \n-\t* sem_attr.adb: \n+\t* sem_attr.adb:\n \t(Legal_Formal_Attribute): Attribute is legal in an inlined body, as it\n \tis legal in an instance, because legality is cheched in the template.\n \n-\t* sem_prag.adb: \n+\t* sem_prag.adb:\n \t(Analyze_Pragma, case Warnings): In an inlined body, the pragma may be\n \tappplied to an unchecked conversion of a formal parameter.\n \n-\t* sem_warn.adb: \n+\t* sem_warn.adb:\n \t(Output_Unreferenced_Messages): Suppress \"not read\" warnings on imported\n \tvariables.\n \n@@ -922,7 +926,7 @@\n \n 2003-11-26  Thomas Quinot  <quinot@act-europe.fr>\n \n-\t* g-socket.ads, g-socket.adb: \n+\t* g-socket.ads, g-socket.adb:\n \tClarify documentation of function Stream. Introduce a Free procedure\n \tto release the returned Stream once it becomes unused.\n \n@@ -936,14 +940,14 @@\n \n 2003-11-26  Ed Schonberg  <schonberg@gnat.com>\n \n-\t* exp_ch4.adb: \n+\t* exp_ch4.adb:\n \t(Expand_N_Slice): Recognize all cases of slices that appear as actuals\n \tin procedure calls and whose expansion must be deferred.\n \n \t* exp_ch6.adb (Add_Call_By_Copy_Node): Remove previous fix. Proper fix\n \tis in exp_ch4.\n \n-\t* sem_ch3.adb: \n+\t* sem_ch3.adb:\n \t(Build_Derived_Array_Type): Create operator for unconstrained type\n \tif ancestor is unconstrained.\n \n@@ -959,7 +963,7 @@\n \tChange to object directory of main project before binding step.\n \t(Initialize): Initialize Project_Object_Directory to No_Project\n \n-\t* mlib-prj.adb: \n+\t* mlib-prj.adb:\n \t(Build_Library): Take into account Builder'Default_Switches (\"Ada\") when\n \tbinding a Stand-Alone Library.\n \n@@ -970,7 +974,7 @@\n \n \t* sem_ch13.adb: (Check_Size): Reset size if size is too small\n \n-\t* sem_ch13.ads: \n+\t* sem_ch13.ads:\n \t(Check_Size): Fix documentation to include bit-packed array case\n \n \t* sem_res.adb: Implement restriction No_Direct_Boolean_Operators\n@@ -993,7 +997,7 @@\n \n 2003-11-24  Jose Ruiz  <ruiz@act-europe.fr>\n \n-\t* Makefile.in: \n+\t* Makefile.in:\n \tUse 5zintman.ads for VxWorks targets. This file avoid confusion between\n \tsignals and interrupts.\n \n@@ -1002,21 +1006,21 @@\n \t* 5zintman.adb: Replace Exception_Interrupts by Exception_Signals, and\n \tadd exception signals to the set of unmasked signals.\n \n-\t* 5ztaprop.adb: \n+\t* 5ztaprop.adb:\n \tUse Abort_Task_Signal instead of Abort_Task_Interrupt to avoid confusion\n \tbetween signals and interrupts.\n \tAdd to Unblocked_Signal_Mask the set of signals that are in\n \tKeep_Unmasked.\n \n-\t* 7sinmaop.adb: \n+\t* 7sinmaop.adb:\n \tAdding a check to see whether the Interrupt_ID we want to unmask is in\n \tthe range of Keep_Unmasked (in procedure Interrupt_Self_Process). The\n \treason is that the index type of the Keep_Unmasked array is not always\n \tInterrupt_ID; it may be a subtype of Interrupt_ID.\n \n 2003-11-24  Gary Dismukes  <dismukes@gnat.com>\n \n-\t* exp_util.adb: \n+\t* exp_util.adb:\n \t(Remove_Side_Effects): Condition constantness of object created for a\n \t an unchecked type conversion on the constantness of the expression\n \t to ensure the correct value for 'Constrained when passing components\n@@ -1035,7 +1039,7 @@\n \n 2003-11-24  Vincent Celier  <celier@gnat.com>\n \n-\t* make.adb: \n+\t* make.adb:\n \t(Gnatmake, Initialize): Call Usage instead of Makeusg directly\n \t(Marking_Label): Label to mark processed source files. Incremented for\n \teach executable.\n@@ -1045,7 +1049,7 @@\n \n 2003-11-24  Jerome Guitton  <guitton@act-europe.fr>\n \n-\t* s-thread.ads: \n+\t* s-thread.ads:\n \tMove the declaration of the TSD for System.Threads to System.Soft_Links.\n \tAdd some comments.\n \n@@ -1055,7 +1059,7 @@\n \n 2003-11-24  Vasiliy Fofanov  <fofanov@act-europe.fr>\n \n-\t* Make-lang.in: \n+\t* Make-lang.in:\n \tUse gnatls rather than gcc to obtain the location of GNAT RTL for\n \tcrosstools build.\n \n@@ -1076,22 +1080,22 @@\n \n 2003-11-24  Ed Schonberg  <schonberg@gnat.com>\n \n-\t* sem_ch3.adb: \n+\t* sem_ch3.adb:\n \t(New_Concatenation_Op): Proper name for New_Binary_Operator, only\n \tused for implicit concatenation operators.\n \tCode cleanup.\n \n-\t* sem_elab.adb: \n+\t* sem_elab.adb:\n \t(Check_Elab_Call): Set No_Elaboration_Check appropriately on calls in\n \ttask bodies that are in the scope of a Suppress pragma.\n \t(Check_A Call): Use the flag to prevent spurious elaboration checks.\n \n-\t* sinfo.ads, sinfo.adb: \n+\t* sinfo.ads, sinfo.adb:\n \tNew flag No_Elaboration_Check on function/procedure calls, to properly\n \tsuppress checks on calls in task bodies that are within a local suppress\n \tpragma.\n \n-\t* exp_ch4.adb: \n+\t* exp_ch4.adb:\n \t(Expand_Concatenate_Other): Use the proper integer type for the\n \texpression for the upper bound, to avoid universal_integer computations\n \twhen possible.\n@@ -1187,11 +1191,11 @@\n \t* snames.ads, snames.adbadb: New standard names\n \tLibrary_Reference_Symbol_File and Library_Symbol_Policy\n \n-\t* mlib-prj.adb: \n+\t* mlib-prj.adb:\n \t(Build_Library): Call Build_Dinamic_Library with the Symbol_Data of the\n \tproject.\n \n-\t* mlib-tgt.adb: \n+\t* mlib-tgt.adb:\n \t(Build_Dynamic_Library): New parameter Symbol_Data (ignored)\n \n \t* mlib-tgt.ads: (Build_Dynamic_Library): New parameter Symbol_Data\n@@ -1201,11 +1205,11 @@\n \t* prj.ads: (Policy, Symbol_Record): New types\n \t(Project_Data): New component Symbol_Data\n \n-\t* prj-attr.adb: \n+\t* prj-attr.adb:\n \tNew attributes Library_Symbol_File, Library_Symbol_Policy and\n \tLibrary_Reference_Symbol_File.\n \n-\t* prj-nmsc.adb: \n+\t* prj-nmsc.adb:\n \t(Ada_Check): When project is a Stand-Alone library project, process\n \tattribute Library_Symbol_File, Library_Symbol_Policy and\n \tLibrary_Reference_Symbol_File.\n@@ -1221,7 +1225,7 @@\n \tgnatsym related to symbol file, symbol policy and reference symbol\n \tfile.\n \n-\t* 5vsymbol.adb: \n+\t* 5vsymbol.adb:\n \tExtensive modifications to take into account the reference symbol file,\n \tthe symbol policy, the library version and to put in the symbol file the\n \tminor and major IDs.\n@@ -1234,7 +1238,7 @@\n \t(Flush): Remove last character of a line, if it is a back slash, to\n \tavoid make problems.\n \n-\t* gnatsym.adb: \n+\t* gnatsym.adb:\n \tImplement new scheme with reference symbol file and symbol policy.\n \n \t* g-os_lib.ads: (Is_Directory): Clarify comment\n@@ -1269,7 +1273,7 @@\n \n 2003-11-19  Ed Schonberg  <schonberg@gnat.com>\n \n-\t* exp_ch6.adb: \n+\t* exp_ch6.adb:\n \t(Add_Call_By_Copy_Node): Do not original node of rewritten expression\n \tin the rewriting is the result of an inlined call.\n \n@@ -1278,7 +1282,7 @@\n \tpost-call assignment, because expression may have been rewritten, e.g.\n \tif it is a packed array.\n \n-\t* sem_attr.adb: \n+\t* sem_attr.adb:\n \t(Resolve_Attribute, case 'Constrained): Attribute is legal in an inlined\n \tbody, just as it is in an instance.\n \tCategorization routines\n@@ -1321,7 +1325,7 @@\n \n 2003-11-18  Thomas Quinot  <quinot@act-europe.fr>\n \n-\t* cstreams.c: \n+\t* cstreams.c:\n \tUse realpath(3) on FreeBSD. Fix typo in comment while we are at it.\n \n \t* init.c: Initialization routines for FreeBSD\n@@ -1451,7 +1455,7 @@\n 2003-11-14  Andreas Jaeger  <aj@suse.de>\n \n \t* lang.opt: Change -Wno-long-long to -Wlong-long since the latter\n-\tis the canonical version. \n+\tis the canonical version.\n \t* misc.c (gnat_handle_option): Likewise.\n \n \t* Makefile.in (LIBGNAT_TARGET_PAIRS): Add rules for x86_64-linux."}, {"sha": "bfcc541a2aea298f7c79733212d3af2c03153e2f", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf3e0dd2d5fe2d7667a7463baafb5b862d70362/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=fbf3e0dd2d5fe2d7667a7463baafb5b862d70362", "patch": "@@ -1706,11 +1706,11 @@ install-gnatlib: ../stamp-gnatlib\n \tfor file in gnat gnarl; do \\\n \t   if [ -f rts/lib$$file-$(LIBRARY_VERSION)$(soext) ]; then \\\n \t      $(INSTALL) rts/lib$$file-$(LIBRARY_VERSION)$(soext) \\\n-\t\t\t $(ADA_RTL_OBJ_DIR); \\\n+\t\t\t $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t   fi; \\\n \t   if [ -f rts/lib$$file$(soext) ]; then \\\n \t      $(LN_S) lib$$file-$(LIBRARY_VERSION)$(soext) \\\n-\t      $(ADA_RTL_OBJ_DIR)/lib$$file$(soext); \\\n+\t      $(DESTDIR)$(ADA_RTL_OBJ_DIR)/lib$$file$(soext); \\\n \t   fi; \\\n \tdone\n # This copy must be done preserving the date on the original file."}]}