{"sha": "85c0a55631f8cf5fd8e44d506d150f725327b02d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVjMGE1NTYzMWY4Y2Y1ZmQ4ZTQ0ZDUwNmQxNTBmNzI1MzI3YjAyZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-11T11:39:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-11T11:39:02Z"}, "message": "(simplify_binary_operation): Test value of SHIFT_COUNT_TRUNCATED if it\nis defined.\n\nFrom-SVN: r5731", "tree": {"sha": "1473f7475b5e930db2bc4b6b3a20138f9fca87f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1473f7475b5e930db2bc4b6b3a20138f9fca87f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85c0a55631f8cf5fd8e44d506d150f725327b02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c0a55631f8cf5fd8e44d506d150f725327b02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c0a55631f8cf5fd8e44d506d150f725327b02d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c0a55631f8cf5fd8e44d506d150f725327b02d/comments", "author": null, "committer": null, "parents": [{"sha": "5541136b1b679a183fa09a72608b771315dec4ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5541136b1b679a183fa09a72608b771315dec4ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5541136b1b679a183fa09a72608b771315dec4ed"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "4f939fdae059f8c4eed0ad5a9f6fa3377b6a028f", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85c0a55631f8cf5fd8e44d506d150f725327b02d/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85c0a55631f8cf5fd8e44d506d150f725327b02d/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=85c0a55631f8cf5fd8e44d506d150f725327b02d", "patch": "@@ -3409,7 +3409,8 @@ simplify_binary_operation (code, mode, op0, op1)\n \tcase ASHIFT:     case LSHIFT:\n \tcase ROTATE:     case ROTATERT:\n #ifdef SHIFT_COUNT_TRUNCATED\n-\t  l2 &= (GET_MODE_BITSIZE (mode) - 1), h2 = 0;\n+\t  if (SHIFT_COUNT_TRUNCATED)\n+\t    l2 &= (GET_MODE_BITSIZE (mode) - 1), h2 = 0;\n #endif\n \n \t  if (h2 != 0 || l2 < 0 || l2 >= GET_MODE_BITSIZE (mode))\n@@ -3840,7 +3841,8 @@ simplify_binary_operation (code, mode, op0, op1)\n \treturn 0;\n \n #ifdef SHIFT_COUNT_TRUNCATED\n-      arg1 &= (BITS_PER_WORD - 1);\n+      if (SHIFT_COUNT_TRUNCATED)\n+\targ1 &= (BITS_PER_WORD - 1);\n #endif\n \n       if (arg1 >= width)\n@@ -3855,7 +3857,8 @@ simplify_binary_operation (code, mode, op0, op1)\n \treturn 0;\n \n #ifdef SHIFT_COUNT_TRUNCATED\n-      arg1 &= (BITS_PER_WORD - 1);\n+      if (SHIFT_COUNT_TRUNCATED)\n+\targ1 &= (BITS_PER_WORD - 1);\n #endif\n \n       if (arg1 >= width)\n@@ -3869,7 +3872,8 @@ simplify_binary_operation (code, mode, op0, op1)\n \treturn 0;\n \n #ifdef SHIFT_COUNT_TRUNCATED\n-      arg1 &= (BITS_PER_WORD - 1);\n+      if (SHIFT_COUNT_TRUNCATED)\n+\targ1 &= (BITS_PER_WORD - 1);\n #endif\n \n       if (arg1 >= width)"}]}