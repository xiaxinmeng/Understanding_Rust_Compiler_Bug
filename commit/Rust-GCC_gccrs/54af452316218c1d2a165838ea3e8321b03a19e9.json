{"sha": "54af452316218c1d2a165838ea3e8321b03a19e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhZjQ1MjMxNjIxOGMxZDJhMTY1ODM4ZWEzZTgzMjFiMDNhMTllOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-06T21:45:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-06T21:45:46Z"}, "message": "configure.ac (hle prefixes): Remove .code64.\n\n\t* configure.ac (hle prefixes): Remove .code64.\n\t* configure: Regenerated.\n\nFrom-SVN: r191044", "tree": {"sha": "923dd78e27f34e494a556ec8b6b6373cd65a45f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923dd78e27f34e494a556ec8b6b6373cd65a45f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54af452316218c1d2a165838ea3e8321b03a19e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54af452316218c1d2a165838ea3e8321b03a19e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54af452316218c1d2a165838ea3e8321b03a19e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54af452316218c1d2a165838ea3e8321b03a19e9/comments", "author": null, "committer": null, "parents": [{"sha": "fa129f20b3d956e6e8a3a017c57e0c62a8ba3002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa129f20b3d956e6e8a3a017c57e0c62a8ba3002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa129f20b3d956e6e8a3a017c57e0c62a8ba3002"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "7f89840358f39e8cc8a33e6b6fc6e023d98b5b4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54af452316218c1d2a165838ea3e8321b03a19e9", "patch": "@@ -1,3 +1,8 @@\n+2012-09-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* configure.ac (hle prefixes): Remove .code64.\n+\t* configure: Regenerated.\n+\n 2012-09-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c: Use CONST_INT_P, CONST_DOUBLE_P, REG_P, MEM_P,\n@@ -6,8 +11,7 @@\n \t* config/arm/arm.md: Use CONST_INT_P, REG_P, MEM_P, CONST_DOUBLE_P\n \tconsistently.\n \t* config/arm/neon.md: Use REG_P consistently.\n-\t* config/arm/predicates.md: Use CONST_INT_P, REG_P, MEM_P\n-\tconsistently.\n+\t* config/arm/predicates.md: Use CONST_INT_P, REG_P, MEM_P consistently.\n \t* config/arm/thumb2.md: Use CONST_INT_P, REG_P consistently.\n \t* config/arm/vec-common.md: Use REG_P consistently.\n \n@@ -54,13 +58,13 @@\n \n 2012-09-06  Chen Liqin  <liqin.gcc@gmail.com>\n \n-\t* config/score/score.c: Remove TARGET_LEGITIMIZE_ADDRESS define\n-\tand score_legitimize_address function, use compiler default code instead.\n+\t* config/score/score.c: Remove TARGET_LEGITIMIZE_ADDRESS define and\n+\tscore_legitimize_address function, use compiler default code instead.\n \n 2012-09-05  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-inline.c (want_inline_small_function_p): Use INLINE_HINT_loop_iterations\n-\thint.\n+\t* ipa-inline.c (want_inline_small_function_p): Use\n+\tINLINE_HINT_loop_iterations hint.\n \n 2012-09-05  Andrew Pinski  <apinski@cavium.com>\n \n@@ -137,8 +141,7 @@\n 2012-09-05   Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/54484\n-\t* vec.h (vec_t::lower_bound): Fix spelling of LESSTHAN\n-\targument.\n+\t* vec.h (vec_t::lower_bound): Fix spelling of LESSTHAN argument.\n \n 2012-09-05  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "5bb409a3b4d2fe1dcdcb87f66f049b6d342a6a96", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=54af452316218c1d2a165838ea3e8321b03a19e9", "patch": "@@ -24417,9 +24417,7 @@ if test \"${gcc_cv_as_ix86_hle+set}\" = set; then :\n else\n   gcc_cv_as_ix86_hle=no\n   if test x$gcc_cv_as != x; then\n-    $as_echo '.code64\n-       lock xacquire cmpxchg %esi, (%rcx)\n-       ' > conftest.s\n+    $as_echo 'lock xacquire cmpxchg %esi, (%ecx)' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5"}, {"sha": "699c7904f7ccf8a05a5af5f6fb1cd3d0ad37c68b", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54af452316218c1d2a165838ea3e8321b03a19e9/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=54af452316218c1d2a165838ea3e8321b03a19e9", "patch": "@@ -3581,9 +3581,7 @@ foo:\tnop\n \n     gcc_GAS_CHECK_FEATURE([hle prefixes],\n       gcc_cv_as_ix86_hle,,,\n-      [.code64\n-       lock xacquire cmpxchg %esi, (%rcx)\n-       ],,\n+      [lock xacquire cmpxchg %esi, (%ecx)],,\n       [AC_DEFINE(HAVE_AS_IX86_HLE, 1,\n         [Define if your assembler supports HLE prefixes.])])\n "}]}