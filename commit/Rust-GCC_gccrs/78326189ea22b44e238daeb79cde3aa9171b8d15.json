{"sha": "78326189ea22b44e238daeb79cde3aa9171b8d15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzMjYxODllYTIyYjQ0ZTIzOGRhZWI3OWNkZTNhYTkxNzFiOGQxNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-12-11T11:11:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:11:37Z"}, "message": "[Ada] Plug small loophole with pathological packed array type\n\nThis fixes a crash in gigi on a pathological packed array type, whose\ncomponent type is a record type without representation clause or packing\nbut with a clause that bumps its size to a non-multiple value of the\nstorage unit.  In this case, the front-end fails to detect that calls\nto the packing manpulation routines of the run time are necessary.\n\nThe fix doesn't change anything for non-pathological cases, i.e. when\nthe component type has a representation clause or is packed.\n\n2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Packed_Array_Aggregate_Handled): Bail out for\n\tany non-scalar type as component type of the array.\n\ngcc/testsuite/\n\n\t* gnat.dg/packed_array.adb, gnat.dg/packed_array.ads,\n\tgnat.dg/packed_array_pkg.ads: New testcase.\n\nFrom-SVN: r267006", "tree": {"sha": "6713d9d5083a4a32e5cd5b92ac41ba9f35f4019c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6713d9d5083a4a32e5cd5b92ac41ba9f35f4019c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78326189ea22b44e238daeb79cde3aa9171b8d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78326189ea22b44e238daeb79cde3aa9171b8d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78326189ea22b44e238daeb79cde3aa9171b8d15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78326189ea22b44e238daeb79cde3aa9171b8d15/comments", "author": null, "committer": null, "parents": [{"sha": "6186a6ef3c5d54134e68a0f54ad736e405876269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6186a6ef3c5d54134e68a0f54ad736e405876269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6186a6ef3c5d54134e68a0f54ad736e405876269"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "c2305be2ec2113b170822c38a2caf257e0e2e1b4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -1,3 +1,8 @@\n+2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_aggr.adb (Packed_Array_Aggregate_Handled): Bail out for\n+\tany non-scalar type as component type of the array.\n+\n 2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* einfo.ads (Is_Bit_Packed_Array): Fix values of component size."}, {"sha": "37b9fa8378377ee15c5e31dca7afc9362f6189aa", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -7893,9 +7893,7 @@ package body Exp_Aggr is\n          return False;\n       end if;\n \n-      if not Is_Scalar_Type (Component_Type (Typ))\n-        and then Has_Non_Standard_Rep (Component_Type (Typ))\n-      then\n+      if not Is_Scalar_Type (Ctyp) then\n          return False;\n       end if;\n "}, {"sha": "7a71ed1bc55455b8d216719f8990ac216ed6b365", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -1,3 +1,8 @@\n+2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/packed_array.adb, gnat.dg/packed_array.ads,\n+\tgnat.dg/packed_array_pkg.ads: New testcase.\n+\n 2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/ghost3.adb, gnat.dg/ghost3.ads: New testcase."}, {"sha": "5faba400dce8262ce1ec936abd384a2ea518e78d", "filename": "gcc/testsuite/gnat.dg/packed_array.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.adb?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -0,0 +1,5 @@\n+package body Packed_Array is\n+\n+  procedure Dummy is null;\n+\n+end;"}, {"sha": "957a321fcdc02253c27a389906344998797f45ff", "filename": "gcc/testsuite/gnat.dg/packed_array.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array.ads?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -0,0 +1,9 @@\n+with Packed_Array_Pkg; use Packed_Array_Pkg;\n+\n+package Packed_Array is\n+\n+  C : constant Small_Rec2 := (Lo => 1, Hi => Max, A => (1 => (2, 3)));\n+\n+  procedure Dummy;\n+\n+end;"}, {"sha": "d116f3ca97b0b8acf9e1c30ae238e6ac22534fc8", "filename": "gcc/testsuite/gnat.dg/packed_array_pkg.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78326189ea22b44e238daeb79cde3aa9171b8d15/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpacked_array_pkg.ads?ref=78326189ea22b44e238daeb79cde3aa9171b8d15", "patch": "@@ -0,0 +1,20 @@\n+package Packed_Array_Pkg is\n+\n+  type Rec1 is record\n+    I : Integer;\n+    S : Short_Integer;\n+  end record;\n+  for Rec1'Size use 49;\n+\n+  type Arr is array (Positive range <>) of Rec1;\n+  for Arr'Component_Size use 49;\n+\n+  type Rec2 (Lo, Hi : Positive) is record\n+    A : Arr (Lo .. Hi);\n+  end record;\n+\n+  Max : Positive := 1;\n+\n+  subtype Small_Rec2 is Rec2 (1, Max);\n+\n+end;"}]}