{"sha": "8283724bc24efc0c11960947f2d4e99bc20b3765", "node_id": "C_kwDOANBUbNoAKDgyODM3MjRiYzI0ZWZjMGMxMTk2MDk0N2YyZDRlOTliYzIwYjM3NjU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-24T10:11:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-24T10:11:43Z"}, "message": "Merge #1052\n\n1052: Add hints for valid follow tokens r=CohenArthur a=CohenArthur\n\nThis PR adds hints about the allowed tokens after a certain fragment, and fixes tests to uphold the new error message\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "57989a2b4cd1801e46e383c655628702f0f24996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57989a2b4cd1801e46e383c655628702f0f24996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8283724bc24efc0c11960947f2d4e99bc20b3765", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiPEPfCRBK7hj4Ov3rIwAAE0cIAGjkZr16FJcmasekSSutxo5f\n7nkcJs7HCdahXJNL9bipubX2Gh9OcS27YoPHHYQczaCCZy9yJSxep+1T8ej2Ic1c\nodn3DAf38adErwrlgK20Vr/53+FSFZo/KrdAX14040yqgXTaFYA1blLuWIKCnBYW\n4pMSNLXR0hjGJ9K7aKr+ndb0w/GUpBJdZFahjF1QFxQb3LqSRC2VpLt01PIoiwjG\nUkhBCfzPmEfiUmOtahDKtc+Qj1ekHjPO0kVI5oQCv01xqtFrvYhS720GnAxY7M/i\nmiJ/T5VZ5h3igeaglFHzkMu4SlXuql3/k38yA61883MBJkQU0ZWzsyQ11qpZY1g=\n=rRe+\n-----END PGP SIGNATURE-----\n", "payload": "tree 57989a2b4cd1801e46e383c655628702f0f24996\nparent ff5f3005d0e0c9771e042fc45c8f12fc1ae5a373\nparent 3e5090608d7f8c22894d9744f67ec9dd089833ac\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648116703 +0000\ncommitter GitHub <noreply@github.com> 1648116703 +0000\n\nMerge #1052\n\n1052: Add hints for valid follow tokens r=CohenArthur a=CohenArthur\n\nThis PR adds hints about the allowed tokens after a certain fragment, and fixes tests to uphold the new error message\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8283724bc24efc0c11960947f2d4e99bc20b3765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8283724bc24efc0c11960947f2d4e99bc20b3765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8283724bc24efc0c11960947f2d4e99bc20b3765/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff5f3005d0e0c9771e042fc45c8f12fc1ae5a373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5f3005d0e0c9771e042fc45c8f12fc1ae5a373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5f3005d0e0c9771e042fc45c8f12fc1ae5a373"}, {"sha": "3e5090608d7f8c22894d9744f67ec9dd089833ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5090608d7f8c22894d9744f67ec9dd089833ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5090608d7f8c22894d9744f67ec9dd089833ac"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "0153b37ddf672163bfefee04195e44cb69677c5b", "filename": "gcc/rust/parse/rust-parse.cc", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Frust%2Fparse%2Frust-parse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Frust%2Fparse%2Frust-parse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.cc?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -172,6 +172,8 @@ peculiar_fragment_match_compatible (AST::MacroMatchFragment &last_match,\n \t}}};\n \n   Location error_locus = match.get_match_locus ();\n+  std::string kind_str = \"fragment\";\n+  auto &allowed_toks = follow_set[last_match.get_frag_spec ().get_kind ()];\n \n   // There are two behaviors to handle here: If the follow-up match is a token,\n   // we want to check if it is allowed.\n@@ -183,16 +185,12 @@ peculiar_fragment_match_compatible (AST::MacroMatchFragment &last_match,\n     {\n       case AST::MacroMatch::Tok: {\n \tauto tok = static_cast<AST::Token *> (&match);\n-\tauto &allowed_toks\n-\t  = follow_set[last_match.get_frag_spec ().get_kind ()];\n-\tauto is_valid = contains (allowed_toks, tok->get_id ());\n-\tif (!is_valid)\n-\t  // FIXME: Add hint about allowed fragments\n-\t  rust_error_at (tok->get_match_locus (),\n-\t\t\t \"token %<%s%> is not allowed after %<%s%> fragment\",\n-\t\t\t tok->get_str ().c_str (),\n-\t\t\t last_match.get_frag_spec ().as_string ().c_str ());\n-\treturn is_valid;\n+\tif (contains (allowed_toks, tok->get_id ()))\n+\t  return true;\n+\tkind_str = \"token `\"\n+\t\t   + std::string (get_token_description (tok->get_id ())) + \"`\";\n+\terror_locus = tok->get_match_locus ();\n+\tbreak;\n       }\n       break;\n       case AST::MacroMatch::Repetition: {\n@@ -219,9 +217,16 @@ peculiar_fragment_match_compatible (AST::MacroMatchFragment &last_match,\n       break;\n     }\n \n-  // FIXME: Improve error message\n-  rust_error_at (error_locus, \"fragment not allowed after %<%s%> fragment\",\n+  rust_error_at (error_locus, \"%s is not allowed after %<%s%> fragment\",\n+\t\t kind_str.c_str (),\n \t\t last_match.get_frag_spec ().as_string ().c_str ());\n+  auto allowed_toks_str\n+    = \"`\" + std::string (get_token_description (allowed_toks[0])) + \"`\";\n+  for (size_t i = 1; i < allowed_toks.size (); i++)\n+    allowed_toks_str\n+      += \", `\" + std::string (get_token_description (allowed_toks[i])) + \"`\";\n+\n+  rust_inform (error_locus, \"allowed tokens are %s\", allowed_toks_str.c_str ());\n \n   return false;\n }"}, {"sha": "ee7833be0a6e5cab4d0cba5d8cef535f43863269", "filename": "gcc/testsuite/rust/compile/macro27.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro27.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro27.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro27.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($a:expr tok) => {\n-        // { dg-error \"token .tok. is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n+        // { dg-error \"token .identifier. is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"required first macro rule in macro rules definition could not be parsed\" \"\" { target *-*-* } .-2 }\n         // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-3 }\n         $a"}, {"sha": "3d83c08ec4223fd5919f5665b44a087cb964b805", "filename": "gcc/testsuite/rust/compile/macro28.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro28.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro28.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro28.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($a:expr $(tok $es:expr)*) => {\n-        // { dg-error \"fragment not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n+        // { dg-error \"fragment is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"required first macro rule in macro rules definition could not be parsed\" \"\" { target *-*-* } .-2 }\n         // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-3 }\n         $a"}, {"sha": "39f5021b74f7a527e3f4b1b1c1e48306c5ce8c3d", "filename": "gcc/testsuite/rust/compile/macro29.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro29.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro29.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro29.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($($es:expr)* tok) => {\n-        // { dg-error \"token .tok. is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n+        // { dg-error \"token .identifier. is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"required first macro rule in macro rules definition could not be parsed\" \"\" { target *-*-* } .-2 }\n         // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-3 }\n         $a"}, {"sha": "35064bc0ee58bb1867e063921250c6ba54e7678f", "filename": "gcc/testsuite/rust/compile/macro30.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro30.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro30.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro30.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($e:expr $f:expr) => {\n-        // { dg-error \"fragment not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n+        // { dg-error \"fragment is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"required first macro rule in macro rules definition could not be parsed\" \"\" { target *-*-* } .-2 }\n         // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-3 }\n         $e"}, {"sha": "6674a5fe554b24d072fa92fefe43e9e68ac17474", "filename": "gcc/testsuite/rust/compile/macro31.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro31.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro31.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro31.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,6 +1,6 @@\n macro_rules! m {\n     ($($e:expr)* $($f:expr)*) => {\n-        // { dg-error \"fragment not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n+        // { dg-error \"fragment is not allowed after .expr. fragment\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"required first macro rule in macro rules definition could not be parsed\" \"\" { target *-*-* } .-2 }\n         // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-3 }\n         $e"}, {"sha": "07b157b53c2fd958a418e988dda456c8bf68e205", "filename": "gcc/testsuite/rust/compile/macro35.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro35.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8283724bc24efc0c11960947f2d4e99bc20b3765/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro35.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro35.rs?ref=8283724bc24efc0c11960947f2d4e99bc20b3765", "patch": "@@ -1,5 +1,5 @@\n macro_rules! inside_matcher {\n-    (($e:expr tok) tok) => {{}}; // { dg-error \"token .tok. is not allowed after .expr. fragment\" }\n+    (($e:expr tok) tok) => {{}}; // { dg-error \"token .identifier. is not allowed after .expr. fragment\" }\n                                  // { dg-error \"failed to parse macro matcher\" \"\" { target *-*-* } .-1 }\n                                  // { dg-error \"failed to parse macro match\" \"\" { target *-*-* } .-2 }\n                                  // { dg-error \"required first macro rule\" \"\" { target *-*-* } .-3 }"}]}