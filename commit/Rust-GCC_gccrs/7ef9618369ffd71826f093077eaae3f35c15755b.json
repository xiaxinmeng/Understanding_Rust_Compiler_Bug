{"sha": "7ef9618369ffd71826f093077eaae3f35c15755b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmOTYxODM2OWZmZDcxODI2ZjA5MzA3N2VhYWUzZjM1YzE1NzU1Yg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-03-05T15:38:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-03-05T15:38:15Z"}, "message": "jit documentation fixes\n\ngcc/jit/ChangeLog:\n\t* docs/cp/intro/tutorial03.rst: Add missing arguments to\n\tgccjit::block::end_with_conditional call.  Add on_true/on_false\n\tcomments.  Tweak the wording.\n\t* docs/intro/tutorial03.rst: Add missing arguments to\n\tgcc_jit_block_end_with_conditional call.  Add some clarifying\n\tcomments.\n\t* docs/topics/compilation.rst: Tweak the wording to avoid an\n\tambiguous use of \"this\".\n\t* docs/topics/contexts.rst: Fix a typo.\n\t* docs/topics/expressions.rst (GCC_JIT_BINARY_OP_MINUS): Remove\n\ta stray backtick.\n\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n\nFrom-SVN: r221218", "tree": {"sha": "2e47ed8d6b5c5ce6732a23d686bfa2b2a6bc6200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e47ed8d6b5c5ce6732a23d686bfa2b2a6bc6200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef9618369ffd71826f093077eaae3f35c15755b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef9618369ffd71826f093077eaae3f35c15755b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef9618369ffd71826f093077eaae3f35c15755b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef9618369ffd71826f093077eaae3f35c15755b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d81177988cfc7c3f297ba38421c5fcb4aa3b34d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d81177988cfc7c3f297ba38421c5fcb4aa3b34d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d81177988cfc7c3f297ba38421c5fcb4aa3b34d5"}], "stats": {"total": 756, "additions": 398, "deletions": 358}, "files": [{"sha": "bced8ec97a8ef10583b42cdc9f983217b9f45fff", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -1,3 +1,18 @@\n+2015-03-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* docs/cp/intro/tutorial03.rst: Add missing arguments to\n+\tgccjit::block::end_with_conditional call.  Add on_true/on_false\n+\tcomments.  Tweak the wording.\n+\t* docs/intro/tutorial03.rst: Add missing arguments to\n+\tgcc_jit_block_end_with_conditional call.  Add some clarifying\n+\tcomments.\n+\t* docs/topics/compilation.rst: Tweak the wording to avoid an\n+\tambiguous use of \"this\".\n+\t* docs/topics/contexts.rst: Fix a typo.\n+\t* docs/topics/expressions.rst (GCC_JIT_BINARY_OP_MINUS): Remove\n+\ta stray backtick.\n+\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n+\n 2015-02-24  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR libgomp/64625"}, {"sha": "4da623716e62d509afc951393f5cd24a2069d172", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 363, "deletions": 350, "changes": 713, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=7ef9618369ffd71826f093077eaae3f35c15755b"}, {"sha": "f4405ad2ea72a2baf9598501e9302d5992037a9d", "filename": "gcc/jit/docs/cp/intro/tutorial03.rst", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Fcp%2Fintro%2Ftutorial03.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Fcp%2Fintro%2Ftutorial03.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Fcp%2Fintro%2Ftutorial03.rst?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -238,7 +238,9 @@ and can then use this to add `b_loop_cond`'s sole statement, via\n \n .. code-block:: c++\n \n-  b_loop_cond.end_with_conditional (guard);\n+  b_loop_cond.end_with_conditional (guard,\n+                                    b_after_loop, // on_true\n+                                    b_loop_body); // on_false\n \n However :type:`gccjit::rvalue` has overloaded operators for this, so we\n express the conditional as\n@@ -247,14 +249,14 @@ express the conditional as\n \n    gccjit::rvalue guard = (i >= n);\n \n-and hence write the block more concisely as:\n+and hence we can write the block more concisely as:\n \n .. code-block:: c++\n \n   b_loop_cond.end_with_conditional (\n     i >= n,\n-    b_after_loop,\n-    b_loop_body);\n+    b_after_loop, // on_true\n+    b_loop_body); // on_false\n \n Next, we populate the body of the loop.\n "}, {"sha": "6c1ca3e6ef7951e883f3b4bd7099ee1562db8490", "filename": "gcc/jit/docs/intro/tutorial03.rst", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Fintro%2Ftutorial03.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Fintro%2Ftutorial03.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Fintro%2Ftutorial03.rst?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -229,6 +229,7 @@ We build the comparison using :c:func:`gcc_jit_context_new_comparison`:\n \n .. code-block:: c\n \n+  /* (i >= n) */\n    gcc_jit_rvalue *guard =\n      gcc_jit_context_new_comparison (\n        ctxt, NULL,\n@@ -241,7 +242,16 @@ and can then use this to add `b_loop_cond`'s sole statement, via\n \n .. code-block:: c\n \n-  gcc_jit_block_end_with_conditional (b_loop_cond, NULL, guard);\n+  /* Equivalent to:\n+       if (guard)\n+         goto after_loop;\n+       else\n+         goto loop_body;  */\n+  gcc_jit_block_end_with_conditional (\n+    b_loop_cond, NULL,\n+    guard,\n+    b_after_loop, /* on_true */\n+    b_loop_body); /* on_false */\n \n Next, we populate the body of the loop.\n "}, {"sha": "4eddf7672ac2d267a87935095b49d37044fe3a24", "filename": "gcc/jit/docs/topics/compilation.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fcompilation.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fcompilation.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fcompilation.rst?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -37,7 +37,7 @@ In-memory compilation\n    This calls into GCC and builds the code, returning a\n    `gcc_jit_result *`.\n \n-   If this is non-NULL, the caller becomes responsible for\n+   If the result is non-NULL, the caller becomes responsible for\n    calling :func:`gcc_jit_result_release` on it once they're done\n    with it.\n "}, {"sha": "b7f281a5e6919d8257c1f79bac96b1e4c375256f", "filename": "gcc/jit/docs/topics/contexts.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fcontexts.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fcontexts.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fcontexts.rst?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -138,7 +138,7 @@ be responsible for all of the rest:\n    If no errors occurred, this will be NULL.\n \n If you are wrapping the C API for a higher-level language that supports\n-exception-handling, you may instead by interested in the last error that\n+exception-handling, you may instead be interested in the last error that\n occurred on the context, so that you can embed this in an exception:\n \n .. function:: const char *\\"}, {"sha": "49317b9d55a8be5d81c51fa5f9d60c5db8f204fc", "filename": "gcc/jit/docs/topics/expressions.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9618369ffd71826f093077eaae3f35c15755b/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst?ref=7ef9618369ffd71826f093077eaae3f35c15755b", "patch": "@@ -233,7 +233,7 @@ Binary Operation                          C equivalent\n \n    For pointer addition, use :c:func:`gcc_jit_context_new_array_access`.\n \n-.. c:macro:: GCC_JIT_BINARY_OP_MINUS`\n+.. c:macro:: GCC_JIT_BINARY_OP_MINUS\n \n    Subtraction of arithmetic values; analogous to:\n "}]}