{"sha": "0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY4MmVkM2ViMjBlYjhkNWYyNDg3MTBjMWUyM2E4MTljOGIyZDJhNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-02T14:10:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-02T14:10:36Z"}, "message": "tree-vect-stmts.c (vectorizable_load): When vectorizing an invariant load do not generate a vector load from the...\n\n2013-01-02  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-stmts.c (vectorizable_load): When vectorizing an\n\tinvariant load do not generate a vector load from the scalar\n\tlocation.\n\nFrom-SVN: r194806", "tree": {"sha": "6b40c0b52bbcaffde33ceb661297de0f74ba73db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b40c0b52bbcaffde33ceb661297de0f74ba73db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f9f12f6f83a78e9afd6c76c443b45cad754eb16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9f12f6f83a78e9afd6c76c443b45cad754eb16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9f12f6f83a78e9afd6c76c443b45cad754eb16"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "10592b898858bb157bd0c7198709f19f6703910a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "patch": "@@ -1,3 +1,9 @@\n+2013-01-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vectorizable_load): When vectorizing an\n+\tinvariant load do not generate a vector load from the scalar\n+\tlocation.\n+\n 2013-01-02  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/55784"}, {"sha": "da9f12b5c8cb242d0396ad77e8ce9884dcfc5d52", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=0682ed3eb20eb8d5f248710c1e23a819c8b2d2a5", "patch": "@@ -4988,6 +4988,19 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  /* Record the mapping between SSA_NAMEs and statements.  */\n \t  vect_record_grouped_load_vectors (stmt, dr_chain);\n \t}\n+      /* Handle invariant-load.  */\n+      else if (inv_p && !bb_vinfo)\n+\t{\n+\t  gimple_stmt_iterator gsi2 = *gsi;\n+\t  gcc_assert (!grouped_load && !slp_perm);\n+\t  gsi_next (&gsi2);\n+\t  new_temp = vect_init_vector (stmt, scalar_dest,\n+\t\t\t\t       vectype, &gsi2);\n+\t  new_stmt = SSA_NAME_DEF_STMT (new_temp);\n+\t  /* Store vector loads in the corresponding SLP_NODE.  */\n+\t  if (slp)\n+\t    SLP_TREE_VEC_STMTS (slp_node).quick_push (new_stmt);\n+\t}\n       else\n \t{\n \t  for (i = 0; i < vec_num; i++)\n@@ -5135,17 +5148,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t    }\n \t\t}\n \n-\t      /* 4. Handle invariant-load.  */\n-\t      if (inv_p && !bb_vinfo)\n-\t\t{\n-\t\t  gimple_stmt_iterator gsi2 = *gsi;\n-\t\t  gcc_assert (!grouped_load);\n-\t\t  gsi_next (&gsi2);\n-\t\t  new_temp = vect_init_vector (stmt, scalar_dest,\n-\t\t\t\t\t       vectype, &gsi2);\n-\t\t  new_stmt = SSA_NAME_DEF_STMT (new_temp);\n-\t\t}\n-\n \t      if (negative)\n \t\t{\n \t\t  tree perm_mask = perm_mask_for_reverse (vectype);"}]}