{"sha": "eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2NDdiODBiYTFhMGFiMmQ5Yjg3OWNiZmRkMDhjZDY4MDVlNzVjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-01T08:41:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-01T08:41:52Z"}, "message": "sse.md (<mask_codefor><code><mode>): Add FALLTHRU comments.\n\n\t* config/i386/sse.md (<mask_codefor><code><mode>): Add FALLTHRU\n\tcomments.  Simplify asserts, remove unnecessary conditions.\n\tFormatting fixes.\n\t(*<code><mode>3): Likewise.\n\nFrom-SVN: r240694", "tree": {"sha": "cb6b6700b13a64ae12cfee45cb5f66ecbfdc50ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb6b6700b13a64ae12cfee45cb5f66ecbfdc50ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bff32679932d79cc57419cc5892b4618fafa2e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff32679932d79cc57419cc5892b4618fafa2e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff32679932d79cc57419cc5892b4618fafa2e60"}], "stats": {"total": 104, "additions": 53, "deletions": 51}, "files": [{"sha": "d432fe08e0463fed91dc0fd655b76fad46c5a638", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "patch": "@@ -1,3 +1,10 @@\n+2016-10-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (<mask_codefor><code><mode>): Add FALLTHRU\n+\tcomments.  Simplify asserts, remove unnecessary conditions.\n+\tFormatting fixes.\n+\t(*<code><mode>3): Likewise.\n+\n 2016-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* doc/invoke.texi (-Wregister): Document."}, {"sha": "235969ab40eb21e9c6400c046d043781aeae41b4", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 46, "deletions": 51, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=eb647b80ba1a0ab2d9b879cbfdd08cd6805e75c3", "patch": "@@ -11393,41 +11393,40 @@\n     {\n     case MODE_XI:\n       gcc_assert (TARGET_AVX512F);\n+      /* FALLTHRU */\n     case MODE_OI:\n-      gcc_assert (TARGET_AVX2 || TARGET_AVX512VL);\n+      gcc_assert (TARGET_AVX2);\n+      /* FALLTHRU */\n     case MODE_TI:\n-      gcc_assert (TARGET_SSE2 || TARGET_AVX512VL);\n+      gcc_assert (TARGET_SSE2);\n       switch (<MODE>mode)\n-      {\n-        case V16SImode:\n-        case V8DImode:\n-          if (TARGET_AVX512F)\n-          {\n-            tmp = \"p<logic><ssemodesuffix>\";\n-            break;\n-          }\n-        case V8SImode:\n-        case V4DImode:\n-        case V4SImode:\n-        case V2DImode:\n-          tmp = TARGET_AVX512VL ? \"p<logic><ssemodesuffix>\" : \"p<logic>\";\n-          break;\n-        default:\n-          gcc_unreachable ();\n-      }\n+\t{\n+\tcase V16SImode:\n+\tcase V8DImode:\n+\t  tmp = \"p<logic><ssemodesuffix>\";\n+\t  break;\n+\tcase V8SImode:\n+\tcase V4DImode:\n+\tcase V4SImode:\n+\tcase V2DImode:\n+\t  tmp = TARGET_AVX512VL ? \"p<logic><ssemodesuffix>\" : \"p<logic>\";\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n       break;\n \n-   case MODE_V8SF:\n+    case MODE_V8SF:\n       gcc_assert (TARGET_AVX);\n-   case MODE_V4SF:\n+    case MODE_V4SF:\n       gcc_assert (TARGET_SSE);\n       gcc_assert (!<mask_applied>);\n       tmp = \"<logic>ps\";\n       break;\n \n-   default:\n+    default:\n       gcc_unreachable ();\n-   }\n+    }\n \n   switch (which_alternative)\n     {\n@@ -11489,46 +11488,42 @@\n     {\n     case MODE_XI:\n       gcc_assert (TARGET_AVX512F);\n+      /* FALLTHRU */\n     case MODE_OI:\n-      gcc_assert (TARGET_AVX2 || TARGET_AVX512VL);\n+      gcc_assert (TARGET_AVX2);\n+      /* FALLTHRU */\n     case MODE_TI:\n-      gcc_assert (TARGET_SSE2 || TARGET_AVX512VL);\n+      gcc_assert (TARGET_SSE2);\n       switch (<MODE>mode)\n-        {\n-        case V64QImode:\n-        case V32HImode:\n-          if (TARGET_AVX512F)\n-          {\n-            tmp = \"p<logic>\";\n-            ssesuffix = \"q\";\n-            break;\n-          }\n-        case V32QImode:\n-        case V16HImode:\n-        case V16QImode:\n-        case V8HImode:\n-          if (TARGET_AVX512VL || TARGET_AVX2 || TARGET_SSE2)\n-          {\n-            tmp = \"p<logic>\";\n-            ssesuffix = TARGET_AVX512VL ? \"q\" : \"\";\n-            break;\n-          }\n-        default:\n-          gcc_unreachable ();\n-      }\n+\t{\n+\tcase V64QImode:\n+\tcase V32HImode:\n+\t  tmp = \"p<logic>\";\n+\t  ssesuffix = \"q\";\n+\t  break;\n+\tcase V32QImode:\n+\tcase V16HImode:\n+\tcase V16QImode:\n+\tcase V8HImode:\n+\t  tmp = \"p<logic>\";\n+\t  ssesuffix = TARGET_AVX512VL ? \"q\" : \"\";\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n       break;\n \n-   case MODE_V8SF:\n+    case MODE_V8SF:\n       gcc_assert (TARGET_AVX);\n-   case MODE_V4SF:\n+    case MODE_V4SF:\n       gcc_assert (TARGET_SSE);\n       tmp = \"<logic>ps\";\n       ssesuffix = \"\";\n       break;\n \n-   default:\n+    default:\n       gcc_unreachable ();\n-   }\n+    }\n \n   switch (which_alternative)\n     {"}]}