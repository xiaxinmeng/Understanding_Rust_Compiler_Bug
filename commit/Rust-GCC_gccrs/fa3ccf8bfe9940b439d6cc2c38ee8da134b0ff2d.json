{"sha": "fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "node_id": "C_kwDOANBUbNoAKGZhM2NjZjhiZmU5OTQwYjQzOWQ2Y2MyYzM4ZWU4ZGExMzRiMGZmMmQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-03T17:42:10Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-04T11:20:25Z"}, "message": "Remove static marker for range in alloca pass.\n\nThe m_ranges[] field in int_range<N> are trees, so they live in GC\nspace.  Since invalid_range is static, it must be marked with GTY\nmagic.  However, calculating invalid_range is not particularly slow,\nor on a critical path, so we can just put it in local scope and\nrecalculate every time.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/102560\n\t* gimple-ssa-warn-alloca.c (alloca_call_type): Remove static\n\tmarker for invalid_range.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/Walloca2.C: New test.", "tree": {"sha": "64209be6dbd9c65047a4786e9a938558d30e3528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64209be6dbd9c65047a4786e9a938558d30e3528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad4a3c047f67d628b607bb6cf4791005affd1d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4a3c047f67d628b607bb6cf4791005affd1d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4a3c047f67d628b607bb6cf4791005affd1d83"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d59cea8d4ecf20c1e6f04dc9631a42cfd9d52868", "filename": "gcc/gimple-ssa-warn-alloca.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d/gcc%2Fgimple-ssa-warn-alloca.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d/gcc%2Fgimple-ssa-warn-alloca.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-alloca.c?ref=fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "patch": "@@ -221,10 +221,9 @@ alloca_call_type (gimple *stmt, bool is_vla)\n       && !r.varying_p ())\n     {\n       // The invalid bits are anything outside of [0, MAX_SIZE].\n-      static int_range<2> invalid_range (build_int_cst (size_type_node, 0),\n-\t\t\t\t\t build_int_cst (size_type_node,\n-\t\t\t\t\t\t\tmax_size),\n-\t\t\t\t\t VR_ANTI_RANGE);\n+      int_range<2> invalid_range (build_int_cst (size_type_node, 0),\n+\t\t\t\t  build_int_cst (size_type_node, max_size),\n+\t\t\t\t  VR_ANTI_RANGE);\n \n       r.intersect (invalid_range);\n       if (r.undefined_p ())"}, {"sha": "b6992d08bf36dec497fd759b14db72c19496c4cf", "filename": "gcc/testsuite/g++.dg/Walloca2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWalloca2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWalloca2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FWalloca2.C?ref=fa3ccf8bfe9940b439d6cc2c38ee8da134b0ff2d", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile }\n+// { dg-options \"-Walloca-larger-than=4207115063 -Wvla-larger-than=1233877270 -O2 --param ggc-min-heapsize=0 --param ggc-min-expand=0 -w\" }\n+// { dg-require-effective-target alloca }\n+\n+int a;\n+char *b = static_cast<char *>(__builtin_alloca (a));"}]}