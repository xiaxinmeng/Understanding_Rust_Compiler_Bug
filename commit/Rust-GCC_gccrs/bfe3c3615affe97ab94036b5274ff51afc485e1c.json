{"sha": "bfe3c3615affe97ab94036b5274ff51afc485e1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZlM2MzNjE1YWZmZTk3YWI5NDAzNmI1Mjc0ZmY1MWFmYzQ4NWUxYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-12T11:56:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-12T11:56:41Z"}, "message": "(final_scan_insn): Call walk_alter_subreg for operands that are PLUS\nor MULT, before constrain_operands.\n\nFrom-SVN: r5743", "tree": {"sha": "431a81cd45587599d76487faaf307910cd33b632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431a81cd45587599d76487faaf307910cd33b632"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfe3c3615affe97ab94036b5274ff51afc485e1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe3c3615affe97ab94036b5274ff51afc485e1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe3c3615affe97ab94036b5274ff51afc485e1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe3c3615affe97ab94036b5274ff51afc485e1c/comments", "author": null, "committer": null, "parents": [{"sha": "775ba35df7e1460d3b2058699a888940ead2cbed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775ba35df7e1460d3b2058699a888940ead2cbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775ba35df7e1460d3b2058699a888940ead2cbed"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "82077cc961f934455c0d7d8027addce447388871", "filename": "gcc/final.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe3c3615affe97ab94036b5274ff51afc485e1c/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe3c3615affe97ab94036b5274ff51afc485e1c/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=bfe3c3615affe97ab94036b5274ff51afc485e1c", "patch": "@@ -105,6 +105,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n rtx peephole ();\n void output_asm_insn ();\n rtx alter_subreg ();\n+static rtx walk_alter_subreg ();\n static int alter_cond ();\n void output_asm_label ();\n static void output_operand ();\n@@ -1895,12 +1896,18 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  {\n \t    if (GET_CODE (recog_operand[i]) == SUBREG)\n \t      recog_operand[i] = alter_subreg (recog_operand[i]);\n+\t    else if (GET_CODE (recog_operand[i]) == PLUS\n+\t\t     || GET_CODE (recog_operand[i]) == MULT)\n+\t      recog_operand[i] = walk_alter_subreg (recog_operand[i]);\n \t  }\n \n \tfor (i = 0; i < insn_n_dups[insn_code_number]; i++)\n \t  {\n \t    if (GET_CODE (*recog_dup_loc[i]) == SUBREG)\n \t      *recog_dup_loc[i] = alter_subreg (*recog_dup_loc[i]);\n+\t    else if (GET_CODE (*recog_dup_loc[i]) == PLUS\n+\t\t     || GET_CODE (*recog_dup_loc[i]) == MULT)\n+\t      *recog_dup_loc[i] = walk_alter_subreg (*recog_dup_loc[i]);\n \t  }\n \n #ifdef REGISTER_CONSTRAINTS"}]}