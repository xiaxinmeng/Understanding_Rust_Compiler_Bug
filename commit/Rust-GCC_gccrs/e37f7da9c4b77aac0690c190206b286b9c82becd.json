{"sha": "e37f7da9c4b77aac0690c190206b286b9c82becd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3ZjdkYTljNGI3N2FhYzA2OTBjMTkwMjA2YjI4NmI5YzgyYmVjZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-08-29T06:47:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-08-29T06:47:14Z"}, "message": "re PR tree-optimization/87126 (ICE on valid code at -Os and above on x86_64-linux-gnu: in vn_reference_insert, at tree-ssa-sccvn.c:2698)\n\n2018-08-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87126\n\t* tree-ssa-sccvn.c (vn_reference_insert): Remove assert.\n\n\t* gcc.dg/tree-ssa/pr87126.c: New testcase.\n\nFrom-SVN: r263944", "tree": {"sha": "208e7818f50e91587a3afe639d1449e2bde8a351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/208e7818f50e91587a3afe639d1449e2bde8a351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e37f7da9c4b77aac0690c190206b286b9c82becd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37f7da9c4b77aac0690c190206b286b9c82becd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e37f7da9c4b77aac0690c190206b286b9c82becd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37f7da9c4b77aac0690c190206b286b9c82becd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efc601240c12628df7ec467ac07a322306f80b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc601240c12628df7ec467ac07a322306f80b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc601240c12628df7ec467ac07a322306f80b71"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "03a98c90ab28b21d33d63459eda3842e79a0b831", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e37f7da9c4b77aac0690c190206b286b9c82becd", "patch": "@@ -1,3 +1,8 @@\n+2018-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87126\n+\t* tree-ssa-sccvn.c (vn_reference_insert): Remove assert.\n+\n 2018-08-28  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/pic.md: Rewrite."}, {"sha": "e6a9c8610cd282900d9cf009b17fb09eeb80dac1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e37f7da9c4b77aac0690c190206b286b9c82becd", "patch": "@@ -1,3 +1,8 @@\n+2018-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87126\n+\t* gcc.dg/tree-ssa/pr87126.c: New testcase.\n+\n 2018-08-28 MCC CS <deswurstes@users.noreply.github.com>\n \n \tPR tree-optimization/87009"}, {"sha": "37232ba3a0a8e850656aa7b2e092e733291e2a30", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr87126.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr87126.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr87126.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr87126.c?ref=e37f7da9c4b77aac0690c190206b286b9c82becd", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-fre1\" } */\n+\n+int a, *b;\n+\n+void f ()\n+{ \n+  int d = 0, e = d;\n+  while (a++)\n+    ;\n+  if (e)\n+    goto L2;\n+L1:\n+  d = e;\n+  b = &d;\n+L2:\n+  if (d)\n+    goto L1;\n+}\n+\n+/* The load of d could be eliminated if we'd value-number the\n+   irreducible region in RPO of the reducible result.  Likewise\n+   a redundant store could be removed.  */\n+/* { dg-final { scan-tree-dump-times \"d = 0;\" 1 \"fre1\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-not \" = d;\" \"fre1\" { xfail *-*-* } } } */"}, {"sha": "aaac430bb46e1dda432f5f7ad5aac70cd4344857", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37f7da9c4b77aac0690c190206b286b9c82becd/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=e37f7da9c4b77aac0690c190206b286b9c82becd", "patch": "@@ -2696,7 +2696,17 @@ vn_reference_insert (tree op, tree result, tree vuse, tree vdef)\n      but save a lookup if we deal with already inserted refs here.  */\n   if (*slot)\n     {\n-      gcc_assert (operand_equal_p ((*slot)->result, vr1->result, 0));\n+      /* We cannot assert that we have the same value either because\n+         when disentangling an irreducible region we may end up visiting\n+\t a use before the corresponding def.  That's a missed optimization\n+\t only though.  See gcc.dg/tree-ssa/pr87126.c for example.  */\n+      if (dump_file && (dump_flags & TDF_DETAILS)\n+\t  && !operand_equal_p ((*slot)->result, vr1->result, 0))\n+\t{\n+\t  fprintf (dump_file, \"Keeping old value \");\n+\t  print_generic_expr (dump_file, (*slot)->result);\n+\t  fprintf (dump_file, \" because of collision\\n\");\n+\t}\n       free_reference (vr1);\n       obstack_free (&vn_tables_obstack, vr1);\n       return;"}]}