{"sha": "552ed3ea761324bdd42c1a40d4bbef91432da29a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyZWQzZWE3NjEzMjRiZGQ0MmMxYTQwZDRiYmVmOTE0MzJkYTI5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-22T07:32:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-22T07:32:08Z"}, "message": "x86: Allow configuring with --with-arch_64=x86-64-v[234]\n\n> +  {\"x86-64\", PROCESSOR_K8, CPU_K8, PTA_X86_64_BASELINE, 0, P_NONE},\n> +  {\"x86-64-v2\", PROCESSOR_K8, CPU_GENERIC, PTA_X86_64_V2 | PTA_NO_TUNE,\n> +   0, P_NONE},\n> +  {\"x86-64-v3\", PROCESSOR_K8, CPU_GENERIC, PTA_X86_64_V3 | PTA_NO_TUNE,\n> +   0, P_NONE},\n> +  {\"x86-64-v4\", PROCESSOR_K8, CPU_GENERIC, PTA_X86_64_V4 | PTA_NO_TUNE,\n> +   0, P_NONE},\n>    {\"eden-x2\", PROCESSOR_K8, CPU_K8,\n>      PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_FXSR,\n>      0, P_NONE},\n\nI have noticed that one can't configure gcc to default to these.\n\nI've also found various other 32-bit or 64-bit -march= arguments for which\nit wasn't possible to configure gcc to default to those.\n\nThe x86-64-v* the patch only allows in --with-arch_64=, because otherwise\nit fails build miserably - as\n./xgcc -B ./ -S -march=x86-64-v2 -m32 test.c\ncc1: error: \u2018x86-64-v2\u2019 architecture level is only defined for the x86-64 psABI\nwhen building 32-bit multilibs.  Even if multilibs are disallowed, I think\nthe compiler still supports -m32 and so --with-arch_64= seems to be the only\noption in which we can support that.\n\n2020-10-22  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config.gcc (x86_archs): Add samuel-2, nehemiah, c7 and esther.\n\t(x86_64_archs): Add eden-x2, nano, nano-1000, nano-2000, nano-3000,\n\tnano-x2, eden-x4, nano-x4, x86-64-v2, x86-64-v3 and x86-64-v4.\n\t(i[34567]86-*-* | x86_64-*-*): Only allow x86-64-v* as argument\n\tto --with-arch_64=.", "tree": {"sha": "356d49875c60fdf4a6162d174b206ffd71e5df4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356d49875c60fdf4a6162d174b206ffd71e5df4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/552ed3ea761324bdd42c1a40d4bbef91432da29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552ed3ea761324bdd42c1a40d4bbef91432da29a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/552ed3ea761324bdd42c1a40d4bbef91432da29a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552ed3ea761324bdd42c1a40d4bbef91432da29a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74c9882b80bda50b37c9555498de7123c6bdb9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c9882b80bda50b37c9555498de7123c6bdb9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c9882b80bda50b37c9555498de7123c6bdb9e4"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "411200dff916acb3cb15088eb215d0f406b61e43", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552ed3ea761324bdd42c1a40d4bbef91432da29a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552ed3ea761324bdd42c1a40d4bbef91432da29a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=552ed3ea761324bdd42c1a40d4bbef91432da29a", "patch": "@@ -662,7 +662,8 @@ tm_defines=\"$tm_defines LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3 LIBC_MUSL=4\"\n x86_archs=\"athlon athlon-4 athlon-fx athlon-mp athlon-tbird \\\n athlon-xp k6 k6-2 k6-3 geode c3 c3-2 winchip-c6 winchip2 i386 i486 \\\n i586 i686 pentium pentium-m pentium-mmx pentium2 pentium3 pentium3m \\\n-pentium4 pentium4m pentiumpro prescott lakemont\"\n+pentium4 pentium4m pentiumpro prescott lakemont samuel-2 nehemiah \\\n+c7 esther\"\n \n # 64-bit x86 processors supported by --with-arch=.  Each processor\n # MUST be separated by exactly one space.\n@@ -672,7 +673,8 @@ opteron-sse3 nocona core2 corei7 corei7-avx core-avx-i core-avx2 atom \\\n slm nehalem westmere sandybridge ivybridge haswell broadwell bonnell \\\n silvermont knl knm skylake-avx512 cannonlake icelake-client icelake-server \\\n skylake goldmont goldmont-plus tremont cascadelake tigerlake cooperlake \\\n-sapphirerapids alderlake x86-64 native\"\n+sapphirerapids alderlake eden-x2 nano nano-1000 nano-2000 nano-3000 \\\n+nano-x2 eden-x4 nano-x4 x86-64 x86-64-v2 x86-64-v3 x86-64-v4 native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space.\n@@ -4479,6 +4481,17 @@ case \"${target}\" in\n \t\t\t\tif test x${val} != x; then\n \t\t\t\t\tcase \" $x86_64_archs \" in\n \t\t\t\t\t*\" ${val} \"*)\n+\t\t\t\t\t\t# Disallow x86-64-v* for --with-cpu=/--with-tune=\n+\t\t\t\t\t\t# or --with-arch= or --with-arch_32=\n+\t\t\t\t\t\t# It can be only specified in --with-arch_64=\n+\t\t\t\t\t\tcase \"x$which$val\" in\n+\t\t\t\t\t\txcpu*x86-64-v*|xtune*x86-64-v*|xarchx86-64-v*|xarch_32x86-64-v*)\n+\t\t\t\t\t\t\techo \"Unknown CPU given in --with-$which=$val.\" 1>&2\n+\t\t\t\t\t\t\texit 1\n+\t\t\t\t\t\t\t;;\n+\t\t\t\t\t\t*)\n+\t\t\t\t\t\t\t;;\n+\t\t\t\t\t\tesac\n \t\t\t\t\t\t# OK\n \t\t\t\t\t\t;;\n \t\t\t\t\t*)"}]}