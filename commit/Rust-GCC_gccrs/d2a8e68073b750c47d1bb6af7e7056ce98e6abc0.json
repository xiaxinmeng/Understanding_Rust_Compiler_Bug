{"sha": "d2a8e68073b750c47d1bb6af7e7056ce98e6abc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhOGU2ODA3M2I3NTBjNDdkMWJiNmFmN2U3MDU2Y2U5OGU2YWJjMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T03:43:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T03:43:59Z"}, "message": "(FUNCTION_PROFILER):  Use ASM_OUTPUT_INTERNAL_LABELREF.\n\n(FUNCTION_BLOCK_PROFILER):  Mark with FIXME that it needs work.\n(ASM_OUTPUT_INTERNAL_LABELREF):  Define.\n\n(CONSTANT_ALIGNMENT): Add parens for Sun compiler.\n\nFrom-SVN: r1641", "tree": {"sha": "cd1b47c7ba170f356c76f572444b11c1556de39a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd1b47c7ba170f356c76f572444b11c1556de39a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0/comments", "author": null, "committer": null, "parents": [{"sha": "a124fd5ebc449059b6e7db2fef1267f1b050b0c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a124fd5ebc449059b6e7db2fef1267f1b050b0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a124fd5ebc449059b6e7db2fef1267f1b050b0c2"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "d6d43ef7e99d109d0aabfd5f9f35bfe889985432", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a8e68073b750c47d1bb6af7e7056ce98e6abc0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=d2a8e68073b750c47d1bb6af7e7056ce98e6abc0", "patch": "@@ -194,8 +194,9 @@ extern int target_flags;\n \n /* Make strings word-aligned so strcpy from constants will be faster.  */\n #define CONSTANT_ALIGNMENT(EXP, ALIGN)  \\\n-  (TREE_CODE (EXP) == STRING_CST\t\\\n-   && (ALIGN) < FASTEST_ALIGNMENT ? FASTEST_ALIGNMENT : (ALIGN))\n+  ((TREE_CODE (EXP) == STRING_CST\t\\\n+    && (ALIGN) < FASTEST_ALIGNMENT)\t\\\n+   ? FASTEST_ALIGNMENT : (ALIGN))\n \n /* Make arrays of chars word-aligned for the same reasons.  */\n #define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\\n@@ -845,12 +846,19 @@ extern int apparent_fsize;\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.  */\n \n-#define FUNCTION_PROFILER(FILE, LABELNO)  \\\n-  fprintf (FILE, \"\\tsethi %%hi(LP%d),%%o0\\n\\tcall mcount\\n\\tor %%lo(LP%d),%%o0,%%o0\\n\", \\\n-\t   (LABELNO), (LABELNO))\n+#define FUNCTION_PROFILER(FILE, LABELNO)  \t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    fputs (\"\\tsethi %hi(\", (FILE));\t\t\t\t\\\n+    ASM_OUTPUT_INTERNAL_LABELREF (FILE, \"LP\", LABELNO);\t\t\\\n+    fputs (\"),%o0\\n\\tcall mcount\\n\\tor %lo(\", (FILE));\t\t\\\n+    ASM_OUTPUT_INTERNAL_LABELREF (FILE, \"LP\", LABELNO);\t\t\\\n+    fputs (\"),%o0,%o0\\n\", (FILE));\t\t\t\t\\\n+  } while (0)\n \n /* Output assembler code to FILE to initialize this source file's\n    basic block profiling info, if that has not already been done.  */\n+/* FIXME -- this does not parameterize how it generates labels (like the\n+   above FUNCTION_PROFILER).  Broken on Solaris-2.   --gnu@cygnus.com */\n \n #define FUNCTION_BLOCK_PROFILER(FILE, LABELNO)  \\\n   fprintf (FILE, \"\\tsethi %%hi(LPBX0),%%o0\\n\\tld [%%lo(LPBX0)+%%o0],%%o1\\n\\ttst %%o1\\n\\tbne LPY%d\\n\\tadd %%o0,%%lo(LPBX0),%%o0\\n\\tcall ___bb_init_func\\n\\tnop\\nLPY%d:\\n\",  \\\n@@ -1483,12 +1491,21 @@ extern struct rtx_def *legitimize_pic_address ();\n #define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n   fprintf (FILE, \"_%s\", NAME)\n \n-/* This is how to output an internal numbered label where\n+/* This is how to output a definition of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n   fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n \n+/* This is how to output a reference to an internal numbered label where\n+   PREFIX is the class of label and NUM is the number within the class.  */\n+/* FIXME:  This should be used throughout gcc, and documented in the texinfo\n+   files.  There is no reason you should have to allocate a buffer and\n+   `sprintf' to reference an internal label (as opposed to defining it).  */\n+\n+#define ASM_OUTPUT_INTERNAL_LABELREF(FILE,PREFIX,NUM)\t\\\n+  fprintf (FILE, \"%s%d\", PREFIX, NUM)\n+\n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class."}]}