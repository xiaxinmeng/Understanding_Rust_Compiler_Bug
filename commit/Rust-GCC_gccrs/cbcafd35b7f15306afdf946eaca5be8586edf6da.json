{"sha": "cbcafd35b7f15306afdf946eaca5be8586edf6da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjYWZkMzViN2YxNTMwNmFmZGY5NDZlYWNhNWJlODU4NmVkZjZkYQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2003-04-14T21:09:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-14T21:09:44Z"}, "message": "* fold-const.c (fold): Reorder tests for conditional expressions.\n\nFrom-SVN: r65590", "tree": {"sha": "7bade654632c5b8dc4f5976a80f8e8fdb8403de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bade654632c5b8dc4f5976a80f8e8fdb8403de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbcafd35b7f15306afdf946eaca5be8586edf6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbcafd35b7f15306afdf946eaca5be8586edf6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbcafd35b7f15306afdf946eaca5be8586edf6da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbcafd35b7f15306afdf946eaca5be8586edf6da/comments", "author": null, "committer": null, "parents": [{"sha": "9ceca3020a62d208756ff281a189ce9f955fbc80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ceca3020a62d208756ff281a189ce9f955fbc80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ceca3020a62d208756ff281a189ce9f955fbc80"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "d5b5ca7a664a675ac3c6935251853acdc269b456", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbcafd35b7f15306afdf946eaca5be8586edf6da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbcafd35b7f15306afdf946eaca5be8586edf6da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbcafd35b7f15306afdf946eaca5be8586edf6da", "patch": "@@ -1,5 +1,7 @@\n 2003-04-14  Olivier Hainque <hainque@act-europe.fr>\n \n+        * fold-const.c (fold): Reorder tests for conditional expressions.\n+\n         * expr.c (highest_pow2_factor): Return unsigned.\n         * expr.h (offset_address): Likewise.\n         * emit-rtl.c (offset_address): POW2 argument now unsigned."}, {"sha": "065a4fc527d32b5276558e1af480dd5ec768c89d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbcafd35b7f15306afdf946eaca5be8586edf6da/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbcafd35b7f15306afdf946eaca5be8586edf6da/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=cbcafd35b7f15306afdf946eaca5be8586edf6da", "patch": "@@ -5063,6 +5063,14 @@ fold (expr)\n \t\t\t    fold (build1 (code, type, integer_one_node)),\n \t\t\t    fold (build1 (code, type, integer_zero_node))));\n    }\n+  else if (TREE_CODE_CLASS (code) == '<'\n+\t   && TREE_CODE (arg0) == COMPOUND_EXPR)\n+    return build (COMPOUND_EXPR, type, TREE_OPERAND (arg0, 0),\n+\t\t  fold (build (code, type, TREE_OPERAND (arg0, 1), arg1)));\n+  else if (TREE_CODE_CLASS (code) == '<'\n+\t   && TREE_CODE (arg1) == COMPOUND_EXPR)\n+    return build (COMPOUND_EXPR, type, TREE_OPERAND (arg1, 0),\n+\t\t  fold (build (code, type, arg0, TREE_OPERAND (arg1, 1))));\n   else if (TREE_CODE_CLASS (code) == '2'\n \t   || TREE_CODE_CLASS (code) == '<')\n     {\n@@ -5098,14 +5106,6 @@ fold (expr)\n \t  fold_binary_op_with_conditional_arg (code, type, arg0, arg1,\n \t\t\t\t\t       /*cond_first_p=*/1);\n     }\n-  else if (TREE_CODE_CLASS (code) == '<'\n-\t   && TREE_CODE (arg0) == COMPOUND_EXPR)\n-    return build (COMPOUND_EXPR, type, TREE_OPERAND (arg0, 0),\n-\t\t  fold (build (code, type, TREE_OPERAND (arg0, 1), arg1)));\n-  else if (TREE_CODE_CLASS (code) == '<'\n-\t   && TREE_CODE (arg1) == COMPOUND_EXPR)\n-    return build (COMPOUND_EXPR, type, TREE_OPERAND (arg1, 0),\n-\t\t  fold (build (code, type, arg0, TREE_OPERAND (arg1, 1))));\n \n   switch (code)\n     {"}]}