{"sha": "43c2505b31adfdef2214318484aaae987fd9e1e0", "node_id": "C_kwDOANBUbNoAKDQzYzI1MDViMzFhZGZkZWYyMjE0MzE4NDg0YWFhZTk4N2ZkOWUxZTA", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-07-18T06:41:36Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-07-18T06:41:36Z"}, "message": "Fix issue with x86_64_const_vector_operand predicate on x86.\n\nThis patch fixes (what I believe is) a latent bug in i386.md's\nx86_64_const_vector_operand define_predicate.  According to the\ndocumentation, when a predicate is called with rtx operand OP and\nmachine_mode operand MODE, we can't shouldn't assume that the\nMODE is (or has been checked to be) GET_MODE (OP).\n\nThe failure mode is that recog can call x86_64_const_vector_operand\non an arbitrary CONST_VECTOR passing a MODE of V2QI_mode, but when\nthe CONST_VECTOR is in fact V1TImode, it's unsafe to directly call\nix86_convert_const_vector_to_integer, which assumes that the CONST_VECTOR\ncontains CONST_INTs when it actually contains CONST_WIDE_INTs.  The\nchecks in this define_predicate need to be testing OP's mode, and\nideally confirming that this matches the passed in/specified MODE.\n\nThis bug is currently latent, but adding an innocent/unrelated\ndefine_insn, such as \"(set (reg:CCC FLAGS_REG) (const_int 0))\" to\ni386.md can occasionally change the order in which genrecog generates\nits tests, then ICEing during bootstrap due to V1TI CONST_VECTORs.\n\n2022-07-18  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* config/i386/predicates.md (x86_64_const_vector_operand):\n\tCheck the operand's mode matches the specified mode argument.", "tree": {"sha": "7b5758f095566ed9b6b767f05068688d2231e65f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5758f095566ed9b6b767f05068688d2231e65f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c2505b31adfdef2214318484aaae987fd9e1e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c2505b31adfdef2214318484aaae987fd9e1e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c2505b31adfdef2214318484aaae987fd9e1e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c2505b31adfdef2214318484aaae987fd9e1e0/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9da2663f500f473f6ae309e3349a65e6f02001b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9da2663f500f473f6ae309e3349a65e6f02001b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9da2663f500f473f6ae309e3349a65e6f02001b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "42053ea7209f66e1ba6cd23ac618fae61fde3663", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c2505b31adfdef2214318484aaae987fd9e1e0/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c2505b31adfdef2214318484aaae987fd9e1e0/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=43c2505b31adfdef2214318484aaae987fd9e1e0", "patch": "@@ -1199,6 +1199,10 @@\n (define_predicate \"x86_64_const_vector_operand\"\n   (match_code \"const_vector\")\n {\n+  if (mode == VOIDmode)\n+    mode = GET_MODE (op);\n+  else if (GET_MODE (op) != mode)\n+    return false;\n   if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n     return false;\n   HOST_WIDE_INT val = ix86_convert_const_vector_to_integer (op, mode);"}]}