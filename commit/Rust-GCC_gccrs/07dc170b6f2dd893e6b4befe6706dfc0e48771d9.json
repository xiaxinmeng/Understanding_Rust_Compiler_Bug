{"sha": "07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkYzE3MGI2ZjJkZDg5M2U2YjRiZWZlNjcwNmRmYzBlNDg3NzFkOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-09-23T11:26:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-09-23T11:26:50Z"}, "message": "Limit number of symlinks that canonical() will resolve\n\n\t* src/filesystem/ops.cc (canonical): Simplify error handling and\n\tlimit number of symlinks that can be resolved.\n\nFrom-SVN: r228043", "tree": {"sha": "49b6053f8e3db3ee5082b14731c5bf3a759db7bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49b6053f8e3db3ee5082b14731c5bf3a759db7bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07dc170b6f2dd893e6b4befe6706dfc0e48771d9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "429ee11aa39ba700510d789b446d74b65e202754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ee11aa39ba700510d789b446d74b65e202754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429ee11aa39ba700510d789b446d74b65e202754"}], "stats": {"total": 65, "additions": 32, "deletions": 33}, "files": [{"sha": "17d82e3de71ab4014c2838d008d66ef6231780a3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07dc170b6f2dd893e6b4befe6706dfc0e48771d9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07dc170b6f2dd893e6b4befe6706dfc0e48771d9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "patch": "@@ -1,3 +1,8 @@\n+2015-09-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/filesystem/ops.cc (canonical): Simplify error handling and\n+\tlimit number of symlinks that can be resolved.\n+\n 2015-09-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Remove _GLIBCXX_"}, {"sha": "7b261fb93aae09d237584a0e62b1f63ff71ff6ca", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 27, "deletions": 33, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07dc170b6f2dd893e6b4befe6706dfc0e48771d9/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07dc170b6f2dd893e6b4befe6706dfc0e48771d9/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=07dc170b6f2dd893e6b4befe6706dfc0e48771d9", "patch": "@@ -116,6 +116,7 @@ fs::canonical(const path& p, const path& base, error_code& ec)\n {\n   const path pa = absolute(p, base);\n   path result;\n+\n #ifdef _GLIBCXX_USE_REALPATH\n   char_ptr buf{ nullptr };\n # if _XOPEN_VERSION < 700\n@@ -137,39 +138,29 @@ fs::canonical(const path& p, const path& base, error_code& ec)\n     }\n #endif\n \n-  auto fail = [&ec, &result](int e) mutable {\n-      if (!ec.value())\n-\tec.assign(e, std::generic_category());\n-      result.clear();\n-  };\n-\n   if (!exists(pa, ec))\n-    {\n-      fail(ENOENT);\n-      return result;\n-    }\n-  // else we can assume no unresolvable symlink loops\n+    return result;\n+  // else: we know there are (currently) no unresolvable symlink loops\n \n   result = pa.root_path();\n \n   deque<path> cmpts;\n   for (auto& f : pa.relative_path())\n     cmpts.push_back(f);\n \n-  while (!cmpts.empty())\n+  int max_allowed_symlinks = 40;\n+\n+  while (!cmpts.empty() && !ec)\n     {\n       path f = std::move(cmpts.front());\n       cmpts.pop_front();\n \n-      if (f.compare(\".\") == 0)\n+      if (is_dot(f))\n \t{\n-\t  if (!is_directory(result, ec))\n-\t    {\n-\t      fail(ENOTDIR);\n-\t      break;\n-\t    }\n+\t  if (!is_directory(result, ec) && !ec)\n+\t    ec.assign(ENOTDIR, std::generic_category());\n \t}\n-      else if (f.compare(\"..\") == 0)\n+      else if (is_dotdot(f))\n \t{\n \t  auto parent = result.parent_path();\n \t  if (parent.empty())\n@@ -184,27 +175,30 @@ fs::canonical(const path& p, const path& base, error_code& ec)\n \t  if (is_symlink(result, ec))\n \t    {\n \t      path link = read_symlink(result, ec);\n-\t      if (!ec.value())\n+\t      if (!ec)\n \t\t{\n-\t\t  if (link.is_absolute())\n+\t\t  if (--max_allowed_symlinks == 0)\n+\t\t    ec.assign(ELOOP, std::generic_category());\n+\t\t  else\n \t\t    {\n-\t\t      result = link.root_path();\n-\t\t      link = link.relative_path();\n+\t\t      if (link.is_absolute())\n+\t\t\t{\n+\t\t\t  result = link.root_path();\n+\t\t\t  link = link.relative_path();\n+\t\t\t}\n+\t\t      else\n+\t\t\tresult.remove_filename();\n+\n+\t\t      cmpts.insert(cmpts.begin(), link.begin(), link.end());\n \t\t    }\n-\t\t  else\n-\t\t    result.remove_filename();\n-\n-\t\t  cmpts.insert(cmpts.begin(), link.begin(), link.end());\n \t\t}\n \t    }\n-\n-\t  if (ec.value() || !exists(result, ec))\n-\t    {\n-\t      fail(ENOENT);\n-\t      break;\n-\t    }\n \t}\n     }\n+\n+  if (ec || !exists(result, ec))\n+    result.clear();\n+\n   return result;\n }\n "}]}