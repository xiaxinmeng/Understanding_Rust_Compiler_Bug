{"sha": "5179d2a2137d80c429ecd01dd0aeab415ffd299e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE3OWQyYTIxMzdkODBjNDI5ZWNkMDFkZDBhZWFiNDE1ZmZkMjk5ZQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2015-09-03T13:52:17Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2015-09-03T13:52:17Z"}, "message": "optabs.c (expand_binop): Don't create a broadcast vector with a source element wider than the inner mode.\n\n[gcc]\n\n2015-09-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* optabs.c (expand_binop): Don't create a broadcast vector with a\n\tsource element wider than the inner mode.\n\n[gcc/testsuite]\n\n2015-09-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/vec-shift.c: New test.\n\nFrom-SVN: r227444", "tree": {"sha": "0dacf1cdc1177d00d75d9e223e6b76bc69512a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dacf1cdc1177d00d75d9e223e6b76bc69512a66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5179d2a2137d80c429ecd01dd0aeab415ffd299e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5179d2a2137d80c429ecd01dd0aeab415ffd299e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5179d2a2137d80c429ecd01dd0aeab415ffd299e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5179d2a2137d80c429ecd01dd0aeab415ffd299e/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4413ddbcb262f848946b4d71bbaafe2ee02417e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4413ddbcb262f848946b4d71bbaafe2ee02417e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4413ddbcb262f848946b4d71bbaafe2ee02417e0"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "a3d521e43cb8dc5ae393335ef61c09dcf2197384", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5179d2a2137d80c429ecd01dd0aeab415ffd299e", "patch": "@@ -1,3 +1,8 @@\n+2015-09-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* optabs.c (expand_binop): Don't create a broadcast vector with a\n+\tsource element wider than the inner mode.\n+\n 2015-09-03  Richard Biener  <rguenther@suse.de>\n \n \t* varasm.c (output_constant): Use fold_convert instead of"}, {"sha": "79c6f06b9913ba1c8076e3abad02b13192eac158", "filename": "gcc/optabs.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=5179d2a2137d80c429ecd01dd0aeab415ffd299e", "patch": "@@ -1608,6 +1608,15 @@ expand_binop (machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \n       if (otheroptab && optab_handler (otheroptab, mode) != CODE_FOR_nothing)\n \t{\n+\t  /* The scalar may have been extended to be too wide.  Truncate\n+\t     it back to the proper size to fit in the broadcast vector.  */\n+\t  machine_mode inner_mode = GET_MODE_INNER (mode);\n+\t  if (!CONST_INT_P (op1)\n+\t      && (GET_MODE_BITSIZE (inner_mode)\n+\t\t  < GET_MODE_BITSIZE (GET_MODE (op1))))\n+\t    op1 = force_reg (inner_mode,\n+\t\t\t     simplify_gen_unary (TRUNCATE, inner_mode, op1,\n+\t\t\t\t\t\t GET_MODE (op1)));\n \t  rtx vop1 = expand_vector_broadcast (mode, op1);\n \t  if (vop1)\n \t    {"}, {"sha": "4ca1b6a6e5aebf4ce465b319ac4071f1ffaedd4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5179d2a2137d80c429ecd01dd0aeab415ffd299e", "patch": "@@ -1,3 +1,7 @@\n+2015-09-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/vec-shift.c: New test.\n+\n 2015-09-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/65637"}, {"sha": "80b59a2d3e7b22fdb83aed7076331863f4a02226", "filename": "gcc/testsuite/gcc.target/powerpc/vec-shift.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-shift.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5179d2a2137d80c429ecd01dd0aeab415ffd299e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-shift.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-shift.c?ref=5179d2a2137d80c429ecd01dd0aeab415ffd299e", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-options \"-mcpu=power7 -O2\" } */\n+\n+/* This used to ICE.  During gimplification, \"i\" is widened to an unsigned\n+   int.  We used to fail at expand time as we tried to cram an SImode item\n+   into a QImode memory slot.  This has been fixed to properly truncate the\n+   shift amount when splatting it into a vector.  */\n+\n+typedef unsigned char v16ui __attribute__((vector_size(16)));\n+\n+v16ui vslb(v16ui v, unsigned char i)\n+{\n+\treturn v << i;\n+}\n+\n+/* { dg-final { scan-assembler \"vspltb\" } } */\n+/* { dg-final { scan-assembler \"vslb\" } } */"}]}