{"sha": "878e57576086622ba822d5b35513771754989967", "node_id": "C_kwDOANBUbNoAKDg3OGU1NzU3NjA4NjYyMmJhODIyZDViMzU1MTM3NzE3NTQ5ODk5Njc", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-29T23:11:40Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-30T16:46:22Z"}, "message": "RISC-V: Add vsoxei8 && vsoxei16 C++ API intrinsic testcase\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vsoxei16-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsoxei16-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsoxei16-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsoxei8-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsoxei8-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsoxei8-3.C: New test.", "tree": {"sha": "90bd8c5b3ded36c10874bc228e4c500bbad6e604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90bd8c5b3ded36c10874bc228e4c500bbad6e604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/878e57576086622ba822d5b35513771754989967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878e57576086622ba822d5b35513771754989967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/878e57576086622ba822d5b35513771754989967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878e57576086622ba822d5b35513771754989967/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afd7265818081276d7bc4c104b4e6efbc8013211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd7265818081276d7bc4c104b4e6efbc8013211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd7265818081276d7bc4c104b4e6efbc8013211"}], "stats": {"total": 4038, "additions": 4038, "deletions": 0}, "files": [{"sha": "447370787119790dc723e9d13e6672ea1d5869e4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei16-1.C", "status": "added", "additions": 660, "deletions": 0, "changes": 660, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-1.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,660 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "929f7cfd25273c61fda88b85949b2f26b0540a84", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei16-2.C", "status": "added", "additions": 660, "deletions": 0, "changes": 660, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-2.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,660 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "e80368bebc4c12523f75db683b020638c04e0d26", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei16-3.C", "status": "added", "additions": 660, "deletions": 0, "changes": 660, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei16-3.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,660 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int8_t* base,vuint16mf4_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int8_t* base,vuint16mf2_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int8_t* base,vuint16m1_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int8_t* base,vuint16m2_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int8_t* base,vuint16m4_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int8_t* base,vuint16m8_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int16_t* base,vuint16mf4_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int16_t* base,vuint16mf2_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int16_t* base,vuint16m1_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int16_t* base,vuint16m2_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int16_t* base,vuint16m4_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,int16_t* base,vuint16m8_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int32_t* base,vuint16mf4_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int32_t* base,vuint16mf2_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int32_t* base,vuint16m1_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int32_t* base,vuint16m2_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,int32_t* base,vuint16m4_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,int64_t* base,vuint16mf4_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,int64_t* base,vuint16mf2_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,int64_t* base,vuint16m1_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,int64_t* base,vuint16m2_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint8_t* base,vuint16mf4_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint8_t* base,vuint16mf2_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint8_t* base,vuint16m1_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint8_t* base,vuint16m2_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint8_t* base,vuint16m4_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint8_t* base,vuint16m8_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint16_t* base,vuint16mf4_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint16_t* base,vuint16mf2_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint16_t* base,vuint16m1_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint16_t* base,vuint16m2_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint16_t* base,vuint16m4_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool2_t mask,uint16_t* base,vuint16m8_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint32_t* base,vuint16mf4_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint32_t* base,vuint16mf2_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint32_t* base,vuint16m1_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint32_t* base,vuint16m2_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,uint32_t* base,vuint16m4_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,uint64_t* base,vuint16mf4_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,uint64_t* base,vuint16mf2_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,uint64_t* base,vuint16m1_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,uint64_t* base,vuint16m2_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,float* base,vuint16mf4_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,float* base,vuint16mf2_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,float* base,vuint16m1_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,float* base,vuint16m2_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool4_t mask,float* base,vuint16m4_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool64_t mask,double* base,vuint16mf4_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool32_t mask,double* base,vuint16mf2_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool16_t mask,double* base,vuint16m1_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei16(vbool8_t mask,double* base,vuint16m2_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei16(mask,base,bindex,value,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei16\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "8abc0abed329df514f334824b7ae264d4056f416", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei8-1.C", "status": "added", "additions": 686, "deletions": 0, "changes": 686, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-1.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,686 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "b876bdf747a3c90edb797872f5898f4823ca80cf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei8-2.C", "status": "added", "additions": 686, "deletions": 0, "changes": 686, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-2.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,686 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "65806e34664ee44bdcd1c22e4689632bf6cc7aa9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsoxei8-3.C", "status": "added", "additions": 686, "deletions": 0, "changes": 686, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/878e57576086622ba822d5b35513771754989967/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsoxei8-3.C?ref=878e57576086622ba822d5b35513771754989967", "patch": "@@ -0,0 +1,686 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int8_t* base,vuint8mf8_t bindex,vint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int8_t* base,vuint8mf4_t bindex,vint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int8_t* base,vuint8mf2_t bindex,vint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int8_t* base,vuint8m1_t bindex,vint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int8_t* base,vuint8m2_t bindex,vint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int8_t* base,vuint8m4_t bindex,vint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,int8_t* base,vuint8m8_t bindex,vint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int16_t* base,vuint8mf8_t bindex,vint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int16_t* base,vuint8mf4_t bindex,vint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int16_t* base,vuint8mf2_t bindex,vint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int16_t* base,vuint8m1_t bindex,vint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int16_t* base,vuint8m2_t bindex,vint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,int16_t* base,vuint8m4_t bindex,vint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int32_t* base,vuint8mf8_t bindex,vint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int32_t* base,vuint8mf4_t bindex,vint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int32_t* base,vuint8mf2_t bindex,vint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int32_t* base,vuint8m1_t bindex,vint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,int32_t* base,vuint8m2_t bindex,vint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,int64_t* base,vuint8mf8_t bindex,vint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,int64_t* base,vuint8mf4_t bindex,vint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,int64_t* base,vuint8mf2_t bindex,vint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,int64_t* base,vuint8m1_t bindex,vint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint8_t* base,vuint8mf8_t bindex,vuint8mf8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint8_t* base,vuint8mf4_t bindex,vuint8mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint8_t* base,vuint8mf2_t bindex,vuint8mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint8_t* base,vuint8m1_t bindex,vuint8m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint8_t* base,vuint8m2_t bindex,vuint8m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint8_t* base,vuint8m4_t bindex,vuint8m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool1_t mask,uint8_t* base,vuint8m8_t bindex,vuint8m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint16_t* base,vuint8mf8_t bindex,vuint16mf4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint16_t* base,vuint8mf4_t bindex,vuint16mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint16_t* base,vuint8mf2_t bindex,vuint16m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint16_t* base,vuint8m1_t bindex,vuint16m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint16_t* base,vuint8m2_t bindex,vuint16m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool2_t mask,uint16_t* base,vuint8m4_t bindex,vuint16m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint32_t* base,vuint8mf8_t bindex,vuint32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint32_t* base,vuint8mf4_t bindex,vuint32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint32_t* base,vuint8mf2_t bindex,vuint32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint32_t* base,vuint8m1_t bindex,vuint32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,uint32_t* base,vuint8m2_t bindex,vuint32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,uint64_t* base,vuint8mf8_t bindex,vuint64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,uint64_t* base,vuint8mf4_t bindex,vuint64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,uint64_t* base,vuint8mf2_t bindex,vuint64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,uint64_t* base,vuint8m1_t bindex,vuint64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,float* base,vuint8mf8_t bindex,vfloat32mf2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,float* base,vuint8mf4_t bindex,vfloat32m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,float* base,vuint8mf2_t bindex,vfloat32m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,float* base,vuint8m1_t bindex,vfloat32m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool4_t mask,float* base,vuint8m2_t bindex,vfloat32m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool64_t mask,double* base,vuint8mf8_t bindex,vfloat64m1_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool32_t mask,double* base,vuint8mf4_t bindex,vfloat64m2_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool16_t mask,double* base,vuint8mf2_t bindex,vfloat64m4_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+void test___riscv_vsoxei8(vbool8_t mask,double* base,vuint8m1_t bindex,vfloat64m8_t value,size_t vl)\n+{\n+    __riscv_vsoxei8(mask,base,bindex,value,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+\\s+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsoxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}]}