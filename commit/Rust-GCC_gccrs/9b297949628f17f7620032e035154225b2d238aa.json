{"sha": "9b297949628f17f7620032e035154225b2d238aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIyOTc5NDk2MjhmMTdmNzYyMDAzMmUwMzUxNTQyMjViMmQyMzhhYQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-09-21T20:39:07Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-09-21T20:39:07Z"}, "message": "re PR libstdc++/87135 ([C++17] unordered containers violate iterator validity requirements)\n\n2018-09-21  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\tPR libstdc++/87135\n\t* src/c++11/hashtable_c++0x.cc (_Prime_rehash_policy::_M_next_bkt):\n\tUse __builtin_floor to compute _M_next_resize.\n\t* testsuite/23_containers/unordered_set/hash_policy/71181.cc: Adapt.\n\t* testsuite/23_containers/unordered_set/hash_policy/prime_rehash.cc:\n\tAdapt.\n\nFrom-SVN: r264494", "tree": {"sha": "a80a9ec9f84e791aad92b4826b5357835dad7a42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a80a9ec9f84e791aad92b4826b5357835dad7a42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b297949628f17f7620032e035154225b2d238aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b297949628f17f7620032e035154225b2d238aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b297949628f17f7620032e035154225b2d238aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b297949628f17f7620032e035154225b2d238aa/comments", "author": null, "committer": null, "parents": [{"sha": "35b66f30438dfac74e4bdcfc7904e9b9cf72b823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b66f30438dfac74e4bdcfc7904e9b9cf72b823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b66f30438dfac74e4bdcfc7904e9b9cf72b823"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "e64f11c1b14428b50b15c52b8b458401b29b49f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b297949628f17f7620032e035154225b2d238aa", "patch": "@@ -1,3 +1,12 @@\n+2018-09-21  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/87135\n+\t* src/c++11/hashtable_c++0x.cc (_Prime_rehash_policy::_M_next_bkt):\n+\tUse __builtin_floor to compute _M_next_resize.\n+\t* testsuite/23_containers/unordered_set/hash_policy/71181.cc: Adapt.\n+\t* testsuite/23_containers/unordered_set/hash_policy/prime_rehash.cc:\n+\tAdapt.\n+\n 2018-09-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/26_numerics/headers/cmath/hypot-long-double.cc: Remove."}, {"sha": "b9b11ff4385ecfddc4896680d1ca6fd39bc88d6d", "filename": "libstdc++-v3/src/c++11/hashtable_c++0x.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc?ref=9b297949628f17f7620032e035154225b2d238aa", "patch": "@@ -52,7 +52,7 @@ namespace __detail\n     if (__n < sizeof(__fast_bkt))\n       {\n \t_M_next_resize =\n-\t  __builtin_ceil(__fast_bkt[__n] * (long double)_M_max_load_factor);\n+\t  __builtin_floor(__fast_bkt[__n] * (long double)_M_max_load_factor);\n \treturn __fast_bkt[__n];\n       }\n \n@@ -75,7 +75,7 @@ namespace __detail\n       _M_next_resize = std::size_t(-1);\n     else\n       _M_next_resize =\n-\t__builtin_ceil(*__next_bkt * (long double)_M_max_load_factor);\n+\t__builtin_floor(*__next_bkt * (long double)_M_max_load_factor);\n \n     return *__next_bkt;\n   }"}, {"sha": "ba783d26847c6383aaa92481b540094afda7456e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/hash_policy/71181.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2F71181.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2F71181.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2F71181.cc?ref=9b297949628f17f7620032e035154225b2d238aa", "patch": "@@ -30,7 +30,7 @@ template<typename _USet>\n     auto bkts = us.bucket_count();\n     for (int i = 0; i != threshold; ++i)\n       {\n-\tif (i == nb_reserved)\n+\tif (i >= nb_reserved)\n \t  {\n \t    nb_reserved = bkts;\n \t    us.reserve(nb_reserved);"}, {"sha": "916c5ad702c0a03b0f4035128ed7b648780fc2e5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/hash_policy/prime_rehash.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fprime_rehash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b297949628f17f7620032e035154225b2d238aa/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fprime_rehash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fprime_rehash.cc?ref=9b297949628f17f7620032e035154225b2d238aa", "patch": "@@ -26,20 +26,22 @@ void test01()\n {\n   std::__detail::_Prime_rehash_policy policy;\n \n-  for (std::size_t i = 1;;)\n+  // Starts at 4 because 2 & 3 are two consecutives primes that make this test\n+  // fail.\n+  for (std::size_t i = 4;;)\n     {\n       auto nxt = policy._M_next_bkt(i);\n \n-      if (nxt == i)\n+      if (nxt <= i)\n \t{\n-\t  // Equals only when reaching max.\n-\t  constexpr auto mx = std::numeric_limits<std::size_t>::max() - 1;\n+\t  // Lower or equals only when reaching max prime.\n+\t  constexpr auto mx = std::numeric_limits<std::size_t>::max();\n \t  VERIFY( nxt == policy._M_next_bkt(mx) );\n \t  break;\n \t}\n \n       VERIFY( nxt > i );\n-      i = nxt;\n+      i = nxt + 1;\n     }\n }\n "}]}