{"sha": "7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAwMWVlMmQ0MmE2YTVlOTJjYjdjNDBmOTY2MTZkY2RmMWViYzNkZA==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-06-05T15:16:18Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-06-05T15:16:18Z"}, "message": "Dave Love's Intel-related doc fixes\n\nFrom-SVN: r27375", "tree": {"sha": "4d2494cd453aa9348a8eeb835b7c452f34d6acec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2494cd453aa9348a8eeb835b7c452f34d6acec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/comments", "author": null, "committer": null, "parents": [{"sha": "db1421c77b17dd625985528c61963b0abb64ccfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1421c77b17dd625985528c61963b0abb64ccfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db1421c77b17dd625985528c61963b0abb64ccfa"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "1b8a40dcae3bac0dac79d8c4b1bb76231349056b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "patch": "@@ -1,3 +1,8 @@\n+Sat Jun  5 17:04:16 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tFrom Dave Love to egcs-patches on 20 May 1999 17:38:38 +0100:\n+\t* invoke.texi: Clarify text vis-a-vis Intel CPUs.\n+\n Sat Jun  5 12:11:24 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* mips.h (mips_output_conditional_branch): New function."}, {"sha": "d8f51ab429a897d2f056d001e33f736cebe56b8a", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "patch": "@@ -1,3 +1,8 @@\n+Sat Jun  5 17:03:23 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tFrom Dave Love to egcs-patches on 20 May 1999 17:38:38 +0100:\n+\t* g77.texi: Clean up fossil text vis-a-vis Intel CPUs.\n+\n Fri Jun  4 13:56:56 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* Make-lang.in: Use libsubdir, not prefix, to store"}, {"sha": "cd945e9be1aa5a640ff39b8428dde185752fc35d", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "patch": "@@ -10774,30 +10774,25 @@ compiler, typically @code{gcc}.)\n \n @node Use Submodel Options\n @subsection Use Submodel Options\n-@cindex Pentium optimizations\n-@cindex optimization, for Pentium\n-@cindex 586/686 CPUs\n @cindex submodels\n \n Using an appropriate @samp{-m} option to generate specific code for your\n CPU may be worthwhile, though it may mean the executable won't run on\n other versions of the CPU that don't support the same instruction set.\n @xref{Submodel Options,,Hardware Models and Configurations,gcc,Using and\n-Porting GNU CC}.\n-\n-For recent CPUs that don't have explicit support in\n-the released version of @code{gcc}, it may still be possible to get\n-improvements.\n-For instance, the flags recommended for 586/686\n-(Pentium(Pro)) chips for building the Linux kernel are:\n-\n-@smallexample\n--m486 -malign-loops=2 -malign-jumps=2 -malign-functions=2\n--fomit-frame-pointer\n-@end smallexample\n-\n-@noindent @samp{-fomit-frame-pointer} will, however, inhibit debugging\n-on x86 systems.\n+Porting GNU CC}.  For instance on an x86 system the compiler might have\n+been built---as shown by @samp{g77 -v}---for the target\n+@samp{i386-pc-linux-gnu}, i.e.@: an @samp{i386} CPU@.  In that case to\n+generate code best optimized for a Pentium you could use the option\n+@samp{-march=pentium}.\n+\n+For recent CPUs that don't have explicit support in the released version\n+of @code{gcc}, it @emph{might} still be possible to get improvements\n+with certain @samp{-m} options.\n+\n+@samp{-fomit-frame-pointer} can help performance on x86 systems and\n+others.  It will, however, inhibit debugging on the systems on which it\n+is not turned on anyway by @samp{-O}.\n \n @node Trouble\n @chapter Known Causes of Trouble with GNU Fortran"}, {"sha": "ad10f40072dc9022f50265e9cfea014fe504b154", "filename": "gcc/invoke.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=7001ee2d42a6a5e92cb7c40f96616dcdf1ebc3dd", "patch": "@@ -5044,7 +5044,9 @@ instructions.  The choices for @var{cpu type} are:\n While picking a specific @var{cpu type} will schedule things appropriately\n for that particular chip, the compiler will not generate any code that\n does not run on the i386 without the @samp{-march=@var{cpu type}} option\n-being used.\n+being used.  @samp{i586} is equivalent to @samp{pentium} and @samp{i686}\n+is equivalent to @samp{pentiumpro}.  @samp{k6} is the AMD chip as\n+opposed to the Intel ones.\n \n @item -march=@var{cpu type}\n Generate instructions for the machine type @var{cpu type}.  The choices\n@@ -5056,7 +5058,7 @@ specifying @samp{-march=@var{cpu type}} implies @samp{-mcpu=@var{cpu type}}.\n @itemx -mpentium\n @itemx -mpentiumpro\n Synonyms for -mcpu=i386, -mcpu=i486, -mcpu=pentium, and -mcpu=pentiumpro\n-respectively.  These synonyms are depricated.\n+respectively.  These synonyms are deprecated.\n \n @item -mieee-fp\n @itemx -mno-ieee-fp"}]}