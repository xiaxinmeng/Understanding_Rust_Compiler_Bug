{"sha": "5d638f70878028cfd016572abac20b7de37a745a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2MzhmNzA4NzgwMjhjZmQwMTY1NzJhYmFjMjBiN2RlMzdhNzQ1YQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-05-01T01:21:45Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-05-01T01:21:45Z"}, "message": "tree-inline.c (inlinable_function_p): Back out last change, it's unnecessary.\n\n\t* tree-inline.c (inlinable_function_p): Back out last change, it's\n\tunnecessary.\n\nFrom-SVN: r66315", "tree": {"sha": "b5fb51c277472997c25bb79ef7511f9650adccab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5fb51c277472997c25bb79ef7511f9650adccab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d638f70878028cfd016572abac20b7de37a745a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d638f70878028cfd016572abac20b7de37a745a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d638f70878028cfd016572abac20b7de37a745a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d638f70878028cfd016572abac20b7de37a745a/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee704412abeea8cc349e99115bf3331adbad6d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee704412abeea8cc349e99115bf3331adbad6d27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee704412abeea8cc349e99115bf3331adbad6d27"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "5868c24c15fa5cccaa30a3d28dc71091268b14c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d638f70878028cfd016572abac20b7de37a745a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d638f70878028cfd016572abac20b7de37a745a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d638f70878028cfd016572abac20b7de37a745a", "patch": "@@ -1,3 +1,8 @@\n+2003-04-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* tree-inline.c (inlinable_function_p): Back out last change, it's\n+\tunnecessary.\n+\n 2003-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* ggc-page.c (TREE_EXP_SIZE): Define."}, {"sha": "3a8adc51e2ee8a0aa0a33603ceb1f0280ed6f17e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d638f70878028cfd016572abac20b7de37a745a/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d638f70878028cfd016572abac20b7de37a745a/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=5d638f70878028cfd016572abac20b7de37a745a", "patch": "@@ -1008,13 +1008,6 @@ inlinable_function_p (fn, id, nolimit)\n   else if (lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (fn)) == NULL\n \t   && find_alloca_call (DECL_SAVED_TREE (fn)))\n     ;\n-  /* Can't inline functions which use varargs.  It's not theoretically\n-     impossible, we just don't do it yet; at least one problem is that\n-     expand_builtin_next_arg needs to handle the situation.  */\n-  else if (TYPE_ARG_TYPES (TREE_TYPE (fn)) != 0\n-\t   && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (TREE_TYPE (fn))))\n-\t       != void_type_node))\n-    ;\n   /* All is well.  We can inline this function.  Traditionally, GCC\n      has refused to inline functions using alloca, or functions whose\n      values are returned in a PARALLEL, and a few other such obscure"}]}