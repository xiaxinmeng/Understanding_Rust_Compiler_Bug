{"sha": "623c6df543b5cb025815e6a79ded86f889f4a4b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzYzZkZjU0M2I1Y2IwMjU4MTVlNmE3OWRlZDg2Zjg4OWY0YTRiMQ==", "commit": {"author": {"name": "Kevin Buettner", "email": "kevinb@redhat.com", "date": "2017-10-02T00:27:21Z"}, "committer": {"name": "Kevin Buettner", "email": "kevinb@gcc.gnu.org", "date": "2017-10-02T00:27:21Z"}, "message": "omp-expand.c (adjust_context_scope): New function.\n\n\t* omp-expand.c (adjust_context_scope): New function.\n\t(expand_parallel_call): Call adjust_context_scope.\n\nFrom-SVN: r253335", "tree": {"sha": "a233b36b6db819a037bd875578a1e2629d75b694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a233b36b6db819a037bd875578a1e2629d75b694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/623c6df543b5cb025815e6a79ded86f889f4a4b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623c6df543b5cb025815e6a79ded86f889f4a4b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623c6df543b5cb025815e6a79ded86f889f4a4b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623c6df543b5cb025815e6a79ded86f889f4a4b1/comments", "author": {"login": "KevinBuettner", "id": 65747518, "node_id": "MDQ6VXNlcjY1NzQ3NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinBuettner", "html_url": "https://github.com/KevinBuettner", "followers_url": "https://api.github.com/users/KevinBuettner/followers", "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}", "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions", "organizations_url": "https://api.github.com/users/KevinBuettner/orgs", "repos_url": "https://api.github.com/users/KevinBuettner/repos", "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinBuettner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25ce0f6cd872d5dcd6aaeb962461f6aad090ffa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ce0f6cd872d5dcd6aaeb962461f6aad090ffa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25ce0f6cd872d5dcd6aaeb962461f6aad090ffa9"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "ede5fb075ddf40179b3e90190aa8c3c9563c5bf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623c6df543b5cb025815e6a79ded86f889f4a4b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623c6df543b5cb025815e6a79ded86f889f4a4b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=623c6df543b5cb025815e6a79ded86f889f4a4b1", "patch": "@@ -1,3 +1,8 @@\n+2017-10-01  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* omp-expand.c (adjust_context_scope): New function.\n+\t(expand_parallel_call): Call adjust_context_scope.\n+\n 2017-10-01  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (optimize_stmt): Make this a method within the"}, {"sha": "0f45563c57c8d517704ac584df524e34627f27c8", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/623c6df543b5cb025815e6a79ded86f889f4a4b1/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/623c6df543b5cb025815e6a79ded86f889f4a4b1/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=623c6df543b5cb025815e6a79ded86f889f4a4b1", "patch": "@@ -499,6 +499,42 @@ parallel_needs_hsa_kernel_p (struct omp_region *region)\n   return false;\n }\n \n+/* Change DECL_CONTEXT of CHILD_FNDECL to that of the parent function.\n+   Add CHILD_FNDECL to decl chain of the supercontext of the block\n+   ENTRY_BLOCK - this is the block which originally contained the\n+   code from which CHILD_FNDECL was created.\n+   \n+   Together, these actions ensure that the debug info for the outlined\n+   function will be emitted with the correct lexical scope.  */\n+\n+static void\n+adjust_context_and_scope (tree entry_block, tree child_fndecl)\n+{\n+  if (entry_block != NULL_TREE && TREE_CODE (entry_block) == BLOCK)\n+    {\n+      tree b = BLOCK_SUPERCONTEXT (entry_block);\n+\n+      if (TREE_CODE (b) == BLOCK)\n+        {\n+\t  tree parent_fndecl;\n+\n+\t  /* Follow supercontext chain until the parent fndecl\n+\t     is found.  */\n+\t  for (parent_fndecl = BLOCK_SUPERCONTEXT (b);\n+\t       TREE_CODE (parent_fndecl) == BLOCK;\n+\t       parent_fndecl = BLOCK_SUPERCONTEXT (parent_fndecl))\n+\t    ;\n+\n+\t  gcc_assert (TREE_CODE (parent_fndecl) == FUNCTION_DECL);\n+\n+\t  DECL_CONTEXT (child_fndecl) = parent_fndecl;\n+\n+\t  DECL_CHAIN (child_fndecl) = BLOCK_VARS (b);\n+\t  BLOCK_VARS (b) = child_fndecl;\n+\t}\n+    }\n+}\n+\n /* Build the function calls to GOMP_parallel_start etc to actually\n    generate the parallel operation.  REGION is the parallel region\n    being expanded.  BB is the block where to insert the code.  WS_ARGS\n@@ -668,6 +704,8 @@ expand_parallel_call (struct omp_region *region, basic_block bb,\n   tree child_fndecl = gimple_omp_parallel_child_fn (entry_stmt);\n   t2 = build_fold_addr_expr (child_fndecl);\n \n+  adjust_context_and_scope (gimple_block (entry_stmt), child_fndecl);\n+\n   vec_alloc (args, 4 + vec_safe_length (ws_args));\n   args->quick_push (t2);\n   args->quick_push (t1);"}]}