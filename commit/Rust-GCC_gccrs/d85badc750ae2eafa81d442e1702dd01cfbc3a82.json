{"sha": "d85badc750ae2eafa81d442e1702dd01cfbc3a82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg1YmFkYzc1MGFlMmVhZmE4MWQ0NDJlMTcwMmRkMDFjZmJjM2E4Mg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2014-11-20T14:26:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T14:26:10Z"}, "message": "exp_attr.adb (Attribute_Max_Size_In_Storage_Elements): Eliminate 'Class references from the tree, because gigi crashes on 'Class.\n\n2014-11-20  Bob Duff  <duff@adacore.com>\n\n\t* exp_attr.adb (Attribute_Max_Size_In_Storage_Elements):\n\tEliminate 'Class references from the tree, because gigi crashes on\n\t'Class. Also, don't check Nkind (Attr) -- it is known to be\n\tN_Attribute_Reference.\tAssert that instead.\n\nFrom-SVN: r217856", "tree": {"sha": "060b03ec21539031aa321d03b1689f20bb420ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/060b03ec21539031aa321d03b1689f20bb420ef3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d85badc750ae2eafa81d442e1702dd01cfbc3a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85badc750ae2eafa81d442e1702dd01cfbc3a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85badc750ae2eafa81d442e1702dd01cfbc3a82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85badc750ae2eafa81d442e1702dd01cfbc3a82/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8d7e809d6c6ce977e188f99e104097b5ece31d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d7e809d6c6ce977e188f99e104097b5ece31d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d7e809d6c6ce977e188f99e104097b5ece31d8"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "5fcfdc473565060f0a9549e81c50c58c8d64e01b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85badc750ae2eafa81d442e1702dd01cfbc3a82/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85badc750ae2eafa81d442e1702dd01cfbc3a82/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d85badc750ae2eafa81d442e1702dd01cfbc3a82", "patch": "@@ -1,3 +1,10 @@\n+2014-11-20  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_attr.adb (Attribute_Max_Size_In_Storage_Elements):\n+\tEliminate 'Class references from the tree, because gigi crashes on\n+\t'Class. Also, don't check Nkind (Attr) -- it is known to be\n+\tN_Attribute_Reference.\tAssert that instead.\n+\n 2014-11-20  Bob Duff  <duff@adacore.com>\n \n \t* debug.adb: Minor comment fix."}, {"sha": "595c5488b87a1fbef893fd788658eb0aac52c62d", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85badc750ae2eafa81d442e1702dd01cfbc3a82/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85badc750ae2eafa81d442e1702dd01cfbc3a82/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=d85badc750ae2eafa81d442e1702dd01cfbc3a82", "patch": "@@ -4215,6 +4215,17 @@ package body Exp_Attr is\n          --  wrapped inside a type conversion.\n \n       begin\n+         --  If the prefix is X'Class, we transform it into a direct reference\n+         --  to the class-wide type, because the back end must not see a 'Class\n+         --  reference. See also 'Size.\n+\n+         if Is_Entity_Name (Pref)\n+           and then Is_Class_Wide_Type (Entity (Pref))\n+         then\n+            Rewrite (Prefix (N), New_Occurrence_Of (Entity (Pref), Loc));\n+            return;\n+         end if;\n+\n          Apply_Universal_Integer_Attribute_Checks (N);\n \n          --  The universal integer check may sometimes add a type conversion,\n@@ -4225,6 +4236,7 @@ package body Exp_Attr is\n             Attr := Expression (Attr);\n             Conversion_Added := True;\n          end if;\n+         pragma Assert (Nkind (Attr) = N_Attribute_Reference);\n \n          --  Heap-allocated controlled objects contain two extra pointers which\n          --  are not part of the actual type. Transform the attribute reference\n@@ -4234,7 +4246,6 @@ package body Exp_Attr is\n          --  two pointers are already present in the type.\n \n          if VM_Target = No_VM\n-           and then Nkind (Attr) = N_Attribute_Reference\n            and then Needs_Finalization (Ptyp)\n            and then not Header_Size_Added (Attr)\n          then\n@@ -5567,9 +5578,9 @@ package body Exp_Attr is\n             end if;\n          end if;\n \n-         --  For class-wide types, X'Class'Size is transformed into a direct\n-         --  reference to the Size of the class type, so that the back end does\n-         --  not have to deal with the X'Class'Size reference.\n+         --  If the prefix is X'Class, we transform it into a direct reference\n+         --  to the class-wide type, because the back end must not see a 'Class\n+         --  reference.\n \n          if Is_Entity_Name (Pref)\n            and then Is_Class_Wide_Type (Entity (Pref))"}]}