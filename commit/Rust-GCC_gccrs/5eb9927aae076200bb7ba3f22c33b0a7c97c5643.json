{"sha": "5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "node_id": "C_kwDOANBUbNoAKDVlYjk5MjdhYWUwNzYyMDBiYjdiYTNmMjJjMzNiMGE3Yzk3YzU2NDM", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-05-16T16:30:46Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-05-16T17:07:45Z"}, "message": "d: Merge upstream dmd 60bfa0ee7, druntime 94bd5bcb, phobos 3a1cd9a01.\n\nD front-end changes:\n\n    - Import dmd v2.100.0.\n    - Add bit fields to D, enabled via the -fpreview=bitfields switch.\n    - Removed the -ftransition=markdown and -frevert=markdown switches.\n    - Added new trait `__traits(classInstanceAlignment)' to provide the\n      required data alignment for classes.\n    - The check for `pragma(crt_constructor)' and `pragma(crt_destructor)'\n      linkage has been relaxed to allow all `void()' signatures.\n    - ImportC parser now recognizes the `typeof(...)' operator.\n\nD runtime changes:\n\n    - Import druntime v2.100.0.\n\nPhobos changes:\n\n    - Import phobos v2.100.0.\n    - To comply with dip1000, `std.socket.Socket` methods now accept only\n      `scope' arrays.\n    - The `fill', `alignSize', `align2', and `align4' methods of\n      `std.outbuffer.OutBuffer' have been extended to allow specifying a custom\n      value when pre-filling or padding the buffer.\n\ngcc/d/ChangeLog:\n\n\t* dmd/MERGE: Merge upstream dmd 60bfa0ee7.\n\t* dmd/VERSION: Update version to v2.100.0.\n\t* d-builtins.cc (d_init_versions): Update for new front-end interface.\n\t* d-codegen.cc (d_decl_context): Use resolvedLinkage to get\n\tdeclaration linkage.\n\t(build_struct_literal): Track offset in bits.\n\t* d-gimplify.cc (d_gimplify_modify_expr): Check both operands for a\n\tbit-field reference.\n\t* d-lang.cc (d_handle_option): Handle -fpreview=bitfields, remove\n\t-frevert=markdown and -ftransition=vmarkdown.\n\t(d_post_options): Set flag_rtti and flag_exceptions if -fno-druntime\n\twas seen on command-line.\n\t(d_parse_file): Update for new front-end interface.\n\t(d_type_promotes_to): Use resolvedLinkage to get declaration linkage.\n\t* decl.cc (make_thunk): Likewise.\n\t* expr.cc (ExprVisitor::visit (CatAssignExp *)): Remove lowering for\n\tappending of an element or array to another array.\n\t* lang.opt (fpreview=bitfields): New option.\n\t(frevert=markdown): Remove.\n\t(ftransition=vmarkdown): Remove.\n\t* types.cc (layout_aggregate_members): Ignore anonymous fields in\n\ttotal count.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/MERGE: Merge upstream druntime 94bd5bcb.\n\t* libdruntime/Makefile.am (ALL_DRUNTIME_INSTALL_DSOURCES): Add\n\t$(DRUNTIME_DSOURCES_ELF).\n\t(ALL_DRUNTIME_SOURCES): Likewise.\n\t(DRUNTIME_DSOURCES_ELF): New variable.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* src/MERGE: Merge upstream phobos 3a1cd9a01.\n\t* testsuite/libphobos.init_fini/custom_gc.d: Update test.", "tree": {"sha": "f80210439a5d8995ebf189bce7f2e141fcb1caec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80210439a5d8995ebf189bce7f2e141fcb1caec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682e587f1021241758f7dfe0b22651008622a312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682e587f1021241758f7dfe0b22651008622a312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682e587f1021241758f7dfe0b22651008622a312"}], "stats": {"total": 15731, "additions": 6475, "deletions": 9256}, "files": [{"sha": "cd9748c1de1179d810cd0eb329d24ae52cfaa41a", "filename": "gcc/d/d-builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-builtins.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -475,7 +475,7 @@ d_init_versions (void)\n   if (flag_pie)\n     VersionCondition::addPredefinedGlobalIdent (\"D_PIE\");\n \n-  if (global.params.doDocComments)\n+  if (global.params.ddoc.doOutput)\n     VersionCondition::addPredefinedGlobalIdent (\"D_Ddoc\");\n \n   if (global.params.useUnitTests)"}, {"sha": "22090a8c75534f16abc99603cd7378a387d94531", "filename": "gcc/d/d-codegen.cc", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-codegen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-codegen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-codegen.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -76,7 +76,7 @@ d_decl_context (Dsymbol *dsym)\n \t but only for extern(D) symbols.  */\n       if (parent->isModule ())\n \t{\n-\t  if ((decl != NULL && decl->linkage != LINK::d)\n+\t  if ((decl != NULL && decl->resolvedLinkage () != LINK::d)\n \t      || (ad != NULL && ad->classKind != ClassKind::d))\n \t    return NULL_TREE;\n \n@@ -1165,7 +1165,7 @@ build_struct_literal (tree type, vec <constructor_elt, va_gc> *init)\n     }\n \n   vec <constructor_elt, va_gc> *ve = NULL;\n-  HOST_WIDE_INT offset = 0;\n+  HOST_WIDE_INT bitoffset = 0;\n   bool constant_p = true;\n   bool finished = false;\n \n@@ -1210,11 +1210,11 @@ build_struct_literal (tree type, vec <constructor_elt, va_gc> *init)\n \n       if (is_initialized)\n \t{\n-\t  HOST_WIDE_INT fieldpos = int_byte_position (field);\n+\t  HOST_WIDE_INT fieldpos = int_bit_position (field);\n \t  gcc_assert (value != NULL_TREE);\n \n \t  /* Must not initialize fields that overlap.  */\n-\t  if (fieldpos < offset)\n+\t  if (fieldpos < bitoffset)\n \t    {\n \t      /* Find the nearest user defined type and field.  */\n \t      tree vtype = type;\n@@ -1243,12 +1243,9 @@ build_struct_literal (tree type, vec <constructor_elt, va_gc> *init)\n \t    finished = true;\n \t}\n \n-      /* Move offset to the next position in the struct.  */\n-      if (TREE_CODE (type) == RECORD_TYPE)\n-\t{\n-\t  offset = int_byte_position (field)\n-\t    + int_size_in_bytes (TREE_TYPE (field));\n-\t}\n+      /* Move bit offset to the next position in the struct.  */\n+      if (TREE_CODE (type) == RECORD_TYPE && DECL_SIZE (field))\n+\tbitoffset = int_bit_position (field) + tree_to_shwi (DECL_SIZE (field));\n \n       /* If all initializers have been assigned, there's nothing else to do.  */\n       if (vec_safe_is_empty (init))"}, {"sha": "36b76da3acc8f7e8419f08d697f2b8e1ba097c59", "filename": "gcc/d/d-gimplify.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-gimplify.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -109,7 +109,8 @@ d_gimplify_modify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n     }\n \n   /* Same as above, but for bit-field assignments.  */\n-  if (bit_field_ref (op0) && TREE_TYPE (op0) != TREE_TYPE (op1))\n+  if ((bit_field_ref (op0) || bit_field_ref (op1))\n+      && TREE_TYPE (op0) != TREE_TYPE (op1))\n     {\n       TREE_OPERAND (*expr_p, 1) = convert (TREE_TYPE (op0), op1);\n       return GS_OK;"}, {"sha": "d1f4959f1195bcfc1e08c08695eba09ae81d5517", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -478,35 +478,34 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_fdoc:\n-      global.params.doDocComments = value;\n+      global.params.ddoc.doOutput = value;\n       break;\n \n     case OPT_fdoc_dir_:\n-      global.params.doDocComments = true;\n-      global.params.docdir = arg;\n+      global.params.ddoc.doOutput = true;\n+      global.params.ddoc.dir = arg;\n       break;\n \n     case OPT_fdoc_file_:\n-      global.params.doDocComments = true;\n-      global.params.docname = arg;\n+      global.params.ddoc.doOutput = true;\n+      global.params.ddoc.name = arg;\n       break;\n \n     case OPT_fdoc_inc_:\n-      global.params.ddocfiles.push (arg);\n+      global.params.ddoc.files.push (arg);\n       break;\n \n     case OPT_fdruntime:\n       global.params.betterC = !value;\n       break;\n \n     case OPT_fdump_c___spec_:\n-      if (global.params.doCxxHdrGeneration == CxxHeaderMode::none)\n-\tglobal.params.doCxxHdrGeneration = CxxHeaderMode::silent;\n-      global.params.cxxhdrname = arg;\n+      global.params.cxxhdr.doOutput = true;\n+      global.params.cxxhdr.name = arg;\n       break;\n \n     case OPT_fdump_c___spec_verbose:\n-      global.params.doCxxHdrGeneration = CxxHeaderMode::verbose;\n+      global.params.cxxhdr.fullOutput = true;\n       break;\n \n     case OPT_fdump_d_original:\n@@ -572,18 +571,22 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       global.params.useDIP25 = FeatureState::enabled;\n       global.params.useDIP1000 = FeatureState::enabled;\n       global.params.useDIP1021 = value;\n+      global.params.bitfields = value;\n       global.params.dtorFields = FeatureState::enabled;\n       global.params.fieldwise = value;\n       global.params.fixAliasThis = value;\n       global.params.previewIn = value;\n       global.params.fix16997 = value;\n-      global.params.markdown = value;\n       global.params.noSharedAccess = value;\n       global.params.rvalueRefParam = FeatureState::enabled;\n       global.params.inclusiveInContracts = value;\n       global.params.shortenedMethods = value;\n       break;\n \n+    case OPT_fpreview_bitfields:\n+      global.params.bitfields = value;\n+      break;\n+\n     case OPT_fpreview_dip1000:\n       global.params.useDIP1000 = FeatureState::enabled;\n       break;\n@@ -641,7 +644,6 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       global.params.useDIP25 = FeatureState::disabled;\n       global.params.dtorFields = FeatureState::disabled;\n       global.params.fix16997 = !value;\n-      global.params.markdown = !value;\n       break;\n \n     case OPT_frevert_dip1000:\n@@ -660,17 +662,14 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       global.params.fix16997 = !value;\n       break;\n \n-    case OPT_frevert_markdown:\n-      global.params.markdown = !value;\n-      break;\n-\n     case OPT_frtti:\n       global.params.useTypeInfo = value;\n       break;\n \n     case OPT_fsave_mixins_:\n-      global.params.mixinFile = arg;\n-      global.params.mixinOut = d_gc_malloc<OutBuffer> ();\n+      global.params.mixinOut.doOutput = true;\n+      global.params.mixinOut.name = arg;\n+      global.params.mixinOut.buffer = d_gc_malloc<OutBuffer> ();\n       break;\n \n     case OPT_fswitch_errors:\n@@ -681,7 +680,6 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       global.params.vfield = value;\n       global.params.vgc = value;\n       global.params.vin = value;\n-      global.params.vmarkdown= value;\n       global.params.vtls = value;\n       break;\n \n@@ -697,10 +695,6 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       global.params.vgc = value;\n       break;\n \n-    case OPT_ftransition_vmarkdown:\n-      global.params.vmarkdown = value;\n-      break;\n-\n     case OPT_ftransition_templates:\n       global.params.vtemplates = value;\n       break;\n@@ -736,17 +730,17 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_H:\n-      global.params.doHdrGeneration = true;\n+      global.params.dihdr.doOutput = true;\n       break;\n \n     case OPT_Hd:\n-      global.params.doHdrGeneration = true;\n-      global.params.hdrdir = arg;\n+      global.params.dihdr.doOutput = true;\n+      global.params.dihdr.dir = arg;\n       break;\n \n     case OPT_Hf:\n-      global.params.doHdrGeneration = true;\n-      global.params.hdrname = arg;\n+      global.params.dihdr.doOutput = true;\n+      global.params.dihdr.name = arg;\n       break;\n \n     case OPT_imultilib:\n@@ -827,11 +821,11 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_Xf:\n-      global.params.jsonfilename = arg;\n+      global.params.json.name = arg;\n       /* Fall through.  */\n \n     case OPT_X:\n-      global.params.doJsonGeneration = true;\n+      global.params.json.doOutput = true;\n       break;\n \n     default:\n@@ -904,16 +898,26 @@ d_post_options (const char ** fn)\n \t? CHECKENABLEoff : CHECKENABLEon;\n     }\n \n+  /* When not linking against D runtime, turn off all code generation that\n+     would otherwise reference it.  */\n   if (global.params.betterC)\n     {\n       if (!OPTION_SET_P (flag_moduleinfo))\n \tglobal.params.useModuleInfo = false;\n \n+      /* Ensure that the front-end options are in sync with the `-frtti' and\n+\t `-fexceptions' flags.  */\n       if (!OPTION_SET_P (flag_rtti))\n-\tglobal.params.useTypeInfo = false;\n+\t{\n+\t  global.params.useTypeInfo = false;\n+\t  flag_rtti = false;\n+\t}\n \n       if (!OPTION_SET_P (flag_exceptions))\n-\tglobal.params.useExceptions = false;\n+\t{\n+\t  global.params.useExceptions = false;\n+\t  flag_exceptions = false;\n+\t}\n \n       global.params.checkAction = CHECKACTION_C;\n     }\n@@ -947,19 +951,15 @@ d_post_options (const char ** fn)\n   if (flag_excess_precision == EXCESS_PRECISION_DEFAULT)\n     flag_excess_precision = EXCESS_PRECISION_STANDARD;\n \n-  global.params.symdebug = write_symbols != NO_DEBUG;\n   global.params.useInline = flag_inline_functions;\n   global.params.showColumns = flag_show_column;\n   global.params.printErrorContext = flag_diagnostics_show_caret;\n \n   if (global.params.useInline)\n-    global.params.hdrStripPlainFunctions = false;\n+    global.params.dihdr.fullOutput = true;\n \n   global.params.obj = !flag_syntax_only;\n \n-  /* Has no effect yet.  */\n-  global.params.pic = flag_pic != 0;\n-\n   /* Add in versions given on the command line.  */\n   if (global.params.versionids)\n     {\n@@ -1068,8 +1068,8 @@ d_parse_file (void)\n \t  /* Handling stdin, generate a unique name for the module.  */\n \t  Module *m = Module::create (in_fnames[i],\n \t\t\t\t      Identifier::idPool (\"__stdin\"),\n-\t\t\t\t      global.params.doDocComments,\n-\t\t\t\t      global.params.doHdrGeneration);\n+\t\t\t\t      global.params.ddoc.doOutput,\n+\t\t\t\t      global.params.dihdr.doOutput);\n \t  modules.push (m);\n \n \t  /* Overwrite the source file for the module, the one created by\n@@ -1084,8 +1084,8 @@ d_parse_file (void)\n \t  const char *name = FileName::removeExt (basename);\n \n \t  Module *m = Module::create (in_fnames[i], Identifier::idPool (name),\n-\t\t\t\t      global.params.doDocComments,\n-\t\t\t\t      global.params.doHdrGeneration);\n+\t\t\t\t      global.params.ddoc.doOutput,\n+\t\t\t\t      global.params.dihdr.doOutput);\n \t  modules.push (m);\n \t  FileName::free (name);\n \t}\n@@ -1142,7 +1142,7 @@ d_parse_file (void)\n   if (global.errors)\n     goto had_errors;\n \n-  if (global.params.doHdrGeneration)\n+  if (global.params.dihdr.doOutput)\n     {\n       /* Generate 'header' import files.  Since 'header' import files must be\n \t independent of command line switches and what else is imported, they\n@@ -1316,12 +1316,12 @@ d_parse_file (void)\n     printTemplateStats ();\n \n   /* Generate JSON files.  */\n-  if (global.params.doJsonGeneration)\n+  if (global.params.json.doOutput)\n     {\n       OutBuffer buf;\n       json_generate (&buf, &modules);\n \n-      const char *name = global.params.jsonfilename.ptr;\n+      const char *name = global.params.json.name.ptr;\n       FILE *json_stream;\n \n       if (name && (name[0] != '-' || name[1] != '\\0'))\n@@ -1346,7 +1346,7 @@ d_parse_file (void)\n     }\n \n   /* Generate Ddoc files.  */\n-  if (global.params.doDocComments && !global.errors && !errorcount)\n+  if (global.params.ddoc.doOutput && !global.errors && !errorcount)\n     {\n       for (size_t i = 0; i < modules.length; i++)\n \t{\n@@ -1370,7 +1370,7 @@ d_parse_file (void)\n     }\n \n   /* Generate C++ header files.  */\n-  if (global.params.doCxxHdrGeneration != CxxHeaderMode::none)\n+  if (global.params.cxxhdr.doOutput)\n     genCppHdrFiles (modules);\n \n   if (global.errors)\n@@ -1403,23 +1403,23 @@ d_parse_file (void)\n   errorcount += (global.errors + global.warnings);\n \n   /* We want to write the mixin expansion file also on error.  */\n-  if (global.params.mixinOut)\n+  if (global.params.mixinOut.doOutput)\n     {\n-      FILE *mixin_stream = fopen (global.params.mixinFile, \"w\");\n+      FILE *mixin_stream = fopen (global.params.mixinOut.name.ptr, \"w\");\n \n       if (mixin_stream)\n \t{\n-\t  OutBuffer *buf = global.params.mixinOut;\n+\t  OutBuffer *buf = global.params.mixinOut.buffer;\n \t  fprintf (mixin_stream, \"%s\", buf->peekChars ());\n \n \t  if (ferror (mixin_stream) || fclose (mixin_stream))\n \t    fatal_error (input_location, \"closing mixin file %s: %m\",\n-\t\t\t global.params.mixinFile);\n+\t\t\t global.params.mixinOut.name.ptr);\n \t}\n       else\n \t{\n \t  fatal_error (input_location, \"opening mixin file %s: %m\",\n-\t\t       global.params.mixinFile);\n+\t\t       global.params.mixinOut.name.ptr);\n \t}\n     }\n \n@@ -1558,7 +1558,7 @@ d_type_promotes_to (tree type)\n   /* Promotions are only applied on unnamed function arguments for declarations\n      with `extern(C)' or `extern(C++)' linkage.  */\n   if (cfun && DECL_LANG_FRONTEND (cfun->decl)\n-      && DECL_LANG_FRONTEND (cfun->decl)->linkage != LINK::d)\n+      && DECL_LANG_FRONTEND (cfun->decl)->resolvedLinkage () != LINK::d)\n     {\n       /* In [type/integer-promotions], integer promotions are conversions of the\n \t following types:"}, {"sha": "f5c21078aadd74d265cd78725d62d0583a1a3b4d", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1845,7 +1845,7 @@ make_thunk (FuncDeclaration *decl, int offset)\n      forcing a D local thunk to be emitted.  */\n   const char *ident;\n \n-  if (decl->linkage == LINK::cpp)\n+  if (decl->resolvedLinkage () == LINK::cpp)\n     ident = target.cpp.thunkMangle (decl, offset);\n   else\n     {\n@@ -1862,7 +1862,7 @@ make_thunk (FuncDeclaration *decl, int offset)\n \n   d_keep (thunk);\n \n-  if (decl->linkage != LINK::cpp)\n+  if (decl->resolvedLinkage () != LINK::cpp)\n     free (CONST_CAST (char *, ident));\n \n   if (!DECL_EXTERNAL (function))"}, {"sha": "b4d42ec6d2bba34706dd2c07ffc6c5cd85d45779", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,4 +1,4 @@\n-313d28b3db7523e67880ae3baf8ef28ce9abe9bd\n+a6c5224b2d6b61fa3856aa8a3369581f7c949b68\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "50c5ac3839151e92778ba5ce0112b31dfe15c8ff", "filename": "gcc/d/dmd/README.md", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FREADME.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FREADME.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FREADME.md?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -164,20 +164,21 @@ Note that these groups have no strict meaning, the category assignments are a bi\n \n **Other**\n \n-| File                                                                          | Purpose                                                                                     |\n-|-------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|\n-| [aliasthis.d](https://github.com/dlang/dmd/blob/master/src/dmd/aliasthis.d)   | Resolve implicit conversions for `alias X this`                                             |\n-| [traits.d](https://github.com/dlang/dmd/blob/master/src/dmd/traits.d)         | `__traits()`                                                                                |\n-| [lambdacomp.d](https://github.com/dlang/dmd/blob/master/src/dmd/lambdacomp.d) | `__traits(isSame, x => y, z => w)`                                                          |\n-| [cond.d](https://github.com/dlang/dmd/blob/master/src/dmd/cond.d)             | Evaluate `static if`, `version` `debug `                                                    |\n-| [staticcond.d](https://github.com/dlang/dmd/blob/master/src/dmd/staticcond.d) | Lazily evaluate static conditions for `static if`, `static assert` and template constraints |\n-| [delegatize.d](https://github.com/dlang/dmd/blob/master/src/dmd/delegatize.d) | Converts expression to delegates for `lazy` parameters                                      |\n-| [eh.d](https://github.com/dlang/dmd/blob/master/src/dmd/eh.d)                 | Generate tables for exception handling                                                      |\n-| [nspace.d](https://github.com/dlang/dmd/blob/master/src/dmd/nspace.d)         | Namespace for `extern (C++, Module)`                                                        |\n-| [intrange.d](https://github.com/dlang/dmd/blob/master/src/dmd/intrange.d)     | [Value range propagation](https://digitalmars.com/articles/b62.html)                        |\n-| [dimport.d](https://github.com/dlang/dmd/blob/master/src/dmd/dimport.d)       | Renamed imports (`import aliasSymbol = pkg1.pkg2.symbol`)                                   |\n-| [arrayop.d](https://github.com/dlang/dmd/blob/master/src/dmd/arrayop.d)       | Array operations (`a[] = b[] + c[]`)                                                        |\n-| [typinf.d](https://github.com/dlang/dmd/blob/master/src/dmd/typinf.d)         | Generate typeinfo for `typeid()` (as well as internals)                                     |\n+| File                                                                           | Purpose                                                                                     |\n+|--------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|\n+| [aliasthis.d](https://github.com/dlang/dmd/blob/master/src/dmd/aliasthis.d)    | Resolve implicit conversions for `alias X this`                                             |\n+| [traits.d](https://github.com/dlang/dmd/blob/master/src/dmd/traits.d)          | `__traits()`                                                                                |\n+| [lambdacomp.d](https://github.com/dlang/dmd/blob/master/src/dmd/lambdacomp.d)  | `__traits(isSame, x => y, z => w)`                                                          |\n+| [cond.d](https://github.com/dlang/dmd/blob/master/src/dmd/cond.d)              | Evaluate `static if`, `version` `debug `                                                    |\n+| [staticcond.d](https://github.com/dlang/dmd/blob/master/src/dmd/staticcond.d)  | Lazily evaluate static conditions for `static if`, `static assert` and template constraints |\n+| [delegatize.d](https://github.com/dlang/dmd/blob/master/src/dmd/delegatize.d)  | Converts expression to delegates for `lazy` parameters                                      |\n+| [eh.d](https://github.com/dlang/dmd/blob/master/src/dmd/eh.d)                  | Generate tables for exception handling                                                      |\n+| [nspace.d](https://github.com/dlang/dmd/blob/master/src/dmd/nspace.d)          | Namespace for `extern (C++, Module)`                                                        |\n+| [intrange.d](https://github.com/dlang/dmd/blob/master/src/dmd/intrange.d)      | [Value range propagation](https://digitalmars.com/articles/b62.html)                        |\n+| [dimport.d](https://github.com/dlang/dmd/blob/master/src/dmd/dimport.d)        | Renamed imports (`import aliasSymbol = pkg1.pkg2.symbol`)                                   |\n+| [arrayop.d](https://github.com/dlang/dmd/blob/master/src/dmd/arrayop.d)        | Array operations (`a[] = b[] + c[]`)                                                        |\n+| [cpreprocess.d](https://github.com/dlang/dmd/blob/master/src/dmd/cpreprocess.d)| Run the C preprocessor on C source files                                                   |\n+| [typinf.d](https://github.com/dlang/dmd/blob/master/src/dmd/typinf.d)          | Generate typeinfo for `typeid()` (as well as internals)                                     |\n \n | File                                                                        | Purpose                                                                            |\n |-----------------------------------------------------------------------------|------------------------------------------------------------------------------------|"}, {"sha": "5ea2ba0d8ec1559a41c1e14d714a5f994ff65570", "filename": "gcc/d/dmd/VERSION", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FVERSION", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2FVERSION", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FVERSION?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1 +1 @@\n-v2.100.0-beta.1\n+v2.100.0"}, {"sha": "75a16bd2da4d25217fb7a08eec07b427e2ea5602", "filename": "gcc/d/dmd/clone.d", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fclone.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fclone.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fclone.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -563,9 +563,12 @@ FuncDeclaration buildXopEquals(StructDeclaration sd, Scope* sc)\n         e = new DotIdExp(sd.loc, e, Id.object);\n         e = new DotIdExp(sd.loc, e, id);\n         e = e.expressionSemantic(sc);\n-        Dsymbol s = getDsymbol(e);\n-        assert(s);\n-        sd.xerreq = s.isFuncDeclaration();\n+        if (!e.isErrorExp())\n+        {\n+            Dsymbol s = getDsymbol(e);\n+            assert(s);\n+            sd.xerreq = s.isFuncDeclaration();\n+        }\n     }\n     Loc declLoc; // loc is unnecessary so __xopEquals is never called directly\n     Loc loc; // loc is unnecessary so errors are gagged\n@@ -684,9 +687,12 @@ FuncDeclaration buildXopCmp(StructDeclaration sd, Scope* sc)\n         e = new DotIdExp(sd.loc, e, Id.object);\n         e = new DotIdExp(sd.loc, e, id);\n         e = e.expressionSemantic(sc);\n-        Dsymbol s = getDsymbol(e);\n-        assert(s);\n-        sd.xerrcmp = s.isFuncDeclaration();\n+        if (!e.isErrorExp())\n+        {\n+            Dsymbol s = getDsymbol(e);\n+            assert(s);\n+            sd.xerrcmp = s.isFuncDeclaration();\n+        }\n     }\n     Loc declLoc; // loc is unnecessary so __xopCmp is never called directly\n     Loc loc; // loc is unnecessary so errors are gagged\n@@ -867,7 +873,7 @@ void buildDtors(AggregateDeclaration ad, Scope* sc)\n \n     // Build the field destructor (`ad.fieldDtor`), if needed.\n     // If the user dtor is an extern(C++) prototype, then we expect it performs a full-destruction and skip building.\n-    const bool dtorIsCppPrototype = ad.userDtors.dim && ad.userDtors[0].linkage == LINK.cpp && !ad.userDtors[0].fbody;\n+    const bool dtorIsCppPrototype = ad.userDtors.dim && ad.userDtors[0]._linkage == LINK.cpp && !ad.userDtors[0].fbody;\n     if (!dtorIsCppPrototype)\n     {\n         Expression e = null;\n@@ -1019,7 +1025,7 @@ void buildDtors(AggregateDeclaration ad, Scope* sc)\n \n     // Set/build `ad.dtor`.\n     // On Windows, the dtor in the vtable is a shim with different signature.\n-    ad.dtor = (ad.aggrDtor && ad.aggrDtor.linkage == LINK.cpp && !target.cpp.twoDtorInVtable)\n+    ad.dtor = (ad.aggrDtor && ad.aggrDtor._linkage == LINK.cpp && !target.cpp.twoDtorInVtable)\n         ? buildWindowsCppDtor(ad, ad.aggrDtor, sc)\n         : ad.aggrDtor;\n "}, {"sha": "cccaabd6d679d9de3bdaa4d6fdb53300d682657f", "filename": "gcc/d/dmd/common/bitfields.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -30,7 +30,7 @@ if (__traits(isUnsigned, T))\n         enum mask = \"(1 << \"~i.stringof~\")\";\n         result ~= \"\n         /// set or get the corresponding \"~structName~\" member\n-        bool \"~mem~\"() const { return !!(bitFields & \"~mask~\"); }\n+        bool \"~mem~\"() const scope { return !!(bitFields & \"~mask~\"); }\n         /// ditto\n         bool \"~mem~\"(bool v)\n         {"}, {"sha": "9a5bd822384ae7939315f58cb0b63e18762edcaa", "filename": "gcc/d/dmd/common/outbuffer.d", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -309,23 +309,24 @@ struct OutBuffer\n         writenl();\n     }\n \n-    // Zero-terminated\n-    void writeString(const(char)* s) pure nothrow @trusted\n+    /** Write string to buffer, ensure it is zero terminated\n+     */\n+    void writeStringz(const(char)* s) pure nothrow @trusted\n     {\n         write(s[0 .. strlen(s)+1]);\n     }\n \n     /// ditto\n-    void writeString(const(char)[] s) pure nothrow\n+    void writeStringz(const(char)[] s) pure nothrow\n     {\n         write(s);\n         writeByte(0);\n     }\n \n     /// ditto\n-    void writeString(string s) pure nothrow\n+    void writeStringz(string s) pure nothrow\n     {\n-        writeString(cast(const(char)[])(s));\n+        writeStringz(cast(const(char)[])(s));\n     }\n \n     extern (C++) void prependstring(const(char)* string) pure nothrow"}, {"sha": "65085f544f7486e83b7c2630374be167095b5400", "filename": "gcc/d/dmd/cond.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcond.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcond.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -370,7 +370,7 @@ extern (C++) final class StaticForeach : RootObject\n         Type ety = new TypeTypeof(aloc, wrapAndCall(aloc, new CompoundStatement(aloc, s1)));\n         auto aty = ety.arrayOf();\n         auto idres = Identifier.generateId(\"__res\");\n-        auto vard = new VarDeclaration(aloc, aty, idres, null);\n+        auto vard = new VarDeclaration(aloc, aty, idres, null, STC.temp);\n         auto s2 = new Statements();\n \n         // Run 'typeof' gagged to avoid duplicate errors and if it fails just create\n@@ -984,9 +984,9 @@ bool findCondition(Identifiers* ids, Identifier ident) @safe nothrow pure\n // Helper for printing dependency information\n private void printDepsConditional(Scope* sc, DVCondition condition, const(char)[] depType)\n {\n-    if (!global.params.moduleDeps || global.params.moduleDepsFile)\n+    if (!global.params.moduleDeps.buffer || global.params.moduleDeps.name)\n         return;\n-    OutBuffer* ob = global.params.moduleDeps;\n+    OutBuffer* ob = global.params.moduleDeps.buffer;\n     Module imod = sc ? sc._module : condition.mod;\n     if (!imod)\n         return;"}, {"sha": "d90542f3fd83f77f68a7300bebde444d57bc8b01", "filename": "gcc/d/dmd/constfold.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fconstfold.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1181,7 +1181,7 @@ UnionExp Cast(const ref Loc loc, Type type, Type to, Expression e1)\n     {\n         if (type != Type.terror)\n         {\n-            // have to change to Internal Compiler Error\n+            // have to change to internal compiler error\n             // all invalid casts should be handled already in Expression::castTo().\n             error(loc, \"cannot cast `%s` to `%s`\", e1.type.toChars(), type.toChars());\n         }"}, {"sha": "fde064843704157514e30f9da1fd5b63409b8c34", "filename": "gcc/d/dmd/cparse.d", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcparse.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -284,6 +284,7 @@ final class CParser(AST) : Parser!AST\n         case TOK.struct_:\n         case TOK.union_:\n         case TOK.enum_:\n+        case TOK.typeof_:\n \n         // storage-class-specifiers\n         case TOK.typedef_:\n@@ -1662,6 +1663,14 @@ final class CParser(AST) : Parser!AST\n             return;\n         }\n \n+        if (!tspec)\n+        {\n+            error(\"no type for declarator before `%s`\", token.toChars());\n+            panic();\n+            nextToken();\n+            return;\n+        }\n+\n         if (tspec && specifier.mod & MOD.xconst)\n         {\n             tspec = toConst(tspec);\n@@ -2287,6 +2296,52 @@ final class CParser(AST) : Parser!AST\n                     break;\n                 }\n \n+                case TOK.typeof_:\n+                {\n+                    nextToken();\n+                    check(TOK.leftParenthesis);\n+\n+                    auto tk = &token;\n+                    AST.Expression e;\n+                    if (isTypeName(tk))\n+                        e = new AST.TypeExp(loc, cparseTypeName());\n+                    else\n+                        e = cparseExpression();\n+                    t = new AST.TypeTypeof(loc, e);\n+\n+                    if(token.value == TOK.rightParenthesis)\n+                        nextToken();\n+                    else\n+                    {\n+                        t = AST.Type.terror;\n+                        error(\"`typeof` operator expects an expression or type name in parentheses\");\n+\n+                        // skipParens et. al expect to be on the opening parenthesis\n+                        int parens;\n+                        loop: while(1)\n+                        {\n+                            switch(token.value)\n+                            {\n+                                case TOK.leftParenthesis:\n+                                    parens++;\n+                                    break;\n+                                case TOK.rightParenthesis:\n+                                    parens--;\n+                                    if(parens < 0)\n+                                        goto case;\n+                                    break;\n+                                case TOK.endOfFile:\n+                                    break loop;\n+                                default:\n+                            }\n+                            nextToken();\n+                        }\n+                    }\n+\n+                    tkwx = TKW.xtag;\n+                    break;\n+                }\n+\n                 default:\n                     break Lwhile;\n             }\n@@ -2498,7 +2553,7 @@ final class CParser(AST) : Parser!AST\n     private AST.Type cparseDeclarator(DTR declarator, AST.Type t,\n         out Identifier pident, ref Specifier specifier)\n     {\n-        //printf(\"cparseDeclarator(%d)\\n\", declarator);\n+        //printf(\"cparseDeclarator(%d, %p)\\n\", declarator, t);\n         AST.Types constTypes; // all the Types that will need `const` applied to them\n         constTypes.setDim(0);\n \n@@ -4227,6 +4282,7 @@ final class CParser(AST) : Parser!AST\n \n                 // atomic-type-specifier\n                 case TOK._Atomic:\n+                case TOK.typeof_:\n                     t = peek(t);\n                     if (t.value != TOK.leftParenthesis ||\n                         !skipParens(t, &t))"}, {"sha": "6235342a4f4c8068d53118399059950381dac12f", "filename": "gcc/d/dmd/cppmangle.d", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcppmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fcppmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcppmangle.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -471,7 +471,7 @@ private final class CppMangleVisitor : Visitor\n             }\n             else\n             {\n-                ti.error(\"Internal Compiler Error: C++ `%s` template value parameter is not supported\", tv.valType.toChars());\n+                ti.error(\"internal compiler error: C++ `%s` template value parameter is not supported\", tv.valType.toChars());\n                 fatal();\n             }\n         }\n@@ -506,13 +506,13 @@ private final class CppMangleVisitor : Visitor\n             }\n             else\n             {\n-                ti.error(\"Internal Compiler Error: C++ `%s` template alias parameter is not supported\", o.toChars());\n+                ti.error(\"internal compiler error: C++ `%s` template alias parameter is not supported\", o.toChars());\n                 fatal();\n             }\n         }\n         else if (tp.isTemplateThisParameter())\n         {\n-            ti.error(\"Internal Compiler Error: C++ `%s` template this parameter is not supported\", o.toChars());\n+            ti.error(\"internal compiler error: C++ `%s` template this parameter is not supported\", o.toChars());\n             fatal();\n         }\n         else\n@@ -995,7 +995,7 @@ private final class CppMangleVisitor : Visitor\n         // fake mangling for fields to fix https://issues.dlang.org/show_bug.cgi?id=16525\n         if (!(d.storage_class & (STC.extern_ | STC.field | STC.gshared)))\n         {\n-            d.error(\"Internal Compiler Error: C++ static non-`__gshared` non-`extern` variables not supported\");\n+            d.error(\"internal compiler error: C++ static non-`__gshared` non-`extern` variables not supported\");\n             fatal();\n         }\n         Dsymbol p = d.toParent();\n@@ -1330,7 +1330,7 @@ private final class CppMangleVisitor : Visitor\n             if (t.ty == Tsarray)\n             {\n                 // Static arrays in D are passed by value; no counterpart in C++\n-                .error(loc, \"Internal Compiler Error: unable to pass static array `%s` to extern(C++) function, use pointer instead\",\n+                .error(loc, \"internal compiler error: unable to pass static array `%s` to extern(C++) function, use pointer instead\",\n                     t.toChars());\n                 fatal();\n             }\n@@ -1369,7 +1369,7 @@ private final class CppMangleVisitor : Visitor\n             p = \"`shared` \";\n         else\n             p = \"\";\n-        .error(loc, \"Internal Compiler Error: %stype `%s` cannot be mapped to C++\\n\", p, t.toChars());\n+        .error(loc, \"internal compiler error: %stype `%s` cannot be mapped to C++\\n\", p, t.toChars());\n         fatal(); //Fatal, because this error should be handled in frontend\n     }\n "}, {"sha": "c0a86f57dd245d71b5a2a97835972792e728ead1", "filename": "gcc/d/dmd/dcast.d", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdcast.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdcast.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdcast.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1695,14 +1695,6 @@ Expression castTo(Expression e, Scope* sc, Type t, Type att = null)\n             {\n                 // T[n] sa;\n                 // cast(U[])sa; // ==> cast(U[])sa[];\n-                if (global.params.useDIP1000 == FeatureState.enabled)\n-                {\n-                    if (auto v = expToVariable(e))\n-                    {\n-                        if (e.type.hasPointers() && !checkAddressVar(sc, e, v))\n-                            goto Lfail;\n-                    }\n-                }\n                 const fsize = t1b.nextOf().size();\n                 const tsize = tob.nextOf().size();\n                 if (fsize == SIZE_INVALID || tsize == SIZE_INVALID)\n@@ -2236,7 +2228,7 @@ Expression castTo(Expression e, Scope* sc, Type t, Type att = null)\n         ArrayLiteralExp ae = e;\n \n         Type tb = t.toBasetype();\n-        if (tb.ty == Tarray && global.params.useDIP1000 == FeatureState.enabled)\n+        if (tb.ty == Tarray)\n         {\n             if (checkArrayLiteralEscape(sc, ae, false))\n             {\n@@ -2782,9 +2774,8 @@ Expression scaleFactor(BinExp be, Scope* sc)\n         if (eoff.op == EXP.int64 && eoff.toInteger() == 0)\n         {\n         }\n-        else if (sc.func.setUnsafe())\n+        else if (sc.func.setUnsafe(false, be.loc, \"pointer arithmetic not allowed in @safe functions\"))\n         {\n-            be.error(\"pointer arithmetic not allowed in @safe functions\");\n             return ErrorExp.get();\n         }\n     }"}, {"sha": "a4a2abf4144be829d781c69f24c5f3b323e9d83b", "filename": "gcc/d/dmd/dclass.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdclass.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdclass.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdclass.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -984,7 +984,7 @@ extern (C++) class ClassDeclaration : AggregateDeclaration\n             auto var = new VarDeclaration(loc, vtype, Identifier.idPool(\"__vtbl\"), null, STC.immutable_ | STC.static_);\n             var.addMember(null, this);\n             var.isdataseg = 1;\n-            var.linkage = LINK.d;\n+            var._linkage = LINK.d;\n             var.semanticRun = PASS.semanticdone; // no more semantic wanted\n             vtblsym = var;\n         }"}, {"sha": "bb0feb642bdcece427ffffe6586f38d68a2f8738", "filename": "gcc/d/dmd/declaration.d", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -221,7 +221,7 @@ extern (C++) abstract class Declaration : Dsymbol\n     Type originalType;  // before semantic analysis\n     StorageClass storage_class = STC.undefined_;\n     Visibility visibility;\n-    LINK linkage = LINK.default_;\n+    LINK _linkage = LINK.default_; // may be `LINK.system`; use `resolvedLinkage()` to resolve it\n     short inuse;          // used to detect cycles\n \n     ubyte adFlags;         // control re-assignment of AliasDeclaration (put here for packing reasons)\n@@ -336,7 +336,7 @@ extern (C++) abstract class Declaration : Dsymbol\n         {\n             if (ctor.isCpCtor && ctor.isGenerated())\n             {\n-                .error(loc, \"Generating an `inout` copy constructor for `struct %s` failed, therefore instances of it are uncopyable\", parent.toPrettyChars());\n+                .error(loc, \"generating an `inout` copy constructor for `struct %s` failed, therefore instances of it are uncopyable\", parent.toPrettyChars());\n                 return true;\n             }\n         }\n@@ -420,6 +420,12 @@ extern (C++) abstract class Declaration : Dsymbol\n         return (storage_class & STC.static_) != 0;\n     }\n \n+    /// Returns the linkage, resolving the target-specific `System` one.\n+    final LINK resolvedLinkage() const\n+    {\n+        return _linkage == LINK.system ? target.systemLinkage() : _linkage;\n+    }\n+\n     bool isDelete()\n     {\n         return false;\n@@ -1506,7 +1512,7 @@ extern (C++) class VarDeclaration : Declaration\n         uint oldgag = global.gag;\n         if (global.gag)\n         {\n-            Dsymbol sym = toParent().isAggregateDeclaration();\n+            Dsymbol sym = isMember();\n             if (sym && !sym.isSpeculative())\n                 global.gag = 0;\n         }\n@@ -1691,6 +1697,32 @@ extern (C++) class BitFieldDeclaration : VarDeclaration\n         v.visit(this);\n     }\n \n+    /***********************************\n+     * Retrieve the .min or .max values.\n+     * Only valid after semantic analysis.\n+     * Params:\n+     *  id = Id.min or Id.max\n+     * Returns:\n+     *  the min or max value\n+     */\n+    final ulong getMinMax(Identifier id)\n+    {\n+        const width = fieldWidth;\n+        const uns = type.isunsigned();\n+        const min = id == Id.min;\n+        ulong v;\n+        assert(width != 0);  // should have been rejected in semantic pass\n+        if (width == ulong.sizeof * 8)\n+            v = uns ? (min ? ulong.min : ulong.max)\n+                    : (min ?  long.min :  long.max);\n+        else\n+            v = uns ? (min ? 0\n+                           : (1L << width) - 1)\n+                    : (min ? -(1L << (width - 1))\n+                           :  (1L << (width - 1)) - 1);\n+        return v;\n+    }\n+\n     override final void setFieldOffset(AggregateDeclaration ad, ref FieldState fieldState, bool isunion)\n     {\n         //printf(\"BitFieldDeclaration::setFieldOffset(ad: %s, field: %s)\\n\", ad.toChars(), toChars());\n@@ -1919,7 +1951,7 @@ extern (C++) class TypeInfoDeclaration : VarDeclaration\n         this.tinfo = tinfo;\n         storage_class = STC.static_ | STC.gshared;\n         visibility = Visibility(Visibility.Kind.public_);\n-        linkage = LINK.c;\n+        _linkage = LINK.c;\n         alignment.set(target.ptrsize);\n     }\n "}, {"sha": "0bde33dd9e97e11c7e3b1b84cbb1c7576eb0ba43", "filename": "gcc/d/dmd/declaration.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.h?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -28,6 +28,7 @@ struct Ensure\n class FuncDeclaration;\n class StructDeclaration;\n struct IntRange;\n+struct AttributeViolation;\n \n //enum STC : ulong from astenums.d:\n \n@@ -115,7 +116,7 @@ class Declaration : public Dsymbol\n     Type *originalType;         // before semantic analysis\n     StorageClass storage_class;\n     Visibility visibility;\n-    LINK linkage;\n+    LINK _linkage;              // may be `LINK::system`; use `resolvedLinkage()` to resolve it\n     short inuse;                // used to detect cycles\n     uint8_t adFlags;\n     Symbol* isym;               // import version of csym\n@@ -127,6 +128,7 @@ class Declaration : public Dsymbol\n     Dsymbol *search(const Loc &loc, Identifier *ident, int flags = SearchLocalsOnly);\n \n     bool isStatic() const { return (storage_class & STCstatic) != 0; }\n+    LINK resolvedLinkage() const; // returns the linkage, resolving the target-specific `System` one\n     virtual bool isDelete();\n     virtual bool isDataseg();\n     virtual bool isThreadlocal();\n@@ -612,6 +614,10 @@ class FuncDeclaration : public Declaration\n \n     FuncDeclarations *inlinedNestedCallees;\n \n+private:\n+    AttributeViolation* safetyViolation;\n+public:\n+\n     unsigned flags;                     // FUNCFLAGxxxxx\n \n     // Data for a function declaration that is needed for the Objective-C\n@@ -655,6 +661,7 @@ class FuncDeclaration : public Declaration\n     bool isNRVO() const;\n     void isNRVO(bool v);\n     bool isNaked() const;\n+    void isNaked(bool v);\n     bool isGenerated() const;\n     void isGenerated(bool v);\n     bool isIntroducing() const;\n@@ -664,7 +671,9 @@ class FuncDeclaration : public Declaration\n     bool hasDualContext() const;\n     bool hasAlwaysInlines() const;\n     bool isCrtCtor() const;\n+    void isCrtCtor(bool v);\n     bool isCrtDtor() const;\n+    void isCrtDtor(bool v);\n \n     virtual bool isNested() const;\n     AggregateDeclaration *isThis();"}, {"sha": "5e7527d70414b097bdf6f0e4ab2dfdefdc86233b", "filename": "gcc/d/dmd/dinterpret.d", "status": "modified", "additions": 104, "deletions": 5, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdinterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdinterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -674,8 +674,20 @@ private Expression interpretFunction(UnionExp* pue, FuncDeclaration fd, InterSta\n         }\n     }\n     // If fell off the end of a void function, return void\n-    if (!e && tf.next.ty == Tvoid)\n-        e = CTFEExp.voidexp;\n+    if (!e)\n+    {\n+        if (tf.next.ty == Tvoid)\n+            e = CTFEExp.voidexp;\n+        else\n+        {\n+            /* missing a return statement can happen with C functions\n+             * https://issues.dlang.org/show_bug.cgi?id=23056\n+             */\n+            fd.error(\"no return value from function\");\n+            e = CTFEExp.cantexp;\n+        }\n+    }\n+\n     if (tf.isref && e.op == EXP.variable && e.isVarExp().var == fd.vthis)\n         e = thisarg;\n     if (tf.isref && fd.hasDualContext() && e.op == EXP.index)\n@@ -695,7 +707,6 @@ private Expression interpretFunction(UnionExp* pue, FuncDeclaration fd, InterSta\n             }\n         }\n     }\n-    assert(e !is null);\n \n     // Leave the function\n     --ctfeGlobals.callDepth;\n@@ -1038,6 +1049,21 @@ public:\n         if (exceptionOrCant(e))\n             return;\n \n+        /**\n+         * Interpret `return a ~= b` (i.e. `return _d_arrayappendT{,Trace}(a, b)`) as:\n+         *     a ~= b;\n+         *     return a;\n+         * This is needed because `a ~= b` has to be interpreted as an lvalue, in order to avoid\n+         * assigning a larger array into a smaller one, such as:\n+         *    `a = [1, 2], a ~= [3]` => `[1, 2] ~= [3]` => `[1, 2] = [1, 2, 3]`\n+         */\n+        if (isRuntimeHook(s.exp, Id._d_arrayappendT) || isRuntimeHook(s.exp, Id._d_arrayappendTTrace))\n+        {\n+            auto rs = new ReturnStatement(s.loc, e);\n+            rs.accept(this);\n+            return;\n+        }\n+\n         // Disallow returning pointers to stack-allocated variables (bug 7876)\n         if (!stopPointersEscaping(s.loc, e))\n         {\n@@ -4826,6 +4852,33 @@ public:\n                 result = interpret(ce, istate);\n                 return;\n             }\n+            else if (fd.ident == Id._d_arrayappendT || fd.ident == Id._d_arrayappendTTrace)\n+            {\n+                // In expressionsem.d `ea ~= eb` was lowered to `_d_arrayappendT{,Trace}({file, line, funcname}, ea, eb);`.\n+                // The following code will rewrite it back to `ea ~= eb` and then interpret that expression.\n+                Expression lhs, rhs;\n+\n+                if (fd.ident == Id._d_arrayappendT)\n+                {\n+                    assert(e.arguments.dim == 2);\n+                    lhs = (*e.arguments)[0];\n+                    rhs = (*e.arguments)[1];\n+                }\n+                else\n+                {\n+                    assert(e.arguments.dim == 5);\n+                    lhs = (*e.arguments)[3];\n+                    rhs = (*e.arguments)[4];\n+                }\n+\n+                auto cae = new CatAssignExp(e.loc, lhs, rhs);\n+                cae.type = e.type;\n+\n+                result = interpretRegion(cae, istate, CTFEGoal.LValue);\n+                return;\n+            }\n+            else if (fd.ident == Id._d_arrayappendcTX)\n+                assert(0, \"CTFE cannot interpret _d_arrayappendcTX!\");\n         }\n         else if (auto soe = ecall.isSymOffExp())\n         {\n@@ -4947,6 +5000,25 @@ public:\n             printf(\"%s CommaExp::interpret() %s\\n\", e.loc.toChars(), e.toChars());\n         }\n \n+        if (auto ce = isRuntimeHook(e.e1, Id._d_arrayappendcTX))\n+        {\n+            // In expressionsem.d `arr ~= elem` was lowered to\n+            // `_d_arrayappendcTX(arr, elem), arr[arr.length - 1] = elem, elem;`.\n+            // The following code will rewrite it back to `arr ~= elem`\n+            // and then interpret that expression.\n+            assert(ce.arguments.dim == 2);\n+\n+            auto arr = (*ce.arguments)[0];\n+            auto elem = e.e2.isConstructExp().e2;\n+            assert(elem);\n+\n+            auto cae = new CatAssignExp(e.loc, arr, elem);\n+            cae.type = arr.type;\n+\n+            result = interpret(cae, istate);\n+            return;\n+        }\n+\n         // If it creates a variable, and there's no context for\n         // the variable to be created in, we need to create one now.\n         InterState istateComma;\n@@ -6119,7 +6191,7 @@ public:\n             return;\n         }\n \n-        if (result.isStringExp())\n+        if (result.isStringExp() || result.isArrayLiteralExp())\n             return;\n \n         if (result.op != EXP.address)\n@@ -6268,7 +6340,7 @@ public:\n         result = (*se.elements)[i];\n         if (!result)\n         {\n-            e.error(\"Internal Compiler Error: null field `%s`\", v.toChars());\n+            e.error(\"internal compiler error: null field `%s`\", v.toChars());\n             result = CTFEExp.cantexp;\n             return;\n         }\n@@ -6359,6 +6431,33 @@ public:\n     {\n         assert(0); // This should never be interpreted\n     }\n+\n+    /*********************************************\n+     * Checks if the given expresion is a call to the runtime hook `id`.\n+     * Params:\n+     *    e = the expression to check\n+     *    id = the identifier of the runtime hook\n+     * Returns:\n+     *    `e` cast to `CallExp` if it's the hook, `null` otherwise\n+     */\n+    private CallExp isRuntimeHook(Expression e, Identifier id)\n+    {\n+        if (auto ce = e.isCallExp())\n+        {\n+            if (auto ve = ce.e1.isVarExp())\n+            {\n+                if (auto fd = ve.var.isFuncDeclaration())\n+                {\n+                    // If `_d_HookTraceImpl` is found, resolve the underlying\n+                    // hook and replace `e` and `fd` with it.\n+                    removeHookTraceImpl(ce, fd);\n+                    return fd.ident == id ? ce : null;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n }\n \n /********************************************"}, {"sha": "76042969b9b2542e53d1b07167d8e5717bae473a", "filename": "gcc/d/dmd/dmangle.d", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmangle.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1335,15 +1335,19 @@ void realToMangleBuffer(OutBuffer* buf, real_t value)\n private\n extern (D) const(char)[] externallyMangledIdentifier(Declaration d)\n {\n+    assert(!d.mangleOverride, \"mangle overrides should have been handled earlier\");\n+\n+    const linkage = d.resolvedLinkage();\n     const par = d.toParent(); //toParent() skips over mixin templates\n-    if (!par || par.isModule() || d.linkage == LINK.cpp ||\n-        (d.linkage == LINK.c && d.isCsymbol() && d.isFuncDeclaration()))\n+    if (!par || par.isModule() || linkage == LINK.cpp ||\n+        (linkage == LINK.c && d.isCsymbol() &&\n+         (d.isFuncDeclaration() ||\n+          (d.isVarDeclaration() && d.isDataseg() && d.storage_class & STC.extern_))))\n     {\n-        if (d.linkage != LINK.d && d.localNum)\n+        if (linkage != LINK.d && d.localNum)\n             d.error(\"the same declaration cannot be in multiple scopes with non-D linkage\");\n \n-        const l = d.linkage == LINK.system ? target.systemLinkage() : d.linkage;\n-        final switch (l)\n+        final switch (linkage)\n         {\n             case LINK.d:\n                 break;"}, {"sha": "26a0ff03092d6407d317064f7709f827a54baef4", "filename": "gcc/d/dmd/dmodule.d", "status": "modified", "additions": 50, "deletions": 6, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdmodule.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdmodule.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmodule.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -71,7 +71,7 @@ void semantic3OnDependencies(Module m)\n  */\n void removeHdrFilesAndFail(ref Param params, ref Modules modules) nothrow\n {\n-    if (params.doHdrGeneration)\n+    if (params.dihdr.doOutput)\n     {\n         foreach (m; modules)\n         {\n@@ -472,7 +472,7 @@ extern (C++) final class Module : Package\n         if (doDocComment)\n             setDocfile();\n         if (doHdrGen)\n-            hdrfile = setOutfilename(global.params.hdrname, global.params.hdrdir, arg, hdr_ext);\n+            hdrfile = setOutfilename(global.params.dihdr.name, global.params.dihdr.dir, arg, hdr_ext);\n     }\n \n     extern (D) this(const(char)[] filename, Identifier ident, int doDocComment, int doHdrGen)\n@@ -584,7 +584,7 @@ extern (C++) final class Module : Package\n \n     extern (D) void setDocfile()\n     {\n-        docfile = setOutfilename(global.params.docname, global.params.docdir, arg, doc_ext);\n+        docfile = setOutfilename(global.params.ddoc.name, global.params.ddoc.dir, arg, doc_ext);\n     }\n \n     /**\n@@ -662,11 +662,55 @@ extern (C++) final class Module : Package\n             return true; // already read\n \n         //printf(\"Module::read('%s') file '%s'\\n\", toChars(), srcfile.toChars());\n-        if (auto result = global.fileManager.lookup(srcfile))\n+\n+        /* Preprocess the file if it's a .c file\n+         */\n+        FileName filename = srcfile;\n+        bool ifile = false;             // did we generate a .i file\n+        scope (exit)\n+        {\n+            if (ifile)\n+                File.remove(filename.toChars());        // remove generated file\n+        }\n+\n+        if (global.preprocess &&\n+            FileName.equalsExt(srcfile.toString(), c_ext) &&\n+            FileName.exists(srcfile.toString()))\n+        {\n+            /* Look for \"importc.h\" by searching along import path.\n+             * It should be in the same place as \"object.d\"\n+             */\n+            const(char)* importc_h;\n+\n+            foreach (entry; (global.path ? (*global.path)[] : null))\n+            {\n+                auto f = FileName.combine(entry, \"importc.h\");\n+                if (FileName.exists(f) == 1)\n+                {\n+                     importc_h = f;\n+                     break;\n+                }\n+                FileName.free(f);\n+            }\n+\n+            if (importc_h)\n+            {\n+                if (global.params.verbose)\n+                    message(\"include   %s\", importc_h);\n+            }\n+            else\n+            {\n+                error(\"cannot find \\\"importc.h\\\" along import path\");\n+                fatal();\n+            }\n+            filename = global.preprocess(srcfile, importc_h, global.params.cppswitches, ifile);  // run C preprocessor\n+        }\n+\n+        if (auto result = global.fileManager.lookup(filename))\n         {\n             this.src = result;\n-            if (global.params.emitMakeDeps)\n-                global.params.makeDeps.push(srcfile.toChars());\n+            if (global.params.makeDeps.doOutput)\n+                global.params.makeDeps.files.push(srcfile.toChars());\n             return true;\n         }\n "}, {"sha": "6eb433e3d4a44558796856e5c75fe85e1b37adc3", "filename": "gcc/d/dmd/doc.d", "status": "modified", "additions": 14, "deletions": 85, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdoc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdoc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -384,11 +384,11 @@ extern(C++) void gendocfile(Module m)\n         // Override with DDOCFILE specified in the sc.ini file\n         char* p = getenv(\"DDOCFILE\");\n         if (p)\n-            global.params.ddocfiles.shift(p);\n+            global.params.ddoc.files.shift(p);\n         // Override with the ddoc macro files from the command line\n-        for (size_t i = 0; i < global.params.ddocfiles.dim; i++)\n+        for (size_t i = 0; i < global.params.ddoc.files.dim; i++)\n         {\n-            auto buffer = readFile(m.loc, global.params.ddocfiles[i]);\n+            auto buffer = readFile(m.loc, global.params.ddoc.files[i]);\n             // BUG: convert file contents to UTF-8 before use\n             const data = buffer.data;\n             //printf(\"file: '%.*s'\\n\", cast(int)data.length, data.ptr);\n@@ -628,7 +628,7 @@ private void escapeStrayParenthesis(Loc loc, OutBuffer* buf, size_t start, bool\n             break;\n         case '\\\\':\n             // replace backslash-escaped parens with their macros\n-            if (!inCode && respectBackslashEscapes && u+1 < buf.length && global.params.markdown)\n+            if (!inCode && respectBackslashEscapes && u+1 < buf.length)\n             {\n                 if ((*buf)[u+1] == '(' || (*buf)[u+1] == ')')\n                 {\n@@ -2317,8 +2317,6 @@ private void removeBlankLineMacro(ref OutBuffer buf, ref size_t iAt, ref size_t\n  */\n private bool replaceMarkdownThematicBreak(ref OutBuffer buf, ref size_t i, size_t iLineStart, const ref Loc loc)\n {\n-    if (!global.params.markdown)\n-        return false;\n \n     const slice = buf[];\n     const c = buf[i];\n@@ -2335,12 +2333,6 @@ private bool replaceMarkdownThematicBreak(ref OutBuffer buf, ref size_t i, size_\n     {\n         if (j >= buf.length || buf[j] == '\\n' || buf[j] == '\\r')\n         {\n-            if (global.params.vmarkdown)\n-            {\n-                const s = buf[][i..j];\n-                message(loc, \"Ddoc: converted '%.*s' to a thematic break\", cast(int)s.length, s.ptr);\n-            }\n-\n             buf.remove(iLineStart, j - iLineStart);\n             i = buf.insert(iLineStart, \"$(HR)\") - 1;\n             return true;\n@@ -2361,9 +2353,6 @@ private bool replaceMarkdownThematicBreak(ref OutBuffer buf, ref size_t i, size_\n  */\n private int detectAtxHeadingLevel(ref OutBuffer buf, const size_t i)\n {\n-    if (!global.params.markdown)\n-        return 0;\n-\n     const iHeadingStart = i;\n     const iAfterHashes = skipChars(buf, i, \"#\");\n     const headingLevel = cast(int) (iAfterHashes - iHeadingStart);\n@@ -2433,14 +2422,6 @@ private void removeAnyAtxHeadingSuffix(ref OutBuffer buf, size_t i)\n  */\n private void endMarkdownHeading(ref OutBuffer buf, size_t iStart, ref size_t iEnd, const ref Loc loc, ref int headingLevel)\n {\n-    if (!global.params.markdown)\n-        return;\n-    if (global.params.vmarkdown)\n-    {\n-        const s = buf[][iStart..iEnd];\n-        message(loc, \"Ddoc: added heading '%.*s'\", cast(int)s.length, s.ptr);\n-    }\n-\n     char[5] heading = \"$(H0 \";\n     heading[3] = cast(char) ('0' + headingLevel);\n     buf.insert(iStart, heading);\n@@ -2503,9 +2484,6 @@ private size_t endAllListsAndQuotes(ref OutBuffer buf, ref size_t i, ref Markdow\n  */\n private size_t replaceMarkdownEmphasis(ref OutBuffer buf, const ref Loc loc, ref MarkdownDelimiter[] inlineDelimiters, int downToLevel = 0)\n {\n-    if (!global.params.markdown)\n-        return 0;\n-\n     size_t replaceEmphasisPair(ref MarkdownDelimiter start, ref MarkdownDelimiter end)\n     {\n         immutable count = start.count == 1 || end.count == 1 ? 1 : 2;\n@@ -2521,12 +2499,6 @@ private size_t replaceMarkdownEmphasis(ref OutBuffer buf, const ref Loc loc, ref\n         if (!end.count)\n             end.type = 0;\n \n-        if (global.params.vmarkdown)\n-        {\n-            const s = buf[][iStart + count..iEnd];\n-            message(loc, \"Ddoc: emphasized text '%.*s'\", cast(int)s.length, s.ptr);\n-        }\n-\n         buf.remove(iStart, count);\n         iEnd -= count;\n         buf.remove(iEnd, count);\n@@ -2857,9 +2829,6 @@ private struct MarkdownList\n      */\n     static MarkdownList parseItem(ref OutBuffer buf, size_t iLineStart, size_t i)\n     {\n-        if (!global.params.markdown)\n-            return MarkdownList();\n-\n         if (buf[i] == '+' || buf[i] == '-' || buf[i] == '*')\n             return parseUnorderedListItem(buf, iLineStart, i);\n         else\n@@ -2931,15 +2900,6 @@ private struct MarkdownList\n         i = iStart - 1;\n         iLineStart = i;\n \n-        if (global.params.vmarkdown)\n-        {\n-            size_t iEnd = iStart;\n-            while (iEnd < buf.length && buf[iEnd] != '\\r' && buf[iEnd] != '\\n')\n-                ++iEnd;\n-            const s = buf[][iStart..iEnd];\n-            message(loc, \"Ddoc: starting list item '%.*s'\", cast(int)s.length, s.ptr);\n-        }\n-\n         return true;\n     }\n \n@@ -3122,13 +3082,6 @@ private struct MarkdownLink\n         immutable delta = replaceMarkdownEmphasis(buf, loc, inlineDelimiters, delimiterIndex);\n         iEnd += delta;\n         i += delta;\n-\n-        if (global.params.vmarkdown)\n-        {\n-            const s = buf[][delimiter.iStart..iEnd];\n-            message(loc, \"Ddoc: linking '%.*s' to '%.*s'\", cast(int)s.length, s.ptr, cast(int)link.href.length, link.href.ptr);\n-        }\n-\n         link.replaceLink(buf, i, iEnd, delimiter);\n         return true;\n     }\n@@ -3532,9 +3485,6 @@ private struct MarkdownLink\n      */\n     private void storeAndReplaceDefinition(ref OutBuffer buf, ref size_t i, size_t iEnd, ref MarkdownLinkReferences linkReferences, const ref Loc loc)\n     {\n-        if (global.params.vmarkdown)\n-            message(loc, \"Ddoc: found link reference '%.*s' to '%.*s'\", cast(int)label.length, label.ptr, cast(int)href.length, href.ptr);\n-\n         // Remove the definition and trailing whitespace\n         iEnd = skipChars(buf, iEnd, \" \\t\\r\\n\");\n         buf.remove(i, iEnd - i);\n@@ -4050,12 +4000,6 @@ private bool replaceTableRow(ref OutBuffer buf, size_t iStart, size_t iEnd, cons\n     if (headerRow && cellCount != columnAlignments.length)\n         return false;\n \n-    if (headerRow && global.params.vmarkdown)\n-    {\n-        const s = buf[][iStart..iEnd];\n-        message(loc, \"Ddoc: formatting table '%.*s'\", cast(int)s.length, s.ptr);\n-    }\n-\n     void replaceTableCell(size_t iCellStart, size_t iCellEnd, int cellIndex, int di)\n     {\n         const eDelta = replaceMarkdownEmphasis(buf, loc, inlineDelimiters, di);\n@@ -4378,17 +4322,8 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n \n         case '>':\n             {\n-                if (leadingBlank && (!inCode || quoteLevel) && global.params.markdown)\n+                if (leadingBlank && (!inCode || quoteLevel))\n                 {\n-                    if (!quoteLevel && global.params.vmarkdown)\n-                    {\n-                        size_t iEnd = i + 1;\n-                        while (iEnd < buf.length && buf[iEnd] != '\\n')\n-                            ++iEnd;\n-                        const s = buf[][i .. iEnd];\n-                        message(loc, \"Ddoc: starting quote block with '%.*s'\", cast(int)s.length, s.ptr);\n-                    }\n-\n                     lineQuoted = true;\n                     int lineQuoteLevel = 1;\n                     size_t iAfterDelimiters = i + 1;\n@@ -4488,7 +4423,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n                 }\n \n                 // Perhaps we're starting or ending a Markdown code block\n-                if (leadingBlank && global.params.markdown && count >= 3)\n+                if (leadingBlank && count >= 3)\n                 {\n                     bool moreBackticks = false;\n                     for (size_t j = iAfterDelimiter; !moreBackticks && j < buf.length; ++j)\n@@ -4548,7 +4483,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n \n         case '~':\n             {\n-                if (leadingBlank && global.params.markdown)\n+                if (leadingBlank)\n                 {\n                     // Perhaps we're starting or ending a Markdown code block\n                     const iAfterDelimiter = skipChars(buf, i, \"~\");\n@@ -4613,7 +4548,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n                     // BUG: handle UTF PS and LS too\n                     if (c != c0 || iInfoString)\n                     {\n-                        if (global.params.markdown && !iInfoString && !inCode && i - istart >= 3)\n+                        if (!iInfoString && !inCode && i - istart >= 3)\n                         {\n                             // Start a Markdown info string, like ```ruby\n                             codeFenceLength = i - istart;\n@@ -4711,9 +4646,6 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n                             if (codeLanguage[j] == '\\\\' && ispunct(codeLanguage[j + 1]))\n                                 codeLanguage = codeLanguage[0..j] ~ codeLanguage[j + 1..$];\n \n-                        if (global.params.vmarkdown)\n-                            message(loc, \"Ddoc: adding code block for language '%.*s'\", cast(int)codeLanguage.length, codeLanguage.ptr);\n-\n                         i = buf.insert(i, \"$(OTHER_CODE \");\n                         i = buf.insert(i, codeLanguage);\n                         i = buf.insert(i, \",\");\n@@ -4779,7 +4711,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n \n         case '*':\n         {\n-            if (inCode || inBacktick || !global.params.markdown)\n+            if (inCode || inBacktick)\n             {\n                 leadingBlank = false;\n                 break;\n@@ -4829,7 +4761,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n         {\n             leadingBlank = false;\n \n-            if (inCode || !global.params.markdown)\n+            if (inCode)\n                 break;\n \n             if (i < buf.length-1 && buf[i+1] == '[')\n@@ -4842,7 +4774,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n         }\n         case '[':\n         {\n-            if (inCode || !global.params.markdown)\n+            if (inCode)\n             {\n                 leadingBlank = false;\n                 break;\n@@ -4860,7 +4792,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n         {\n             leadingBlank = false;\n \n-            if (inCode || !global.params.markdown)\n+            if (inCode)\n                 break;\n \n             for (int d = cast(int) inlineDelimiters.length - 1; d >= 0; --d)\n@@ -4894,7 +4826,7 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n \n         case '|':\n         {\n-            if (inCode || !global.params.markdown)\n+            if (inCode)\n             {\n                 leadingBlank = false;\n                 break;\n@@ -4909,16 +4841,13 @@ private void highlightText(Scope* sc, Dsymbols* a, Loc loc, ref OutBuffer buf, s\n         case '\\\\':\n         {\n             leadingBlank = false;\n-            if (inCode || i+1 >= buf.length || !global.params.markdown)\n+            if (inCode || i+1 >= buf.length)\n                 break;\n \n             /* Escape Markdown special characters */\n             char c1 = buf[i+1];\n             if (ispunct(c1))\n             {\n-                if (global.params.vmarkdown)\n-                    message(loc, \"Ddoc: backslash-escaped %c\", c1);\n-\n                 buf.remove(i, 1);\n \n                 auto se = sc._module.escapetable.escapeChar(c1);"}, {"sha": "b546e3720033d5e0fc2dc32bff8392044f9d53e6", "filename": "gcc/d/dmd/dscope.d", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdscope.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdscope.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdscope.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -63,7 +63,6 @@ enum SCOPE\n     free          = 0x8000,   /// is on free list\n \n     fullinst      = 0x10000,  /// fully instantiate templates\n-    alias_        = 0x20000,  /// inside alias declaration.\n \n     // The following are mutually exclusive\n     printf        = 0x4_0000, /// printf-style function"}, {"sha": "b0069403408fa8cda0a4ccf5618e634be9f21474", "filename": "gcc/d/dmd/dsymbol.d", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdsymbol.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdsymbol.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -984,7 +984,7 @@ extern (C++) class Dsymbol : ASTNode\n      */\n     uinteger_t size(const ref Loc loc)\n     {\n-        error(\"Dsymbol `%s` has no size\", toChars());\n+        error(\"symbol `%s` has no size\", toChars());\n         return SIZE_INVALID;\n     }\n \n@@ -1641,6 +1641,32 @@ public:\n         }\n     }\n \n+\n+    /*****************************************\n+     * Returns: the symbols whose members have been imported, i.e. imported modules\n+     * and template mixins.\n+     *\n+     * See_Also: importScope\n+     */\n+    extern (D) final Dsymbols* getImportedScopes() nothrow @nogc @safe pure\n+    {\n+        return importedScopes;\n+    }\n+\n+    /*****************************************\n+     * Returns: the array of visibilities associated with each imported scope. The\n+     * length of the array matches the imported scopes array.\n+     *\n+     * See_Also: getImportedScopes\n+     */\n+    extern (D) final Visibility.Kind[] getImportVisibilities() nothrow @nogc @safe pure\n+    {\n+        if (!importedScopes)\n+            return null;\n+\n+        return (() @trusted => visibilities[0 .. importedScopes.dim])();\n+    }\n+\n     extern (D) final void addAccessiblePackage(Package p, Visibility visibility) nothrow\n     {\n         auto pary = visibility.kind == Visibility.Kind.private_ ? &privateAccessiblePackages : &accessiblePackages;"}, {"sha": "5d880560c4ee00e53a5ce7bbfeaf56848b7f5a8f", "filename": "gcc/d/dmd/dsymbolsem.d", "status": "modified", "additions": 255, "deletions": 245, "changes": 500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbolsem.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -376,7 +376,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         // https://issues.dlang.org/show_bug.cgi?id=19482\n         if ((dsym.storage_class & (STC.foreach_ | STC.local)) == (STC.foreach_ | STC.local))\n         {\n-            dsym.linkage = LINK.d;\n+            dsym._linkage = LINK.d;\n             dsym.visibility = Visibility(Visibility.Kind.public_);\n             dsym.overlapped = false; // unset because it is modified early on this function\n             dsym.userAttribDecl = null; // unset because it is set by Dsymbol.setScope()\n@@ -389,7 +389,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n             dsym.storage_class |= (sc.stc & ~(STC.synchronized_ | STC.override_ | STC.abstract_ | STC.final_));\n             dsym.userAttribDecl = sc.userAttribDecl;\n             dsym.cppnamespace = sc.namespace;\n-            dsym.linkage = sc.linkage;\n+            dsym._linkage = sc.linkage;\n             dsym.visibility = sc.visibility;\n             dsym.alignment = sc.alignment();\n         }\n@@ -472,8 +472,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         {\n             if (dsym.storage_class & STC.gshared && !dsym.isMember())\n             {\n-                if (sc.func.setUnsafe())\n-                    dsym.error(\"__gshared not allowed in safe functions; use shared\");\n+                sc.func.setUnsafe(false, dsym.loc, \"__gshared not allowed in safe functions; use shared\");\n             }\n         }\n \n@@ -863,20 +862,18 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n             if (dsym._init && dsym._init.isVoidInitializer() &&\n                 (dsym.type.hasPointers() || dsym.type.hasInvariant())) // also computes type size\n             {\n-                if (sc.func.setUnsafe())\n-                {\n-                    if (dsym.type.hasPointers())\n-                        dsym.error(\"`void` initializers for pointers not allowed in safe functions\");\n-                    else\n-                        dsym.error(\"`void` initializers for structs with invariants are not allowed in safe functions\");\n-                }\n+                if (dsym.type.hasPointers())\n+                    sc.func.setUnsafe(false, dsym.loc,\n+                        \"`void` initializers for pointers not allowed in safe functions\");\n+                else\n+                    sc.func.setUnsafe(false, dsym.loc,\n+                        \"`void` initializers for structs with invariants are not allowed in safe functions\");\n             }\n             else if (!dsym._init &&\n                      !(dsym.storage_class & (STC.static_ | STC.extern_ | STC.gshared | STC.manifest | STC.field | STC.parameter)) &&\n                      dsym.type.hasVoidInitPointers())\n             {\n-                if (sc.func.setUnsafe())\n-                    dsym.error(\"`void` initializers for pointers not allowed in safe functions\");\n+                sc.func.setUnsafe(false, dsym.loc, \"`void` initializers for pointers not allowed in safe functions\");\n             }\n         }\n \n@@ -891,6 +888,15 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         else if (dsym.storage_class & STC.manifest)\n             dsym.error(\"manifest constants must have initializers\");\n \n+        // Don't allow non-extern, non-__gshared variables to be interfaced with C++\n+        if (dsym._linkage == LINK.cpp && !(dsym.storage_class & (STC.ctfe | STC.extern_ | STC.gshared)) && dsym.isDataseg())\n+        {\n+            const char* p = (dsym.storage_class & STC.shared_) ? \"shared\" : \"static\";\n+            dsym.error(\"cannot have `extern(C++)` linkage because it is `%s`\", p);\n+            errorSupplemental(dsym.loc, \"perhaps declare it as `__gshared` instead\");\n+            dsym.errors = true;\n+        }\n+\n         bool isBlit = false;\n         uinteger_t sz;\n         if (sc.flags & SCOPE.Cfile && !dsym._init)\n@@ -1191,7 +1197,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n \n     override void visit(TypeInfoDeclaration dsym)\n     {\n-        assert(dsym.linkage == LINK.c);\n+        assert(dsym._linkage == LINK.c);\n     }\n \n     override void visit(BitFieldDeclaration dsym)\n@@ -1204,6 +1210,11 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         if (dsym.errors)\n             return;\n \n+        if (!dsym.parent.isStructDeclaration() && !dsym.parent.isClassDeclaration())\n+        {\n+            dsym.error(\"bit-field must be member of struct, union, or class\");\n+        }\n+\n         sc = sc.startCTFE();\n         auto width = dsym.width.expressionSemantic(sc);\n         sc = sc.endCTFE();\n@@ -1239,7 +1250,12 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n \n     override void visit(Import imp)\n     {\n-        //printf(\"Import::semantic('%s') %s\\n\", toPrettyChars(), id.toChars());\n+        static if (LOG)\n+        {\n+            printf(\"Import::semantic('%s') %s\\n\", toPrettyChars(), id.toChars());\n+            scope(exit)\n+                printf(\"-Import::semantic('%s'), pkg = %p\\n\", toChars(), pkg);\n+        }\n         if (imp.semanticRun > PASS.initial)\n             return;\n \n@@ -1349,70 +1365,69 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         // don't list pseudo modules __entrypoint.d, __main.d\n         // https://issues.dlang.org/show_bug.cgi?id=11117\n         // https://issues.dlang.org/show_bug.cgi?id=11164\n-        if (global.params.moduleDeps !is null && !(imp.id == Id.object && sc._module.ident == Id.object) &&\n-            strcmp(sc._module.ident.toChars(), \"__main\") != 0)\n-        {\n-            /* The grammar of the file is:\n-             *      ImportDeclaration\n-             *          ::= BasicImportDeclaration [ \" : \" ImportBindList ] [ \" -> \"\n-             *      ModuleAliasIdentifier ] \"\\n\"\n-             *\n-             *      BasicImportDeclaration\n-             *          ::= ModuleFullyQualifiedName \" (\" FilePath \") : \" Protection|\"string\"\n-             *              \" [ \" static\" ] : \" ModuleFullyQualifiedName \" (\" FilePath \")\"\n-             *\n-             *      FilePath\n-             *          - any string with '(', ')' and '\\' escaped with the '\\' character\n-             */\n-            OutBuffer* ob = global.params.moduleDeps;\n-            Module imod = sc._module;\n-            if (!global.params.moduleDepsFile)\n-                ob.writestring(\"depsImport \");\n-            ob.writestring(imod.toPrettyChars());\n-            ob.writestring(\" (\");\n-            escapePath(ob, imod.srcfile.toChars());\n-            ob.writestring(\") : \");\n-            // use visibility instead of sc.visibility because it couldn't be\n-            // resolved yet, see the comment above\n-            visibilityToBuffer(ob, imp.visibility);\n+        if (global.params.moduleDeps.buffer is null || (imp.id == Id.object && sc._module.ident == Id.object) ||\n+            strcmp(sc._module.ident.toChars(), \"__main\") == 0)\n+            return;\n+\n+        /* The grammar of the file is:\n+         *      ImportDeclaration\n+         *          ::= BasicImportDeclaration [ \" : \" ImportBindList ] [ \" -> \"\n+         *      ModuleAliasIdentifier ] \"\\n\"\n+         *\n+         *      BasicImportDeclaration\n+         *          ::= ModuleFullyQualifiedName \" (\" FilePath \") : \" Protection|\"string\"\n+         *              \" [ \" static\" ] : \" ModuleFullyQualifiedName \" (\" FilePath \")\"\n+         *\n+         *      FilePath\n+         *          - any string with '(', ')' and '\\' escaped with the '\\' character\n+         */\n+        OutBuffer* ob = global.params.moduleDeps.buffer;\n+        Module imod = sc._module;\n+        if (!global.params.moduleDeps.name)\n+            ob.writestring(\"depsImport \");\n+        ob.writestring(imod.toPrettyChars());\n+        ob.writestring(\" (\");\n+        escapePath(ob, imod.srcfile.toChars());\n+        ob.writestring(\") : \");\n+        // use visibility instead of sc.visibility because it couldn't be\n+        // resolved yet, see the comment above\n+        visibilityToBuffer(ob, imp.visibility);\n+        ob.writeByte(' ');\n+        if (imp.isstatic)\n+        {\n+            stcToBuffer(ob, STC.static_);\n             ob.writeByte(' ');\n-            if (imp.isstatic)\n-            {\n-                stcToBuffer(ob, STC.static_);\n-                ob.writeByte(' ');\n-            }\n-            ob.writestring(\": \");\n-            foreach (pid; imp.packages)\n-            {\n-                ob.printf(\"%s.\", pid.toChars());\n-            }\n-            ob.writestring(imp.id.toString());\n-            ob.writestring(\" (\");\n-            if (imp.mod)\n-                escapePath(ob, imp.mod.srcfile.toChars());\n+        }\n+        ob.writestring(\": \");\n+        foreach (pid; imp.packages)\n+        {\n+            ob.printf(\"%s.\", pid.toChars());\n+        }\n+        ob.writestring(imp.id.toString());\n+        ob.writestring(\" (\");\n+        if (imp.mod)\n+            escapePath(ob, imp.mod.srcfile.toChars());\n+        else\n+            ob.writestring(\"???\");\n+        ob.writeByte(')');\n+        foreach (i, name; imp.names)\n+        {\n+            if (i == 0)\n+                ob.writeByte(':');\n             else\n-                ob.writestring(\"???\");\n-            ob.writeByte(')');\n-            foreach (i, name; imp.names)\n+                ob.writeByte(',');\n+            Identifier _alias = imp.aliases[i];\n+            if (!_alias)\n             {\n-                if (i == 0)\n-                    ob.writeByte(':');\n-                else\n-                    ob.writeByte(',');\n-                Identifier _alias = imp.aliases[i];\n-                if (!_alias)\n-                {\n-                    ob.printf(\"%s\", name.toChars());\n-                    _alias = name;\n-                }\n-                else\n-                    ob.printf(\"%s=%s\", _alias.toChars(), name.toChars());\n+                ob.printf(\"%s\", name.toChars());\n+                _alias = name;\n             }\n-            if (imp.aliasId)\n-                ob.printf(\" -> %s\", imp.aliasId.toChars());\n-            ob.writenl();\n+            else\n+                ob.printf(\"%s=%s\", _alias.toChars(), name.toChars());\n         }\n-        //printf(\"-Import::semantic('%s'), pkg = %p\\n\", toChars(), pkg);\n+        if (imp.aliasId)\n+            ob.printf(\" -> %s\", imp.aliasId.toChars());\n+        ob.writenl();\n     }\n \n     void attribSemantic(AttribDeclaration ad)\n@@ -1457,24 +1472,24 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n             return;\n         }\n \n-        if (scd.decl)\n+        if (!scd.decl)\n+            return;\n+\n+        sc = sc.push();\n+        sc.stc &= ~(STC.auto_ | STC.scope_ | STC.static_ | STC.gshared);\n+        sc.inunion = scd.isunion ? scd : null;\n+        sc.flags = 0;\n+        for (size_t i = 0; i < scd.decl.dim; i++)\n         {\n-            sc = sc.push();\n-            sc.stc &= ~(STC.auto_ | STC.scope_ | STC.static_ | STC.gshared);\n-            sc.inunion = scd.isunion ? scd : null;\n-            sc.flags = 0;\n-            for (size_t i = 0; i < scd.decl.dim; i++)\n+            Dsymbol s = (*scd.decl)[i];\n+            if (auto var = s.isVarDeclaration)\n             {\n-                Dsymbol s = (*scd.decl)[i];\n-                if (auto var = s.isVarDeclaration)\n-                {\n-                    if (scd.isunion)\n-                        var.overlapped = true;\n-                }\n-                s.dsymbolSemantic(sc);\n+                if (scd.isunion)\n+                    var.overlapped = true;\n             }\n-            sc = sc.pop();\n+            s.dsymbolSemantic(sc);\n         }\n+        sc = sc.pop();\n     }\n \n     override void visit(PragmaDeclaration pd)\n@@ -1633,32 +1648,33 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         }\n         if (pd.ident == Id.msg)\n         {\n-            if (pd.args)\n+            if (!pd.args)\n+                return noDeclarations();\n+\n+            for (size_t i = 0; i < pd.args.dim; i++)\n             {\n-                for (size_t i = 0; i < pd.args.dim; i++)\n+                Expression e = (*pd.args)[i];\n+                sc = sc.startCTFE();\n+                e = e.expressionSemantic(sc);\n+                e = resolveProperties(sc, e);\n+                sc = sc.endCTFE();\n+                e = ctfeInterpretForPragmaMsg(e);\n+                if (e.op == EXP.error)\n                 {\n-                    Expression e = (*pd.args)[i];\n-                    sc = sc.startCTFE();\n-                    e = e.expressionSemantic(sc);\n-                    e = resolveProperties(sc, e);\n-                    sc = sc.endCTFE();\n-                    e = ctfeInterpretForPragmaMsg(e);\n-                    if (e.op == EXP.error)\n-                    {\n-                        errorSupplemental(pd.loc, \"while evaluating `pragma(msg, %s)`\", (*pd.args)[i].toChars());\n-                        return;\n-                    }\n-                    StringExp se = e.toStringExp();\n-                    if (se)\n-                    {\n-                        se = se.toUTF8(sc);\n-                        fprintf(stderr, \"%.*s\", cast(int)se.len, se.peekString().ptr);\n-                    }\n-                    else\n-                        fprintf(stderr, \"%s\", e.toChars());\n+                    errorSupplemental(pd.loc, \"while evaluating `pragma(msg, %s)`\", (*pd.args)[i].toChars());\n+                    return;\n                 }\n-                fprintf(stderr, \"\\n\");\n+                StringExp se = e.toStringExp();\n+                if (se)\n+                {\n+                    se = se.toUTF8(sc);\n+                    fprintf(stderr, \"%.*s\", cast(int)se.len, se.peekString().ptr);\n+                }\n+                else\n+                    fprintf(stderr, \"%s\", e.toChars());\n             }\n+            fprintf(stderr, \"\\n\");\n+\n             return noDeclarations();\n         }\n         else if (pd.ident == Id.lib)\n@@ -1675,9 +1691,9 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n                 auto name = se.peekString().xarraydup;\n                 if (global.params.verbose)\n                     message(\"library   %s\", name.ptr);\n-                if (global.params.moduleDeps && !global.params.moduleDepsFile)\n+                if (global.params.moduleDeps.buffer && !global.params.moduleDeps.name)\n                 {\n-                    OutBuffer* ob = global.params.moduleDeps;\n+                    OutBuffer* ob = global.params.moduleDeps.buffer;\n                     Module imod = sc._module;\n                     ob.writestring(\"depsLib \");\n                     ob.writestring(imod.toPrettyChars());\n@@ -1892,49 +1908,49 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n                 return Identifier.idPool(sident);\n         }\n \n-        if (ns.ident is null)\n-        {\n-            ns.cppnamespace = sc.namespace;\n-            sc = sc.startCTFE();\n-            ns.exp = ns.exp.expressionSemantic(sc);\n-            ns.exp = resolveProperties(sc, ns.exp);\n-            sc = sc.endCTFE();\n-            ns.exp = ns.exp.ctfeInterpret();\n-            // Can be either a tuple of strings or a string itself\n-            if (auto te = ns.exp.isTupleExp())\n-            {\n-                expandTuples(te.exps);\n-                CPPNamespaceDeclaration current = ns.cppnamespace;\n-                for (size_t d = 0; d < te.exps.dim; ++d)\n+        if (ns.ident !is null)\n+            return attribSemantic(ns);\n+\n+        ns.cppnamespace = sc.namespace;\n+        sc = sc.startCTFE();\n+        ns.exp = ns.exp.expressionSemantic(sc);\n+        ns.exp = resolveProperties(sc, ns.exp);\n+        sc = sc.endCTFE();\n+        ns.exp = ns.exp.ctfeInterpret();\n+        // Can be either a tuple of strings or a string itself\n+        if (auto te = ns.exp.isTupleExp())\n+        {\n+            expandTuples(te.exps);\n+            CPPNamespaceDeclaration current = ns.cppnamespace;\n+            for (size_t d = 0; d < te.exps.dim; ++d)\n+            {\n+                auto exp = (*te.exps)[d];\n+                auto prev = d ? current : ns.cppnamespace;\n+                current = (d + 1) != te.exps.dim\n+                    ? new CPPNamespaceDeclaration(ns.loc, exp, null)\n+                    : ns;\n+                current.exp = exp;\n+                current.cppnamespace = prev;\n+                if (auto se = exp.toStringExp())\n                 {\n-                    auto exp = (*te.exps)[d];\n-                    auto prev = d ? current : ns.cppnamespace;\n-                    current = (d + 1) != te.exps.dim\n-                        ? new CPPNamespaceDeclaration(ns.loc, exp, null)\n-                        : ns;\n-                    current.exp = exp;\n-                    current.cppnamespace = prev;\n-                    if (auto se = exp.toStringExp())\n-                    {\n-                        current.ident = identFromSE(se);\n-                        if (current.ident is null)\n-                            return; // An error happened in `identFromSE`\n-                    }\n-                    else\n-                        ns.exp.error(\"`%s`: index %llu is not a string constant, it is a `%s`\",\n-                                     ns.exp.toChars(), cast(ulong) d, ns.exp.type.toChars());\n+                    current.ident = identFromSE(se);\n+                    if (current.ident is null)\n+                        return; // An error happened in `identFromSE`\n                 }\n+                else\n+                    ns.exp.error(\"`%s`: index %llu is not a string constant, it is a `%s`\",\n+                                 ns.exp.toChars(), cast(ulong) d, ns.exp.type.toChars());\n             }\n-            else if (auto se = ns.exp.toStringExp())\n-                ns.ident = identFromSE(se);\n-            // Empty Tuple\n-            else if (ns.exp.isTypeExp() && ns.exp.isTypeExp().type.toBasetype().isTypeTuple())\n-            {\n-            }\n-            else\n-                ns.exp.error(\"compile time string constant (or tuple) expected, not `%s`\",\n-                             ns.exp.toChars());\n         }\n+        else if (auto se = ns.exp.toStringExp())\n+            ns.ident = identFromSE(se);\n+        // Empty Tuple\n+        else if (ns.exp.isTypeExp() && ns.exp.isTypeExp().type.toBasetype().isTypeTuple())\n+        {\n+        }\n+        else\n+            ns.exp.error(\"compile time string constant (or tuple) expected, not `%s`\",\n+                         ns.exp.toChars());\n         attribSemantic(ns);\n     }\n \n@@ -2174,7 +2190,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n \n                 em.semanticRun = PASS.semantic;\n                 em.type = Type.tint32;\n-                em.linkage = LINK.c;\n+                em._linkage = LINK.c;\n                 em.storage_class |= STC.manifest;\n                 if (em.value)\n                 {\n@@ -2264,7 +2280,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         em.semanticRun = PASS.semantic;\n \n         em.visibility = em.ed.isAnonymous() ? em.ed.visibility : Visibility(Visibility.Kind.public_);\n-        em.linkage = LINK.d;\n+        em._linkage = LINK.d;\n         em.storage_class |= STC.manifest;\n \n         // https://issues.dlang.org/show_bug.cgi?id=9701\n@@ -2538,7 +2554,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         Scope* paramscope = sc.push(paramsym);\n         paramscope.stc = 0;\n \n-        if (global.params.doDocComments)\n+        if (global.params.ddoc.doOutput)\n         {\n             tempdecl.origParameters = new TemplateParameters(tempdecl.parameters.dim);\n             for (size_t i = 0; i < tempdecl.parameters.dim; i++)\n@@ -2824,7 +2840,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n          */\n         //if (!sc.func && Module.deferred.dim > deferred_dim) {}\n \n-        AggregateDeclaration ad = tm.toParent().isAggregateDeclaration();\n+        AggregateDeclaration ad = tm.isMember();\n         if (sc.func && !ad)\n         {\n             tm.semantic2(sc2);\n@@ -2855,6 +2871,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         static if (LOG)\n         {\n             printf(\"+Nspace::semantic('%s')\\n\", ns.toChars());\n+            scope(exit) printf(\"-Nspace::semantic('%s')\\n\", ns.toChars());\n         }\n         if (ns._scope)\n         {\n@@ -2931,36 +2948,34 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         // Link does not matter here, if the UDA is present it will error\n         UserAttributeDeclaration.checkGNUABITag(ns, LINK.cpp);\n \n-        if (ns.members)\n+        if (!ns.members)\n+        {\n+            ns.semanticRun = PASS.semanticdone;\n+            return;\n+        }\n+        assert(sc);\n+        sc = sc.push(ns);\n+        sc.linkage = LINK.cpp; // note that namespaces imply C++ linkage\n+        sc.parent = ns;\n+        foreach (s; *ns.members)\n         {\n-            assert(sc);\n-            sc = sc.push(ns);\n-            sc.linkage = LINK.cpp; // note that namespaces imply C++ linkage\n-            sc.parent = ns;\n-            foreach (s; *ns.members)\n+            if (repopulateMembers)\n             {\n-                if (repopulateMembers)\n-                {\n-                    s.addMember(sc, sc.scopesym);\n-                    s.setScope(sc);\n-                }\n-                s.importAll(sc);\n+                s.addMember(sc, sc.scopesym);\n+                s.setScope(sc);\n             }\n-            foreach (s; *ns.members)\n+            s.importAll(sc);\n+        }\n+        foreach (s; *ns.members)\n+        {\n+            static if (LOG)\n             {\n-                static if (LOG)\n-                {\n-                    printf(\"\\tmember '%s', kind = '%s'\\n\", s.toChars(), s.kind());\n-                }\n-                s.dsymbolSemantic(sc);\n+                printf(\"\\tmember '%s', kind = '%s'\\n\", s.toChars(), s.kind());\n             }\n-            sc.pop();\n+            s.dsymbolSemantic(sc);\n         }\n+        sc.pop();\n         ns.semanticRun = PASS.semanticdone;\n-        static if (LOG)\n-        {\n-            printf(\"-Nspace::semantic('%s')\\n\", ns.toChars());\n-        }\n     }\n \n     void funcDeclarationSemantic(FuncDeclaration funcdecl)\n@@ -3024,7 +3039,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n         if (sc.flags & SCOPE.compile)\n             funcdecl.flags |= FUNCFLAG.compileTimeOnly; // don't emit code for this function\n \n-        funcdecl.linkage = sc.linkage;\n+        funcdecl._linkage = sc.linkage;\n         if (auto fld = funcdecl.isFuncLiteralDeclaration())\n         {\n             if (fld.treq)\n@@ -3037,27 +3052,17 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n                     fld.tok = TOK.function_;\n                 else\n                     assert(0);\n-                funcdecl.linkage = treq.nextOf().toTypeFunction().linkage;\n+                funcdecl._linkage = treq.nextOf().toTypeFunction().linkage;\n             }\n         }\n \n         // evaluate pragma(inline)\n         if (auto pragmadecl = sc.inlining)\n             funcdecl.inlining = pragmadecl.evalPragmaInline(sc);\n \n-        // check pragma(crt_constructor)\n-        if (funcdecl.flags & (FUNCFLAG.CRTCtor | FUNCFLAG.CRTDtor))\n-        {\n-            if (funcdecl.linkage != LINK.c)\n-            {\n-                funcdecl.error(\"must be `extern(C)` for `pragma(%s)`\",\n-                    (funcdecl.flags & FUNCFLAG.CRTCtor) ? \"crt_constructor\".ptr : \"crt_destructor\".ptr);\n-            }\n-        }\n-\n         funcdecl.visibility = sc.visibility;\n         funcdecl.userAttribDecl = sc.userAttribDecl;\n-        UserAttributeDeclaration.checkGNUABITag(funcdecl, funcdecl.linkage);\n+        UserAttributeDeclaration.checkGNUABITag(funcdecl, funcdecl._linkage);\n         checkMustUseReserved(funcdecl);\n \n         if (!funcdecl.originalType)\n@@ -3193,7 +3198,7 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n                 tf.isScopeQual = false;\n             }\n \n-            sc.linkage = funcdecl.linkage;\n+            sc.linkage = funcdecl._linkage;\n \n             if (!tf.isNaked() && !(funcdecl.isThis() || funcdecl.isNested()))\n             {\n@@ -3243,6 +3248,16 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n             funcdecl.storage_class &= ~(STC.TYPECTOR | STC.FUNCATTR);\n         }\n \n+        // check pragma(crt_constructor) signature\n+        if (funcdecl.flags & (FUNCFLAG.CRTCtor | FUNCFLAG.CRTDtor))\n+        {\n+            const idStr = (funcdecl.flags & FUNCFLAG.CRTCtor) ? \"crt_constructor\" : \"crt_destructor\";\n+            if (f.nextOf().ty != Tvoid)\n+                funcdecl.error(\"must return `void` for `pragma(%s)`\", idStr.ptr);\n+            if (funcdecl._linkage != LINK.c && f.parameterList.length != 0)\n+                funcdecl.error(\"must be `extern(C)` for `pragma(%s)` when taking parameters\", idStr.ptr);\n+        }\n+\n         if (funcdecl.overnext && funcdecl.isCsymbol())\n         {\n             /* C does not allow function overloading, but it does allow\n@@ -4027,67 +4042,67 @@ private extern(C++) final class DsymbolSemanticVisitor : Visitor\n          */\n         if (ad && (!ctd.parent.isTemplateInstance() || ctd.parent.isTemplateMixin()))\n         {\n-            if (sd)\n+            if (!sd)\n             {\n-                if (dim == 0 && tf.parameterList.varargs == VarArg.none) // empty default ctor w/o any varargs\n-                {\n-                    if (ctd.fbody || !(ctd.storage_class & STC.disable))\n-                    {\n-                        ctd.error(\"default constructor for structs only allowed \" ~\n-                            \"with `@disable`, no body, and no parameters\");\n-                        ctd.storage_class |= STC.disable;\n-                        ctd.fbody = null;\n-                    }\n-                    sd.noDefaultCtor = true;\n-                }\n-                else if (dim == 0 && tf.parameterList.varargs != VarArg.none) // allow varargs only ctor\n-                {\n-                }\n-                else if (dim && tf.parameterList[0].defaultArg)\n+                if (dim == 0 && tf.parameterList.varargs == VarArg.none)\n+                    ad.defaultCtor = ctd;\n+                return;\n+            }\n+\n+            if (dim == 0 && tf.parameterList.varargs == VarArg.none) // empty default ctor w/o any varargs\n+            {\n+                if (ctd.fbody || !(ctd.storage_class & STC.disable))\n                 {\n-                    // if the first parameter has a default argument, then the rest does as well\n-                    if (ctd.storage_class & STC.disable)\n-                    {\n-                        ctd.error(\"is marked `@disable`, so it cannot have default \"~\n-                                  \"arguments for all parameters.\");\n-                        errorSupplemental(ctd.loc, \"Use `@disable this();` if you want to disable default initialization.\");\n-                    }\n-                    else\n-                        ctd.error(\"all parameters have default arguments, \"~\n-                                  \"but structs cannot have default constructors.\");\n+                    ctd.error(\"default constructor for structs only allowed \" ~\n+                        \"with `@disable`, no body, and no parameters\");\n+                    ctd.storage_class |= STC.disable;\n+                    ctd.fbody = null;\n                 }\n-                else if ((dim == 1 || (dim > 1 && tf.parameterList[1].defaultArg)))\n+                sd.noDefaultCtor = true;\n+            }\n+            else if (dim == 0 && tf.parameterList.varargs != VarArg.none) // allow varargs only ctor\n+            {\n+            }\n+            else if (dim && tf.parameterList[0].defaultArg)\n+            {\n+                // if the first parameter has a default argument, then the rest does as well\n+                if (ctd.storage_class & STC.disable)\n                 {\n-                    //printf(\"tf: %s\\n\", tf.toChars());\n-                    auto param = tf.parameterList[0];\n-                    if (param.storageClass & STC.ref_ && param.type.mutableOf().unSharedOf() == sd.type.mutableOf().unSharedOf())\n-                    {\n-                        //printf(\"copy constructor\\n\");\n-                        ctd.isCpCtor = true;\n-                    }\n+                    ctd.error(\"is marked `@disable`, so it cannot have default \"~\n+                              \"arguments for all parameters.\");\n+                    errorSupplemental(ctd.loc, \"Use `@disable this();` if you want to disable default initialization.\");\n                 }\n+                else\n+                    ctd.error(\"all parameters have default arguments, \"~\n+                              \"but structs cannot have default constructors.\");\n             }\n-            else if (dim == 0 && tf.parameterList.varargs == VarArg.none)\n+            else if ((dim == 1 || (dim > 1 && tf.parameterList[1].defaultArg)))\n             {\n-                ad.defaultCtor = ctd;\n+                //printf(\"tf: %s\\n\", tf.toChars());\n+                auto param = tf.parameterList[0];\n+                if (param.storageClass & STC.ref_ && param.type.mutableOf().unSharedOf() == sd.type.mutableOf().unSharedOf())\n+                {\n+                    //printf(\"copy constructor\\n\");\n+                    ctd.isCpCtor = true;\n+                }\n             }\n         }\n         // https://issues.dlang.org/show_bug.cgi?id=22593\n         else if (auto ti = ctd.parent.isTemplateInstance())\n         {\n-            if (sd && sd.hasCopyCtor && (dim == 1 || (dim > 1 && tf.parameterList[1].defaultArg)))\n-            {\n-                auto param = tf.parameterList[0];\n+            if (!sd || !sd.hasCopyCtor || !(dim == 1 || (dim > 1 && tf.parameterList[1].defaultArg)))\n+                return;\n \n-                // if the template instance introduces an rvalue constructor\n-                // between the members of a struct declaration, we should check if a\n-                // copy constructor exists and issue an error in that case.\n-                if (!(param.storageClass & STC.ref_) && param.type.mutableOf().unSharedOf() == sd.type.mutableOf().unSharedOf())\n-                {\n-                    .error(ctd.loc, \"Cannot define both an rvalue constructor and a copy constructor for `struct %s`\", sd.toChars);\n-                    .errorSupplemental(ti.loc, \"Template instance `%s` creates a rvalue constructor for `struct %s`\",\n-                            ti.toChars(), sd.toChars());\n-                }\n+            auto param = tf.parameterList[0];\n+\n+            // if the template instance introduces an rvalue constructor\n+            // between the members of a struct declaration, we should check if a\n+            // copy constructor exists and issue an error in that case.\n+            if (!(param.storageClass & STC.ref_) && param.type.mutableOf().unSharedOf() == sd.type.mutableOf().unSharedOf())\n+            {\n+                .error(ctd.loc, \"cannot define both an rvalue constructor and a copy constructor for `struct %s`\", sd.toChars);\n+                .errorSupplemental(ti.loc, \"Template instance `%s` creates a rvalue constructor for `struct %s`\",\n+                        ti.toChars(), sd.toChars());\n             }\n         }\n     }\n@@ -6417,13 +6432,8 @@ void aliasSemantic(AliasDeclaration ds, Scope* sc)\n     ds.visibility = sc.visibility;\n     ds.userAttribDecl = sc.userAttribDecl;\n \n-    // TypeTraits needs to know if it's located in an AliasDeclaration\n-    const oldflags = sc.flags;\n-    sc.flags |= SCOPE.alias_;\n-\n     void normalRet()\n     {\n-        sc.flags = oldflags;\n         ds.inuse = 0;\n         ds.semanticRun = PASS.semanticdone;\n "}, {"sha": "ed0126eeef6fb2f86de7be7bc69664707ce5d475", "filename": "gcc/d/dmd/dtemplate.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdtemplate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdtemplate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtemplate.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2777,7 +2777,7 @@ void functionResolve(ref MatchAccumulator m, Dsymbol dstart, Loc loc, Scope* sc,\n             fd.storage_class == m.lastf.storage_class &&\n             fd.parent == m.lastf.parent &&\n             fd.visibility == m.lastf.visibility &&\n-            fd.linkage == m.lastf.linkage)\n+            fd._linkage == m.lastf._linkage)\n         {\n             if (fd.fbody && !m.lastf.fbody)\n                 goto LfIsBetter;"}, {"sha": "55f7c724e5ac895de42a48f56627ccde3886c103", "filename": "gcc/d/dmd/dtoh.d", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdtoh.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fdtoh.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtoh.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -82,7 +82,7 @@ extern(C++) void genCppHdrFiles(ref Modules ms)\n     foreach (m; ms)\n         m.accept(v);\n \n-    if (global.params.doCxxHdrGeneration == CxxHeaderMode.verbose)\n+    if (global.params.cxxhdr.fullOutput)\n         buf.printf(\"// Automatically generated by %s Compiler v%d\", global.vendor.ptr, global.versionNumber());\n     else\n         buf.printf(\"// Automatically generated by %s Compiler\", global.vendor.ptr);\n@@ -92,9 +92,9 @@ extern(C++) void genCppHdrFiles(ref Modules ms)\n     buf.writestringln(\"#pragma once\");\n     buf.writenl();\n     hashInclude(buf, \"<assert.h>\");\n+    hashInclude(buf, \"<math.h>\");\n     hashInclude(buf, \"<stddef.h>\");\n     hashInclude(buf, \"<stdint.h>\");\n-    hashInclude(buf, \"<math.h>\");\n //    buf.writestring(buf, \"#include <stdio.h>\\n\");\n //    buf.writestring(\"#include <string.h>\\n\");\n \n@@ -189,15 +189,15 @@ struct _d_dynamicArray final\n             buf.remove(buf.length - 1, 1);\n \n \n-    if (global.params.cxxhdrname is null)\n+    if (global.params.cxxhdr.name is null)\n     {\n         // Write to stdout; assume it succeeds\n         size_t n = fwrite(buf[].ptr, 1, buf.length, stdout);\n         assert(n == buf.length); // keep gcc happy about return values\n     }\n     else\n     {\n-        const(char)[] name = FileName.combine(global.params.cxxhdrdir, global.params.cxxhdrname);\n+        const(char)[] name = FileName.combine(global.params.cxxhdr.dir, global.params.cxxhdr.name);\n         writeFile(Loc.initial, name, buf[]);\n     }\n }\n@@ -297,7 +297,7 @@ public:\n         this.fwdbuf = fwdbuf;\n         this.donebuf = donebuf;\n         this.buf = buf;\n-        this.printIgnored = global.params.doCxxHdrGeneration == CxxHeaderMode.verbose;\n+        this.printIgnored = global.params.cxxhdr.fullOutput;\n     }\n \n     /**\n@@ -966,12 +966,13 @@ public:\n         if (vd.storage_class & (AST.STC.static_ | AST.STC.extern_ | AST.STC.gshared) ||\n         vd.parent && vd.parent.isModule())\n         {\n-            if (vd.linkage != LINK.c && vd.linkage != LINK.cpp && !(tdparent && (this.linkage == LINK.c || this.linkage == LINK.cpp)))\n+            const vdLinkage = vd.resolvedLinkage();\n+            if (vdLinkage != LINK.c && vdLinkage != LINK.cpp && !(tdparent && (this.linkage == LINK.c || this.linkage == LINK.cpp)))\n             {\n                 ignored(\"variable %s because of linkage\", vd.toPrettyChars());\n                 return;\n             }\n-            if (vd.mangleOverride && vd.linkage != LINK.c)\n+            if (vd.mangleOverride && vdLinkage != LINK.c)\n             {\n                 ignored(\"variable %s because C++ doesn't support explicit mangling\", vd.toPrettyChars());\n                 return;\n@@ -987,7 +988,7 @@ public:\n                 return;\n             }\n             writeProtection(vd.visibility.kind);\n-            if (vd.linkage == LINK.c)\n+            if (vdLinkage == LINK.c)\n                 buf.writestring(\"extern \\\"C\\\" \");\n             else if (!adparent)\n                 buf.writestring(\"extern \");\n@@ -2302,7 +2303,7 @@ public:\n             this.forwarding = fwdStash;\n         }\n \n-        if (p.storageClass & AST.STC.ref_)\n+        if (p.storageClass & (AST.STC.ref_ | AST.STC.out_))\n             buf.writeByte('&');\n         buf.writeByte(' ');\n         if (ident)\n@@ -2805,7 +2806,10 @@ public:\n \n         // Check against the internal information which might be missing, e.g. inside of template declarations\n         if (auto dec = sym.isDeclaration())\n-            return dec.linkage == LINK.cpp || dec.linkage == LINK.c;\n+        {\n+            const l = dec.resolvedLinkage();\n+            return l == LINK.cpp || l == LINK.c;\n+        }\n \n         if (auto ad = sym.isAggregateDeclaration())\n             return ad.classKind == ClassKind.cpp;\n@@ -2853,8 +2857,11 @@ public:\n         if (!res)\n         {\n             // Check against the internal information which might be missing, e.g. inside of template declarations\n-            auto dec = sym.isDeclaration();\n-            res = dec && (dec.linkage == LINK.cpp || dec.linkage == LINK.c);\n+            if (auto dec = sym.isDeclaration())\n+            {\n+                const l = dec.resolvedLinkage();\n+                res = (l == LINK.cpp || l == LINK.c);\n+            }\n         }\n \n         // Remember result for later calls"}, {"sha": "3f41c298c2c9c5b9592f6c24b61add318b81cad7", "filename": "gcc/d/dmd/escape.d", "status": "modified", "additions": 783, "deletions": 646, "changes": 1429, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fescape.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fescape.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fescape.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -280,13 +280,14 @@ bool checkAssocArrayLiteralEscape(Scope *sc, AssocArrayLiteralExp ae, bool gag)\n  *      sc = used to determine current function and module\n  *      fdc = function being called, `null` if called indirectly\n  *      par = function parameter (`this` if null)\n+ *      parStc = storage classes of function parameter (may have added `scope` from `pure`)\n  *      arg = initializer for param\n  *      assertmsg = true if the parameter is the msg argument to assert(bool, msg).\n  *      gag = do not print error messages\n  * Returns:\n  *      `true` if pointers to the stack can escape via assignment\n  */\n-bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, Expression arg, bool assertmsg, bool gag)\n+bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, STC parStc, Expression arg, bool assertmsg, bool gag)\n {\n     enum log = false;\n     if (log) printf(\"checkParamArgumentEscape(arg: %s par: %s)\\n\",\n@@ -301,42 +302,38 @@ bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, Exp\n \n     escapeByValue(arg, &er);\n \n+    if (parStc & STC.scope_)\n+    {\n+        // These errors only apply to non-scope parameters\n+        // When the paraneter is `scope`, only `checkScopeVarAddr` on `er.byref` is needed\n+        er.byfunc.setDim(0);\n+        er.byvalue.setDim(0);\n+        er.byexp.setDim(0);\n+    }\n+\n     if (!er.byref.dim && !er.byvalue.dim && !er.byfunc.dim && !er.byexp.dim)\n         return false;\n \n     bool result = false;\n \n-    ScopeRef psr;\n-    if (par && fdc && fdc.type.isTypeFunction())\n-        psr = buildScopeRef(par.storageClass);\n-    else\n-        psr = ScopeRef.None;\n-\n     /* 'v' is assigned unsafely to 'par'\n      */\n-    void unsafeAssign(VarDeclaration v, const char* desc)\n+    void unsafeAssign(string desc)(VarDeclaration v)\n     {\n-        if (setUnsafeDIP1000(sc.func))\n+        if (assertmsg)\n         {\n-            if (!gag)\n-            {\n-                if (assertmsg)\n-                {\n-                    previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                                    (arg.loc, \"%s `%s` assigned to non-scope parameter calling `assert()`\",\n-                        desc, v.toChars());\n-                }\n-                else\n-                {\n-                    previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                                    (arg.loc, \"%s `%s` assigned to non-scope parameter `%s` calling %s\",\n-                        desc, v.toChars(),\n-                        par ? par.toChars() : \"this\",\n-                        fdc ? fdc.toPrettyChars() : \"indirectly\");\n-                }\n-            }\n-            if (global.params.useDIP1000 == FeatureState.enabled)\n-                result = true;\n+            result |= sc.setUnsafeDIP1000(gag, arg.loc,\n+                desc ~ \" `%s` assigned to non-scope parameter calling `assert()`\", v);\n+        }\n+        else if (par)\n+        {\n+            result |= sc.setUnsafeDIP1000(gag, arg.loc,\n+                desc ~ \" `%s` assigned to non-scope parameter `%s`\", v, par);\n+        }\n+        else\n+        {\n+            result |= sc.setUnsafeDIP1000(gag, arg.loc,\n+                desc ~ \" `%s` assigned to non-scope parameter `this`\", v);\n         }\n     }\n \n@@ -352,14 +349,14 @@ bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, Exp\n \n         if (v.isScope())\n         {\n-            unsafeAssign(v, \"scope variable\");\n+            unsafeAssign!\"scope variable\"(v);\n         }\n         else if (v.storage_class & STC.variadic && p == sc.func)\n         {\n             Type tb = v.type.toBasetype();\n             if (tb.ty == Tarray || tb.ty == Tsarray)\n             {\n-                unsafeAssign(v, \"variadic variable\");\n+                unsafeAssign!\"variadic variable\"(v);\n             }\n         }\n         else\n@@ -382,17 +379,15 @@ bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, Exp\n         Dsymbol p = v.toParent2();\n \n         notMaybeScope(v);\n-\n-        if (p == sc.func)\n+        if (checkScopeVarAddr(v, arg, sc, gag))\n         {\n-            if (psr == ScopeRef.Scope ||\n-                psr == ScopeRef.RefScope ||\n-                psr == ScopeRef.ReturnRef_Scope)\n-            {\n-                continue;\n-            }\n+            result = true;\n+            continue;\n+        }\n \n-            unsafeAssign(v, \"reference to local variable\");\n+        if (p == sc.func && !(parStc & STC.scope_))\n+        {\n+            unsafeAssign!\"reference to local variable\"(v);\n             continue;\n         }\n     }\n@@ -414,21 +409,26 @@ bool checkParamArgumentEscape(Scope* sc, FuncDeclaration fdc, Parameter par, Exp\n \n             if ((v.isReference() || v.isScope()) && p == sc.func)\n             {\n-                unsafeAssign(v, \"reference to local\");\n+                unsafeAssign!\"reference to local\"(v);\n                 continue;\n             }\n         }\n     }\n \n+    if (!sc.func)\n+        return result;\n+\n     foreach (Expression ee; er.byexp)\n     {\n-        if (sc.func && sc.func.setUnsafe())\n+        if (!par)\n         {\n-            if (!gag)\n-                error(ee.loc, \"reference to stack allocated value returned by `%s` assigned to non-scope parameter `%s`\",\n-                    ee.toChars(),\n-                    par ? par.toChars() : \"this\");\n-            result = true;\n+            result |= sc.setUnsafeDIP1000(gag, ee.loc,\n+                \"reference to stack allocated value returned by `%s` assigned to non-scope parameter `this`\", ee);\n+        }\n+        else\n+        {\n+            result |= sc.setUnsafeDIP1000(gag, ee.loc,\n+                \"reference to stack allocated value returned by `%s` assigned to non-scope parameter `%s`\", ee, par);\n         }\n     }\n \n@@ -688,25 +688,25 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n                 }\n             }\n \n-            if (va && va.isScope() && va.storage_class & STC.return_ && !(v.storage_class & STC.return_) &&\n-                fd.setUnsafe())\n+            if (va && va.isScope() && va.storage_class & STC.return_ && !(v.storage_class & STC.return_))\n             {\n                 // va may return its value, but v does not allow that, so this is an error\n-                if (!gag)\n-                    error(ae.loc, \"scope variable `%s` assigned to return scope `%s`\", v.toChars(), va.toChars());\n-                result = true;\n-                continue;\n+                if (sc.setUnsafeDIP1000(gag, ae.loc, \"scope variable `%s` assigned to return scope `%s`\", v, va))\n+                {\n+                    result = true;\n+                    continue;\n+                }\n             }\n \n             // If va's lifetime encloses v's, then error\n             if (va && !va.isDataseg() &&\n-                ((va.enclosesLifetimeOf(v) && !(v.storage_class & STC.temp)) || vaIsRef) &&\n-                fd.setUnsafe())\n+                ((va.enclosesLifetimeOf(v) && !(v.storage_class & STC.temp)) || vaIsRef))\n             {\n-                if (!gag)\n-                    error(ae.loc, \"scope variable `%s` assigned to `%s` with longer lifetime\", v.toChars(), va.toChars());\n-                result = true;\n-                continue;\n+                if (sc.setUnsafeDIP1000(gag, ae.loc, \"scope variable `%s` assigned to `%s` with longer lifetime\", v, va))\n+                {\n+                    result = true;\n+                    continue;\n+                }\n             }\n \n             if (va && !va.isDataseg() && !va.doNotInferScope)\n@@ -733,12 +733,7 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n                 }\n                 continue;\n             }\n-            if (fd.setUnsafe())\n-            {\n-                if (!gag)\n-                    error(ae.loc, \"scope variable `%s` assigned to non-scope `%s`\", v.toChars(), e1.toChars());\n-                result = true;\n-            }\n+            result |= sc.setUnsafeDIP1000(gag, ae.loc, \"scope variable `%s` assigned to non-scope `%s`\", v, e1);\n         }\n         else if (v.storage_class & STC.variadic && p == fd)\n         {\n@@ -753,12 +748,7 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n                     }\n                     continue;\n                 }\n-                if (fd.setUnsafe())\n-                {\n-                    if (!gag)\n-                        error(ae.loc, \"variadic variable `%s` assigned to non-scope `%s`\", v.toChars(), e1.toChars());\n-                    result = true;\n-                }\n+                result |= sc.setUnsafeDIP1000(gag, ae.loc, \"variadic variable `%s` assigned to non-scope `%s`\", v, e1);\n             }\n         }\n         else\n@@ -777,27 +767,22 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n         if (v.isDataseg())\n             continue;\n \n-        if (global.params.useDIP1000 != FeatureState.disabled)\n+        if (checkScopeVarAddr(v, ae, sc, gag))\n         {\n-            if (va && va.isScope() && !v.isReference())\n-            {\n-                if (!(va.storage_class & STC.return_))\n-                {\n-                    va.doNotInferReturn = true;\n-                }\n-                else if (setUnsafeDIP1000(fd))\n-                {\n-                    if (!gag)\n-                        previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                            (ae.loc, \"address of local variable `%s` assigned to return scope `%s`\", v.toChars(), va.toChars());\n-\n+            result = true;\n+            continue;\n+        }\n \n-                    if (global.params.useDIP1000 == FeatureState.enabled)\n-                    {\n-                        result = true;\n-                        continue;\n-                    }\n-                }\n+        if (va && va.isScope() && !v.isReference())\n+        {\n+            if (!(va.storage_class & STC.return_))\n+            {\n+                va.doNotInferReturn = true;\n+            }\n+            else\n+            {\n+                result |= sc.setUnsafeDIP1000(gag, ae.loc,\n+                    \"address of local variable `%s` assigned to return scope `%s`\", v, va);\n             }\n         }\n \n@@ -815,19 +800,19 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n         // If va's lifetime encloses v's, then error\n         if (va &&\n             !(vaIsFirstRef && (v.storage_class & STC.return_)) &&\n-            (va.enclosesLifetimeOf(v) || (va.isReference() && !(va.storage_class & STC.temp)) || va.isDataseg()) &&\n-            fd.setUnsafe())\n+            (va.enclosesLifetimeOf(v) || (va.isReference() && !(va.storage_class & STC.temp)) || va.isDataseg()))\n         {\n-            if (!gag)\n-                error(ae.loc, \"address of variable `%s` assigned to `%s` with longer lifetime\", v.toChars(), va.toChars());\n-            result = true;\n-            continue;\n+            if (sc.setUnsafeDIP1000(gag, ae.loc, \"address of variable `%s` assigned to `%s` with longer lifetime\", v, va))\n+            {\n+                result = true;\n+                continue;\n+            }\n         }\n \n         if (!(va && va.isScope()))\n             notMaybeScope(v);\n \n-        if ((global.params.useDIP1000 != FeatureState.enabled && v.isReference()) || p != sc.func)\n+        if (p != sc.func)\n             continue;\n \n         if (va && !va.isDataseg() && !va.doNotInferScope)\n@@ -842,12 +827,8 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n         }\n         if (e1.op == EXP.structLiteral)\n             continue;\n-        if (fd.setUnsafe())\n-        {\n-            if (!gag)\n-                error(ae.loc, \"reference to local variable `%s` assigned to non-scope `%s`\", v.toChars(), e1.toChars());\n-            result = true;\n-        }\n+\n+        result |= sc.setUnsafeDIP1000(gag, ae.loc, \"reference to local variable `%s` assigned to non-scope `%s`\", v, e1);\n     }\n \n     foreach (FuncDeclaration func; er.byfunc)\n@@ -886,12 +867,8 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n                     //va.storage_class |= STC.scope_ | STC.scopeinferred;\n                 continue;\n             }\n-            if (fd.setUnsafe())\n-            {\n-                if (!gag)\n-                    error(ae.loc, \"reference to local `%s` assigned to non-scope `%s` in @safe code\", v.toChars(), e1.toChars());\n-                result = true;\n-            }\n+            result |= sc.setUnsafeDIP1000(gag, ae.loc,\n+                \"reference to local `%s` assigned to non-scope `%s` in @safe code\", v, e1);\n         }\n     }\n \n@@ -912,25 +889,23 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n         }\n \n         if (ee.op == EXP.call && ee.type.toBasetype().isTypeStruct() &&\n-            (!va || !(va.storage_class & STC.temp)) &&\n-            fd.setUnsafe())\n+            (!va || !(va.storage_class & STC.temp)))\n         {\n-            if (!gag)\n-                error(ee.loc, \"address of struct temporary returned by `%s` assigned to longer lived variable `%s`\",\n-                    ee.toChars(), e1.toChars());\n-            result = true;\n-            continue;\n+            if (sc.setUnsafeDIP1000(gag, ee.loc, \"address of struct temporary returned by `%s` assigned to longer lived variable `%s`\", ee, e1))\n+            {\n+                result = true;\n+                continue;\n+            }\n         }\n \n         if (ee.op == EXP.structLiteral &&\n-            (!va || !(va.storage_class & STC.temp)) &&\n-            fd.setUnsafe())\n+            (!va || !(va.storage_class & STC.temp)))\n         {\n-            if (!gag)\n-                error(ee.loc, \"address of struct literal `%s` assigned to longer lived variable `%s`\",\n-                    ee.toChars(), e1.toChars());\n-            result = true;\n-            continue;\n+            if (sc.setUnsafeDIP1000(gag, ee.loc, \"address of struct literal `%s` assigned to longer lived variable `%s`\", ee, e1))\n+            {\n+                result = true;\n+                continue;\n+            }\n         }\n \n         if (va && !va.isDataseg() && !va.doNotInferScope)\n@@ -942,13 +917,8 @@ bool checkAssignEscape(Scope* sc, Expression e, bool gag, bool byRef)\n             continue;\n         }\n \n-        if (fd.setUnsafe())\n-        {\n-            if (!gag)\n-                error(ee.loc, \"reference to stack allocated value returned by `%s` assigned to non-scope `%s`\",\n-                    ee.toChars(), e1.toChars());\n-            result = true;\n-        }\n+        result |= sc.setUnsafeDIP1000(gag, ee.loc,\n+            \"reference to stack allocated value returned by `%s` assigned to non-scope `%s`\", ee, e1);\n     }\n \n     return result;\n@@ -985,11 +955,8 @@ bool checkThrowEscape(Scope* sc, Expression e, bool gag)\n         if (v.isScope() && !v.iscatchvar)       // special case: allow catch var to be rethrown\n                                                 // despite being `scope`\n         {\n-            if (!gag)\n-                previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                                (e.loc, \"scope variable `%s` may not be thrown\", v.toChars());\n-            if (global.params.useDIP1000 == FeatureState.enabled) // https://issues.dlang.org/show_bug.cgi?id=17029\n-                result = true;\n+            // https://issues.dlang.org/show_bug.cgi?id=17029\n+            result |= sc.setUnsafeDIP1000(gag, e.loc, \"scope variable `%s` may not be thrown\", v);\n             continue;\n         }\n         else\n@@ -1050,16 +1017,8 @@ bool checkNewEscape(Scope* sc, Expression e, bool gag)\n                  */\n                 !(p.parent == sc.func))\n             {\n-                if (setUnsafeDIP1000(sc.func))     // https://issues.dlang.org/show_bug.cgi?id=20868\n-                {\n-                    // Only look for errors if in module listed on command line\n-                    if (!gag)\n-                        previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                                        (e.loc, \"scope variable `%s` may not be copied into allocated memory\", v.toChars());\n-                    if (global.params.useDIP1000 == FeatureState.enabled)\n-                        result = true;\n-                }\n-\n+                // https://issues.dlang.org/show_bug.cgi?id=20868\n+                result |= sc.setUnsafeDIP1000(gag, e.loc, \"scope variable `%s` may not be copied into allocated memory\", v);\n                 continue;\n             }\n         }\n@@ -1068,9 +1027,8 @@ bool checkNewEscape(Scope* sc, Expression e, bool gag)\n             Type tb = v.type.toBasetype();\n             if (tb.ty == Tarray || tb.ty == Tsarray)\n             {\n-                if (!gag)\n-                    error(e.loc, \"copying `%s` into allocated memory escapes a reference to variadic parameter `%s`\", e.toChars(), v.toChars());\n-                result = false;\n+                result |= sc.setUnsafeDIP1000(gag, e.loc,\n+                    \"copying `%s` into allocated memory escapes a reference to variadic parameter `%s`\", e, v);\n             }\n         }\n         else\n@@ -1085,16 +1043,13 @@ bool checkNewEscape(Scope* sc, Expression e, bool gag)\n         if (log) printf(\"byref `%s`\\n\", v.toChars());\n \n         // 'featureState' tells us whether to emit an error or a deprecation,\n-        // depending on the flag passed to the CLI for DIP25\n-        void escapingRef(VarDeclaration v, FeatureState featureState = FeatureState.enabled)\n+        // depending on the flag passed to the CLI for DIP25 / DIP1000\n+        bool escapingRef(VarDeclaration v, FeatureState fs)\n         {\n-            if (!gag)\n-            {\n-                const(char)* kind = (v.storage_class & STC.parameter) ? \"parameter\" : \"local\";\n-                const(char)* msg = \"copying `%s` into allocated memory escapes a reference to %s variable `%s`\";\n-                previewErrorFunc(sc.isDeprecated(), featureState)(e.loc, msg, e.toChars(), kind, v.toChars());\n-            }\n-            result |= (featureState == FeatureState.enabled);\n+            const(char)* msg = v.isParameter() ?\n+                \"copying `%s` into allocated memory escapes a reference to parameter `%s`\" :\n+                \"copying `%s` into allocated memory escapes a reference to local variable `%s`\";\n+            return sc.setUnsafePreview(fs, gag, e.loc, msg, e, v);\n         }\n \n         if (v.isDataseg())\n@@ -1106,7 +1061,7 @@ bool checkNewEscape(Scope* sc, Expression e, bool gag)\n         {\n             if (p == sc.func)\n             {\n-                escapingRef(v);\n+                result |= escapingRef(v, global.params.useDIP1000);\n                 continue;\n             }\n         }\n@@ -1122,7 +1077,7 @@ bool checkNewEscape(Scope* sc, Expression e, bool gag)\n         {\n             //printf(\"escaping reference to local ref variable %s\\n\", v.toChars());\n             //printf(\"storage class = x%llx\\n\", v.storage_class);\n-            escapingRef(v, global.params.useDIP25);\n+            result |= escapingRef(v, global.params.useDIP25);\n             continue;\n         }\n         // Don't need to be concerned if v's parent does not return a ref\n@@ -1269,14 +1224,7 @@ private bool checkReturnEscapeImpl(Scope* sc, Expression e, bool refs, bool gag)\n                )\n             {\n                 // https://issues.dlang.org/show_bug.cgi?id=17029\n-                if (setUnsafeDIP1000(sc.func))\n-                {\n-                    if (!gag)\n-                        previewErrorFunc(sc.isDeprecated(), global.params.useDIP1000)\n-                                        (e.loc, \"scope variable `%s` may not be returned\", v.toChars());\n-                    if (global.params.useDIP1000 == FeatureState.enabled)\n-                        result = true;\n-                }\n+                result |= sc.setUnsafeDIP1000(gag, e.loc, \"scope variable `%s` may not be returned\", v);\n                 continue;\n             }\n         }\n@@ -1306,16 +1254,18 @@ private bool checkReturnEscapeImpl(Scope* sc, Expression e, bool refs, bool gag)\n \n         // 'featureState' tells us whether to emit an error or a deprecation,\n         // depending on the flag passed to the CLI for DIP25\n-        void escapingRef(VarDeclaration v, ScopeRef vsr, FeatureState featureState = FeatureState.enabled)\n+        void escapingRef(VarDeclaration v, FeatureState featureState)\n         {\n-            if (!gag)\n-            {\n-                const(char)* varKind = v.isParameter() ? \"parameter\" : \"local variable\";\n-                previewErrorFunc(sc.isDeprecated(), featureState)(e.loc,\n-                    \"returning `%s` escapes a reference to %s `%s`\", e.toChars(), varKind, v.toChars());\n+            const(char)* msg = v.isParameter() ?\n+                \"returning `%s` escapes a reference to parameter `%s`\" :\n+                \"returning `%s` escapes a reference to local variable `%s`\";\n \n-                if (v.isParameter() && v.isReference())\n+            if (v.isParameter() && v.isReference())\n+            {\n+                if (sc.setUnsafePreview(featureState, gag, e.loc, msg, e, v) ||\n+                    sc.func.isSafeBypassingInference())\n                 {\n+                    result = true;\n                     if (v.storage_class & STC.returnScope)\n                     {\n                         previewSupplementalFunc(sc.isDeprecated(), featureState)(v.loc,\n@@ -1329,7 +1279,12 @@ private bool checkReturnEscapeImpl(Scope* sc, Expression e, bool refs, bool gag)\n                     }\n                 }\n             }\n-            result = true;\n+            else\n+            {\n+                if (!gag)\n+                    previewErrorFunc(sc.isDeprecated(), featureState)(e.loc, msg, e.toChars(), v.toChars());\n+                result = true;\n+            }\n         }\n \n         if (v.isDataseg())\n@@ -1340,14 +1295,23 @@ private bool checkReturnEscapeImpl(Scope* sc, Expression e, bool refs, bool gag)\n         Dsymbol p = v.toParent2();\n \n         // https://issues.dlang.org/show_bug.cgi?id=19965\n-        if (!refs && sc.func.vthis == v)\n-            notMaybeScope(v);\n+        if (!refs)\n+        {\n+            if (sc.func.vthis == v)\n+                notMaybeScope(v);\n+\n+            if (checkScopeVarAddr(v, e, sc, gag))\n+            {\n+                result = true;\n+                continue;\n+            }\n+        }\n \n         if (!v.isReference())\n         {\n             if (p == sc.func)\n             {\n-                escapingRef(v, vsr, FeatureState.enabled);\n+                escapingRef(v, FeatureState.enabled);\n                 continue;\n             }\n             FuncDeclaration fd = p.isFuncDeclaration();\n@@ -1388,7 +1352,7 @@ private bool checkReturnEscapeImpl(Scope* sc, Expression e, bool refs, bool gag)\n                 {\n                     //printf(\"escaping reference to local ref variable %s\\n\", v.toChars());\n                     //printf(\"storage class = x%llx\\n\", v.storage_class);\n-                    escapingRef(v, vsr, global.params.useDIP25);\n+                    escapingRef(v, global.params.useDIP25);\n                     continue;\n                 }\n                 // Don't need to be concerned if v's parent does not return a ref\n@@ -1489,370 +1453,385 @@ private void inferReturn(FuncDeclaration fd, VarDeclaration v, bool returnScope)\n void escapeByValue(Expression e, EscapeByResults* er, bool live = false)\n {\n     //printf(\"[%s] escapeByValue, e: %s\\n\", e.loc.toChars(), e.toChars());\n-    extern (C++) final class EscapeVisitor : Visitor\n-    {\n-        alias visit = Visitor.visit;\n-    public:\n-        EscapeByResults* er;\n-        bool live;\n-\n-        extern (D) this(EscapeByResults* er, bool live)\n-        {\n-            this.er = er;\n-            this.live = live;\n-        }\n \n-        override void visit(Expression e)\n-        {\n-        }\n+    void visit(Expression e)\n+    {\n+    }\n \n-        override void visit(AddrExp e)\n-        {\n-            /* Taking the address of struct literal is normally not\n-             * allowed, but CTFE can generate one out of a new expression,\n-             * but it'll be placed in static data so no need to check it.\n-             */\n-            if (e.e1.op != EXP.structLiteral)\n-                escapeByRef(e.e1, er, live);\n-        }\n+    void visitAddr(AddrExp e)\n+    {\n+        /* Taking the address of struct literal is normally not\n+         * allowed, but CTFE can generate one out of a new expression,\n+         * but it'll be placed in static data so no need to check it.\n+         */\n+        if (e.e1.op != EXP.structLiteral)\n+            escapeByRef(e.e1, er, live);\n+    }\n \n-        override void visit(SymOffExp e)\n-        {\n-            VarDeclaration v = e.var.isVarDeclaration();\n-            if (v)\n-                er.byref.push(v);\n-        }\n+    void visitSymOff(SymOffExp e)\n+    {\n+        VarDeclaration v = e.var.isVarDeclaration();\n+        if (v)\n+            er.byref.push(v);\n+    }\n \n-        override void visit(VarExp e)\n+    void visitVar(VarExp e)\n+    {\n+        if (auto v = e.var.isVarDeclaration())\n         {\n-            if (auto v = e.var.isVarDeclaration())\n-            {\n-                if (v.type.hasPointers() || // not tracking non-pointers\n-                    v.storage_class & STC.lazy_) // lazy variables are actually pointers\n-                    er.byvalue.push(v);\n-            }\n+            if (v.type.hasPointers() || // not tracking non-pointers\n+                v.storage_class & STC.lazy_) // lazy variables are actually pointers\n+                er.byvalue.push(v);\n         }\n+    }\n \n-        override void visit(ThisExp e)\n-        {\n-            if (e.var)\n-                er.byvalue.push(e.var);\n-        }\n+    void visitThis(ThisExp e)\n+    {\n+        if (e.var)\n+            er.byvalue.push(e.var);\n+    }\n \n-        override void visit(PtrExp e)\n-        {\n-            if (live && e.type.hasPointers())\n-                e.e1.accept(this);\n-        }\n+    void visitPtr(PtrExp e)\n+    {\n+        if (live && e.type.hasPointers())\n+            escapeByValue(e.e1, er, live);\n+    }\n \n-        override void visit(DotVarExp e)\n+    void visitDotVar(DotVarExp e)\n+    {\n+        auto t = e.e1.type.toBasetype();\n+        if (e.type.hasPointers() && (live || t.ty == Tstruct))\n         {\n-            auto t = e.e1.type.toBasetype();\n-            if (e.type.hasPointers() && (live || t.ty == Tstruct))\n-            {\n-                e.e1.accept(this);\n-            }\n+            escapeByValue(e.e1, er, live);\n         }\n+    }\n \n-        override void visit(DelegateExp e)\n-        {\n-            Type t = e.e1.type.toBasetype();\n-            if (t.ty == Tclass || t.ty == Tpointer)\n-                escapeByValue(e.e1, er, live);\n-            else\n-                escapeByRef(e.e1, er, live);\n-            er.byfunc.push(e.func);\n-        }\n+    void visitDelegate(DelegateExp e)\n+    {\n+        Type t = e.e1.type.toBasetype();\n+        if (t.ty == Tclass || t.ty == Tpointer)\n+            escapeByValue(e.e1, er, live);\n+        else\n+            escapeByRef(e.e1, er, live);\n+        er.byfunc.push(e.func);\n+    }\n \n-        override void visit(FuncExp e)\n-        {\n-            if (e.fd.tok == TOK.delegate_)\n-                er.byfunc.push(e.fd);\n-        }\n+    void visitFunc(FuncExp e)\n+    {\n+        if (e.fd.tok == TOK.delegate_)\n+            er.byfunc.push(e.fd);\n+    }\n \n-        override void visit(TupleExp e)\n-        {\n-            assert(0); // should have been lowered by now\n-        }\n+    void visitTuple(TupleExp e)\n+    {\n+        assert(0); // should have been lowered by now\n+    }\n \n-        override void visit(ArrayLiteralExp e)\n+    void visitArrayLiteral(ArrayLiteralExp e)\n+    {\n+        Type tb = e.type.toBasetype();\n+        if (tb.ty == Tsarray || tb.ty == Tarray)\n         {\n-            Type tb = e.type.toBasetype();\n-            if (tb.ty == Tsarray || tb.ty == Tarray)\n+            if (e.basis)\n+                escapeByValue(e.basis, er, live);\n+            foreach (el; *e.elements)\n             {\n-                if (e.basis)\n-                    e.basis.accept(this);\n-                foreach (el; *e.elements)\n-                {\n-                    if (el)\n-                        el.accept(this);\n-                }\n+                if (el)\n+                    escapeByValue(el, er, live);\n             }\n         }\n+    }\n \n-        override void visit(StructLiteralExp e)\n+    void visitStructLiteral(StructLiteralExp e)\n+    {\n+        if (e.elements)\n         {\n-            if (e.elements)\n+            foreach (ex; *e.elements)\n             {\n-                foreach (ex; *e.elements)\n-                {\n-                    if (ex)\n-                        ex.accept(this);\n-                }\n+                if (ex)\n+                    escapeByValue(ex, er, live);\n             }\n         }\n+    }\n \n-        override void visit(NewExp e)\n+    void visitNew(NewExp e)\n+    {\n+        Type tb = e.newtype.toBasetype();\n+        if (tb.ty == Tstruct && !e.member && e.arguments)\n         {\n-            Type tb = e.newtype.toBasetype();\n-            if (tb.ty == Tstruct && !e.member && e.arguments)\n+            foreach (ex; *e.arguments)\n             {\n-                foreach (ex; *e.arguments)\n-                {\n-                    if (ex)\n-                        ex.accept(this);\n-                }\n+                if (ex)\n+                    escapeByValue(ex, er, live);\n             }\n         }\n+    }\n \n-        override void visit(CastExp e)\n+    void visitCast(CastExp e)\n+    {\n+        if (!e.type.hasPointers())\n+            return;\n+        Type tb = e.type.toBasetype();\n+        if (tb.ty == Tarray && e.e1.type.toBasetype().ty == Tsarray)\n         {\n-            if (!e.type.hasPointers())\n-                return;\n-            Type tb = e.type.toBasetype();\n-            if (tb.ty == Tarray && e.e1.type.toBasetype().ty == Tsarray)\n-            {\n-                escapeByRef(e.e1, er, live);\n-            }\n-            else\n-                e.e1.accept(this);\n+            escapeByRef(e.e1, er, live);\n         }\n+        else\n+            escapeByValue(e.e1, er, live);\n+    }\n \n-        override void visit(SliceExp e)\n+    void visitSlice(SliceExp e)\n+    {\n+        if (auto ve = e.e1.isVarExp())\n         {\n-            if (auto ve = e.e1.isVarExp())\n+            VarDeclaration v = ve.var.isVarDeclaration();\n+            Type tb = e.type.toBasetype();\n+            if (v)\n             {\n-                VarDeclaration v = ve.var.isVarDeclaration();\n-                Type tb = e.type.toBasetype();\n-                if (v)\n+                if (tb.ty == Tsarray)\n+                    return;\n+                if (v.storage_class & STC.variadic)\n                 {\n-                    if (tb.ty == Tsarray)\n-                        return;\n-                    if (v.storage_class & STC.variadic)\n-                    {\n-                        er.byvalue.push(v);\n-                        return;\n-                    }\n+                    er.byvalue.push(v);\n+                    return;\n                 }\n             }\n-            Type t1b = e.e1.type.toBasetype();\n-            if (t1b.ty == Tsarray)\n-            {\n-                Type tb = e.type.toBasetype();\n-                if (tb.ty != Tsarray)\n-                    escapeByRef(e.e1, er, live);\n-            }\n-            else\n-                e.e1.accept(this);\n-        }\n-\n-        override void visit(IndexExp e)\n-        {\n-            if (e.e1.type.toBasetype().ty == Tsarray ||\n-                live && e.type.hasPointers())\n-            {\n-                e.e1.accept(this);\n-            }\n         }\n-\n-        override void visit(BinExp e)\n+        Type t1b = e.e1.type.toBasetype();\n+        if (t1b.ty == Tsarray)\n         {\n             Type tb = e.type.toBasetype();\n-            if (tb.ty == Tpointer)\n-            {\n-                e.e1.accept(this);\n-                e.e2.accept(this);\n-            }\n+            if (tb.ty != Tsarray)\n+                escapeByRef(e.e1, er, live);\n         }\n+        else\n+            escapeByValue(e.e1, er, live);\n+    }\n \n-        override void visit(BinAssignExp e)\n+    void visitIndex(IndexExp e)\n+    {\n+        if (e.e1.type.toBasetype().ty == Tsarray ||\n+            live && e.type.hasPointers())\n         {\n-            e.e1.accept(this);\n+            escapeByValue(e.e1, er, live);\n         }\n+    }\n \n-        override void visit(AssignExp e)\n+    void visitBin(BinExp e)\n+    {\n+        Type tb = e.type.toBasetype();\n+        if (tb.ty == Tpointer)\n         {\n-            e.e1.accept(this);\n+            escapeByValue(e.e1, er, live);\n+            escapeByValue(e.e2, er, live);\n         }\n+    }\n \n-        override void visit(CommaExp e)\n-        {\n-            e.e2.accept(this);\n-        }\n+    void visitBinAssign(BinAssignExp e)\n+    {\n+        escapeByValue(e.e1, er, live);\n+    }\n \n-        override void visit(CondExp e)\n+    void visitAssign(AssignExp e)\n+    {\n+        escapeByValue(e.e1, er, live);\n+    }\n+\n+    void visitComma(CommaExp e)\n+    {\n+        escapeByValue(e.e2, er, live);\n+    }\n+\n+    void visitCond(CondExp e)\n+    {\n+        escapeByValue(e.e1, er, live);\n+        escapeByValue(e.e2, er, live);\n+    }\n+\n+    void visitCall(CallExp e)\n+    {\n+        //printf(\"CallExp(): %s\\n\", e.toChars());\n+        /* Check each argument that is\n+         * passed as 'return scope'.\n+         */\n+        Type t1 = e.e1.type.toBasetype();\n+        TypeFunction tf;\n+        TypeDelegate dg;\n+        if (t1.ty == Tdelegate)\n         {\n-            e.e1.accept(this);\n-            e.e2.accept(this);\n+            dg = t1.isTypeDelegate();\n+            tf = dg.next.isTypeFunction();\n         }\n+        else if (t1.ty == Tfunction)\n+            tf = t1.isTypeFunction();\n+        else\n+            return;\n+\n+        if (!e.type.hasPointers())\n+            return;\n \n-        override void visit(CallExp e)\n+        if (e.arguments && e.arguments.dim)\n         {\n-            //printf(\"CallExp(): %s\\n\", e.toChars());\n-            /* Check each argument that is\n-             * passed as 'return scope'.\n+            /* j=1 if _arguments[] is first argument,\n+             * skip it because it is not passed by ref\n              */\n-            Type t1 = e.e1.type.toBasetype();\n-            TypeFunction tf;\n-            TypeDelegate dg;\n-            if (t1.ty == Tdelegate)\n+            int j = tf.isDstyleVariadic();\n+            for (size_t i = j; i < e.arguments.dim; ++i)\n             {\n-                dg = t1.isTypeDelegate();\n-                tf = dg.next.isTypeFunction();\n-            }\n-            else if (t1.ty == Tfunction)\n-                tf = t1.isTypeFunction();\n-            else\n-                return;\n-\n-            if (!e.type.hasPointers())\n-                return;\n-\n-            if (e.arguments && e.arguments.dim)\n-            {\n-                /* j=1 if _arguments[] is first argument,\n-                 * skip it because it is not passed by ref\n-                 */\n-                int j = tf.isDstyleVariadic();\n-                for (size_t i = j; i < e.arguments.dim; ++i)\n+                Expression arg = (*e.arguments)[i];\n+                size_t nparams = tf.parameterList.length;\n+                if (i - j < nparams && i >= j)\n                 {\n-                    Expression arg = (*e.arguments)[i];\n-                    size_t nparams = tf.parameterList.length;\n-                    if (i - j < nparams && i >= j)\n+                    Parameter p = tf.parameterList[i - j];\n+                    const stc = tf.parameterStorageClass(null, p);\n+                    ScopeRef psr = buildScopeRef(stc);\n+                    if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n+                        escapeByValue(arg, er, live);\n+                    else if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n                     {\n-                        Parameter p = tf.parameterList[i - j];\n-                        const stc = tf.parameterStorageClass(null, p);\n-                        ScopeRef psr = buildScopeRef(stc);\n-                        if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n-                            arg.accept(this);\n-                        else if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n+                        if (tf.isref)\n                         {\n-                            if (tf.isref)\n-                            {\n-                                /* Treat:\n-                                 *   ref P foo(return ref P p)\n-                                 * as:\n-                                 *   p;\n-                                 */\n-                                arg.accept(this);\n-                            }\n-                            else\n-                                escapeByRef(arg, er, live);\n+                            /* Treat:\n+                             *   ref P foo(return ref P p)\n+                             * as:\n+                             *   p;\n+                             */\n+                            escapeByValue(arg, er, live);\n                         }\n+                        else\n+                            escapeByRef(arg, er, live);\n                     }\n                 }\n             }\n-            // If 'this' is returned, check it too\n-            if (e.e1.op == EXP.dotVariable && t1.ty == Tfunction)\n+        }\n+        // If 'this' is returned, check it too\n+        if (e.e1.op == EXP.dotVariable && t1.ty == Tfunction)\n+        {\n+            DotVarExp dve = e.e1.isDotVarExp();\n+            FuncDeclaration fd = dve.var.isFuncDeclaration();\n+            if (global.params.useDIP1000 == FeatureState.enabled)\n             {\n-                DotVarExp dve = e.e1.isDotVarExp();\n-                FuncDeclaration fd = dve.var.isFuncDeclaration();\n-                if (global.params.useDIP1000 == FeatureState.enabled)\n+                if (fd && fd.isThis())\n                 {\n-                   if (fd && fd.isThis())\n-                   {\n-                        /* Calling a non-static member function dve.var, which is returning `this`, and with dve.e1 representing `this`\n-                         */\n-\n-                        /*****************************\n-                         * Concoct storage class for member function's implicit `this` parameter.\n-                         * Params:\n-                         *      fd = member function\n-                         * Returns:\n-                         *      storage class for fd's `this`\n-                         */\n-                        StorageClass getThisStorageClass(FuncDeclaration fd)\n-                        {\n-                            StorageClass stc;\n-                            auto tf = fd.type.toBasetype().isTypeFunction();\n-                            if (tf.isreturn)\n-                                stc |= STC.return_;\n-                            if (tf.isreturnscope)\n-                                stc |= STC.returnScope;\n-                            auto ad = fd.isThis();\n-                            if (ad.isClassDeclaration() || tf.isScopeQual)\n-                                stc |= STC.scope_;\n-                            if (ad.isStructDeclaration())\n-                                stc |= STC.ref_;        // `this` for a struct member function is passed by `ref`\n-                            return stc;\n-                        }\n+                    /* Calling a non-static member function dve.var, which is returning `this`, and with dve.e1 representing `this`\n+                     */\n \n-                        const psr = buildScopeRef(getThisStorageClass(fd));\n-                        if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n-                            dve.e1.accept(this);\n-                        else if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n-                        {\n-                            if (tf.isref)\n-                            {\n-                                /* Treat calling:\n-                                 *   struct S { ref S foo() return; }\n-                                 * as:\n-                                 *   this;\n-                                 */\n-                                dve.e1.accept(this);\n-                            }\n-                            else\n-                                escapeByRef(dve.e1, er, live);\n-                        }\n+                    /*****************************\n+                     * Concoct storage class for member function's implicit `this` parameter.\n+                     * Params:\n+                     *      fd = member function\n+                     * Returns:\n+                     *      storage class for fd's `this`\n+                     */\n+                    StorageClass getThisStorageClass(FuncDeclaration fd)\n+                    {\n+                        StorageClass stc;\n+                        auto tf = fd.type.toBasetype().isTypeFunction();\n+                        if (tf.isreturn)\n+                            stc |= STC.return_;\n+                        if (tf.isreturnscope)\n+                            stc |= STC.returnScope;\n+                        auto ad = fd.isThis();\n+                        if (ad.isClassDeclaration() || tf.isScopeQual)\n+                            stc |= STC.scope_;\n+                        if (ad.isStructDeclaration())\n+                            stc |= STC.ref_;        // `this` for a struct member function is passed by `ref`\n+                        return stc;\n                     }\n-                }\n-                else\n-                {\n-                    // Calling member function before dip1000\n-                    StorageClass stc = dve.var.storage_class & (STC.return_ | STC.scope_ | STC.ref_);\n-                    if (tf.isreturn)\n-                        stc |= STC.return_;\n \n-                    const psr = buildScopeRef(stc);\n+                    const psr = buildScopeRef(getThisStorageClass(fd));\n                     if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n-                        dve.e1.accept(this);\n+                        escapeByValue(dve.e1, er, live);\n                     else if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n-                        escapeByRef(dve.e1, er, live);\n+                    {\n+                        if (tf.isref)\n+                        {\n+                            /* Treat calling:\n+                             *   struct S { ref S foo() return; }\n+                             * as:\n+                             *   this;\n+                             */\n+                            escapeByValue(dve.e1, er, live);\n+                        }\n+                        else\n+                            escapeByRef(dve.e1, er, live);\n+                    }\n                 }\n+            }\n+            else\n+            {\n+                // Calling member function before dip1000\n+                StorageClass stc = dve.var.storage_class & (STC.return_ | STC.scope_ | STC.ref_);\n+                if (tf.isreturn)\n+                    stc |= STC.return_;\n \n-                // If it's also a nested function that is 'return scope'\n-                if (fd && fd.isNested())\n-                {\n-                    if (tf.isreturn && tf.isScopeQual)\n-                        er.byexp.push(e);\n-                }\n+                const psr = buildScopeRef(stc);\n+                if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n+                    escapeByValue(dve.e1, er, live);\n+                else if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n+                    escapeByRef(dve.e1, er, live);\n             }\n \n-            /* If returning the result of a delegate call, the .ptr\n-             * field of the delegate must be checked.\n-             */\n-            if (dg)\n+            // If it's also a nested function that is 'return scope'\n+            if (fd && fd.isNested())\n             {\n-                if (tf.isreturn)\n-                    e.e1.accept(this);\n+                if (tf.isreturn && tf.isScopeQual)\n+                    er.byexp.push(e);\n             }\n+        }\n \n-            /* If it's a nested function that is 'return scope'\n-             */\n-            if (auto ve = e.e1.isVarExp())\n+        /* If returning the result of a delegate call, the .ptr\n+         * field of the delegate must be checked.\n+         */\n+        if (dg)\n+        {\n+            if (tf.isreturn)\n+                escapeByValue(e.e1, er, live);\n+        }\n+\n+        /* If it's a nested function that is 'return scope'\n+         */\n+        if (auto ve = e.e1.isVarExp())\n+        {\n+            FuncDeclaration fd = ve.var.isFuncDeclaration();\n+            if (fd && fd.isNested())\n             {\n-                FuncDeclaration fd = ve.var.isFuncDeclaration();\n-                if (fd && fd.isNested())\n-                {\n-                    if (tf.isreturn && tf.isScopeQual)\n-                        er.byexp.push(e);\n-                }\n+                if (tf.isreturn && tf.isScopeQual)\n+                    er.byexp.push(e);\n             }\n         }\n     }\n \n-    scope EscapeVisitor v = new EscapeVisitor(er, live);\n-    e.accept(v);\n+    switch (e.op)\n+    {\n+        case EXP.address: return visitAddr(e.isAddrExp());\n+        case EXP.symbolOffset: return visitSymOff(e.isSymOffExp());\n+        case EXP.variable: return visitVar(e.isVarExp());\n+        case EXP.this_: return visitThis(e.isThisExp());\n+        case EXP.star: return visitPtr(e.isPtrExp());\n+        case EXP.dotVariable: return visitDotVar(e.isDotVarExp());\n+        case EXP.delegate_: return visitDelegate(e.isDelegateExp());\n+        case EXP.function_: return visitFunc(e.isFuncExp());\n+        case EXP.tuple: return visitTuple(e.isTupleExp());\n+        case EXP.arrayLiteral: return visitArrayLiteral(e.isArrayLiteralExp());\n+        case EXP.structLiteral: return visitStructLiteral(e.isStructLiteralExp());\n+        case EXP.new_: return visitNew(e.isNewExp());\n+        case EXP.cast_: return visitCast(e.isCastExp());\n+        case EXP.slice: return visitSlice(e.isSliceExp());\n+        case EXP.index: return visitIndex(e.isIndexExp());\n+        case EXP.blit: return visitAssign(e.isBlitExp());\n+        case EXP.construct: return visitAssign(e.isConstructExp());\n+        case EXP.assign: return visitAssign(e.isAssignExp());\n+        case EXP.comma: return visitComma(e.isCommaExp());\n+        case EXP.question: return visitCond(e.isCondExp());\n+        case EXP.call: return visitCall(e.isCallExp());\n+        default:\n+            if (auto b = e.isBinExp())\n+                return visitBin(b);\n+            if (auto ba = e.isBinAssignExp())\n+                return visitBinAssign(ba);\n+            return visit(e);\n+    }\n }\n \n \n@@ -1877,236 +1856,239 @@ void escapeByValue(Expression e, EscapeByResults* er, bool live = false)\n void escapeByRef(Expression e, EscapeByResults* er, bool live = false)\n {\n     //printf(\"[%s] escapeByRef, e: %s\\n\", e.loc.toChars(), e.toChars());\n-    extern (C++) final class EscapeRefVisitor : Visitor\n+    void visit(Expression e)\n     {\n-        alias visit = Visitor.visit;\n-    public:\n-        EscapeByResults* er;\n-        bool live;\n-\n-        extern (D) this(EscapeByResults* er, bool live)\n-        {\n-            this.er = er;\n-            this.live = live;\n-        }\n-\n-        override void visit(Expression e)\n-        {\n-        }\n+    }\n \n-        override void visit(VarExp e)\n+    void visitVar(VarExp e)\n+    {\n+        auto v = e.var.isVarDeclaration();\n+        if (v)\n         {\n-            auto v = e.var.isVarDeclaration();\n-            if (v)\n+            if (v.storage_class & STC.ref_ && v.storage_class & (STC.foreach_ | STC.temp) && v._init)\n             {\n-                if (v.storage_class & STC.ref_ && v.storage_class & (STC.foreach_ | STC.temp) && v._init)\n+                /* If compiler generated ref temporary\n+                    *   (ref v = ex; ex)\n+                    * look at the initializer instead\n+                    */\n+                if (ExpInitializer ez = v._init.isExpInitializer())\n                 {\n-                    /* If compiler generated ref temporary\n-                     *   (ref v = ex; ex)\n-                     * look at the initializer instead\n-                     */\n-                    if (ExpInitializer ez = v._init.isExpInitializer())\n-                    {\n-                        if (auto ce = ez.exp.isConstructExp())\n-                            ce.e2.accept(this);\n-                        else\n-                            ez.exp.accept(this);\n-                    }\n+                    if (auto ce = ez.exp.isConstructExp())\n+                        escapeByRef(ce.e2, er, live);\n+                    else\n+                        escapeByRef(ez.exp, er, live);\n                 }\n-                else\n-                    er.byref.push(v);\n             }\n+            else\n+                er.byref.push(v);\n         }\n+    }\n \n-        override void visit(ThisExp e)\n-        {\n-            if (e.var && e.var.toParent2().isFuncDeclaration().hasDualContext())\n-                escapeByValue(e, er, live);\n-            else if (e.var)\n-                er.byref.push(e.var);\n-        }\n+    void visitThis(ThisExp e)\n+    {\n+        if (e.var && e.var.toParent2().isFuncDeclaration().hasDualContext())\n+            escapeByValue(e, er, live);\n+        else if (e.var)\n+            er.byref.push(e.var);\n+    }\n \n-        override void visit(PtrExp e)\n-        {\n-            escapeByValue(e.e1, er, live);\n-        }\n+    void visitPtr(PtrExp e)\n+    {\n+        escapeByValue(e.e1, er, live);\n+    }\n \n-        override void visit(IndexExp e)\n+    void visitIndex(IndexExp e)\n+    {\n+        Type tb = e.e1.type.toBasetype();\n+        if (auto ve = e.e1.isVarExp())\n         {\n-            Type tb = e.e1.type.toBasetype();\n-            if (auto ve = e.e1.isVarExp())\n+            VarDeclaration v = ve.var.isVarDeclaration();\n+            if (tb.ty == Tarray || tb.ty == Tsarray)\n             {\n-                VarDeclaration v = ve.var.isVarDeclaration();\n-                if (tb.ty == Tarray || tb.ty == Tsarray)\n+                if (v && v.storage_class & STC.variadic)\n                 {\n-                    if (v && v.storage_class & STC.variadic)\n-                    {\n-                        er.byref.push(v);\n-                        return;\n-                    }\n+                    er.byref.push(v);\n+                    return;\n                 }\n             }\n-            if (tb.ty == Tsarray)\n-            {\n-                e.e1.accept(this);\n-            }\n-            else if (tb.ty == Tarray)\n-            {\n-                escapeByValue(e.e1, er, live);\n-            }\n         }\n-\n-        override void visit(StructLiteralExp e)\n+        if (tb.ty == Tsarray)\n         {\n-            if (e.elements)\n-            {\n-                foreach (ex; *e.elements)\n-                {\n-                    if (ex)\n-                        ex.accept(this);\n-                }\n-            }\n-            er.byexp.push(e);\n+            escapeByRef(e.e1, er, live);\n         }\n-\n-        override void visit(DotVarExp e)\n+        else if (tb.ty == Tarray)\n         {\n-            Type t1b = e.e1.type.toBasetype();\n-            if (t1b.ty == Tclass)\n-                escapeByValue(e.e1, er, live);\n-            else\n-                e.e1.accept(this);\n+            escapeByValue(e.e1, er, live);\n         }\n+    }\n \n-        override void visit(BinAssignExp e)\n+    void visitStructLiteral(StructLiteralExp e)\n+    {\n+        if (e.elements)\n         {\n-            e.e1.accept(this);\n+            foreach (ex; *e.elements)\n+            {\n+                if (ex)\n+                    escapeByRef(ex, er, live);\n+            }\n         }\n+        er.byexp.push(e);\n+    }\n \n-        override void visit(AssignExp e)\n-        {\n-            e.e1.accept(this);\n-        }\n+    void visitDotVar(DotVarExp e)\n+    {\n+        Type t1b = e.e1.type.toBasetype();\n+        if (t1b.ty == Tclass)\n+            escapeByValue(e.e1, er, live);\n+        else\n+            escapeByRef(e.e1, er, live);\n+    }\n \n-        override void visit(CommaExp e)\n-        {\n-            e.e2.accept(this);\n-        }\n+    void visitBinAssign(BinAssignExp e)\n+    {\n+        escapeByRef(e.e1, er, live);\n+    }\n \n-        override void visit(CondExp e)\n-        {\n-            e.e1.accept(this);\n-            e.e2.accept(this);\n-        }\n+    void visitAssign(AssignExp e)\n+    {\n+        escapeByRef(e.e1, er, live);\n+    }\n \n-        override void visit(CallExp e)\n+    void visitComma(CommaExp e)\n+    {\n+        escapeByRef(e.e2, er, live);\n+    }\n+\n+    void visitCond(CondExp e)\n+    {\n+        escapeByRef(e.e1, er, live);\n+        escapeByRef(e.e2, er, live);\n+    }\n+\n+    void visitCall(CallExp e)\n+    {\n+        //printf(\"escapeByRef.CallExp(): %s\\n\", e.toChars());\n+        /* If the function returns by ref, check each argument that is\n+         * passed as 'return ref'.\n+         */\n+        Type t1 = e.e1.type.toBasetype();\n+        TypeFunction tf;\n+        if (t1.ty == Tdelegate)\n+            tf = t1.isTypeDelegate().next.isTypeFunction();\n+        else if (t1.ty == Tfunction)\n+            tf = t1.isTypeFunction();\n+        else\n+            return;\n+        if (tf.isref)\n         {\n-            //printf(\"escapeByRef.CallExp(): %s\\n\", e.toChars());\n-            /* If the function returns by ref, check each argument that is\n-             * passed as 'return ref'.\n-             */\n-            Type t1 = e.e1.type.toBasetype();\n-            TypeFunction tf;\n-            if (t1.ty == Tdelegate)\n-                tf = t1.isTypeDelegate().next.isTypeFunction();\n-            else if (t1.ty == Tfunction)\n-                tf = t1.isTypeFunction();\n-            else\n-                return;\n-            if (tf.isref)\n+            if (e.arguments && e.arguments.dim)\n             {\n-                if (e.arguments && e.arguments.dim)\n+                /* j=1 if _arguments[] is first argument,\n+                 * skip it because it is not passed by ref\n+                 */\n+                int j = tf.isDstyleVariadic();\n+                for (size_t i = j; i < e.arguments.dim; ++i)\n                 {\n-                    /* j=1 if _arguments[] is first argument,\n-                     * skip it because it is not passed by ref\n-                     */\n-                    int j = tf.isDstyleVariadic();\n-                    for (size_t i = j; i < e.arguments.dim; ++i)\n+                    Expression arg = (*e.arguments)[i];\n+                    size_t nparams = tf.parameterList.length;\n+                    if (i - j < nparams && i >= j)\n                     {\n-                        Expression arg = (*e.arguments)[i];\n-                        size_t nparams = tf.parameterList.length;\n-                        if (i - j < nparams && i >= j)\n+                        Parameter p = tf.parameterList[i - j];\n+                        const stc = tf.parameterStorageClass(null, p);\n+                        ScopeRef psr = buildScopeRef(stc);\n+                        if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n+                            escapeByRef(arg, er, live);\n+                        else if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n                         {\n-                            Parameter p = tf.parameterList[i - j];\n-                            const stc = tf.parameterStorageClass(null, p);\n-                            ScopeRef psr = buildScopeRef(stc);\n-                            if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n-                                arg.accept(this);\n-                            else if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n+                            if (auto de = arg.isDelegateExp())\n                             {\n-                                if (auto de = arg.isDelegateExp())\n-                                {\n-                                    if (de.func.isNested())\n-                                        er.byexp.push(de);\n-                                }\n-                                else\n-                                    escapeByValue(arg, er, live);\n+                                if (de.func.isNested())\n+                                    er.byexp.push(de);\n                             }\n+                            else\n+                                escapeByValue(arg, er, live);\n                         }\n                     }\n                 }\n-                // If 'this' is returned by ref, check it too\n-                if (e.e1.op == EXP.dotVariable && t1.ty == Tfunction)\n+            }\n+            // If 'this' is returned by ref, check it too\n+            if (e.e1.op == EXP.dotVariable && t1.ty == Tfunction)\n+            {\n+                DotVarExp dve = e.e1.isDotVarExp();\n+\n+                // https://issues.dlang.org/show_bug.cgi?id=20149#c10\n+                if (dve.var.isCtorDeclaration())\n                 {\n-                    DotVarExp dve = e.e1.isDotVarExp();\n+                    er.byexp.push(e);\n+                    return;\n+                }\n \n-                    // https://issues.dlang.org/show_bug.cgi?id=20149#c10\n-                    if (dve.var.isCtorDeclaration())\n-                    {\n-                        er.byexp.push(e);\n-                        return;\n-                    }\n+                StorageClass stc = dve.var.storage_class & (STC.return_ | STC.scope_ | STC.ref_);\n+                if (tf.isreturn)\n+                    stc |= STC.return_;\n+                if (tf.isref)\n+                    stc |= STC.ref_;\n+                if (tf.isScopeQual)\n+                    stc |= STC.scope_;\n+                if (tf.isreturnscope)\n+                    stc |= STC.returnScope;\n+\n+                const psr = buildScopeRef(stc);\n+                if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n+                        escapeByRef(dve.e1, er, live);\n+                else if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n+                        escapeByValue(dve.e1, er, live);\n \n-                    StorageClass stc = dve.var.storage_class & (STC.return_ | STC.scope_ | STC.ref_);\n-                    if (tf.isreturn)\n-                        stc |= STC.return_;\n-                    if (tf.isref)\n-                        stc |= STC.ref_;\n-                    if (tf.isScopeQual)\n-                        stc |= STC.scope_;\n-                    if (tf.isreturnscope)\n-                        stc |= STC.returnScope;\n-\n-                    const psr = buildScopeRef(stc);\n-                    if (psr == ScopeRef.ReturnRef || psr == ScopeRef.ReturnRef_Scope)\n-                         dve.e1.accept(this);\n-                    else if (psr == ScopeRef.ReturnScope || psr == ScopeRef.Ref_ReturnScope)\n-                         escapeByValue(dve.e1, er, live);\n-\n-                    // If it's also a nested function that is 'return ref'\n-                    if (FuncDeclaration fd = dve.var.isFuncDeclaration())\n+                // If it's also a nested function that is 'return ref'\n+                if (FuncDeclaration fd = dve.var.isFuncDeclaration())\n+                {\n+                    if (fd.isNested() && tf.isreturn)\n                     {\n-                        if (fd.isNested() && tf.isreturn)\n-                        {\n-                            er.byexp.push(e);\n-                        }\n+                        er.byexp.push(e);\n                     }\n                 }\n-                // If it's a delegate, check it too\n-                if (e.e1.op == EXP.variable && t1.ty == Tdelegate)\n-                {\n-                    escapeByValue(e.e1, er, live);\n-                }\n+            }\n+            // If it's a delegate, check it too\n+            if (e.e1.op == EXP.variable && t1.ty == Tdelegate)\n+            {\n+                escapeByValue(e.e1, er, live);\n+            }\n \n-                /* If it's a nested function that is 'return ref'\n-                 */\n-                if (auto ve = e.e1.isVarExp())\n+            /* If it's a nested function that is 'return ref'\n+             */\n+            if (auto ve = e.e1.isVarExp())\n+            {\n+                FuncDeclaration fd = ve.var.isFuncDeclaration();\n+                if (fd && fd.isNested())\n                 {\n-                    FuncDeclaration fd = ve.var.isFuncDeclaration();\n-                    if (fd && fd.isNested())\n-                    {\n-                        if (tf.isreturn)\n-                            er.byexp.push(e);\n-                    }\n+                    if (tf.isreturn)\n+                        er.byexp.push(e);\n                 }\n             }\n-            else\n-                er.byexp.push(e);\n         }\n+        else\n+            er.byexp.push(e);\n     }\n \n-    scope EscapeRefVisitor v = new EscapeRefVisitor(er, live);\n-    e.accept(v);\n+    switch (e.op)\n+    {\n+        case EXP.variable: return visitVar(e.isVarExp());\n+        case EXP.this_: return visitThis(e.isThisExp());\n+        case EXP.star: return visitPtr(e.isPtrExp());\n+        case EXP.structLiteral: return visitStructLiteral(e.isStructLiteralExp());\n+        case EXP.dotVariable: return visitDotVar(e.isDotVarExp());\n+        case EXP.index: return visitIndex(e.isIndexExp());\n+        case EXP.blit: return visitAssign(e.isBlitExp());\n+        case EXP.construct: return visitAssign(e.isConstructExp());\n+        case EXP.assign: return visitAssign(e.isAssignExp());\n+        case EXP.comma: return visitComma(e.isCommaExp());\n+        case EXP.question: return visitCond(e.isCondExp());\n+        case EXP.call: return visitCall(e.isCallExp());\n+        default:\n+            if (auto ba = e.isBinAssignExp())\n+                return visitBinAssign(ba);\n+            return visit(e);\n+    }\n }\n \n \n@@ -2170,20 +2152,96 @@ public void findAllOuterAccessedVariables(FuncDeclaration fd, VarDeclarations* v\n  */\n version (none)\n {\n-    public void notMaybeScope(string file = __FILE__, int line = __LINE__)(VarDeclaration v)\n+    private void notMaybeScope(string file = __FILE__, int line = __LINE__)(VarDeclaration v)\n     {\n         printf(\"%.*s(%d): notMaybeScope('%s')\\n\", cast(int)file.length, file.ptr, line, v.toChars());\n         v.storage_class &= ~STC.maybescope;\n     }\n }\n else\n {\n-    public void notMaybeScope(VarDeclaration v)\n+    private void notMaybeScope(VarDeclaration v)\n     {\n         v.storage_class &= ~STC.maybescope;\n     }\n }\n \n+/***********************************\n+ * After semantic analysis of the function body,\n+ * try to infer `scope` / `return` on the parameters\n+ *\n+ * Params:\n+ *   funcdecl = function declaration that was analyzed\n+ *   f = final function type. `funcdecl.type` started as the 'premature type' before attribute\n+ *       inference, then its inferred attributes are copied over to final type `f`\n+ */\n+void finishScopeParamInference(FuncDeclaration funcdecl, ref TypeFunction f)\n+{\n+    if (funcdecl.flags & FUNCFLAG.returnInprocess)\n+    {\n+        funcdecl.flags &= ~FUNCFLAG.returnInprocess;\n+        if (funcdecl.storage_class & STC.return_)\n+        {\n+            if (funcdecl.type == f)\n+                f = cast(TypeFunction)f.copy();\n+            f.isreturn = true;\n+            f.isreturnscope = cast(bool) (funcdecl.storage_class & STC.returnScope);\n+            if (funcdecl.storage_class & STC.returninferred)\n+                f.isreturninferred = true;\n+        }\n+    }\n+\n+    funcdecl.flags &= ~FUNCFLAG.inferScope;\n+\n+    // Eliminate maybescope's\n+    {\n+        // Create and fill array[] with maybe candidates from the `this` and the parameters\n+        VarDeclaration[10] tmp = void;\n+        size_t dim = (funcdecl.vthis !is null) + (funcdecl.parameters ? funcdecl.parameters.dim : 0);\n+\n+        import dmd.common.string : SmallBuffer;\n+        auto sb = SmallBuffer!VarDeclaration(dim, tmp[]);\n+        VarDeclaration[] array = sb[];\n+\n+        size_t n = 0;\n+        if (funcdecl.vthis)\n+            array[n++] = funcdecl.vthis;\n+        if (funcdecl.parameters)\n+        {\n+            foreach (v; *funcdecl.parameters)\n+            {\n+                array[n++] = v;\n+            }\n+        }\n+        eliminateMaybeScopes(array[0 .. n]);\n+    }\n+\n+    // Infer STC.scope_\n+    if (funcdecl.parameters && !funcdecl.errors)\n+    {\n+        assert(f.parameterList.length == funcdecl.parameters.dim);\n+        foreach (u, p; f.parameterList)\n+        {\n+            auto v = (*funcdecl.parameters)[u];\n+            if (v.storage_class & STC.maybescope)\n+            {\n+                //printf(\"Inferring scope for %s\\n\", v.toChars());\n+                notMaybeScope(v);\n+                v.storage_class |= STC.scope_ | STC.scopeinferred;\n+                p.storageClass |= STC.scope_ | STC.scopeinferred;\n+                assert(!(p.storageClass & STC.maybescope));\n+            }\n+        }\n+    }\n+\n+    if (funcdecl.vthis && funcdecl.vthis.storage_class & STC.maybescope)\n+    {\n+        notMaybeScope(funcdecl.vthis);\n+        funcdecl.vthis.storage_class |= STC.scope_ | STC.scopeinferred;\n+        f.isScopeQual = true;\n+        f.isscopeinferred = true;\n+    }\n+}\n \n /**********************************************\n  * Have some variables that are maybescopes that were\n@@ -2207,7 +2265,7 @@ else\n  * Params:\n  *      array = array of variables that were assigned to from maybescope variables\n  */\n-public void eliminateMaybeScopes(VarDeclaration[] array)\n+private void eliminateMaybeScopes(VarDeclaration[] array)\n {\n     enum log = false;\n     if (log) printf(\"eliminateMaybeScopes()\\n\");\n@@ -2355,10 +2413,89 @@ private void addMaybe(VarDeclaration va, VarDeclaration v)\n     va.maybes.push(v);\n }\n \n+/***************************************\n+ * Like `FuncDeclaration.setUnsafe`, but modified for dip25 / dip1000 by default transitions\n+ *\n+ * With `-preview=dip1000` it actually sets the function as unsafe / prints an error, while\n+ * without it, it only prints a deprecation in a `@safe` function.\n+ * With `-revert=preview=dip1000`, it doesn't do anything.\n+ *\n+ * Params:\n+ *   sc = used for checking whether we are in a deprecated scope\n+ *   fs = command line setting of dip1000 / dip25\n+ *   gag = surpress error message\n+ *   loc = location of error\n+ *   fmt = printf-style format string\n+ *   arg0  = (optional) argument for first %s format specifier\n+ *   arg1  = (optional) argument for second %s format specifier\n+ * Returns: whether an actual safe error (not deprecation) occured\n+ */\n+private bool setUnsafePreview(Scope* sc, FeatureState fs, bool gag, Loc loc, const(char)* msg, RootObject arg0 = null, RootObject arg1 = null)\n+{\n+    if (fs == FeatureState.disabled)\n+    {\n+        return false;\n+    }\n+    else if (fs == FeatureState.enabled)\n+    {\n+        return sc.func.setUnsafe(gag, loc, msg, arg0, arg1);\n+    }\n+    else\n+    {\n+        if (sc.func.isSafeBypassingInference())\n+        {\n+            if (!gag)\n+                previewErrorFunc(sc.isDeprecated(), fs)(\n+                    loc, msg, arg0 ? arg0.toChars() : \"\", arg1 ? arg1.toChars() : \"\"\n+                );\n+        }\n+        return false;\n+    }\n+}\n+\n+// `setUnsafePreview` partially evaluated for dip1000\n+private bool setUnsafeDIP1000(Scope* sc, bool gag, Loc loc, const(char)* msg, RootObject arg0 = null, RootObject arg1 = null)\n+{\n+    return setUnsafePreview(sc, global.params.useDIP1000, gag, loc, msg, arg0, arg1);\n+}\n \n-private bool setUnsafeDIP1000(FuncDeclaration f)\n+/***************************************\n+ * Check that taking the address of `v` is `@safe`\n+ *\n+ * It's not possible to take the address of a scope variable, because `scope` only applies\n+ * to the top level indirection.\n+ *\n+ * Params:\n+ *     v = variable that a reference is created\n+ *     e = expression that takes the referene\n+ *     sc = used to obtain function / deprecated status\n+ *     gag = don't print errors\n+ * Returns:\n+ *     true if taking the address of `v` is problematic because of the lack of transitive `scope`\n+ */\n+private bool checkScopeVarAddr(VarDeclaration v, Expression e, Scope* sc, bool gag)\n {\n-    return global.params.useDIP1000 == FeatureState.enabled\n-        ? f.setUnsafe()\n-        : f.isSafeBypassingInference();\n+    if (v.storage_class & STC.temp)\n+        return false;\n+\n+    if (!v.isScope())\n+    {\n+        v.storage_class &= ~STC.maybescope;\n+        v.doNotInferScope = true;\n+        return false;\n+    }\n+\n+    if (!e.type)\n+        return false;\n+\n+    // When the type after dereferencing has no pointers, it's okay.\n+    // Comes up when escaping `&someStruct.intMember` of a `scope` struct:\n+    // scope does not apply to the `int`\n+    Type t = e.type.baseElemOf();\n+    if ((t.ty == Tarray || t.ty == Tpointer) && !t.nextOf().toBasetype().hasPointers())\n+        return false;\n+\n+    // take address of `scope` variable not allowed, requires transitive scope\n+    return sc.setUnsafeDIP1000(gag, e.loc,\n+        \"cannot take address of `scope` variable `%s` since `scope` applies to first indirection only\", v);\n }"}, {"sha": "08723565355e231a22b45f5de25b4a6138617f6d", "filename": "gcc/d/dmd/expression.d", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fexpression.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fexpression.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1370,10 +1370,9 @@ extern (C++) abstract class Expression : ASTNode\n          */\n         if (v.storage_class & STC.gshared)\n         {\n-            if (sc.func.setUnsafe())\n+            if (sc.func.setUnsafe(false, this.loc,\n+                \"`@safe` function `%s` cannot access `__gshared` data `%s`\", sc.func, v))\n             {\n-                error(\"`@safe` %s `%s` cannot access `__gshared` data `%s`\",\n-                    sc.func.kind(), sc.func.toChars(), v.toChars());\n                 err = true;\n             }\n         }\n@@ -1411,7 +1410,7 @@ extern (C++) abstract class Expression : ASTNode\n \n         if (!f.isSafe() && !f.isTrusted())\n         {\n-            if (sc.flags & SCOPE.compile ? sc.func.isSafeBypassingInference() : sc.func.setUnsafe())\n+            if (sc.flags & SCOPE.compile ? sc.func.isSafeBypassingInference() : sc.func.setUnsafeCall(f))\n             {\n                 if (!loc.isValid()) // e.g. implicitly generated dtor\n                     loc = sc.func.loc;\n@@ -1420,6 +1419,7 @@ extern (C++) abstract class Expression : ASTNode\n                 error(\"`@safe` %s `%s` cannot call `@system` %s `%s`\",\n                     sc.func.kind(), sc.func.toPrettyChars(), f.kind(),\n                     prettyChars);\n+                f.errorSupplementalInferredSafety(/*max depth*/ 10);\n                 .errorSupplemental(f.loc, \"`%s` is declared here\", prettyChars);\n \n                 checkOverridenDtor(sc, f, dd => dd.type.toTypeFunction().trust > TRUST.system, \"@system\");\n@@ -1456,7 +1456,8 @@ extern (C++) abstract class Expression : ASTNode\n \n                 // Lowered non-@nogc'd hooks will print their own error message inside of nogc.d (NOGCVisitor.visit(CallExp e)),\n                 // so don't print anything to avoid double error messages.\n-                if (!(f.ident == Id._d_HookTraceImpl || f.ident == Id._d_arraysetlengthT))\n+                if (!(f.ident == Id._d_HookTraceImpl || f.ident == Id._d_arraysetlengthT\n+                    || f.ident == Id._d_arrayappendT || f.ident == Id._d_arrayappendcTX))\n                     error(\"`@nogc` %s `%s` cannot call non-@nogc %s `%s`\",\n                         sc.func.kind(), sc.func.toPrettyChars(), f.kind(), f.toPrettyChars());\n \n@@ -5760,9 +5761,8 @@ extern (C++) final class DelegatePtrExp : UnaExp\n \n     override Expression modifiableLvalue(Scope* sc, Expression e)\n     {\n-        if (sc.func.setUnsafe())\n+        if (sc.func.setUnsafe(false, this.loc, \"cannot modify delegate pointer in `@safe` code `%s`\", this))\n         {\n-            error(\"cannot modify delegate pointer in `@safe` code `%s`\", toChars());\n             return ErrorExp.get();\n         }\n         return Expression.modifiableLvalue(sc, e);\n@@ -5799,9 +5799,8 @@ extern (C++) final class DelegateFuncptrExp : UnaExp\n \n     override Expression modifiableLvalue(Scope* sc, Expression e)\n     {\n-        if (sc.func.setUnsafe())\n+        if (sc.func.setUnsafe(false, this.loc, \"cannot modify delegate function pointer in `@safe` code `%s`\", this))\n         {\n-            error(\"cannot modify delegate function pointer in `@safe` code `%s`\", toChars());\n             return ErrorExp.get();\n         }\n         return Expression.modifiableLvalue(sc, e);"}, {"sha": "b65b0ed1375420b13a98bf550f6c52b5ef1efd71", "filename": "gcc/d/dmd/expressionsem.d", "status": "modified", "additions": 264, "deletions": 202, "changes": 466, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1276,7 +1276,7 @@ private Expression resolvePropertiesX(Scope* sc, Expression e1, Expression e2 =\n                     // @@@DEPRECATED_2.105@@@\n                     // When turning into error, uncomment the return statement\n                     TypeFunction tf = fd.type.isTypeFunction();\n-                    deprecation(loc, \"Function `%s` of type `%s` is not accessible from module `%s`\",\n+                    deprecation(loc, \"function `%s` of type `%s` is not accessible from module `%s`\",\n                                 fd.toPrettyChars(), tf.toChars, sc._module.toChars);\n                     //return ErrorExp.get();\n                 }\n@@ -1298,7 +1298,7 @@ private Expression resolvePropertiesX(Scope* sc, Expression e1, Expression e2 =\n                     {\n                         // @@@DEPRECATED_2.105@@@\n                         // When turning into error, uncomment the return statement\n-                        deprecation(loc, \"Function `%s` of type `%s` is not accessible from module `%s`\",\n+                        deprecation(loc, \"function `%s` of type `%s` is not accessible from module `%s`\",\n                                     fd.toPrettyChars(), tf.toChars, sc._module.toChars);\n                         //return ErrorExp.get();\n                     }\n@@ -2035,20 +2035,26 @@ private bool functionParameters(const ref Loc loc, Scope* sc,\n                 /* Argument value can be assigned to firstArg.\n                  * Check arg to see if it matters.\n                  */\n-                if (global.params.useDIP1000 == FeatureState.enabled)\n-                    err |= checkParamArgumentReturn(sc, firstArg, arg, p, false);\n+                err |= checkParamArgumentReturn(sc, firstArg, arg, p, false);\n             }\n             // Allow 'lazy' to imply 'scope' - lazy parameters can be passed along\n             // as lazy parameters to the next function, but that isn't escaping.\n-            else if (!(pStc & (STC.scope_ | STC.lazy_)))\n+            else if (!(pStc & STC.lazy_))\n             {\n                 /* Argument value can escape from the called function.\n                  * Check arg to see if it matters.\n                  */\n-                if (global.params.useDIP1000 == FeatureState.enabled)\n-                    err |= checkParamArgumentEscape(sc, fd, p, arg, false, false);\n+                err |= checkParamArgumentEscape(sc, fd, p, cast(STC) pStc, arg, false, false);\n             }\n-            else if (!(pStc & STC.return_))\n+\n+            // Turning heap allocations into stack allocations is dangerous without dip1000, since `scope` inference\n+            // may be unreliable when scope violations only manifest as deprecation warnings.\n+            // However, existing `@nogc` code may rely on it, so still do it when the parameter is explicitly marked `scope`\n+            const explicitScope = (p.storageClass & STC.lazy_) ||\n+                ((p.storageClass & STC.scope_) && !(p.storageClass & STC.scopeinferred));\n+            if ((pStc & (STC.scope_ | STC.lazy_)) &&\n+                ((global.params.useDIP1000 == FeatureState.enabled) || explicitScope) &&\n+                !(pStc & STC.return_))\n             {\n                 /* Argument value cannot escape from the called function.\n                  */\n@@ -2058,13 +2064,14 @@ private bool functionParameters(const ref Loc loc, Scope* sc,\n \n                 ArrayLiteralExp ale;\n                 if (p.type.toBasetype().ty == Tarray &&\n-                    (ale = a.isArrayLiteralExp()) !is null)\n+                    (ale = a.isArrayLiteralExp()) !is null && ale.elements && ale.elements.length > 0)\n                 {\n                     // allocate the array literal as temporary static array on the stack\n-                    ale.type = ale.type.nextOf().sarrayOf(ale.elements ? ale.elements.length : 0);\n+                    ale.type = ale.type.nextOf().sarrayOf(ale.elements.length);\n                     auto tmp = copyToTemp(0, \"__arrayliteral_on_stack\", ale);\n                     auto declareTmp = new DeclarationExp(ale.loc, tmp);\n-                    auto castToSlice = new CastExp(ale.loc, new VarExp(ale.loc, tmp), p.type);\n+                    auto castToSlice = new CastExp(ale.loc, new VarExp(ale.loc, tmp),\n+                        p.type.substWildTo(MODFlags.mutable));\n                     arg = CommaExp.combine(declareTmp, castToSlice);\n                     arg = arg.expressionSemantic(sc);\n                 }\n@@ -2473,7 +2480,7 @@ Package resolveIsPackage(Dsymbol sym)\n     {\n         if (imp.pkg is null)\n         {\n-            .error(sym.loc, \"Internal Compiler Error: unable to process forward-referenced import `%s`\",\n+            .error(sym.loc, \"internal compiler error: unable to process forward-referenced import `%s`\",\n                     imp.toChars());\n             assert(0);\n         }\n@@ -2995,7 +3002,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             buffer.write4(0);\n             e.setData(buffer.extractData(), newlen, 4);\n             if (sc && sc.flags & SCOPE.Cfile)\n-                e.type = Type.tuns32.pointerTo();\n+                e.type = Type.tuns32.sarrayOf(e.len + 1);\n             else\n                 e.type = Type.tdchar.immutableOf().arrayOf();\n             e.committed = 1;\n@@ -3020,7 +3027,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             buffer.writeUTF16(0);\n             e.setData(buffer.extractData(), newlen, 2);\n             if (sc && sc.flags & SCOPE.Cfile)\n-                e.type = Type.tuns16.pointerTo();\n+                e.type = Type.tuns16.sarrayOf(e.len + 1);\n             else\n                 e.type = Type.twchar.immutableOf().arrayOf();\n             e.committed = 1;\n@@ -3032,7 +3039,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n         default:\n             if (sc && sc.flags & SCOPE.Cfile)\n-                e.type = Type.tchar.pointerTo();\n+                e.type = Type.tchar.sarrayOf(e.len + 1);\n             else\n                 e.type = Type.tchar.immutableOf().arrayOf();\n             break;\n@@ -3170,11 +3177,8 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n         semanticTypeInfo(sc, e.type);\n \n-        if (global.params.useDIP1000 == FeatureState.enabled)\n-        {\n-            if (checkAssocArrayLiteralEscape(sc, e, false))\n-                return setError();\n-        }\n+        if (checkAssocArrayLiteralEscape(sc, e, false))\n+            return setError();\n \n         result = e;\n     }\n@@ -3261,7 +3265,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             // to fix https://issues.dlang.org/show_bug.cgi?id=9490\n             VarExp ve = e.isVarExp();\n             if (ve && ve.var && exp.parens && !ve.var.isStatic() && !(sc.stc & STC.static_) &&\n-                sc.func && sc.func.needThis && ve.var.toParent2().isAggregateDeclaration())\n+                sc.func && sc.func.needThis && ve.var.isMember2())\n             {\n                 // printf(\"apply fix for issue 9490: add `this.` to `%s`...\\n\", e.toChars());\n                 e = new DotVarExp(exp.loc, new ThisExp(exp.loc), ve.var, false);\n@@ -3782,13 +3786,10 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n                 /* Since a `new` allocation may escape, check each of the arguments for escaping\n                  */\n-                if (global.params.useDIP1000 == FeatureState.enabled)\n+                foreach (arg; *exp.arguments)\n                 {\n-                    foreach (arg; *exp.arguments)\n-                    {\n-                        if (arg && checkNewEscape(sc, arg, false))\n-                            return setError();\n-                    }\n+                    if (arg && checkNewEscape(sc, arg, false))\n+                        return setError();\n                 }\n             }\n \n@@ -4677,7 +4678,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             }\n             if (exp.f.needThis())\n             {\n-                AggregateDeclaration ad = exp.f.toParentLocal().isAggregateDeclaration();\n+                AggregateDeclaration ad = exp.f.isMemberLocal();\n                 ue.e1 = getRightThis(exp.loc, sc, ad, ue.e1, exp.f);\n                 if (ue.e1.op == EXP.error)\n                 {\n@@ -4688,7 +4689,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n                 tthis = ue.e1.type;\n                 if (!(exp.f.type.ty == Tfunction && (cast(TypeFunction)exp.f.type).isScopeQual))\n                 {\n-                    if (global.params.useDIP1000 == FeatureState.enabled && checkParamArgumentEscape(sc, exp.f, null, ethis, false, false))\n+                    if (checkParamArgumentEscape(sc, exp.f, null, STC.undefined_, ethis, false, false))\n                         return setError();\n                 }\n             }\n@@ -5393,7 +5394,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n         {\n             if (tb.toDsymbol(sc).isClassDeclaration().classKind == ClassKind.cpp)\n             {\n-                error(exp.loc, \"Runtime type information is not supported for `extern(C++)` classes\");\n+                error(exp.loc, \"runtime type information is not supported for `extern(C++)` classes\");\n                 e = ErrorExp.get();\n             }\n             else if (!Type.typeinfoclass)\n@@ -6026,28 +6027,28 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             const slice = se.peekString();\n             message(\"file      %.*s\\t(%s)\", cast(int)slice.length, slice.ptr, name);\n         }\n-        if (global.params.moduleDeps !is null)\n+        if (global.params.moduleDeps.buffer !is null)\n         {\n-            OutBuffer* ob = global.params.moduleDeps;\n+            OutBuffer* ob = global.params.moduleDeps.buffer;\n             Module imod = sc._module;\n \n-            if (!global.params.moduleDepsFile)\n+            if (!global.params.moduleDeps.name)\n                 ob.writestring(\"depsFile \");\n             ob.writestring(imod.toPrettyChars());\n             ob.writestring(\" (\");\n             escapePath(ob, imod.srcfile.toChars());\n             ob.writestring(\") : \");\n-            if (global.params.moduleDepsFile)\n+            if (global.params.moduleDeps.name)\n                 ob.writestring(\"string : \");\n             ob.write(se.peekString());\n             ob.writestring(\" (\");\n             escapePath(ob, name);\n             ob.writestring(\")\");\n             ob.writenl();\n         }\n-        if (global.params.emitMakeDeps)\n+        if (global.params.makeDeps.doOutput)\n         {\n-            global.params.makeDeps.push(name);\n+            global.params.makeDeps.files.push(name);\n         }\n \n         {\n@@ -6349,7 +6350,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             exp.msg = resolveProperties(sc, exp.msg);\n             exp.msg = exp.msg.implicitCastTo(sc, Type.tchar.constOf().arrayOf());\n             exp.msg = exp.msg.optimize(WANTvalue);\n-            checkParamArgumentEscape(sc, null, null, exp.msg, true, false);\n+            checkParamArgumentEscape(sc, null, null, STC.undefined_, exp.msg, true, false);\n         }\n \n         if (exp.msg && exp.msg.op == EXP.error)\n@@ -6625,6 +6626,14 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n             exp.type = exp.type.addMod(t1.mod);\n \n+            // https://issues.dlang.org/show_bug.cgi?id=23109\n+            // Run semantic on the DotVarExp type\n+            if (auto handle = exp.type.isClassHandle())\n+            {\n+                if (handle.semanticRun < PASS.semanticdone && !handle.isBaseInfoComplete())\n+                    handle.dsymbolSemantic(null);\n+            }\n+\n             Dsymbol vparent = exp.var.toParent();\n             AggregateDeclaration ad = vparent ? vparent.isAggregateDeclaration() : null;\n             if (Expression e1x = getRightThis(exp.loc, sc, ad, exp.e1, exp.var, 1))\n@@ -6705,24 +6714,12 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n         e.type = e.type.typeSemantic(e.loc, sc);\n \n         FuncDeclaration f = e.func.toAliasFunc();\n-        AggregateDeclaration ad = f.toParentLocal().isAggregateDeclaration();\n+        AggregateDeclaration ad = f.isMemberLocal();\n         if (f.needThis())\n             e.e1 = getRightThis(e.loc, sc, ad, e.e1, f);\n         if (e.e1.op == EXP.error)\n             return setError();\n \n-        /* A delegate takes the address of e.e1 in order to set the .ptr field\n-         * https://issues.dlang.org/show_bug.cgi?id=18575\n-         */\n-        if (global.params.useDIP1000 == FeatureState.enabled && e.e1.type.toBasetype().ty == Tstruct)\n-        {\n-            if (auto v = expToVariable(e.e1))\n-            {\n-                if (!checkAddressVar(sc, e.e1, v))\n-                    return setError();\n-            }\n-        }\n-\n         if (f.type.ty == Tfunction)\n         {\n             TypeFunction tf = cast(TypeFunction)f.type;\n@@ -6809,20 +6806,26 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n         if (sc.flags & SCOPE.Cfile)\n         {\n-            /* Special handling for &\"string\"\n-             * since C regards a string literal as an lvalue\n+            /* Special handling for &\"string\"/&(T[]){0, 1}\n+             * since C regards string/array literals as lvalues\n              */\n-            if (auto se = exp.e1.isStringExp())\n+            auto e = exp.e1;\n+            if(e.isStringExp() || e.isArrayLiteralExp())\n             {\n-                if (auto tp = se.type.toBasetype().isTypePointer())\n+                e.type = typeSemantic(e.type, Loc.initial, sc);\n+                // if type is already a pointer exp is an illegal expression of the form `&(&\"\")`\n+                if (!e.type.isTypePointer())\n                 {\n-                    /* Switch from pointer-to-char to pointer-to-static-array-of-char\n-                     */\n-                    auto ts = new TypeSArray(tp.nextOf(), new IntegerExp(Loc.initial, se.len + 1, Type.tsize_t));\n-                    se.type = typeSemantic(ts, Loc.initial, sc).pointerTo();\n-                    result = se;\n+                    e.type = e.type.pointerTo();\n+                    result = e;\n                     return;\n                 }\n+                else\n+                {\n+                    // `toLvalue` call further below is upon exp.e1, omitting & from the error message\n+                    exp.toLvalue(sc, null);\n+                    return setError();\n+                }\n             }\n         }\n \n@@ -6891,19 +6894,19 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n                          * because it might end up being a pointer to undefined\n                          * memory.\n                          */\n-                        if (sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n+                        if (sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_))\n                         {\n-                            exp.error(\"cannot take address of lazy parameter `%s` in `@safe` function `%s`\",\n-                                     ve.toChars(), sc.func.toChars());\n-                            setError();\n-                        }\n-                        else\n-                        {\n-                            VarExp ve2 = callExp.e1.isVarExp();\n-                            ve2.delegateWasExtracted = true;\n-                            ve2.var.storage_class |= STC.scope_;\n-                            result = ve2;\n+                            if (sc.func.setUnsafe(false, exp.loc,\n+                                \"cannot take address of lazy parameter `%s` in `@safe` function `%s`\", ve, sc.func))\n+                            {\n+                                setError();\n+                                return;\n+                            }\n                         }\n+                        VarExp ve2 = callExp.e1.isVarExp();\n+                        ve2.delegateWasExtracted = true;\n+                        ve2.var.storage_class |= STC.scope_;\n+                        result = ve2;\n                         return;\n                     }\n                 }\n@@ -6987,15 +6990,6 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             // Look for misaligned pointer in @safe mode\n             if (checkUnsafeAccess(sc, dve, !exp.type.isMutable(), true))\n                 return setError();\n-\n-            if (global.params.useDIP1000 == FeatureState.enabled)\n-            {\n-                if (VarDeclaration v = expToVariable(dve.e1))\n-                {\n-                    if (!checkAddressVar(sc, exp.e1, v))\n-                        return setError();\n-                }\n-            }\n         }\n         else if (exp.e1.op == EXP.variable)\n         {\n@@ -7049,29 +7043,15 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n                         result = e;\n                         return;\n                     }\n-                    if (sc.func && !sc.intypeof)\n+                    if (sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_))\n                     {\n-                        if (!(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n-                        {\n-                            exp.error(\"`this` reference necessary to take address of member `%s` in `@safe` function `%s`\", f.toChars(), sc.func.toChars());\n-                        }\n+                        sc.func.setUnsafe(false, exp.loc,\n+                            \"`this` reference necessary to take address of member `%s` in `@safe` function `%s`\",\n+                            f, sc.func);\n                     }\n                 }\n             }\n         }\n-        else if ((exp.e1.op == EXP.this_ || exp.e1.op == EXP.super_) && global.params.useDIP1000 == FeatureState.enabled)\n-        {\n-            if (VarDeclaration v = expToVariable(exp.e1))\n-            {\n-                if (!checkAddressVar(sc, exp.e1, v))\n-                    return setError();\n-            }\n-        }\n-        else if (auto ce = exp.e1.isCallExp())\n-        {\n-            if (!checkAddressCall(sc, ce, \"take address of\"))\n-                return setError();\n-        }\n         else if (exp.e1.op == EXP.index)\n         {\n             /* For:\n@@ -7081,9 +7061,6 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n              */\n             if (VarDeclaration v = expToVariable(exp.e1))\n             {\n-                if (global.params.useDIP1000 == FeatureState.enabled && !checkAddressVar(sc, exp.e1, v))\n-                    return setError();\n-\n                 exp.e1.checkPurity(sc, v);\n             }\n         }\n@@ -7839,45 +7816,17 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n                 return setError();\n             }\n-            if (sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n+            if (sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_))\n             {\n-                exp.error(\"pointer slicing not allowed in safe functions\");\n-                return setError();\n+                if (sc.func.setUnsafe(false, exp.loc, \"pointer slicing not allowed in safe functions\"))\n+                    return setError();\n             }\n         }\n         else if (t1b.ty == Tarray)\n         {\n         }\n         else if (t1b.ty == Tsarray)\n         {\n-            if (!exp.arrayop && global.params.useDIP1000 == FeatureState.enabled)\n-            {\n-                /* Slicing a static array is like taking the address of it.\n-                 * Perform checks as if e[] was &e\n-                 */\n-                if (VarDeclaration v = expToVariable(exp.e1))\n-                {\n-                    if (DotVarExp dve = exp.e1.isDotVarExp())\n-                    {\n-\n-                        if ((dve.e1.op == EXP.this_ || dve.e1.op == EXP.super_) &&\n-                            !(v.storage_class & STC.ref_))\n-                        {\n-                            // because it's a class\n-                            v = null;\n-                        }\n-                    }\n-\n-                    if (v && !checkAddressVar(sc, exp.e1, v))\n-                        return setError();\n-                }\n-                // https://issues.dlang.org/show_bug.cgi?id=22539\n-                if (auto ce = exp.e1.isCallExp())\n-                {\n-                    if (!checkAddressCall(sc, ce, \"slice static array of\"))\n-                        return setError();\n-                }\n-            }\n         }\n         else if (t1b.ty == Ttuple)\n         {\n@@ -8202,7 +8151,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             discardValue(e.e1);\n         }\n         else if (!e.allowCommaExp && !e.isGenerated)\n-            e.error(\"Using the result of a comma expression is not allowed\");\n+            e.error(\"using the result of a comma expression is not allowed\");\n     }\n \n     override void visit(IntervalExp e)\n@@ -8379,10 +8328,11 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             if (exp.e2.op == EXP.int64 && exp.e2.toInteger() == 0)\n             {\n             }\n-            else if (sc.func && !(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n+            else if (sc.func && !(sc.flags & SCOPE.debug_))\n             {\n-                exp.error(\"safe function `%s` cannot index pointer `%s`\", sc.func.toPrettyChars(), exp.e1.toChars());\n-                return setError();\n+                if (sc.func.setUnsafe(false, exp.loc,\n+                    \"`@safe` function `%s` cannot index pointer `%s`\", sc.func, exp.e1))\n+                    return setError();\n             }\n             exp.type = (cast(TypeNext)t1b).next;\n             break;\n@@ -8675,10 +8625,10 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n     {\n         static if (LOGSEMANTIC)\n         {\n-            printf(\"AssignExp::semantic('%s')\\n\", exp.toChars());\n+            if (exp.op == EXP.blit)      printf(\"BlitExp.toElem('%s')\\n\", exp.toChars());\n+            if (exp.op == EXP.assign)    printf(\"AssignExp.toElem('%s')\\n\", exp.toChars());\n+            if (exp.op == EXP.construct) printf(\"ConstructExp.toElem('%s')\\n\", exp.toChars());\n         }\n-        //printf(\"exp.e1.op = %d, '%s'\\n\", exp.e1.op, EXPtoString(exp.e1.op).ptr);\n-        //printf(\"exp.e2.op = %d, '%s'\\n\", exp.e2.op, EXPtoString(exp.e2.op).ptr);\n \n         void setResult(Expression e, int line = __LINE__)\n         {\n@@ -8696,7 +8646,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n         if (auto e2comma = exp.e2.isCommaExp())\n         {\n             if (!e2comma.isGenerated && !(sc.flags & SCOPE.Cfile))\n-                exp.error(\"Using the result of a comma expression is not allowed\");\n+                exp.error(\"using the result of a comma expression is not allowed\");\n \n             /* Rewrite to get rid of the comma from rvalue\n              *   e1=(e0,e2) => e0,(e1=e2)\n@@ -9425,6 +9375,23 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             Expression e1x = exp.e1;\n             Expression e2x = exp.e2;\n \n+            /* C strings come through as static arrays. May need to adjust the size of the\n+             * string to match the size of e1.\n+             */\n+            Type t2 = e2x.type.toBasetype();\n+            if (sc.flags & SCOPE.Cfile && e2x.isStringExp() && t2.isTypeSArray())\n+            {\n+                uinteger_t dim1 = t1.isTypeSArray().dim.toInteger();\n+                uinteger_t dim2 = t2.isTypeSArray().dim.toInteger();\n+                if (dim1 + 1 == dim2 || dim2 < dim1)\n+                {\n+                    auto tsa2 = t2.isTypeSArray();\n+                    auto newt = tsa2.next.sarrayOf(dim1).immutableOf();\n+                    e2x = castTo(e2x, sc, newt);\n+                    exp.e2 = e2x;\n+                }\n+            }\n+\n             if (e2x.implicitConvTo(e1x.type))\n             {\n                 if (exp.op != EXP.blit && (e2x.op == EXP.slice && (cast(UnaExp)e2x).e1.isLvalue() || e2x.op == EXP.cast_ && (cast(UnaExp)e2x).e1.isLvalue() || e2x.op != EXP.slice && e2x.isLvalue()))\n@@ -9686,13 +9653,14 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n                 tsa2 = cast(TypeSArray)toStaticArrayType(se);\n             else\n                 tsa2 = t2.isTypeSArray();\n+\n             if (tsa1 && tsa2)\n             {\n                 uinteger_t dim1 = tsa1.dim.toInteger();\n                 uinteger_t dim2 = tsa2.dim.toInteger();\n                 if (dim1 != dim2)\n                 {\n-                    exp.error(\"mismatched array lengths, %d and %d\", cast(int)dim1, cast(int)dim2);\n+                    exp.error(\"mismatched array lengths %d and %d for assignment `%s`\", cast(int)dim1, cast(int)dim2, exp.toChars());\n                     return setError();\n                 }\n             }\n@@ -9761,10 +9729,10 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             }\n             if (t1n.toBasetype.ty == Tvoid && t2n.toBasetype.ty == Tvoid)\n             {\n-                if (!sc.intypeof && sc.func && !(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n+                if (!sc.intypeof && sc.func && !(sc.flags & SCOPE.debug_))\n                 {\n-                    exp.error(\"cannot copy `void[]` to `void[]` in `@safe` code\");\n-                    return setError();\n+                    if (sc.func.setUnsafe(false, exp.loc, \"cannot copy `void[]` to `void[]` in `@safe` code\"))\n+                        return setError();\n                 }\n             }\n         }\n@@ -10190,10 +10158,135 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n \n         exp.type = exp.e1.type;\n         auto res = exp.reorderSettingAAElem(sc);\n-        if ((exp.op == EXP.concatenateElemAssign || exp.op == EXP.concatenateDcharAssign) &&\n-            global.params.useDIP1000 == FeatureState.enabled)\n+        if (exp.op == EXP.concatenateElemAssign || exp.op == EXP.concatenateDcharAssign)\n             checkAssignEscape(sc, res, false, false);\n         result = res;\n+\n+        if ((exp.op == EXP.concatenateAssign || exp.op == EXP.concatenateElemAssign) &&\n+            !(sc.flags & (SCOPE.ctfe | SCOPE.compile)))\n+        {\n+            // if aa ordering is triggered, `res` will be a CommaExp\n+            // and `.e2` will be the rewritten original expression.\n+\n+            // `output` will point to the expression that the lowering will overwrite\n+            Expression* output;\n+            if (auto comma = res.isCommaExp())\n+            {\n+                output = &comma.e2;\n+                // manual cast because it could be either CatAssignExp or CatElemAssignExp\n+                exp = cast(CatAssignExp)comma.e2;\n+            }\n+            else\n+            {\n+                output = &result;\n+                exp = cast(CatAssignExp)result;\n+            }\n+\n+            if (exp.op == EXP.concatenateAssign)\n+            {\n+                Identifier hook = global.params.tracegc ? Id._d_arrayappendTTrace : Id._d_arrayappendT;\n+\n+                if (!verifyHookExist(exp.loc, *sc, hook, \"appending array to arrays\", Id.object))\n+                    return setError();\n+\n+                // Lower to object._d_arrayappendT{,Trace}({file, line, funcname}, e1, e2)\n+                Expression id = new IdentifierExp(exp.loc, Id.empty);\n+                id = new DotIdExp(exp.loc, id, Id.object);\n+                id = new DotIdExp(exp.loc, id, hook);\n+\n+                auto arguments = new Expressions();\n+                arguments.reserve(5);\n+                if (global.params.tracegc)\n+                {\n+                    auto funcname = (sc.callsc && sc.callsc.func) ? sc.callsc.func.toPrettyChars() : sc.func.toPrettyChars();\n+                    arguments.push(new StringExp(exp.loc, exp.loc.filename.toDString()));\n+                    arguments.push(new IntegerExp(exp.loc, exp.loc.linnum, Type.tint32));\n+                    arguments.push(new StringExp(exp.loc, funcname.toDString()));\n+                }\n+\n+                arguments.push(exp.e1);\n+                arguments.push(exp.e2);\n+                Expression ce = new CallExp(exp.loc, id, arguments);\n+                *output = ce.expressionSemantic(sc);\n+            }\n+            else if (exp.op == EXP.concatenateElemAssign)\n+            {\n+                /* Do not lower concats to the indices array returned by\n+                 *`static foreach`, as this array is only used at compile-time.\n+                 */\n+                if (auto ve = exp.e1.isVarExp)\n+                {\n+                    import core.stdc.ctype : isdigit;\n+                    // The name of the indices array that static foreach loops uses.\n+                    // See dmd.cond.lowerNonArrayAggregate\n+                    enum varName = \"__res\";\n+                    const(char)[] id = ve.var.ident.toString;\n+                    if (ve.var.storage_class & STC.temp && id.length > varName.length &&\n+                        id[0 .. varName.length] == varName && id[varName.length].isdigit)\n+                        return;\n+                }\n+\n+                Identifier hook = global.params.tracegc ? Id._d_arrayappendcTXTrace : Id._d_arrayappendcTX;\n+                if (!verifyHookExist(exp.loc, *sc, Id._d_arrayappendcTXImpl, \"appending element to arrays\", Id.object))\n+                    return setError();\n+\n+                // Lower to object._d_arrayappendcTXImpl!(typeof(e1))._d_arrayappendcTX{,Trace}(e1, 1), e1[$-1]=e2\n+                Expression id = new IdentifierExp(exp.loc, Id.empty);\n+                id = new DotIdExp(exp.loc, id, Id.object);\n+                auto tiargs = new Objects();\n+                tiargs.push(exp.e1.type);\n+                id = new DotTemplateInstanceExp(exp.loc, id, Id._d_arrayappendcTXImpl, tiargs);\n+                id = new DotIdExp(exp.loc, id, hook);\n+\n+                auto arguments = new Expressions();\n+                arguments.reserve(5);\n+                if (global.params.tracegc)\n+                {\n+                    auto funcname = (sc.callsc && sc.callsc.func) ? sc.callsc.func.toPrettyChars() : sc.func.toPrettyChars();\n+                    arguments.push(new StringExp(exp.loc, exp.loc.filename.toDString()));\n+                    arguments.push(new IntegerExp(exp.loc, exp.loc.linnum, Type.tint32));\n+                    arguments.push(new StringExp(exp.loc, funcname.toDString()));\n+                }\n+\n+                Expression eValue1;\n+                Expression value1 = extractSideEffect(sc, \"__appendtmp\", eValue1, exp.e1);\n+\n+                arguments.push(value1);\n+                arguments.push(new IntegerExp(exp.loc, 1, Type.tsize_t));\n+\n+                Expression ce = new CallExp(exp.loc, id, arguments);\n+\n+                Expression eValue2;\n+                Expression value2 = exp.e2;\n+                if (!value2.isVarExp() && !value2.isConst())\n+                {\n+                    /* Before the template hook, this check was performed in e2ir.d\n+                     * for expressions like `a ~= a[$-1]`. Here, $ will be modified\n+                     * by calling `_d_arrayappendcT`, so we need to save `a[$-1]` in\n+                     * a temporary variable.\n+                     */\n+                    value2 = extractSideEffect(sc, \"__appendtmp\", eValue2, value2, true);\n+                    exp.e2 = value2;\n+\n+                    // `__appendtmp*` will be destroyed together with the array `exp.e1`.\n+                    auto vd = eValue2.isDeclarationExp().declaration.isVarDeclaration();\n+                    vd.storage_class |= STC.nodtor;\n+                }\n+\n+                auto ale = new ArrayLengthExp(exp.loc, value1);\n+                auto elem = new IndexExp(exp.loc, value1, new MinExp(exp.loc, ale, IntegerExp.literal!1));\n+                auto ae = new ConstructExp(exp.loc, elem, value2);\n+\n+                auto e0 = Expression.combine(ce, ae).expressionSemantic(sc);\n+                e0 = Expression.combine(e0, value1);\n+                e0 = Expression.combine(eValue1, e0);\n+\n+                e0 = Expression.combine(eValue2, e0);\n+\n+                *output = e0.expressionSemantic(sc);\n+            }\n+        }\n+\n     }\n \n     override void visit(AddExp exp)\n@@ -11639,7 +11732,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n             auto t1 = exp.e1.type;\n             auto t2 = exp.e2.type;\n             if (t1.ty == Tenum && t2.ty == Tenum && !t1.equivalent(t2))\n-                exp.error(\"Comparison between different enumeration types `%s` and `%s`; If this behavior is intended consider using `std.conv.asOriginalType`\",\n+                exp.error(\"comparison between different enumeration types `%s` and `%s`; If this behavior is intended consider using `std.conv.asOriginalType`\",\n                     t1.toChars(), t2.toChars());\n         }\n \n@@ -11996,7 +12089,7 @@ private extern (C++) final class ExpressionSemanticVisitor : Visitor\n         }\n         // C11 6.5.1.1 Generic Selection\n \n-        auto ec = exp.cntlExp.expressionSemantic(sc);\n+        auto ec = exp.cntlExp.expressionSemantic(sc).arrayFuncConv(sc);\n         bool errors = ec.isErrorExp() !is null;\n         auto tc = ec.type;\n \n@@ -12622,20 +12715,31 @@ Expression semanticY(DotIdExp exp, Scope* sc, int flag)\n         Expression e = new IntegerExp(exp.loc, actualAlignment, Type.tsize_t);\n         return e;\n     }\n-    else if (cfile && exp.ident == Id.__sizeof && exp.e1.isStringExp())\n+    else if ((exp.ident == Id.max || exp.ident == Id.min) &&\n+             exp.e1.isVarExp() &&\n+             exp.e1.isVarExp().var.isBitFieldDeclaration())\n     {\n-        // Sizeof string literal includes the terminating 0\n-        auto se = exp.e1.isStringExp();\n-        Expression e = new IntegerExp(exp.loc, (se.len + 1) * se.sz, Type.tsize_t);\n-        return e;\n+        // For `x.max` and `x.min` get the max/min of the bitfield, not the max/min of its type\n+        auto bf = exp.e1.isVarExp().var.isBitFieldDeclaration();\n+        return new IntegerExp(exp.loc, bf.getMinMax(exp.ident), bf.type);\n+    }\n+    else if ((exp.ident == Id.max || exp.ident == Id.min) &&\n+             exp.e1.isDotVarExp() &&\n+             exp.e1.isDotVarExp().var.isBitFieldDeclaration())\n+    {\n+        // For `x.max` and `x.min` get the max/min of the bitfield, not the max/min of its type\n+        auto bf = exp.e1.isDotVarExp().var.isBitFieldDeclaration();\n+        return new IntegerExp(exp.loc, bf.getMinMax(exp.ident), bf.type);\n     }\n     else\n     {\n         if (exp.e1.isTypeExp() || exp.e1.isTemplateExp())\n             flag = 0;\n         Expression e = exp.e1.type.dotExp(sc, exp.e1, exp.ident, flag | (exp.noderef ? DotExpFlag.noDeref : 0));\n         if (e)\n+        {\n             e = e.expressionSemantic(sc);\n+        }\n         return e;\n     }\n }\n@@ -12982,22 +13086,12 @@ bool checkAddressVar(Scope* sc, Expression exp, VarDeclaration v)\n         if (sc.func && !sc.intypeof && !v.isDataseg())\n         {\n             const(char)* p = v.isParameter() ? \"parameter\" : \"local\";\n-            if (global.params.useDIP1000 == FeatureState.enabled)\n-            {\n-                // Taking the address of v means it cannot be set to 'scope' later\n-                v.storage_class &= ~STC.maybescope;\n-                v.doNotInferScope = true;\n-                if (exp.type.hasPointers() && v.storage_class & STC.scope_ &&\n-                    !(v.storage_class & STC.temp) &&\n-                    !(sc.flags & SCOPE.debug_) && sc.func.setUnsafe())\n-                {\n-                    exp.error(\"cannot take address of `scope` %s `%s` in `@safe` function `%s`\", p, v.toChars(), sc.func.toChars());\n-                    return false;\n-                }\n-            }\n-            else if (!(sc.flags & SCOPE.debug_) &&\n-                     !(v.storage_class & STC.temp) &&\n-                     sc.func.setUnsafe())\n+            v.storage_class &= ~STC.maybescope;\n+            v.doNotInferScope = true;\n+            if (global.params.useDIP1000 != FeatureState.enabled &&\n+                !(sc.flags & SCOPE.debug_) &&\n+                !(v.storage_class & STC.temp) &&\n+                sc.func.setUnsafe())\n             {\n                 exp.error(\"cannot take address of %s `%s` in `@safe` function `%s`\", p, v.toChars(), sc.func.toChars());\n                 return false;\n@@ -13007,37 +13101,6 @@ bool checkAddressVar(Scope* sc, Expression exp, VarDeclaration v)\n     return true;\n }\n \n-/****************************************************\n- * Determine if the address of a `ref return` value of\n- * a function call with type `tf` can be taken safely.\n- *\n- * This is currently stricter than necessary: it can be safe to take the\n- * address of a `ref` with pointer type when the pointer isn't `scope`, but\n- * that involves inspecting the function arguments and parameter types, which\n- * is left as a future enhancement.\n- *\n- * Params:\n- *      sc = context\n- *      ce = function call in question\n- *      action = for the error message, how the pointer is taken, e.g. \"slice static array of\"\n- * Returns:\n- *      `true` if ok, `false` for error\n- */\n-private bool checkAddressCall(Scope* sc, CallExp ce, const(char)* action)\n-{\n-    if (auto tf = ce.e1.type.isTypeFunction())\n-    {\n-        if (tf.isref && sc.func && !sc.intypeof && !(sc.flags & SCOPE.debug_)\n-            && tf.next.hasPointers() && sc.func.setUnsafe())\n-        {\n-            ce.error(\"cannot %s `ref return` of `%s()` in `@safe` function `%s`\",\n-                action, ce.e1.toChars(), sc.func.toChars());\n-            ce.errorSupplemental(\"return type `%s` has pointers that may be `scope`\", tf.next.toChars());\n-            return false;\n-        }\n-    }\n-    return true;\n-}\n \n /*******************************\n  * Checks the attributes of a function.\n@@ -13241,10 +13304,9 @@ private bool fit(StructDeclaration sd, const ref Loc loc, Scope* sc, Expressions\n         {\n             if ((!stype.alignment.isDefault() && stype.alignment.get() < target.ptrsize ||\n                  (v.offset & (target.ptrsize - 1))) &&\n-                (sc.func && sc.func.setUnsafe()))\n+                (sc.func && sc.func.setUnsafe(false, loc,\n+                    \"field `%s.%s` cannot assign to misaligned pointers in `@safe` code\", sd, v)))\n             {\n-                .error(loc, \"field `%s.%s` cannot assign to misaligned pointers in `@safe` code\",\n-                       sd.toChars(), v.toChars());\n                 return false;\n             }\n         }"}, {"sha": "e53a540bb128a0299d8f2e0d48996992d3b8792c", "filename": "gcc/d/dmd/func.d", "status": "modified", "additions": 107, "deletions": 14, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ffunc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ffunc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffunc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -344,6 +344,10 @@ extern (C++) class FuncDeclaration : Declaration\n \n     FuncDeclarations *inlinedNestedCallees;\n \n+    /// In case of failed `@safe` inference, store the error that made the function `@system` for\n+    /// better diagnostics\n+    private AttributeViolation* safetyViolation;\n+\n     /// Function flags: A collection of boolean packed for memory efficiency\n     /// See the `FUNCFLAG` enum\n     uint flags = FUNCFLAG.NRVO;\n@@ -1207,37 +1211,37 @@ extern (C++) class FuncDeclaration : Declaration\n \n     final bool isMain() const\n     {\n-        return ident == Id.main && linkage != LINK.c && !isMember() && !isNested();\n+        return ident == Id.main && resolvedLinkage() != LINK.c && !isMember() && !isNested();\n     }\n \n     final bool isCMain() const\n     {\n-        return ident == Id.main && linkage == LINK.c && !isMember() && !isNested();\n+        return ident == Id.main && resolvedLinkage() == LINK.c && !isMember() && !isNested();\n     }\n \n     final bool isWinMain() const\n     {\n         //printf(\"FuncDeclaration::isWinMain() %s\\n\", toChars());\n         version (none)\n         {\n-            bool x = ident == Id.WinMain && linkage != LINK.c && !isMember();\n+            bool x = ident == Id.WinMain && resolvedLinkage() != LINK.c && !isMember();\n             printf(\"%s\\n\", x ? \"yes\" : \"no\");\n             return x;\n         }\n         else\n         {\n-            return ident == Id.WinMain && linkage != LINK.c && !isMember();\n+            return ident == Id.WinMain && resolvedLinkage() != LINK.c && !isMember();\n         }\n     }\n \n     final bool isDllMain() const\n     {\n-        return ident == Id.DllMain && linkage != LINK.c && !isMember();\n+        return ident == Id.DllMain && resolvedLinkage() != LINK.c && !isMember();\n     }\n \n     final bool isRtInit() const\n     {\n-        return ident == Id.rt_init && linkage == LINK.c && !isMember() && !isNested();\n+        return ident == Id.rt_init && resolvedLinkage() == LINK.c && !isMember() && !isNested();\n     }\n \n     override final bool isExport() const\n@@ -1349,8 +1353,7 @@ extern (C++) class FuncDeclaration : Declaration\n             flags |= FUNCFLAG.returnInprocess;\n \n         // Initialize for inferring STC.scope_\n-        if (global.params.useDIP1000 == FeatureState.enabled)\n-            flags |= FUNCFLAG.inferScope;\n+        flags |= FUNCFLAG.inferScope;\n     }\n \n     final PURE isPure()\n@@ -1427,24 +1430,51 @@ extern (C++) class FuncDeclaration : Declaration\n     }\n \n     /**************************************\n-     * The function is doing something unsafe,\n-     * so mark it as unsafe.\n-     * If there's a safe error, return true.\n+     * The function is doing something unsafe, so mark it as unsafe.\n+     *\n+     * Params:\n+     *   gag = surpress error message (used in escape.d)\n+     *   loc = location of error\n+     *   fmt = printf-style format string\n+     *   arg0  = (optional) argument for first %s format specifier\n+     *   arg1  = (optional) argument for second %s format specifier\n+     * Returns: whether there's a safe error\n      */\n-    extern (D) final bool setUnsafe()\n+    extern (D) final bool setUnsafe(\n+        bool gag = false, Loc loc = Loc.init, const(char)* fmt = null, RootObject arg0 = null, RootObject arg1 = null)\n     {\n         if (flags & FUNCFLAG.safetyInprocess)\n         {\n             flags &= ~FUNCFLAG.safetyInprocess;\n             type.toTypeFunction().trust = TRUST.system;\n+            if (!gag && !safetyViolation && (fmt || arg0))\n+                safetyViolation = new AttributeViolation(loc, fmt, arg0, arg1);\n+\n             if (fes)\n                 fes.func.setUnsafe();\n         }\n         else if (isSafe())\n+        {\n+            if (!gag && fmt)\n+                .error(loc, fmt, arg0 ? arg0.toChars() : \"\", arg1 ? arg1.toChars() : \"\");\n+\n             return true;\n+        }\n         return false;\n     }\n \n+    /**************************************\n+     * The function is calling `@system` function `f`, so mark it as unsafe.\n+     *\n+     * Params:\n+     *   f = function being called (needed for diagnostic of inferred functions)\n+     * Returns: whether there's a safe error\n+     */\n+    extern (D) final bool setUnsafeCall(FuncDeclaration f)\n+    {\n+        return setUnsafe(false, f.loc, null, f, null);\n+    }\n+\n     final bool isNogc()\n     {\n         //printf(\"isNogc() %s, inprocess: %d\\n\", toChars(), !!(flags & FUNCFLAG.nogcInprocess));\n@@ -1474,6 +1504,12 @@ extern (C++) class FuncDeclaration : Declaration\n         return !!(this.flags & FUNCFLAG.naked);\n     }\n \n+    final void isNaked(bool v) @safe pure nothrow @nogc\n+    {\n+        if (v) this.flags |= FUNCFLAG.naked;\n+        else this.flags &= ~FUNCFLAG.naked;\n+    }\n+\n     final bool isGenerated() const scope @safe pure nothrow @nogc\n     {\n         return !!(this.flags & FUNCFLAG.generated);\n@@ -1520,11 +1556,23 @@ extern (C++) class FuncDeclaration : Declaration\n         return !!(this.flags & FUNCFLAG.CRTCtor);\n     }\n \n+    final void isCrtCtor(bool v) @safe pure nothrow @nogc\n+    {\n+        if (v) this.flags |= FUNCFLAG.CRTCtor;\n+        else this.flags &= ~FUNCFLAG.CRTCtor;\n+    }\n+\n     final bool isCrtDtor() const scope @safe pure nothrow @nogc\n     {\n         return !!(this.flags & FUNCFLAG.CRTDtor);\n     }\n \n+    final void isCrtDtor(bool v) @safe pure nothrow @nogc\n+    {\n+        if (v) this.flags |= FUNCFLAG.CRTDtor;\n+        else this.flags &= ~FUNCFLAG.CRTDtor;\n+    }\n+\n     /**************************************\n      * The function is doing something that may allocate with the GC,\n      * so mark it as not nogc (not no-how).\n@@ -1758,7 +1806,7 @@ extern (C++) class FuncDeclaration : Declaration\n         auto f = toAliasFunc();\n         //printf(\"\\ttoParent2() = '%s'\\n\", f.toParent2().toChars());\n         return ((f.storage_class & STC.static_) == 0) &&\n-                (f.linkage == LINK.d) &&\n+                (f._linkage == LINK.d) &&\n                 (f.toParent2().isFuncDeclaration() !is null ||\n                  f.toParent2() !is f.toParentLocal());\n     }\n@@ -2645,7 +2693,7 @@ extern (C++) class FuncDeclaration : Declaration\n             tf = new TypeFunction(ParameterList(fparams), treturn, LINK.c, stc);\n             fd = new FuncDeclaration(Loc.initial, Loc.initial, id, STC.static_, tf);\n             fd.visibility = Visibility(Visibility.Kind.public_);\n-            fd.linkage = LINK.c;\n+            fd._linkage = LINK.c;\n \n             st.insert(fd);\n         }\n@@ -2705,6 +2753,7 @@ extern (C++) class FuncDeclaration : Declaration\n         const nparams = tf.parameterList.length;\n         bool argerr;\n \n+        const linkage = resolvedLinkage();\n         if (linkage == LINK.d)\n         {\n             if (nparams == 1)\n@@ -4271,3 +4320,47 @@ extern (C++) final class NewDeclaration : FuncDeclaration\n         v.visit(this);\n     }\n }\n+\n+/// Stores a reason why a function failed to infer a function attribute like `@safe` or `pure`\n+///\n+/// Has two modes:\n+/// - a regular safety error, stored in (fmtStr, arg0, arg1)\n+/// - a call to a function without the attribute, which is a special case, because in that case,\n+///   that function might recursively also have a `AttributeViolation`. This way, in case\n+///   of a big call stack, the error can go down all the way to the root cause.\n+///   The `FunctionDeclaration` is then stored in `arg0` and `fmtStr` must be `null`.\n+private struct AttributeViolation\n+{\n+    /// location of error\n+    Loc loc = Loc.init;\n+    /// printf-style format string\n+    const(char)* fmtStr = null;\n+    /// Arguments for up to two `%s` format specifiers in format string\n+    RootObject arg0 = null;\n+    /// ditto\n+    RootObject arg1 = null;\n+}\n+\n+/// Print the reason why `fd` was inferred `@system` as a supplemental error\n+/// Params:\n+///   fd = function to check\n+///   maxDepth = up to how many functions deep to report errors\n+void errorSupplementalInferredSafety(FuncDeclaration fd, int maxDepth)\n+{\n+    if (auto s = fd.safetyViolation)\n+    {\n+        if (s.fmtStr)\n+        {\n+            errorSupplemental(s.loc, \"which was inferred `@system` because of:\");\n+            errorSupplemental(s.loc, s.fmtStr, s.arg0 ? s.arg0.toChars() : \"\", s.arg1 ? s.arg1.toChars() : \"\");\n+        }\n+        else if (FuncDeclaration fd2 = cast(FuncDeclaration) s.arg0)\n+        {\n+            if (maxDepth > 0)\n+            {\n+                errorSupplemental(s.loc, \"which calls `%s`\", fd2.toPrettyChars());\n+                errorSupplementalInferredSafety(fd2, maxDepth - 1);\n+            }\n+        }\n+    }\n+}"}, {"sha": "ba4ccbe5134a2bc081da6d50e27fc59c084d77be", "filename": "gcc/d/dmd/globals.d", "status": "modified", "additions": 24, "deletions": 68, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fglobals.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fglobals.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -51,14 +51,6 @@ enum CHECKACTION : ubyte\n     context,      /// call D assert with the error context on failure\n }\n \n-/// Position Indepent Code setting\n-enum PIC : ubyte\n-{\n-    fixed,              /// located at a specific address\n-    pic,                /// Position Independent Code\n-    pie,                /// Position Independent Executable\n-}\n-\n /**\n Each flag represents a field that can be included in the JSON output.\n \n@@ -83,14 +75,6 @@ enum CppStdRevision : uint\n     cpp20 = 2020_02,\n }\n \n-/// Configuration for the C++ header generator\n-enum CxxHeaderMode : uint\n-{\n-    none,   /// Don't generate headers\n-    silent, /// Generate headers\n-    verbose /// Generate headers and add comments for hidden declarations\n-}\n-\n /// Trivalent boolean to represent the state of a `revert`able change\n enum FeatureState : byte\n {\n@@ -99,15 +83,24 @@ enum FeatureState : byte\n     enabled = 1    /// Specified as `-preview=`\n }\n \n+extern(C++) struct Output\n+{\n+    bool doOutput;      // Output is enabled\n+    bool fullOutput;    // Generate comments for hidden declarations (for -HC),\n+                        // and don't strip the bodies of plain (non-template) functions (for -H)\n+\n+    const(char)[] dir;  // write to directory 'dir'\n+    const(char)[] name; // write to file 'name'\n+    Array!(const(char)*) files; // Other files associated with this output,\n+                                // e.g. macro include files for Ddoc, dependencies for makedeps\n+    OutBuffer* buffer;  // if this output is buffered, this is the buffer\n+    int bufferLines;    // number of lines written to the buffer\n+}\n /// Put command line switches in here\n extern (C++) struct Param\n {\n     bool obj = true;        // write object file\n-    bool link = true;       // perform link\n-    bool dll;               // generate shared dynamic library\n-    bool lib;               // write library file instead of object file(s)\n     bool multiobj;          // break one object file into multiple ones\n-    bool oneobj;            // write one object file instead of multiple ones\n     bool trace;             // insert profiling hooks\n     bool tracegc;           // instrument calls to 'new'\n     bool verbose;           // verbose compile\n@@ -120,11 +113,7 @@ extern (C++) struct Param\n     bool vfield;            // identify non-mutable field variables\n     bool vcomplex = true;   // identify complex/imaginary type usage\n     bool vin;               // identify 'in' parameters\n-    ubyte symdebug;         // insert debug symbolic information\n-    bool symdebugref;       // insert debug information for all referenced types, too\n-    bool optimize;          // run optimizer\n     DiagnosticReporting useDeprecated = DiagnosticReporting.inform;  // how use of deprecated features are handled\n-    bool stackstomp;            // add stack stomping code\n     bool useUnitTests;          // generate unittest code\n     bool useInline = false;     // inline expand functions\n     FeatureState useDIP25;  // implement https://wiki.dlang.org/DIP25\n@@ -133,12 +122,10 @@ extern (C++) struct Param\n     bool release;           // build release version\n     bool preservePaths;     // true means don't strip path from source file\n     DiagnosticReporting warnings = DiagnosticReporting.off;  // how compiler warnings are handled\n-    PIC pic = PIC.fixed;    // generate fixed, pic or pie code\n     bool color;             // use ANSI colors in console output\n     bool cov;               // generate code coverage data\n     ubyte covPercent;       // 0..100 code coverage percentage required\n     bool ctfe_cov = false;  // generate coverage data for ctfe\n-    bool nofloat;           // code should not pull in floating point support\n     bool ignoreUnsupportedPragmas;  // rather than error on them\n     bool useModuleInfo = true;   // generate runtime module information\n     bool useTypeInfo = true;     // generate runtime type information\n@@ -162,6 +149,7 @@ extern (C++) struct Param\n     FeatureState dtorFields; // destruct fields of partially constructed objects\n                             // https://issues.dlang.org/show_bug.cgi?id=14246\n     bool fieldwise;         // do struct equality testing field-wise rather than by memcmp()\n+    bool bitfields;         // support C style bit fields\n     FeatureState rvalueRefParam; // allow rvalues to be arguments to ref parameters\n                                  // https://dconf.org/2019/talks/alexandrescu.html\n                                  // https://gist.github.com/andralex/e5405a5d773f07f73196c05f8339435a\n@@ -170,9 +158,6 @@ extern (C++) struct Param\n \n     CppStdRevision cplusplus = CppStdRevision.cpp11;    // version of C++ standard to support\n \n-    bool markdown = true;   // enable Markdown replacements in Ddoc\n-    bool vmarkdown;         // list instances of Markdown replacements in Ddoc\n-\n     bool showGaggedErrors;  // print gagged errors anyway\n     bool printErrorContext;  // print errors with the error context (the error line in the source file)\n     bool manual;            // open browser on compiler manual\n@@ -207,49 +192,27 @@ extern (C++) struct Param\n     const(char)[] objname;               // .obj file output name\n     const(char)[] libname;               // .lib file output name\n \n-    bool doDocComments;                 // process embedded documentation comments\n-    const(char)[] docdir;               // write documentation file to docdir directory\n-    const(char)[] docname;              // write documentation file to docname\n-    Array!(const(char)*) ddocfiles;     // macro include files for Ddoc\n-\n-    bool doHdrGeneration;               // process embedded documentation comments\n-    const(char)[] hdrdir;                // write 'header' file to docdir directory\n-    const(char)[] hdrname;               // write 'header' file to docname\n-    bool hdrStripPlainFunctions = true; // strip the bodies of plain (non-template) functions\n-\n-    CxxHeaderMode doCxxHdrGeneration;      /// Generate 'Cxx header' file\n-    const(char)[] cxxhdrdir;            // write 'header' file to docdir directory\n-    const(char)[] cxxhdrname;           // write 'header' file to docname\n-\n-    bool doJsonGeneration;              // write JSON file\n-    const(char)[] jsonfilename;          // write JSON file to jsonfilename\n+    Output ddoc;                        // Generate embedded documentation comments\n+    Output dihdr;                       // Generate `.di` 'header' files\n+    Output cxxhdr;                      // Generate 'Cxx header' file\n+    Output json;                        // Generate JSON file\n     JsonFieldFlags jsonFieldFlags;      // JSON field flags to include\n-\n-    OutBuffer* mixinOut;                // write expanded mixins for debugging\n-    const(char)* mixinFile;             // .mixin file output name\n-    int mixinLines;                     // Number of lines in writeMixins\n+    Output makeDeps;                    // Generate make file dependencies\n+    Output mixinOut;                    // write expanded mixins for debugging\n+    Output moduleDeps;                  // Generate `.deps` module dependencies\n \n     uint debuglevel;                    // debug level\n     Array!(const(char)*)* debugids;     // debug identifiers\n \n     uint versionlevel;                  // version level\n     Array!(const(char)*)* versionids;   // version identifiers\n \n-    const(char)[] defaultlibname;        // default library for non-debug builds\n-    const(char)[] debuglibname;          // default library for debug builds\n-    const(char)[] mscrtlib;              // MS C runtime library\n-\n-    const(char)[] moduleDepsFile;        // filename for deps output\n-    OutBuffer* moduleDeps;              // contents to be written to deps file\n-\n-    bool emitMakeDeps;                   // whether to emit makedeps\n-    const(char)[] makeDepsFile;          // filename for makedeps output\n-    Array!(const(char)*) makeDeps;      // dependencies for makedeps\n \n     MessageStyle messageStyle = MessageStyle.digitalmars; // style of file/line annotations on messages\n \n     bool run; // run resulting executable\n     Strings runargs; // arguments for executable\n+    Array!(const(char)*) cppswitches;   // C preprocessor switches\n \n     // Linker stuff\n     Array!(const(char)*) objfiles;\n@@ -335,6 +298,8 @@ extern (C++) struct Global\n \n     enum recursionLimit = 500; /// number of recursive template expansions before abort\n \n+    extern (C++) FileName function(FileName, const(char)* importc_h, ref Array!(const(char)*) cppswitches, out bool) preprocess;\n+\n   nothrow:\n \n     /**\n@@ -468,15 +433,6 @@ extern (C++) struct Global\n     {\n         return _version.ptr;\n     }\n-\n-    /**\n-    Returns: the final defaultlibname based on the command-line parameters\n-    */\n-    extern (D) const(char)[] finalDefaultlibname() const\n-    {\n-        return params.betterC ? null :\n-            params.symdebug ? params.debuglibname : params.defaultlibname;\n-    }\n }\n \n // Because int64_t and friends may be any integral type of the"}, {"sha": "5c164fd484d63a8da1ef68af7c7727198a264d05", "filename": "gcc/d/dmd/globals.h", "status": "modified", "additions": 26, "deletions": 50, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fglobals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fglobals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.h?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -73,14 +73,6 @@ enum CppStdRevision\n     CppStdRevisionCpp20 = 202002\n };\n \n-/// Configuration for the C++ header generator\n-enum class CxxHeaderMode\n-{\n-    none,   /// Don't generate headers\n-    silent, /// Generate headers\n-    verbose /// Generate headers and add comments for hidden declarations\n-};\n-\n /// Trivalent boolean to represent the state of a `revert`able change\n enum class FeatureState : signed char\n {\n@@ -89,15 +81,25 @@ enum class FeatureState : signed char\n     enabled = 1    /// Specified as `-preview=`\n };\n \n+struct Output\n+{\n+    /// Configuration for the compiler generator\n+    bool doOutput;      // Output is enabled\n+    bool fullOutput;    // Generate comments for hidden declarations (for -HC),\n+                        // and don't strip the bodies of plain (non-template) functions (for -H)\n+    DString dir;   // write to directory 'dir'\n+    DString name;  // write to file 'name'\n+    Array<const char*> files; // Other files associated with this output,\n+                                // e.g. macro include files for Ddoc, dependencies for makedeps\n+    OutBuffer* buffer;  // if this output is buffered, this is the buffer\n+    int bufferLines;    // number of lines written to the buffer\n+};\n+\n // Put command line switches in here\n struct Param\n {\n     bool obj;           // write object file\n-    bool link;          // perform link\n-    bool dll;           // generate shared dynamic library\n-    bool lib;           // write library file instead of object file(s)\n     bool multiobj;      // break one object file into multiple ones\n-    bool oneobj;        // write one object file instead of multiple ones\n     bool trace;         // insert profiling hooks\n     bool tracegc;       // instrument calls to 'new'\n     bool verbose;       // verbose compile\n@@ -110,11 +112,7 @@ struct Param\n     bool vfield;        // identify non-mutable field variables\n     bool vcomplex;      // identify complex/imaginary type usage\n     bool vin;           // identify 'in' parameters\n-    unsigned char symdebug;  // insert debug symbolic information\n-    bool symdebugref;   // insert debug information for all referenced types, too\n-    bool optimize;      // run optimizer\n     Diagnostic useDeprecated;\n-    bool stackstomp;    // add stack stomping code\n     bool useUnitTests;  // generate unittest code\n     bool useInline;     // inline expand functions\n     FeatureState useDIP25;      // implement https://wiki.dlang.org/DIP25\n@@ -123,12 +121,10 @@ struct Param\n     bool release;       // build release version\n     bool preservePaths; // true means don't strip path from source file\n     Diagnostic warnings;\n-    unsigned char pic;  // generate position-independent-code for shared libs\n     bool color;         // use ANSI colors in console output\n     bool cov;           // generate code coverage data\n     unsigned char covPercent;   // 0..100 code coverage percentage required\n     bool ctfe_cov;      // generate coverage data for ctfe\n-    bool nofloat;       // code should not pull in floating point support\n     bool ignoreUnsupportedPragmas;      // rather than error on them\n     bool useModuleInfo; // generate runtime module information\n     bool useTypeInfo;   // generate runtime type information\n@@ -147,10 +143,9 @@ struct Param\n     FeatureState dtorFields;  // destruct fields of partially constructed objects\n                               // https://issues.dlang.org/show_bug.cgi?id=14246\n     bool fieldwise;         // do struct equality testing field-wise rather than by memcmp()\n+    bool bitfields;         // support C style bit fields\n     FeatureState rvalueRefParam;    // allow rvalues to be arguments to ref parameters\n     CppStdRevision cplusplus;  // version of C++ name mangling to support\n-    bool markdown;          // enable Markdown replacements in Ddoc\n-    bool vmarkdown;         // list instances of Markdown replacements in Ddoc\n     bool showGaggedErrors;  // print gagged errors anyway\n     bool printErrorContext;  // print errors with the error context (the error line in the source file)\n     bool manual;            // open browser on compiler manual\n@@ -185,50 +180,29 @@ struct Param\n     DString objname;   // .obj file output name\n     DString libname;   // .lib file output name\n \n-    bool doDocComments;  // process embedded documentation comments\n-    DString docdir;      // write documentation file to docdir directory\n-    DString docname;     // write documentation file to docname\n-    Array<const char *> ddocfiles;  // macro include files for Ddoc\n-\n-    bool doHdrGeneration;  // process embedded documentation comments\n-    DString hdrdir;        // write 'header' file to docdir directory\n-    DString hdrname;       // write 'header' file to docname\n-    bool hdrStripPlainFunctions; // strip the bodies of plain (non-template) functions\n-\n-    CxxHeaderMode doCxxHdrGeneration;  // write 'Cxx header' file\n-    DString cxxhdrdir;        // write 'header' file to docdir directory\n-    DString cxxhdrname;       // write 'header' file to docname\n-\n-    bool doJsonGeneration;    // write JSON file\n-    DString jsonfilename;     // write JSON file to jsonfilename\n+    Output ddoc;              // Generate embedded documentation comments\n+    Output dihdr;             // Generate `.di` 'header' files\n+    Output cxxhdr;            // Generate 'Cxx header' file\n+    Output json;              // Generate JSON file\n     unsigned jsonFieldFlags;  // JSON field flags to include\n-\n-    OutBuffer *mixinOut;                // write expanded mixins for debugging\n-    const char *mixinFile;             // .mixin file output name\n-    int mixinLines;                     // Number of lines in writeMixins\n+    Output makeDeps;          // Generate make file dependencies\n+    Output mixinOut;          // write expanded mixins for debugging\n+    Output moduleDeps;        // Generate `.deps` module dependencies\n \n     unsigned debuglevel;   // debug level\n     Array<const char *> *debugids;     // debug identifiers\n \n     unsigned versionlevel; // version level\n     Array<const char *> *versionids;   // version identifiers\n \n-    DString defaultlibname;     // default library for non-debug builds\n-    DString debuglibname;       // default library for debug builds\n-    DString mscrtlib;           // MS C runtime library\n-\n-    DString moduleDepsFile;     // filename for deps output\n-    OutBuffer *moduleDeps;      // contents to be written to deps file\n-\n-    bool emitMakeDeps;                // whether to emit makedeps\n-    DString makeDepsFile;             // filename for makedeps output\n-    Array<const char *> makeDeps;     // dependencies for makedeps\n \n     MessageStyle messageStyle;  // style of file/line annotations on messages\n \n     bool run;           // run resulting executable\n     Strings runargs;    // arguments for executable\n \n+    Array<const char *> cppswitches; // preprocessor switches\n+\n     // Linker stuff\n     Array<const char *> objfiles;\n     Array<const char *> linkswitches;\n@@ -296,6 +270,8 @@ struct Global\n \n     FileManager* fileManager;\n \n+    FileName (*preprocess)(FileName, const char*, Array<const char *>& cppswitches, bool&);\n+\n     /* Start gagging. Return the current number of gagged errors\n      */\n     unsigned startGagging();"}, {"sha": "fd35e1cf846fb7704bac9dcc834fa004e3f41039", "filename": "gcc/d/dmd/hdrgen.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fhdrgen.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fhdrgen.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1536,7 +1536,7 @@ public:\n                 bodyToBuffer(f);\n                 hgs.autoMember--;\n             }\n-            else if (hgs.tpltMember == 0 && global.params.hdrStripPlainFunctions)\n+            else if (hgs.tpltMember == 0 && global.params.dihdr.fullOutput == false)\n             {\n                 if (!f.fbody)\n                 {\n@@ -1621,7 +1621,7 @@ public:\n \n     void bodyToBuffer(FuncDeclaration f)\n     {\n-        if (!f.fbody || (hgs.hdrgen && global.params.hdrStripPlainFunctions && !hgs.autoMember && !hgs.tpltMember))\n+        if (!f.fbody || (hgs.hdrgen && global.params.dihdr.fullOutput == false && !hgs.autoMember && !hgs.tpltMember))\n         {\n             if (!f.fbody && (f.fensures || f.frequires))\n             {"}, {"sha": "ab9528a4f00e241c6bc3912085664b7d6183fdd9", "filename": "gcc/d/dmd/id.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fid.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -349,6 +349,11 @@ immutable Msgtable[] msgtable =\n     { \"_d_arraysetlengthTImpl\"},\n     { \"_d_arraysetlengthT\"},\n     { \"_d_arraysetlengthTTrace\"},\n+    { \"_d_arrayappendT\" },\n+    { \"_d_arrayappendTTrace\" },\n+    { \"_d_arrayappendcTXImpl\" },\n+    { \"_d_arrayappendcTX\" },\n+    { \"_d_arrayappendcTXTrace\" },\n \n     // varargs implementation\n     { \"stdc\" },\n@@ -454,6 +459,7 @@ immutable Msgtable[] msgtable =\n     { \"getVirtualFunctions\" },\n     { \"getVirtualMethods\" },\n     { \"classInstanceSize\" },\n+    { \"classInstanceAlignment\" },\n     { \"allMembers\" },\n     { \"derivedMembers\" },\n     { \"isSame\" },"}, {"sha": "2cddd282a0262bea1da077d74bb8e612dee33233", "filename": "gcc/d/dmd/initsem.d", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Finitsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Finitsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finitsem.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -198,14 +198,16 @@ extern(C++) Initializer initializerSemantic(Initializer init, Scope* sc, ref Typ\n                 {\n                     if ((!t.alignment.isDefault() && t.alignment.get() < target.ptrsize ||\n                          (vd.offset & (target.ptrsize - 1))) &&\n-                        sc.func && sc.func.setUnsafe())\n+                        sc.func)\n                     {\n-                        error(i.value[j].loc, \"field `%s.%s` cannot assign to misaligned pointers in `@safe` code\",\n-                            sd.toChars(), vd.toChars());\n-                        errors = true;\n-                        elems[fieldi] = ErrorExp.get(); // for better diagnostics on multiple errors\n-                        ++fieldi;\n-                        continue;\n+                        if (sc.func.setUnsafe(false, i.value[j].loc,\n+                            \"field `%s.%s` cannot assign to misaligned pointers in `@safe` code\", sd, vd))\n+                        {\n+                            errors = true;\n+                            elems[fieldi] = ErrorExp.get(); // for better diagnostics on multiple errors\n+                            ++fieldi;\n+                            continue;\n+                        }\n                     }\n                 }\n \n@@ -502,6 +504,18 @@ extern(C++) Initializer initializerSemantic(Initializer init, Scope* sc, ref Typ\n                 i.exp = se.castTo(sc, t);\n                 goto L1;\n             }\n+\n+            /* Lop off terminating 0 of initializer for:\n+             *  static char s[5] = \"hello\";\n+             */\n+            if (sc.flags & SCOPE.Cfile &&\n+                typeb.ty == Tsarray &&\n+                tynto.isSomeChar &&\n+                tb.isTypeSArray().dim.toInteger() + 1 == typeb.isTypeSArray().dim.toInteger())\n+            {\n+                i.exp = se.castTo(sc, t);\n+                goto L1;\n+            }\n         }\n         /* C11 6.7.9-14..15\n          * Initialize an array of unknown size with a string.\n@@ -573,7 +587,7 @@ extern(C++) Initializer initializerSemantic(Initializer init, Scope* sc, ref Typ\n         }\n         else if (sc.flags & SCOPE.Cfile && i.exp.isStringExp() &&\n             tta && (tta.next.ty == Tint8 || tta.next.ty == Tuns8) &&\n-            ti.ty == Tpointer && ti.nextOf().ty == Tchar)\n+            ti.ty == Tsarray && ti.nextOf().ty == Tchar)\n         {\n             /* unsigned char bbb[1] = \"\";\n              *   signed char ccc[1] = \"\";"}, {"sha": "a22c664f920cccf7f900d1dbfabd88258e9db00c", "filename": "gcc/d/dmd/json.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fjson.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fjson.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -446,7 +446,7 @@ public:\n             return;\n         jsonProperties(cast(Dsymbol)d);\n         propertyStorageClass(\"storageClass\", d.storage_class);\n-        property(\"linkage\", d.linkage);\n+        property(\"linkage\", d._linkage);\n         property(\"type\", \"deco\", d.type);\n         // Emit originalType if it differs from type\n         if (d.type != d.originalType && d.originalType)\n@@ -934,7 +934,7 @@ public:\n \n         propertyStart(\"ddocFiles\");\n         arrayStart();\n-        foreach (ddocFile; global.params.ddocfiles)\n+        foreach (ddocFile; global.params.ddoc.files)\n         {\n             item(ddocFile.toDString);\n         }"}, {"sha": "be17ab3e9adc002b9c2bc9f00ac9b48279c77f1a", "filename": "gcc/d/dmd/mtype.d", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fmtype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fmtype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -4375,8 +4375,6 @@ extern (C++) final class TypeFunction : TypeNext\n     {\n         //printf(\"parameterStorageClass(p: %s)\\n\", p.toChars());\n         auto stc = p.storageClass;\n-        if (global.params.useDIP1000 != FeatureState.enabled)\n-            return stc;\n \n         // When the preview switch is enable, `in` parameters are `scope`\n         if (stc & STC.in_ && global.params.previewIn)\n@@ -4441,7 +4439,9 @@ extern (C++) final class TypeFunction : TypeNext\n         // Check escaping through return value\n         Type tret = nextOf().toBasetype();\n         if (isref || tret.hasPointers())\n+        {\n             return stc | STC.scope_ | STC.return_ | STC.returnScope;\n+        }\n         else\n             return stc | STC.scope_;\n     }\n@@ -4764,12 +4764,31 @@ extern (C++) final class TypeFunction : TypeNext\n                                             s ~= \"@safe \";\n                                         if (!f.isNogc && sc.func.setGC())\n                                             s ~= \"nogc \";\n-                                        s[$-1] = '\\0';\n-                                        buf.printf(\"`%s` copy constructor cannot be called from a `%s` context\", f.type.toChars(), s.ptr);\n-\n+                                        if (s)\n+                                        {\n+                                            s[$-1] = '\\0';\n+                                            buf.printf(\"`%s` copy constructor cannot be called from a `%s` context\", f.type.toChars(), s.ptr);\n+                                        }\n+                                        else if (f.isGenerated() && f.isDisabled())\n+                                        {\n+                                            /* https://issues.dlang.org/show_bug.cgi?id=23097\n+                                             * Compiler generated copy constructor failed.\n+                                             */\n+                                            buf.printf(\"generating a copy constructor for `struct %s` failed, therefore instances of it are uncopyable\",\n+                                                       argStruct.toChars());\n+                                        }\n+                                        else\n+                                        {\n+                                            /* Although a copy constructor may exist, no suitable match was found.\n+                                             * i.e: `inout` constructor creates `const` object, not mutable.\n+                                             * Fallback to using the original generic error before bugzilla 22202.\n+                                             */\n+                                            goto Lnocpctor;\n+                                        }\n                                     }\n                                     else\n                                     {\n+                                    Lnocpctor:\n                                         buf.printf(\"`struct %s` does not define a copy constructor for `%s` to `%s` copies\",\n                                                argStruct.toChars(), targ.toChars(), tprm.toChars());\n                                     }\n@@ -5134,22 +5153,6 @@ extern (C++) final class TypeDelegate : TypeNext\n     override Type addStorageClass(StorageClass stc)\n     {\n         TypeDelegate t = cast(TypeDelegate)Type.addStorageClass(stc);\n-        if (global.params.useDIP1000 != FeatureState.enabled)\n-            return t;\n-\n-        /* The rest is meant to add 'scope' to a delegate declaration if it is of the form:\n-         *  alias dg_t = void* delegate();\n-         *  scope dg_t dg = ...;\n-         */\n-        if(stc & STC.scope_)\n-        {\n-            auto n = t.next.addStorageClass(STC.scope_ | STC.scopeinferred);\n-            if (n != t.next)\n-            {\n-                t.next = n;\n-                t.deco = t.merge().deco; // mangling supposed to not be changed due to STC.scope_inferrred\n-            }\n-        }\n         return t;\n     }\n \n@@ -5218,8 +5221,8 @@ extern (C++) final class TypeTraits : Type\n     Loc loc;\n     /// The expression to resolve as type or symbol.\n     TraitsExp exp;\n-    /// After `typeSemantic` the symbol when `exp` doesn't represent a type.\n-    Dsymbol sym;\n+    /// Cached type/symbol after semantic analysis.\n+    RootObject obj;\n \n     final extern (D) this(const ref Loc loc, TraitsExp exp)\n     {"}, {"sha": "d2b136443e8fb54c33c11a5c11225abcd42fcb90", "filename": "gcc/d/dmd/mtype.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fmtype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fmtype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.h?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -670,8 +670,8 @@ class TypeTraits : public Type\n     Loc loc;\n     /// The expression to resolve as type or symbol.\n     TraitsExp *exp;\n-    /// The symbol when exp doesn't represent a type.\n-    Dsymbol *sym;\n+    /// Cached type/symbol after semantic analysis.\n+    RootObject *obj;\n \n     const char *kind();\n     TypeTraits *syntaxCopy();"}, {"sha": "8cf35851922d6980dae63e40ad77d1cf5edbc642", "filename": "gcc/d/dmd/nogc.d", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fnogc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fnogc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnogc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -84,6 +84,17 @@ public:\n             }\n             f.printGCUsage(e.loc, \"setting `length` may cause a GC allocation\");\n         }\n+        else if (fd.ident == Id._d_arrayappendT || fd.ident == Id._d_arrayappendcTX)\n+        {\n+            if (f.setGC())\n+            {\n+                e.error(\"cannot use operator `~=` in `@nogc` %s `%s`\",\n+                    f.kind(), f.toPrettyChars());\n+                err = true;\n+                return;\n+            }\n+            f.printGCUsage(e.loc, \"operator `~=` may cause a GC allocation\");\n+        }\n     }\n \n     override void visit(ArrayLiteralExp e)\n@@ -181,14 +192,15 @@ public:\n \n     override void visit(CatAssignExp e)\n     {\n+        /* CatAssignExp will exist in `__traits(compiles, ...)` and in the `.e1` branch of a `__ctfe ? :` CondExp.\n+         * The other branch will be `_d_arrayappendcTX(e1, 1), e1[$-1]=e2` which will generate the warning about\n+         * GC usage. See visit(CallExp).\n+         */\n         if (f.setGC())\n         {\n-            e.error(\"cannot use operator `~=` in `@nogc` %s `%s`\",\n-                f.kind(), f.toPrettyChars());\n             err = true;\n             return;\n         }\n-        f.printGCUsage(e.loc, \"operator `~=` may cause a GC allocation\");\n     }\n \n     override void visit(CatExp e)"}, {"sha": "9afedc1c27bff859b0b9168790e59d9d007cb5ee", "filename": "gcc/d/dmd/objc.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fobjc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fobjc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fobjc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -578,7 +578,7 @@ extern(C++) private final class Supported : Objc\n \n     override void checkLinkage(FuncDeclaration fd)\n     {\n-        if (fd.linkage != LINK.objc && fd.objc.selector)\n+        if (fd._linkage != LINK.objc && fd.objc.selector)\n             fd.error(\"must have Objective-C linkage to attach a selector\");\n     }\n \n@@ -640,11 +640,11 @@ extern(C++) private final class Supported : Objc\n         if (!fd.objc.isOptional)\n             return;\n \n-        if (fd.linkage != LINK.objc)\n+        if (fd._linkage != LINK.objc)\n         {\n             fd.error(\"only functions with Objective-C linkage can be declared as optional\");\n \n-            const linkage = linkageToString(fd.linkage);\n+            const linkage = linkageToString(fd._linkage);\n \n             errorSupplemental(fd.loc, \"function is declared with %.*s linkage\",\n                 cast(uint) linkage.length, linkage.ptr);"}, {"sha": "2b7b9ac1013719cb0daa270b8ed6f71ac93aec0d", "filename": "gcc/d/dmd/optimize.d", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Foptimize.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Foptimize.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Foptimize.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -558,6 +558,41 @@ Expression Expression_optimize(Expression e, int result, bool keepLvalue)\n         }\n         else if (auto ae = e.e1.isIndexExp())\n         {\n+            if (ae.e2.isIntegerExp() && ae.e1.isIndexExp())\n+            {\n+                /* Rewrite `(a[i])[index]` to `(&a[i]) + index*size`\n+                 */\n+                sinteger_t index = ae.e2.toInteger();\n+                auto ae1 = ae.e1.isIndexExp();          // ae1 is a[i]\n+                if (auto ts = ae1.type.isTypeSArray())\n+                {\n+                    sinteger_t dim = ts.dim.toInteger();\n+\n+                    if (index < 0 || index > dim)\n+                    {\n+                        e.error(\"array index %lld is out of bounds `[0..%lld]`\", index, dim);\n+                        return error();\n+                    }\n+\n+                    import core.checkedint : mulu;\n+                    bool overflow;\n+                    const offset = mulu(index, ts.nextOf().size(e.loc), overflow); // offset = index*size\n+                    if (overflow)\n+                    {\n+                        e.error(\"array offset overflow\");\n+                        return error();\n+                    }\n+\n+                    Expression ex = new AddrExp(ae1.loc, ae1);  // &a[i]\n+                    ex.type = ae1.type.pointerTo();\n+\n+                    Expression add = new AddExp(ae.loc, ex, new IntegerExp(ae.loc, offset, e.type));\n+                    add.type = e.type;\n+                    ret = Expression_optimize(add, result, keepLvalue);\n+                    return;\n+                }\n+            }\n+\n             // Convert &array[n] to &array+n\n             if (ae.e2.isIntegerExp() && ae.e1.isVarExp())\n             {"}, {"sha": "15b7658a49ad56bf25f863bed9beb5e4426bf546", "filename": "gcc/d/dmd/parse.d", "status": "modified", "additions": 63, "deletions": 27, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -289,6 +289,15 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n         return true;\n     }\n \n+    /************************************\n+     * Parse declarations and definitions\n+     * Params:\n+     *  once = !=0 means parse exactly one decl or def\n+     *  pLastDecl = set to last decl or def parsed\n+     *  pAttrs = keep track of attributes\n+     * Returns:\n+     *  array of declared symbols\n+     */\n     AST.Dsymbols* parseDeclDefs(int once, AST.Dsymbol* pLastDecl = null, PrefixAttributes!AST* pAttrs = null)\n     {\n         AST.Dsymbol lastDecl = null; // used to link unittest to its previous declaration\n@@ -480,7 +489,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                  * template instantiations in these unittests as candidates for\n                  * further codegen culling.\n                  */\n-                if (mod.isRoot() && (global.params.useUnitTests || global.params.doDocComments || global.params.doHdrGeneration))\n+                if (mod.isRoot() && (global.params.useUnitTests || global.params.ddoc.doOutput || global.params.dihdr.doOutput))\n                 {\n                     s = parseUnitTest(pAttrs);\n                     if (*pLastDecl)\n@@ -713,7 +722,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                     // The deprecation period is longer than usual as `body`\n                     // was quite widely used.\n                     if (tk.value == TOK.identifier && tk.ident == Id._body)\n-                        deprecation(\"Usage of the `body` keyword is deprecated. Use `do` instead.\");\n+                        deprecation(\"usage of the `body` keyword is deprecated. Use `do` instead.\");\n \n                     a = parseDeclarations(true, pAttrs, pAttrs.comment);\n                     if (a && a.dim)\n@@ -2649,7 +2658,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n         /** Extract unittest body as a string. Must be done eagerly since memory\n          will be released by the lexer before doc gen. */\n         char* docline = null;\n-        if (global.params.doDocComments && endPtr > begPtr)\n+        if (global.params.ddoc.doOutput && endPtr > begPtr)\n         {\n             /* Remove trailing whitespaces */\n             for (const(char)* p = endPtr - 1; begPtr <= p && (*p == ' ' || *p == '\\r' || *p == '\\n' || *p == '\\t'); --p)\n@@ -4298,7 +4307,8 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n      * These can be:\n      *      1. declarations at global/class level\n      *      2. declarations at statement level\n-     * Return array of Declaration *'s.\n+     * Returns:\n+     *  array of Declarations.\n      */\n     private AST.Dsymbols* parseDeclarations(bool autodecl, PrefixAttributes!AST* pAttrs, const(char)* comment)\n     {\n@@ -4422,7 +4432,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                     // The deprecation period is longer than usual as `body`\n                     // was quite widely used.\n                     if (tk.value == TOK.identifier && tk.ident == Id._body)\n-                        deprecation(\"Usage of the `body` keyword is deprecated. Use `do` instead.\");\n+                        deprecation(\"usage of the `body` keyword is deprecated. Use `do` instead.\");\n \n                     ts = null;\n                 }\n@@ -4459,6 +4469,12 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n             else if (t != tfirst)\n                 error(\"multiple declarations must have the same type, not `%s` and `%s`\", tfirst.toChars(), t.toChars());\n \n+            if (token.value == TOK.colon && !ident && t.ty != Tfunction)\n+            {\n+                // Unnamed bit field\n+                ident = Identifier.generateAnonymousId(\"BitField\");\n+            }\n+\n             bool isThis = (t.ty == Tident && (cast(AST.TypeIdentifier)t).ident == Id.This && token.value == TOK.assign);\n             if (ident)\n                 checkCstyleTypeSyntax(loc, t, alt, ident);\n@@ -4591,19 +4607,39 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n             }\n             else if (ident)\n             {\n+                AST.Expression width;\n+                if (token.value == TOK.colon)\n+                {\n+                    nextToken();\n+                    width = parseCondExp();\n+                }\n+\n                 AST.Initializer _init = null;\n                 if (token.value == TOK.assign)\n                 {\n                     nextToken();\n                     _init = parseInitializer();\n                 }\n \n-                auto v = new AST.VarDeclaration(loc, t, ident, _init);\n-                v.storage_class = storage_class;\n-                if (pAttrs)\n-                    pAttrs.storageClass = STC.undefined_;\n-\n-                AST.Dsymbol s = v;\n+                AST.Dsymbol s;\n+                if (width)\n+                {\n+                    if (!global.params.bitfields)\n+                        error(\"use -preview=bitfields for bitfield support\");\n+                    if (_init)\n+                        error(\"initializer not allowed for bit-field declaration\");\n+                    if (storage_class)\n+                        error(\"storage class not allowed for bit-field declaration\");\n+                    s = new AST.BitFieldDeclaration(width.loc, t, ident, width);\n+                }\n+                else\n+                {\n+                    auto v = new AST.VarDeclaration(loc, t, ident, _init);\n+                    v.storage_class = storage_class;\n+                    if (pAttrs)\n+                        pAttrs.storageClass = STC.undefined_;\n+                    s = v;\n+                }\n \n                 if (tpl && _init)\n                 {\n@@ -4616,7 +4652,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                 {\n                     auto ax = new AST.Dsymbols();\n                     ax.push(s);\n-                    s = new AST.AlignDeclaration(v.loc, ealign, ax);\n+                    s = new AST.AlignDeclaration(s.loc, ealign, ax);\n                 }\n                 if (link != linkage)\n                 {\n@@ -4646,12 +4682,12 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                 default:\n                     if (loc.linnum != token.loc.linnum)\n                     {\n-                        error(\"semicolon needed to end declaration of `%s`, instead of `%s`\", v.toChars(), token.toChars());\n-                        errorSupplemental(loc, \"`%s` declared here\", v.toChars());\n+                        error(\"semicolon needed to end declaration of `%s`, instead of `%s`\", s.toChars(), token.toChars());\n+                        errorSupplemental(loc, \"`%s` declared here\", s.toChars());\n                     }\n                     else\n                     {\n-                        error(\"semicolon needed to end declaration of `%s` instead of `%s`\", v.toChars(), token.toChars());\n+                        error(\"semicolon needed to end declaration of `%s` instead of `%s`\", s.toChars(), token.toChars());\n                     }\n                     break;\n                 }\n@@ -4826,7 +4862,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                     if (udas !is null)\n                     {\n                         if (storage_class != 0)\n-                            error(\"Cannot put a storage-class in an alias declaration.\");\n+                            error(\"cannot put a storage-class in an alias declaration.\");\n                         // parseAttributes shouldn't have set these variables\n                         assert(link == linkage && !setAlignment && ealign is null);\n                         auto tpl_ = cast(AST.TemplateDeclaration) s;\n@@ -5034,7 +5070,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n             check(TOK.goesTo);\n             if (token.value == TOK.leftCurly)\n             {\n-                deprecation(\"Using `(args) => { ... }` to create a delegate that returns a delegate is error-prone.\");\n+                deprecation(\"using `(args) => { ... }` to create a delegate that returns a delegate is error-prone.\");\n                 deprecationSupplemental(token.loc, \"Use `(args) { ... }` for a multi-statement function literal or use `(args) => () { }` if you intended for the lambda to return a delegate.\");\n             }\n             const returnloc = token.loc;\n@@ -5100,7 +5136,7 @@ class Parser(AST, Lexer = dmd.lexer.Lexer) : Lexer\n                 // Deprecated in 2.097 - Can be removed from 2.117\n                 // The deprecation period is longer than usual as `body`\n                 // was quite widely used.\n-                deprecation(\"Usage of the `body` keyword is deprecated. Use `do` instead.\");\n+                deprecation(\"usage of the `body` keyword is deprecated. Use `do` instead.\");\n                 goto case TOK.do_;\n             }\n             goto default;\n@@ -7426,7 +7462,7 @@ LagainStc:\n                     // Deprecated in 2.097 - Can be removed from 2.117\n                     // The deprecation period is longer than usual as `body`\n                     // was quite widely used.\n-                    deprecation(\"Usage of the `body` keyword is deprecated. Use `do` instead.\");\n+                    deprecation(\"usage of the `body` keyword is deprecated. Use `do` instead.\");\n                     goto case TOK.do_;\n                 }\n                 goto default;\n@@ -8026,7 +8062,7 @@ LagainStc:\n                             postfix = token.postfix;\n                         }\n \n-                        error(\"Implicit string concatenation is error-prone and disallowed in D\");\n+                        error(\"implicit string concatenation is error-prone and disallowed in D\");\n                         errorSupplemental(token.loc, \"Use the explicit syntax instead \" ~\n                              \"(concatenating literals is `@nogc`): %s ~ %s\",\n                              prev.toChars(), token.toChars());\n@@ -9580,18 +9616,18 @@ private StorageClass getStorageClass(AST)(PrefixAttributes!(AST)* pAttrs)\n  */\n private bool writeMixin(const(char)[] s, ref Loc loc)\n {\n-    if (!global.params.mixinOut)\n+    if (!global.params.mixinOut.doOutput)\n         return false;\n \n-    OutBuffer* ob = global.params.mixinOut;\n+    OutBuffer* ob = global.params.mixinOut.buffer;\n \n     ob.writestring(\"// expansion at \");\n     ob.writestring(loc.toChars());\n     ob.writenl();\n \n-    global.params.mixinLines++;\n+    global.params.mixinOut.bufferLines++;\n \n-    loc = Loc(global.params.mixinFile, global.params.mixinLines + 1, loc.charnum);\n+    loc = Loc(global.params.mixinOut.name.ptr, global.params.mixinOut.bufferLines + 1, loc.charnum);\n \n     // write by line to create consistent line endings\n     size_t lastpos = 0;\n@@ -9603,7 +9639,7 @@ private bool writeMixin(const(char)[] s, ref Loc loc)\n         {\n             ob.writestring(s[lastpos .. i]);\n             ob.writenl();\n-            global.params.mixinLines++;\n+            global.params.mixinOut.bufferLines++;\n             if (c == '\\r')\n                 ++i;\n             lastpos = i + 1;\n@@ -9616,10 +9652,10 @@ private bool writeMixin(const(char)[] s, ref Loc loc)\n     if (s.length == 0 || s[$-1] != '\\n')\n     {\n         ob.writenl(); // ensure empty line after expansion\n-        global.params.mixinLines++;\n+        global.params.mixinOut.bufferLines++;\n     }\n     ob.writenl();\n-    global.params.mixinLines++;\n+    global.params.mixinOut.bufferLines++;\n \n     return true;\n }"}, {"sha": "1c5275b3b3444dd4a1ebe7bb381db0986e84a65c", "filename": "gcc/d/dmd/safe.d", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsafe.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsafe.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsafe.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -53,7 +53,7 @@ bool checkUnsafeAccess(Scope* sc, Expression e, bool readonly, bool printmsg)\n     {\n         if (sc.intypeof || !sc.func || !sc.func.isSafeBypassingInference())\n             return false;\n-        auto ad = v.toParent2().isAggregateDeclaration();\n+        auto ad = v.isMember2();\n         if (!ad)\n             return false;\n \n@@ -64,23 +64,22 @@ bool checkUnsafeAccess(Scope* sc, Expression e, bool readonly, bool printmsg)\n         const hasPointers = v.type.hasPointers();\n         if (hasPointers)\n         {\n-            if (v.overlapped && sc.func.setUnsafe())\n+            if (v.overlapped)\n             {\n-                if (printmsg)\n-                    e.error(\"field `%s.%s` cannot access pointers in `@safe` code that overlap other fields\",\n-                        ad.toChars(), v.toChars());\n-                return true;\n+                if (sc.func.setUnsafe(!printmsg, e.loc,\n+                    \"field `%s.%s` cannot access pointers in `@safe` code that overlap other fields\", ad, v))\n+                    return true;\n             }\n         }\n \n         if (v.type.hasInvariant())\n         {\n-            if (v.overlapped && sc.func.setUnsafe())\n+            if (v.overlapped)\n             {\n-                if (printmsg)\n-                    e.error(\"field `%s.%s` cannot access structs with invariants in `@safe` code that overlap other fields\",\n-                        ad.toChars(), v.toChars());\n-                return true;\n+                if (sc.func.setUnsafe(!printmsg, e.loc,\n+                    \"field `%s.%s` cannot access structs with invariants in `@safe` code that overlap other fields\",\n+                    ad, v))\n+                    return true;\n             }\n         }\n \n@@ -90,22 +89,22 @@ bool checkUnsafeAccess(Scope* sc, Expression e, bool readonly, bool printmsg)\n         if (hasPointers && v.type.toBasetype().ty != Tstruct)\n         {\n             if ((!ad.type.alignment.isDefault() && ad.type.alignment.get() < target.ptrsize ||\n-                 (v.offset & (target.ptrsize - 1))) &&\n-                sc.func.setUnsafe())\n+                 (v.offset & (target.ptrsize - 1))))\n             {\n-                if (printmsg)\n-                    e.error(\"field `%s.%s` cannot modify misaligned pointers in `@safe` code\",\n-                        ad.toChars(), v.toChars());\n-                return true;\n+                if (sc.func.setUnsafe(!printmsg, e.loc,\n+                    \"field `%s.%s` cannot modify misaligned pointers in `@safe` code\", ad, v))\n+                    return true;\n             }\n         }\n \n-        if (v.overlapUnsafe && sc.func.setUnsafe())\n+        if (v.overlapUnsafe)\n         {\n-             if (printmsg)\n-                 e.error(\"field `%s.%s` cannot modify fields in `@safe` code that overlap fields with other storage classes\",\n-                    ad.toChars(), v.toChars());\n-             return true;\n+            if (sc.func.setUnsafe(!printmsg, e.loc,\n+                \"field `%s.%s` cannot modify fields in `@safe` code that overlap fields with other storage classes\",\n+                ad, v))\n+            {\n+                return true;\n+            }\n         }\n     }\n     return false;\n@@ -215,14 +214,12 @@ bool checkUnsafeDotExp(Scope* sc, Expression e, Identifier id, int flag)\n     if (!(flag & DotExpFlag.noDeref) && // this use is attempting a dereference\n         sc.func &&                      // inside a function\n         !sc.intypeof &&                 // allow unsafe code in typeof expressions\n-        !(sc.flags & SCOPE.debug_) &&   // allow unsafe code in debug statements\n-        sc.func.setUnsafe())            // infer this function to be unsafe\n+        !(sc.flags & SCOPE.debug_))     // allow unsafe code in debug statements\n     {\n         if (id == Id.ptr)\n-            e.error(\"`%s.ptr` cannot be used in `@safe` code, use `&%s[0]` instead\", e.toChars(), e.toChars());\n+            return sc.func.setUnsafe(false, e.loc, \"`%s.ptr` cannot be used in `@safe` code, use `&%s[0]` instead\", e, e);\n         else\n-            e.error(\"`%s.%s` cannot be used in `@safe` code\", e.toChars(), id.toChars());\n-        return true;\n+            return sc.func.setUnsafe(false, e.loc, \"`%s.%s` cannot be used in `@safe` code\", e, id);\n     }\n     return false;\n }"}, {"sha": "73dcaa6c9608700ef400dfd48836faff1c2e5f41", "filename": "gcc/d/dmd/semantic2.d", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsemantic2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsemantic2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsemantic2.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -238,7 +238,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n             return;\n         }\n \n-        UserAttributeDeclaration.checkGNUABITag(vd, vd.linkage);\n+        UserAttributeDeclaration.checkGNUABITag(vd, vd._linkage);\n \n         if (vd._init && !vd.toParent().isFuncDeclaration())\n         {\n@@ -379,6 +379,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n             alias f1 = fd;\n             auto tf1 = cast(TypeFunction) f1.type;\n             auto parent1 = f1.toParent2();\n+            const linkage1 = f1.resolvedLinkage();\n \n             overloadApply(f1, (Dsymbol s)\n             {\n@@ -391,7 +392,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n                     return 0;\n \n                 // Functions with different manglings can never conflict\n-                if (f1.linkage != f2.linkage)\n+                if (linkage1 != f2.resolvedLinkage())\n                     return 0;\n \n                 // Functions with different names never conflict\n@@ -428,12 +429,12 @@ private extern(C++) final class Semantic2Visitor : Visitor\n                 // @@@DEPRECATED_2.104@@@\n                 // Deprecated in 2020-08, make this an error in 2.104\n                 if (parent1.isModule() &&\n-                    f1.linkage != LINK.d && f1.linkage != LINK.cpp &&\n+                    linkage1 != LINK.d && linkage1 != LINK.cpp &&\n                     (!sameAttr || !sameParams)\n                 )\n                 {\n                     f2.deprecation(\"cannot overload `extern(%s)` function at %s\",\n-                            linkageToChars(f1.linkage),\n+                            linkageToChars(f1._linkage),\n                             f1.loc.toChars());\n                     return 0;\n                 }\n@@ -443,7 +444,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n                     return 0;\n \n                 // Different attributes don't conflict in extern(D)\n-                if (!sameAttr && f1.linkage == LINK.d)\n+                if (!sameAttr && linkage1 == LINK.d)\n                     return 0;\n \n                 error(f2.loc, \"%s `%s%s` conflicts with previous declaration at %s\",\n@@ -460,7 +461,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n             return;\n         TypeFunction f = cast(TypeFunction) fd.type;\n \n-        UserAttributeDeclaration.checkGNUABITag(fd, fd.linkage);\n+        UserAttributeDeclaration.checkGNUABITag(fd, fd._linkage);\n         //semantic for parameters' UDAs\n         foreach (i, param; f.parameterList)\n         {\n@@ -643,7 +644,7 @@ private extern(C++) final class Semantic2Visitor : Visitor\n                     {\n                         //printf(\"            found\\n\");\n                         // Check that calling conventions match\n-                        if (fd.linkage != ifd.linkage)\n+                        if (fd._linkage != ifd._linkage)\n                             fd.error(\"linkage doesn't match interface function\");\n \n                         // Check that it is current"}, {"sha": "a056c99b11eedd9348a4e73dd8fd6b5d2946075b", "filename": "gcc/d/dmd/semantic3.d", "status": "modified", "additions": 75, "deletions": 70, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsemantic3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fsemantic3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsemantic3.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -327,7 +327,7 @@ private extern(C++) final class Semantic3Visitor : Visitor\n             sc2.scontinue = null;\n             sc2.sw = null;\n             sc2.fes = funcdecl.fes;\n-            sc2.linkage = LINK.d;\n+            sc2.linkage = funcdecl.isCsymbol() ? LINK.c : LINK.d;\n             sc2.stc &= STC.flowThruFunction;\n             sc2.visibility = Visibility(Visibility.Kind.public_);\n             sc2.explicitVisibility = 0;\n@@ -1053,7 +1053,7 @@ private extern(C++) final class Semantic3Visitor : Visitor\n                         {\n                             if (!v._init)\n                             {\n-                                v.error(\"Zero-length `out` parameters are not allowed.\");\n+                                v.error(\"zero-length `out` parameters are not allowed.\");\n                                 return;\n                             }\n                             ExpInitializer ie = v._init.isExpInitializer();\n@@ -1277,70 +1277,7 @@ private extern(C++) final class Semantic3Visitor : Visitor\n             f.isnogc = true;\n         }\n \n-        if (funcdecl.flags & FUNCFLAG.returnInprocess)\n-        {\n-            funcdecl.flags &= ~FUNCFLAG.returnInprocess;\n-            if (funcdecl.storage_class & STC.return_)\n-            {\n-                if (funcdecl.type == f)\n-                    f = cast(TypeFunction)f.copy();\n-                f.isreturn = true;\n-                f.isreturnscope = cast(bool) (funcdecl.storage_class & STC.returnScope);\n-                if (funcdecl.storage_class & STC.returninferred)\n-                    f.isreturninferred = true;\n-            }\n-        }\n-\n-        funcdecl.flags &= ~FUNCFLAG.inferScope;\n-\n-        // Eliminate maybescope's\n-        {\n-            // Create and fill array[] with maybe candidates from the `this` and the parameters\n-            VarDeclaration[10] tmp = void;\n-            size_t dim = (funcdecl.vthis !is null) + (funcdecl.parameters ? funcdecl.parameters.dim : 0);\n-\n-            import dmd.common.string : SmallBuffer;\n-            auto sb = SmallBuffer!VarDeclaration(dim, tmp[]);\n-            VarDeclaration[] array = sb[];\n-\n-            size_t n = 0;\n-            if (funcdecl.vthis)\n-                array[n++] = funcdecl.vthis;\n-            if (funcdecl.parameters)\n-            {\n-                foreach (v; *funcdecl.parameters)\n-                {\n-                    array[n++] = v;\n-                }\n-            }\n-            eliminateMaybeScopes(array[0 .. n]);\n-        }\n-\n-        // Infer STC.scope_\n-        if (funcdecl.parameters && !funcdecl.errors)\n-        {\n-            assert(f.parameterList.length == funcdecl.parameters.dim);\n-            foreach (u, p; f.parameterList)\n-            {\n-                auto v = (*funcdecl.parameters)[u];\n-                if (v.storage_class & STC.maybescope)\n-                {\n-                    //printf(\"Inferring scope for %s\\n\", v.toChars());\n-                    notMaybeScope(v);\n-                    v.storage_class |= STC.scope_ | STC.scopeinferred;\n-                    p.storageClass |= STC.scope_ | STC.scopeinferred;\n-                    assert(!(p.storageClass & STC.maybescope));\n-                }\n-            }\n-        }\n-\n-        if (funcdecl.vthis && funcdecl.vthis.storage_class & STC.maybescope)\n-        {\n-            notMaybeScope(funcdecl.vthis);\n-            funcdecl.vthis.storage_class |= STC.scope_ | STC.scopeinferred;\n-            f.isScopeQual = true;\n-            f.isscopeinferred = true;\n-        }\n+        finishScopeParamInference(funcdecl, f);\n \n         // reset deco to apply inference result to mangled name\n         if (f != funcdecl.type)\n@@ -1353,11 +1290,77 @@ private extern(C++) final class Semantic3Visitor : Visitor\n             if (funcdecl.isCtorDeclaration()) // https://issues.dlang.org/show_bug.cgi?id=#15665\n                 f.isctor = true;\n             sc.stc = 0;\n-            sc.linkage = funcdecl.linkage; // https://issues.dlang.org/show_bug.cgi?id=8496\n+            sc.linkage = funcdecl._linkage; // https://issues.dlang.org/show_bug.cgi?id=8496\n             funcdecl.type = f.typeSemantic(funcdecl.loc, sc);\n             sc = sc.pop();\n         }\n \n+        // Check `extern(C++)` functions for invalid the return/parameter types\n+        if (funcdecl._linkage == LINK.cpp)\n+        {\n+            static bool isCppNonMappableType(Type type, Parameter param = null, Type origType = null)\n+            {\n+                // Don't allow D `immutable` and `shared` types to be interfaced with C++\n+                if (type.isImmutable() || type.isShared())\n+                    return true;\n+                else if (Type cpptype = target.cpp.parameterType(type))\n+                    type = cpptype;\n+\n+                if (origType is null)\n+                    origType = type;\n+\n+                // Permit types that are handled by toCppMangle. This list should be kept in sync with\n+                // each visit method in dmd.cppmangle and dmd.cppmanglewin.\n+                switch (type.ty)\n+                {\n+                    case Tnull:\n+                    case Tnoreturn:\n+                    case Tvector:\n+                    case Tpointer:\n+                    case Treference:\n+                    case Tfunction:\n+                    case Tstruct:\n+                    case Tenum:\n+                    case Tclass:\n+                    case Tident:\n+                    case Tinstance:\n+                        break;\n+\n+                    case Tsarray:\n+                        if (!origType.isTypePointer())\n+                            return true;\n+                        break;\n+\n+                    default:\n+                        if (!type.isTypeBasic())\n+                            return true;\n+                        break;\n+                }\n+\n+                // Descend to the enclosing type\n+                if (auto tnext = type.nextOf())\n+                    return isCppNonMappableType(tnext, param, origType);\n+\n+                return false;\n+            }\n+            if (isCppNonMappableType(f.next.toBasetype()))\n+            {\n+                funcdecl.error(\"cannot return type `%s` because its linkage is `extern(C++)`\", f.next.toChars());\n+                funcdecl.errors = true;\n+            }\n+            foreach (i, param; f.parameterList)\n+            {\n+                if (isCppNonMappableType(param.type.toBasetype(), param))\n+                {\n+                    funcdecl.error(\"cannot have parameter of type `%s` because its linkage is `extern(C++)`\", param.type.toChars());\n+                    if (param.type.toBasetype().isTypeSArray())\n+                        errorSupplemental(funcdecl.loc, \"perhaps use a `%s*` type instead\",\n+                                          param.type.nextOf().mutableOf().unSharedOf().toChars());\n+                    funcdecl.errors = true;\n+                }\n+            }\n+        }\n+\n         // Do live analysis\n         if (global.params.useDIP1021 && funcdecl.fbody && funcdecl.type.ty != Terror &&\n             funcdecl.type.isTypeFunction().islive)\n@@ -1535,9 +1538,11 @@ private extern(C++) final class Semantic3Visitor : Visitor\n \n         sc2.pop();\n \n-        // don't do it for unused deprecated types\n-        // or error ypes\n-        if (!ad.getRTInfo && Type.rtinfo && (!ad.isDeprecated() || global.params.useDeprecated != DiagnosticReporting.error) && (ad.type && ad.type.ty != Terror))\n+        // Instantiate RTInfo!S to provide a pointer bitmap for the GC\n+        // Don't do it in -betterC or on unused deprecated / error types\n+        if (!ad.getRTInfo && global.params.useTypeInfo && Type.rtinfo &&\n+            (!ad.isDeprecated() || global.params.useDeprecated != DiagnosticReporting.error) &&\n+            (ad.type && ad.type.ty != Terror))\n         {\n             // Evaluate: RTinfo!type\n             auto tiargs = new Objects();"}, {"sha": "a7ad84f8504fddc6e7b246605fd0014bfbc550a6", "filename": "gcc/d/dmd/statementsem.d", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fstatementsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Fstatementsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3554,13 +3554,13 @@ package (dmd) extern (C++) final class StatementSemanticVisitor : Visitor\n \n         if (!global.params.useExceptions)\n         {\n-            tcs.error(\"Cannot use try-catch statements with -betterC\");\n+            tcs.error(\"cannot use try-catch statements with -betterC\");\n             return setError();\n         }\n \n         if (!ClassDeclaration.throwable)\n         {\n-            tcs.error(\"Cannot use try-catch statements because `object.Throwable` was not declared\");\n+            tcs.error(\"cannot use try-catch statements because `object.Throwable` was not declared\");\n             return setError();\n         }\n \n@@ -3762,13 +3762,13 @@ package (dmd) extern (C++) final class StatementSemanticVisitor : Visitor\n     {\n         if (!global.params.useExceptions)\n         {\n-            loc.error(\"Cannot use `throw` statements with -betterC\");\n+            loc.error(\"cannot use `throw` statements with -betterC\");\n             return false;\n         }\n \n         if (!ClassDeclaration.throwable)\n         {\n-            loc.error(\"Cannot use `throw` statements because `object.Throwable` was not declared\");\n+            loc.error(\"cannot use `throw` statements because `object.Throwable` was not declared\");\n             return false;\n         }\n \n@@ -3927,8 +3927,10 @@ package (dmd) extern (C++) final class StatementSemanticVisitor : Visitor\n             cas.error(\"`asm` statement is assumed to be impure - mark it with `pure` if it is not\");\n         if (!(cas.stc & STC.nogc) && sc.func.setGC())\n             cas.error(\"`asm` statement is assumed to use the GC - mark it with `@nogc` if it does not\");\n-        if (!(cas.stc & (STC.trusted | STC.safe)) && sc.func.setUnsafe())\n-            cas.error(\"`asm` statement is assumed to be `@system` - mark it with `@trusted` if it is not\");\n+        if (!(cas.stc & (STC.trusted | STC.safe)))\n+        {\n+            sc.func.setUnsafe(false, cas.loc, \"`asm` statement is assumed to be `@system` - mark it with `@trusted` if it is not\");\n+        }\n \n         sc.pop();\n         result = cas;\n@@ -4032,10 +4034,10 @@ void catchSemantic(Catch c, Scope* sc)\n             error(c.loc, \"catching C++ class objects not supported for this target\");\n             c.errors = true;\n         }\n-        if (sc.func && !sc.intypeof && !c.internalCatch && sc.func.setUnsafe())\n+        if (sc.func && !sc.intypeof && !c.internalCatch)\n         {\n-            error(c.loc, \"cannot catch C++ class objects in `@safe` code\");\n-            c.errors = true;\n+            if (sc.func.setUnsafe(false, c.loc, \"cannot catch C++ class objects in `@safe` code\"))\n+                c.errors = true;\n         }\n     }\n     else if (cd != ClassDeclaration.throwable && !ClassDeclaration.throwable.isBaseOf(cd, null))\n@@ -4044,10 +4046,10 @@ void catchSemantic(Catch c, Scope* sc)\n         c.errors = true;\n     }\n     else if (sc.func && !sc.intypeof && !c.internalCatch && ClassDeclaration.exception &&\n-             cd != ClassDeclaration.exception && !ClassDeclaration.exception.isBaseOf(cd, null) &&\n-             sc.func.setUnsafe())\n+            cd != ClassDeclaration.exception && !ClassDeclaration.exception.isBaseOf(cd, null) &&\n+            sc.func.setUnsafe(false, c.loc,\n+                \"can only catch class objects derived from `Exception` in `@safe` code, not `%s`\", c.type))\n     {\n-        error(c.loc, \"can only catch class objects derived from `Exception` in `@safe` code, not `%s`\", c.type.toChars());\n         c.errors = true;\n     }\n     else if (global.params.ehnogc)\n@@ -4829,7 +4831,7 @@ private Statement toStatement(Dsymbol s)\n     }\n     else\n     {\n-        .error(Loc.initial, \"Internal Compiler Error: cannot mixin %s `%s`\\n\", s.kind(), s.toChars());\n+        .error(Loc.initial, \"internal compiler error: cannot mixin %s `%s`\\n\", s.kind(), s.toChars());\n         result = new ErrorStatement();\n     }\n "}, {"sha": "170a5344d2b68f478bf274ab845c59237262984c", "filename": "gcc/d/dmd/tokens.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftokens.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftokens.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftokens.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -608,7 +608,7 @@ static immutable TOK[TOK.max + 1] Ckeywords =\n         enum Ckwds = [ auto_, break_, case_, char_, const_, continue_, default_, do_, float64, else_,\n                        enum_, extern_, float32, for_, goto_, if_, inline, int32, int64, register,\n                        restrict, return_, int16, signed, sizeof_, static_, struct_, switch_, typedef_,\n-                       union_, unsigned, void_, volatile, while_, asm_,\n+                       union_, unsigned, void_, volatile, while_, asm_, typeof_,\n                        _Alignas, _Alignof, _Atomic, _Bool, _Complex, _Generic, _Imaginary, _Noreturn,\n                        _Static_assert, _Thread_local, _import, __cdecl, __declspec, __stdcall, __attribute__ ];\n "}, {"sha": "be954324a4e1f0ae3f3fadfbe32e240c5311e369", "filename": "gcc/d/dmd/traits.d", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftraits.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -132,6 +132,7 @@ shared static this()\n         \"getVirtualFunctions\",\n         \"getVirtualMethods\",\n         \"classInstanceSize\",\n+        \"classInstanceAlignment\",\n         \"allMembers\",\n         \"derivedMembers\",\n         \"isSame\",\n@@ -1211,7 +1212,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n         else\n             assert(0);\n     }\n-    if (e.ident == Id.classInstanceSize)\n+    if (e.ident == Id.classInstanceSize || e.ident == Id.classInstanceAlignment)\n     {\n         if (dim != 1)\n             return dimError(1);\n@@ -1234,7 +1235,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n             return ErrorExp.get();\n         }\n \n-        return new IntegerExp(e.loc, cd.structsize, Type.tsize_t);\n+        return new IntegerExp(e.loc, e.ident == Id.classInstanceSize ? cd.structsize : cd.alignsize, Type.tsize_t);\n     }\n     if (e.ident == Id.getAliasThis)\n     {\n@@ -1381,7 +1382,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n                 e.error(\"argument to `__traits(getFunctionVariadicStyle, %s)` is not a function\", o.toChars());\n                 return ErrorExp.get();\n             }\n-            link = fd.linkage;\n+            link = fd._linkage;\n             varargs = fd.getParameterList().varargs;\n         }\n         string style;\n@@ -1515,7 +1516,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n \n         if (tf)\n         {\n-            link = fd ? fd.linkage : tf.linkage;\n+            link = fd ? fd.toAliasFunc()._linkage : tf.linkage;\n         }\n         else\n         {\n@@ -1529,7 +1530,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n             }\n \n             if (d !is null)\n-                link = d.linkage;\n+                link = d._linkage;\n             else\n             {\n                 // Resolves forward references\n@@ -1574,7 +1575,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n         auto s = getDsymbol(o);\n         if (!s)\n         {\n-            e.error(\"In expression `%s` `%s` can't have members\", e.toChars(), o.toChars());\n+            e.error(\"in expression `%s` `%s` can't have members\", e.toChars(), o.toChars());\n             e.errorSupplemental(\"`%s` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\", o.toChars());\n \n             return ErrorExp.get();\n@@ -1595,7 +1596,7 @@ Expression semanticTraits(TraitsExp e, Scope* sc)\n         auto sds = s.isScopeDsymbol();\n         if (!sds || sds.isTemplateDeclaration())\n         {\n-            e.error(\"In expression `%s` %s `%s` has no members\", e.toChars(), s.kind(), s.toChars());\n+            e.error(\"in expression `%s` %s `%s` has no members\", e.toChars(), s.kind(), s.toChars());\n             e.errorSupplemental(\"`%s` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\", s.toChars());\n             return ErrorExp.get();\n         }"}, {"sha": "ac4c23b06056f9bfaa72957b20cd5f51201c3056", "filename": "gcc/d/dmd/typesem.d", "status": "modified", "additions": 106, "deletions": 109, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftypesem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Ftypesem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftypesem.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1154,7 +1154,7 @@ extern(C++) Type typeSemantic(Type type, const ref Loc loc, Scope* sc)\n             //printf(\"already done\\n\");\n             return mtype;\n         }\n-        //printf(\"TypeFunction::semantic() this = %p\\n\", this);\n+        //printf(\"TypeFunction::semantic() this = %p\\n\", mtype);\n         //printf(\"TypeFunction::semantic() %s, sc.stc = %llx\\n\", mtype.toChars(), sc.stc);\n \n         bool errors = false;\n@@ -1788,111 +1788,18 @@ extern(C++) Type typeSemantic(Type type, const ref Loc loc, Scope* sc)\n \n     Type visitTraits(TypeTraits mtype)\n     {\n-        if (mtype.ty == Terror)\n-            return mtype;\n-\n-        const inAlias = (sc.flags & SCOPE.alias_) != 0;\n-        if (mtype.exp.ident != Id.allMembers &&\n-            mtype.exp.ident != Id.derivedMembers &&\n-            mtype.exp.ident != Id.getMember &&\n-            mtype.exp.ident != Id.parent &&\n-            mtype.exp.ident != Id.parameters &&\n-            mtype.exp.ident != Id.child &&\n-            mtype.exp.ident != Id.toType &&\n-            mtype.exp.ident != Id.getOverloads &&\n-            mtype.exp.ident != Id.getVirtualFunctions &&\n-            mtype.exp.ident != Id.getVirtualMethods &&\n-            mtype.exp.ident != Id.getAttributes &&\n-            mtype.exp.ident != Id.getUnitTests &&\n-            mtype.exp.ident != Id.getAliasThis)\n-        {\n-            static immutable (const(char)*)[2] ctxt = [\"as type\", \"in alias\"];\n-            .error(mtype.loc, \"trait `%s` is either invalid or not supported %s\",\n-                 mtype.exp.ident.toChars, ctxt[inAlias]);\n-            mtype.ty = Terror;\n-            return mtype;\n-        }\n-\n-        import dmd.traits : semanticTraits;\n-        Type result;\n-\n-        if (Expression e = semanticTraits(mtype.exp, sc))\n-        {\n-            switch (e.op)\n-            {\n-            case EXP.dotVariable:\n-                mtype.sym = e.isDotVarExp().var;\n-                break;\n-            case EXP.variable:\n-                mtype.sym = e.isVarExp().var;\n-                break;\n-            case EXP.function_:\n-                auto fe = e.isFuncExp();\n-                mtype.sym = fe.td ? fe.td : fe.fd;\n-                break;\n-            case EXP.dotTemplateDeclaration:\n-                mtype.sym = e.isDotTemplateExp().td;\n-                break;\n-            case EXP.dSymbol:\n-                mtype.sym = e.isDsymbolExp().s;\n-                break;\n-            case EXP.template_:\n-                mtype.sym = e.isTemplateExp().td;\n-                break;\n-            case EXP.scope_:\n-                mtype.sym = e.isScopeExp().sds;\n-                break;\n-            case EXP.tuple:\n-                TupleExp te = e.isTupleExp();\n-                Objects* elems = new Objects(te.exps.dim);\n-                foreach (i; 0 .. elems.dim)\n-                {\n-                    auto src = (*te.exps)[i];\n-                    switch (src.op)\n-                    {\n-                    case EXP.type:\n-                        (*elems)[i] = src.isTypeExp().type;\n-                        break;\n-                    case EXP.dotType:\n-                        (*elems)[i] = src.isDotTypeExp().sym.isType();\n-                        break;\n-                    case EXP.overloadSet:\n-                        (*elems)[i] = src.isOverExp().type;\n-                        break;\n-                    default:\n-                        if (auto sym = isDsymbol(src))\n-                            (*elems)[i] = sym;\n-                        else\n-                            (*elems)[i] = src;\n-                    }\n-                }\n-                TupleDeclaration td = new TupleDeclaration(e.loc, Identifier.generateId(\"__aliastup\"), elems);\n-                mtype.sym = td;\n-                break;\n-            case EXP.dotType:\n-                result = e.isDotTypeExp().sym.isType();\n-                break;\n-            case EXP.type:\n-                result = e.isTypeExp().type;\n-                break;\n-            case EXP.overloadSet:\n-                result = e.isOverExp().type;\n-                break;\n-            default:\n-                break;\n-            }\n-        }\n+        Expression e;\n+        Type t;\n+        Dsymbol s;\n+        mtype.resolve(loc, sc, e, t, s);\n \n-        if (result)\n-            result = result.addMod(mtype.mod);\n-        if (!inAlias && !result)\n+        if (!t)\n         {\n             if (!global.errors)\n                 .error(mtype.loc, \"`%s` does not give a valid type\", mtype.toChars);\n             return error();\n         }\n-\n-        return result;\n+        return t;\n     }\n \n     Type visitReturn(TypeReturn mtype)\n@@ -3132,7 +3039,8 @@ void resolve(Type mt, const ref Loc loc, Scope* sc, out Expression pe, out Type\n         if (mt.exp.op == EXP.type ||\n             mt.exp.op == EXP.scope_)\n         {\n-            if (mt.exp.checkType())\n+            if (!(sc.flags & SCOPE.Cfile) && // in (extended) C typeof may be used on types as with sizeof\n+                mt.exp.checkType())\n                 goto Lerr;\n \n             /* Today, 'typeof(func)' returns void if func is a\n@@ -3326,14 +3234,99 @@ void resolve(Type mt, const ref Loc loc, Scope* sc, out Expression pe, out Type\n         mt.obj = pe ? pe : (pt ? pt : ps);\n     }\n \n-    void visitTraits(TypeTraits tt)\n+    void visitTraits(TypeTraits mt)\n     {\n-        if (Type t = typeSemantic(tt, loc, sc))\n-            returnType(t);\n-        else if (tt.sym)\n-            returnSymbol(tt.sym);\n+        // if already resolved just return the cached object.\n+        if (mt.obj)\n+        {\n+            pt = mt.obj.isType();\n+            ps = mt.obj.isDsymbol();\n+            return;\n+        }\n+\n+        import dmd.traits : semanticTraits;\n+\n+        if (Expression e = semanticTraits(mt.exp, sc))\n+        {\n+            switch (e.op)\n+            {\n+            case EXP.dotVariable:\n+                mt.obj = e.isDotVarExp().var;\n+                break;\n+            case EXP.variable:\n+                mt.obj = e.isVarExp().var;\n+                break;\n+            case EXP.function_:\n+                auto fe = e.isFuncExp();\n+                mt.obj = fe.td ? fe.td : fe.fd;\n+                break;\n+            case EXP.dotTemplateDeclaration:\n+                mt.obj = e.isDotTemplateExp().td;\n+                break;\n+            case EXP.dSymbol:\n+                mt.obj = e.isDsymbolExp().s;\n+                break;\n+            case EXP.template_:\n+                mt.obj = e.isTemplateExp().td;\n+                break;\n+            case EXP.scope_:\n+                mt.obj = e.isScopeExp().sds;\n+                break;\n+            case EXP.tuple:\n+                TupleExp te = e.isTupleExp();\n+                Objects* elems = new Objects(te.exps.dim);\n+                foreach (i; 0 .. elems.dim)\n+                {\n+                    auto src = (*te.exps)[i];\n+                    switch (src.op)\n+                    {\n+                    case EXP.type:\n+                        (*elems)[i] = src.isTypeExp().type;\n+                        break;\n+                    case EXP.dotType:\n+                        (*elems)[i] = src.isDotTypeExp().sym.isType();\n+                        break;\n+                    case EXP.overloadSet:\n+                        (*elems)[i] = src.isOverExp().type;\n+                        break;\n+                    default:\n+                        if (auto sym = isDsymbol(src))\n+                            (*elems)[i] = sym;\n+                        else\n+                            (*elems)[i] = src;\n+                    }\n+                }\n+                TupleDeclaration td = new TupleDeclaration(e.loc, Identifier.generateId(\"__aliastup\"), elems);\n+                mt.obj = td;\n+                break;\n+            case EXP.dotType:\n+                mt.obj = e.isDotTypeExp().sym.isType();\n+                break;\n+            case EXP.type:\n+                mt.obj = e.isTypeExp().type;\n+                break;\n+            case EXP.overloadSet:\n+                mt.obj = e.isOverExp().type;\n+                break;\n+            default:\n+                break;\n+            }\n+        }\n+\n+        if (mt.obj)\n+        {\n+            if (auto t = mt.obj.isType())\n+                returnType(t.addMod(mt.mod));\n+            else if (auto s = mt.obj.isDsymbol())\n+                returnSymbol(s);\n+            else\n+                assert(0);\n+        }\n         else\n+        {\n+            mt.obj = Type.terror;\n             return returnError();\n+        }\n     }\n \n     switch (mt.ty)\n@@ -3391,7 +3384,7 @@ Expression dotExp(Type mt, Scope* sc, Expression e, Identifier ident, int flag)\n                 v.dsymbolSemantic(null);\n                 if (v.isField())\n                 {\n-                    auto ad = v.toParent().isAggregateDeclaration();\n+                    auto ad = v.isMember();\n                     objc.checkOffsetof(e, ad);\n                     ad.size(e.loc);\n                     if (ad.sizeok != Sizeok.done)\n@@ -3637,12 +3630,16 @@ Expression dotExp(Type mt, Scope* sc, Expression e, Identifier ident, int flag)\n             }\n             else\n             {\n+                Expression e0;\n+                Expression ev = e;\n+                ev = extractSideEffect(sc, \"__tup\", e0, ev);\n+\n                 const length = cast(size_t)mt.dim.toUInteger();\n                 auto exps = new Expressions();\n                 exps.reserve(length);\n                 foreach (i; 0 .. length)\n-                    exps.push(new IndexExp(e.loc, e, new IntegerExp(e.loc, i, Type.tsize_t)));\n-                e = new TupleExp(e.loc, exps);\n+                    exps.push(new IndexExp(e.loc, ev, new IntegerExp(e.loc, i, Type.tsize_t)));\n+                e = new TupleExp(e.loc, e0, exps);\n             }\n         }\n         else"}, {"sha": "5be4a196345ee5c4a61a9803292b7abe9eb40adf", "filename": "gcc/d/dmd/utils.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Futils.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fdmd%2Futils.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Futils.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -84,7 +84,7 @@ extern (D) void writeFile(Loc loc, const(char)[] filename, const void[] data)\n     ensurePathToNameExists(Loc.initial, filename);\n     if (!File.update(filename, data))\n     {\n-        error(loc, \"Error writing file '%.*s'\", cast(int) filename.length, filename.ptr);\n+        error(loc, \"error writing file '%.*s'\", cast(int) filename.length, filename.ptr);\n         fatal();\n     }\n }"}, {"sha": "7f5e683a676d3142bd5ec32f799c8c9cd457228d", "filename": "gcc/d/expr.cc", "status": "modified", "additions": 3, "deletions": 46, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fexpr.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -847,53 +847,10 @@ class ExprVisitor : public Visitor\n       }\n     else\n       {\n+\t/* Appending an element or array to another array has already been\n+\t   handled by the front-end.  */\n \tgcc_assert (tb1->ty == TY::Tarray || tb2->ty == TY::Tsarray);\n-\n-\tif ((tb2->ty == TY::Tarray || tb2->ty == TY::Tsarray)\n-\t    && same_type_p (etype, tb2->nextOf ()->toBasetype ()))\n-\t  {\n-\t    /* Append an array to another array:\n-\t       The assignment is handled by the D run-time library, so only\n-\t       need to call `_d_arrayappendT(ti, &e1, e2)'  */\n-\t    result = build_libcall (LIBCALL_ARRAYAPPENDT, e->type, 3,\n-\t\t\t\t    build_typeinfo (e->loc, e->type),\n-\t\t\t\t    ptr, d_array_convert (e->e2));\n-\t  }\n-\telse if (same_type_p (etype, tb2))\n-\t  {\n-\t    /* Append an element to an array:\n-\t       The assignment is generated inline, so need to handle temporaries\n-\t       here, and ensure that they are evaluated in the correct order.\n-\n-\t       The generated code should end up being equivalent to:\n-\t\t    _d_arrayappendcTX(ti, &e1, 1)[e1.length - 1] = e2\n-\t     */\n-\t    tree callexp = build_libcall (LIBCALL_ARRAYAPPENDCTX, e->type, 3,\n-\t\t\t\t\t  build_typeinfo (e->loc, e->type),\n-\t\t\t\t\t  ptr, size_one_node);\n-\t    callexp = d_save_expr (callexp);\n-\n-\t    /* Assign e2 to last element.  */\n-\t    tree offexp = d_array_length (callexp);\n-\t    offexp = build2 (MINUS_EXPR, TREE_TYPE (offexp),\n-\t\t\t     offexp, size_one_node);\n-\n-\t    tree ptrexp = d_array_ptr (callexp);\n-\t    ptrexp = void_okay_p (ptrexp);\n-\t    ptrexp = build_array_index (ptrexp, offexp);\n-\n-\t    /* Evaluate expression before appending.  */\n-\t    tree rhs = build_expr (e->e2);\n-\t    tree rexpr = stabilize_expr (&rhs);\n-\n-\t    if (TREE_CODE (rhs) == CALL_EXPR)\n-\t      rhs = force_target_expr (rhs);\n-\n-\t    result = modify_expr (build_deref (ptrexp), rhs);\n-\t    result = compound_expr (rexpr, result);\n-\t  }\n-\telse\n-\t  gcc_unreachable ();\n+\tgcc_unreachable ();\n       }\n \n     /* Construct in order: ptr = &e1, _d_arrayappend(ptr, e2), *ptr;  */"}, {"sha": "c2635827ad3896c8142b1964d48ab27ad9529f1e", "filename": "gcc/d/lang.opt", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flang.opt?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -340,6 +340,10 @@ fpreview=all\n D RejectNegative\n Turn on all upcoming D language features.\n \n+fpreview=bitfields\n+D RejectNegative\n+Implement D bit-fields.\n+\n fpreview=dip1000\n D RejectNegative\n Implement DIP1000: Scoped pointers.\n@@ -412,10 +416,6 @@ frevert=intpromote\n D RejectNegative\n Use C-style integral promotion for unary '+', '-' and '~'.\n \n-frevert=markdown\n-D RejectNegative\n-Disable Markdown replacements in Ddoc.\n-\n frtti\n D\n ; Documented in C\n@@ -452,10 +452,6 @@ ftransition=tls\n D RejectNegative\n List all variables going into thread local storage.\n \n-ftransition=vmarkdown\n-D RejectNegative\n-List instances of Markdown replacements in Ddoc.\n-\n funittest\n D\n Compile in unittest code."}, {"sha": "c54049dfb984c815dd8efad8dd61f358db8efcd1", "filename": "gcc/d/types.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Fd%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftypes.cc?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -375,7 +375,7 @@ fixup_anonymous_offset (tree fields, tree offset)\n \n /* Iterate over all MEMBERS of an aggregate, and add them as fields to CONTEXT.\n    If INHERITED_P is true, then the members derive from a base class.\n-   Returns the number of fields found.  */\n+   Returns the number of named fields found.  */\n \n static size_t\n layout_aggregate_members (Dsymbols *members, tree context, bool inherited_p)\n@@ -418,7 +418,8 @@ layout_aggregate_members (Dsymbols *members, tree context, bool inherited_p)\n \t  /* Insert the field declaration at its given offset.  */\n \t  if (var->isField ())\n \t    {\n-\t      const char *ident = var->ident ? var->ident->toChars () : NULL;\n+\t      const char *ident = (var->ident && !var->ident->isAnonymous ())\n+\t\t? var->ident->toChars () : NULL;\n \t      tree field = create_field_decl (declaration_type (var), ident,\n \t\t\t\t\t      inherited_p, inherited_p);\n \t      apply_user_attributes (var, field);\n@@ -442,7 +443,10 @@ layout_aggregate_members (Dsymbols *members, tree context, bool inherited_p)\n \t\t  var->csym = field;\n \t\t}\n \n-\t      fields += 1;\n+\t      /* Only count the named fields in an aggregate.  */\n+\t      if (ident != NULL)\n+\t\tfields += 1;\n+\n \t      continue;\n \t    }\n \t}"}, {"sha": "7db9531e7565bc4b22c225dd25e37c2e27639a7c", "filename": "gcc/testsuite/gdc.test/compilable/aggr_alignment.d", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -24,8 +24,8 @@ class C2 // overall alignment: max(vtbl.alignof, monitor.alignof, 1, 2)\n \n enum payloadOffset = C2.bytes.offsetof;\n static assert(C2.int1.offsetof == payloadOffset + 8);\n-static assert(C2.alignof == size_t.sizeof);\n-static assert(__traits(classInstanceSize, C2) == payloadOffset + 12);\n+static assert(__traits(classInstanceAlignment, C2) == size_t.sizeof);\n+static assert(__traits(classInstanceSize, C2) == payloadOffset + 12); // no tail padding\n \n align(8) struct PaddedStruct\n {\n@@ -37,6 +37,15 @@ static assert(PaddedStruct.s1.offsetof == 2);\n static assert(PaddedStruct.alignof == 8);\n static assert(PaddedStruct.sizeof == 16);\n \n+class AlignedPayloadClass\n+{\n+    align(64) int field;\n+}\n+\n+static assert(AlignedPayloadClass.field.offsetof == 64); // vtbl, monitor, alignment padding\n+static assert(__traits(classInstanceAlignment, AlignedPayloadClass) == 64);\n+static assert(__traits(classInstanceSize, AlignedPayloadClass) == 68);\n+\n align(1) struct UglyStruct\n {\n     bool flag;"}, {"sha": "4678eb533864e2f7ade6dc00c8b50fb0a3b2cc81", "filename": "gcc/testsuite/gdc.test/compilable/compile1.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@\n // EXTRA_FILES: imports/a12506.d\n /* TEST_OUTPUT:\n ---\n-compilable/compile1.d(229): Deprecation: use of complex type `cdouble` is deprecated, use `std.complex.Complex!(double)` instead\n+compilable/compile1.d(230): Deprecation: use of complex type `cdouble` is deprecated, use `std.complex.Complex!(double)` instead\n ---\n */\n "}, {"sha": "fc74c944cad04a26bf4b677327c4005b14b013d9", "filename": "gcc/testsuite/gdc.test/compilable/cppmangle.d", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcppmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcppmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcppmangle.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1327,3 +1327,8 @@ extern (C++)\n             static assert(funccpp.mangleof == \"?funccpp@@YAHP6AXXZ@Z\");\n     }\n }\n+\n+/*****************************************/\n+\n+extern(C++) enum _LIBNAME = \"library\";\n+extern(C++) enum _DEBUG = _LIBNAME.length && 'd' == _LIBNAME[$-1];"}, {"sha": "e2883fdd095365eaf76a5815434bbb97781a1256", "filename": "gcc/testsuite/gdc.test/compilable/dbitfield.d", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdbitfield.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdbitfield.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdbitfield.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,88 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ */\n+\n+/***************************************************/\n+\n+class C\n+{\n+    uint a:3;\n+    uint b:1;\n+    ulong c:64;\n+\n+    int d:3;\n+    int e:1;\n+    long f:64;\n+\n+    int i;\n+}\n+\n+static assert(C.a.min == 0);\n+static assert(C.a.max == 7);\n+\n+static assert(C.b.min == 0);\n+static assert(C.b.max == 1);\n+\n+static assert(C.c.min == 0);\n+static assert(C.c.max == ulong.max);\n+\n+static assert(C.d.min == -4);\n+static assert(C.d.max == 3);\n+\n+static assert(C.e.min == -1);\n+static assert(C.e.max == 0);\n+\n+static assert(C.f.min == long.min);\n+static assert(C.f.max == long.max);\n+\n+int testc()\n+{\n+    scope c = new C();\n+    c.d = 9;\n+    return c.d;\n+}\n+\n+static assert(testc() == 1);\n+\n+/***************************************************/\n+\n+union U\n+{\n+    uint a:3;\n+    uint b:1;\n+    ulong c:64;\n+\n+    int d:3;\n+    int e:1;\n+    long f:64;\n+\n+    int i;\n+}\n+\n+static assert(U.sizeof == 8);\n+\n+static assert(U.a.min == 0);\n+static assert(U.a.max == 7);\n+\n+static assert(U.b.min == 0);\n+static assert(U.b.max == 1);\n+\n+static assert(U.c.min == 0);\n+static assert(U.c.max == ulong.max);\n+\n+static assert(U.d.min == -4);\n+static assert(U.d.max == 3);\n+\n+static assert(U.e.min == -1);\n+static assert(U.e.max == 0);\n+\n+static assert(U.f.min == long.min);\n+static assert(U.f.max == long.max);\n+\n+int testu()\n+{\n+    U u;\n+    u.d = 9;\n+    return u.d;\n+}\n+\n+static assert(testu() == 1);"}, {"sha": "1ff26b07499e18a79e23fa7fc7971c43091a688e", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_breaks_verbose.d", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_breaks_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_breaks_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_breaks_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,13 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -wi -o- -transition=vmarkdown\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_breaks_verbose.html\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_breaks_verbose.html\n-\n-/++\n-Thematic Breaks\n-\n-___\n-- - -\n-***\n-+/\n-module ddoc_markdown_breaks;"}, {"sha": "eb64c04363dc10866e0f6de89f93aa9c36dcb68b", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_code_verbose.d", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_code_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_code_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_code_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,13 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_code_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_code_verbose.html\n-\n-/++\n-Code:\n-\n-``` ruby red\n-RWBY\n-```\n-+/\n-module test.compilable.ddoc_markdown_code_verbose;"}, {"sha": "07904c1e42fb9a5768f2c3510cd738df0622635e", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_emphasis_verbose.d", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_emphasis_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_emphasis_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_emphasis_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,13 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -wi -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_emphasis_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_emphasis_verbose.html\n-\n-/++\n-Markdown Emphasis:\n-\n-*emphasized text*\n-\n-**strongly emphasized text**\n-+/\n-module ddoc_markdown_emphasis;"}, {"sha": "64484632b4eaee4e77f0471fbf20c7f2167300e7", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_headings_verbose.d", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_headings_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_headings_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_headings_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,9 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_headings_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_headings_verbose.html\n-\n-/++\n-# Heading\n-+/\n-module ddoc_markdown_headings_verbose;"}, {"sha": "435b426e03e36785d0e9a0765d071737c199dbd0", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_links_verbose.d", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_links_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_links_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_links_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,17 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_links_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_links_verbose.html\n-\n-/++\n-Links:\n-\n-A link to [Object].\n-An inline link to [the D homepage](https://dlang.org).\n-A simple link to [dub].\n-A slightly less simple link to [dub][].\n-An image: ![D-Man](https://dlang.org/images/d3.png)\n-\n-[dub]: https://code.dlang.org\n-+/\n-module test.compilable.ddoc_markdown_links_verbose;"}, {"sha": "4fd1a80c58bdcf0686575d7c57b7a06ca3753da4", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_lists_verbose.d", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_lists_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_lists_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_lists_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,9 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_lists_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_lists_verbose.html\n-\n-/++\n-- list item\n-+/\n-module ddoc_markdown_lists_verbose;"}, {"sha": "f16e5390ece67bab143b176587786dd2605b7d39", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_quote_verbose.d", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_quote_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_quote_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_quote_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,11 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_quote_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_quote_verbose.html\n-\n-/++\n-Quote Block:\n-\n-> Great, just what I need.. another D in programming. -- Segfault\n-+/\n-module test.compilable.ddoc_markdown_code_verbose;"}, {"sha": "d1aac1cedf894471b4a7e773ce8a367bc423cfb1", "filename": "gcc/testsuite/gdc.test/compilable/ddoc_markdown_tables_verbose.d", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_tables_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e587f1021241758f7dfe0b22651008622a312/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_tables_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc_markdown_tables_verbose.d?ref=682e587f1021241758f7dfe0b22651008622a312", "patch": "@@ -1,13 +0,0 @@\n-// PERMUTE_ARGS:\n-// REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o- -transition=vmarkdown\n-// TEST_OUTPUT_FILE: extra-files/ddoc_markdown_tables_verbose.html\n-// OUTPUT_FILES: ${RESULTS_DIR}/compilable/ddoc_markdown_tables_verbose.html\n-\n-/++\n-Table:\n-\n-| this | that |\n-| ---- | ---- |\n-| cell | cell |\n-+/\n-module test.compilable.ddoc_markdown_tables_verbose;"}, {"sha": "3e535d24a06cd261b25fd2e33e86452a793a1430", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_21217.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_21217.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_21217.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_21217.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "64198f91a217bf3f7a6ba11d17d0ff927ff3f762", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_AliasDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -10,9 +10,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "12edbd2392318eed2dc025834ff2b236aa035991", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_AliasDeclaration_98.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration_98.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration_98.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AliasDeclaration_98.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,9 +7,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "20134f5b44961a586dce943b1e993c1715c09cd7", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_AnonDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AnonDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AnonDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_AnonDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "870387c7113e61e1218a4b007e8c82358e47f0c2", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_CPPNamespaceDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_CPPNamespaceDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_CPPNamespaceDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_CPPNamespaceDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "de4c7ba4247d4bd50b13a41f4aa821d42e79407b", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_ClassDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ClassDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ClassDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ClassDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "8c7ba9be672857bcd0108fa77a9224aa93aa8652", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_StructDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_StructDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_StructDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_StructDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "35c4ed7e03f112696bf4e494846c1fb8f846de3c", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_TemplateDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_TemplateDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_TemplateDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_TemplateDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "48fcf72c0611db8f932f181dcd3bb5889a783749", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_UnionDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_UnionDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_UnionDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_UnionDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "1faa51e63fb28a6dc68b84bd5ed60f915976d918", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_VarDeclaration.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_VarDeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_VarDeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_VarDeclaration.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "cf1ae483772f4cacd58703dbc2a4196f39d96568", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_cpp98_compat.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_cpp98_compat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_cpp98_compat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_cpp98_compat.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -10,9 +10,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "8b3e5aa3873d3a98e78e820012b757b0822ba8eb", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_enum.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "6a266d9be77e0a38b9dc83edd1de087891223daa", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_enum_cpp98.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum_cpp98.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum_cpp98.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_enum_cpp98.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "b93c47e081374237ea4e6ee702a1f51c9c670cb9", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_expressions.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_expressions.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_expressions.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_expressions.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,9 +7,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "83ac67d6f32170d97f10970185799f02fae30020", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_extern_type.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_extern_type.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_extern_type.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_extern_type.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -9,9 +9,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "c9d5bbc796ebe6243b730264cce117e4f157832f", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_forwarding.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_forwarding.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_forwarding.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_forwarding.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "1feff408adcee0d84bb8b25560a3b61b86834547", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_functions.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_functions.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_functions.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_functions.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE\n@@ -79,6 +79,8 @@ extern size_t baz5(size_t x = 42);\n \n extern size_t& bazRef(size_t& x);\n \n+extern size_t bazOut(size_t& x);\n+\n enum class E : int64_t\n {\n     m = 1LL,\n@@ -219,6 +221,11 @@ extern (C++) ref size_t bazRef(return ref size_t x)\n     return x;\n }\n \n+extern (C++) size_t bazOut(out size_t x)\n+{\n+    return x;\n+}\n+\n extern (C++):\n \n enum E : long"}, {"sha": "d162a324b9a13cfb3e3993eeca775118fa8b1943", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_ignored.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ignored.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ignored.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_ignored.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "b8e8d05649cda8568029a653362d16b95ac392c0", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_invalid_identifiers.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_invalid_identifiers.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_invalid_identifiers.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_invalid_identifiers.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -17,9 +17,9 @@ compilable/dtoh_invalid_identifiers.d(145): Warning: function `__attribute__` is\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "10967c831374bded09cfafe70200c455dde05759", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_mangling.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_mangling.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_mangling.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_mangling.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,9 +7,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "a4b055e4097e6b7295f9813244f8e14796ca4db1", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_names.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_names.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_names.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_names.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "3fd54c7de7478e149b83e5cf86307d0f8c28921a", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_protection.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_protection.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_protection.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_protection.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -9,9 +9,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "ab5376424f9898ae8c6b1eef9c64f9d88fddcf4a", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_required_symbols.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_required_symbols.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_required_symbols.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_required_symbols.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,9 +7,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "37b450703a929b38c2ca174418878ace7ce4e56f", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_special_enum.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_special_enum.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_special_enum.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_special_enum.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "7b2943c5fc50c4935593b7dff2b00910dc97ccec", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_unittest_block.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_unittest_block.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_unittest_block.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_unittest_block.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,9 +8,9 @@ TEST_OUTPUT:\n #pragma once\n \n #include <assert.h>\n+#include <math.h>\n #include <stddef.h>\n #include <stdint.h>\n-#include <math.h>\n \n #ifdef CUSTOM_D_ARRAY_TYPE\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE"}, {"sha": "891ff0ebd4839bbb2f34ce66613dae2c19816c51", "filename": "gcc/testsuite/gdc.test/compilable/dtoh_verbose.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_verbose.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_verbose.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fdtoh_verbose.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -10,9 +10,9 @@ TEST_OUTPUT:\n #pragma once\r\n \r\n #include <assert.h>\r\n+#include <math.h>\r\n #include <stddef.h>\r\n #include <stdint.h>\r\n-#include <math.h>\r\n \r\n #ifdef CUSTOM_D_ARRAY_TYPE\r\n #define _d_dynamicArray CUSTOM_D_ARRAY_TYPE\r"}, {"sha": "3e00e9f0af6f1bb09cace12793df285cf2e91427", "filename": "gcc/testsuite/gdc.test/compilable/test17590.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17590.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17590.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17590.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,4 +1,4 @@\n-// REQUIRED_ARGS: -o-\n+// REQUIRED_ARGS: -o- -preview=dip1000\n \n void lazyfun(scope lazy int a) @nogc;\n "}, {"sha": "074ed1226fa94e58a03cfe2a3cc75f03fa04fc2a", "filename": "gcc/testsuite/gdc.test/compilable/test20427.d", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest20427.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest20427.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest20427.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,3 @@\n+// https://issues.dlang.org/show_bug.cgi?id=20427\n+extern(C++) void test20427(T)(T) {}\n+static assert(!__traits(compiles, { test20427([1, 2]); }));"}, {"sha": "e1ac3e76d9f160789550b4650e88dade7e10e343", "filename": "gcc/testsuite/gdc.test/compilable/test23047.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23047.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23047.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23047.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,13 @@\n+/* REQUIRED_ARGS: -defaultlib= -c -O\n+ */\n+\n+// https://issues.dlang.org/show_bug.cgi?id=23047\n+version(D_SIMD):\n+alias long2 = __vector(long[2]);\n+\n+long2 _mm_srl_epi64 ()\n+{\n+    long2 r = void;\n+    r[0] = 1;\n+    return r;\n+}"}, {"sha": "6927ddf04df52abd22d19da4a92d776b699a0ca3", "filename": "gcc/testsuite/gdc.test/compilable/test23087.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23087.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23087.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23087.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,9 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23087\n+struct S\n+{\n+    this(bool) {}\n+    this(bool, int) {}\n+}\n+\n+static foreach (ctor; __traits(getOverloads, S, \"__ctor\"))\n+    static assert(__traits(getLinkage, ctor) == \"D\");"}, {"sha": "1bc29138573179b6e5365067ef30f23ec8d252b2", "filename": "gcc/testsuite/gdc.test/compilable/test23089.d", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23089.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23089.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23089.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,7 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23089\n+extern(System) int i23089;\n+\n+extern(System):\n+\n+alias F23089 = void function(int);\n+F23089 f23089;"}, {"sha": "092bd774f228af3078a837fd6dea5b856f162e66", "filename": "gcc/testsuite/gdc.test/compilable/test23097.d", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23097.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23097.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23097.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,33 @@\n+/* https://issues.dlang.org/show_bug.cgi?id=23097\n+REQUIRED_ARGS: -verrors=spec\n+TEST_OUTPUT:\n+---\n+(spec:2) compilable/test23097.d(14): Error: `inout` constructor `test23097.S23097.this` creates const object, not mutable\n+(spec:2) compilable/test23097.d(14): Error: `inout` constructor `test23097.S23097.this` creates const object, not mutable\n+(spec:1) compilable/test23097.d(14): Error: generated function `test23097.S23097.opAssign(S23097 p)` is not callable using argument types `(const(S23097))`\n+(spec:2) compilable/test23097.d(14): Error: `inout` constructor `test23097.S23097.this` creates const object, not mutable\n+(spec:1) compilable/test23097.d(14):        `struct S23097` does not define a copy constructor for `const(S23097)` to `S23097` copies\n+---\n+*/\n+void emplaceRef(UT, Args)(UT chunk, Args args)\n+{\n+    static if (__traits(compiles, chunk = args))\n+        chunk = args;\n+}\n+\n+struct CpCtor23097(T)\n+{\n+    T* payload;\n+    this(ref inout typeof(this)) { }\n+    ref opAssign(typeof(this)) { }\n+}\n+\n+struct S23097\n+{\n+    CpCtor23097!int payload;\n+}\n+\n+void test23097(S23097 lhs, const S23097 rhs)\n+{\n+    emplaceRef(lhs, rhs);\n+}"}, {"sha": "8595e37edf0057ea9f6618fc78bfb5510d64be57", "filename": "gcc/testsuite/gdc.test/compilable/test23105.d", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23105.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23105.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest23105.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,6 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23105\n+\n+module test23105;\n+\n+static assert(is(mixin(`__traits(getMember, test23105, \"object\")`) == module));\n+static assert(is(__traits(getMember, test23105, \"object\") == module)); // Fixed"}, {"sha": "9912b88e5ff04d226116f7093679049125af7c59", "filename": "gcc/testsuite/gdc.test/compilable/test3004.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest3004.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest3004.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest3004.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,13 +1,15 @@\n // https://issues.dlang.org/show_bug.cgi?id=3004\n /*\n REQUIRED_ARGS: -ignore -v\n-TRANSFORM_OUTPUT: remove_lines(\"^(predefs|binary|version|config|DFLAG|parse|import|semantic|entry|function  object|\\s*$)\")\n+TRANSFORM_OUTPUT: remove_lines(\"^(predefs|binary|version|config|DFLAG|parse|import|semantic|entry|library|function  object|\\s*$)\")\n TEST_OUTPUT:\n ---\n pragma    GNU_attribute (__error)\n pragma    GNU_attribute (__error)\n code      test3004\n function  test3004.test\n+function  core.internal.array.appending._d_arrayappendcTXImpl!(char[], char)._d_arrayappendcTX\n+function  core.internal.array.utils._d_HookTraceImpl!(char[], _d_arrayappendcTX, \"Cannot append to array if compiling without support for runtime type information!\")._d_HookTraceImpl\n ---\n */\n "}, {"sha": "cbb150cb1d5a4113080489acc057276c5a13ffb0", "filename": "gcc/testsuite/gdc.test/compilable/vcg-ast.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fvcg-ast.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fvcg-ast.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fvcg-ast.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -52,8 +52,7 @@ alias wchar_t = __c_wchar_t;\n \n T[] values(T)()\n {\n-    T[] values;\n-    values ~= T();\n+    T[] values = [T()];\n     return values;\n }\n "}, {"sha": "1fdf5a5a722679ce3c7d271705ac3e3f278ed1ca", "filename": "gcc/testsuite/gdc.test/fail_compilation/attributediagnostic.d", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fattributediagnostic.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fattributediagnostic.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fattributediagnostic.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,23 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/attributediagnostic.d(16): Error: `@safe` function `attributediagnostic.layer2` cannot call `@system` function `attributediagnostic.layer1`\n+fail_compilation/attributediagnostic.d(18):        which calls `attributediagnostic.layer0`\n+fail_compilation/attributediagnostic.d(20):        which calls `attributediagnostic.system`\n+fail_compilation/attributediagnostic.d(22):        which was inferred `@system` because of:\n+fail_compilation/attributediagnostic.d(22):        `asm` statement is assumed to be `@system` - mark it with `@trusted` if it is not\n+fail_compilation/attributediagnostic.d(17):        `attributediagnostic.layer1` is declared here\n+---\n+*/\n+\n+// Issue 17374 - Improve inferred attribute error message\n+// https://issues.dlang.org/show_bug.cgi?id=17374\n+\n+auto layer2() @safe { layer1(); }\n+auto layer1() { layer0(); }\n+auto layer0() { system(); }\n+\n+auto system()\n+{\n+\tasm {}\n+}"}, {"sha": "c975a436e6dbbfd0e8596ab425b54ab2d850923e", "filename": "gcc/testsuite/gdc.test/fail_compilation/b6227.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fb6227.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fb6227.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fb6227.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,8 +1,8 @@\n /* TEST_OUTPUT:\n ---\n-fail_compilation/b6227.d(16): Error: Comparison between different enumeration types `X` and `Y`; If this behavior is intended consider using `std.conv.asOriginalType`\n+fail_compilation/b6227.d(16): Error: comparison between different enumeration types `X` and `Y`; If this behavior is intended consider using `std.conv.asOriginalType`\n fail_compilation/b6227.d(16):        while evaluating: `static assert(!(X.O != Y.U))`\n-fail_compilation/b6227.d(17): Error: Comparison between different enumeration types `X` and `Y`; If this behavior is intended consider using `std.conv.asOriginalType`\n+fail_compilation/b6227.d(17): Error: comparison between different enumeration types `X` and `Y`; If this behavior is intended consider using `std.conv.asOriginalType`\n fail_compilation/b6227.d(17):        while evaluating: `static assert(X.O == Y.U)`\n ---\n */"}, {"sha": "6f4fb036b7f076d5629844a9b16ad9ecd0b45ff7", "filename": "gcc/testsuite/gdc.test/fail_compilation/betterc.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbetterc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbetterc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbetterc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,8 +1,8 @@\n /* REQUIRED_ARGS: -betterC\n  * TEST_OUTPUT:\n ---\n-fail_compilation/betterc.d(12): Error: Cannot use `throw` statements with -betterC\n-fail_compilation/betterc.d(17): Error: Cannot use try-catch statements with -betterC\n+fail_compilation/betterc.d(12): Error: cannot use `throw` statements with -betterC\n+fail_compilation/betterc.d(17): Error: cannot use try-catch statements with -betterC\n fail_compilation/betterc.d(29): Error: `TypeInfo` cannot be used with -betterC\n ---\n */"}, {"sha": "a8f0faa073926a41b8fa43b8c275926e998969d6", "filename": "gcc/testsuite/gdc.test/fail_compilation/biterrors.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,15 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n+---\n+fail_compilation/biterrors.d(103): Error: initializer not allowed for bit-field declaration\n+fail_compilation/biterrors.d(104): Error: storage class not allowed for bit-field declaration\n+---\n+ */\n+\n+#line 100\n+\n+struct S\n+{\n+    int i : 3 = 7;\n+    static int j : 3;\n+}"}, {"sha": "c8390ba7dc30d09ffe44fa2e27c361ffa3a46967", "filename": "gcc/testsuite/gdc.test/fail_compilation/biterrors2.d", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors2.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,17 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n+---\n+fail_compilation/biterrors2.d(100): Error: variable `biterrors2.a` bit-field must be member of struct, union, or class\n+fail_compilation/biterrors2.d(104): Error: bit-field `b` has zero width\n+fail_compilation/biterrors2.d(105): Error: bit-field type `float` is not an integer type\n+---\n+*/\n+\n+#line 100\n+int a : 2;\n+\n+struct S\n+{\n+    int b:0;\n+    float c:3;\n+}"}, {"sha": "f9e1df2b7b2f9b3ab32e750256d024e7aed714a7", "filename": "gcc/testsuite/gdc.test/fail_compilation/biterrors3.d", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors3.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,18 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n+---\n+fail_compilation/biterrors3.d(103): Error: storage class not allowed for bit-field declaration\n+fail_compilation/biterrors3.d(106): Error: `d` is not a valid attribute for enum members\n+fail_compilation/biterrors3.d(106): Error: `:` is not a valid attribute for enum members\n+fail_compilation/biterrors3.d(106): Error: `3` is not a valid attribute for enum members\n+---\n+*/\n+\n+#line 100\n+\n+struct S\n+{\n+    static int : 3;\n+}\n+\n+enum E { d : 3 }"}, {"sha": "0f2ca2d0d3fccffc9c330b8b958abcbc3bb0b6c0", "filename": "gcc/testsuite/gdc.test/fail_compilation/biterrors4.d", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbiterrors4.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,19 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n+---\n+fail_compilation/biterrors4.d(109): Error: cannot take address of bit-field `a`\n+---\n+*/\n+\n+#line 100\n+\n+struct S\n+{\n+    int a:3;\n+}\n+\n+void test()\n+{\n+    S s;\n+    int* p = &s.a;\n+}"}, {"sha": "3874fb18ef1027210c2c52454539b6108ee5f04b", "filename": "gcc/testsuite/gdc.test/fail_compilation/commaexp.d", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcommaexp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcommaexp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcommaexp.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,16 +1,16 @@\n /* REQUIRED_ARGS: -o-\n TEST_OUTPUT:\n ---\n-fail_compilation/commaexp.d(27): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(39): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(40): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(41): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(42): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(44): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(45): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(56): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(69): Error: Using the result of a comma expression is not allowed\n-fail_compilation/commaexp.d(81): Error: Using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(27): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(39): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(40): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(41): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(42): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(44): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(45): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(56): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(69): Error: using the result of a comma expression is not allowed\n+fail_compilation/commaexp.d(81): Error: using the result of a comma expression is not allowed\n ---\n */\n "}, {"sha": "885a55547c9bd3ca3fed34f81984fabc7abbe02f", "filename": "gcc/testsuite/gdc.test/fail_compilation/cppvar.d", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcppvar.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcppvar.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcppvar.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,22 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/cppvar.d(10): Error: variable `cppvar.funcLiteral` cannot have `extern(C++)` linkage because it is `static`\n+fail_compilation/cppvar.d(10):        perhaps declare it as `__gshared` instead\n+fail_compilation/cppvar.d(20): Error: variable `cppvar.threadLocalVar` cannot have `extern(C++)` linkage because it is `static`\n+fail_compilation/cppvar.d(20):        perhaps declare it as `__gshared` instead\n+fail_compilation/cppvar.d(21): Error: variable `cppvar.staticVar` cannot have `extern(C++)` linkage because it is `static`\n+fail_compilation/cppvar.d(21):        perhaps declare it as `__gshared` instead\n+fail_compilation/cppvar.d(22): Error: variable `cppvar.sharedVar` cannot have `extern(C++)` linkage because it is `shared`\n+fail_compilation/cppvar.d(22):        perhaps declare it as `__gshared` instead\n+fail_compilation/cppvar.d(30): Error: delegate `cppvar.__lambda7` cannot return type `bool[3]` because its linkage is `extern(C++)`\n+---\n+*/\n+#line 10\n+extern(C++) bool[3] funcLiteral = () { bool[3] a; return a; };\n+#line 20\n+extern(C++) int threadLocalVar;\n+extern(C++) static int staticVar;\n+extern(C++) shared int sharedVar;\n+#line 30\n+extern(C++) __gshared bool[3] gfuncLiteral = () { bool[3] a; return a; };"}, {"sha": "0dd1a0bf96e78819087ac0db07862b87aa08123a", "filename": "gcc/testsuite/gdc.test/fail_compilation/dbitfields.d", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdbitfields.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdbitfields.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdbitfields.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,32 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n+---\n+fail_compilation/dbitfields.d(118): Error: reinterpretation through overlapped field `e` is not allowed in CTFE\n+fail_compilation/dbitfields.d(121):        called from here: `testu()`\n+fail_compilation/dbitfields.d(121):        while evaluating: `static assert(testu() == 1)`\n+---\n+ */\n+\n+#line 100\n+\n+union U\n+{\n+    uint a:3;\n+    uint b:1;\n+    ulong c:64;\n+\n+    int d:3;\n+    int e:1;\n+    long f:64;\n+\n+    int i;\n+}\n+\n+int testu()\n+{\n+    U u;\n+    u.d = 9;\n+    return u.e;\n+}\n+\n+static assert(testu() == 1);"}, {"sha": "932aa5c5769d7200a8aecc0b5b7e0acc71173ac6", "filename": "gcc/testsuite/gdc.test/fail_compilation/diag10805.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10805.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10805.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10805.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@ TEST_OUTPUT:\n ---\n fail_compilation/diag10805.d(12): Error: delimited string must end in `FOO\"`\n fail_compilation/diag10805.d(14): Error: unterminated string constant starting at fail_compilation/diag10805.d(14)\n-fail_compilation/diag10805.d(14): Error: Implicit string concatenation is error-prone and disallowed in D\n+fail_compilation/diag10805.d(14): Error: implicit string concatenation is error-prone and disallowed in D\n fail_compilation/diag10805.d(14):        Use the explicit syntax instead (concatenating literals is `@nogc`): \"\" ~ \"\"\n fail_compilation/diag10805.d(15): Error: semicolon expected following auto declaration, not `End of File`\n ---"}, {"sha": "3e154979e8ce3d9e6a4b81cfe013bc62d2e10b8c", "filename": "gcc/testsuite/gdc.test/fail_compilation/diag10862.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10862.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10862.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10862.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -24,7 +24,7 @@ fail_compilation/diag10862.d(74): Error: assignment cannot be used as a conditio\n fail_compilation/diag10862.d-mixin-77(77): Error: assignment cannot be used as a condition, perhaps `==` was meant?\n fail_compilation/diag10862.d-mixin-78(78): Error: assignment cannot be used as a condition, perhaps `==` was meant?\n fail_compilation/diag10862.d-mixin-79(79): Error: assignment cannot be used as a condition, perhaps `==` was meant?\n-fail_compilation/diag10862.d-mixin-80(80): Error: Using the result of a comma expression is not allowed\n+fail_compilation/diag10862.d-mixin-80(80): Error: using the result of a comma expression is not allowed\n fail_compilation/diag10862.d-mixin-80(80): Error: assignment cannot be used as a condition, perhaps `==` was meant?\n fail_compilation/diag10862.d-mixin-83(83): Error: `a + b` is not an lvalue and cannot be modified\n fail_compilation/diag10862.d-mixin-84(84): Error: undefined identifier `c`"}, {"sha": "41bfe49e4845f297a1cab7dcb7f5e73064c0df87", "filename": "gcc/testsuite/gdc.test/fail_compilation/dip25.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdip25.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdip25.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdip25.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -12,15 +12,15 @@ fail_compilation/dip25.d(23):        perhaps annotate the parameter with `return\n struct Data\n {\n     char[256] buffer;\n-    @property const(char)[] filename() const pure nothrow\n+    @property const(char)[] filename() const pure nothrow @safe\n     {\n         return buffer[];\n     }\n }\n \n-ref int identity(return ref int x) { return x; }\n+ref int identity(return ref int x) @safe { return x; }\n ref int fun(return int x) { return identity(x); }\n-ref int fun2(ref int x) { return identity(x); }\n+ref int fun2(ref int x) @safe { return identity(x); }\n \n void main()\n {"}, {"sha": "ce81d6bfd3552e2d77fb89edc1122266f856739a", "filename": "gcc/testsuite/gdc.test/fail_compilation/dtor_attributes.d", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtor_attributes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtor_attributes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtor_attributes.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,6 +8,8 @@ fail_compilation/dtor_attributes.d(113):        generated `Strict.~this` is impu\n fail_compilation/dtor_attributes.d(111):         - HasDtor member\n fail_compilation/dtor_attributes.d(103):           impure `HasDtor.~this` is declared here\n fail_compilation/dtor_attributes.d(118): Error: `@safe` function `dtor_attributes.test1` cannot call `@system` destructor `dtor_attributes.Strict.~this`\n+fail_compilation/dtor_attributes.d(113):        which calls `dtor_attributes.Strict.~this`\n+fail_compilation/dtor_attributes.d(103):        which calls `dtor_attributes.HasDtor.~this`\n fail_compilation/dtor_attributes.d(113):        `dtor_attributes.Strict.~this` is declared here\n fail_compilation/dtor_attributes.d(113):        generated `Strict.~this` is @system because of the following field's destructors:\n fail_compilation/dtor_attributes.d(111):         - HasDtor member"}, {"sha": "45b23cece4dab384ceef2b7bc352117869022ff4", "filename": "gcc/testsuite/gdc.test/fail_compilation/dtorfields_attributes.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtorfields_attributes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtorfields_attributes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdtorfields_attributes.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -9,6 +9,7 @@ fail_compilation/dtorfields_attributes.d(119):        generated `Strict.~this` i\n fail_compilation/dtorfields_attributes.d(115):         - HasDtor member\n fail_compilation/dtorfields_attributes.d(103):           impure `HasDtor.~this` is declared here\n fail_compilation/dtorfields_attributes.d(117): Error: `@safe` constructor `dtorfields_attributes.Strict.this` cannot call `@system` destructor `dtorfields_attributes.Strict.~this`\n+fail_compilation/dtorfields_attributes.d(103):        which calls `dtorfields_attributes.HasDtor.~this`\n fail_compilation/dtorfields_attributes.d(119):        `dtorfields_attributes.Strict.~this` is declared here\n fail_compilation/dtorfields_attributes.d(119):        generated `Strict.~this` is @system because of the following field's destructors:\n fail_compilation/dtorfields_attributes.d(115):         - HasDtor member"}, {"sha": "1dfcf449771b711eeba517cf21c9019247b5c20a", "filename": "gcc/testsuite/gdc.test/fail_compilation/e7804_1.d", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fe7804_1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fe7804_1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fe7804_1.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,11 +1,18 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/e7804_1.d(10): Error: trait `farfelu` is either invalid or not supported as type\n-fail_compilation/e7804_1.d(11): Error: trait `farfelu` is either invalid or not supported in alias\n+fail_compilation/e7804_1.d(14): Error: undefined identifier `Aggr`\n+fail_compilation/e7804_1.d(15): Error: unrecognized trait `farfelu`\n+fail_compilation/e7804_1.d(17): Error: undefined identifier `Aggr`\n+fail_compilation/e7804_1.d(18): Error: unrecognized trait `farfelu`\n ---\n */\n module e7804_1;\n \n+struct S {}\n+\n __traits(farfelu, Aggr, \"member\") a;\n+__traits(farfelu, S, \"member\") a2;\n+\n alias foo = __traits(farfelu, Aggr, \"member\");\n+alias foo2 = __traits(farfelu, S, \"member\");"}, {"sha": "747b6e9cc4d44165ac878bb7bca9bc880fd41f27", "filename": "gcc/testsuite/gdc.test/fail_compilation/extra-files/test23109/object.d", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fextra-files%2Ftest23109%2Fobject.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fextra-files%2Ftest23109%2Fobject.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fextra-files%2Ftest23109%2Fobject.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,17 @@\n+module object;\n+\n+alias size_t = typeof(int.sizeof);\n+class Object {}\n+auto opEquals(Object ) { return true; }\n+class TypeInfo {}\n+class TypeInfo_Const {}\n+bool _xopEquals() { return true; }\n+\n+bool __equals(T1, T2)(T1[] lhs, T2[] rhs)\n+{\n+    static at(R)(R[] r, size_t i) { return r.ptr[i]; }\n+    foreach (u; 0 .. lhs.length)\n+        if (at(lhs, u) != at(rhs, u))\n+            return false;\n+    return true;\n+}"}, {"sha": "7caae59d05203d37932f16b4f45710611699cce0", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail109.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail109.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail109.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail109.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -34,7 +34,7 @@ enum E1 : short\n /* https://issues.dlang.org/show_bug.cgi?id=14950\n TEST_OUTPUT:\n ---\n-fail_compilation/fail109.d(50): Error: Comparison between different enumeration types `B` and `C`; If this behavior is intended consider using `std.conv.asOriginalType`\n+fail_compilation/fail109.d(50): Error: comparison between different enumeration types `B` and `C`; If this behavior is intended consider using `std.conv.asOriginalType`\n fail_compilation/fail109.d(50): Error: enum member `fail109.B.end` initialization with `B.start+1` causes overflow for type `C`\n ---\n */"}, {"sha": "bed87351bc5e1bced28ab618151fffc22b3cac1e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail12604.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12604.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12604.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12604.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -66,8 +66,8 @@ void test12606b()   // ExpInitializer::semantic\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail12604.d(77): Error: mismatched array lengths, 4 and 3\n-fail_compilation/fail12604.d(78): Error: mismatched array lengths, 4 and 3\n+fail_compilation/fail12604.d(77): Error: mismatched array lengths 4 and 3 for assignment `sa1[0..4] = [1, 2, 3]`\n+fail_compilation/fail12604.d(78): Error: mismatched array lengths 4 and 3 for assignment `sa1[0..4] = sa2`\n ---\n */\n void testc()"}, {"sha": "47cb65cde24fc8dee64f1ffc7568c0b67ad9c009", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail13902.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail13902.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail13902.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail13902.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -8,11 +8,11 @@ class C { int v; }\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail13902.d(45): Error: Using the result of a comma expression is not allowed\n+fail_compilation/fail13902.d(45): Error: using the result of a comma expression is not allowed\n fail_compilation/fail13902.d(32): Error: returning `& x` escapes a reference to local variable `x`\n fail_compilation/fail13902.d(33): Error: returning `&s1.v` escapes a reference to local variable `s1`\n fail_compilation/fail13902.d(38): Error: returning `& sa1` escapes a reference to local variable `sa1`\n-fail_compilation/fail13902.d(39): Error: returning `&sa2[0][0]` escapes a reference to local variable `sa2`\n+fail_compilation/fail13902.d(39): Error: returning `& sa2` escapes a reference to local variable `sa2`\n fail_compilation/fail13902.d(40): Error: returning `& x` escapes a reference to local variable `x`\n fail_compilation/fail13902.d(41): Error: returning `(& x+4)` escapes a reference to local variable `x`\n fail_compilation/fail13902.d(42): Error: returning `& x + cast(long)x * 4L` escapes a reference to local variable `x`\n@@ -53,11 +53,11 @@ int* testEscape1()\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail13902.d(88): Error: Using the result of a comma expression is not allowed\n+fail_compilation/fail13902.d(88): Error: using the result of a comma expression is not allowed\n fail_compilation/fail13902.d(75): Error: returning `& x` escapes a reference to parameter `x`\n fail_compilation/fail13902.d(76): Error: returning `&s1.v` escapes a reference to parameter `s1`\n fail_compilation/fail13902.d(81): Error: returning `& sa1` escapes a reference to parameter `sa1`\n-fail_compilation/fail13902.d(82): Error: returning `&sa2[0][0]` escapes a reference to parameter `sa2`\n+fail_compilation/fail13902.d(82): Error: returning `& sa2` escapes a reference to parameter `sa2`\n fail_compilation/fail13902.d(83): Error: returning `& x` escapes a reference to parameter `x`\n fail_compilation/fail13902.d(84): Error: returning `(& x+4)` escapes a reference to parameter `x`\n fail_compilation/fail13902.d(85): Error: returning `& x + cast(long)x * 4L` escapes a reference to parameter `x`\n@@ -98,7 +98,7 @@ int* testEscape2(\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail13902.d(123): Error: Using the result of a comma expression is not allowed\n+fail_compilation/fail13902.d(123): Error: using the result of a comma expression is not allowed\n ---\n */\n int* testEscape3("}, {"sha": "9d0b96f81d9b949ab931905c630ab455d8569ac0", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail16001.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16001.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16001.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16001.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,7 +2,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail16001.d(10): Deprecation: Using `(args) => { ... }` to create a delegate that returns a delegate is error-prone.\n+fail_compilation/fail16001.d(10): Deprecation: using `(args) => { ... }` to create a delegate that returns a delegate is error-prone.\n fail_compilation/fail16001.d(10):        Use `(args) { ... }` for a multi-statement function literal or use `(args) => () { }` if you intended for the lambda to return a delegate.\n ---\n */"}, {"sha": "7f6672428bf6fe2b2f0228c21b54c147e3dbe578", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail16575.d", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16575.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16575.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16575.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,65 @@\n+// https://issues.dlang.org/show_bug.cgi?id=16575\n+/*\n+REQUIRED_ARGS: -m64\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail16575.d(10): Error: function `fail16575.immNull` cannot have parameter of type `immutable(typeof(null))*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(11): Error: function `fail16575.shaNull` cannot have parameter of type `shared(typeof(null))*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(20): Error: function `fail16575.immNoReturn` cannot have parameter of type `immutable(noreturn)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(21): Error: function `fail16575.shaNoReturn` cannot have parameter of type `shared(noreturn)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(30): Error: function `fail16575.immBasic` cannot have parameter of type `immutable(int)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(31): Error: function `fail16575.shaBasic` cannot have parameter of type `shared(int)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(40): Error: function `fail16575.immVector` cannot have parameter of type `immutable(__vector(long[2]))*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(41): Error: function `fail16575.shaVector` cannot have parameter of type `shared(__vector(long[2]))*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(50): Error: function `fail16575.immSArray` cannot have parameter of type `immutable(long[2])` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(50):        perhaps use a `long*` type instead\n+fail_compilation/fail16575.d(51): Error: function `fail16575.shaSArray` cannot have parameter of type `shared(long[2])` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(51):        perhaps use a `long*` type instead\n+fail_compilation/fail16575.d(60): Error: function `fail16575.immPointer` cannot have parameter of type `immutable(int*)` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(61): Error: function `fail16575.shaPointer` cannot have parameter of type `shared(int*)` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(71): Error: function `fail16575.immStruct` cannot have parameter of type `immutable(SPP)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(72): Error: function `fail16575.shaStruct` cannot have parameter of type `shared(SPP)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(81): Error: function `fail16575.immClass` cannot have parameter of type `immutable(CPP)` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(82): Error: function `fail16575.shaClass` cannot have parameter of type `shared(CPP)` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(91): Error: function `fail16575.immEnum` cannot have parameter of type `immutable(EPP)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(92): Error: function `fail16575.shaEnum` cannot have parameter of type `shared(EPP)*` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(100): Error: function `fail16575.typeDArray` cannot have parameter of type `int[]` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(101): Error: function `fail16575.typeAArray` cannot have parameter of type `int[int]` because its linkage is `extern(C++)`\n+fail_compilation/fail16575.d(102): Error: function `fail16575.typeDelegate` cannot have parameter of type `extern (C++) int delegate()` because its linkage is `extern(C++)`\n+---\n+*/\n+\n+#line 10\n+extern(C++) void immNull(immutable(typeof(null))* a) {}\n+extern(C++) void shaNull(shared(typeof(null))* a) {}\n+#line 20\n+extern(C++) void immNoReturn(immutable(typeof(*null))* a) {}\n+extern(C++) void shaNoReturn(shared(typeof(*null))* a) {}\n+#line 30\n+extern(C++) void immBasic(immutable(int)* a) {}\n+extern(C++) void shaBasic(shared(int)* a) {}\n+#line 40\n+extern(C++) void immVector(immutable(__vector(long[2]))* a) {}\n+extern(C++) void shaVector(shared(__vector(long[2]))* a) {}\n+#line 50\n+extern(C++) void immSArray(immutable(long[2]) a) {}\n+extern(C++) void shaSArray(shared(long[2]) a) {}\n+#line 60\n+extern(C++) void immPointer(immutable(int*) a) {}\n+extern(C++) void shaPointer(shared(int*) a) {}\n+#line 70\n+extern(C++) struct SPP {}\n+extern(C++) void immStruct(immutable(SPP)* a) {}\n+extern(C++) void shaStruct(shared(SPP)* a) {}\n+#line 80\n+extern(C++) class CPP {}\n+extern(C++) void immClass(immutable CPP a) {}\n+extern(C++) void shaClass(shared CPP a) {}\n+#line 90\n+extern(C++) enum EPP {a}\n+extern(C++) void immEnum(immutable(EPP)* a) {}\n+extern(C++) void shaEnum(shared(EPP)* a) {}\n+# line 100\n+extern(C++) void typeDArray(int[] a) {}\n+extern(C++) void typeAArray(int[int] a) {}\n+extern(C++) void typeDelegate(int delegate() a) {}"}, {"sha": "e77951d3302c003aec90f8faddab3a89647bb3f6", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail16772.d", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16772.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16772.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16772.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,7 @@\n+// https://issues.dlang.org/show_bug.cgi?id=16772\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail16772.d(7): Error: function `fail16772.ice16772` cannot return type `ubyte[]` because its linkage is `extern(C++)`\n+---\n+*/\n+extern(C++) ubyte[] ice16772() { return []; }"}, {"sha": "2c7d93fe4e064105d9bcab92a282bd35ccfe9753", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail196.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,7 +2,7 @@\n TEST_OUTPUT:\n ---\n fail_compilation/fail196.d(27): Error: delimited string must end in `)\"`\n-fail_compilation/fail196.d(27): Error: Implicit string concatenation is error-prone and disallowed in D\n+fail_compilation/fail196.d(27): Error: implicit string concatenation is error-prone and disallowed in D\n fail_compilation/fail196.d(27):        Use the explicit syntax instead (concatenating literals is `@nogc`): \"foo(xxx)\" ~ \";\\n    assert(s == \"\n fail_compilation/fail196.d(28): Error: semicolon needed to end declaration of `s`, instead of `foo`\n fail_compilation/fail196.d(27):        `s` declared here"}, {"sha": "cdb65ae0c8010c9bf18c8d6899dfda711ac8a1aa", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19759.d", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19759.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19759.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19759.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,8 @@\n+// https://issues.dlang.org/show_bug.cgi?id=19759\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail19759.d(8): Error: function `fail19759.fail19759` cannot have parameter of type `float[4]` because its linkage is `extern(C++)`\n+fail_compilation/fail19759.d(8):        perhaps use a `float*` type instead\n+---\n+*/\n+extern(C++) bool fail19759(float[4] col);"}, {"sha": "62f3dc4310015e5a9dbaf0b5fcfa239cc4639843", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19881.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19881.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19881.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19881.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,8 @@\n /* REQUIRED_ARGS: -preview=dip1000\n  * TEST_OUTPUT:\n ---\n-fail_compilation/fail19881.d(12): Error: address of local variable `local` assigned to return scope `input`\n+fail_compilation/fail19881.d(13): Error: address of local variable `local` assigned to return scope `input`\n+fail_compilation/fail19881.d(13): Error: address of variable `local` assigned to `input` with longer lifetime\n ---\n  */\n "}, {"sha": "54e36fcfb7cdadc2dd04c7a03978126d08243277", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail20691.d", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail20691.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail20691.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail20691.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,12 +1,9 @@\n /* REQUIRED_ARGS: -preview=dip1000\n TEST_OUTPUT:\n ---\n-fail_compilation/fail20691.d(106): Error: cannot take address of `scope` local `sa` in `@safe` function `bar`\n-fail_compilation/fail20691.d(106): Error: cannot cast expression `sa` of type `char[][2]` to `char[][]`\n-fail_compilation/fail20691.d(107): Error: cannot take address of `scope` local `sa` in `@safe` function `bar`\n-fail_compilation/fail20691.d(107): Error: cannot cast expression `sa` of type `char[][2]` to `char[][]`\n-fail_compilation/fail20691.d(108): Error: cannot take address of `scope` local `sa` in `@safe` function `bar`\n-fail_compilation/fail20691.d(108): Error: cannot cast expression `sa` of type `char[][2]` to `char[][]`\n+fail_compilation/fail20691.d(106): Error: cannot take address of `scope` variable `sa` since `scope` applies to first indirection only\n+fail_compilation/fail20691.d(107): Error: cannot take address of `scope` variable `sa` since `scope` applies to first indirection only\n+fail_compilation/fail20691.d(108): Error: cannot take address of `scope` variable `sa` since `scope` applies to first indirection only\n ---\n */\n "}, {"sha": "d12b387a58711291425d1979e9251fa24dca0570", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail21092.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21092.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21092.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21092.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,10 +3,10 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail21092.d(19): Error: Using the result of a comma expression is not allowed\n+fail_compilation/fail21092.d(19): Error: using the result of a comma expression is not allowed\n fail_compilation/fail21092.d(19): Error: using `*` on an array is no longer supported; use `*(T , U).ptr` instead\n fail_compilation/fail21092.d(19): Error: `*(T , cast(real*)U)` has no effect\n-fail_compilation/fail21092.d(26): Error: Using the result of a comma expression is not allowed\n+fail_compilation/fail21092.d(26): Error: using the result of a comma expression is not allowed\n fail_compilation/fail21092.d(26): Error: using `*` on an array is no longer supported; use `*(w , SmallStirlingCoeffs).ptr` instead\n fail_compilation/fail21092.d(26): Error: `*(w , cast(real*)SmallStirlingCoeffs)` has no effect\n ---"}, {"sha": "c3d648e5d75825e30703e90519cfa52fcb5f0e25", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail21206.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21206.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21206.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21206.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,13 @@\n+// https://issues.dlang.org/show_bug.cgi?id=21206\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail21206.d(9): Error: function `fail21206.Obj.toString` cannot return type `string` because its linkage is `extern(C++)`\n+---\n+*/\n+extern(C++) struct Obj\n+{\n+    string toString()\n+    {\n+        return \"ret\";\n+    }\n+}"}, {"sha": "69cdf1ada9afe0060ddece30b9ea908aa61cab39", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail21275.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21275.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21275.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21275.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -5,8 +5,8 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail21275.d(18): Deprecation: Function `imports.fail21275a.Foo.x` of type `ref int() return` is not accessible from module `fail21275`\n-fail_compilation/fail21275.d(21): Deprecation: Function `imports.fail21275a.Bar.x` of type `int(int)` is not accessible from module `fail21275`\n+fail_compilation/fail21275.d(18): Deprecation: function `imports.fail21275a.Foo.x` of type `ref int() return` is not accessible from module `fail21275`\n+fail_compilation/fail21275.d(21): Deprecation: function `imports.fail21275a.Bar.x` of type `int(int)` is not accessible from module `fail21275`\n ---\n */\n "}, {"sha": "78e52ce2281141a949b440f83543fd2918459f1c", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail21314.d", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21314.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21314.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21314.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,11 @@\n+// https://issues.dlang.org/show_bug.cgi?id=21314\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail21314.d(10): Error: variable `fail21314.C21314.c21314` cannot have `extern(C++)` linkage because it is `static`\n+fail_compilation/fail21314.d(10):        perhaps declare it as `__gshared` instead\n+---\n+*/\n+extern(C++) class C21314\n+{\n+    static C21314[] c21314;\n+}"}, {"sha": "0df31d7de3f3ad796bfaa1e35df6f1859d5eeca6", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail21868b.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21868b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21868b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail21868b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -14,7 +14,7 @@ struct S\n     int* y;\n }\n \n-int* test(ref return scope S s)\n+int* test(ref return scope S s) @safe\n {\n     return &s.x;\n }"}, {"sha": "a974871a38aa00f74a57c3bae61c000ce88d7218", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail23108a.d", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108a.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,16 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23108\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail23108a.d(9): Error: undefined identifier `_xopEquals` in module `object`\n+---\n+*/\n+module object;\n+\n+struct Interface\n+{\n+    void[] vtbl;\n+}\n+\n+class TypeInfo\n+{\n+}"}, {"sha": "10eae37c401d3d9df546ea5cc9d7feb0067ef9cf", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail23108b.d", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23108b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,18 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23108\n+/* TEST_OUTPUT:\n+---\n+fail_compilation/fail23108b.d(10): Error: undefined identifier `_xopEquals` in module `object`\n+fail_compilation/fail23108b.d(10): Error: undefined identifier `_xopCmp` in module `object`\n+---\n+*/\n+module object;\n+\n+struct Interface\n+{\n+    void[] vtbl;\n+    int opCmp() { return 0; }\n+}\n+\n+class TypeInfo\n+{\n+}"}, {"sha": "91b4e79ad2ddc3777c009c0bf78526a3f1c48c46", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail23109.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23109.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23109.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail23109.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,12 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23109\n+/*\n+EXTRA_FILES: imports/test23109a.d imports/test23109b.d imports/test23109c.d\n+EXTRA_SOURCES: extra-files/test23109/object.d\n+TEST_OUTPUT:\n+---\n+Error: no property `getHash` for type `object.TypeInfo_Const`\n+Error: no property `getHash` for type `object.TypeInfo_Const`\n+fail_compilation/imports/test23109a.d(10): Error: template instance `imports.test23109a.Array!(Ensure)` error instantiating\n+---\n+*/\n+import imports.test23109a;"}, {"sha": "d2d277f50658b864c343338f10ffb7d3c807678d", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3703.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3703.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3703.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3703.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,8 +3,8 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/fail3703.d(18): Error: mismatched array lengths, 2 and 1\n-fail_compilation/fail3703.d(20): Error: mismatched array lengths, 2 and 1\n+fail_compilation/fail3703.d(18): Error: mismatched array lengths 2 and 1 for assignment `b[] = a`\n+fail_compilation/fail3703.d(20): Error: mismatched array lengths 2 and 1 for assignment `b[] = a`\n fail_compilation/fail3703.d(22): Error: mismatched array lengths, 3 and 2\n fail_compilation/fail3703.d(23): Error: mismatched array lengths, 2 and 3\n fail_compilation/fail3703.d(25): Error: mismatched array lengths, 3 and 2"}, {"sha": "153e90b034a3afeca86d8a099860ea2b6d10de41", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail_scope.d", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_scope.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_scope.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_scope.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,39 +2,40 @@\n REQUIRED_ARGS:\n TEST_OUTPUT:\n ---\n-fail_compilation/fail_scope.d(29): Deprecation: scope variable `da` may not be returned\n-fail_compilation/fail_scope.d(31): Deprecation: scope variable `o` may not be returned\n-fail_compilation/fail_scope.d(32): Deprecation: scope variable `dg` may not be returned\n-fail_compilation/fail_scope.d(34): Deprecation: scope variable `da` may not be returned\n-fail_compilation/fail_scope.d(36): Deprecation: scope variable `o` may not be returned\n-fail_compilation/fail_scope.d(37): Deprecation: scope variable `dg` may not be returned\n-fail_compilation/fail_scope.d(39): Deprecation: scope variable `p` may not be returned\n-fail_compilation/fail_scope.d(44): Error: returning `cast(char[])string` escapes a reference to local variable `string`\n-fail_compilation/fail_scope.d(62): Error: returning `s.bar()` escapes a reference to local variable `s`\n-fail_compilation/fail_scope.d(73): Error: `fail_scope.foo8` called with argument types `(int)` matches both:\n-fail_compilation/fail_scope.d(67):     `fail_scope.foo8(ref int x)`\n+fail_compilation/fail_scope.d(40): Deprecation: scope variable `p` may not be returned\n+fail_compilation/fail_scope.d(45): Error: returning `cast(char[])string` escapes a reference to local variable `string`\n+fail_compilation/fail_scope.d(63): Error: returning `s.bar()` escapes a reference to local variable `s`\n+fail_compilation/fail_scope.d(74): Error: `fail_scope.foo8` called with argument types `(int)` matches both:\n+fail_compilation/fail_scope.d(68):     `fail_scope.foo8(ref int x)`\n and:\n-fail_compilation/fail_scope.d(68):     `fail_scope.foo8(return ref int x)`\n-fail_compilation/fail_scope.d(81): Error: returning `& string` escapes a reference to local variable `string`\n-fail_compilation/fail_scope.d(91): Error: returning `cast(int[])a` escapes a reference to local variable `a`\n-fail_compilation/fail_scope.d(99): Error: returning `cast(int[])a` escapes a reference to local variable `a`\n-fail_compilation/fail_scope.d(107): Deprecation: escaping reference to outer local variable `x`\n-fail_compilation/fail_scope.d(126): Error: returning `s.bar()` escapes a reference to local variable `s`\n-fail_compilation/fail_scope.d(136): Error: returning `foo16226(i)` escapes a reference to local variable `i`\n+fail_compilation/fail_scope.d(69):     `fail_scope.foo8(return ref int x)`\n+fail_compilation/fail_scope.d(82): Error: returning `& string` escapes a reference to local variable `string`\n+fail_compilation/fail_scope.d(92): Error: returning `cast(int[])a` escapes a reference to local variable `a`\n+fail_compilation/fail_scope.d(100): Error: returning `cast(int[])a` escapes a reference to local variable `a`\n+fail_compilation/fail_scope.d(108): Deprecation: escaping reference to outer local variable `x`\n+fail_compilation/fail_scope.d(127): Error: returning `s.bar()` escapes a reference to local variable `s`\n+fail_compilation/fail_scope.d(137): Error: returning `foo16226(i)` escapes a reference to local variable `i`\n ---\n+//fail_compilation/fail_scope.d(30): Error: scope variable `da` may not be returned\n+//fail_compilation/fail_scope.d(32): Error: scope variable `o` may not be returned\n+//fail_compilation/fail_scope.d(33): Error: scope variable `dg` may not be returned\n+//fail_compilation/fail_scope.d(35): Error: scope variable `da` may not be returned\n+//fail_compilation/fail_scope.d(37): Error: scope variable `o` may not be returned\n+//fail_compilation/fail_scope.d(38): Error: scope variable `dg` may not be returned\n+//fail_compilation/fail_scope.d(40): Error: scope variable `p` may not be returned\n */\n \n alias int delegate() dg_t;\n \n-int[]  checkEscapeScope1(scope int[]  da) @safe { return da; }\n-int[3] checkEscapeScope2(scope int[3] sa) @safe { return sa; }\n-Object checkEscapeScope3(scope Object o)  @safe { return o;  }\n-dg_t   checkEscapeScope4(scope dg_t   dg) @safe { return dg; }\n+int[]  checkEscapeScope1(scope int[]  da) { return da; }\n+int[3] checkEscapeScope2(scope int[3] sa) { return sa; }\n+Object checkEscapeScope3(scope Object o)  { return o;  }\n+dg_t   checkEscapeScope4(scope dg_t   dg) { return dg; }\n \n-int[]  checkEscapeScope1() @safe { scope int[]  da = [];           return da; }\n-int[3] checkEscapeScope2() @safe { scope int[3] sa = [1,2,3];      return sa; }\n-Object checkEscapeScope3() @safe { scope Object  o = new Object;   return o;  }   // same with fail7294.d\n-dg_t   checkEscapeScope4() @safe { scope dg_t   dg = () => 1;      return dg; }\n+int[]  checkEscapeScope1() { scope int[]  da = [];           return da; }\n+int[3] checkEscapeScope2() { scope int[3] sa = [1,2,3];      return sa; }\n+Object checkEscapeScope3() { scope Object  o = new Object;   return o;  }   // same with fail7294.d\n+dg_t   checkEscapeScope4() { scope dg_t   dg = () => 1;      return dg; }\n \n int* test(scope int* p) @safe { return p; }\n "}, {"sha": "b39548ddb06ceeb6ab9214ed4680dd9bebfa1040", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice10949.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10949.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10949.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10949.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice10949.d(12): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice10949.d(12): Error: using the result of a comma expression is not allowed\n fail_compilation/ice10949.d(12): Error: array index 3 is out of bounds `[5, 5][0 .. 2]`\n fail_compilation/ice10949.d(12): Error: array index 17 is out of bounds `[2, 3][0 .. 2]`\n fail_compilation/ice10949.d(12):        while evaluating: `static assert((((([5, 5][3] + global - global) * global / global % global >> global & global | global) ^ global) == 9 , [2, 3][17]) || [3, 3, 3][9] is 4 && [[1, 2, 3]][4].length)`"}, {"sha": "d466a3000b332d7812b8e070b2d0126063f7dd67", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice14844.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice14844.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice14844.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice14844.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice14844.d(21): Error: In expression `__traits(allMembers, opDispatch)` template `opDispatch(string name)` has no members\n+fail_compilation/ice14844.d(21): Error: in expression `__traits(allMembers, opDispatch)` template `opDispatch(string name)` has no members\n fail_compilation/ice14844.d(21):        `opDispatch(string name)` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\n ---\n */"}, {"sha": "686e700cae9b13878e2271c6aba38341173ab64b", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice22377.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice22377.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice22377.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice22377.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice22377.d(8): Error: Internal Compiler Error: type `string` cannot be mapped to C++\n+fail_compilation/ice22377.d(8): Error: function `ice22377.foo` cannot have parameter of type `string` because its linkage is `extern(C++)`\n ---\n */\n "}, {"sha": "4fd1f61f82892da82e5df305e000cdc9aae2218b", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice23097.d", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice23097.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice23097.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice23097.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,28 @@\n+/* https://issues.dlang.org/show_bug.cgi?id=23097\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice23097.d(12): Error: undefined identifier `ICE`\n+fail_compilation/ice23097.d(27): Error: template instance `ice23097.ice23097!(S23097)` error instantiating\n+fail_compilation/ice23097.d(27): Error: function `ice23097.ice23097!(S23097).ice23097(S23097 _param_0)` is not callable using argument types `(S23097)`\n+fail_compilation/ice23097.d(27):        generating a copy constructor for `struct S23097` failed, therefore instances of it are uncopyable\n+---\n+*/\n+auto ice23097(I)(I)\n+{\n+    ICE;\n+}\n+\n+struct Cpctor23097\n+{\n+    this(ref typeof(this)) { }\n+}\n+\n+struct S23097\n+{\n+    Cpctor23097 cpctor;\n+}\n+\n+auto fail23097(S23097 s)\n+{\n+    s.ice23097;\n+}"}, {"sha": "8ba1cbf0737c7456eb1b78f53d139cb456587350", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254a.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,11 +1,11 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: using the result of a comma expression is not allowed\n fail_compilation/ice9254a.d(15): Error: invalid `foreach` aggregate `false` of type `bool`\n ---\n */"}, {"sha": "04f28fd3997e22c2c7d3bd6bed4547d39ca9ed89", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254b.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,11 +1,11 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: using the result of a comma expression is not allowed\n fail_compilation/ice9254b.d(17): Error: invalid `foreach` aggregate `false` of type `bool`\n ---\n */"}, {"sha": "acecc8d178c61f1619b5a0689150d4c72e57b450", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254c.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,11 +1,11 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n-fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: using the result of a comma expression is not allowed\n fail_compilation/ice9254c.d(15): Error: invalid `foreach` aggregate `false` of type `bool`\n ---\n */"}, {"sha": "5a11d9124c8deba3621bd7465dcd3ee684be1634", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test23109a.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109a.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,10 @@\n+module imports.test23109a;\n+import imports.test23109c;\n+import imports.test23109b;\n+struct Array(T)\n+{\n+    T[] data;\n+    enum SMALLARRAYCAP = 1;\n+    T[SMALLARRAYCAP] smallarray;\n+}\n+alias Ensures = Array!Ensure;"}, {"sha": "38680d3b9867dd406ee6d5785afab4234bfbe628", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test23109b.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,10 @@\n+module imports.test23109b;\n+import imports.test23109a;\n+import imports.test23109c;\n+struct Ensure\n+{\n+    Statement ensure;\n+    Ensures* arraySyntaxCopy()\n+    {\n+    }\n+}"}, {"sha": "c6faf5c12da5f3f4ac49c12df23018b3fabb708b", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/test23109c.d", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Ftest23109c.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,3 @@\n+module imports.test23109c;\n+import imports.test23109b;\n+class Statement {}"}, {"sha": "12ae60bcb789cc829a4f7f88f61488605257e7a3", "filename": "gcc/testsuite/gdc.test/fail_compilation/issue3827.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fissue3827.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fissue3827.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fissue3827.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,9 +2,9 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/issue3827.d(14): Error: Implicit string concatenation is error-prone and disallowed in D\n+fail_compilation/issue3827.d(14): Error: implicit string concatenation is error-prone and disallowed in D\n fail_compilation/issue3827.d(14):        Use the explicit syntax instead (concatenating literals is `@nogc`): \"Hello\" ~ \"World\"\n-fail_compilation/issue3827.d(15): Error: Implicit string concatenation is error-prone and disallowed in D\n+fail_compilation/issue3827.d(15): Error: implicit string concatenation is error-prone and disallowed in D\n fail_compilation/issue3827.d(15):        Use the explicit syntax instead (concatenating literals is `@nogc`): \"A\" ~ \"B\"\n ---\n */"}, {"sha": "eb385cbdc70d3ccf8babd2a93d3be881e41b1061", "filename": "gcc/testsuite/gdc.test/fail_compilation/no_Throwable.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fno_Throwable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fno_Throwable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fno_Throwable.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -4,8 +4,8 @@ REQUIRED_ARGS: -c\n EXTRA_SOURCES: extra-files/minimal/object.d\n TEST_OUTPUT:\n ---\n-fail_compilation/no_Throwable.d(14): Error: Cannot use `throw` statements because `object.Throwable` was not declared\n-fail_compilation/no_Throwable.d(19): Error: Cannot use try-catch statements because `object.Throwable` was not declared\n+fail_compilation/no_Throwable.d(14): Error: cannot use `throw` statements because `object.Throwable` was not declared\n+fail_compilation/no_Throwable.d(19): Error: cannot use try-catch statements because `object.Throwable` was not declared\n ---\n */\n "}, {"sha": "27d566362bdb7f18e7a4c66f836423243402ce99", "filename": "gcc/testsuite/gdc.test/fail_compilation/retscope.d", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -85,7 +85,7 @@ struct HTTP\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(96): Error: reference to local variable `sa` assigned to non-scope parameter `a` calling retscope.bar8\n+fail_compilation/retscope.d(96): Error: reference to local variable `sa` assigned to non-scope parameter `a`\n ---\n */\n // https://issues.dlang.org/show_bug.cgi?id=8838\n@@ -234,16 +234,16 @@ void* funretscope(scope dg_t ptr) @safe\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(248): Error: cannot implicitly convert expression `__lambda2` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() @safe`\n-fail_compilation/retscope.d(248): Error: cannot implicitly convert expression `__lambda2` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() @safe`\n-fail_compilation/retscope.d(249): Error: cannot implicitly convert expression `__lambda4` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() @safe`\n-fail_compilation/retscope.d(249): Error: cannot implicitly convert expression `__lambda4` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() @safe`\n+fail_compilation/retscope.d(248): Error: cannot implicitly convert expression `__lambda2` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() scope @safe`\n+fail_compilation/retscope.d(248): Error: cannot implicitly convert expression `__lambda2` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() scope @safe`\n+fail_compilation/retscope.d(249): Error: cannot implicitly convert expression `__lambda4` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() scope @safe`\n+fail_compilation/retscope.d(249): Error: cannot implicitly convert expression `__lambda4` of type `void* delegate() pure nothrow @nogc @safe` to `void* delegate() scope @safe`\n ---\n */\n \n void escape4() @safe\n {\n-    alias FunDG = void* delegate () @safe;\n+    alias FunDG = void* delegate () scope @safe;\n     int x = 42;\n     scope FunDG f = () return { return &x; };\n     scope FunDG g = ()        { return &x; };\n@@ -254,7 +254,7 @@ void escape4() @safe\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(266): Error: cannot take address of `scope` local `p` in `@safe` function `escape5`\n+fail_compilation/retscope.d(266): Error: cannot take address of `scope` variable `p` since `scope` applies to first indirection only\n ---\n */\n \n@@ -331,7 +331,7 @@ int* bar10( scope int** ptr ) @safe\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(342): Error: cannot take address of `scope` local `aa` in `@safe` function `escape11`\n+fail_compilation/retscope.d(342): Error: cannot take address of `scope` variable `aa` since `scope` applies to first indirection only\n ---\n */\n \n@@ -403,7 +403,7 @@ class Foo13\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(1205): Error: scope variable `f14` assigned to non-scope parameter `this` calling retscope.Foo14.foo\n+fail_compilation/retscope.d(1205): Error: scope variable `f14` assigned to non-scope parameter `this`\n ---\n */\n \n@@ -454,7 +454,7 @@ fail_compilation/retscope.d(1311): Error: scope variable `u2` assigned to `ek` w\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope.d(1405): Error: reference to local variable `buf` assigned to non-scope parameter `__anonymous_param` calling retscope.myprintf\n+fail_compilation/retscope.d(1405): Error: reference to local variable `buf` assigned to non-scope parameter `__anonymous_param`\n ---\n */\n "}, {"sha": "17d2182b4544a7ecd6ca7f528da4353f89969741", "filename": "gcc/testsuite/gdc.test/fail_compilation/retscope2.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope2.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -86,8 +86,8 @@ fail_compilation/retscope2.d(504): Error: scope variable `c` may not be returned\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/retscope2.d(604): Error: scope variable `_param_0` assigned to non-scope parameter `__anonymous_param` calling retscope2.foo600\n-fail_compilation/retscope2.d(604): Error: scope variable `_param_1` assigned to non-scope parameter `__anonymous_param` calling retscope2.foo600\n+fail_compilation/retscope2.d(604): Error: scope variable `_param_0` assigned to non-scope parameter `__anonymous_param`\n+fail_compilation/retscope2.d(604): Error: scope variable `_param_1` assigned to non-scope parameter `__anonymous_param`\n fail_compilation/retscope2.d(614): Error: template instance `retscope2.test600!(int*, int*)` error instantiating\n ---\n */\n@@ -156,7 +156,7 @@ fail_compilation/retscope2.d(804): Error: scope variable `e` may not be thrown\n \n #line 800\n \n-void foo800()\n+void foo800() @safe\n {\n     scope Exception e;\n     throw e;"}, {"sha": "b9a85aeddc1cf9edb33e571f51d93898bb1fe009", "filename": "gcc/testsuite/gdc.test/fail_compilation/retscope6.d", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope6.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope6.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fretscope6.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -76,9 +76,9 @@ void foo() @safe\n /* TEST_OUTPUT:\n ---\n fail_compilation/retscope6.d(8016): Error: address of variable `i` assigned to `p` with longer lifetime\n-fail_compilation/retscope6.d(8031): Error: reference to local variable `i` assigned to non-scope parameter `p` calling retscope6.betty!().betty\n-fail_compilation/retscope6.d(8031): Error: reference to local variable `j` assigned to non-scope parameter `q` calling retscope6.betty!().betty\n-fail_compilation/retscope6.d(8048): Error: reference to local variable `j` assigned to non-scope parameter `q` calling retscope6.archie!().archie\n+fail_compilation/retscope6.d(8031): Error: reference to local variable `i` assigned to non-scope parameter `p`\n+fail_compilation/retscope6.d(8031): Error: reference to local variable `j` assigned to non-scope parameter `q`\n+fail_compilation/retscope6.d(8048): Error: reference to local variable `j` assigned to non-scope parameter `q`\n ---\n */\n \n@@ -172,7 +172,7 @@ T9 testfred()\n \n /* TEST_OUTPUT:\n ---\n-fail_compilation/retscope6.d(10003): Error: scope variable `values` assigned to non-scope parameter `values` calling retscope6.escape\n+fail_compilation/retscope6.d(10003): Error: scope variable `values` assigned to non-scope parameter `values`\n ---\n */\n \n@@ -234,7 +234,7 @@ const(int)* f_c_20150() @safe nothrow\n \n /* TEST_OUTPUT:\n ---\n-fail_compilation/retscope6.d(13010): Error: reference to local variable `str` assigned to non-scope parameter `x` calling retscope6.f_throw\n+fail_compilation/retscope6.d(13010): Error: reference to local variable `str` assigned to non-scope parameter `x`\n ---\n */\n \n@@ -254,7 +254,7 @@ void escape_throw_20150() @safe\n \n /* TEST_OUTPUT:\n ---\n-fail_compilation/retscope6.d(14019): Error: scope variable `scopePtr` assigned to non-scope parameter `x` calling retscope6.noInfer23021\n+fail_compilation/retscope6.d(14019): Error: scope variable `scopePtr` assigned to non-scope parameter `x`\n fail_compilation/retscope6.d(14022): Error: scope variable `scopePtr` may not be returned\n ---\n */"}, {"sha": "ea0775cf9a7401c5d8f701328133ce932d2d6487", "filename": "gcc/testsuite/gdc.test/fail_compilation/safe_gshared.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_gshared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_gshared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_gshared.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,15 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/safe_gshared.d(13): Error: `@safe` function `f` cannot access `__gshared` data `x`\n+fail_compilation/safe_gshared.d(14): Error: `@safe` function `f` cannot access `__gshared` data `x`\n+---\n+*/\n+\n+__gshared int x;\n+\n+@safe int f()\n+{\n+    x++;\n+    return x;\n+}"}, {"sha": "4b107dba8144ace2e731c98950ac62244109b129", "filename": "gcc/testsuite/gdc.test/fail_compilation/safe_pointer_index.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_pointer_index.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_pointer_index.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fsafe_pointer_index.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,12 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/safe_pointer_index.d(11): Error: `@safe` function `f` cannot index pointer `x`\n+---\n+*/\n+\n+@safe void f(int* x)\n+{\n+    int y = x[0]; // allowed, same as *x\n+    int z = x[1];\n+}"}, {"sha": "f4e2cac93ccab10cfbd6eb7768af006bc2957be3", "filename": "gcc/testsuite/gdc.test/fail_compilation/test13536.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest13536.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest13536.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest13536.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,7 +2,7 @@\n TEST_OUTPUT:\n ---\n fail_compilation/test13536.d(23): Error: field `U.sysDg` cannot access pointers in `@safe` code that overlap other fields\n-fail_compilation/test13536.d(23): Error: address of variable `s` assigned to `u` with longer lifetime\n+fail_compilation/test13536.d(23): Deprecation: address of variable `s` assigned to `u` with longer lifetime\n fail_compilation/test13536.d(24): Error: field `U.safeDg` cannot access pointers in `@safe` code that overlap other fields\n ---\n */"}, {"sha": "9f628caf2198d7f94900fe75b8daacba92123698", "filename": "gcc/testsuite/gdc.test/fail_compilation/test14496.d", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest14496.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest14496.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest14496.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,11 +1,11 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test14496.d(21): Error: variable `test14496.foo.f` `void` initializers for pointers not allowed in safe functions\n-fail_compilation/test14496.d(24): Error: variable `test14496.foo.Bar.foo` `void` initializers for pointers not allowed in safe functions\n-fail_compilation/test14496.d(28): Error: variable `test14496.foo.Baz.x` `void` initializers for pointers not allowed in safe functions\n-fail_compilation/test14496.d(48): Error: variable `test14496.sinister.bar` `void` initializers for pointers not allowed in safe functions\n-fail_compilation/test14496.d(49): Error: variable `test14496.sinister.baz` `void` initializers for pointers not allowed in safe functions\n+fail_compilation/test14496.d(21): Error: `void` initializers for pointers not allowed in safe functions\n+fail_compilation/test14496.d(24): Error: `void` initializers for pointers not allowed in safe functions\n+fail_compilation/test14496.d(28): Error: `void` initializers for pointers not allowed in safe functions\n+fail_compilation/test14496.d(48): Error: `void` initializers for pointers not allowed in safe functions\n+fail_compilation/test14496.d(49): Error: `void` initializers for pointers not allowed in safe functions\n ---\n */\n // https://issues.dlang.org/show_bug.cgi?id=14496"}, {"sha": "fbbc1c0fa88a3c248ea3da56d65f301155d8cfc7", "filename": "gcc/testsuite/gdc.test/fail_compilation/test15191.d", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15191.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15191.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15191.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,12 +1,11 @@\n /* TEST_OUTPUT:\n REQUIRED_ARGS: -preview=dip1000\n ---\n-fail_compilation/test15191.d(35): Error: returning `&identity(x)` escapes a reference to local variable `x`\n-fail_compilation/test15191.d(41): Error: returning `&identityPtr(x)` escapes a reference to local variable `x`\n-fail_compilation/test15191.d(47): Error: cannot take address of `ref return` of `identityPtr()` in `@safe` function `addrOfRefTransitive`\n-fail_compilation/test15191.d(47):        return type `int*` has pointers that may be `scope`\n-fail_compilation/test15191.d(68): Error: cannot slice static array of `ref return` of `identityArr()` in `@safe` function `sliceOfRefEscape`\n-fail_compilation/test15191.d(68):        return type `int*[1]` has pointers that may be `scope`\n+fail_compilation/test15191.d(34): Error: returning `&identity(x)` escapes a reference to local variable `x`\n+fail_compilation/test15191.d(40): Error: returning `&identityPtr(x)` escapes a reference to local variable `x`\n+fail_compilation/test15191.d(46): Error: returning `&identityPtr(x)` escapes a reference to local variable `x`\n+fail_compilation/test15191.d(67): Error: cannot take address of `scope` variable `x` since `scope` applies to first indirection only\n+fail_compilation/test15191.d(69): Error: cannot take address of `scope` variable `x` since `scope` applies to first indirection only\n ---\n */\n \n@@ -61,10 +60,24 @@ ref int*[1] identityArr(return ref scope int*[1] x)\n \treturn x;\n }\n \n-int* sliceOfRefEscape()\n+int*[] sliceOfRefEscape()\n {\n \tint stackVar = 0xFF;\n \tscope int*[1] x = [&stackVar];\n-\tint*[] y = identityArr(x)[];\n-\treturn y[0];\n+\tauto y = identityArr(x)[]; // check transitive scope in assignment\n+\tcast(void) y;\n+\treturn identityArr(x)[]; // check transitive scope in return statement\n+}\n+\n+// https://issues.dlang.org/show_bug.cgi?id=23079\n+int** p;\n+\n+ref int* get() @safe\n+{\n+    return *p;\n+}\n+\n+int** g1() @safe\n+{\n+    return &get();\n }"}, {"sha": "02a1b32338b2b7745de91b6676a356993d26edb5", "filename": "gcc/testsuite/gdc.test/fail_compilation/test15373.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15373.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15373.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15373.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test15373.d(21): Error: Runtime type information is not supported for `extern(C++)` classes\n+fail_compilation/test15373.d(21): Error: runtime type information is not supported for `extern(C++)` classes\n ---\n */\n "}, {"sha": "c4a0fa63e75ef528801395235d14b923b935ab2c", "filename": "gcc/testsuite/gdc.test/fail_compilation/test16188.d", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,8 +1,8 @@\n-TEST_OUTPUT:\n+/* REQUIRED_ARGS: -preview=bitfields\n+ * TEST_OUTPUT:\n ---\n-fail_compilation/test16188.d(1): Error: no identifier for declarator `TEST_OUTPUT`\n-fail_compilation/test16188.d(1): Error: declaration expected, not `:`\n-fail_compilation/test16188.d(18): Error: unmatched closing brace\n+fail_compilation/test16188.d(101): Error: no property `name` for type `test16188.Where`\n+fail_compilation/test16188.d(101):        potentially malformed `opDispatch`. Use an explicit instantiation to get a better error message\n ---\n  */\n \n@@ -15,6 +15,8 @@ fail_compilation/test16188.d(18): Error: unmatched closing brace\n  * I don't understand why.\n  */\n \n+#line 100\n+\n void where() { Where().name; }\n \n struct Where"}, {"sha": "c98796998756047dacec628d30016b2d02362705", "filename": "gcc/testsuite/gdc.test/fail_compilation/test16365.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16365.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16365.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16365.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@ TEST_OUTPUT:\n ---\n fail_compilation/test16365.d(21): Error: `this` reference necessary to take address of member `f1` in `@safe` function `main`\n fail_compilation/test16365.d(23): Error: cannot implicitly convert expression `&f2` of type `void delegate() pure nothrow @nogc @safe` to `void function() @safe`\n-fail_compilation/test16365.d(27): Error: address of variable `s` assigned to `dg` with longer lifetime\n+fail_compilation/test16365.d(27): Deprecation: address of variable `s` assigned to `dg` with longer lifetime\n fail_compilation/test16365.d(28): Error: `dg.funcptr` cannot be used in `@safe` code\n ---\n */"}, {"sha": "b7fd9796d8be57912f02970c7988119081838691", "filename": "gcc/testsuite/gdc.test/fail_compilation/test17284.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17284.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17284.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17284.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,9 +1,10 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test17284.d(16): Error: field `U.c` cannot access pointers in `@safe` code that overlap other fields\n+fail_compilation/test17284.d(17): Error: field `U.c` cannot access pointers in `@safe` code that overlap other fields\n pure nothrow @safe void(U t)\n ---\n+REQUIRED_ARGS: -preview=bitfields\n */\n \n // https://issues.dlang.org/show_bug.cgi?id=17284"}, {"sha": "ec86646fc5a25d3fe0799c39975ef636d0c129ed", "filename": "gcc/testsuite/gdc.test/fail_compilation/test17423.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17423.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17423.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17423.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /* REQUIRED_ARGS: -preview=dip1000\n TEST_OUTPUT:\n ---\n-fail_compilation/test17423.d(26): Error: reference to local `this` assigned to non-scope parameter `dlg` calling test17423.Bar.opApply\n+fail_compilation/test17423.d(26): Error: reference to local `this` assigned to non-scope parameter `dlg`\n ---\n */\n "}, {"sha": "18f18443df794c69ed917b60980ad1f9807b3e6f", "filename": "gcc/testsuite/gdc.test/fail_compilation/test17868b.d", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17868b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17868b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest17868b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,15 +2,23 @@\n TEST_OUTPUT:\n ----\n fail_compilation/test17868b.d(9): Error: pragma `crt_constructor` can only apply to a single declaration\n-fail_compilation/test17868b.d(10): Error: function `test17868b.foo` must be `extern(C)` for `pragma(crt_constructor)`\n-fail_compilation/test17868b.d(14): Error: function `test17868b.bar` must be `extern(C)` for `pragma(crt_constructor)`\n+fail_compilation/test17868b.d(14): Error: function `test17868b.bar` must return `void` for `pragma(crt_constructor)`\n+fail_compilation/test17868b.d(18): Error: function `test17868b.baz` must be `extern(C)` for `pragma(crt_constructor)` when taking parameters\n ----\n  */\n pragma(crt_constructor):\n void foo()\n {\n }\n \n-void bar()\n+extern(C) int bar()\n+{\n+}\n+\n+void baz(int argc, char** argv)\n+{\n+}\n+\n+extern(C) void bazC(int, char**)\n {\n }"}, {"sha": "be296f823983dcb71f9976df3364eb61daa2301c", "filename": "gcc/testsuite/gdc.test/fail_compilation/test18130.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18130.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18130.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18130.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,7 +1,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test18130.d(8): Error: variable `test18130.foo.v` Zero-length `out` parameters are not allowed.\n+fail_compilation/test18130.d(8): Error: variable `test18130.foo.v` zero-length `out` parameters are not allowed.\n ---\n */\n // https://issues.dlang.org/show_bug.cgi?id=18130"}, {"sha": "580fe1bde7b3f9ddf43dd615a8407afade128f9a", "filename": "gcc/testsuite/gdc.test/fail_compilation/test18282.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18282.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18282.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18282.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -60,7 +60,7 @@ TEST_OUTPUT:\n fail_compilation/test18282.d(1007): Error: copying `& foo` into allocated memory escapes a reference to local variable `foo`\n fail_compilation/test18282.d(1008): Error: copying `& foo` into allocated memory escapes a reference to local variable `foo`\n fail_compilation/test18282.d(1009): Error: copying `& foo` into allocated memory escapes a reference to local variable `foo`\n-fail_compilation/test18282.d(1016): Error: copying `&this` into allocated memory escapes a reference to parameter variable `this`\n+fail_compilation/test18282.d(1016): Error: copying `&this` into allocated memory escapes a reference to parameter `this`\n ---\n */\n "}, {"sha": "d604f380a18e76a49b8fefcf1ae3027da948b3c7", "filename": "gcc/testsuite/gdc.test/fail_compilation/test18484.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18484.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18484.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest18484.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -10,11 +10,11 @@ fail_compilation/test18484.d(24): Error: escaping reference to stack allocated v\n \n struct S\n {\n-    int* bar() return;\n+    int* bar() @safe return;\n     int i;\n }\n \n-int* test1()\n+int* test1() @safe\n {\n     auto x = S(); return x.bar();  // error\n }"}, {"sha": "daa0697cffd54b606d81232599d29470dc8ac4dd", "filename": "gcc/testsuite/gdc.test/fail_compilation/test20245.d", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20245.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20245.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20245.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,15 +2,15 @@\n REQUIRED_ARGS: -preview=dip1000\n TEST_OUTPUT:\n ---\n-fail_compilation/test20245.d(20): Error: reference to local variable `x` assigned to non-scope parameter `ptr` calling test20245.escape\n-fail_compilation/test20245.d(21): Error: copying `&x` into allocated memory escapes a reference to parameter variable `x`\n+fail_compilation/test20245.d(20): Error: reference to local variable `x` assigned to non-scope parameter `ptr`\n+fail_compilation/test20245.d(21): Error: copying `&x` into allocated memory escapes a reference to parameter `x`\n fail_compilation/test20245.d(22): Error: scope variable `a` may not be returned\n-fail_compilation/test20245.d(26): Error: cannot take address of `scope` parameter `x` in `@safe` function `foo`\n-fail_compilation/test20245.d(32): Error: reference to local variable `x` assigned to non-scope parameter `ptr` calling test20245.escape\n-fail_compilation/test20245.d(33): Error: copying `&x` into allocated memory escapes a reference to parameter variable `x`\n+fail_compilation/test20245.d(26): Error: cannot take address of `scope` variable `x` since `scope` applies to first indirection only\n+fail_compilation/test20245.d(32): Error: reference to local variable `x` assigned to non-scope parameter `ptr`\n+fail_compilation/test20245.d(33): Error: copying `&x` into allocated memory escapes a reference to parameter `x`\n fail_compilation/test20245.d(49): Error: reference to local variable `price` assigned to non-scope `this.minPrice`\n-fail_compilation/test20245.d(68): Error: reference to local variable `this` assigned to non-scope parameter `msg` calling object.Exception.this\n-fail_compilation/test20245.d(88): Error: reference to local variable `this` assigned to non-scope parameter `content` calling test20245.listUp\n+fail_compilation/test20245.d(68): Error: reference to local variable `this` assigned to non-scope parameter `msg`\n+fail_compilation/test20245.d(88): Error: reference to local variable `this` assigned to non-scope parameter `content`\n ---\n */\n "}, {"sha": "7ad50dc13083b3a0eafe5dd3ac5ec80a1c463b9b", "filename": "gcc/testsuite/gdc.test/fail_compilation/test20569.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20569.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20569.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest20569.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,8 +1,8 @@\n /* REQUIRED_ARGS: -preview=dip1000\n    TEST_OUTPUT:\n ---\n-fail_compilation/test20569.d(19): Error: cannot take address of `scope` local `s1` in `@safe` function `main`\n-fail_compilation/test20569.d(23): Error: cannot take address of `scope` local `s2` in `@safe` function `main`\n+fail_compilation/test20569.d(19): Error: cannot take address of `scope` variable `s1` since `scope` applies to first indirection only\n+fail_compilation/test20569.d(23): Error: cannot take address of `scope` variable `s2` since `scope` applies to first indirection only\n ---\n  */\n "}, {"sha": "04c3bcff7d3c70c4fff666b38995486730416717", "filename": "gcc/testsuite/gdc.test/fail_compilation/test21198.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21198.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21198.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21198.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test21198.d(23): Error: Generating an `inout` copy constructor for `struct test21198.U` failed, therefore instances of it are uncopyable\n+fail_compilation/test21198.d(23): Error: generating an `inout` copy constructor for `struct test21198.U` failed, therefore instances of it are uncopyable\n ---\n */\n "}, {"sha": "45bb6d727ab30c89d2c048a32963b18f3a601d92", "filename": "gcc/testsuite/gdc.test/fail_compilation/test21204.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21204.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21204.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21204.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -2,7 +2,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test21204.d(22): Error: Generating an `inout` copy constructor for `struct test21204.B` failed, therefore instances of it are uncopyable\n+fail_compilation/test21204.d(22): Error: generating an `inout` copy constructor for `struct test21204.B` failed, therefore instances of it are uncopyable\n ---\n */\n "}, {"sha": "b4c28116e340a144d4bf6b9b2e70c06511a283ec", "filename": "gcc/testsuite/gdc.test/fail_compilation/test21665.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21665.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21665.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest21665.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,6 +1,6 @@\n /* TEST_OUTPUT:\n ---\n-fail_compilation/test21665.d(18): Error: variable `test21665.test1.s` `void` initializers for structs with invariants are not allowed in safe functions\n+fail_compilation/test21665.d(18): Error: `void` initializers for structs with invariants are not allowed in safe functions\n fail_compilation/test21665.d(30): Error: field `U.s` cannot access structs with invariants in `@safe` code that overlap other fields\n ---\n */"}, {"sha": "394116dd21d17e608ff7aa81e104f16955c576c6", "filename": "gcc/testsuite/gdc.test/fail_compilation/test22145.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22145.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22145.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22145.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,4 +1,5 @@\n /* TEST_OUTPUT:\n+REQUIRED_ARGS: -preview=dip1000\n ---\n fail_compilation/test22145.d(115): Error: scope variable `x` assigned to non-scope `global`\n ---"}, {"sha": "a47c0fe95b761dd76e3800620d77b6eea402b051", "filename": "gcc/testsuite/gdc.test/fail_compilation/test22593.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22593.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22593.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest22593.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test22593.d(14): Error: Cannot define both an rvalue constructor and a copy constructor for `struct Foo`\n+fail_compilation/test22593.d(14): Error: cannot define both an rvalue constructor and a copy constructor for `struct Foo`\n fail_compilation/test22593.d(22):        Template instance `__ctor!(immutable(Foo!int), immutable(Foo!int))` creates a rvalue constructor for `struct Foo`\n fail_compilation/test22593.d(22): Error: template instance `test22593.Foo!int.Foo.__ctor!(immutable(Foo!int), immutable(Foo!int))` error instantiating\n ---"}, {"sha": "5f66b360fec10139cfee13b0d92721fe1af06e48", "filename": "gcc/testsuite/gdc.test/fail_compilation/test9150.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest9150.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest9150.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest9150.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3,7 +3,7 @@\n /*\n TEST_OUTPUT:\n ---\n-fail_compilation/test9150.d(14): Error: mismatched array lengths, 5 and 3\n+fail_compilation/test9150.d(14): Error: mismatched array lengths 5 and 3 for assignment `row[] = __r2[__key3]`\n ---\n */\n "}, {"sha": "8c16afe75b20c8df77052fb5976afe96fcefbb74", "filename": "gcc/testsuite/gdc.test/fail_compilation/traits.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftraits.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -11,13 +11,13 @@ fail_compilation/traits.d(200): Error: undefined identifier `imports.nonexistent\n fail_compilation/traits.d(201): Error: undefined identifier `imports.nonexistent`\n fail_compilation/traits.d(202): Error: expected 1 arguments for `isPackage` but had 0\n fail_compilation/traits.d(203): Error: expected 1 arguments for `isModule` but had 0\n-fail_compilation/traits.d(300): Error: In expression `__traits(allMembers, float)` `float` can't have members\n+fail_compilation/traits.d(300): Error: in expression `__traits(allMembers, float)` `float` can't have members\n fail_compilation/traits.d(300):        `float` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\n-fail_compilation/traits.d(306): Error: In expression `__traits(allMembers, TemplatedStruct)` struct `TemplatedStruct(T)` has no members\n+fail_compilation/traits.d(306): Error: in expression `__traits(allMembers, TemplatedStruct)` struct `TemplatedStruct(T)` has no members\n fail_compilation/traits.d(306):        `TemplatedStruct(T)` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\n-fail_compilation/traits.d(309): Error: In expression `__traits(derivedMembers, float)` `float` can't have members\n+fail_compilation/traits.d(309): Error: in expression `__traits(derivedMembers, float)` `float` can't have members\n fail_compilation/traits.d(309):        `float` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\n-fail_compilation/traits.d(316): Error: In expression `__traits(derivedMembers, TemplatedStruct)` struct `TemplatedStruct(T)` has no members\n+fail_compilation/traits.d(316): Error: in expression `__traits(derivedMembers, TemplatedStruct)` struct `TemplatedStruct(T)` has no members\n fail_compilation/traits.d(316):        `TemplatedStruct(T)` must evaluate to either a module, a struct, an union, a class, an interface or a template instantiation\n fail_compilation/traits.d(404): Error: function `traits.func1` circular reference in `__traits(GetCppNamespaces,...)`\n fail_compilation/traits.d(413): Error: function `traits.foo1.func1` circular reference in `__traits(GetCppNamespaces,...)`"}, {"sha": "5d0390f4f297c70587a176a2f8b5e2a35ce87052", "filename": "gcc/testsuite/gdc.test/fail_compilation/udaparams.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fudaparams.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fudaparams.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fudaparams.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -12,8 +12,8 @@ fail_compilation/udaparams.d(40): Error: `@safe` attribute for function paramete\n fail_compilation/udaparams.d(43): Error: `@system` attribute for function parameter is not supported\n fail_compilation/udaparams.d(44): Error: `@trusted` attribute for function parameter is not supported\n fail_compilation/udaparams.d(45): Error: `@nogc` attribute for function parameter is not supported\n-fail_compilation/udaparams.d(51): Error: Cannot put a storage-class in an alias declaration.\n-fail_compilation/udaparams.d(52): Error: Cannot put a storage-class in an alias declaration.\n+fail_compilation/udaparams.d(51): Error: cannot put a storage-class in an alias declaration.\n+fail_compilation/udaparams.d(52): Error: cannot put a storage-class in an alias declaration.\n fail_compilation/udaparams.d(53): Error: semicolon expected to close `alias` declaration\n fail_compilation/udaparams.d(53): Error: declaration expected, not `=>`\n fail_compilation/udaparams.d(54): Error: semicolon expected to close `alias` declaration"}, {"sha": "289e1bcfbd6a1c5b10d2bce0855a509d1febecae", "filename": "gcc/testsuite/gdc.test/runnable/bit.d", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbit.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,106 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ */\n+\n+struct T\n+{\n+    uint x : 2, y : 3, :0;\n+    int :0;\n+}\n+\n+uint foo(T s)\n+{\n+    return s.x + s.y;\n+}\n+\n+void test1()\n+{\n+    T s;\n+    s.x = 2;\n+    s.y = 4;\n+    uint u = foo(s);\n+    assert(u == 6);\n+}\n+\n+/********************************************/\n+\n+struct S\n+{\n+    uint a:3;\n+    uint b:1;\n+    ulong c:64;\n+\n+    int d:3;\n+    int e:1;\n+    long f:64;\n+\n+    int i;\n+    alias f this;\n+}\n+\n+static assert(S.a.min == 0);\n+static assert(S.a.max == 7);\n+\n+static assert(S.b.min == 0);\n+static assert(S.b.max == 1);\n+\n+static assert(S.c.min == 0);\n+static assert(S.c.max == ulong.max);\n+\n+static assert(S.d.min == -4);\n+static assert(S.d.max == 3);\n+\n+static assert(S.e.min == -1);\n+static assert(S.e.max == 0);\n+\n+static assert(S.f.min == long.min);\n+static assert(S.f.max == long.max);\n+static assert(S.max == S.f.max);\n+\n+void test2()\n+{\n+    int x;\n+    S effect()\n+    {\n+        ++x;\n+        return S();\n+    }\n+    assert(effect().a.max == 7);\n+    assert(effect().i.max == int.max);\n+    assert(x == 0); // ensure effect() was not executed\n+}\n+\n+/********************************************/\n+\n+struct U\n+{\n+    int a;\n+    int b:3, c:4;\n+    this(this)\n+    {\n+\tb = 2;\n+    }\n+}\n+\n+static assert(U.b.offsetof == 4);\n+static assert(U.b.sizeof == 4);\n+\n+void test3()\n+{\n+    U u;\n+    u.c = 4;\n+    U v = u;\n+    assert(v.c == 4);\n+    u = v;\n+    assert(u.b == 2);\n+    assert(__traits(getMember, u, \"b\") == 2);\n+}\n+\n+/********************************************/\n+\n+int main()\n+{\n+    test1();\n+    test2();\n+    test3();\n+    return 0;\n+}"}, {"sha": "0d1877a7bfdff9941cf9fb679d2b3aedc76f1396", "filename": "gcc/testsuite/gdc.test/runnable/dbitfields.d", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdbitfields.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdbitfields.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdbitfields.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,189 @@\n+/* REQUIRED_ARGS: -preview=bitfields\n+ */\n+\n+struct S\n+{\n+    int a:2, b:4;\n+}\n+\n+static assert(S.sizeof == 4);\n+\n+void test1()\n+{\n+    S s;\n+    s.a = 3;\n+    assert(s.a == -1);\n+\n+    s.b = 4;\n+    assert(s.b == 4);\n+}\n+\n+/******************************************/\n+\n+struct S2\n+{\n+    uint a:2, b:4;\n+}\n+\n+S2 foo()\n+{\n+    S2 s = { 7, 8 };     // test struct literal expressions\n+    return s;\n+}\n+\n+void test2()\n+{\n+    S2 s = foo();\n+\n+    assert(s.a == 3);\n+    assert(s.b == 8);\n+}\n+\n+/******************************************/\n+\n+struct S3\n+{\n+    int i1;\n+    uint a:2, b:4, c:6;\n+    int i2;\n+}\n+\n+static assert(S3.sizeof == 12);\n+\n+S3 s3 = { 63, 7, 8 };\n+\n+void test3()\n+{\n+    assert(s3.i1 == 63);\n+    assert(s3.a == 3);\n+    assert(s3.b == 8);\n+    assert(s3.c == 0);\n+    assert(s3.i2 == 0);\n+}\n+\n+/******************************************/\n+\n+struct S4\n+{\n+    int i1;\n+    uint a:2, b:31;\n+}\n+\n+static assert(S4.sizeof == 12);\n+\n+S4 s4 = { 63, 7, 8 };\n+\n+void test4()\n+{\n+    assert(s4.i1 == 63);\n+    assert(s4.a == 3);\n+    assert(s4.b == 8);\n+}\n+\n+/******************************************/\n+\n+struct S5\n+{\n+    int i1;\n+    uint a:2, :0, b:5;\n+}\n+\n+static assert(S5.sizeof == 12);\n+\n+S5 s5 = { 63, 7, 8 };\n+\n+void test5()\n+{\n+    assert(s5.i1 == 63);\n+    assert(s5.a == 3);\n+    assert(s5.b == 8);\n+}\n+\n+/******************************************/\n+\n+// https://issues.dlang.org/show_bug.cgi?id=22710\n+\n+struct S6\n+{\n+    uint a:2, b:2;\n+}\n+\n+int boo6()\n+{\n+    S s;\n+    s.a = 3;\n+    s.b = 1;\n+    s.a += 2;\n+    return s.a;\n+}\n+\n+void test6()\n+{\n+    //printf(\"res: %d\\n\", test());\n+    assert(boo6() == 1);\n+}\n+\n+/******************************************/\n+\n+// https://issues.dlang.org/show_bug.cgi?id=22710\n+\n+struct S7\n+{\n+    uint a:2, b:2;\n+    int c:2, d:2;\n+}\n+\n+int test7u()\n+{\n+    S7 s;\n+    s.a = 7;\n+    s.b = 1;\n+    s.a += 2;\n+    return s.a;\n+}\n+\n+int test7s()\n+{\n+    S7 s;\n+    s.c = 7;\n+    s.d = 1;\n+    s.c += 4;\n+    return s.c;\n+}\n+\n+int test7s2()\n+{\n+    S7 s;\n+    s.c = 7;\n+    s.d = 2;\n+    s.c += 4;\n+    return s.d;\n+}\n+\n+void test7()\n+{\n+    //printf(\"uns: %d\\n\", test7u());\n+    assert(test7u() == 1);\n+    //printf(\"sig: %d\\n\", test7s());\n+    assert(test7s() == -1);\n+    assert(test7s2() == -2);\n+}\n+\n+static assert(test7u() ==  1);\n+static assert(test7s() == -1);\n+static assert(test7s2() == -2);\n+\n+/******************************************/\n+\n+int main()\n+{\n+    test1();\n+    test2();\n+    test3();\n+    test4();\n+    test5();\n+    test6();\n+    test7();\n+\n+    return 0;\n+}"}, {"sha": "16d4c5570a416b750482c45fa770d5820c4f8471", "filename": "gcc/testsuite/gdc.test/runnable/interpret.d", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -3453,6 +3453,21 @@ void test113()\n     }\n }\n \n+/************************************************/\n+\n+bool test114()\n+{\n+    string fizzBuzz()\n+    {\n+        string result = \"fizz \";\n+        return result ~= \"buzz\";\n+    }\n+\n+    assert(fizzBuzz() == \"fizz buzz\");\n+    return true;\n+}\n+static assert(test114());\n+\n /************************************************/\n // https://issues.dlang.org/show_bug.cgi?id=14140\n \n@@ -3852,6 +3867,7 @@ int main()\n     test109();\n     test112();\n     test113();\n+    test114();\n     test6439();\n     test6504();\n     test8818();"}, {"sha": "44d6951879c18a623b277d692c595ae2c1a32c3d", "filename": "gcc/testsuite/gdc.test/runnable/test17868b.d", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest17868b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest17868b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest17868b.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -12,8 +12,6 @@ fini\n \n import core.stdc.stdio;\n \n-extern(C):\n-\n pragma(crt_constructor)\n pragma(crt_destructor)\n void ctor_dtor_1()\n@@ -45,7 +43,7 @@ template fini()\n \n alias instantiate = fini!();\n \n-int main()\n+extern(C) int main()\n {\n     puts(\"main\");\n     return 0;"}, {"sha": "264602bccc571df0c5b450fb682849eb0a3485c4", "filename": "gcc/testsuite/gdc.test/runnable/test20734.d", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20734.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20734.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest20734.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,28 @@\n+/*\n+REQUIRED_ARGS: -betterC -preview=dip1000\n+*/\n+\n+__gshared int numDtor;\n+\n+struct S\n+{\n+    int a;\n+    ~this() nothrow @nogc @trusted { ++numDtor; }\n+}\n+\n+void takeScopeSlice(const scope S[] slice) nothrow @nogc @safe {}\n+\n+extern(C) int main() nothrow @nogc @safe\n+{\n+    takeScopeSlice([ S(1), S(2) ]); // @nogc => no GC allocation\n+    (() @trusted { assert(numDtor == 2); })(); // stack-allocated array literal properly destructed\n+    return 0;\n+}\n+\n+// https://issues.dlang.org/show_bug.cgi?id=23098\n+void f23098(scope inout(int)[] d) @safe {}\n+\n+void test23098() @safe\n+{\n+    f23098([10, 20]);\n+}"}, {"sha": "88eebd8306f981e6b0d769eb8fd952d310dee7c6", "filename": "gcc/testsuite/gdc.test/runnable/test21416.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest21416.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest21416.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest21416.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,9 @@\n+// https://issues.dlang.org/show_bug.cgi?id=21416\n+\n+// REQUIRED_ARGS: -betterC\n+\n+extern(C) void main() {}\n+\n+extern(C++) interface IEntry {}\n+\n+extern(C++) class MyEntryInfo : IEntry {}"}, {"sha": "41c881f30a522a7b812d2f4afc9e0dc83c3543fa", "filename": "gcc/testsuite/gdc.test/runnable/test23083.d", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23083.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23083.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23083.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,16 @@\n+// https://issues.dlang.org/show_bug.cgi?id=23083\n+int calls = 0;\n+\n+int[2] f()\n+{\n+    calls++;\n+    return [123, 456];\n+}\n+\n+void g(int a, int b) {}\n+\n+void main()\n+{\n+    g(f().tupleof);\n+    assert(calls == 1);\n+}"}, {"sha": "e79c6a05716ff9e2ec33b99abdf33bd880bc3f16", "filename": "gcc/testsuite/gdc.test/runnable/testcontracts.d", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestcontracts.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,19 +1,19 @@\n /* PERMUTE_ARGS: -inline -g -O\n TEST_OUTPUT:\n ---\n-runnable/testcontracts.d(323): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(324): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(325): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(326): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(328): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(329): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(330): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(331): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(502): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(503): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(504): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(505): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n-runnable/testcontracts.d(505): Deprecation: Usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(323): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(324): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(325): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(326): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(328): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(329): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(330): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(331): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(502): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(503): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(504): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(505): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n+runnable/testcontracts.d(505): Deprecation: usage of the `body` keyword is deprecated. Use `do` instead.\n ---\n */\n extern(C) int printf(const char*, ...);"}, {"sha": "1a9faf9be04704677e301db14519be91f131cc8e", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -1,4 +1,4 @@\n-e361d200b287a68344095f306cf5ea3a63c080e1\n+94bd5bcb448405d90bc50113d1cfd45a0880a50d\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "260bb63340c1e069cab74633e4c112216a1339a5", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -39,7 +39,7 @@ ALL_DRUNTIME_INSTALL_DSOURCES = $(DRUNTIME_DSOURCES) \\\n \t$(DRUNTIME_DSOURCES_OPENBSD) $(DRUNTIME_DSOURCES_POSIX) \\\n \t$(DRUNTIME_DSOURCES_SOLARIS) $(DRUNTIME_DSOURCES_WINDOWS) \\\n \t$(DRUNTIME_DSOURCES_GENERATED) $(DRUNTIME_DISOURCES) \\\n-\t$(DRUNTIME_DSOURCES_STDCXX)\n+\t$(DRUNTIME_DSOURCES_ELF) $(DRUNTIME_DSOURCES_STDCXX)\n \n # Setup source files depending on configure\n DRUNTIME_SOURCES_CONFIGURED =\n@@ -120,7 +120,7 @@ endif\n DRUNTIME_DSOURCES_GENERATED = gcc/config.d gcc/libbacktrace.d\n \n ALL_DRUNTIME_SOURCES = $(DRUNTIME_DSOURCES) $(DRUNTIME_CSOURCES) \\\n-\t$(DRUNTIME_DSOURCES_STDCXX) \\\n+\t$(DRUNTIME_DSOURCES_ELF) $(DRUNTIME_DSOURCES_STDCXX) \\\n \t$(DRUNTIME_SOURCES_CONFIGURED) $(DRUNTIME_DSOURCES_GENERATED)\n \n # Need this library to both be part of libgphobos.a, and installed separately.\n@@ -253,6 +253,8 @@ DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/sys/socket.d \\\n \tcore/sys/dragonflybsd/sys/sysctl.d core/sys/dragonflybsd/time.d\n \n+DRUNTIME_DSOURCES_ELF = core/sys/elf/package.d\n+\n DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/config.d \\\n \tcore/sys/freebsd/dlfcn.d core/sys/freebsd/err.d \\\n \tcore/sys/freebsd/execinfo.d core/sys/freebsd/netinet/in_.d \\"}, {"sha": "b7e2f34727819b1c41c712dc5a51e24ddb9784f5", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 71, "deletions": 61, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -245,13 +245,14 @@ am__objects_1 = core/atomic.lo core/attribute.lo core/bitop.lo \\\n \trt/monitor_.lo rt/profilegc.lo rt/sections.lo rt/tlsgc.lo \\\n \trt/util/typeinfo.lo rt/util/utility.lo\n am__objects_2 = core/stdc/libgdruntime_la-errno_.lo\n-am__objects_3 = core/stdcpp/allocator.lo core/stdcpp/array.lo \\\n+am__objects_3 = core/sys/elf/package.lo\n+am__objects_4 = core/stdcpp/allocator.lo core/stdcpp/array.lo \\\n \tcore/stdcpp/exception.lo core/stdcpp/memory.lo \\\n \tcore/stdcpp/new_.lo core/stdcpp/string.lo \\\n \tcore/stdcpp/string_view.lo core/stdcpp/type_traits.lo \\\n \tcore/stdcpp/typeinfo.lo core/stdcpp/utility.lo \\\n \tcore/stdcpp/vector.lo core/stdcpp/xutility.lo\n-am__objects_4 = core/sys/posix/aio.lo core/sys/posix/arpa/inet.lo \\\n+am__objects_5 = core/sys/posix/aio.lo core/sys/posix/arpa/inet.lo \\\n \tcore/sys/posix/config.lo core/sys/posix/dirent.lo \\\n \tcore/sys/posix/dlfcn.lo core/sys/posix/fcntl.lo \\\n \tcore/sys/posix/grp.lo core/sys/posix/iconv.lo \\\n@@ -278,8 +279,8 @@ am__objects_4 = core/sys/posix/aio.lo core/sys/posix/arpa/inet.lo \\\n \tcore/sys/posix/syslog.lo core/sys/posix/termios.lo \\\n \tcore/sys/posix/time.lo core/sys/posix/ucontext.lo \\\n \tcore/sys/posix/unistd.lo core/sys/posix/utime.lo\n-@DRUNTIME_OS_POSIX_TRUE@am__objects_5 = $(am__objects_4)\n-am__objects_6 = core/sys/darwin/config.lo \\\n+@DRUNTIME_OS_POSIX_TRUE@am__objects_6 = $(am__objects_5)\n+am__objects_7 = core/sys/darwin/config.lo \\\n \tcore/sys/darwin/crt_externs.lo core/sys/darwin/dlfcn.lo \\\n \tcore/sys/darwin/err.lo core/sys/darwin/execinfo.lo \\\n \tcore/sys/darwin/fcntl.lo core/sys/darwin/ifaddrs.lo \\\n@@ -294,8 +295,8 @@ am__objects_6 = core/sys/darwin/config.lo \\\n \tcore/sys/darwin/sys/attr.lo core/sys/darwin/sys/cdefs.lo \\\n \tcore/sys/darwin/sys/event.lo core/sys/darwin/sys/mman.lo \\\n \tcore/sys/darwin/sys/sysctl.lo\n-@DRUNTIME_OS_DARWIN_TRUE@am__objects_7 = $(am__objects_6)\n-am__objects_8 = core/sys/dragonflybsd/dlfcn.lo \\\n+@DRUNTIME_OS_DARWIN_TRUE@am__objects_8 = $(am__objects_7)\n+am__objects_9 = core/sys/dragonflybsd/dlfcn.lo \\\n \tcore/sys/dragonflybsd/err.lo core/sys/dragonflybsd/execinfo.lo \\\n \tcore/sys/dragonflybsd/netinet/in_.lo \\\n \tcore/sys/dragonflybsd/pthread_np.lo \\\n@@ -314,12 +315,12 @@ am__objects_8 = core/sys/dragonflybsd/dlfcn.lo \\\n \tcore/sys/dragonflybsd/sys/socket.lo \\\n \tcore/sys/dragonflybsd/sys/sysctl.lo \\\n \tcore/sys/dragonflybsd/time.lo\n-@DRUNTIME_OS_DRAGONFLYBSD_TRUE@am__objects_9 = $(am__objects_8)\n-am__objects_10 = core/sys/bionic/err.lo core/sys/bionic/fcntl.lo \\\n+@DRUNTIME_OS_DRAGONFLYBSD_TRUE@am__objects_10 = $(am__objects_9)\n+am__objects_11 = core/sys/bionic/err.lo core/sys/bionic/fcntl.lo \\\n \tcore/sys/bionic/stdlib.lo core/sys/bionic/string.lo \\\n \tcore/sys/bionic/unistd.lo\n-@DRUNTIME_OS_ANDROID_TRUE@am__objects_11 = $(am__objects_10)\n-am__objects_12 = core/sys/freebsd/config.lo core/sys/freebsd/dlfcn.lo \\\n+@DRUNTIME_OS_ANDROID_TRUE@am__objects_12 = $(am__objects_11)\n+am__objects_13 = core/sys/freebsd/config.lo core/sys/freebsd/dlfcn.lo \\\n \tcore/sys/freebsd/err.lo core/sys/freebsd/execinfo.lo \\\n \tcore/sys/freebsd/netinet/in_.lo core/sys/freebsd/pthread_np.lo \\\n \tcore/sys/freebsd/stdlib.lo core/sys/freebsd/string.lo \\\n@@ -332,17 +333,17 @@ am__objects_12 = core/sys/freebsd/config.lo core/sys/freebsd/dlfcn.lo \\\n \tcore/sys/freebsd/sys/mman.lo core/sys/freebsd/sys/mount.lo \\\n \tcore/sys/freebsd/sys/sysctl.lo core/sys/freebsd/time.lo \\\n \tcore/sys/freebsd/unistd.lo\n-@DRUNTIME_OS_FREEBSD_TRUE@am__objects_13 = $(am__objects_12)\n-am__objects_14 = core/sys/netbsd/dlfcn.lo core/sys/netbsd/err.lo \\\n+@DRUNTIME_OS_FREEBSD_TRUE@am__objects_14 = $(am__objects_13)\n+am__objects_15 = core/sys/netbsd/dlfcn.lo core/sys/netbsd/err.lo \\\n \tcore/sys/netbsd/execinfo.lo core/sys/netbsd/stdlib.lo \\\n \tcore/sys/netbsd/string.lo core/sys/netbsd/sys/elf.lo \\\n \tcore/sys/netbsd/sys/elf32.lo core/sys/netbsd/sys/elf64.lo \\\n \tcore/sys/netbsd/sys/elf_common.lo core/sys/netbsd/sys/event.lo \\\n \tcore/sys/netbsd/sys/featuretest.lo \\\n \tcore/sys/netbsd/sys/link_elf.lo core/sys/netbsd/sys/mman.lo \\\n \tcore/sys/netbsd/sys/sysctl.lo core/sys/netbsd/time.lo\n-@DRUNTIME_OS_NETBSD_TRUE@am__objects_15 = $(am__objects_14)\n-am__objects_16 = core/sys/openbsd/dlfcn.lo core/sys/openbsd/err.lo \\\n+@DRUNTIME_OS_NETBSD_TRUE@am__objects_16 = $(am__objects_15)\n+am__objects_17 = core/sys/openbsd/dlfcn.lo core/sys/openbsd/err.lo \\\n \tcore/sys/openbsd/execinfo.lo core/sys/openbsd/pthread_np.lo \\\n \tcore/sys/openbsd/pwd.lo core/sys/openbsd/stdlib.lo \\\n \tcore/sys/openbsd/string.lo core/sys/openbsd/sys/cdefs.lo \\\n@@ -352,8 +353,8 @@ am__objects_16 = core/sys/openbsd/dlfcn.lo core/sys/openbsd/err.lo \\\n \tcore/sys/openbsd/sys/link_elf.lo core/sys/openbsd/sys/mman.lo \\\n \tcore/sys/openbsd/sys/sysctl.lo core/sys/openbsd/time.lo \\\n \tcore/sys/openbsd/unistd.lo\n-@DRUNTIME_OS_OPENBSD_TRUE@am__objects_17 = $(am__objects_16)\n-am__objects_18 = core/sys/linux/config.lo core/sys/linux/dlfcn.lo \\\n+@DRUNTIME_OS_OPENBSD_TRUE@am__objects_18 = $(am__objects_17)\n+am__objects_19 = core/sys/linux/config.lo core/sys/linux/dlfcn.lo \\\n \tcore/sys/linux/elf.lo core/sys/linux/epoll.lo \\\n \tcore/sys/linux/err.lo core/sys/linux/errno.lo \\\n \tcore/sys/linux/execinfo.lo core/sys/linux/fcntl.lo \\\n@@ -371,8 +372,8 @@ am__objects_18 = core/sys/linux/config.lo core/sys/linux/dlfcn.lo \\\n \tcore/sys/linux/termios.lo core/sys/linux/time.lo \\\n \tcore/sys/linux/timerfd.lo core/sys/linux/tipc.lo \\\n \tcore/sys/linux/unistd.lo\n-@DRUNTIME_OS_LINUX_TRUE@am__objects_19 = $(am__objects_18)\n-am__objects_20 = core/sys/windows/accctrl.lo \\\n+@DRUNTIME_OS_LINUX_TRUE@am__objects_20 = $(am__objects_19)\n+am__objects_21 = core/sys/windows/accctrl.lo \\\n \tcore/sys/windows/aclapi.lo core/sys/windows/aclui.lo \\\n \tcore/sys/windows/basetsd.lo core/sys/windows/basetyps.lo \\\n \tcore/sys/windows/cderr.lo core/sys/windows/cguid.lo \\\n@@ -457,9 +458,9 @@ am__objects_20 = core/sys/windows/accctrl.lo \\\n \tcore/sys/windows/winsvc.lo core/sys/windows/winuser.lo \\\n \tcore/sys/windows/winver.lo core/sys/windows/wtsapi32.lo \\\n \tcore/sys/windows/wtypes.lo\n-@DRUNTIME_OS_MINGW_TRUE@am__objects_21 = $(am__objects_20) \\\n+@DRUNTIME_OS_MINGW_TRUE@am__objects_22 = $(am__objects_21) \\\n @DRUNTIME_OS_MINGW_TRUE@\tconfig/mingw/libgdruntime_la-msvc.lo\n-am__objects_22 = core/sys/solaris/dlfcn.lo core/sys/solaris/elf.lo \\\n+am__objects_23 = core/sys/solaris/dlfcn.lo core/sys/solaris/elf.lo \\\n \tcore/sys/solaris/err.lo core/sys/solaris/execinfo.lo \\\n \tcore/sys/solaris/libelf.lo core/sys/solaris/link.lo \\\n \tcore/sys/solaris/stdlib.lo core/sys/solaris/sys/elf.lo \\\n@@ -471,48 +472,48 @@ am__objects_22 = core/sys/solaris/dlfcn.lo core/sys/solaris/elf.lo \\\n \tcore/sys/solaris/sys/priocntl.lo \\\n \tcore/sys/solaris/sys/procset.lo core/sys/solaris/sys/types.lo \\\n \tcore/sys/solaris/time.lo\n-@DRUNTIME_OS_SOLARIS_TRUE@am__objects_23 = $(am__objects_22)\n-@DRUNTIME_CPU_AARCH64_TRUE@am__objects_24 = config/aarch64/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_ARM_TRUE@am__objects_25 = config/arm/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_MIPS_TRUE@am__objects_26 = config/mips/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_27 = config/powerpc/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_28 = config/mingw/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_29 = config/x86/libgdruntime_la-switchcontext.lo\n-@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_30 = config/systemz/libgdruntime_la-get_tls_offset.lo\n-@DRUNTIME_CPU_S390_TRUE@am__objects_31 = config/s390/libgdruntime_la-get_tls_offset.lo\n-am__objects_32 = $(am__objects_5) $(am__objects_7) $(am__objects_9) \\\n-\t$(am__objects_11) $(am__objects_13) $(am__objects_15) \\\n-\t$(am__objects_17) $(am__objects_19) $(am__objects_21) \\\n-\t$(am__objects_23) $(am__objects_24) $(am__objects_25) \\\n-\t$(am__objects_26) $(am__objects_27) $(am__objects_28) \\\n-\t$(am__objects_29) $(am__objects_30) $(am__objects_31)\n-am__objects_33 = gcc/config.lo gcc/libbacktrace.lo\n-am__objects_34 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n-\t$(am__objects_32) $(am__objects_33)\n-am_libgdruntime_la_OBJECTS = $(am__objects_34)\n+@DRUNTIME_OS_SOLARIS_TRUE@am__objects_24 = $(am__objects_23)\n+@DRUNTIME_CPU_AARCH64_TRUE@am__objects_25 = config/aarch64/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_ARM_TRUE@am__objects_26 = config/arm/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_MIPS_TRUE@am__objects_27 = config/mips/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_28 = config/powerpc/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_29 = config/mingw/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_30 = config/x86/libgdruntime_la-switchcontext.lo\n+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_31 = config/systemz/libgdruntime_la-get_tls_offset.lo\n+@DRUNTIME_CPU_S390_TRUE@am__objects_32 = config/s390/libgdruntime_la-get_tls_offset.lo\n+am__objects_33 = $(am__objects_6) $(am__objects_8) $(am__objects_10) \\\n+\t$(am__objects_12) $(am__objects_14) $(am__objects_16) \\\n+\t$(am__objects_18) $(am__objects_20) $(am__objects_22) \\\n+\t$(am__objects_24) $(am__objects_25) $(am__objects_26) \\\n+\t$(am__objects_27) $(am__objects_28) $(am__objects_29) \\\n+\t$(am__objects_30) $(am__objects_31) $(am__objects_32)\n+am__objects_34 = gcc/config.lo gcc/libbacktrace.lo\n+am__objects_35 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n+\t$(am__objects_4) $(am__objects_33) $(am__objects_34)\n+am_libgdruntime_la_OBJECTS = $(am__objects_35)\n libgdruntime_la_OBJECTS = $(am_libgdruntime_la_OBJECTS)\n am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n-am__objects_35 = core/stdc/libgdruntime_convenience_la-errno_.lo\n-@DRUNTIME_OS_MINGW_TRUE@am__objects_36 = $(am__objects_20) \\\n+am__objects_36 = core/stdc/libgdruntime_convenience_la-errno_.lo\n+@DRUNTIME_OS_MINGW_TRUE@am__objects_37 = $(am__objects_21) \\\n @DRUNTIME_OS_MINGW_TRUE@\tconfig/mingw/libgdruntime_convenience_la-msvc.lo\n-@DRUNTIME_CPU_AARCH64_TRUE@am__objects_37 = config/aarch64/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_ARM_TRUE@am__objects_38 = config/arm/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_MIPS_TRUE@am__objects_39 = config/mips/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_40 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_41 = config/mingw/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_42 = config/x86/libgdruntime_convenience_la-switchcontext.lo\n-@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_43 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo\n-@DRUNTIME_CPU_S390_TRUE@am__objects_44 = config/s390/libgdruntime_convenience_la-get_tls_offset.lo\n-am__objects_45 = $(am__objects_5) $(am__objects_7) $(am__objects_9) \\\n-\t$(am__objects_11) $(am__objects_13) $(am__objects_15) \\\n-\t$(am__objects_17) $(am__objects_19) $(am__objects_36) \\\n-\t$(am__objects_23) $(am__objects_37) $(am__objects_38) \\\n-\t$(am__objects_39) $(am__objects_40) $(am__objects_41) \\\n-\t$(am__objects_42) $(am__objects_43) $(am__objects_44)\n-am__objects_46 = $(am__objects_1) $(am__objects_35) $(am__objects_3) \\\n-\t$(am__objects_45) $(am__objects_33)\n-am__objects_47 = $(am__objects_46)\n-am_libgdruntime_convenience_la_OBJECTS = $(am__objects_47)\n+@DRUNTIME_CPU_AARCH64_TRUE@am__objects_38 = config/aarch64/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_ARM_TRUE@am__objects_39 = config/arm/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_MIPS_TRUE@am__objects_40 = config/mips/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_41 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_42 = config/mingw/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_43 = config/x86/libgdruntime_convenience_la-switchcontext.lo\n+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_44 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo\n+@DRUNTIME_CPU_S390_TRUE@am__objects_45 = config/s390/libgdruntime_convenience_la-get_tls_offset.lo\n+am__objects_46 = $(am__objects_6) $(am__objects_8) $(am__objects_10) \\\n+\t$(am__objects_12) $(am__objects_14) $(am__objects_16) \\\n+\t$(am__objects_18) $(am__objects_20) $(am__objects_37) \\\n+\t$(am__objects_24) $(am__objects_38) $(am__objects_39) \\\n+\t$(am__objects_40) $(am__objects_41) $(am__objects_42) \\\n+\t$(am__objects_43) $(am__objects_44) $(am__objects_45)\n+am__objects_47 = $(am__objects_1) $(am__objects_36) $(am__objects_3) \\\n+\t$(am__objects_4) $(am__objects_46) $(am__objects_34)\n+am__objects_48 = $(am__objects_47)\n+am_libgdruntime_convenience_la_OBJECTS = $(am__objects_48)\n libgdruntime_convenience_la_OBJECTS =  \\\n \t$(am_libgdruntime_convenience_la_OBJECTS)\n AM_V_P = $(am__v_P_@AM_V@)\n@@ -777,7 +778,7 @@ ALL_DRUNTIME_INSTALL_DSOURCES = $(DRUNTIME_DSOURCES) \\\n \t$(DRUNTIME_DSOURCES_OPENBSD) $(DRUNTIME_DSOURCES_POSIX) \\\n \t$(DRUNTIME_DSOURCES_SOLARIS) $(DRUNTIME_DSOURCES_WINDOWS) \\\n \t$(DRUNTIME_DSOURCES_GENERATED) $(DRUNTIME_DISOURCES) \\\n-\t$(DRUNTIME_DSOURCES_STDCXX)\n+\t$(DRUNTIME_DSOURCES_ELF) $(DRUNTIME_DSOURCES_STDCXX)\n \n \n # Setup source files depending on configure\n@@ -796,7 +797,7 @@ DRUNTIME_SOURCES_CONFIGURED = $(am__append_1) $(am__append_2) \\\n # Generated by configure\n DRUNTIME_DSOURCES_GENERATED = gcc/config.d gcc/libbacktrace.d\n ALL_DRUNTIME_SOURCES = $(DRUNTIME_DSOURCES) $(DRUNTIME_CSOURCES) \\\n-\t$(DRUNTIME_DSOURCES_STDCXX) \\\n+\t$(DRUNTIME_DSOURCES_ELF) $(DRUNTIME_DSOURCES_STDCXX) \\\n \t$(DRUNTIME_SOURCES_CONFIGURED) $(DRUNTIME_DSOURCES_GENERATED)\n \n \n@@ -918,6 +919,7 @@ DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/sys/socket.d \\\n \tcore/sys/dragonflybsd/sys/sysctl.d core/sys/dragonflybsd/time.d\n \n+DRUNTIME_DSOURCES_ELF = core/sys/elf/package.d\n DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/config.d \\\n \tcore/sys/freebsd/dlfcn.d core/sys/freebsd/err.d \\\n \tcore/sys/freebsd/execinfo.d core/sys/freebsd/netinet/in_.d \\\n@@ -1374,6 +1376,10 @@ rt/util/$(am__dirstamp):\n rt/util/typeinfo.lo: rt/util/$(am__dirstamp)\n rt/util/utility.lo: rt/util/$(am__dirstamp)\n core/stdc/libgdruntime_la-errno_.lo: core/stdc/$(am__dirstamp)\n+core/sys/elf/$(am__dirstamp):\n+\t@$(MKDIR_P) core/sys/elf\n+\t@: > core/sys/elf/$(am__dirstamp)\n+core/sys/elf/package.lo: core/sys/elf/$(am__dirstamp)\n core/stdcpp/$(am__dirstamp):\n \t@$(MKDIR_P) core/stdcpp\n \t@: > core/stdcpp/$(am__dirstamp)\n@@ -2016,6 +2022,8 @@ mostlyclean-compile:\n \t-rm -f core/sys/dragonflybsd/netinet/*.lo\n \t-rm -f core/sys/dragonflybsd/sys/*.$(OBJEXT)\n \t-rm -f core/sys/dragonflybsd/sys/*.lo\n+\t-rm -f core/sys/elf/*.$(OBJEXT)\n+\t-rm -f core/sys/elf/*.lo\n \t-rm -f core/sys/freebsd/*.$(OBJEXT)\n \t-rm -f core/sys/freebsd/*.lo\n \t-rm -f core/sys/freebsd/netinet/*.$(OBJEXT)\n@@ -2184,6 +2192,7 @@ clean-libtool:\n \t-rm -rf core/sys/dragonflybsd/.libs core/sys/dragonflybsd/_libs\n \t-rm -rf core/sys/dragonflybsd/netinet/.libs core/sys/dragonflybsd/netinet/_libs\n \t-rm -rf core/sys/dragonflybsd/sys/.libs core/sys/dragonflybsd/sys/_libs\n+\t-rm -rf core/sys/elf/.libs core/sys/elf/_libs\n \t-rm -rf core/sys/freebsd/.libs core/sys/freebsd/_libs\n \t-rm -rf core/sys/freebsd/netinet/.libs core/sys/freebsd/netinet/_libs\n \t-rm -rf core/sys/freebsd/sys/.libs core/sys/freebsd/sys/_libs\n@@ -2345,6 +2354,7 @@ distclean-generic:\n \t-rm -f core/sys/dragonflybsd/$(am__dirstamp)\n \t-rm -f core/sys/dragonflybsd/netinet/$(am__dirstamp)\n \t-rm -f core/sys/dragonflybsd/sys/$(am__dirstamp)\n+\t-rm -f core/sys/elf/$(am__dirstamp)\n \t-rm -f core/sys/freebsd/$(am__dirstamp)\n \t-rm -f core/sys/freebsd/netinet/$(am__dirstamp)\n \t-rm -f core/sys/freebsd/sys/$(am__dirstamp)"}, {"sha": "cf05333429ed36653935bfaf49c1f8f0fa67902e", "filename": "libphobos/libdruntime/__builtins.di", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2F__builtins.di", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2F__builtins.di", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2F__builtins.di?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -19,25 +19,23 @@ module __builtins;\n  * into the D compiler.\n  */\n \n-import core.stdc.stdarg;\n-\n-alias va_list = core.stdc.stdarg.va_list;\n+alias va_list = imported!\"core.stdc.stdarg\".va_list;\n \n version (Posix)\n {\n     version (X86_64)\n-        alias __va_list_tag = core.stdc.stdarg.__va_list_tag;\n+        alias __va_list_tag = imported!\"core.stdc.stdarg\".__va_list_tag;\n }\n \n-alias __builtin_va_start = core.stdc.stdarg.va_start;\n+alias __builtin_va_start = imported!\"core.stdc.stdarg\".va_start;\n \n-alias __builtin_va_end = core.stdc.stdarg.va_end;\n+alias __builtin_va_end = imported!\"core.stdc.stdarg\".va_end;\n \n-alias __builtin_va_copy = core.stdc.stdarg.va_copy;\n+alias __builtin_va_copy = imported!\"core.stdc.stdarg\".va_copy;\n \n /* dmd's ImportC rewrites __builtin_va_arg into an instantiation of va_arg\n  */\n-alias va_arg = core.stdc.stdarg.va_arg;\n+alias va_arg = imported!\"core.stdc.stdarg\".va_arg;\n \n version (CRuntime_Microsoft)\n {\n@@ -63,11 +61,9 @@ version (DigitalMars)\n     alias __builtin_huge_valf = __builtin_inff;\n     alias __builtin_huge_vall = __builtin_infl;\n \n-    import core.stdc.math;\n-\n-    alias __builtin_fabs  = core.stdc.math.fabs;\n-    alias __builtin_fabsf = core.stdc.math.fabsf;\n-    alias __builtin_fabsl = core.stdc.math.fabsl;\n+    alias __builtin_fabs  = imported!\"core.stdc.math\".fabs;\n+    alias __builtin_fabsf = imported!\"core.stdc.math\".fabsf;\n+    alias __builtin_fabsl = imported!\"core.stdc.math\".fabsl;\n \n     ushort __builtin_bswap16()(ushort value)\n     {\n@@ -87,10 +83,13 @@ version (DigitalMars)\n         return core.bitop.bswap(value);\n     }\n \n+    // Lazily imported on first use\n+    private alias c_long = imported!\"core.stdc.config\".c_long;\n+\n     // Stub these out to no-ops\n-    int   __builtin_constant_p(T)(T exp) { return 0; } // should be something like __traits(compiles, enum X = expr)\n-    long  __builtin_expect()(long exp, long c) { return exp; }\n-    void* __builtin_assume_aligned()(const void* p, size_t align_, ...) { return cast(void*)p; }\n+    int    __builtin_constant_p(T)(T exp) { return 0; } // should be something like __traits(compiles, enum X = expr)\n+    c_long __builtin_expect()(c_long exp, c_long c) { return exp; }\n+    void*  __builtin_assume_aligned()(const void* p, size_t align_, ...) { return cast(void*)p; }\n \n     // https://releases.llvm.org/13.0.0/tools/clang/docs/LanguageExtensions.html#builtin-assume\n     void __builtin_assume(T)(lazy T arg) { }"}, {"sha": "5d4f3b498f91ac34f12f62ab699b469810b65b44", "filename": "libphobos/libdruntime/core/internal/array/appending.d", "status": "modified", "additions": 41, "deletions": 65, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Fappending.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Fappending.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Fappending.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -76,79 +76,55 @@ template _d_arrayappendcTXImpl(Tarr : T[], T)\n     alias _d_arrayappendcTXTrace = _d_HookTraceImpl!(Tarr, _d_arrayappendcTX, errorMessage);\n }\n \n-/// Implementation of `_d_arrayappendT` and `_d_arrayappendTTrace`\n-template _d_arrayappendTImpl(Tarr : T[], T)\n+/// Implementation of `_d_arrayappendT`\n+ref Tarr _d_arrayappendT(Tarr : T[], T)(return ref scope Tarr x, scope Tarr y) @trusted\n {\n-    import core.internal.array.utils : _d_HookTraceImpl;\n-\n-    private enum errorMessage = \"Cannot append to array if compiling without support for runtime type information!\";\n-\n-    /**\n-     * Append array `y` to array `x`.\n-     * Params:\n-     *  x = what array to append to, taken as a reference\n-     *  y = what should be appended\n-     * Returns:\n-     *  The new value of `x`\n-     * Bugs:\n-    *   This function template was ported from a much older runtime hook that bypassed safety,\n-    *   purity, and throwabilty checks. To prevent breaking existing code, this function template\n-    *   is temporarily declared `@trusted pure` until the implementation can be brought up to modern D expectations.\n-     */\n-    static if (isCopyingNothrow!T)\n-        ref Tarr _d_arrayappendT(return ref scope Tarr x, scope Tarr y) @trusted pure nothrow\n-        {\n-            pragma(inline, false);\n+    pragma(inline, false);\n \n-            mixin(_d_arrayappendTBody);\n-        }\n-    else\n-        ref Tarr _d_arrayappendT(return ref scope Tarr x, scope Tarr y) @trusted pure\n-        {\n-            pragma(inline, false);\n-\n-            mixin(_d_arrayappendTBody);\n-        }\n+    import core.stdc.string : memcpy;\n+    import core.internal.traits : hasElaborateCopyConstructor, Unqual;\n+    import core.lifetime : copyEmplace;\n \n-    private enum _d_arrayappendTBody = q{\n-        import core.stdc.string : memcpy;\n-        import core.internal.traits : hasElaborateCopyConstructor, Unqual;\n-        import core.lifetime : copyEmplace;\n+    auto length = x.length;\n \n-        auto length = x.length;\n+    _d_arrayappendcTXImpl!Tarr._d_arrayappendcTX(x, y.length);\n \n-        _d_arrayappendcTXImpl!Tarr._d_arrayappendcTX(x, y.length);\n+    static if (hasElaborateCopyConstructor!T)\n+    {\n+        foreach (i, ref elem; y)\n+            copyEmplace(elem, x[length + i]);\n+    }\n+    else\n+    {\n+        // blit all elements at once\n+        if (y.length)\n+            memcpy(cast(Unqual!T *)&x[length], cast(Unqual!T *)&y[0], y.length * T.sizeof);\n+    }\n \n-        static if (hasElaborateCopyConstructor!T)\n-        {\n-            foreach (i; 0 .. y.length)\n-                copyEmplace(y[i], x[length + i]);\n-        }\n-        else\n-        {\n-            // blit all elements at once\n-            if (y.length)\n-                memcpy(cast(Unqual!T *)&x[length], cast(Unqual!T *)&y[0], y.length * T.sizeof);\n-        }\n+    return x;\n+}\n \n-        return x;\n-    };\n+/**\n+ * TraceGC wrapper around $(REF _d_arrayappendT, core,internal,array,appending).\n+ */\n+ref Tarr _d_arrayappendTTrace(Tarr : T[], T)(string file, int line, string funcname, return ref scope Tarr x, scope Tarr y) @trusted\n+{\n+    version (D_TypeInfo)\n+    {\n+        import core.internal.array.utils: TraceHook, gcStatsPure, accumulatePure;\n+        mixin(TraceHook!(Tarr.stringof, \"_d_arrayappendT\"));\n \n-    /**\n-     * TraceGC wrapper around $(REF _d_arrayappendT, rt,array,appending,_d_arrayappendTImpl).\n-     * Bugs:\n-     *  This function template was ported from a much older runtime hook that bypassed safety,\n-     *  purity, and throwabilty checks. To prevent breaking existing code, this function template\n-     *  is temporarily declared `@trusted pure` until the implementation can be brought up to modern D expectations.\n-     */\n-    alias _d_arrayappendTTrace = _d_HookTraceImpl!(Tarr, _d_arrayappendT, errorMessage);\n+        return _d_arrayappendT(x, y);\n+    }\n+    else\n+        assert(0, \"Cannot append to array if compiling without support for runtime type information!\");\n }\n \n @safe unittest\n {\n     double[] arr1;\n     foreach (i; 0 .. 4)\n-        _d_arrayappendTImpl!(typeof(arr1))._d_arrayappendT(arr1, [cast(double)i]);\n+        _d_arrayappendT(arr1, [cast(double)i]);\n     assert(arr1 == [0.0, 1.0, 2.0, 3.0]);\n }\n \n@@ -167,7 +143,7 @@ template _d_arrayappendTImpl(Tarr : T[], T)\n     Item[] arr2 = [Item(), Item()];\n     Item[] arr1_org = [Item(), Item()];\n     arr1_org ~= arr2;\n-    _d_arrayappendTImpl!(typeof(arr1))._d_arrayappendT(arr1, arr2);\n+    _d_arrayappendT(arr1, arr2);\n \n     // postblit should have triggered on at least the items in arr2\n     assert(blitted >= arr2.length);\n@@ -187,7 +163,7 @@ template _d_arrayappendTImpl(Tarr : T[], T)\n     Item[][] arr1 = [[Item()]];\n     Item[][] arr2 = [[Item()]];\n \n-    _d_arrayappendTImpl!(typeof(arr1))._d_arrayappendT(arr1, arr2);\n+    _d_arrayappendT(arr1, arr2);\n \n     // no postblit should have happened because arr{1,2} contain dynamic arrays\n     assert(blitted == 0);\n@@ -207,16 +183,16 @@ template _d_arrayappendTImpl(Tarr : T[], T)\n     Item[1][] arr1 = [[Item()]];\n     Item[1][] arr2 = [[Item()]];\n \n-    _d_arrayappendTImpl!(typeof(arr1))._d_arrayappendT(arr1, arr2);\n+    _d_arrayappendT(arr1, arr2);\n     // copy constructor should have been invoked because arr{1,2} contain static arrays\n     assert(copied >= arr2.length);\n }\n \n @safe nothrow unittest\n {\n     string str;\n-    _d_arrayappendTImpl!(typeof(str))._d_arrayappendT(str, \"a\");\n-    _d_arrayappendTImpl!(typeof(str))._d_arrayappendT(str, \"b\");\n-    _d_arrayappendTImpl!(typeof(str))._d_arrayappendT(str, \"c\");\n+    _d_arrayappendT(str, \"a\");\n+    _d_arrayappendT(str, \"b\");\n+    _d_arrayappendT(str, \"c\");\n     assert(str == \"abc\");\n }"}, {"sha": "41aa57faf0ce6fd1bfa6a69dec3187daeec54d47", "filename": "libphobos/libdruntime/core/internal/array/utils.d", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Futils.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Futils.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Finternal%2Farray%2Futils.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -11,15 +11,15 @@ module core.internal.array.utils;\n \n import core.internal.traits : Parameters;\n \n-private auto gcStatsPure() nothrow pure\n+auto gcStatsPure() nothrow pure\n {\n     import core.memory : GC;\n \n     auto impureBypass = cast(GC.Stats function() pure nothrow)&GC.stats;\n     return impureBypass();\n }\n \n-private ulong accumulatePure(string file, int line, string funcname, string name, ulong size) nothrow pure\n+ulong accumulatePure(string file, int line, string funcname, string name, ulong size) nothrow pure\n {\n     static ulong impureBypass(string file, int line, string funcname, string name, ulong size) @nogc nothrow\n     {\n@@ -35,41 +35,32 @@ private ulong accumulatePure(string file, int line, string funcname, string name\n }\n \n /**\n- * TraceGC wrapper around runtime hook `Hook`.\n+ * TraceGC wrapper generator around the runtime hook `Hook`.\n  * Params:\n- *  T = Type of hook to report to accumulate\n- *  Hook = The hook to wrap\n- *  errorMessage = The error message incase `version != D_TypeInfo`\n- *  file = File that called `_d_HookTraceImpl`\n- *  line = Line inside of `file` that called `_d_HookTraceImpl`\n- *  funcname = Function that called `_d_HookTraceImpl`\n- *  parameters = Parameters that will be used to call `Hook`\n- * Bugs:\n- *  This function template needs be between the compiler and a much older runtime hook that bypassed safety,\n- *  purity, and throwabilty checks. To prevent breaking existing code, this function template\n- *  is temporarily declared `@trusted pure` until the implementation can be brought up to modern D expectations.\n-*/\n-auto _d_HookTraceImpl(T, alias Hook, string errorMessage)(string file, int line, string funcname, Parameters!Hook parameters) @trusted pure\n+ *   Type = The type of hook to report to accumulate\n+ *   Hook = The name hook to wrap\n+ */\n+template TraceHook(string Type, string Hook)\n {\n-    version (D_TypeInfo)\n-    {\n+    const char[] TraceHook = q{\n+        import core.internal.array.utils : gcStatsPure, accumulatePure;\n+\n         pragma(inline, false);\n-        string name = T.stringof;\n+        string name = } ~ \"`\" ~ Type ~ \"`;\" ~ q{\n \n         // FIXME: use rt.tracegc.accumulator when it is accessable in the future.\n         version (tracegc)\n-        {\n+    } ~ \"{\\n\" ~ q{\n             import core.stdc.stdio;\n \n             printf(\"%sTrace file = '%.*s' line = %d function = '%.*s' type = %.*s\\n\",\n-                Hook.stringof.ptr,\n+            } ~ \"\\\"\" ~ Hook ~ \"\\\".ptr,\" ~ q{\n                 file.length, file.ptr,\n                 line,\n                 funcname.length, funcname.ptr,\n                 name.length, name.ptr\n             );\n-        }\n-\n+        } ~ \"}\\n\" ~ q{\n         ulong currentlyAllocated = gcStatsPure().allocatedInCurrentThread;\n \n         scope(exit)\n@@ -86,6 +77,29 @@ auto _d_HookTraceImpl(T, alias Hook, string errorMessage)(string file, int line,\n                     assert(0);\n                 }\n         }\n+    };\n+}\n+\n+/**\n+ * TraceGC wrapper around runtime hook `Hook`.\n+ * Params:\n+ *  T = Type of hook to report to accumulate\n+ *  Hook = The hook to wrap\n+ *  errorMessage = The error message incase `version != D_TypeInfo`\n+ *  file = File that called `_d_HookTraceImpl`\n+ *  line = Line inside of `file` that called `_d_HookTraceImpl`\n+ *  funcname = Function that called `_d_HookTraceImpl`\n+ *  parameters = Parameters that will be used to call `Hook`\n+ * Bugs:\n+ *  This function template needs be between the compiler and a much older runtime hook that bypassed safety,\n+ *  purity, and throwabilty checks. To prevent breaking existing code, this function template\n+ *  is temporarily declared `@trusted pure` until the implementation can be brought up to modern D expectations.\n+*/\n+auto _d_HookTraceImpl(T, alias Hook, string errorMessage)(string file, int line, string funcname, Parameters!Hook parameters) @trusted pure\n+{\n+    version (D_TypeInfo)\n+    {\n+        mixin(TraceHook!(T.stringof, __traits(identifier, Hook)));\n         return Hook(parameters);\n     }\n     else"}, {"sha": "0b4890cbfa9cc780253b0925ea7477dd969b8650", "filename": "libphobos/libdruntime/core/internal/traits.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Finternal%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Finternal%2Ftraits.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -234,7 +234,7 @@ if (Ts.length > 0)\n template classInstanceAlignment(T)\n if (is(T == class))\n {\n-    alias classInstanceAlignment = maxAlignment!(void*, typeof(T.tupleof));\n+    enum classInstanceAlignment = __traits(classInstanceAlignment, T);\n }\n \n /// See $(REF hasElaborateMove, std,traits)"}, {"sha": "6502e595e002aa547c13eb9a06a1b8265a10adf8", "filename": "libphobos/libdruntime/core/lifetime.d", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Flifetime.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Flifetime.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Flifetime.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -200,12 +200,10 @@ Returns: The newly constructed object.\n T emplace(T, Args...)(void[] chunk, auto ref Args args)\n     if (is(T == class))\n {\n-    import core.internal.traits : maxAlignment;\n-\n     enum classSize = __traits(classInstanceSize, T);\n     assert(chunk.length >= classSize, \"chunk size too small.\");\n \n-    enum alignment = maxAlignment!(void*, typeof(T.tupleof));\n+    enum alignment = __traits(classInstanceAlignment, T);\n     assert((cast(size_t) chunk.ptr) % alignment == 0, \"chunk is not aligned.\");\n \n     return emplace!T(cast(T)(chunk.ptr), forward!args);\n@@ -242,9 +240,7 @@ T emplace(T, Args...)(void[] chunk, auto ref Args args)\n         int virtualGetI() { return i; }\n     }\n \n-    import core.internal.traits : classInstanceAlignment;\n-\n-    align(classInstanceAlignment!C) byte[__traits(classInstanceSize, C)] buffer;\n+    align(__traits(classInstanceAlignment, C)) byte[__traits(classInstanceSize, C)] buffer;\n     C c = emplace!C(buffer[], 42);\n     assert(c.virtualGetI() == 42);\n }\n@@ -290,7 +286,8 @@ T emplace(T, Args...)(void[] chunk, auto ref Args args)\n     }\n \n     int var = 6;\n-    align(__conv_EmplaceTestClass.alignof) ubyte[__traits(classInstanceSize, __conv_EmplaceTestClass)] buf;\n+    align(__traits(classInstanceAlignment, __conv_EmplaceTestClass))\n+        ubyte[__traits(classInstanceSize, __conv_EmplaceTestClass)] buf;\n     auto support = (() @trusted => cast(__conv_EmplaceTestClass)(buf.ptr))();\n \n     auto fromRval = emplace!__conv_EmplaceTestClass(support, 1);\n@@ -1198,7 +1195,7 @@ pure nothrow @safe /* @nogc */ unittest\n     }\n     void[] buf;\n \n-    static align(A.alignof) byte[__traits(classInstanceSize, A)] sbuf;\n+    static align(__traits(classInstanceAlignment, A)) byte[__traits(classInstanceSize, A)] sbuf;\n     buf = sbuf[];\n     auto a = emplace!A(buf, 55);\n     assert(a.x == 55 && a.y == 55);"}, {"sha": "b63b11100c1f52dd496fb3b44b4a178242f6ceed", "filename": "libphobos/libdruntime/core/memory.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fmemory.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fmemory.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fmemory.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -31,7 +31,7 @@\n         $(LI Maintain another reference to that same data in another thread that the\n         GC does know about.)\n         $(LI Disable GC collection cycles while that thread is active with $(LREF disable)/$(LREF enable).)\n-        $(LI Register the thread with the GC using $(REF thread_attachThis, core,thread)/$(REF thread_detachThis, core,thread).)\n+        $(LI Register the thread with the GC using $(REF thread_attachThis, core,thread,osthread)/$(REF thread_detachThis, core,thread,threadbase).)\n         )\n    )\n    )"}, {"sha": "f1bf59b0ac49f6da0b35c0309e53948e11e06994", "filename": "libphobos/libdruntime/core/simd.d", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsimd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsimd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsimd.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -409,6 +409,28 @@ version (D_SIMD)\n     *      op2    = second operand\n     * Returns:\n     *      result of opcode\n+    * Example:\n+    ---\n+    import core.simd;\n+    import core.stdc.stdio;\n+\n+    void main()\n+    {\n+        float4 A = [2.34f, -70000.0f, 0.00001f, 345.5f];\n+        float4 R = A;\n+        R = cast(float4) __simd(XMM.RCPSS, R, A);\n+        printf(\"%g %g %g %g\\n\", R.array[0], R.array[1], R.array[2], R.array[3]);\n+    }\n+    ---\n+    * Prints `0.427368 -70000 1e-05 345.5`.\n+    * The use of the two operand form for `XMM.RCPSS` is necessary because the result of the instruction\n+    * contains elements of both operands.\n+    * Example:\n+    ---\n+    double[2] A = [56.0, -75.0];\n+    double2 R = cast(double2) __simd(XMM.LODUPD, *cast(double2*)A.ptr);\n+    ---\n+    * The cast to `double2*` is necessary because the type of `*A.ptr` is `double`.\n     */\n     pure @safe void16 __simd(XMM opcode, void16 op1, void16 op2);\n \n@@ -480,13 +502,15 @@ version (D_SIMD)\n     /*****\n     * For \"store\" operations of the form:\n     *    op1 op= op2\n+    * such as MOVLPS.\n     * Returns:\n     *    op2\n     * These cannot be marked as pure, as semantic() doesn't check them.\n     */\n     @safe void16 __simd_sto(XMM opcode, void16 op1, void16 op2);\n     @safe void16 __simd_sto(XMM opcode, double op1, void16 op2); ///\n     @safe void16 __simd_sto(XMM opcode, float op1, void16 op2);  ///\n+    @safe void16 __simd_sto(XMM opcode, void16 op1, long op2); ///\n \n     ///\n     unittest"}, {"sha": "2662fdb0fff9535489518c4260571c6c8ce4e773", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/elf32.d", "status": "modified", "additions": 2, "deletions": 153, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf32.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,108 +13,13 @@ extern (C):\n import core.stdc.stdint;\n public import core.sys.dragonflybsd.sys.elf_common;\n \n-alias uint16_t Elf32_Half;\n-alias uint32_t Elf32_Word;\n-alias int32_t  Elf32_Sword;\n alias uint64_t Elf32_Lword;\n-alias uint32_t Elf32_Addr;\n-alias uint32_t Elf32_Off;\n alias Elf32_Word Elf32_Hashelt;\n alias Elf32_Word Elf32_Size;\n alias Elf32_Sword Elf32_Ssize;\n \n-struct Elf32_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf32_Half    e_type;\n-    Elf32_Half    e_machine;\n-    Elf32_Word    e_version;\n-    Elf32_Addr    e_entry;\n-    Elf32_Off     e_phoff;\n-    Elf32_Off     e_shoff;\n-    Elf32_Word    e_flags;\n-    Elf32_Half    e_ehsize;\n-    Elf32_Half    e_phentsize;\n-    Elf32_Half    e_phnum;\n-    Elf32_Half    e_shentsize;\n-    Elf32_Half    e_shnum;\n-    Elf32_Half    e_shstrndx;\n-}\n-\n-struct Elf32_Shdr\n-{\n-    Elf32_Word    sh_name;\n-    Elf32_Word    sh_type;\n-    Elf32_Word    sh_flags;\n-    Elf32_Addr    sh_addr;\n-    Elf32_Off     sh_offset;\n-    Elf32_Word    sh_size;\n-    Elf32_Word    sh_link;\n-    Elf32_Word    sh_info;\n-    Elf32_Word    sh_addralign;\n-    Elf32_Word    sh_entsize;\n-}\n-\n-struct Elf32_Phdr\n-{\n-    Elf32_Word    p_type;\n-    Elf32_Off     p_offset;\n-    Elf32_Addr    p_vaddr;\n-    Elf32_Addr    p_paddr;\n-    Elf32_Word    p_filesz;\n-    Elf32_Word    p_memsz;\n-    Elf32_Word    p_flags;\n-    Elf32_Word    p_align;\n-}\n-\n-struct Elf32_Dyn\n-{\n-  Elf32_Sword   d_tag;\n-  union _d_un\n-  {\n-      Elf32_Word d_val;\n-      Elf32_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf32_Rel\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-}\n-\n-struct Elf32_Rela\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-    Elf32_Sword   r_addend;\n-}\n-\n-extern (D) pure @safe\n-{\n-    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n-    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n-    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n-}\n-\n alias Elf_Note Elf32_Nhdr;\n \n-struct Elf32_Move\n-{\n-    Elf32_Lword   m_value;\n-    Elf32_Word    m_info;\n-    Elf32_Word    m_poffset;\n-    Elf32_Half    m_repeat;\n-    Elf32_Half    m_stride;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF32_M_SYM(I)(I info) @safe { return info >> 8; }\n-    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf32_Cap\n {\n     Elf32_Word    c_tag;\n@@ -125,63 +30,7 @@ struct Elf32_Cap\n     } _c_un c_un;\n }\n \n-struct Elf32_Sym\n-{\n-    Elf32_Word    st_name;\n-    Elf32_Addr    st_value;\n-    Elf32_Word    st_size;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf32_Half st_shndx;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF32_ST_TYPE(T)(T val) @safe { return val & 0xf; }\n-    auto ELF32_ST_INFO(B, T)(B bind, T type) @safe { return (bind << 4) + (type & 0xf); }\n-    auto ELF32_ST_VISIBILITY(O)(O o) @safe { return o & 0x03; }\n-}\n-\n-struct Elf32_Verdef\n-{\n-    Elf32_Half    vd_version;\n-    Elf32_Half    vd_flags;\n-    Elf32_Half    vd_ndx;\n-    Elf32_Half    vd_cnt;\n-    Elf32_Word    vd_hash;\n-    Elf32_Word    vd_aux;\n-    Elf32_Word    vd_next;\n-}\n-\n-struct Elf32_Verdaux\n-{\n-    Elf32_Word    vda_name;\n-    Elf32_Word    vda_next;\n-}\n-\n-struct Elf32_Verneed\n-{\n-    Elf32_Half    vn_version;\n-    Elf32_Half    vn_cnt;\n-    Elf32_Word    vn_file;\n-    Elf32_Word    vn_aux;\n-    Elf32_Word    vn_next;\n-}\n-\n-struct Elf32_Vernaux\n-{\n-    Elf32_Word    vna_hash;\n-    Elf32_Half    vna_flags;\n-    Elf32_Half    vna_other;\n-    Elf32_Word    vna_name;\n-    Elf32_Word    vna_next;\n-}\n-\n-alias Elf32_Half Elf32_Versym;\n-\n-struct Elf32_Syminfo\n+extern (D)\n {\n-    Elf32_Half si_boundto;\n-    Elf32_Half si_flags;\n+    auto ELF32_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }"}, {"sha": "6431bd2347a1b5e0f2008a1b066280fafb1ec5c0", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/elf64.d", "status": "modified", "additions": 2, "deletions": 152, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf64.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,114 +13,20 @@ extern (C):\n import core.stdc.stdint;\n public import core.sys.dragonflybsd.sys.elf_common;\n \n-alias uint16_t Elf64_Half;\n-alias uint32_t Elf64_Word;\n-alias int32_t  Elf64_Sword;\n alias uint64_t Elf64_Lword;\n-alias uint64_t Elf64_Xword;\n-alias int64_t  Elf64_Sxword;\n-alias uint64_t Elf64_Addr;\n-alias uint64_t Elf64_Off;\n alias Elf64_Word Elf64_Hashelt;\n alias Elf64_Xword Elf64_Size;\n alias Elf64_Sxword Elf64_Ssize;\n \n-struct Elf64_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf64_Half    e_type;\n-    Elf64_Half    e_machine;\n-    Elf64_Word    e_version;\n-    Elf64_Addr    e_entry;\n-    Elf64_Off     e_phoff;\n-    Elf64_Off     e_shoff;\n-    Elf64_Word    e_flags;\n-    Elf64_Half    e_ehsize;\n-    Elf64_Half    e_phentsize;\n-    Elf64_Half    e_phnum;\n-    Elf64_Half    e_shentsize;\n-    Elf64_Half    e_shnum;\n-    Elf64_Half    e_shstrndx;\n-}\n-\n-struct Elf64_Shdr\n-{\n-    Elf64_Word    sh_name;\n-    Elf64_Word    sh_type;\n-    Elf64_Xword   sh_flags;\n-    Elf64_Addr    sh_addr;\n-    Elf64_Off     sh_offset;\n-    Elf64_Xword   sh_size;\n-    Elf64_Word    sh_link;\n-    Elf64_Word    sh_info;\n-    Elf64_Xword   sh_addralign;\n-    Elf64_Xword   sh_entsize;\n-}\n-\n-struct Elf64_Phdr\n-{\n-    Elf64_Word    p_type;\n-    Elf64_Word    p_flags;\n-    Elf64_Off     p_offset;\n-    Elf64_Addr    p_vaddr;\n-    Elf64_Addr    p_paddr;\n-    Elf64_Xword   p_filesz;\n-    Elf64_Xword   p_memsz;\n-    Elf64_Xword   p_align;\n-}\n-\n-struct Elf64_Dyn\n-{\n-  Elf64_Sxword  d_tag;\n-  union _d_un\n-  {\n-      Elf64_Xword d_val;\n-      Elf64_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf64_Rel\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-}\n-\n-struct Elf64_Rela\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-    Elf64_Sxword  r_addend;\n-}\n-\n extern (D) pure\n {\n-    auto ELF64_R_SYM(I)(I i) @safe { return i >> 32; }\n-    auto ELF64_R_TYPE(I)(I i) @safe { return i & 0xffffffff; }\n-    auto ELF64_R_INFO(S, T)(S sym, T type) @safe { return (sym << 32) + (type & 0xffffffff); }\n-\n     auto ELF64_R_TYPE_DATA(I)(I i) { return (cast(Elf64_Xword) i << 32) >> 40; }\n     auto ELF64_R_TYPE_ID(I)(I i) { return (cast(Elf64_Xword) i << 56 ) >> 56; }\n     auto ELF64_R_TYPE_INFO(D, T)(D d, T t) { return cast(Elf64_Xword) d << 8 + cast(Elf64_Xword) t; }\n }\n \n alias Elf_Note Elf64_Nhdr;\n \n-struct Elf64_Move\n-{\n-    Elf64_Lword   m_value;\n-    Elf64_Xword   m_info;\n-    Elf64_Xword   m_poffset;\n-    Elf64_Half    m_repeat;\n-    Elf64_Half    m_stride;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF64_M_SYM(I)(I info) @safe { return info >> 8; }\n-    auto ELF64_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF64_M_INFO(S, SZ)(S sym, SZ size) @safe { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf64_Cap\n {\n     Elf64_Xword   c_tag;\n@@ -131,63 +37,7 @@ struct Elf64_Cap\n     } _c_un c_un;\n }\n \n-struct Elf64_Sym\n-{\n-    Elf64_Word    st_name;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf64_Half st_shndx;\n-    Elf64_Addr    st_value;\n-    Elf64_Xword   st_size;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF64_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF64_ST_TYPE(T)(T val) @safe { return val & 0xf; }\n-    auto ELF64_ST_INFO(B, T)(B bind, T type) @safe { return (bind << 4) + (type & 0xf); }\n-    auto ELF64_ST_VISIBILITY(O)(O o) @safe { return o & 0x03; }\n-}\n-\n-struct Elf64_Verdef\n-{\n-    Elf64_Half    vd_version;\n-    Elf64_Half    vd_flags;\n-    Elf64_Half    vd_ndx;\n-    Elf64_Half    vd_cnt;\n-    Elf64_Word    vd_hash;\n-    Elf64_Word    vd_aux;\n-    Elf64_Word    vd_next;\n-}\n-\n-struct Elf64_Verdaux\n-{\n-    Elf64_Word    vda_name;\n-    Elf64_Word    vda_next;\n-}\n-\n-struct Elf64_Verneed\n-{\n-    Elf64_Half    vn_version;\n-    Elf64_Half    vn_cnt;\n-    Elf64_Word    vn_file;\n-    Elf64_Word    vn_aux;\n-    Elf64_Word    vn_next;\n-}\n-\n-struct Elf64_Vernaux\n-{\n-    Elf64_Word    vna_hash;\n-    Elf64_Half    vna_flags;\n-    Elf64_Half    vna_other;\n-    Elf64_Word    vna_name;\n-    Elf64_Word    vna_next;\n-}\n-\n-alias Elf64_Half Elf64_Versym;\n-\n-struct Elf64_Syminfo\n+extern (D)\n {\n-    Elf64_Half si_boundto;\n-    Elf64_Half si_flags;\n+    auto ELF64_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }"}, {"sha": "90e5861a6acdc7da4f2e452c07609c12872d4a21", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/elf_common.d", "status": "modified", "additions": 3, "deletions": 598, "changes": 601, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf_common.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf_common.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Felf_common.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -11,6 +11,7 @@ version (DragonFlyBSD):\n extern (C):\n \n import core.stdc.stdint;\n+public import core.sys.elf;\n \n struct Elf_Note\n {\n@@ -27,60 +28,7 @@ struct Elf_GNU_Hash_Header\n     uint32_t      gh_shift2;\n }\n \n-enum EI_MAG0 =         0;\n-enum EI_MAG1 =         1;\n-enum EI_MAG2 =         2;\n-enum EI_MAG3 =         3;\n-enum EI_CLASS =        4;\n-enum EI_DATA =         5;\n-enum EI_VERSION =      6;\n-enum EI_OSABI =        7;\n-enum EI_ABIVERSION =   8;\n enum OLD_EI_BRAND =    8;\n-enum EI_PAD =          9;\n-enum EI_NIDENT =       16;\n-\n-enum ELFMAG0 =         0x7f;\n-enum ELFMAG1 =         'E';\n-enum ELFMAG2 =         'L';\n-enum ELFMAG3 =         'F';\n-enum ELFMAG =          \"\\177ELF\";\n-enum SELFMAG =         4;\n-\n-enum EV_NONE =         0;\n-enum EV_CURRENT =      1;\n-\n-enum ELFCLASSNONE =    0;\n-enum ELFCLASS32 =      1;\n-enum ELFCLASS64 =      2;\n-\n-enum ELFDATANONE =     0;\n-enum ELFDATA2LSB =     1;\n-enum ELFDATA2MSB =     2;\n-\n-enum ELFOSABI_NONE =           0;\n-enum ELFOSABI_SYSV =           0;\n-enum ELFOSABI_HPUX =           1;\n-enum ELFOSABI_NETBSD =         2;\n-enum ELFOSABI_LINUX =          3;\n-enum ELFOSABI_HURD  =          4;\n-enum ELFOSABI_86OPEN =         5;\n-enum ELFOSABI_SOLARIS =        6;\n-enum ELFOSABI_AIX =            7;\n-enum ELFOSABI_MONTEREY =       7;\n-enum ELFOSABI_IRIX =           8;\n-enum ELFOSABI_FREEBSD =        9;\n-enum ELFOSABI_TRU64 =          10;\n-enum ELFOSABI_MODESTO =        11;\n-enum ELFOSABI_OPENBSD =        12;\n-enum ELFOSABI_OPENVMS =        13;\n-enum ELFOSABI_NSK =            14;\n-enum ELFOSABI_AROS =           15;\n-enum ELFOSABI_ARM =            97;\n-enum ELFOSABI_STANDALONE =     255;\n-\n-// just a pointer\n-enum ELFOSABI_DRAGONFLYBSD =   ELFOSABI_NONE;\n \n extern (D) pure @safe\n {\n@@ -90,587 +38,44 @@ extern (D) pure @safe\n                                     ehdr.e_ident[EI_MAG3] == ELFMAG3; }\n }\n \n-enum ET_NONE =         0;\n-enum ET_REL =          1;\n-enum ET_EXEC =         2;\n-enum ET_DYN =          3;\n-enum ET_CORE =         4;\n-enum ET_LOOS =         0xfe00;\n-enum ET_HIOS =         0xfeff;\n-enum ET_LOPROC =       0xff00;\n-enum ET_HIPROC =       0xffff;\n-\n-enum EM_NONE =          0;\n-enum EM_M32 =           1;\n-enum EM_SPARC =         2;\n-enum EM_386 =           3;\n-enum EM_68K =           4;\n-enum EM_88K =           5;\n-enum EM_860 =           7;\n-enum EM_MIPS =          8;\n-enum EM_S370 =          9;\n-enum EM_MIPS_RS3_LE =  10;\n-enum EM_PARISC =       15;\n-enum EM_VPP500 =       17;\n-enum EM_SPARC32PLUS =  18;\n-enum EM_960 =          19;\n-enum EM_PPC =          20;\n-enum EM_PPC64 =        21;\n-enum EM_S390 =         22;\n-enum EM_V800 =         36;\n-enum EM_FR20 =         37;\n-enum EM_RH32 =         38;\n-enum EM_RCE =          39;\n-enum EM_ARM =          40;\n-enum EM_SH =           42;\n-enum EM_SPARCV9 =      43;\n-enum EM_TRICORE =      44;\n-enum EM_ARC =          45;\n-enum EM_H8_300 =       46;\n-enum EM_H8_300H =      47;\n-enum EM_H8S =          48;\n-enum EM_H8_500 =       49;\n-enum EM_IA_64 =        50;\n-enum EM_MIPS_X =       51;\n-enum EM_COLDFIRE =     52;\n-enum EM_68HC12 =       53;\n-enum EM_MMA =          54;\n-enum EM_PCP =          55;\n-enum EM_NCPU =         56;\n-enum EM_NDR1 =         57;\n-enum EM_STARCORE =     58;\n-enum EM_ME16 =         59;\n-enum EM_ST100 =        60;\n-enum EM_TINYJ =        61;\n-enum EM_X86_64 =       62;\n-enum EM_AMD64 =        62;\n-enum EM_PDSP =         63;\n-enum EM_FX66 =         66;\n-enum EM_ST9PLUS =      67;\n-enum EM_ST7 =          68;\n-enum EM_68HC16 =       69;\n-enum EM_68HC11 =       70;\n-enum EM_68HC08 =       71;\n-enum EM_68HC05 =       72;\n-enum EM_SVX =          73;\n-enum EM_ST19 =         74;\n-enum EM_VAX =          75;\n-enum EM_CRIS =         76;\n-enum EM_JAVELIN =      77;\n-enum EM_FIREPATH =     78;\n-enum EM_ZSP =          79;\n-enum EM_MMIX =         80;\n-enum EM_HUANY =        81;\n-enum EM_PRISM =        82;\n-enum EM_AVR =          83;\n-enum EM_FR30 =         84;\n-enum EM_D10V =         85;\n-enum EM_D30V =         86;\n-enum EM_V850 =         87;\n-enum EM_M32R =         88;\n-enum EM_MN10300 =      89;\n-enum EM_MN10200 =      90;\n-enum EM_PJ =           91;\n-enum EM_OPENRISC =     92;\n-enum EM_ARC_A5 =       93;\n-enum EM_XTENSA =       94;\n-enum EM_VIDEOCORE =    95;\n-enum EM_TMM_GPP =      96;\n-enum EM_NS32K =        97;\n-enum EM_TPC =          98;\n-enum EM_SNP1K =        99;\n-enum EM_ST200 =       100;\n-enum EM_IP2K =        101;\n-enum EM_MAX =         102;\n-enum EM_CR =          103;\n-enum EM_F2MC16 =      104;\n-enum EM_MSP430 =      105;\n-enum EM_BLACKFIN =    106;\n-enum EM_SE_C33 =      107;\n-enum EM_SEP =         108;\n-enum EM_ARCA =        109;\n-enum EM_UNICORE =     110;\n-enum EM_DXP =         112;\n-enum EM_ALTERA_NIOS2 =113;\n-enum EM_CRX =         114;\n-enum EM_XGATE =       115;\n-enum EM_C166  =       116;\n-enum EM_M16C  =       117;\n-enum EM_DSPIC30F =    118;\n-enum EM_CE =          119;\n-enum EM_M32C  =       120;\n-enum EM_res121 =      121;\n-enum EM_res122 =      122;\n-enum EM_res123 =      123;\n-enum EM_res124 =      124;\n-enum EM_res125 =      125;\n-enum EM_res126 =      126;\n-enum EM_res127 =      127;\n-enum EM_res128 =      128;\n-enum EM_res129 =      129;\n-enum EM_res130 =      130;\n-enum EM_TSK3000 =     131;\n-enum EM_RS08  =       132;\n-enum EM_res133 =      133;\n-enum EM_ECOG2 =       134;\n-enum EM_SCORE =       135;\n-enum EM_SCORE7 =      135;\n-enum EM_DSP24 =       136;\n-enum EM_VIDEOCORE3 =  137;\n-enum EM_LATTICEMICO32 = 138;\n-enum EM_SE_C17 =      139;\n-enum EM_TI_C6000 =    140;\n-enum EM_TI_C2000 =    141;\n-enum EM_TI_C5500 =    142;\n-enum EM_res143 =      143;\n-enum EM_res144 =      144;\n-enum EM_res145 =      145;\n-enum EM_res146 =      146;\n-enum EM_res147 =      147;\n-enum EM_res148 =      148;\n-enum EM_res149 =      149;\n-enum EM_res150 =      150;\n-enum EM_res151 =      151;\n-enum EM_res152 =      152;\n-enum EM_res153 =      153;\n-enum EM_res154 =      154;\n-enum EM_res155 =      155;\n-enum EM_res156 =      156;\n-enum EM_res157 =      157;\n-enum EM_res158 =      158;\n-enum EM_res159 =      159;\n-enum EM_MMDSP_PLUS =  160;\n-enum EM_CYPRESS_M8C = 161;\n-enum EM_R32C  =       162;\n-enum EM_TRIMEDIA =    163;\n-enum EM_QDSP6 =       164;\n-enum EM_8051  =       165;\n-enum EM_STXP7X =      166;\n-enum EM_NDS32 =       167;\n-enum EM_ECOG1 =       168;\n-enum EM_ECOG1X =      168;\n-enum EM_MAXQ30 =      169;\n-enum EM_XIMO16 =      170;\n-enum EM_MANIK =       171;\n-enum EM_CRAYNV2 =     172;\n-enum EM_RX =          173;\n-enum EM_METAG =       174;\n-enum EM_MCST_ELBRUS = 175;\n-enum EM_ECOG16 =      176;\n-enum EM_CR16  =       177;\n-enum EM_ETPU  =       178;\n-enum EM_SLE9X =       179;\n-enum EM_L1OM  =       180;\n-enum EM_K1OM  =       181;\n-enum EM_INTEL182 =    182;\n-enum EM_res183 =      183;\n-enum EM_res184 =      184;\n-enum EM_AVR32 =       185;\n-enum EM_STM8  =       186;\n-enum EM_TILE64 =      187;\n-enum EM_TILEPRO =     188;\n-enum EM_MICROBLAZE =  189;\n-enum EM_CUDA  =       190;\n-enum EM_TILEGX =      191;\n-\n enum EM_486 =           6;\n enum EM_MIPS_RS4_BE =  10;\n enum EM_ALPHA_STD =    41;\n-enum EM_ALPHA =    0x9026;\n-\n-enum SHN_UNDEF =       0;\n-enum SHN_LORESERVE =   0xff00;\n-enum SHN_LOPROC =      0xff00;\n-enum SHN_HIPROC =      0xff1f;\n-enum SHN_LOOS =        0xff20;\n-enum SHN_HIOS =        0xff3f;\n-enum SHN_ABS =         0xfff1;\n-enum SHN_COMMON =      0xfff2;\n-enum SHN_XINDEX =      0xffff;\n-enum SHN_HIRESERVE =   0xffff;\n-\n-enum PT_NULL =         0;\n-enum PT_LOAD =         1;\n-enum PT_DYNAMIC =      2;\n-enum PT_INTERP =       3;\n-enum PT_NOTE =         4;\n-enum PT_SHLIB =        5;\n-enum PT_PHDR =         6;\n-enum PT_TLS =          7;\n-enum PT_LOOS =         0x60000000;\n-enum PT_HIOS =         0x6fffffff;\n-enum PT_LOPROC =       0x70000000;\n-enum PT_HIPROC =       0x7fffffff;\n \n-enum PT_GNU_EH_FRAME =  PT_LOOS + 0x474e550; /* Frame unwind information */\n-enum PT_SUNW_EH_FRAME = PT_GNU_EH_FRAME;     /* Solaris uses the same value */\n-enum PT_GNU_STACK =     PT_LOOS + 0x474e551; /* Stack flags */\n-enum PT_GNU_RELRO =     PT_LOOS + 0x474e552;  /* Read-only after relocation */\n-\n-enum PF_X =            0x1;\n-enum PF_W =            0x2;\n-enum PF_R =            0x4;\n-enum PF_MASKOS =       0x0ff00000;\n-enum PF_MASKPROC =     0xf0000000;\n-\n-enum PN_XNUM =         0xffff;\n-\n-enum SHT_NULL =          0;\n-enum SHT_PROGBITS =      1;\n-enum SHT_SYMTAB =        2;\n-enum SHT_STRTAB =        3;\n-enum SHT_RELA =          4;\n-enum SHT_HASH =          5;\n-enum SHT_DYNAMIC =       6;\n-enum SHT_NOTE =          7;\n-enum SHT_NOBITS =        8;\n-enum SHT_REL =           9;\n-enum SHT_SHLIB =         10;\n-enum SHT_DYNSYM =        11;\n-\n-enum SHT_INIT_ARRAY =    14;\n-enum SHT_FINI_ARRAY =    15;\n-enum SHT_PREINIT_ARRAY = 16;\n-enum SHT_GROUP =         17;\n-enum SHT_SYMTAB_SHNDX =  18;\n-\n-enum SHT_LOOS =          0x60000000;\n-enum SHT_LOSUNW =        0x6ffffff4;\n+enum PT_SUNW_EH_FRAME = PT_GNU_EH_FRAME;\n \n enum SHT_GNU_INCREMENTAL_INPUTS =  0x6fff4700;\n-enum SHT_GNU_ATTRIBUTES =       0x6ffffff5;\n-enum SHT_GNU_HASH =             0x6ffffff6;\n-enum SHT_GNU_LIBLIST =          0x6ffffff7;\n \n-//enum SHT_SUNW_dof =      0x6ffffff4;\n-//enum SHT_SUNW_cap =      0x6ffffff5;\n-//enum SHT_SUNW_SIGNATURE = 0x6ffffff6;\n enum SHT_SUNW_verdef =   0x6ffffffd;\n enum SHT_SUNW_verneed =  0x6ffffffe;\n enum SHT_SUNW_versym =   0x6fffffff;\n \n-enum SHT_GNU_verdef =    SHT_SUNW_verdef;\n-enum SHT_GNU_verneed =   SHT_SUNW_verneed;\n-enum SHT_GNU_versym =    SHT_SUNW_versym;\n-\n-enum SHT_LOPROC =        0x70000000;\n-enum SHT_HIPROC =        0x7fffffff;\n-enum SHT_LOUSER =        0x80000000;\n-enum SHT_HIUSER =        0x8fffffff;\n-\n-/*\n-enum SHT_GNU_HASH =      0x6ffffff6;\n-enum SHT_SUNW_ANNOTATE = 0x6ffffff7;\n-enum SHT_SUNW_DEBUGSTR = 0x6ffffff8;\n-enum SHT_SUNW_DEBUG =    0x6ffffff9;\n-enum SHT_SUNW_move =     0x6ffffffa;\n-enum SHT_SUNW_COMDAT =   0x6ffffffb;\n-enum SHT_SUNW_syminfo =  0x6ffffffc;\n-enum SHT_HISUNW =        0x6fffffff;\n-enum SHT_HIOS =          0x6fffffff;\n-enum SHT_AMD64_UNWIND =  0x70000001;\n-enum SHT_ARM_EXIDX =     0x70000001;\n-enum SHT_ARM_PREEMPTMAP = 0x70000002;\n-enum SHT_ARM_ATTRIBUTES = 0x70000003;\n-enum SHT_ARM_DEBUGOVERLAY = 0x70000004;\n-enum SHT_ARM_OVERLAYSECTION = 0x70000005;\n-enum SHT_MIPS_REGINFO =  0x70000006;\n-enum SHT_MIPS_OPTIONS =  0x7000000d;\n-enum SHT_MIPS_DWARF =    0x7000001e;\n-*/\n-\n-enum SHF_WRITE =            (1 << 0);\n-enum SHF_ALLOC =            (1 << 1);\n-enum SHF_EXECINSTR =        (1 << 2);\n-enum SHF_MERGE =            (1 << 4);\n-enum SHF_STRINGS =          (1 << 5);\n-enum SHF_INFO_LINK =        (1 << 6);\n-enum SHF_LINK_ORDER =       (1 << 7);\n-enum SHF_OS_NONCONFORMING = (1 << 8);\n-enum SHF_GROUP =            (1 << 9);\n-enum SHF_TLS =              (1 << 10);\n-enum SHF_COMPRESSED =       (1 << 11);\n-\n-enum SHF_MASKOS =           0x0ff00000;\n-enum SHF_MASKPROC =         0xf0000000;\n-\n enum NT_PRSTATUS =     1;\n enum NT_FPREGSET =     2;\n enum NT_PRPSINFO =     3;\n enum NT_TASKSTRUCT =   4;\n enum NT_AUXV =         6;\n \n-/*\n-enum NT_THRMISC =      7;\n-enum NT_PROCSTAT_PROC = 8;\n-enum NT_PROCSTAT_FILES = 9;\n-enum NT_PROCSTAT_VMMAP = 10;\n-enum NT_PROCSTAT_GROUPS = 11;\n-enum NT_PROCSTAT_UMASK = 12;\n-enum NT_PROCSTAT_RLIMIT = 13;\n-enum NT_PROCSTAT_OSREL = 14;\n-enum NT_PROCSTAT_PSSTRINGS = 15;\n-enum NT_PROCSTAT_AUXV = 16;\n-*/\n-\n-enum STN_UNDEF =       0;\n-\n-enum STB_LOCAL =       0;\n-enum STB_GLOBAL =      1;\n-enum STB_WEAK =        2;\n-enum STB_NUM =         3;\n-enum STB_LOOS =        10;\n-enum STB_HIOS =        12;\n-enum STB_LOPROC =      13;\n-enum STB_HIPROC =      15;\n-\n-enum STT_NOTYPE =      0;\n-enum STT_OBJECT =      1;\n-enum STT_FUNC =        2;\n-enum STT_SECTION =     3;\n-enum STT_FILE =        4;\n-enum STT_COMMON =      5;\n-enum STT_TLS =         6;\n-enum STT_NUM =         7;\n-enum STT_LOOS =        10;\n-enum STT_GNU_IFUNC =   10;\n-enum STT_HIOS =        12;\n-enum STT_LOPROC =      13;\n-enum STT_HIPROC =      15;\n-\n-enum STV_DEFAULT =     0;\n-enum STV_INTERNAL =    1;\n-enum STV_HIDDEN =      2;\n-enum STV_PROTECTED =   3;\n-/*\n-enum STV_EXPORTED =    4;\n-enum STV_SINGLETON =   5;\n-enum STV_ELIMINATE =   6;\n-*/\n-\n-enum DT_NULL =         0;\n-enum DT_NEEDED =       1;\n-enum DT_PLTRELSZ =     2;\n-enum DT_PLTGOT =       3;\n-enum DT_HASH =         4;\n-enum DT_STRTAB =       5;\n-enum DT_SYMTAB =       6;\n-enum DT_RELA =         7;\n-enum DT_RELASZ =       8;\n-enum DT_RELAENT =      9;\n-enum DT_STRSZ =        10;\n-enum DT_SYMENT =       11;\n-enum DT_INIT =         12;\n-enum DT_FINI =         13;\n-enum DT_SONAME =       14;\n-enum DT_RPATH =        15;\n-enum DT_SYMBOLIC =     16;\n-enum DT_REL =          17;\n-enum DT_RELSZ =        18;\n-enum DT_RELENT =       19;\n-enum DT_PLTREL =       20;\n-enum DT_DEBUG =        21;\n-enum DT_TEXTREL =      22;\n-enum DT_JMPREL =       23;\n-enum DT_BIND_NOW =     24;\n-enum DT_INIT_ARRAY =   25;\n-enum DT_FINI_ARRAY =   26;\n-enum DT_INIT_ARRAYSZ = 27;\n-enum DT_FINI_ARRAYSZ = 28;\n-enum DT_RUNPATH =      29;\n-enum DT_FLAGS =        30;\n-\n-enum DT_ENCODING =     32;\n-enum DT_PREINIT_ARRAY = 32;\n-enum DT_PREINIT_ARRAYSZ = 33;\n-//enum DT_MAXPOSTAGS =   34;\n-enum DT_LOOS =         0x6000000d;\n-enum DT_HIOS =         0x6ffff000;\n-/*\n-enum DT_SUNW_AUXILIARY = 0x6000000d;\n-enum DT_SUNW_RTLDINF = 0x6000000e;\n-enum DT_SUNW_FILTER =  0x6000000f;\n-enum DT_SUNW_CAP =     0x60000010;\n-*/\n-\n-enum DT_VALRNGLO =     0x6ffffd00;\n-enum DT_GNU_PRELINKED = 0x6ffffdf5;\n-enum DT_GNU_CONFLICTSZ =0x6ffffdf6;\n-enum DT_GNU_LIBLISTSZ = 0x6ffffdf7;\n-enum DT_CHECKSUM =     0x6ffffdf8;\n-enum DT_PLTPADSZ =     0x6ffffdf9;\n-enum DT_MOVEENT =      0x6ffffdfa;\n-enum DT_MOVESZ =       0x6ffffdfb;\n-enum DT_FEATURE_1 =    0x6ffffdfc;\n-enum DT_POSFLAG_1 =    0x6ffffdfd;\n-enum DT_SYMINSZ =      0x6ffffdfe;\n-enum DT_SYMINENT =     0x6ffffdff;\n-enum DT_VALRNGHI =     0x6ffffdff;\n-enum DT_ADDRRNGLO =    0x6ffffe00;\n-enum DT_GNU_HASH =     0x6ffffef5;\n-enum DT_TLSDESC_PLT =  0x6ffffef6;\n-enum DT_TLSDESC_GOT =  0x6ffffef7;\n-enum DT_GNU_CONFLICT = 0x6ffffef8;\n-enum DT_GNU_LIBLIST =  0x6ffffef9;\n-enum DT_CONFIG =       0x6ffffefa;\n-enum DT_DEPAUDIT =     0x6ffffefb;\n-enum DT_AUDIT =        0x6ffffefc;\n-enum DT_PLTPAD =       0x6ffffefd;\n-enum DT_MOVETAB =      0x6ffffefe;\n-enum DT_SYMINFO =      0x6ffffeff;\n-enum DT_ADDRRNGHI =    0x6ffffeff;\n-enum DT_RELACOUNT =    0x6ffffff9;\n-enum DT_RELCOUNT =     0x6ffffffa;\n-enum DT_FLAGS_1 =      0x6ffffffb;\n-enum DT_VERDEF =       0x6ffffffc;\n-enum DT_VERDEFNUM =    0x6ffffffd;\n-enum DT_VERNEED =      0x6ffffffe;\n-enum DT_VERNEEDNUM =   0x6fffffff;\n-enum DT_VERSYM =       0x6ffffff0;\n-enum DT_LOPROC =       0x70000000;\n-//enum DT_DEPRECATED_SPARC_REGISTER = 0x7000001;\n-enum DT_AUXILIARY =    0x7ffffffd;\n enum DT_USED =         0x7ffffffe;\n-enum DT_FILTER =       0x7fffffff;\n-enum DT_HIPROC =       0x7fffffff;\n-\n-enum DTF_1_PARINIT =   0x00000001;\n-enum DTF_1_CONFEXP =   0x00000002;\n-\n-enum DF_P1_LAZYLOAD =  0x00000001;\n-enum DF_P1_GROUPPERM=  0x00000002;\n \n-enum DF_1_NOW =        0x00000001;\n enum DF_1_BIND_NOW =   0x00000001;\n-enum DF_1_GLOBAL =     0x00000002;\n-enum DF_1_GROUP =      0x00000004;\n-enum DF_1_NODELETE =   0x00000008;\n-enum DF_1_LOADFLTR =   0x00000010;\n-enum DF_1_INITFIRST =  0x00000020;\n-enum DF_1_NOOPEN =     0x00000040;\n-enum DF_1_ORIGIN =     0x00000080;\n-enum DF_1_DIRECT =     0x00000100;\n-enum DF_1_TRANS =      0x00000200;\n-enum DF_1_INTERPOSE =  0x00000400;\n-enum DF_1_NODEFLIB =   0x00000800;\n-enum DF_1_NODUMP =     0x00001000;\n-enum DF_1_CONLFAT =    0x00002000;\n \n-enum DF_ORIGIN =       0x00000001;\n-enum DF_SYMBOLIC =     0x00000002;\n-enum DF_TEXTREL =      0x00000004;\n-enum DF_BIND_NOW =     0x00000008;\n-enum DF_STATIC_TLS =   0x00000010;\n-\n-enum VER_DEF_NONE =    0;\n-enum VER_DEF_CURRENT = 1;\n alias VER_NDX VER_DEF_IDX;\n \n-enum VER_FLG_BASE =    0x1;\n-enum VER_FLG_WEAK =    0x2;\n enum VER_FLG_INFO =    0x4;\n \n-enum VER_NDX_LOCAL =           0;\n-enum VER_NDX_GLOBAL =          1;\n enum VER_NDX_GIVEN =           2;\n enum VER_NDX_HIDDEN =      32768;\n+\n extern (D) pure @safe\n {\n     auto VER_NDX(V)(V v) { return v & ~(1u << 15); }\n }\n \n-enum VER_NEED_NONE   = 0;\n-enum VER_NEED_CURRENT = 1;\n enum VER_NEED_WEAK =    32768;\n enum VER_NEED_HIDDEN = VER_NDX_HIDDEN;\n alias VER_NDX VER_NEED_IDX;\n \n-/*\n-enum CA_SUNW_NULL =    0;\n-enum CA_SUNW_HW_1 =    1;\n-enum CA_SUNW_SF_1 =    2;\n-*/\n-\n enum VERSYM_HIDDEN =   0x8000;\n enum VERSYM_VERSION =  0x7fff;\n enum ELF_VER_CHR =     '@';\n-\n-enum SYMINFO_BT_SELF =         0xffff;\n-enum SYMINFO_BT_PARENT =       0xfffe;\n-//enum SYMINFO_BT_NONE =         0xfffd;\n-//enum SYMINFO_BT_EXTERN =       0xfffc;\n-enum SYMINFO_BT_LOWRESERVE =   0xff00;\n-\n-enum SYMINFO_FLG_DIRECT =      0x0001;\n-enum SYMINFO_FLG_PASSTHRU =    0x0002;\n-enum SYMINFO_FLG_COPY =        0x0004;\n-enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n-//enum SYMINFO_FLG_DIRECTBIND =  0x0010;\n-//enum SYMINFO_FLG_NOEXTDIRECT = 0x0020;\n-//enum SYMINFO_FLG_FILTER =      0x0002;\n-//enum SYMINFO_FLG_AUXILIARY =   0x0040;\n-\n-enum SYMINFO_NONE =            0;\n-enum SYMINFO_CURRENT =         1;\n-enum SYMINFO_NUM =             2;\n-\n-enum GRP_COMDAT =              0x1;\n-\n-enum R_386_NONE =               0;\n-enum R_386_32 =                 1;\n-enum R_386_PC32 =               2;\n-enum R_386_GOT32 =              3;\n-enum R_386_PLT32 =              4;\n-enum R_386_COPY =               5;\n-enum R_386_GLOB_DAT =           6;\n-enum R_386_JMP_SLOT =           7;\n-enum R_386_RELATIVE =           8;\n-enum R_386_GOTOFF =             9;\n-enum R_386_GOTPC =              10;\n-enum R_386_TLS_TPOFF =          14;\n-enum R_386_TLS_IE =             15;\n-enum R_386_TLS_GOTIE =          16;\n-enum R_386_TLS_LE =             17;\n-enum R_386_TLS_GD =             18;\n-enum R_386_TLS_LDM =            19;\n-enum R_386_TLS_GD_32 =          24;\n-enum R_386_TLS_GD_PUSH =        25;\n-enum R_386_TLS_GD_CALL =        26;\n-enum R_386_TLS_GD_POP =         27;\n-enum R_386_TLS_LDM_32 =         28;\n-enum R_386_TLS_LDM_PUSH =       29;\n-enum R_386_TLS_LDM_CALL =       30;\n-enum R_386_TLS_LDM_POP =        31;\n-enum R_386_TLS_LDO_32 =         32;\n-enum R_386_TLS_IE_32 =          33;\n-enum R_386_TLS_LE_32 =          34;\n-enum R_386_TLS_DTPMOD32 =       35;\n-enum R_386_TLS_DTPOFF32 =       36;\n-enum R_386_TLS_TPOFF32 =        37;\n-enum R_386_IRELATIVE =          42;\n-\n-enum R_X86_64_NONE =            0;\n-enum R_X86_64_64 =              1;\n-enum R_X86_64_PC32 =            2;\n-enum R_X86_64_GOT32 =           3;\n-enum R_X86_64_PLT32 =           4;\n-enum R_X86_64_COPY =            5;\n-enum R_X86_64_GLOB_DAT =        6;\n-enum R_X86_64_JMP_SLOT =        7;\n-enum R_X86_64_RELATIVE =        8;\n-enum R_X86_64_GOTPCREL =        9;\n-enum R_X86_64_32 =              10;\n-enum R_X86_64_32S =             11;\n-enum R_X86_64_16 =              12;\n-enum R_X86_64_PC16 =            13;\n-enum R_X86_64_8 =               14;\n-enum R_X86_64_PC8 =             15;\n-enum R_X86_64_DTPMOD64 =        16;\n-enum R_X86_64_DTPOFF64 =        17;\n-enum R_X86_64_TPOFF64 =         18;\n-enum R_X86_64_TLSGD =           19;\n-enum R_X86_64_TLSLD =           20;\n-enum R_X86_64_DTPOFF32 =        21;\n-enum R_X86_64_GOTTPOFF =        22;\n-enum R_X86_64_TPOFF32 =         23;\n-enum R_X86_64_IRELATIVE =       37;"}, {"sha": "5de897ab4207506005b04a74cd6333aa30adff75", "filename": "libphobos/libdruntime/core/sys/elf/package.d", "status": "added", "additions": 2532, "deletions": 0, "changes": 2532, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Felf%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Felf%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Felf%2Fpackage.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -0,0 +1,2532 @@\n+/**\n+ * D header file for standard ELF types, structures, and macros.\n+ *\n+ * $(LINK2 http://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h, glibc elf/elf.h)\n+ */\n+module core.sys.elf;\n+\n+extern (C):\n+pure:\n+nothrow:\n+@system:\n+\n+import core.stdc.stdint;\n+\n+alias uint16_t Elf32_Half;\n+alias uint16_t Elf64_Half;\n+\n+alias uint32_t Elf32_Word;\n+alias int32_t  Elf32_Sword;\n+alias uint32_t Elf64_Word;\n+alias int32_t  Elf64_Sword;\n+\n+alias uint64_t Elf32_Xword;\n+alias int64_t  Elf32_Sxword;\n+alias uint64_t Elf64_Xword;\n+alias int64_t  Elf64_Sxword;\n+\n+alias uint32_t Elf32_Addr;\n+alias uint64_t Elf64_Addr;\n+\n+alias uint32_t Elf32_Off;\n+alias uint64_t Elf64_Off;\n+\n+alias uint16_t Elf32_Section;\n+alias uint16_t Elf64_Section;\n+\n+alias Elf32_Half Elf32_Versym;\n+alias Elf64_Half Elf64_Versym;\n+\n+enum EI_NIDENT = 16;\n+\n+struct Elf32_Ehdr\n+{\n+    char[EI_NIDENT] e_ident = 0;\n+    Elf32_Half    e_type;\n+    Elf32_Half    e_machine;\n+    Elf32_Word    e_version;\n+    Elf32_Addr    e_entry;\n+    Elf32_Off     e_phoff;\n+    Elf32_Off     e_shoff;\n+    Elf32_Word    e_flags;\n+    Elf32_Half    e_ehsize;\n+    Elf32_Half    e_phentsize;\n+    Elf32_Half    e_phnum;\n+    Elf32_Half    e_shentsize;\n+    Elf32_Half    e_shnum;\n+    Elf32_Half    e_shstrndx;\n+}\n+\n+struct Elf64_Ehdr\n+{\n+    char[EI_NIDENT] e_ident = 0;\n+    Elf64_Half    e_type;\n+    Elf64_Half    e_machine;\n+    Elf64_Word    e_version;\n+    Elf64_Addr    e_entry;\n+    Elf64_Off     e_phoff;\n+    Elf64_Off     e_shoff;\n+    Elf64_Word    e_flags;\n+    Elf64_Half    e_ehsize;\n+    Elf64_Half    e_phentsize;\n+    Elf64_Half    e_phnum;\n+    Elf64_Half    e_shentsize;\n+    Elf64_Half    e_shnum;\n+    Elf64_Half    e_shstrndx;\n+}\n+\n+enum EI_MAG0 =         0;\n+enum ELFMAG0 =         0x7f;\n+\n+enum EI_MAG1 =         1;\n+enum ELFMAG1 =         'E';\n+\n+enum EI_MAG2 =         2;\n+enum ELFMAG2 =         'L';\n+\n+enum EI_MAG3 =         3;\n+enum ELFMAG3 =         'F';\n+enum ELFMAG =          \"\\177ELF\";\n+enum SELFMAG =         4;\n+\n+enum EI_CLASS =        4;\n+enum ELFCLASSNONE =    0;\n+enum ELFCLASS32 =      1;\n+enum ELFCLASS64 =      2;\n+enum ELFCLASSNUM =     3;\n+\n+enum EI_DATA =         5;\n+enum ELFDATANONE =     0;\n+enum ELFDATA2LSB =     1;\n+enum ELFDATA2MSB =     2;\n+enum ELFDATANUM =      3;\n+\n+enum EI_VERSION =      6;\n+\n+enum EI_OSABI =        7;\n+enum ELFOSABI_NONE =           0;\n+enum ELFOSABI_SYSV =           0;\n+enum ELFOSABI_HPUX =           1;\n+enum ELFOSABI_NETBSD =         2;\n+enum ELFOSABI_GNU =            3;\n+enum ELFOSABI_LINUX =          ELFOSABI_GNU;\n+enum ELFOSABI_HURD =           4;\n+enum ELFOSABI_86OPEN =         5;\n+enum ELFOSABI_SOLARIS =        6;\n+enum ELFOSABI_AIX =            7;\n+enum ELFOSABI_MONTEREY =       7;\n+enum ELFOSABI_IRIX =           8;\n+enum ELFOSABI_FREEBSD =        9;\n+enum ELFOSABI_TRU64 =          10;\n+enum ELFOSABI_MODESTO =        11;\n+enum ELFOSABI_OPENBSD =        12;\n+enum ELFOSABI_OPENVMS =        13;\n+enum ELFOSABI_NSK =            14;\n+enum ELFOSABI_AROS =           15;\n+enum ELFOSABI_ARM_AEABI =      64;\n+enum ELFOSABI_ARM =            97;\n+enum ELFOSABI_STANDALONE =     255;\n+enum ELFOSABI_DRAGONFLYBSD =   ELFOSABI_NONE;\n+\n+enum EI_ABIVERSION =   8;\n+\n+enum EI_PAD =          9;\n+\n+enum ET_NONE =         0;\n+enum ET_REL =          1;\n+enum ET_EXEC =         2;\n+enum ET_DYN =          3;\n+enum ET_CORE =         4;\n+enum ET_NUM =          5;\n+enum ET_LOOS =         0xfe00;\n+enum ET_HIOS =         0xfeff;\n+enum ET_LOPROC =       0xff00;\n+enum ET_HIPROC =       0xffff;\n+\n+enum EM_NONE =          0;\n+enum EM_M32 =           1;\n+enum EM_SPARC =         2;\n+enum EM_386 =           3;\n+enum EM_68K =           4;\n+enum EM_88K =           5;\n+enum EM_860 =           7;\n+enum EM_MIPS =          8;\n+enum EM_S370 =          9;\n+enum EM_MIPS_RS3_LE =  10;\n+\n+enum EM_PARISC =       15;\n+enum EM_VPP500 =       17;\n+enum EM_SPARC32PLUS =  18;\n+enum EM_960 =          19;\n+enum EM_PPC =          20;\n+enum EM_PPC64 =        21;\n+enum EM_S390 =         22;\n+\n+enum EM_V800 =         36;\n+enum EM_FR20 =         37;\n+enum EM_RH32 =         38;\n+enum EM_RCE =          39;\n+enum EM_ARM =          40;\n+enum EM_FAKE_ALPHA =   41;\n+enum EM_SH =           42;\n+enum EM_SPARCV9 =      43;\n+enum EM_TRICORE =      44;\n+enum EM_ARC =          45;\n+enum EM_H8_300 =       46;\n+enum EM_H8_300H =      47;\n+enum EM_H8S =          48;\n+enum EM_H8_500 =       49;\n+enum EM_IA_64 =        50;\n+enum EM_MIPS_X =       51;\n+enum EM_COLDFIRE =     52;\n+enum EM_68HC12 =       53;\n+enum EM_MMA =          54;\n+enum EM_PCP =          55;\n+enum EM_NCPU =         56;\n+enum EM_NDR1 =         57;\n+enum EM_STARCORE =     58;\n+enum EM_ME16 =         59;\n+enum EM_ST100 =        60;\n+enum EM_TINYJ =        61;\n+enum EM_X86_64 =       62;\n+enum EM_PDSP =         63;\n+\n+enum EM_FX66 =         66;\n+enum EM_ST9PLUS =      67;\n+enum EM_ST7 =          68;\n+enum EM_68HC16 =       69;\n+enum EM_68HC11 =       70;\n+enum EM_68HC08 =       71;\n+enum EM_68HC05 =       72;\n+enum EM_SVX =          73;\n+enum EM_ST19 =         74;\n+enum EM_VAX =          75;\n+enum EM_CRIS =         76;\n+enum EM_JAVELIN =      77;\n+enum EM_FIREPATH =     78;\n+enum EM_ZSP =          79;\n+enum EM_MMIX =         80;\n+enum EM_HUANY =        81;\n+enum EM_PRISM =        82;\n+enum EM_AVR =          83;\n+enum EM_FR30 =         84;\n+enum EM_D10V =         85;\n+enum EM_D30V =         86;\n+enum EM_V850 =         87;\n+enum EM_M32R =         88;\n+enum EM_MN10300 =      89;\n+enum EM_MN10200 =      90;\n+enum EM_PJ =           91;\n+enum EM_OPENRISC =     92;\n+enum EM_ARC_A5 =       93;\n+enum EM_XTENSA =       94;\n+enum EM_VIDEOCORE =    95;\n+enum EM_TMM_GPP =      96;\n+enum EM_NS32K =        97;\n+enum EM_TPC =          98;\n+enum EM_SNP1K =        99;\n+enum EM_ST200 =       100;\n+enum EM_IP2K =        101;\n+enum EM_MAX =         102;\n+enum EM_CR =          103;\n+enum EM_F2MC16 =      104;\n+enum EM_MSP430 =      105;\n+enum EM_BLACKFIN =    106;\n+enum EM_SE_C33 =      107;\n+enum EM_SEP =         108;\n+enum EM_ARCA =        109;\n+enum EM_UNICORE =     110;\n+enum EM_DXP =         112;\n+enum EM_ALTERA_NIOS2 = 113;\n+enum EM_CRX =         114;\n+enum EM_XGATE =       115;\n+enum EM_C166  =       116;\n+enum EM_M16C  =       117;\n+enum EM_DSPIC30F =    118;\n+enum EM_CE =          119;\n+enum EM_M32C  =       120;\n+enum EM_res121 =      121;\n+enum EM_res122 =      122;\n+enum EM_res123 =      123;\n+enum EM_res124 =      124;\n+enum EM_res125 =      125;\n+enum EM_res126 =      126;\n+enum EM_res127 =      127;\n+enum EM_res128 =      128;\n+enum EM_res129 =      129;\n+enum EM_res130 =      130;\n+enum EM_TSK3000 =     131;\n+enum EM_RS08  =       132;\n+enum EM_res133 =      133;\n+enum EM_ECOG2 =       134;\n+enum EM_SCORE =       135;\n+enum EM_SCORE7 =      135;\n+enum EM_DSP24 =       136;\n+enum EM_VIDEOCORE3 =  137;\n+enum EM_LATTICEMICO32 = 138;\n+enum EM_SE_C17 =      139;\n+enum EM_TI_C6000 =    140;\n+enum EM_TI_C2000 =    141;\n+enum EM_TI_C5500 =    142;\n+enum EM_TI_ARP32 =    143;\n+enum EM_TI_PRU =      144;\n+enum EM_MMDSP_PLUS =  160;\n+enum EM_CYPRESS_M8C = 161;\n+enum EM_R32C  =       162;\n+enum EM_TRIMEDIA =    163;\n+enum EM_QDSP6 =       164;\n+enum EM_8051  =       165;\n+enum EM_STXP7X =      166;\n+enum EM_NDS32 =       167;\n+enum EM_ECOG1 =       168;\n+enum EM_ECOG1X =      168;\n+enum EM_MAXQ30 =      169;\n+enum EM_XIMO16 =      170;\n+enum EM_MANIK =       171;\n+enum EM_CRAYNV2 =     172;\n+enum EM_RX =          173;\n+enum EM_METAG =       174;\n+enum EM_MCST_ELBRUS = 175;\n+enum EM_ECOG16 =      176;\n+enum EM_CR16  =       177;\n+enum EM_ETPU  =       178;\n+enum EM_SLE9X =       179;\n+enum EM_L1OM  =       180;\n+enum EM_K1OM  =       181;\n+enum EM_INTEL182 =    182;\n+enum EM_AARCH64 =     183;\n+enum EM_AVR32 =       185;\n+enum EM_STM8  =       186;\n+enum EM_TILE64 =      187;\n+enum EM_TILEPRO =     188;\n+enum EM_MICROBLAZE =  189;\n+enum EM_CUDA  =       190;\n+enum EM_TILEGX =      191;\n+enum EM_CLOUDSHIELD = 192;\n+enum EM_COREA_1ST =   193;\n+enum EM_COREA_2ND =   194;\n+enum EM_ARCV2 =       195;\n+enum EM_OPEN8 =       196;\n+enum EM_RL78 =        197;\n+enum EM_VIDEOCORE5 =  198;\n+enum EM_78KOR =       199;\n+enum EM_56800EX =     200;\n+enum EM_BA1 =         201;\n+enum EM_BA2 =         202;\n+enum EM_XCORE =       203;\n+enum EM_MCHP_PIC =    204;\n+enum EM_INTELGT =     205;\n+\n+enum EM_KM32 =        210;\n+enum EM_KMX32 =       211;\n+enum EM_EMX16 =       212;\n+enum EM_EMX8 =        213;\n+enum EM_KVARC =       214;\n+enum EM_CDP =         215;\n+enum EM_COGE =        216;\n+enum EM_COOL =        217;\n+enum EM_NORC =        218;\n+enum EM_CSR_KALIMBA = 219;\n+enum EM_Z80 =         220;\n+enum EM_VISIUM =      221;\n+enum EM_FT32 =        222;\n+enum EM_MOXIE =       223;\n+enum EM_AMDGPU =      224;\n+\n+enum EM_RISCV =       243;\n+\n+enum EM_BPF =         247;\n+enum EM_CSKY =        252;\n+\n+enum EM_NUM =         253;\n+\n+enum EM_ALPHA =        0x9026;\n+\n+enum EV_NONE =         0;\n+enum EV_CURRENT =      1;\n+enum EV_NUM =          2;\n+\n+struct Elf32_Shdr\n+{\n+  Elf32_Word    sh_name;\n+  Elf32_Word    sh_type;\n+  Elf32_Word    sh_flags;\n+  Elf32_Addr    sh_addr;\n+  Elf32_Off     sh_offset;\n+  Elf32_Word    sh_size;\n+  Elf32_Word    sh_link;\n+  Elf32_Word    sh_info;\n+  Elf32_Word    sh_addralign;\n+  Elf32_Word    sh_entsize;\n+}\n+\n+struct Elf64_Shdr\n+{\n+  Elf64_Word    sh_name;\n+  Elf64_Word    sh_type;\n+  Elf64_Xword   sh_flags;\n+  Elf64_Addr    sh_addr;\n+  Elf64_Off     sh_offset;\n+  Elf64_Xword   sh_size;\n+  Elf64_Word    sh_link;\n+  Elf64_Word    sh_info;\n+  Elf64_Xword   sh_addralign;\n+  Elf64_Xword   sh_entsize;\n+}\n+\n+enum SHN_UNDEF =       0;\n+enum SHN_LORESERVE =   0xff00;\n+enum SHN_LOPROC =      0xff00;\n+enum SHN_BEFORE =      0xff00;\n+enum SHN_AFTER =       0xff01;\n+enum SHN_HIPROC =      0xff1f;\n+enum SHN_LOOS =        0xff20;\n+enum SHN_HIOS =        0xff3f;\n+enum SHN_ABS =         0xfff1;\n+enum SHN_COMMON =      0xfff2;\n+enum SHN_XINDEX =      0xffff;\n+enum SHN_HIRESERVE =   0xffff;\n+\n+enum SHT_NULL =          0;\n+enum SHT_PROGBITS =      1;\n+enum SHT_SYMTAB =        2;\n+enum SHT_STRTAB =        3;\n+enum SHT_RELA =          4;\n+enum SHT_HASH =          5;\n+enum SHT_DYNAMIC =       6;\n+enum SHT_NOTE =          7;\n+enum SHT_NOBITS =        8;\n+enum SHT_REL =           9;\n+enum SHT_SHLIB =         10;\n+enum SHT_DYNSYM =        11;\n+enum SHT_INIT_ARRAY =    14;\n+enum SHT_FINI_ARRAY =    15;\n+enum SHT_PREINIT_ARRAY = 16;\n+enum SHT_GROUP =         17;\n+enum SHT_SYMTAB_SHNDX =  18;\n+enum SHT_NUM =           19;\n+enum SHT_LOOS =          0x60000000;\n+enum SHT_GNU_ATTRIBUTES = 0x6ffffff5;\n+enum SHT_GNU_HASH =      0x6ffffff6;\n+enum SHT_GNU_LIBLIST =   0x6ffffff7;\n+enum SHT_CHECKSUM =      0x6ffffff8;\n+enum SHT_LOSUNW =        0x6ffffffa;\n+enum SHT_SUNW_move =     0x6ffffffa;\n+enum SHT_SUNW_COMDAT =   0x6ffffffb;\n+enum SHT_SUNW_syminfo =  0x6ffffffc;\n+enum SHT_GNU_verdef =    0x6ffffffd;\n+enum SHT_GNU_verneed =   0x6ffffffe;\n+enum SHT_GNU_versym =    0x6fffffff;\n+enum SHT_HISUNW =        0x6fffffff;\n+enum SHT_HIOS =          0x6fffffff;\n+enum SHT_LOPROC =        0x70000000;\n+enum SHT_HIPROC =        0x7fffffff;\n+enum SHT_LOUSER =        0x80000000;\n+enum SHT_HIUSER =        0x8fffffff;\n+\n+enum SHF_WRITE =            (1 << 0);\n+enum SHF_ALLOC =            (1 << 1);\n+enum SHF_EXECINSTR =        (1 << 2);\n+enum SHF_MERGE =            (1 << 4);\n+enum SHF_STRINGS =          (1 << 5);\n+enum SHF_INFO_LINK =        (1 << 6);\n+enum SHF_LINK_ORDER =       (1 << 7);\n+enum SHF_OS_NONCONFORMING = (1 << 8);\n+enum SHF_GROUP =            (1 << 9);\n+enum SHF_TLS =              (1 << 10);\n+enum SHF_COMPRESSED =       (1 << 11);\n+enum SHF_MASKOS =           0x0ff00000;\n+enum SHF_MASKPROC =         0xf0000000;\n+enum SHF_ORDERED =          (1 << 30);\n+enum SHF_EXCLUDE =          (1 << 31);\n+enum GRP_COMDAT =      0x1;\n+\n+struct Elf32_Sym\n+{\n+  Elf32_Word    st_name;\n+  Elf32_Addr    st_value;\n+  Elf32_Word    st_size;\n+  ubyte st_info;\n+  ubyte st_other;\n+  Elf32_Section st_shndx;\n+}\n+\n+struct Elf64_Sym\n+{\n+  Elf64_Word    st_name;\n+  ubyte st_info;\n+  ubyte st_other;\n+  Elf64_Section st_shndx;\n+  Elf64_Addr    st_value;\n+  Elf64_Xword   st_size;\n+}\n+\n+struct Elf32_Syminfo\n+{\n+  Elf32_Half si_boundto;\n+  Elf32_Half si_flags;\n+}\n+\n+struct Elf64_Syminfo\n+{\n+  Elf64_Half si_boundto;\n+  Elf64_Half si_flags;\n+}\n+\n+enum SYMINFO_BT_SELF =         0xffff;\n+enum SYMINFO_BT_PARENT =       0xfffe;\n+enum SYMINFO_BT_LOWRESERVE =   0xff00;\n+\n+enum SYMINFO_FLG_DIRECT =      0x0001;\n+enum SYMINFO_FLG_PASSTHRU =    0x0002;\n+enum SYMINFO_FLG_COPY =        0x0004;\n+enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n+\n+enum SYMINFO_NONE =            0;\n+enum SYMINFO_CURRENT =         1;\n+enum SYMINFO_NUM =             2;\n+\n+extern (D)\n+{\n+    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n+    auto ELF32_ST_TYPE(T)(T val) { return val & 0xf; }\n+    auto ELF32_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n+    alias ELF32_ST_BIND ELF64_ST_BIND;\n+    alias ELF32_ST_TYPE ELF64_ST_TYPE;\n+    alias ELF32_ST_INFO ELF64_ST_INFO;\n+}\n+\n+enum STB_LOCAL =       0;\n+enum STB_GLOBAL =      1;\n+enum STB_WEAK =        2;\n+enum STB_NUM =         3;\n+enum STB_LOOS =        10;\n+enum STB_GNU_UNIQUE =  10;\n+enum STB_HIOS =        12;\n+enum STB_LOPROC =      13;\n+enum STB_HIPROC =      15;\n+\n+enum STT_NOTYPE =      0;\n+enum STT_OBJECT =      1;\n+enum STT_FUNC =        2;\n+enum STT_SECTION =     3;\n+enum STT_FILE =        4;\n+enum STT_COMMON =      5;\n+enum STT_TLS =         6;\n+enum STT_NUM =         7;\n+enum STT_LOOS =        10;\n+enum STT_GNU_IFUNC =   10;\n+enum STT_HIOS =        12;\n+enum STT_LOPROC =      13;\n+enum STT_HIPROC =      15;\n+\n+enum STN_UNDEF =       0;\n+\n+enum STV_DEFAULT =     0;\n+enum STV_INTERNAL =    1;\n+enum STV_HIDDEN =      2;\n+enum STV_PROTECTED =   3;\n+\n+struct Elf32_Rel\n+{\n+  Elf32_Addr    r_offset;\n+  Elf32_Word    r_info;\n+}\n+\n+struct Elf64_Rel\n+{\n+  Elf64_Addr    r_offset;\n+  Elf64_Xword   r_info;\n+}\n+\n+struct Elf32_Rela\n+{\n+  Elf32_Addr    r_offset;\n+  Elf32_Word    r_info;\n+  Elf32_Sword   r_addend;\n+}\n+\n+struct Elf64_Rela\n+{\n+  Elf64_Addr    r_offset;\n+  Elf64_Xword   r_info;\n+  Elf64_Sxword  r_addend;\n+}\n+\n+extern (D)\n+{\n+    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n+    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n+    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n+\n+    auto ELF64_R_SYM(I)(I i) { return i >> 32; }\n+    auto ELF64_R_TYPE(I)(I i) { return i & 0xffffffff; }\n+    auto ELF64_R_INFO(S, T)(S sym, T type) { return (sym << 32) + (type); }\n+}\n+\n+struct Elf32_Phdr\n+{\n+  Elf32_Word    p_type;\n+  Elf32_Off     p_offset;\n+  Elf32_Addr    p_vaddr;\n+  Elf32_Addr    p_paddr;\n+  Elf32_Word    p_filesz;\n+  Elf32_Word    p_memsz;\n+  Elf32_Word    p_flags;\n+  Elf32_Word    p_align;\n+}\n+\n+struct Elf64_Phdr\n+{\n+  Elf64_Word    p_type;\n+  Elf64_Word    p_flags;\n+  Elf64_Off     p_offset;\n+  Elf64_Addr    p_vaddr;\n+  Elf64_Addr    p_paddr;\n+  Elf64_Xword   p_filesz;\n+  Elf64_Xword   p_memsz;\n+  Elf64_Xword   p_align;\n+}\n+\n+enum PN_XNUM =         0xffff;\n+\n+enum PT_NULL =         0;\n+enum PT_LOAD =         1;\n+enum PT_DYNAMIC =      2;\n+enum PT_INTERP =       3;\n+enum PT_NOTE =         4;\n+enum PT_SHLIB =        5;\n+enum PT_PHDR =         6;\n+enum PT_TLS =          7;\n+enum PT_NUM =          8;\n+enum PT_LOOS =         0x60000000;\n+enum PT_GNU_EH_FRAME = 0x6474e550;\n+enum PT_GNU_STACK =    0x6474e551;\n+enum PT_GNU_RELRO =    0x6474e552;\n+enum PT_LOSUNW =       0x6ffffffa;\n+enum PT_SUNWBSS =      0x6ffffffa;\n+enum PT_SUNWSTACK =    0x6ffffffb;\n+enum PT_HISUNW =       0x6fffffff;\n+enum PT_HIOS =         0x6fffffff;\n+enum PT_LOPROC =       0x70000000;\n+enum PT_HIPROC =       0x7fffffff;\n+\n+enum PF_X =            (1 << 0);\n+enum PF_W =            (1 << 1);\n+enum PF_R =            (1 << 2);\n+enum PF_MASKOS =       0x0ff00000;\n+enum PF_MASKPROC =     0xf0000000;\n+\n+struct Elf32_Dyn\n+{\n+  Elf32_Sword   d_tag;\n+  union _d_un\n+  {\n+      Elf32_Word d_val;\n+      Elf32_Addr d_ptr;\n+  } _d_un d_un;\n+}\n+\n+struct Elf64_Dyn\n+{\n+  Elf64_Sxword  d_tag;\n+  union _d_un\n+  {\n+      Elf64_Xword d_val;\n+      Elf64_Addr d_ptr;\n+  } _d_un d_un;\n+}\n+\n+enum DT_NULL =         0;\n+enum DT_NEEDED =       1;\n+enum DT_PLTRELSZ =     2;\n+enum DT_PLTGOT =       3;\n+enum DT_HASH =         4;\n+enum DT_STRTAB =       5;\n+enum DT_SYMTAB =       6;\n+enum DT_RELA =         7;\n+enum DT_RELASZ =       8;\n+enum DT_RELAENT =      9;\n+enum DT_STRSZ =        10;\n+enum DT_SYMENT =       11;\n+enum DT_INIT =         12;\n+enum DT_FINI =         13;\n+enum DT_SONAME =       14;\n+enum DT_RPATH =        15;\n+enum DT_SYMBOLIC =     16;\n+enum DT_REL =          17;\n+enum DT_RELSZ =        18;\n+enum DT_RELENT =       19;\n+enum DT_PLTREL =       20;\n+enum DT_DEBUG =        21;\n+enum DT_TEXTREL =      22;\n+enum DT_JMPREL =       23;\n+enum DT_BIND_NOW =     24;\n+enum DT_INIT_ARRAY =   25;\n+enum DT_FINI_ARRAY =   26;\n+enum DT_INIT_ARRAYSZ = 27;\n+enum DT_FINI_ARRAYSZ = 28;\n+enum DT_RUNPATH =      29;\n+enum DT_FLAGS =        30;\n+enum DT_ENCODING =     32;\n+enum DT_PREINIT_ARRAY = 32;\n+enum DT_PREINIT_ARRAYSZ = 33;\n+enum DT_NUM =          34;\n+enum DT_LOOS =         0x6000000d;\n+enum DT_HIOS =         0x6ffff000;\n+enum DT_LOPROC =       0x70000000;\n+enum DT_HIPROC =       0x7fffffff;\n+enum DT_PROCNUM =      DT_MIPS_NUM;\n+enum DT_VALRNGLO =     0x6ffffd00;\n+enum DT_GNU_PRELINKED = 0x6ffffdf5;\n+enum DT_GNU_CONFLICTSZ = 0x6ffffdf6;\n+enum DT_GNU_LIBLISTSZ = 0x6ffffdf7;\n+enum DT_CHECKSUM =     0x6ffffdf8;\n+enum DT_PLTPADSZ =     0x6ffffdf9;\n+enum DT_MOVEENT =      0x6ffffdfa;\n+enum DT_MOVESZ =       0x6ffffdfb;\n+enum DT_FEATURE_1 =    0x6ffffdfc;\n+enum DT_POSFLAG_1 =    0x6ffffdfd;\n+enum DT_SYMINSZ =      0x6ffffdfe;\n+enum DT_SYMINENT =     0x6ffffdff;\n+enum DT_VALRNGHI =     0x6ffffdff;\n+extern (D) auto DT_VALTAGIDX(T)(T tag)\n+{\n+    return DT_VALRNGHI - tag;\n+}\n+enum DT_VALNUM = 12;\n+enum DT_ADDRRNGLO =    0x6ffffe00;\n+enum DT_GNU_HASH =     0x6ffffef5;\n+enum DT_TLSDESC_PLT =  0x6ffffef6;\n+enum DT_TLSDESC_GOT =  0x6ffffef7;\n+enum DT_GNU_CONFLICT = 0x6ffffef8;\n+enum DT_GNU_LIBLIST =  0x6ffffef9;\n+enum DT_CONFIG =       0x6ffffefa;\n+enum DT_DEPAUDIT =     0x6ffffefb;\n+enum DT_AUDIT =        0x6ffffefc;\n+enum DT_PLTPAD =       0x6ffffefd;\n+enum DT_MOVETAB =      0x6ffffefe;\n+enum DT_SYMINFO =      0x6ffffeff;\n+enum DT_ADDRRNGHI =    0x6ffffeff;\n+extern (D) auto DT_ADDRTAGIDX(T)(T tag)\n+{\n+    return DT_ADDRRNGHI - tag;\n+}\n+enum DT_ADDRNUM = 11;\n+enum DT_VERSYM =       0x6ffffff0;\n+\n+enum DT_RELACOUNT =    0x6ffffff9;\n+enum DT_RELCOUNT =     0x6ffffffa;\n+enum DT_FLAGS_1 =      0x6ffffffb;\n+enum DT_VERDEF =       0x6ffffffc;\n+enum DT_VERDEFNUM =    0x6ffffffd;\n+enum DT_VERNEED =      0x6ffffffe;\n+enum DT_VERNEEDNUM =   0x6fffffff;\n+extern (D) auto DT_VERSIONTAGIDX(T)(T tag)\n+{\n+    return DT_VERNEEDNUM - tag;\n+}\n+enum DT_VERSIONTAGNUM = 16;\n+enum DT_AUXILIARY =    0x7ffffffd;\n+enum DT_FILTER =       0x7fffffff;\n+extern (D) auto DT_EXTRATAGIDX(T)(T tag)\n+{\n+    return cast(Elf32_Word)(-(cast(Elf32_Sword)(tag) <<1>>1)-1);\n+}\n+enum DT_EXTRANUM =     3;\n+enum DF_ORIGIN =       0x00000001;\n+enum DF_SYMBOLIC =     0x00000002;\n+enum DF_TEXTREL =      0x00000004;\n+enum DF_BIND_NOW =     0x00000008;\n+enum DF_STATIC_TLS =   0x00000010;\n+enum DF_1_NOW =        0x00000001;\n+enum DF_1_GLOBAL =     0x00000002;\n+enum DF_1_GROUP =      0x00000004;\n+enum DF_1_NODELETE =   0x00000008;\n+enum DF_1_LOADFLTR =   0x00000010;\n+enum DF_1_INITFIRST =  0x00000020;\n+enum DF_1_NOOPEN =     0x00000040;\n+enum DF_1_ORIGIN =     0x00000080;\n+enum DF_1_DIRECT =     0x00000100;\n+enum DF_1_TRANS =      0x00000200;\n+enum DF_1_INTERPOSE =  0x00000400;\n+enum DF_1_NODEFLIB =   0x00000800;\n+enum DF_1_NODUMP =     0x00001000;\n+enum DF_1_CONFALT =    0x00002000;\n+enum DF_1_ENDFILTEE =  0x00004000;\n+enum DF_1_DISPRELDNE = 0x00008000;\n+enum DF_1_DISPRELPND = 0x00010000;\n+enum DF_1_NODIRECT =   0x00020000;\n+enum DF_1_IGNMULDEF =  0x00040000;\n+enum DF_1_NOKSYMS =    0x00080000;\n+enum DF_1_NOHDR =      0x00100000;\n+enum DF_1_EDITED =     0x00200000;\n+enum DF_1_NORELOC =    0x00400000;\n+enum DF_1_SYMINTPOSE = 0x00800000;\n+enum DF_1_GLOBAUDIT =  0x01000000;\n+enum DF_1_SINGLETON =  0x02000000;\n+enum DTF_1_PARINIT =   0x00000001;\n+enum DTF_1_CONFEXP =   0x00000002;\n+enum DF_P1_LAZYLOAD =  0x00000001;\n+enum DF_P1_GROUPPERM = 0x00000002;\n+\n+struct Elf32_Verdef\n+{\n+    Elf32_Half    vd_version;\n+    Elf32_Half    vd_flags;\n+    Elf32_Half    vd_ndx;\n+    Elf32_Half    vd_cnt;\n+    Elf32_Word    vd_hash;\n+    Elf32_Word    vd_aux;\n+    Elf32_Word    vd_next;\n+}\n+\n+struct Elf64_Verdef\n+{\n+    Elf64_Half    vd_version;\n+    Elf64_Half    vd_flags;\n+    Elf64_Half    vd_ndx;\n+    Elf64_Half    vd_cnt;\n+    Elf64_Word    vd_hash;\n+    Elf64_Word    vd_aux;\n+    Elf64_Word    vd_next;\n+}\n+enum VER_DEF_NONE =    0;\n+enum VER_DEF_CURRENT = 1;\n+enum VER_DEF_NUM =     2;\n+enum VER_FLG_BASE =    0x1;\n+enum VER_FLG_WEAK =    0x2;\n+enum VER_NDX_LOCAL =           0;\n+enum VER_NDX_GLOBAL =          1;\n+enum VER_NDX_LORESERVE =       0xff00;\n+enum VER_NDX_ELIMINATE =       0xff01;\n+\n+struct Elf32_Verdaux\n+{\n+    Elf32_Word    vda_name;\n+    Elf32_Word    vda_next;\n+}\n+\n+struct Elf64_Verdaux\n+{\n+    Elf64_Word    vda_name;\n+    Elf64_Word    vda_next;\n+}\n+\n+struct Elf32_Verneed\n+{\n+    Elf32_Half    vn_version;\n+    Elf32_Half    vn_cnt;\n+    Elf32_Word    vn_file;\n+    Elf32_Word    vn_aux;\n+    Elf32_Word    vn_next;\n+}\n+\n+struct Elf64_Verneed\n+{\n+    Elf64_Half    vn_version;\n+    Elf64_Half    vn_cnt;\n+    Elf64_Word    vn_file;\n+    Elf64_Word    vn_aux;\n+    Elf64_Word    vn_next;\n+}\n+enum VER_NEED_NONE =    0;\n+enum VER_NEED_CURRENT = 1;\n+enum VER_NEED_NUM =     2;\n+\n+struct Elf32_Vernaux\n+{\n+    Elf32_Word    vna_hash;\n+    Elf32_Half    vna_flags;\n+    Elf32_Half    vna_other;\n+    Elf32_Word    vna_name;\n+    Elf32_Word    vna_next;\n+}\n+\n+struct Elf64_Vernaux\n+{\n+    Elf64_Word    vna_hash;\n+    Elf64_Half    vna_flags;\n+    Elf64_Half    vna_other;\n+    Elf64_Word    vna_name;\n+    Elf64_Word    vna_next;\n+}\n+\n+enum ELF_NOTE_SOLARIS =        \"SUNW Solaris\";\n+enum ELF_NOTE_GNU =            \"GNU\";\n+enum ELF_NOTE_PAGESIZE_HINT =  1;\n+enum ELF_NOTE_ABI =    1;\n+enum ELF_NOTE_OS_LINUX =       0;\n+enum ELF_NOTE_OS_GNU =         1;\n+enum ELF_NOTE_OS_SOLARIS2 =    2;\n+enum ELF_NOTE_OS_FREEBSD =     3;\n+\n+struct Elf32_Move\n+{\n+  Elf32_Xword m_value;\n+  Elf32_Word m_info;\n+  Elf32_Word m_poffset;\n+  Elf32_Half m_repeat;\n+  Elf32_Half m_stride;\n+}\n+\n+struct Elf64_Move\n+{\n+  Elf64_Xword m_value;\n+  Elf64_Xword m_info;\n+  Elf64_Xword m_poffset;\n+  Elf64_Half m_repeat;\n+  Elf64_Half m_stride;\n+}\n+extern (D)\n+{\n+    auto ELF32_M_SYM(I)(I info) { return info >> 8; }\n+    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n+    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n+}\n+\n+alias ELF32_M_SYM ELF64_M_SYM;\n+alias ELF32_M_SIZE ELF64_M_SIZE;\n+alias ELF32_M_INFO ELF64_M_INFO;\n+enum EF_CPU32 =        0x00810000;\n+\n+enum R_68K_NONE =      0;\n+enum R_68K_32 =        1;\n+enum R_68K_16 =        2;\n+enum R_68K_8 =         3;\n+enum R_68K_PC32 =      4;\n+enum R_68K_PC16 =      5;\n+enum R_68K_PC8 =       6;\n+enum R_68K_GOT32 =     7;\n+enum R_68K_GOT16 =     8;\n+enum R_68K_GOT8 =      9;\n+enum R_68K_GOT32O =    10;\n+enum R_68K_GOT16O =    11;\n+enum R_68K_GOT8O =     12;\n+enum R_68K_PLT32 =     13;\n+enum R_68K_PLT16 =     14;\n+enum R_68K_PLT8 =      15;\n+enum R_68K_PLT32O =    16;\n+enum R_68K_PLT16O =    17;\n+enum R_68K_PLT8O =     18;\n+enum R_68K_COPY =      19;\n+enum R_68K_GLOB_DAT =  20;\n+enum R_68K_JMP_SLOT =  21;\n+enum R_68K_RELATIVE =  22;\n+enum R_68K_TLS_GD32 =      25;\n+enum R_68K_TLS_GD16 =      26;\n+enum R_68K_TLS_GD8 =       27;\n+enum R_68K_TLS_LDM32 =     28;\n+enum R_68K_TLS_LDM16 =     29;\n+enum R_68K_TLS_LDM8 =      30;\n+enum R_68K_TLS_LDO32 =     31;\n+enum R_68K_TLS_LDO16 =     32;\n+enum R_68K_TLS_LDO8 =      33;\n+enum R_68K_TLS_IE32 =      34;\n+enum R_68K_TLS_IE16 =      35;\n+enum R_68K_TLS_IE8 =       36;\n+enum R_68K_TLS_LE32 =      37;\n+enum R_68K_TLS_LE16 =      38;\n+enum R_68K_TLS_LE8 =       39;\n+enum R_68K_TLS_DTPMOD32 =  40;\n+enum R_68K_TLS_DTPREL32 =  41;\n+enum R_68K_TLS_TPREL32 =   42;\n+enum R_68K_NUM =       43;\n+\n+enum R_386_NONE =         0;\n+enum R_386_32 =           1;\n+enum R_386_PC32 =         2;\n+enum R_386_GOT32 =        3;\n+enum R_386_PLT32 =        4;\n+enum R_386_COPY =         5;\n+enum R_386_GLOB_DAT =     6;\n+enum R_386_JMP_SLOT =     7;\n+enum R_386_RELATIVE =     8;\n+enum R_386_GOTOFF =       9;\n+enum R_386_GOTPC =        10;\n+enum R_386_32PLT =        11;\n+enum R_386_TLS_TPOFF =    14;\n+enum R_386_TLS_IE =       15;\n+enum R_386_TLS_GOTIE =    16;\n+enum R_386_TLS_LE =       17;\n+enum R_386_TLS_GD =       18;\n+enum R_386_TLS_LDM =      19;\n+enum R_386_16 =           20;\n+enum R_386_PC16 =         21;\n+enum R_386_8 =            22;\n+enum R_386_PC8 =          23;\n+enum R_386_TLS_GD_32 =    24;\n+enum R_386_TLS_GD_PUSH =  25;\n+enum R_386_TLS_GD_CALL =  26;\n+enum R_386_TLS_GD_POP =   27;\n+enum R_386_TLS_LDM_32 =   28;\n+enum R_386_TLS_LDM_PUSH = 29;\n+enum R_386_TLS_LDM_CALL = 30;\n+enum R_386_TLS_LDM_POP =  31;\n+enum R_386_TLS_LDO_32 =   32;\n+enum R_386_TLS_IE_32 =    33;\n+enum R_386_TLS_LE_32 =    34;\n+enum R_386_TLS_DTPMOD32 = 35;\n+enum R_386_TLS_DTPOFF32 = 36;\n+enum R_386_TLS_TPOFF32 =  37;\n+enum R_386_SIZE32 =       38;\n+enum R_386_TLS_GOTDESC =  39;\n+enum R_386_TLS_DESC_CALL = 40;\n+enum R_386_TLS_DESC =     41;\n+enum R_386_IRELATIVE =    42;\n+enum R_386_NUM =          43;\n+\n+enum STT_SPARC_REGISTER =      13;\n+\n+enum EF_SPARCV9_MM =           3;\n+enum EF_SPARCV9_TSO =          0;\n+enum EF_SPARCV9_PSO =          1;\n+enum EF_SPARCV9_RMO =          2;\n+enum EF_SPARC_LEDATA =         0x800000;\n+enum EF_SPARC_EXT_MASK =       0xFFFF00;\n+enum EF_SPARC_32PLUS =         0x000100;\n+enum EF_SPARC_SUN_US1 =        0x000200;\n+enum EF_SPARC_HAL_R1 =         0x000400;\n+enum EF_SPARC_SUN_US3 =        0x000800;\n+\n+enum R_SPARC_NONE =            0;\n+enum R_SPARC_8 =               1;\n+enum R_SPARC_16 =              2;\n+enum R_SPARC_32 =              3;\n+enum R_SPARC_DISP8 =           4;\n+enum R_SPARC_DISP16 =          5;\n+enum R_SPARC_DISP32 =          6;\n+enum R_SPARC_WDISP30 =         7;\n+enum R_SPARC_WDISP22 =         8;\n+enum R_SPARC_HI22 =            9;\n+enum R_SPARC_22 =              10;\n+enum R_SPARC_13 =              11;\n+enum R_SPARC_LO10 =            12;\n+enum R_SPARC_GOT10 =           13;\n+enum R_SPARC_GOT13 =           14;\n+enum R_SPARC_GOT22 =           15;\n+enum R_SPARC_PC10 =            16;\n+enum R_SPARC_PC22 =            17;\n+enum R_SPARC_WPLT30 =          18;\n+enum R_SPARC_COPY =            19;\n+enum R_SPARC_GLOB_DAT =        20;\n+enum R_SPARC_JMP_SLOT =        21;\n+enum R_SPARC_RELATIVE =        22;\n+enum R_SPARC_UA32 =            23;\n+\n+enum R_SPARC_PLT32 =           24;\n+enum R_SPARC_HIPLT22 =         25;\n+enum R_SPARC_LOPLT10 =         26;\n+enum R_SPARC_PCPLT32 =         27;\n+enum R_SPARC_PCPLT22 =         28;\n+enum R_SPARC_PCPLT10 =         29;\n+enum R_SPARC_10 =              30;\n+enum R_SPARC_11 =              31;\n+enum R_SPARC_64 =              32;\n+enum R_SPARC_OLO10 =           33;\n+enum R_SPARC_HH22 =            34;\n+enum R_SPARC_HM10 =            35;\n+enum R_SPARC_LM22 =            36;\n+enum R_SPARC_PC_HH22 =         37;\n+enum R_SPARC_PC_HM10 =         38;\n+enum R_SPARC_PC_LM22 =         39;\n+enum R_SPARC_WDISP16 =         40;\n+enum R_SPARC_WDISP19 =         41;\n+enum R_SPARC_GLOB_JMP =        42;\n+enum R_SPARC_7 =               43;\n+enum R_SPARC_5 =               44;\n+enum R_SPARC_6 =               45;\n+enum R_SPARC_DISP64 =          46;\n+enum R_SPARC_PLT64 =           47;\n+enum R_SPARC_HIX22 =           48;\n+enum R_SPARC_LOX10 =           49;\n+enum R_SPARC_H44 =             50;\n+enum R_SPARC_M44 =             51;\n+enum R_SPARC_L44 =             52;\n+enum R_SPARC_REGISTER =        53;\n+enum R_SPARC_UA64 =            54;\n+enum R_SPARC_UA16 =            55;\n+enum R_SPARC_TLS_GD_HI22 =     56;\n+enum R_SPARC_TLS_GD_LO10 =     57;\n+enum R_SPARC_TLS_GD_ADD =      58;\n+enum R_SPARC_TLS_GD_CALL =     59;\n+enum R_SPARC_TLS_LDM_HI22 =    60;\n+enum R_SPARC_TLS_LDM_LO10 =    61;\n+enum R_SPARC_TLS_LDM_ADD =     62;\n+enum R_SPARC_TLS_LDM_CALL =    63;\n+enum R_SPARC_TLS_LDO_HIX22 =   64;\n+enum R_SPARC_TLS_LDO_LOX10 =   65;\n+enum R_SPARC_TLS_LDO_ADD =     66;\n+enum R_SPARC_TLS_IE_HI22 =     67;\n+enum R_SPARC_TLS_IE_LO10 =     68;\n+enum R_SPARC_TLS_IE_LD =       69;\n+enum R_SPARC_TLS_IE_LDX =      70;\n+enum R_SPARC_TLS_IE_ADD =      71;\n+enum R_SPARC_TLS_LE_HIX22 =    72;\n+enum R_SPARC_TLS_LE_LOX10 =    73;\n+enum R_SPARC_TLS_DTPMOD32 =    74;\n+enum R_SPARC_TLS_DTPMOD64 =    75;\n+enum R_SPARC_TLS_DTPOFF32 =    76;\n+enum R_SPARC_TLS_DTPOFF64 =    77;\n+enum R_SPARC_TLS_TPOFF32 =     78;\n+enum R_SPARC_TLS_TPOFF64 =     79;\n+enum R_SPARC_GOTDATA_HIX22 =   80;\n+enum R_SPARC_GOTDATA_LOX10 =   81;\n+enum R_SPARC_GOTDATA_OP_HIX22 =        82;\n+enum R_SPARC_GOTDATA_OP_LOX10 =        83;\n+enum R_SPARC_GOTDATA_OP =      84;\n+enum R_SPARC_H34 =             85;\n+enum R_SPARC_SIZE32 =          86;\n+enum R_SPARC_SIZE64 =          87;\n+enum R_SPARC_WDISP10 =         88;\n+enum R_SPARC_JMP_IREL =        248;\n+enum R_SPARC_IRELATIVE =       249;\n+enum R_SPARC_GNU_VTINHERIT =   250;\n+enum R_SPARC_GNU_VTENTRY =     251;\n+enum R_SPARC_REV32 =           252;\n+enum R_SPARC_NUM =             253;\n+\n+enum DT_SPARC_REGISTER =       0x70000001;\n+enum DT_SPARC_NUM =            2;\n+\n+enum EF_MIPS_NOREORDER =       1;\n+enum EF_MIPS_PIC =             2;\n+enum EF_MIPS_CPIC =            4;\n+enum EF_MIPS_XGOT =            8;\n+enum EF_MIPS_64BIT_WHIRL =     16;\n+enum EF_MIPS_ABI2 =            32;\n+enum EF_MIPS_ABI_ON32 =        64;\n+enum EF_MIPS_ARCH =            0xf0000000;\n+\n+enum EF_MIPS_ARCH_1 =          0x00000000;\n+enum EF_MIPS_ARCH_2 =          0x10000000;\n+enum EF_MIPS_ARCH_3 =          0x20000000;\n+enum EF_MIPS_ARCH_4 =          0x30000000;\n+enum EF_MIPS_ARCH_5 =          0x40000000;\n+enum EF_MIPS_ARCH_32 =         0x50000000;\n+enum EF_MIPS_ARCH_64 =         0x60000000;\n+enum EF_MIPS_ARCH_32R2 =       0x70000000;\n+enum EF_MIPS_ARCH_64R2 =       0x80000000;\n+\n+enum E_MIPS_ARCH_1 =           EF_MIPS_ARCH_1;\n+enum E_MIPS_ARCH_2 =           EF_MIPS_ARCH_2;\n+enum E_MIPS_ARCH_3 =           EF_MIPS_ARCH_3;\n+enum E_MIPS_ARCH_4 =           EF_MIPS_ARCH_4;\n+enum E_MIPS_ARCH_5 =           EF_MIPS_ARCH_5;\n+enum E_MIPS_ARCH_32 =          EF_MIPS_ARCH_32;\n+enum E_MIPS_ARCH_64 =          EF_MIPS_ARCH_64;\n+\n+enum SHN_MIPS_ACOMMON =        0xff00;\n+enum SHN_MIPS_TEXT =           0xff01;\n+enum SHN_MIPS_DATA =           0xff02;\n+enum SHN_MIPS_SCOMMON =        0xff03;\n+enum SHN_MIPS_SUNDEFINED =     0xff04;\n+\n+enum SHT_MIPS_LIBLIST =        0x70000000;\n+enum SHT_MIPS_MSYM =           0x70000001;\n+enum SHT_MIPS_CONFLICT =       0x70000002;\n+enum SHT_MIPS_GPTAB =          0x70000003;\n+enum SHT_MIPS_UCODE =          0x70000004;\n+enum SHT_MIPS_DEBUG =          0x70000005;\n+enum SHT_MIPS_REGINFO =        0x70000006;\n+enum SHT_MIPS_PACKAGE =        0x70000007;\n+enum SHT_MIPS_PACKSYM =        0x70000008;\n+enum SHT_MIPS_RELD =           0x70000009;\n+enum SHT_MIPS_IFACE =          0x7000000b;\n+enum SHT_MIPS_CONTENT =        0x7000000c;\n+enum SHT_MIPS_OPTIONS =        0x7000000d;\n+enum SHT_MIPS_SHDR =           0x70000010;\n+enum SHT_MIPS_FDESC =          0x70000011;\n+enum SHT_MIPS_EXTSYM =         0x70000012;\n+enum SHT_MIPS_DENSE =          0x70000013;\n+enum SHT_MIPS_PDESC =          0x70000014;\n+enum SHT_MIPS_LOCSYM =         0x70000015;\n+enum SHT_MIPS_AUXSYM =         0x70000016;\n+enum SHT_MIPS_OPTSYM =         0x70000017;\n+enum SHT_MIPS_LOCSTR =         0x70000018;\n+enum SHT_MIPS_LINE =           0x70000019;\n+enum SHT_MIPS_RFDESC =         0x7000001a;\n+enum SHT_MIPS_DELTASYM =       0x7000001b;\n+enum SHT_MIPS_DELTAINST =      0x7000001c;\n+enum SHT_MIPS_DELTACLASS =     0x7000001d;\n+enum SHT_MIPS_DWARF =          0x7000001e;\n+enum SHT_MIPS_DELTADECL =      0x7000001f;\n+enum SHT_MIPS_SYMBOL_LIB =     0x70000020;\n+enum SHT_MIPS_EVENTS =         0x70000021;\n+enum SHT_MIPS_TRANSLATE =      0x70000022;\n+enum SHT_MIPS_PIXIE =          0x70000023;\n+enum SHT_MIPS_XLATE =          0x70000024;\n+enum SHT_MIPS_XLATE_DEBUG =    0x70000025;\n+enum SHT_MIPS_WHIRL =          0x70000026;\n+enum SHT_MIPS_EH_REGION =      0x70000027;\n+enum SHT_MIPS_XLATE_OLD =      0x70000028;\n+enum SHT_MIPS_PDR_EXCEPTION =  0x70000029;\n+\n+enum SHF_MIPS_GPREL =          0x10000000;\n+enum SHF_MIPS_MERGE =          0x20000000;\n+enum SHF_MIPS_ADDR =           0x40000000;\n+enum SHF_MIPS_STRINGS =        0x80000000;\n+enum SHF_MIPS_NOSTRIP =        0x08000000;\n+enum SHF_MIPS_LOCAL =          0x04000000;\n+enum SHF_MIPS_NAMES =          0x02000000;\n+enum SHF_MIPS_NODUPE =         0x01000000;\n+enum STO_MIPS_DEFAULT =                0x0;\n+enum STO_MIPS_INTERNAL =               0x1;\n+enum STO_MIPS_HIDDEN =                 0x2;\n+enum STO_MIPS_PROTECTED =              0x3;\n+enum STO_MIPS_PLT =                    0x8;\n+enum STO_MIPS_SC_ALIGN_UNUSED =        0xff;\n+enum STB_MIPS_SPLIT_COMMON =           13;\n+\n+union Elf32_gptab\n+{\n+    struct _gt_header\n+    {\n+        Elf32_Word gt_current_g_value;\n+        Elf32_Word gt_unused;\n+    } _gt_header gt_header;\n+    struct _gt_entry\n+    {\n+        Elf32_Word gt_g_value;\n+        Elf32_Word gt_bytes;\n+    } _gt_entry gt_entry;\n+}\n+\n+struct Elf32_RegInfo\n+{\n+    Elf32_Word ri_gprmask;\n+    Elf32_Word[4] ri_cprmask;\n+    Elf32_Sword ri_gp_value;\n+}\n+\n+struct Elf_Options\n+{\n+    ubyte kind;\n+    ubyte size;\n+    Elf32_Section section;\n+    Elf32_Word info;\n+}\n+\n+enum ODK_NULL =        0;\n+enum ODK_REGINFO =     1;\n+enum ODK_EXCEPTIONS =  2;\n+enum ODK_PAD =         3;\n+enum ODK_HWPATCH =     4;\n+enum ODK_FILL =        5;\n+enum ODK_TAGS =        6;\n+enum ODK_HWAND =       7;\n+enum ODK_HWOR =        8;\n+\n+enum OEX_FPU_MIN =     0x1f;\n+enum OEX_FPU_MAX =     0x1f00;\n+enum OEX_PAGE0 =       0x10000;\n+enum OEX_SMM =         0x20000;\n+enum OEX_FPDBUG =      0x40000;\n+enum OEX_PRECISEFP =   OEX_FPDBUG;\n+enum OEX_DISMISS =     0x80000;\n+\n+enum OEX_FPU_INVAL =   0x10;\n+enum OEX_FPU_DIV0 =    0x08;\n+enum OEX_FPU_OFLO =    0x04;\n+enum OEX_FPU_UFLO =    0x02;\n+enum OEX_FPU_INEX =    0x01;\n+\n+enum OHW_R4KEOP =      0x1;\n+enum OHW_R8KPFETCH =   0x2;\n+enum OHW_R5KEOP =      0x4;\n+enum OHW_R5KCVTL =     0x8;\n+\n+enum OPAD_PREFIX =     0x1;\n+enum OPAD_POSTFIX =    0x2;\n+enum OPAD_SYMBOL =     0x4;\n+\n+struct Elf_Options_Hw\n+{\n+    Elf32_Word hwp_flags1;\n+    Elf32_Word hwp_flags2;\n+}\n+\n+enum OHWA0_R4KEOP_CHECKED =    0x00000001;\n+enum OHWA1_R4KEOP_CLEAN =      0x00000002;\n+\n+enum R_MIPS_NONE =             0;\n+enum R_MIPS_16 =               1;\n+enum R_MIPS_32 =               2;\n+enum R_MIPS_REL32 =            3;\n+enum R_MIPS_26 =               4;\n+enum R_MIPS_HI16 =             5;\n+enum R_MIPS_LO16 =             6;\n+enum R_MIPS_GPREL16 =          7;\n+enum R_MIPS_LITERAL =          8;\n+enum R_MIPS_GOT16 =            9;\n+enum R_MIPS_PC16 =             10;\n+enum R_MIPS_CALL16 =           11;\n+enum R_MIPS_GPREL32 =          12;\n+\n+enum R_MIPS_SHIFT5 =           16;\n+enum R_MIPS_SHIFT6 =           17;\n+enum R_MIPS_64 =               18;\n+enum R_MIPS_GOT_DISP =         19;\n+enum R_MIPS_GOT_PAGE =         20;\n+enum R_MIPS_GOT_OFST =         21;\n+enum R_MIPS_GOT_HI16 =         22;\n+enum R_MIPS_GOT_LO16 =         23;\n+enum R_MIPS_SUB =              24;\n+enum R_MIPS_INSERT_A =         25;\n+enum R_MIPS_INSERT_B =         26;\n+enum R_MIPS_DELETE =           27;\n+enum R_MIPS_HIGHER =           28;\n+enum R_MIPS_HIGHEST =          29;\n+enum R_MIPS_CALL_HI16 =        30;\n+enum R_MIPS_CALL_LO16 =        31;\n+enum R_MIPS_SCN_DISP =         32;\n+enum R_MIPS_REL16 =            33;\n+enum R_MIPS_ADD_IMMEDIATE =    34;\n+enum R_MIPS_PJUMP =            35;\n+enum R_MIPS_RELGOT =           36;\n+enum R_MIPS_JALR =             37;\n+enum R_MIPS_TLS_DTPMOD32 =     38;\n+enum R_MIPS_TLS_DTPREL32 =     39;\n+enum R_MIPS_TLS_DTPMOD64 =     40;\n+enum R_MIPS_TLS_DTPREL64 =     41;\n+enum R_MIPS_TLS_GD =           42;\n+enum R_MIPS_TLS_LDM =          43;\n+enum R_MIPS_TLS_DTPREL_HI16 =  44;\n+enum R_MIPS_TLS_DTPREL_LO16 =  45;\n+enum R_MIPS_TLS_GOTTPREL =     46;\n+enum R_MIPS_TLS_TPREL32 =      47;\n+enum R_MIPS_TLS_TPREL64 =      48;\n+enum R_MIPS_TLS_TPREL_HI16 =   49;\n+enum R_MIPS_TLS_TPREL_LO16 =   50;\n+enum R_MIPS_GLOB_DAT =         51;\n+enum R_MIPS_COPY =             126;\n+enum R_MIPS_JUMP_SLOT =        127;\n+enum R_MIPS_NUM =              128;\n+\n+enum PT_MIPS_REGINFO = 0x70000000;\n+enum PT_MIPS_RTPROC =  0x70000001;\n+enum PT_MIPS_OPTIONS = 0x70000002;\n+\n+enum PF_MIPS_LOCAL =   0x10000000;\n+\n+enum DT_MIPS_RLD_VERSION =  0x70000001;\n+enum DT_MIPS_TIME_STAMP =   0x70000002;\n+enum DT_MIPS_ICHECKSUM =    0x70000003;\n+enum DT_MIPS_IVERSION =     0x70000004;\n+enum DT_MIPS_FLAGS =        0x70000005;\n+enum DT_MIPS_BASE_ADDRESS = 0x70000006;\n+enum DT_MIPS_MSYM =         0x70000007;\n+enum DT_MIPS_CONFLICT =     0x70000008;\n+enum DT_MIPS_LIBLIST =      0x70000009;\n+enum DT_MIPS_LOCAL_GOTNO =  0x7000000a;\n+enum DT_MIPS_CONFLICTNO =   0x7000000b;\n+enum DT_MIPS_LIBLISTNO =    0x70000010;\n+enum DT_MIPS_SYMTABNO =     0x70000011;\n+enum DT_MIPS_UNREFEXTNO =   0x70000012;\n+enum DT_MIPS_GOTSYM =       0x70000013;\n+enum DT_MIPS_HIPAGENO =     0x70000014;\n+enum DT_MIPS_RLD_MAP =      0x70000016;\n+enum DT_MIPS_DELTA_CLASS =  0x70000017;\n+enum DT_MIPS_DELTA_CLASS_NO =    0x70000018;\n+enum DT_MIPS_DELTA_INSTANCE =    0x70000019;\n+enum DT_MIPS_DELTA_INSTANCE_NO = 0x7000001a;\n+enum DT_MIPS_DELTA_RELOC =  0x7000001b;\n+enum DT_MIPS_DELTA_RELOC_NO = 0x7000001c;\n+enum DT_MIPS_DELTA_SYM =    0x7000001d;\n+enum DT_MIPS_DELTA_SYM_NO = 0x7000001e;\n+enum DT_MIPS_DELTA_CLASSSYM = 0x70000020;\n+enum DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021;\n+enum DT_MIPS_CXX_FLAGS =    0x70000022;\n+enum DT_MIPS_PIXIE_INIT =   0x70000023;\n+enum DT_MIPS_SYMBOL_LIB =   0x70000024;\n+enum DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025;\n+enum DT_MIPS_LOCAL_GOTIDX = 0x70000026;\n+enum DT_MIPS_HIDDEN_GOTIDX = 0x70000027;\n+enum DT_MIPS_PROTECTED_GOTIDX = 0x70000028;\n+enum DT_MIPS_OPTIONS =      0x70000029;\n+enum DT_MIPS_INTERFACE =    0x7000002a;\n+enum DT_MIPS_DYNSTR_ALIGN = 0x7000002b;\n+enum DT_MIPS_INTERFACE_SIZE = 0x7000002c;\n+enum DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002d;\n+enum DT_MIPS_PERF_SUFFIX =  0x7000002e;\n+enum DT_MIPS_COMPACT_SIZE = 0x7000002f;\n+enum DT_MIPS_GP_VALUE =     0x70000030;\n+enum DT_MIPS_AUX_DYNAMIC =  0x70000031;\n+enum DT_MIPS_PLTGOT =       0x70000032;\n+enum DT_MIPS_RWPLT =        0x70000034;\n+enum DT_MIPS_NUM =          0x35;\n+\n+enum RHF_NONE =                   0;\n+enum RHF_QUICKSTART =             (1 << 0);\n+enum RHF_NOTPOT =                 (1 << 1);\n+enum RHF_NO_LIBRARY_REPLACEMENT = (1 << 2);\n+enum RHF_NO_MOVE =                (1 << 3);\n+enum RHF_SGI_ONLY =               (1 << 4);\n+enum RHF_GUARANTEE_INIT =         (1 << 5);\n+enum RHF_DELTA_C_PLUS_PLUS =      (1 << 6);\n+enum RHF_GUARANTEE_START_INIT =   (1 << 7);\n+enum RHF_PIXIE =                  (1 << 8);\n+enum RHF_DEFAULT_DELAY_LOAD =     (1 << 9);\n+enum RHF_REQUICKSTART =           (1 << 10);\n+enum RHF_REQUICKSTARTED =         (1 << 11);\n+enum RHF_CORD =                   (1 << 12);\n+enum RHF_NO_UNRES_UNDEF =         (1 << 13);\n+enum RHF_RLD_ORDER_SAFE =         (1 << 14);\n+\n+struct Elf32_Lib\n+{\n+    Elf32_Word l_name;\n+    Elf32_Word l_time_stamp;\n+    Elf32_Word l_checksum;\n+    Elf32_Word l_version;\n+    Elf32_Word l_flags;\n+}\n+\n+struct Elf64_Lib\n+{\n+    Elf64_Word l_name;\n+    Elf64_Word l_time_stamp;\n+    Elf64_Word l_checksum;\n+    Elf64_Word l_version;\n+    Elf64_Word l_flags;\n+}\n+\n+enum LL_NONE =           0;\n+enum LL_EXACT_MATCH =    (1 << 0);\n+enum LL_IGNORE_INT_VER = (1 << 1);\n+enum LL_REQUIRE_MINOR =  (1 << 2);\n+enum LL_EXPORTS =        (1 << 3);\n+enum LL_DELAY_LOAD =     (1 << 4);\n+enum LL_DELTA =          (1 << 5);\n+\n+alias Elf32_Addr Elf32_Conflict;\n+\n+enum EF_PARISC_TRAPNIL =       0x00010000;\n+enum EF_PARISC_EXT =           0x00020000;\n+enum EF_PARISC_LSB =           0x00040000;\n+enum EF_PARISC_WIDE =          0x00080000;\n+enum EF_PARISC_NO_KABP =       0x00100000;\n+enum EF_PARISC_LAZYSWAP =      0x00400000;\n+enum EF_PARISC_ARCH =          0x0000ffff;\n+\n+enum EFA_PARISC_1_0 =              0x020b;\n+enum EFA_PARISC_1_1 =              0x0210;\n+enum EFA_PARISC_2_0 =              0x0214;\n+\n+enum SHN_PARISC_ANSI_COMMON =  0xff00;\n+enum SHN_PARISC_HUGE_COMMON =  0xff01;\n+\n+enum SHT_PARISC_EXT =          0x70000000;\n+enum SHT_PARISC_UNWIND =       0x70000001;\n+enum SHT_PARISC_DOC =          0x70000002;\n+\n+enum SHF_PARISC_SHORT =        0x20000000;\n+enum SHF_PARISC_HUGE =         0x40000000;\n+enum SHF_PARISC_SBP =          0x80000000;\n+\n+enum STT_PARISC_MILLICODE =    13;\n+\n+enum STT_HP_OPAQUE =           (STT_LOOS + 0x1);\n+enum STT_HP_STUB =             (STT_LOOS + 0x2);\n+\n+enum R_PARISC_NONE =           0;\n+enum R_PARISC_DIR32 =          1;\n+enum R_PARISC_DIR21L =         2;\n+enum R_PARISC_DIR17R =         3;\n+enum R_PARISC_DIR17F =         4;\n+enum R_PARISC_DIR14R =         6;\n+enum R_PARISC_PCREL32 =        9;\n+enum R_PARISC_PCREL21L =       10;\n+enum R_PARISC_PCREL17R =       11;\n+enum R_PARISC_PCREL17F =       12;\n+enum R_PARISC_PCREL14R =       14;\n+enum R_PARISC_DPREL21L =       18;\n+enum R_PARISC_DPREL14R =       22;\n+enum R_PARISC_GPREL21L =       26;\n+enum R_PARISC_GPREL14R =       30;\n+enum R_PARISC_LTOFF21L =       34;\n+enum R_PARISC_LTOFF14R =       38;\n+enum R_PARISC_SECREL32 =       41;\n+enum R_PARISC_SEGBASE =        48;\n+enum R_PARISC_SEGREL32 =       49;\n+enum R_PARISC_PLTOFF21L =      50;\n+enum R_PARISC_PLTOFF14R =      54;\n+enum R_PARISC_LTOFF_FPTR32 =   57;\n+enum R_PARISC_LTOFF_FPTR21L =  58;\n+enum R_PARISC_LTOFF_FPTR14R =  62;\n+enum R_PARISC_FPTR64 =         64;\n+enum R_PARISC_PLABEL32 =       65;\n+enum R_PARISC_PLABEL21L =      66;\n+enum R_PARISC_PLABEL14R =      70;\n+enum R_PARISC_PCREL64 =        72;\n+enum R_PARISC_PCREL22F =       74;\n+enum R_PARISC_PCREL14WR =      75;\n+enum R_PARISC_PCREL14DR =      76;\n+enum R_PARISC_PCREL16F =       77;\n+enum R_PARISC_PCREL16WF =      78;\n+enum R_PARISC_PCREL16DF =      79;\n+enum R_PARISC_DIR64 =          80;\n+enum R_PARISC_DIR14WR =        83;\n+enum R_PARISC_DIR14DR =        84;\n+enum R_PARISC_DIR16F =         85;\n+enum R_PARISC_DIR16WF =        86;\n+enum R_PARISC_DIR16DF =        87;\n+enum R_PARISC_GPREL64 =        88;\n+enum R_PARISC_GPREL14WR =      91;\n+enum R_PARISC_GPREL14DR =      92;\n+enum R_PARISC_GPREL16F =       93;\n+enum R_PARISC_GPREL16WF =      94;\n+enum R_PARISC_GPREL16DF =      95;\n+enum R_PARISC_LTOFF64 =        96;\n+enum R_PARISC_LTOFF14WR =      99;\n+enum R_PARISC_LTOFF14DR =      100;\n+enum R_PARISC_LTOFF16F =       101;\n+enum R_PARISC_LTOFF16WF =      102;\n+enum R_PARISC_LTOFF16DF =      103;\n+enum R_PARISC_SECREL64 =       104;\n+enum R_PARISC_SEGREL64 =       112;\n+enum R_PARISC_PLTOFF14WR =     115;\n+enum R_PARISC_PLTOFF14DR =     116;\n+enum R_PARISC_PLTOFF16F =      117;\n+enum R_PARISC_PLTOFF16WF =     118;\n+enum R_PARISC_PLTOFF16DF =     119;\n+enum R_PARISC_LTOFF_FPTR64 =   120;\n+enum R_PARISC_LTOFF_FPTR14WR = 123;\n+enum R_PARISC_LTOFF_FPTR14DR = 124;\n+enum R_PARISC_LTOFF_FPTR16F =  125;\n+enum R_PARISC_LTOFF_FPTR16WF = 126;\n+enum R_PARISC_LTOFF_FPTR16DF = 127;\n+enum R_PARISC_LORESERVE =      128;\n+enum R_PARISC_COPY =           128;\n+enum R_PARISC_IPLT =           129;\n+enum R_PARISC_EPLT =           130;\n+enum R_PARISC_TPREL32 =        153;\n+enum R_PARISC_TPREL21L =       154;\n+enum R_PARISC_TPREL14R =       158;\n+enum R_PARISC_LTOFF_TP21L =    162;\n+enum R_PARISC_LTOFF_TP14R =    166;\n+enum R_PARISC_LTOFF_TP14F =    167;\n+enum R_PARISC_TPREL64 =        216;\n+enum R_PARISC_TPREL14WR =      219;\n+enum R_PARISC_TPREL14DR =      220;\n+enum R_PARISC_TPREL16F =       221;\n+enum R_PARISC_TPREL16WF =      222;\n+enum R_PARISC_TPREL16DF =      223;\n+enum R_PARISC_LTOFF_TP64 =     224;\n+enum R_PARISC_LTOFF_TP14WR =   227;\n+enum R_PARISC_LTOFF_TP14DR =   228;\n+enum R_PARISC_LTOFF_TP16F =    229;\n+enum R_PARISC_LTOFF_TP16WF =   230;\n+enum R_PARISC_LTOFF_TP16DF =   231;\n+enum R_PARISC_GNU_VTENTRY =    232;\n+enum R_PARISC_GNU_VTINHERIT =  233;\n+enum R_PARISC_TLS_GD21L =      234;\n+enum R_PARISC_TLS_GD14R =      235;\n+enum R_PARISC_TLS_GDCALL =     236;\n+enum R_PARISC_TLS_LDM21L =     237;\n+enum R_PARISC_TLS_LDM14R =     238;\n+enum R_PARISC_TLS_LDMCALL =    239;\n+enum R_PARISC_TLS_LDO21L =     240;\n+enum R_PARISC_TLS_LDO14R =     241;\n+enum R_PARISC_TLS_DTPMOD32 =   242;\n+enum R_PARISC_TLS_DTPMOD64 =   243;\n+enum R_PARISC_TLS_DTPOFF32 =   244;\n+enum R_PARISC_TLS_DTPOFF64 =   245;\n+enum R_PARISC_TLS_LE21L =      R_PARISC_TPREL21L;\n+enum R_PARISC_TLS_LE14R =      R_PARISC_TPREL14R;\n+enum R_PARISC_TLS_IE21L =      R_PARISC_LTOFF_TP21L;\n+enum R_PARISC_TLS_IE14R =      R_PARISC_LTOFF_TP14R;\n+enum R_PARISC_TLS_TPREL32 =    R_PARISC_TPREL32;\n+enum R_PARISC_TLS_TPREL64 =    R_PARISC_TPREL64;\n+enum R_PARISC_HIRESERVE =      255;\n+\n+enum PT_HP_TLS =               (PT_LOOS + 0x0);\n+enum PT_HP_CORE_NONE =         (PT_LOOS + 0x1);\n+enum PT_HP_CORE_VERSION =      (PT_LOOS + 0x2);\n+enum PT_HP_CORE_KERNEL =       (PT_LOOS + 0x3);\n+enum PT_HP_CORE_COMM =         (PT_LOOS + 0x4);\n+enum PT_HP_CORE_PROC =         (PT_LOOS + 0x5);\n+enum PT_HP_CORE_LOADABLE =     (PT_LOOS + 0x6);\n+enum PT_HP_CORE_STACK =        (PT_LOOS + 0x7);\n+enum PT_HP_CORE_SHM =          (PT_LOOS + 0x8);\n+enum PT_HP_CORE_MMF =          (PT_LOOS + 0x9);\n+enum PT_HP_PARALLEL =          (PT_LOOS + 0x10);\n+enum PT_HP_FASTBIND =          (PT_LOOS + 0x11);\n+enum PT_HP_OPT_ANNOT =         (PT_LOOS + 0x12);\n+enum PT_HP_HSL_ANNOT =         (PT_LOOS + 0x13);\n+enum PT_HP_STACK =             (PT_LOOS + 0x14);\n+\n+enum PT_PARISC_ARCHEXT =       0x70000000;\n+enum PT_PARISC_UNWIND =        0x70000001;\n+\n+enum PF_PARISC_SBP =           0x08000000;\n+\n+enum PF_HP_PAGE_SIZE =         0x00100000;\n+enum PF_HP_FAR_SHARED =        0x00200000;\n+enum PF_HP_NEAR_SHARED =       0x00400000;\n+enum PF_HP_CODE =              0x01000000;\n+enum PF_HP_MODIFY =            0x02000000;\n+enum PF_HP_LAZYSWAP =          0x04000000;\n+enum PF_HP_SBP =               0x08000000;\n+\n+enum EF_ALPHA_32BIT =          1;\n+enum EF_ALPHA_CANRELAX =       2;\n+enum SHT_ALPHA_DEBUG =         0x70000001;\n+enum SHT_ALPHA_REGINFO =       0x70000002;\n+\n+enum SHF_ALPHA_GPREL =         0x10000000;\n+enum STO_ALPHA_NOPV =          0x80;\n+enum STO_ALPHA_STD_GPLOAD =    0x88;\n+\n+enum R_ALPHA_NONE =            0;\n+enum R_ALPHA_REFLONG =         1;\n+enum R_ALPHA_REFQUAD =         2;\n+enum R_ALPHA_GPREL32 =         3;\n+enum R_ALPHA_LITERAL =         4;\n+enum R_ALPHA_LITUSE =          5;\n+enum R_ALPHA_GPDISP =          6;\n+enum R_ALPHA_BRADDR =          7;\n+enum R_ALPHA_HINT =            8;\n+enum R_ALPHA_SREL16 =          9;\n+enum R_ALPHA_SREL32 =          10;\n+enum R_ALPHA_SREL64 =          11;\n+enum R_ALPHA_GPRELHIGH =       17;\n+enum R_ALPHA_GPRELLOW =        18;\n+enum R_ALPHA_GPREL16 =         19;\n+enum R_ALPHA_COPY =            24;\n+enum R_ALPHA_GLOB_DAT =        25;\n+enum R_ALPHA_JMP_SLOT =        26;\n+enum R_ALPHA_RELATIVE =        27;\n+enum R_ALPHA_TLS_GD_HI =       28;\n+enum R_ALPHA_TLSGD =           29;\n+enum R_ALPHA_TLS_LDM =         30;\n+enum R_ALPHA_DTPMOD64 =        31;\n+enum R_ALPHA_GOTDTPREL =       32;\n+enum R_ALPHA_DTPREL64 =        33;\n+enum R_ALPHA_DTPRELHI =        34;\n+enum R_ALPHA_DTPRELLO =        35;\n+enum R_ALPHA_DTPREL16 =        36;\n+enum R_ALPHA_GOTTPREL =        37;\n+enum R_ALPHA_TPREL64 =         38;\n+enum R_ALPHA_TPRELHI =         39;\n+enum R_ALPHA_TPRELLO =         40;\n+enum R_ALPHA_TPREL16 =         41;\n+enum R_ALPHA_NUM =             46;\n+enum LITUSE_ALPHA_ADDR =       0;\n+enum LITUSE_ALPHA_BASE =       1;\n+enum LITUSE_ALPHA_BYTOFF =     2;\n+enum LITUSE_ALPHA_JSR =        3;\n+enum LITUSE_ALPHA_TLS_GD =     4;\n+enum LITUSE_ALPHA_TLS_LDM =    5;\n+enum DT_ALPHA_PLTRO =          (DT_LOPROC + 0);\n+enum DT_ALPHA_NUM =            1;\n+enum EF_PPC_EMB =              0x80000000;\n+enum EF_PPC_RELOCATABLE =      0x00010000;\n+enum EF_PPC_RELOCATABLE_LIB =  0x00008000;\n+enum R_PPC_NONE =              0;\n+enum R_PPC_ADDR32 =            1;\n+enum R_PPC_ADDR24 =            2;\n+enum R_PPC_ADDR16 =            3;\n+enum R_PPC_ADDR16_LO =         4;\n+enum R_PPC_ADDR16_HI =         5;\n+enum R_PPC_ADDR16_HA =         6;\n+enum R_PPC_ADDR14 =            7;\n+enum R_PPC_ADDR14_BRTAKEN =    8;\n+enum R_PPC_ADDR14_BRNTAKEN =   9;\n+enum R_PPC_REL24 =             10;\n+enum R_PPC_REL14 =             11;\n+enum R_PPC_REL14_BRTAKEN =     12;\n+enum R_PPC_REL14_BRNTAKEN =    13;\n+enum R_PPC_GOT16 =             14;\n+enum R_PPC_GOT16_LO =          15;\n+enum R_PPC_GOT16_HI =          16;\n+enum R_PPC_GOT16_HA =          17;\n+enum R_PPC_PLTREL24 =          18;\n+enum R_PPC_COPY =              19;\n+enum R_PPC_GLOB_DAT =          20;\n+enum R_PPC_JMP_SLOT =          21;\n+enum R_PPC_RELATIVE =          22;\n+enum R_PPC_LOCAL24PC =         23;\n+enum R_PPC_UADDR32 =           24;\n+enum R_PPC_UADDR16 =           25;\n+enum R_PPC_REL32 =             26;\n+enum R_PPC_PLT32 =             27;\n+enum R_PPC_PLTREL32 =          28;\n+enum R_PPC_PLT16_LO =          29;\n+enum R_PPC_PLT16_HI =          30;\n+enum R_PPC_PLT16_HA =          31;\n+enum R_PPC_SDAREL16 =          32;\n+enum R_PPC_SECTOFF =           33;\n+enum R_PPC_SECTOFF_LO =        34;\n+enum R_PPC_SECTOFF_HI =        35;\n+enum R_PPC_SECTOFF_HA =        36;\n+enum R_PPC_TLS =               67;\n+enum R_PPC_DTPMOD32 =          68;\n+enum R_PPC_TPREL16 =           69;\n+enum R_PPC_TPREL16_LO =        70;\n+enum R_PPC_TPREL16_HI =        71;\n+enum R_PPC_TPREL16_HA =        72;\n+enum R_PPC_TPREL32 =           73;\n+enum R_PPC_DTPREL16 =          74;\n+enum R_PPC_DTPREL16_LO =       75;\n+enum R_PPC_DTPREL16_HI =       76;\n+enum R_PPC_DTPREL16_HA =       77;\n+enum R_PPC_DTPREL32 =          78;\n+enum R_PPC_GOT_TLSGD16 =       79;\n+enum R_PPC_GOT_TLSGD16_LO =    80;\n+enum R_PPC_GOT_TLSGD16_HI =    81;\n+enum R_PPC_GOT_TLSGD16_HA =    82;\n+enum R_PPC_GOT_TLSLD16 =       83;\n+enum R_PPC_GOT_TLSLD16_LO =    84;\n+enum R_PPC_GOT_TLSLD16_HI =    85;\n+enum R_PPC_GOT_TLSLD16_HA =    86;\n+enum R_PPC_GOT_TPREL16 =       87;\n+enum R_PPC_GOT_TPREL16_LO =    88;\n+enum R_PPC_GOT_TPREL16_HI =    89;\n+enum R_PPC_GOT_TPREL16_HA =    90;\n+enum R_PPC_GOT_DTPREL16 =      91;\n+enum R_PPC_GOT_DTPREL16_LO =   92;\n+enum R_PPC_GOT_DTPREL16_HI =   93;\n+enum R_PPC_GOT_DTPREL16_HA =   94;\n+enum R_PPC_EMB_NADDR32 =       101;\n+enum R_PPC_EMB_NADDR16 =       102;\n+enum R_PPC_EMB_NADDR16_LO =    103;\n+enum R_PPC_EMB_NADDR16_HI =    104;\n+enum R_PPC_EMB_NADDR16_HA =    105;\n+enum R_PPC_EMB_SDAI16 =        106;\n+enum R_PPC_EMB_SDA2I16 =       107;\n+enum R_PPC_EMB_SDA2REL =       108;\n+enum R_PPC_EMB_SDA21 =         109;\n+enum R_PPC_EMB_MRKREF =        110;\n+enum R_PPC_EMB_RELSEC16 =      111;\n+enum R_PPC_EMB_RELST_LO =      112;\n+enum R_PPC_EMB_RELST_HI =      113;\n+enum R_PPC_EMB_RELST_HA =      114;\n+enum R_PPC_EMB_BIT_FLD =       115;\n+enum R_PPC_EMB_RELSDA =        116;\n+enum R_PPC_DIAB_SDA21_LO =     180;\n+enum R_PPC_DIAB_SDA21_HI =     181;\n+enum R_PPC_DIAB_SDA21_HA =     182;\n+enum R_PPC_DIAB_RELSDA_LO =    183;\n+enum R_PPC_DIAB_RELSDA_HI =    184;\n+enum R_PPC_DIAB_RELSDA_HA =    185;\n+enum R_PPC_IRELATIVE =         248;\n+enum R_PPC_REL16 =             249;\n+enum R_PPC_REL16_LO =          250;\n+enum R_PPC_REL16_HI =          251;\n+enum R_PPC_REL16_HA =          252;\n+enum R_PPC_TOC16 =             255;\n+enum DT_PPC_GOT =              (DT_LOPROC + 0);\n+enum DT_PPC_NUM =              1;\n+enum R_PPC64_NONE =            R_PPC_NONE;\n+enum R_PPC64_ADDR32 =          R_PPC_ADDR32;\n+enum R_PPC64_ADDR24 =          R_PPC_ADDR24;\n+enum R_PPC64_ADDR16 =          R_PPC_ADDR16;\n+enum R_PPC64_ADDR16_LO =       R_PPC_ADDR16_LO;\n+enum R_PPC64_ADDR16_HI =       R_PPC_ADDR16_HI;\n+enum R_PPC64_ADDR16_HA =       R_PPC_ADDR16_HA;\n+enum R_PPC64_ADDR14 =          R_PPC_ADDR14;\n+enum R_PPC64_ADDR14_BRTAKEN =  R_PPC_ADDR14_BRTAKEN;\n+enum R_PPC64_ADDR14_BRNTAKEN = R_PPC_ADDR14_BRNTAKEN;\n+enum R_PPC64_REL24 =           R_PPC_REL24;\n+enum R_PPC64_REL14 =           R_PPC_REL14;\n+enum R_PPC64_REL14_BRTAKEN =   R_PPC_REL14_BRTAKEN;\n+enum R_PPC64_REL14_BRNTAKEN =  R_PPC_REL14_BRNTAKEN;\n+enum R_PPC64_GOT16 =           R_PPC_GOT16;\n+enum R_PPC64_GOT16_LO =        R_PPC_GOT16_LO;\n+enum R_PPC64_GOT16_HI =        R_PPC_GOT16_HI;\n+enum R_PPC64_GOT16_HA =        R_PPC_GOT16_HA;\n+\n+enum R_PPC64_COPY =            R_PPC_COPY;\n+enum R_PPC64_GLOB_DAT =        R_PPC_GLOB_DAT;\n+enum R_PPC64_JMP_SLOT =        R_PPC_JMP_SLOT;\n+enum R_PPC64_RELATIVE =        R_PPC_RELATIVE;\n+\n+enum R_PPC64_UADDR32 =         R_PPC_UADDR32;\n+enum R_PPC64_UADDR16 =         R_PPC_UADDR16;\n+enum R_PPC64_REL32 =           R_PPC_REL32;\n+enum R_PPC64_PLT32 =           R_PPC_PLT32;\n+enum R_PPC64_PLTREL32 =        R_PPC_PLTREL32;\n+enum R_PPC64_PLT16_LO =        R_PPC_PLT16_LO;\n+enum R_PPC64_PLT16_HI =        R_PPC_PLT16_HI;\n+enum R_PPC64_PLT16_HA =        R_PPC_PLT16_HA;\n+\n+enum R_PPC64_SECTOFF =         R_PPC_SECTOFF;\n+enum R_PPC64_SECTOFF_LO =      R_PPC_SECTOFF_LO;\n+enum R_PPC64_SECTOFF_HI =      R_PPC_SECTOFF_HI;\n+enum R_PPC64_SECTOFF_HA =      R_PPC_SECTOFF_HA;\n+enum R_PPC64_ADDR30 =          37;\n+enum R_PPC64_ADDR64 =          38;\n+enum R_PPC64_ADDR16_HIGHER =   39;\n+enum R_PPC64_ADDR16_HIGHERA =  40;\n+enum R_PPC64_ADDR16_HIGHEST =  41;\n+enum R_PPC64_ADDR16_HIGHESTA = 42;\n+enum R_PPC64_UADDR64 =         43;\n+enum R_PPC64_REL64 =           44;\n+enum R_PPC64_PLT64 =           45;\n+enum R_PPC64_PLTREL64 =        46;\n+enum R_PPC64_TOC16 =           47;\n+enum R_PPC64_TOC16_LO =        48;\n+enum R_PPC64_TOC16_HI =        49;\n+enum R_PPC64_TOC16_HA =        50;\n+enum R_PPC64_TOC =             51;\n+enum R_PPC64_PLTGOT16 =        52;\n+enum R_PPC64_PLTGOT16_LO =     53;\n+enum R_PPC64_PLTGOT16_HI =     54;\n+enum R_PPC64_PLTGOT16_HA =     55;\n+\n+enum R_PPC64_ADDR16_DS =       56;\n+enum R_PPC64_ADDR16_LO_DS =    57;\n+enum R_PPC64_GOT16_DS =        58;\n+enum R_PPC64_GOT16_LO_DS =     59;\n+enum R_PPC64_PLT16_LO_DS =     60;\n+enum R_PPC64_SECTOFF_DS =      61;\n+enum R_PPC64_SECTOFF_LO_DS =   62;\n+enum R_PPC64_TOC16_DS =        63;\n+enum R_PPC64_TOC16_LO_DS =     64;\n+enum R_PPC64_PLTGOT16_DS =     65;\n+enum R_PPC64_PLTGOT16_LO_DS =  66;\n+enum R_PPC64_TLS =             67;\n+enum R_PPC64_DTPMOD64 =        68;\n+enum R_PPC64_TPREL16 =         69;\n+enum R_PPC64_TPREL16_LO =      70;\n+enum R_PPC64_TPREL16_HI =      71;\n+enum R_PPC64_TPREL16_HA =      72;\n+enum R_PPC64_TPREL64 =         73;\n+enum R_PPC64_DTPREL16 =        74;\n+enum R_PPC64_DTPREL16_LO =     75;\n+enum R_PPC64_DTPREL16_HI =     76;\n+enum R_PPC64_DTPREL16_HA =     77;\n+enum R_PPC64_DTPREL64 =        78;\n+enum R_PPC64_GOT_TLSGD16 =     79;\n+enum R_PPC64_GOT_TLSGD16_LO =  80;\n+enum R_PPC64_GOT_TLSGD16_HI =  81;\n+enum R_PPC64_GOT_TLSGD16_HA =  82;\n+enum R_PPC64_GOT_TLSLD16 =     83;\n+enum R_PPC64_GOT_TLSLD16_LO =  84;\n+enum R_PPC64_GOT_TLSLD16_HI =  85;\n+enum R_PPC64_GOT_TLSLD16_HA =  86;\n+enum R_PPC64_GOT_TPREL16_DS =  87;\n+enum R_PPC64_GOT_TPREL16_LO_DS = 88;\n+enum R_PPC64_GOT_TPREL16_HI =  89;\n+enum R_PPC64_GOT_TPREL16_HA =  90;\n+enum R_PPC64_GOT_DTPREL16_DS = 91;\n+enum R_PPC64_GOT_DTPREL16_LO_DS = 92;\n+enum R_PPC64_GOT_DTPREL16_HI = 93;\n+enum R_PPC64_GOT_DTPREL16_HA = 94;\n+enum R_PPC64_TPREL16_DS =      95;\n+enum R_PPC64_TPREL16_LO_DS =   96;\n+enum R_PPC64_TPREL16_HIGHER =  97;\n+enum R_PPC64_TPREL16_HIGHERA = 98;\n+enum R_PPC64_TPREL16_HIGHEST = 99;\n+enum R_PPC64_TPREL16_HIGHESTA = 100;\n+enum R_PPC64_DTPREL16_DS =     101;\n+enum R_PPC64_DTPREL16_LO_DS =  102;\n+enum R_PPC64_DTPREL16_HIGHER = 103;\n+enum R_PPC64_DTPREL16_HIGHERA = 104;\n+enum R_PPC64_DTPREL16_HIGHEST = 105;\n+enum R_PPC64_DTPREL16_HIGHESTA = 106;\n+enum R_PPC64_JMP_IREL =        247;\n+enum R_PPC64_IRELATIVE =       248;\n+enum R_PPC64_REL16 =           249;\n+enum R_PPC64_REL16_LO =        250;\n+enum R_PPC64_REL16_HI =        251;\n+enum R_PPC64_REL16_HA =        252;\n+enum DT_PPC64_GLINK =  (DT_LOPROC + 0);\n+enum DT_PPC64_OPD =    (DT_LOPROC + 1);\n+enum DT_PPC64_OPDSZ =  (DT_LOPROC + 2);\n+enum DT_PPC64_NUM =    3;\n+enum EF_ARM_RELEXEC =          0x01;\n+enum EF_ARM_HASENTRY =         0x02;\n+enum EF_ARM_INTERWORK =        0x04;\n+enum EF_ARM_APCS_26 =          0x08;\n+enum EF_ARM_APCS_FLOAT =       0x10;\n+enum EF_ARM_PIC =              0x20;\n+enum EF_ARM_ALIGN8 =           0x40;\n+enum EF_ARM_NEW_ABI =          0x80;\n+enum EF_ARM_OLD_ABI =          0x100;\n+enum EF_ARM_SOFT_FLOAT =       0x200;\n+enum EF_ARM_VFP_FLOAT =        0x400;\n+enum EF_ARM_MAVERICK_FLOAT =   0x800;\n+\n+enum EF_ARM_ABI_FLOAT_SOFT =   0x200;\n+enum EF_ARM_ABI_FLOAT_HARD =   0x400;\n+enum EF_ARM_SYMSARESORTED =    0x04;\n+enum EF_ARM_DYNSYMSUSESEGIDX = 0x08;\n+enum EF_ARM_MAPSYMSFIRST =     0x10;\n+enum EF_ARM_EABIMASK =         0XFF000000;\n+enum EF_ARM_BE8 =          0x00800000;\n+enum EF_ARM_LE8 =          0x00400000;\n+\n+extern (D) auto EF_ARM_EABI_VERSION(F)(F flags) { return flags & EF_ARM_EABIMASK; }\n+enum EF_ARM_EABI_UNKNOWN =     0x00000000;\n+enum EF_ARM_EABI_VER1 =        0x01000000;\n+enum EF_ARM_EABI_VER2 =        0x02000000;\n+enum EF_ARM_EABI_VER3 =        0x03000000;\n+enum EF_ARM_EABI_VER4 =        0x04000000;\n+enum EF_ARM_EABI_VER5 =        0x05000000;\n+enum STT_ARM_TFUNC =           STT_LOPROC;\n+enum STT_ARM_16BIT =           STT_HIPROC;\n+enum SHF_ARM_ENTRYSECT =       0x10000000;\n+enum SHF_ARM_COMDEF =          0x80000000;\n+enum PF_ARM_SB =               0x10000000;\n+enum PF_ARM_PI =               0x20000000;\n+enum PF_ARM_ABS =              0x40000000;\n+enum PT_ARM_EXIDX =            (PT_LOPROC + 1);\n+enum SHT_ARM_EXIDX =           (SHT_LOPROC + 1);\n+enum SHT_ARM_PREEMPTMAP =      (SHT_LOPROC + 2);\n+enum SHT_ARM_ATTRIBUTES =      (SHT_LOPROC + 3);\n+\n+enum R_AARCH64_NONE =            0;\n+enum R_AARCH64_ABS64 =         257;\n+enum R_AARCH64_ABS32 =         258;\n+enum R_AARCH64_COPY =         1024;\n+enum R_AARCH64_GLOB_DAT =     1025;\n+enum R_AARCH64_JUMP_SLOT =    1026;\n+enum R_AARCH64_RELATIVE =     1027;\n+enum R_AARCH64_TLS_DTPMOD64 = 1028;\n+enum R_AARCH64_TLS_DTPREL64 = 1029;\n+enum R_AARCH64_TLS_TPREL64 =  1030;\n+enum R_AARCH64_TLSDESC =      1031;\n+\n+enum R_ARM_NONE =              0;\n+enum R_ARM_PC24 =              1;\n+enum R_ARM_ABS32 =             2;\n+enum R_ARM_REL32 =             3;\n+enum R_ARM_PC13 =              4;\n+enum R_ARM_ABS16 =             5;\n+enum R_ARM_ABS12 =             6;\n+enum R_ARM_THM_ABS5 =          7;\n+enum R_ARM_ABS8 =              8;\n+enum R_ARM_SBREL32 =           9;\n+enum R_ARM_THM_PC22 =          10;\n+enum R_ARM_THM_PC8 =           11;\n+enum R_ARM_AMP_VCALL9 =        12;\n+enum R_ARM_SWI24 =             13;\n+enum R_ARM_TLS_DESC =          13;\n+enum R_ARM_THM_SWI8 =          14;\n+enum R_ARM_XPC25 =             15;\n+enum R_ARM_THM_XPC22 =         16;\n+enum R_ARM_TLS_DTPMOD32 =      17;\n+enum R_ARM_TLS_DTPOFF32 =      18;\n+enum R_ARM_TLS_TPOFF32 =       19;\n+enum R_ARM_COPY =              20;\n+enum R_ARM_GLOB_DAT =          21;\n+enum R_ARM_JUMP_SLOT =         22;\n+enum R_ARM_RELATIVE =          23;\n+enum R_ARM_GOTOFF =            24;\n+enum R_ARM_GOTPC =             25;\n+enum R_ARM_GOT32 =             26;\n+enum R_ARM_PLT32 =             27;\n+enum R_ARM_ALU_PCREL_7_0 =     32;\n+enum R_ARM_ALU_PCREL_15_8 =    33;\n+enum R_ARM_ALU_PCREL_23_15 =   34;\n+enum R_ARM_LDR_SBREL_11_0 =    35;\n+enum R_ARM_ALU_SBREL_19_12 =   36;\n+enum R_ARM_ALU_SBREL_27_20 =   37;\n+enum R_ARM_TLS_GOTDESC =       90;\n+enum R_ARM_TLS_CALL =          91;\n+enum R_ARM_TLS_DESCSEQ =       92;\n+enum R_ARM_THM_TLS_CALL =      93;\n+enum R_ARM_GNU_VTENTRY =       100;\n+enum R_ARM_GNU_VTINHERIT =     101;\n+enum R_ARM_THM_PC11 =          102;\n+enum R_ARM_THM_PC9 =           103;\n+enum R_ARM_TLS_GD32 =          104;\n+enum R_ARM_TLS_LDM32 =         105;\n+enum R_ARM_TLS_LDO32 =         106;\n+enum R_ARM_TLS_IE32 =          107;\n+enum R_ARM_TLS_LE32 =          108;\n+enum R_ARM_THM_TLS_DESCSEQ =   129;\n+enum R_ARM_IRELATIVE =         160;\n+enum R_ARM_RXPC25 =            249;\n+enum R_ARM_RSBREL32 =          250;\n+enum R_ARM_THM_RPC22 =         251;\n+enum R_ARM_RREL32 =            252;\n+enum R_ARM_RABS22 =            253;\n+enum R_ARM_RPC24 =             254;\n+enum R_ARM_RBASE =             255;\n+enum R_ARM_NUM =               256;\n+enum EF_IA_64_MASKOS =         0x0000000f;\n+enum EF_IA_64_ABI64 =          0x00000010;\n+enum EF_IA_64_ARCH =           0xff000000;\n+enum PT_IA_64_ARCHEXT =        (PT_LOPROC + 0);\n+enum PT_IA_64_UNWIND =         (PT_LOPROC + 1);\n+enum PT_IA_64_HP_OPT_ANOT =    (PT_LOOS + 0x12);\n+enum PT_IA_64_HP_HSL_ANOT =    (PT_LOOS + 0x13);\n+enum PT_IA_64_HP_STACK =       (PT_LOOS + 0x14);\n+enum PF_IA_64_NORECOV =        0x80000000;\n+enum SHT_IA_64_EXT =           (SHT_LOPROC + 0);\n+enum SHT_IA_64_UNWIND =        (SHT_LOPROC + 1);\n+enum SHF_IA_64_SHORT =         0x10000000;\n+enum SHF_IA_64_NORECOV =       0x20000000;\n+enum DT_IA_64_PLT_RESERVE =    (DT_LOPROC + 0);\n+enum DT_IA_64_NUM =            1;\n+enum R_IA64_NONE =             0x00;\n+enum R_IA64_IMM14 =            0x21;\n+enum R_IA64_IMM22 =            0x22;\n+enum R_IA64_IMM64 =            0x23;\n+enum R_IA64_DIR32MSB =         0x24;\n+enum R_IA64_DIR32LSB =         0x25;\n+enum R_IA64_DIR64MSB =         0x26;\n+enum R_IA64_DIR64LSB =         0x27;\n+enum R_IA64_GPREL22 =          0x2a;\n+enum R_IA64_GPREL64I =         0x2b;\n+enum R_IA64_GPREL32MSB =       0x2c;\n+enum R_IA64_GPREL32LSB =       0x2d;\n+enum R_IA64_GPREL64MSB =       0x2e;\n+enum R_IA64_GPREL64LSB =       0x2f;\n+enum R_IA64_LTOFF22 =          0x32;\n+enum R_IA64_LTOFF64I =         0x33;\n+enum R_IA64_PLTOFF22 =         0x3a;\n+enum R_IA64_PLTOFF64I =        0x3b;\n+enum R_IA64_PLTOFF64MSB =      0x3e;\n+enum R_IA64_PLTOFF64LSB =      0x3f;\n+enum R_IA64_FPTR64I =          0x43;\n+enum R_IA64_FPTR32MSB =        0x44;\n+enum R_IA64_FPTR32LSB =        0x45;\n+enum R_IA64_FPTR64MSB =        0x46;\n+enum R_IA64_FPTR64LSB =        0x47;\n+enum R_IA64_PCREL60B =         0x48;\n+enum R_IA64_PCREL21B =         0x49;\n+enum R_IA64_PCREL21M =         0x4a;\n+enum R_IA64_PCREL21F =         0x4b;\n+enum R_IA64_PCREL32MSB =       0x4c;\n+enum R_IA64_PCREL32LSB =       0x4d;\n+enum R_IA64_PCREL64MSB =       0x4e;\n+enum R_IA64_PCREL64LSB =       0x4f;\n+enum R_IA64_LTOFF_FPTR22 =     0x52;\n+enum R_IA64_LTOFF_FPTR64I =    0x53;\n+enum R_IA64_LTOFF_FPTR32MSB =  0x54;\n+enum R_IA64_LTOFF_FPTR32LSB =  0x55;\n+enum R_IA64_LTOFF_FPTR64MSB =  0x56;\n+enum R_IA64_LTOFF_FPTR64LSB =  0x57;\n+enum R_IA64_SEGREL32MSB =      0x5c;\n+enum R_IA64_SEGREL32LSB =      0x5d;\n+enum R_IA64_SEGREL64MSB =      0x5e;\n+enum R_IA64_SEGREL64LSB =      0x5f;\n+enum R_IA64_SECREL32MSB =      0x64;\n+enum R_IA64_SECREL32LSB =      0x65;\n+enum R_IA64_SECREL64MSB =      0x66;\n+enum R_IA64_SECREL64LSB =      0x67;\n+enum R_IA64_REL32MSB =         0x6c;\n+enum R_IA64_REL32LSB =         0x6d;\n+enum R_IA64_REL64MSB =         0x6e;\n+enum R_IA64_REL64LSB =         0x6f;\n+enum R_IA64_LTV32MSB =         0x74;\n+enum R_IA64_LTV32LSB =         0x75;\n+enum R_IA64_LTV64MSB =         0x76;\n+enum R_IA64_LTV64LSB =         0x77;\n+enum R_IA64_PCREL21BI =        0x79;\n+enum R_IA64_PCREL22 =          0x7a;\n+enum R_IA64_PCREL64I =         0x7b;\n+enum R_IA64_IPLTMSB =          0x80;\n+enum R_IA64_IPLTLSB =          0x81;\n+enum R_IA64_COPY =             0x84;\n+enum R_IA64_SUB =              0x85;\n+enum R_IA64_LTOFF22X =         0x86;\n+enum R_IA64_LDXMOV =           0x87;\n+enum R_IA64_TPREL14 =          0x91;\n+enum R_IA64_TPREL22 =          0x92;\n+enum R_IA64_TPREL64I =         0x93;\n+enum R_IA64_TPREL64MSB =       0x96;\n+enum R_IA64_TPREL64LSB =       0x97;\n+enum R_IA64_LTOFF_TPREL22 =    0x9a;\n+enum R_IA64_DTPMOD64MSB =      0xa6;\n+enum R_IA64_DTPMOD64LSB =      0xa7;\n+enum R_IA64_LTOFF_DTPMOD22 =   0xaa;\n+enum R_IA64_DTPREL14 =         0xb1;\n+enum R_IA64_DTPREL22 =         0xb2;\n+enum R_IA64_DTPREL64I =        0xb3;\n+enum R_IA64_DTPREL32MSB =      0xb4;\n+enum R_IA64_DTPREL32LSB =      0xb5;\n+enum R_IA64_DTPREL64MSB =      0xb6;\n+enum R_IA64_DTPREL64LSB =      0xb7;\n+enum R_IA64_LTOFF_DTPREL22 =   0xba;\n+enum EF_SH_MACH_MASK =         0x1f;\n+enum EF_SH_UNKNOWN =           0x0;\n+enum EF_SH1 =                  0x1;\n+enum EF_SH2 =                  0x2;\n+enum EF_SH3 =                  0x3;\n+enum EF_SH_DSP =               0x4;\n+enum EF_SH3_DSP =              0x5;\n+enum EF_SH4AL_DSP =            0x6;\n+enum EF_SH3E =                 0x8;\n+enum EF_SH4 =                  0x9;\n+enum EF_SH2E =                 0xb;\n+enum EF_SH4A =                 0xc;\n+enum EF_SH2A =                 0xd;\n+enum EF_SH4_NOFPU =            0x10;\n+enum EF_SH4A_NOFPU =           0x11;\n+enum EF_SH4_NOMMU_NOFPU =      0x12;\n+enum EF_SH2A_NOFPU =           0x13;\n+enum EF_SH3_NOMMU =            0x14;\n+enum EF_SH2A_SH4_NOFPU =       0x15;\n+enum EF_SH2A_SH3_NOFPU =       0x16;\n+enum EF_SH2A_SH4 =             0x17;\n+enum EF_SH2A_SH3E =            0x18;\n+enum R_SH_NONE =               0;\n+enum R_SH_DIR32 =              1;\n+enum R_SH_REL32 =              2;\n+enum R_SH_DIR8WPN =            3;\n+enum R_SH_IND12W =             4;\n+enum R_SH_DIR8WPL =            5;\n+enum R_SH_DIR8WPZ =            6;\n+enum R_SH_DIR8BP =             7;\n+enum R_SH_DIR8W =              8;\n+enum R_SH_DIR8L =              9;\n+enum R_SH_SWITCH16 =           25;\n+enum R_SH_SWITCH32 =           26;\n+enum R_SH_USES =               27;\n+enum R_SH_COUNT =              28;\n+enum R_SH_ALIGN =              29;\n+enum R_SH_CODE =               30;\n+enum R_SH_DATA =               31;\n+enum R_SH_LABEL =              32;\n+enum R_SH_SWITCH8 =            33;\n+enum R_SH_GNU_VTINHERIT =      34;\n+enum R_SH_GNU_VTENTRY =        35;\n+enum R_SH_TLS_GD_32 =          144;\n+enum R_SH_TLS_LD_32 =          145;\n+enum R_SH_TLS_LDO_32 =         146;\n+enum R_SH_TLS_IE_32 =          147;\n+enum R_SH_TLS_LE_32 =          148;\n+enum R_SH_TLS_DTPMOD32 =       149;\n+enum R_SH_TLS_DTPOFF32 =       150;\n+enum R_SH_TLS_TPOFF32 =        151;\n+enum R_SH_GOT32 =              160;\n+enum R_SH_PLT32 =              161;\n+enum R_SH_COPY =               162;\n+enum R_SH_GLOB_DAT =           163;\n+enum R_SH_JMP_SLOT =           164;\n+enum R_SH_RELATIVE =           165;\n+enum R_SH_GOTOFF =             166;\n+enum R_SH_GOTPC =              167;\n+enum R_SH_NUM =                256;\n+\n+enum EF_S390_HIGH_GPRS =    0x00000001;\n+\n+enum R_390_NONE =              0;\n+enum R_390_8 =                 1;\n+enum R_390_12 =                2;\n+enum R_390_16 =                3;\n+enum R_390_32 =                4;\n+enum R_390_PC32 =              5;\n+enum R_390_GOT12 =             6;\n+enum R_390_GOT32 =             7;\n+enum R_390_PLT32 =             8;\n+enum R_390_COPY =              9;\n+enum R_390_GLOB_DAT =          10;\n+enum R_390_JMP_SLOT =          11;\n+enum R_390_RELATIVE =          12;\n+enum R_390_GOTOFF32 =          13;\n+enum R_390_GOTPC =             14;\n+enum R_390_GOT16 =             15;\n+enum R_390_PC16 =              16;\n+enum R_390_PC16DBL =           17;\n+enum R_390_PLT16DBL =          18;\n+enum R_390_PC32DBL =           19;\n+enum R_390_PLT32DBL =          20;\n+enum R_390_GOTPCDBL =          21;\n+enum R_390_64 =                22;\n+enum R_390_PC64 =              23;\n+enum R_390_GOT64 =             24;\n+enum R_390_PLT64 =             25;\n+enum R_390_GOTENT =            26;\n+enum R_390_GOTOFF16 =          27;\n+enum R_390_GOTOFF64 =          28;\n+enum R_390_GOTPLT12 =          29;\n+enum R_390_GOTPLT16 =          30;\n+enum R_390_GOTPLT32 =          31;\n+enum R_390_GOTPLT64 =          32;\n+enum R_390_GOTPLTENT =         33;\n+enum R_390_PLTOFF16 =          34;\n+enum R_390_PLTOFF32 =          35;\n+enum R_390_PLTOFF64 =          36;\n+enum R_390_TLS_LOAD =          37;\n+enum R_390_TLS_GDCALL =        38;\n+enum R_390_TLS_LDCALL =        39;\n+enum R_390_TLS_GD32 =          40;\n+enum R_390_TLS_GD64 =          41;\n+enum R_390_TLS_GOTIE12 =       42;\n+enum R_390_TLS_GOTIE32 =       43;\n+enum R_390_TLS_GOTIE64 =       44;\n+enum R_390_TLS_LDM32 =         45;\n+enum R_390_TLS_LDM64 =         46;\n+enum R_390_TLS_IE32 =          47;\n+enum R_390_TLS_IE64 =          48;\n+enum R_390_TLS_IEENT =         49;\n+enum R_390_TLS_LE32 =          50;\n+enum R_390_TLS_LE64 =          51;\n+enum R_390_TLS_LDO32 =         52;\n+enum R_390_TLS_LDO64 =         53;\n+enum R_390_TLS_DTPMOD =        54;\n+enum R_390_TLS_DTPOFF =        55;\n+enum R_390_TLS_TPOFF =         56;\n+enum R_390_20 =                57;\n+enum R_390_GOT20 =             58;\n+enum R_390_GOTPLT20 =          59;\n+enum R_390_TLS_GOTIE20 =       60;\n+enum R_390_IRELATIVE =         61;\n+enum R_390_NUM =               62;\n+enum R_CRIS_NONE =             0;\n+enum R_CRIS_8 =                1;\n+enum R_CRIS_16 =               2;\n+enum R_CRIS_32 =               3;\n+enum R_CRIS_8_PCREL =          4;\n+enum R_CRIS_16_PCREL =         5;\n+enum R_CRIS_32_PCREL =         6;\n+enum R_CRIS_GNU_VTINHERIT =    7;\n+enum R_CRIS_GNU_VTENTRY =      8;\n+enum R_CRIS_COPY =             9;\n+enum R_CRIS_GLOB_DAT =         10;\n+enum R_CRIS_JUMP_SLOT =        11;\n+enum R_CRIS_RELATIVE =         12;\n+enum R_CRIS_16_GOT =           13;\n+enum R_CRIS_32_GOT =           14;\n+enum R_CRIS_16_GOTPLT =        15;\n+enum R_CRIS_32_GOTPLT =        16;\n+enum R_CRIS_32_GOTREL =        17;\n+enum R_CRIS_32_PLT_GOTREL =    18;\n+enum R_CRIS_32_PLT_PCREL =     19;\n+\n+enum R_CRIS_NUM =              20;\n+enum R_X86_64_NONE =           0;\n+enum R_X86_64_64 =             1;\n+enum R_X86_64_PC32 =           2;\n+enum R_X86_64_GOT32 =          3;\n+enum R_X86_64_PLT32 =          4;\n+enum R_X86_64_COPY =           5;\n+enum R_X86_64_GLOB_DAT =       6;\n+enum R_X86_64_JUMP_SLOT =      7;\n+enum R_X86_64_RELATIVE =       8;\n+enum R_X86_64_GOTPCREL =       9;\n+enum R_X86_64_32 =             10;\n+enum R_X86_64_32S =            11;\n+enum R_X86_64_16 =             12;\n+enum R_X86_64_PC16 =           13;\n+enum R_X86_64_8 =              14;\n+enum R_X86_64_PC8 =            15;\n+enum R_X86_64_DTPMOD64 =       16;\n+enum R_X86_64_DTPOFF64 =       17;\n+enum R_X86_64_TPOFF64 =        18;\n+enum R_X86_64_TLSGD =          19;\n+enum R_X86_64_TLSLD =          20;\n+enum R_X86_64_DTPOFF32 =       21;\n+enum R_X86_64_GOTTPOFF =       22;\n+enum R_X86_64_TPOFF32 =        23;\n+enum R_X86_64_PC64 =           24;\n+enum R_X86_64_GOTOFF64 =       25;\n+enum R_X86_64_GOTPC32 =        26;\n+enum R_X86_64_GOT64 =          27;\n+enum R_X86_64_GOTPCREL64 =     28;\n+enum R_X86_64_GOTPC64 =        29;\n+enum R_X86_64_GOTPLT64 =       30;\n+enum R_X86_64_PLTOFF64 =       31;\n+enum R_X86_64_SIZE32 =         32;\n+enum R_X86_64_SIZE64 =         33;\n+enum R_X86_64_GOTPC32_TLSDESC = 34;\n+enum R_X86_64_TLSDESC_CALL =   35;\n+enum R_X86_64_TLSDESC =        36;\n+enum R_X86_64_IRELATIVE =      37;\n+enum R_X86_64_RELATIVE64 =     38;\n+\n+enum R_X86_64_NUM =            39;\n+enum R_MN10300_NONE =          0;\n+enum R_MN10300_32 =            1;\n+enum R_MN10300_16 =            2;\n+enum R_MN10300_8 =             3;\n+enum R_MN10300_PCREL32 =       4;\n+enum R_MN10300_PCREL16 =       5;\n+enum R_MN10300_PCREL8 =        6;\n+enum R_MN10300_GNU_VTINHERIT = 7;\n+enum R_MN10300_GNU_VTENTRY =   8;\n+enum R_MN10300_24 =            9;\n+enum R_MN10300_GOTPC32 =       10;\n+enum R_MN10300_GOTPC16 =       11;\n+enum R_MN10300_GOTOFF32 =      12;\n+enum R_MN10300_GOTOFF24 =      13;\n+enum R_MN10300_GOTOFF16 =      14;\n+enum R_MN10300_PLT32 =         15;\n+enum R_MN10300_PLT16 =         16;\n+enum R_MN10300_GOT32 =         17;\n+enum R_MN10300_GOT24 =         18;\n+enum R_MN10300_GOT16 =         19;\n+enum R_MN10300_COPY =          20;\n+enum R_MN10300_GLOB_DAT =      21;\n+enum R_MN10300_JMP_SLOT =      22;\n+enum R_MN10300_RELATIVE =      23;\n+enum R_MN10300_TLS_GD =        24;\n+enum R_MN10300_TLS_LD =        25;\n+enum R_MN10300_TLS_LDO =       26;\n+enum R_MN10300_TLS_GOTIE =     27;\n+enum R_MN10300_TLS_IE =        28;\n+enum R_MN10300_TLS_LE =        29;\n+enum R_MN10300_TLS_DTPMOD =    30;\n+enum R_MN10300_TLS_DTPOFF =    31;\n+enum R_MN10300_TLS_TPOFF =     32;\n+enum R_MN10300_SYM_DIFF =      33;\n+enum R_MN10300_ALIGN =         34;\n+enum R_MN10300_NUM =           35;\n+enum R_M32R_NONE =             0;\n+enum R_M32R_16 =               1;\n+enum R_M32R_32 =               2;\n+enum R_M32R_24 =               3;\n+enum R_M32R_10_PCREL =         4;\n+enum R_M32R_18_PCREL =         5;\n+enum R_M32R_26_PCREL =         6;\n+enum R_M32R_HI16_ULO =         7;\n+enum R_M32R_HI16_SLO =         8;\n+enum R_M32R_LO16 =             9;\n+enum R_M32R_SDA16 =            10;\n+enum R_M32R_GNU_VTINHERIT =    11;\n+enum R_M32R_GNU_VTENTRY =      12;\n+enum R_M32R_16_RELA =          33;\n+enum R_M32R_32_RELA =          34;\n+enum R_M32R_24_RELA =          35;\n+enum R_M32R_10_PCREL_RELA =    36;\n+enum R_M32R_18_PCREL_RELA =    37;\n+enum R_M32R_26_PCREL_RELA =    38;\n+enum R_M32R_HI16_ULO_RELA =    39;\n+enum R_M32R_HI16_SLO_RELA =    40;\n+enum R_M32R_LO16_RELA =        41;\n+enum R_M32R_SDA16_RELA =       42;\n+enum R_M32R_RELA_GNU_VTINHERIT =       43;\n+enum R_M32R_RELA_GNU_VTENTRY = 44;\n+enum R_M32R_REL32 =            45;\n+\n+enum R_M32R_GOT24 =            48;\n+enum R_M32R_26_PLTREL =        49;\n+enum R_M32R_COPY =             50;\n+enum R_M32R_GLOB_DAT =         51;\n+enum R_M32R_JMP_SLOT =         52;\n+enum R_M32R_RELATIVE =         53;\n+enum R_M32R_GOTOFF =           54;\n+enum R_M32R_GOTPC24 =          55;\n+enum R_M32R_GOT16_HI_ULO =     56;\n+enum R_M32R_GOT16_HI_SLO =     57;\n+enum R_M32R_GOT16_LO =         58;\n+enum R_M32R_GOTPC_HI_ULO =     59;\n+enum R_M32R_GOTPC_HI_SLO =     60;\n+enum R_M32R_GOTPC_LO =         61;\n+enum R_M32R_GOTOFF_HI_ULO =    62;\n+enum R_M32R_GOTOFF_HI_SLO =    63;\n+enum R_M32R_GOTOFF_LO =        64;\n+enum R_M32R_NUM =              256;\n+enum R_TILEPRO_NONE =          0;\n+enum R_TILEPRO_32 =            1;\n+enum R_TILEPRO_16 =            2;\n+enum R_TILEPRO_8 =             3;\n+enum R_TILEPRO_32_PCREL =      4;\n+enum R_TILEPRO_16_PCREL =      5;\n+enum R_TILEPRO_8_PCREL =       6;\n+enum R_TILEPRO_LO16 =          7;\n+enum R_TILEPRO_HI16 =          8;\n+enum R_TILEPRO_HA16 =          9;\n+enum R_TILEPRO_COPY =          10;\n+enum R_TILEPRO_GLOB_DAT =      11;\n+enum R_TILEPRO_JMP_SLOT =      12;\n+enum R_TILEPRO_RELATIVE =      13;\n+enum R_TILEPRO_BROFF_X1 =      14;\n+enum R_TILEPRO_JOFFLONG_X1 =   15;\n+enum R_TILEPRO_JOFFLONG_X1_PLT = 16;\n+enum R_TILEPRO_IMM8_X0 =       17;\n+enum R_TILEPRO_IMM8_Y0 =       18;\n+enum R_TILEPRO_IMM8_X1 =       19;\n+enum R_TILEPRO_IMM8_Y1 =       20;\n+enum R_TILEPRO_MT_IMM15_X1 =   21;\n+enum R_TILEPRO_MF_IMM15_X1 =   22;\n+enum R_TILEPRO_IMM16_X0 =      23;\n+enum R_TILEPRO_IMM16_X1 =      24;\n+enum R_TILEPRO_IMM16_X0_LO =   25;\n+enum R_TILEPRO_IMM16_X1_LO =   26;\n+enum R_TILEPRO_IMM16_X0_HI =   27;\n+enum R_TILEPRO_IMM16_X1_HI =   28;\n+enum R_TILEPRO_IMM16_X0_HA =   29;\n+enum R_TILEPRO_IMM16_X1_HA =   30;\n+enum R_TILEPRO_IMM16_X0_PCREL = 31;\n+enum R_TILEPRO_IMM16_X1_PCREL = 32;\n+enum R_TILEPRO_IMM16_X0_LO_PCREL = 33;\n+enum R_TILEPRO_IMM16_X1_LO_PCREL = 34;\n+enum R_TILEPRO_IMM16_X0_HI_PCREL = 35;\n+enum R_TILEPRO_IMM16_X1_HI_PCREL = 36;\n+enum R_TILEPRO_IMM16_X0_HA_PCREL = 37;\n+enum R_TILEPRO_IMM16_X1_HA_PCREL = 38;\n+enum R_TILEPRO_IMM16_X0_GOT =  39;\n+enum R_TILEPRO_IMM16_X1_GOT =  40;\n+enum R_TILEPRO_IMM16_X0_GOT_LO = 41;\n+enum R_TILEPRO_IMM16_X1_GOT_LO = 42;\n+enum R_TILEPRO_IMM16_X0_GOT_HI = 43;\n+enum R_TILEPRO_IMM16_X1_GOT_HI = 44;\n+enum R_TILEPRO_IMM16_X0_GOT_HA = 45;\n+enum R_TILEPRO_IMM16_X1_GOT_HA = 46;\n+enum R_TILEPRO_MMSTART_X0 =    47;\n+enum R_TILEPRO_MMEND_X0 =      48;\n+enum R_TILEPRO_MMSTART_X1 =    49;\n+enum R_TILEPRO_MMEND_X1 =      50;\n+enum R_TILEPRO_SHAMT_X0 =      51;\n+enum R_TILEPRO_SHAMT_X1 =      52;\n+enum R_TILEPRO_SHAMT_Y0 =      53;\n+enum R_TILEPRO_SHAMT_Y1 =      54;\n+enum R_TILEPRO_DEST_IMM8_X1 =  55;\n+enum R_TILEPRO_TLS_GD_CALL =   60;\n+enum R_TILEPRO_IMM8_X0_TLS_GD_ADD = 61;\n+enum R_TILEPRO_IMM8_X1_TLS_GD_ADD = 62;\n+enum R_TILEPRO_IMM8_Y0_TLS_GD_ADD = 63;\n+enum R_TILEPRO_IMM8_Y1_TLS_GD_ADD = 64;\n+enum R_TILEPRO_TLS_IE_LOAD =   65;\n+enum R_TILEPRO_IMM16_X0_TLS_GD = 66;\n+enum R_TILEPRO_IMM16_X1_TLS_GD = 67;\n+enum R_TILEPRO_IMM16_X0_TLS_GD_LO = 68;\n+enum R_TILEPRO_IMM16_X1_TLS_GD_LO = 69;\n+enum R_TILEPRO_IMM16_X0_TLS_GD_HI = 70;\n+enum R_TILEPRO_IMM16_X1_TLS_GD_HI = 71;\n+enum R_TILEPRO_IMM16_X0_TLS_GD_HA = 72;\n+enum R_TILEPRO_IMM16_X1_TLS_GD_HA = 73;\n+enum R_TILEPRO_IMM16_X0_TLS_IE = 74;\n+enum R_TILEPRO_IMM16_X1_TLS_IE = 75;\n+enum R_TILEPRO_IMM16_X0_TLS_IE_LO = 76;\n+enum R_TILEPRO_IMM16_X1_TLS_IE_LO = 77;\n+enum R_TILEPRO_IMM16_X0_TLS_IE_HI = 78;\n+enum R_TILEPRO_IMM16_X1_TLS_IE_HI = 79;\n+enum R_TILEPRO_IMM16_X0_TLS_IE_HA = 80;\n+enum R_TILEPRO_IMM16_X1_TLS_IE_HA = 81;\n+enum R_TILEPRO_TLS_DTPMOD32 =  82;\n+enum R_TILEPRO_TLS_DTPOFF32 =  83;\n+enum R_TILEPRO_TLS_TPOFF32 =   84;\n+enum R_TILEPRO_IMM16_X0_TLS_LE = 85;\n+enum R_TILEPRO_IMM16_X1_TLS_LE = 86;\n+enum R_TILEPRO_IMM16_X0_TLS_LE_LO = 87;\n+enum R_TILEPRO_IMM16_X1_TLS_LE_LO = 88;\n+enum R_TILEPRO_IMM16_X0_TLS_LE_HI = 89;\n+enum R_TILEPRO_IMM16_X1_TLS_LE_HI = 90;\n+enum R_TILEPRO_IMM16_X0_TLS_LE_HA = 91;\n+enum R_TILEPRO_IMM16_X1_TLS_LE_HA = 92;\n+\n+enum R_TILEPRO_GNU_VTINHERIT = 128;\n+enum R_TILEPRO_GNU_VTENTRY =   129;\n+\n+enum R_TILEPRO_NUM =           130;\n+enum R_TILEGX_NONE =           0;\n+enum R_TILEGX_64 =             1;\n+enum R_TILEGX_32 =             2;\n+enum R_TILEGX_16 =             3;\n+enum R_TILEGX_8 =              4;\n+enum R_TILEGX_64_PCREL =       5;\n+enum R_TILEGX_32_PCREL =       6;\n+enum R_TILEGX_16_PCREL =       7;\n+enum R_TILEGX_8_PCREL =        8;\n+enum R_TILEGX_HW0 =            9;\n+enum R_TILEGX_HW1 =            10;\n+enum R_TILEGX_HW2 =            11;\n+enum R_TILEGX_HW3 =            12;\n+enum R_TILEGX_HW0_LAST =       13;\n+enum R_TILEGX_HW1_LAST =       14;\n+enum R_TILEGX_HW2_LAST =       15;\n+enum R_TILEGX_COPY =           16;\n+enum R_TILEGX_GLOB_DAT =       17;\n+enum R_TILEGX_JMP_SLOT =       18;\n+enum R_TILEGX_RELATIVE =       19;\n+enum R_TILEGX_BROFF_X1 =       20;\n+enum R_TILEGX_JUMPOFF_X1 =     21;\n+enum R_TILEGX_JUMPOFF_X1_PLT = 22;\n+enum R_TILEGX_IMM8_X0 =        23;\n+enum R_TILEGX_IMM8_Y0 =        24;\n+enum R_TILEGX_IMM8_X1 =        25;\n+enum R_TILEGX_IMM8_Y1 =        26;\n+enum R_TILEGX_DEST_IMM8_X1 =   27;\n+enum R_TILEGX_MT_IMM14_X1 =    28;\n+enum R_TILEGX_MF_IMM14_X1 =    29;\n+enum R_TILEGX_MMSTART_X0 =     30;\n+enum R_TILEGX_MMEND_X0 =       31;\n+enum R_TILEGX_SHAMT_X0 =       32;\n+enum R_TILEGX_SHAMT_X1 =       33;\n+enum R_TILEGX_SHAMT_Y0 =       34;\n+enum R_TILEGX_SHAMT_Y1 =       35;\n+enum R_TILEGX_IMM16_X0_HW0 =   36;\n+enum R_TILEGX_IMM16_X1_HW0 =   37;\n+enum R_TILEGX_IMM16_X0_HW1 =   38;\n+enum R_TILEGX_IMM16_X1_HW1 =   39;\n+enum R_TILEGX_IMM16_X0_HW2 =   40;\n+enum R_TILEGX_IMM16_X1_HW2 =   41;\n+enum R_TILEGX_IMM16_X0_HW3 =   42;\n+enum R_TILEGX_IMM16_X1_HW3 =   43;\n+enum R_TILEGX_IMM16_X0_HW0_LAST = 44;\n+enum R_TILEGX_IMM16_X1_HW0_LAST = 45;\n+enum R_TILEGX_IMM16_X0_HW1_LAST = 46;\n+enum R_TILEGX_IMM16_X1_HW1_LAST = 47;\n+enum R_TILEGX_IMM16_X0_HW2_LAST = 48;\n+enum R_TILEGX_IMM16_X1_HW2_LAST = 49;\n+enum R_TILEGX_IMM16_X0_HW0_PCREL = 50;\n+enum R_TILEGX_IMM16_X1_HW0_PCREL = 51;\n+enum R_TILEGX_IMM16_X0_HW1_PCREL = 52;\n+enum R_TILEGX_IMM16_X1_HW1_PCREL = 53;\n+enum R_TILEGX_IMM16_X0_HW2_PCREL = 54;\n+enum R_TILEGX_IMM16_X1_HW2_PCREL = 55;\n+enum R_TILEGX_IMM16_X0_HW3_PCREL = 56;\n+enum R_TILEGX_IMM16_X1_HW3_PCREL = 57;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_PCREL = 58;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_PCREL = 59;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_PCREL = 60;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_PCREL = 61;\n+enum R_TILEGX_IMM16_X0_HW2_LAST_PCREL = 62;\n+enum R_TILEGX_IMM16_X1_HW2_LAST_PCREL = 63;\n+enum R_TILEGX_IMM16_X0_HW0_GOT = 64;\n+enum R_TILEGX_IMM16_X1_HW0_GOT = 65;\n+enum R_TILEGX_IMM16_X0_HW0_PLT_PCREL = 66;\n+enum R_TILEGX_IMM16_X1_HW0_PLT_PCREL = 67;\n+enum R_TILEGX_IMM16_X0_HW1_PLT_PCREL = 68;\n+enum R_TILEGX_IMM16_X1_HW1_PLT_PCREL = 69;\n+enum R_TILEGX_IMM16_X0_HW2_PLT_PCREL = 70;\n+enum R_TILEGX_IMM16_X1_HW2_PLT_PCREL = 71;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_GOT = 72;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_GOT = 73;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_GOT = 74;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_GOT = 75;\n+enum R_TILEGX_IMM16_X0_HW3_PLT_PCREL = 76;\n+enum R_TILEGX_IMM16_X1_HW3_PLT_PCREL = 77;\n+enum R_TILEGX_IMM16_X0_HW0_TLS_GD = 78;\n+enum R_TILEGX_IMM16_X1_HW0_TLS_GD = 79;\n+enum R_TILEGX_IMM16_X0_HW0_TLS_LE = 80;\n+enum R_TILEGX_IMM16_X1_HW0_TLS_LE = 81;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE = 82;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE = 83;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE = 84;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE = 85;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD = 86;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD = 87;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD = 88;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD = 89;\n+enum R_TILEGX_IMM16_X0_HW0_TLS_IE = 92;\n+enum R_TILEGX_IMM16_X1_HW0_TLS_IE = 93;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL = 94;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL = 95;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL = 96;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL = 97;\n+enum R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL = 98;\n+enum R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL = 99;\n+enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE = 100;\n+enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE = 101;\n+enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE = 102;\n+enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE = 103;\n+enum R_TILEGX_TLS_DTPMOD64 =   106;\n+enum R_TILEGX_TLS_DTPOFF64 =   107;\n+enum R_TILEGX_TLS_TPOFF64 =    108;\n+enum R_TILEGX_TLS_DTPMOD32 =   109;\n+enum R_TILEGX_TLS_DTPOFF32 =   110;\n+enum R_TILEGX_TLS_TPOFF32 =    111;\n+enum R_TILEGX_TLS_GD_CALL =    112;\n+enum R_TILEGX_IMM8_X0_TLS_GD_ADD = 113;\n+enum R_TILEGX_IMM8_X1_TLS_GD_ADD = 114;\n+enum R_TILEGX_IMM8_Y0_TLS_GD_ADD = 115;\n+enum R_TILEGX_IMM8_Y1_TLS_GD_ADD = 116;\n+enum R_TILEGX_TLS_IE_LOAD =    117;\n+enum R_TILEGX_IMM8_X0_TLS_ADD = 118;\n+enum R_TILEGX_IMM8_X1_TLS_ADD = 119;\n+enum R_TILEGX_IMM8_Y0_TLS_ADD = 120;\n+enum R_TILEGX_IMM8_Y1_TLS_ADD = 121;\n+\n+enum R_TILEGX_GNU_VTINHERIT =  128;\n+enum R_TILEGX_GNU_VTENTRY =    129;\n+\n+enum R_TILEGX_NUM =            130;"}, {"sha": "134cdf0650fc2f42abcd7f98f581adf891b94911", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf32.d", "status": "modified", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf32.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,108 +13,13 @@ nothrow:\n import core.stdc.stdint;\n public import core.sys.freebsd.sys.elf_common;\n \n-alias uint16_t Elf32_Half;\n-alias uint32_t Elf32_Word;\n-alias int32_t  Elf32_Sword;\n alias uint64_t Elf32_Lword;\n-alias uint32_t Elf32_Addr;\n-alias uint32_t Elf32_Off;\n alias Elf32_Word Elf32_Hashelt;\n alias Elf32_Word Elf32_Size;\n alias Elf32_Sword Elf32_Ssize;\n \n-struct Elf32_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf32_Half    e_type;\n-    Elf32_Half    e_machine;\n-    Elf32_Word    e_version;\n-    Elf32_Addr    e_entry;\n-    Elf32_Off     e_phoff;\n-    Elf32_Off     e_shoff;\n-    Elf32_Word    e_flags;\n-    Elf32_Half    e_ehsize;\n-    Elf32_Half    e_phentsize;\n-    Elf32_Half    e_phnum;\n-    Elf32_Half    e_shentsize;\n-    Elf32_Half    e_shnum;\n-    Elf32_Half    e_shstrndx;\n-}\n-\n-struct Elf32_Shdr\n-{\n-    Elf32_Word    sh_name;\n-    Elf32_Word    sh_type;\n-    Elf32_Word    sh_flags;\n-    Elf32_Addr    sh_addr;\n-    Elf32_Off     sh_offset;\n-    Elf32_Word    sh_size;\n-    Elf32_Word    sh_link;\n-    Elf32_Word    sh_info;\n-    Elf32_Word    sh_addralign;\n-    Elf32_Word    sh_entsize;\n-}\n-\n-struct Elf32_Phdr\n-{\n-    Elf32_Word    p_type;\n-    Elf32_Off     p_offset;\n-    Elf32_Addr    p_vaddr;\n-    Elf32_Addr    p_paddr;\n-    Elf32_Word    p_filesz;\n-    Elf32_Word    p_memsz;\n-    Elf32_Word    p_flags;\n-    Elf32_Word    p_align;\n-}\n-\n-struct Elf32_Dyn\n-{\n-  Elf32_Sword   d_tag;\n-  union _d_un\n-  {\n-      Elf32_Word d_val;\n-      Elf32_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf32_Rel\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-}\n-\n-struct Elf32_Rela\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-    Elf32_Sword   r_addend;\n-}\n-\n-extern (D)\n-{\n-    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n-    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n-    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n-}\n-\n alias Elf_Note Elf32_Nhdr;\n \n-struct Elf32_Move\n-{\n-    Elf32_Lword   m_value;\n-    Elf32_Word    m_info;\n-    Elf32_Word    m_poffset;\n-    Elf32_Half    m_repeat;\n-    Elf32_Half    m_stride;\n-}\n-\n-extern (D)\n-{\n-    auto ELF32_M_SYM(I)(I info) { return info >> 8; }\n-    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf32_Cap\n {\n     Elf32_Word    c_tag;\n@@ -125,63 +30,7 @@ struct Elf32_Cap\n     } _c_un c_un;\n }\n \n-struct Elf32_Sym\n-{\n-    Elf32_Word    st_name;\n-    Elf32_Addr    st_value;\n-    Elf32_Word    st_size;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf32_Half st_shndx;\n-}\n-\n extern (D)\n {\n-    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF32_ST_TYPE(T)(T val) { return val & 0xf; }\n-    auto ELF32_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n     auto ELF32_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }\n-\n-struct Elf32_Verdef\n-{\n-    Elf32_Half    vd_version;\n-    Elf32_Half    vd_flags;\n-    Elf32_Half    vd_ndx;\n-    Elf32_Half    vd_cnt;\n-    Elf32_Word    vd_hash;\n-    Elf32_Word    vd_aux;\n-    Elf32_Word    vd_next;\n-}\n-\n-struct Elf32_Verdaux\n-{\n-    Elf32_Word    vda_name;\n-    Elf32_Word    vda_next;\n-}\n-\n-struct Elf32_Verneed\n-{\n-    Elf32_Half    vn_version;\n-    Elf32_Half    vn_cnt;\n-    Elf32_Word    vn_file;\n-    Elf32_Word    vn_aux;\n-    Elf32_Word    vn_next;\n-}\n-\n-struct Elf32_Vernaux\n-{\n-    Elf32_Word    vna_hash;\n-    Elf32_Half    vna_flags;\n-    Elf32_Half    vna_other;\n-    Elf32_Word    vna_name;\n-    Elf32_Word    vna_next;\n-}\n-\n-alias Elf32_Half Elf32_Versym;\n-\n-struct Elf32_Syminfo\n-{\n-    Elf32_Half si_boundto;\n-    Elf32_Half si_flags;\n-}"}, {"sha": "69528217941e555ebae03c02a1d9062940262177", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf64.d", "status": "modified", "additions": 0, "deletions": 159, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,123 +13,20 @@ nothrow:\n import core.stdc.stdint;\n public import core.sys.freebsd.sys.elf_common;\n \n-alias uint16_t Elf64_Half;\n-alias uint32_t Elf64_Word;\n-alias int32_t  Elf64_Sword;\n alias uint64_t Elf64_Lword;\n-alias uint64_t Elf64_Xword;\n-alias int64_t  Elf64_Sxword;\n-alias uint64_t Elf64_Addr;\n-alias uint64_t Elf64_Off;\n alias Elf64_Word Elf64_Hashelt;\n alias Elf64_Xword Elf64_Size;\n alias Elf64_Sxword Elf64_Ssize;\n \n-struct Elf64_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf64_Half    e_type;\n-    Elf64_Half    e_machine;\n-    Elf64_Word    e_version;\n-    Elf64_Addr    e_entry;\n-    Elf64_Off     e_phoff;\n-    Elf64_Off     e_shoff;\n-    Elf64_Word    e_flags;\n-    Elf64_Half    e_ehsize;\n-    Elf64_Half    e_phentsize;\n-    Elf64_Half    e_phnum;\n-    Elf64_Half    e_shentsize;\n-    Elf64_Half    e_shnum;\n-    Elf64_Half    e_shstrndx;\n-}\n-\n-struct Elf64_Lib\n-{\n-    Elf64_Word    l_name;\n-    Elf64_Word    l_time_stamp;\n-    Elf64_Word    l_checksum;\n-    Elf64_Word    l_version;\n-    Elf64_Word    l_flags;\n-}\n-\n-struct Elf64_Shdr\n-{\n-    Elf64_Word    sh_name;\n-    Elf64_Word    sh_type;\n-    Elf64_Xword   sh_flags;\n-    Elf64_Addr    sh_addr;\n-    Elf64_Off     sh_offset;\n-    Elf64_Xword   sh_size;\n-    Elf64_Word    sh_link;\n-    Elf64_Word    sh_info;\n-    Elf64_Xword   sh_addralign;\n-    Elf64_Xword   sh_entsize;\n-}\n-\n-struct Elf64_Phdr\n-{\n-    Elf64_Word    p_type;\n-    Elf64_Word    p_flags;\n-    Elf64_Off     p_offset;\n-    Elf64_Addr    p_vaddr;\n-    Elf64_Addr    p_paddr;\n-    Elf64_Xword   p_filesz;\n-    Elf64_Xword   p_memsz;\n-    Elf64_Xword   p_align;\n-}\n-\n-struct Elf64_Dyn\n-{\n-  Elf64_Sxword  d_tag;\n-  union _d_un\n-  {\n-      Elf64_Xword d_val;\n-      Elf64_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf64_Rel\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-}\n-\n-struct Elf64_Rela\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-    Elf64_Sxword  r_addend;\n-}\n-\n extern (D)\n {\n-    auto ELF64_R_SYM(I)(I i) { return i >> 32; }\n-    auto ELF64_R_TYPE(I)(I i) { return i & 0xffffffff; }\n-    auto ELF64_R_INFO(S, T)(S sym, T type) { return (sym << 32) + (type & 0xffffffff); }\n-\n     auto ELF64_R_TYPE_DATA(I)(I i) { return (cast(Elf64_Xword) i << 32) >> 40; }\n     auto ELF64_R_TYPE_ID(I)(I i) { return (cast(Elf64_Xword) i << 56 ) >> 56; }\n     auto ELF64_R_TYPE_INFO(D, T)(D d, T t) { return cast(Elf64_Xword) d << 8 + cast(Elf64_Xword) t; }\n }\n \n alias Elf_Note Elf64_Nhdr;\n \n-struct Elf64_Move\n-{\n-    Elf64_Lword   m_value;\n-    Elf64_Xword   m_info;\n-    Elf64_Xword   m_poffset;\n-    Elf64_Half    m_repeat;\n-    Elf64_Half    m_stride;\n-}\n-\n-extern (D)\n-{\n-    auto ELF64_M_SYM(I)(I info) { return info >> 8; }\n-    auto ELF64_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF64_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf64_Cap\n {\n     Elf64_Xword   c_tag;\n@@ -140,63 +37,7 @@ struct Elf64_Cap\n     } _c_un c_un;\n }\n \n-struct Elf64_Sym\n-{\n-    Elf64_Word    st_name;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf64_Half st_shndx;\n-    Elf64_Addr    st_value;\n-    Elf64_Xword   st_size;\n-}\n-\n extern (D)\n {\n-    auto ELF64_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF64_ST_TYPE(T)(T val) { return val & 0xf; }\n-    auto ELF64_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n     auto ELF64_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }\n-\n-struct Elf64_Verdef\n-{\n-    Elf64_Half    vd_version;\n-    Elf64_Half    vd_flags;\n-    Elf64_Half    vd_ndx;\n-    Elf64_Half    vd_cnt;\n-    Elf64_Word    vd_hash;\n-    Elf64_Word    vd_aux;\n-    Elf64_Word    vd_next;\n-}\n-\n-struct Elf64_Verdaux\n-{\n-    Elf64_Word    vda_name;\n-    Elf64_Word    vda_next;\n-}\n-\n-struct Elf64_Verneed\n-{\n-    Elf64_Half    vn_version;\n-    Elf64_Half    vn_cnt;\n-    Elf64_Word    vn_file;\n-    Elf64_Word    vn_aux;\n-    Elf64_Word    vn_next;\n-}\n-\n-struct Elf64_Vernaux\n-{\n-    Elf64_Word    vna_hash;\n-    Elf64_Half    vna_flags;\n-    Elf64_Half    vna_other;\n-    Elf64_Word    vna_name;\n-    Elf64_Word    vna_next;\n-}\n-\n-alias Elf64_Half Elf64_Versym;\n-\n-struct Elf64_Syminfo\n-{\n-    Elf64_Half si_boundto;\n-    Elf64_Half si_flags;\n-}"}, {"sha": "05e78bf0dc6caf6c3280a7964a2bb5a3da184c86", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf_common.d", "status": "modified", "additions": 17, "deletions": 786, "changes": 803, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -11,6 +11,7 @@ pure:\n nothrow:\n \n import core.stdc.stdint;\n+public import core.sys.elf;\n \n struct Elf_Note\n {\n@@ -27,57 +28,7 @@ struct Elf_GNU_Hash_Header\n     uint32_t      gh_shift2;\n }\n \n-enum EI_MAG0 =         0;\n-enum EI_MAG1 =         1;\n-enum EI_MAG2 =         2;\n-enum EI_MAG3 =         3;\n-enum EI_CLASS =        4;\n-enum EI_DATA =         5;\n-enum EI_VERSION =      6;\n-enum EI_OSABI =        7;\n-enum EI_ABIVERSION =   8;\n enum OLD_EI_BRAND =    8;\n-enum EI_PAD =          9;\n-enum EI_NIDENT =       16;\n-\n-enum ELFMAG0 =         0x7f;\n-enum ELFMAG1 =         'E';\n-enum ELFMAG2 =         'L';\n-enum ELFMAG3 =         'F';\n-enum ELFMAG =          \"\\177ELF\";\n-enum SELFMAG =         4;\n-\n-enum EV_NONE =         0;\n-enum EV_CURRENT =      1;\n-\n-enum ELFCLASSNONE =    0;\n-enum ELFCLASS32 =      1;\n-enum ELFCLASS64 =      2;\n-\n-enum ELFDATANONE =     0;\n-enum ELFDATA2LSB =     1;\n-enum ELFDATA2MSB =     2;\n-\n-enum ELFOSABI_NONE =           0;\n-enum ELFOSABI_SYSV =           0;\n-enum ELFOSABI_HPUX =           1;\n-enum ELFOSABI_NETBSD =         2;\n-enum ELFOSABI_LINUX =          3;\n-enum ELFOSABI_HURD  =          4;\n-enum ELFOSABI_86OPEN =         5;\n-enum ELFOSABI_SOLARIS =        6;\n-enum ELFOSABI_AIX =            7;\n-enum ELFOSABI_MONTEREY =       7;\n-enum ELFOSABI_IRIX =           8;\n-enum ELFOSABI_FREEBSD =        9;\n-enum ELFOSABI_TRU64 =          10;\n-enum ELFOSABI_MODESTO =        11;\n-enum ELFOSABI_OPENBSD =        12;\n-enum ELFOSABI_OPENVMS =        13;\n-enum ELFOSABI_NSK =            14;\n-enum ELFOSABI_AROS =           15;\n-enum ELFOSABI_ARM =            97;\n-enum ELFOSABI_STANDALONE =     255;\n \n extern (D)\n {\n@@ -87,306 +38,28 @@ extern (D)\n                                     ehdr.e_ident[EI_MAG3] == ELFMAG3; }\n }\n \n-enum ET_NONE =         0;\n-enum ET_REL =          1;\n-enum ET_EXEC =         2;\n-enum ET_DYN =          3;\n-enum ET_CORE =         4;\n-enum ET_LOOS =         0xfe00;\n-enum ET_HIOS =         0xfeff;\n-enum ET_LOPROC =       0xff00;\n-enum ET_HIPROC =       0xffff;\n-\n-enum EM_NONE =          0;\n-enum EM_M32 =           1;\n-enum EM_SPARC =         2;\n-enum EM_386 =           3;\n-enum EM_68K =           4;\n-enum EM_88K =           5;\n-enum EM_860 =           7;\n-enum EM_MIPS =          8;\n-enum EM_S370 =          9;\n-enum EM_MIPS_RS3_LE =  10;\n-enum EM_PARISC =       15;\n-enum EM_VPP500 =       17;\n-enum EM_SPARC32PLUS =  18;\n-enum EM_960 =          19;\n-enum EM_PPC =          20;\n-enum EM_PPC64 =        21;\n-enum EM_S390 =         22;\n-enum EM_V800 =         36;\n-enum EM_FR20 =         37;\n-enum EM_RH32 =         38;\n-enum EM_RCE =          39;\n-enum EM_ARM =          40;\n-enum EM_SH =           42;\n-enum EM_SPARCV9 =      43;\n-enum EM_TRICORE =      44;\n-enum EM_ARC =          45;\n-enum EM_H8_300 =       46;\n-enum EM_H8_300H =      47;\n-enum EM_H8S =          48;\n-enum EM_H8_500 =       49;\n-enum EM_IA_64 =        50;\n-enum EM_MIPS_X =       51;\n-enum EM_COLDFIRE =     52;\n-enum EM_68HC12 =       53;\n-enum EM_MMA =          54;\n-enum EM_PCP =          55;\n-enum EM_NCPU =         56;\n-enum EM_NDR1 =         57;\n-enum EM_STARCORE =     58;\n-enum EM_ME16 =         59;\n-enum EM_ST100 =        60;\n-enum EM_TINYJ =        61;\n-enum EM_X86_64 =       62;\n-enum EM_AMD64 =        62;\n-enum EM_PDSP =         63;\n-enum EM_FX66 =         66;\n-enum EM_ST9PLUS =      67;\n-enum EM_ST7 =          68;\n-enum EM_68HC16 =       69;\n-enum EM_68HC11 =       70;\n-enum EM_68HC08 =       71;\n-enum EM_68HC05 =       72;\n-enum EM_SVX =          73;\n-enum EM_ST19 =         74;\n-enum EM_VAX =          75;\n-enum EM_CRIS =         76;\n-enum EM_JAVELIN =      77;\n-enum EM_FIREPATH =     78;\n-enum EM_ZSP =          79;\n-enum EM_MMIX =         80;\n-enum EM_HUANY =        81;\n-enum EM_PRISM =        82;\n-enum EM_AVR =          83;\n-enum EM_FR30 =         84;\n-enum EM_D10V =         85;\n-enum EM_D30V =         86;\n-enum EM_V850 =         87;\n-enum EM_M32R =         88;\n-enum EM_MN10300 =      89;\n-enum EM_MN10200 =      90;\n-enum EM_PJ =           91;\n-enum EM_OPENRISC =     92;\n-enum EM_ARC_A5 =       93;\n-enum EM_XTENSA =       94;\n-enum EM_VIDEOCORE =    95;\n-enum EM_TMM_GPP =      96;\n-enum EM_NS32K =        97;\n-enum EM_TPC =          98;\n-enum EM_SNP1K =        99;\n-enum EM_ST200 =       100;\n-enum EM_IP2K =        101;\n-enum EM_MAX =         102;\n-enum EM_CR =          103;\n-enum EM_F2MC16 =      104;\n-enum EM_MSP430 =      105;\n-enum EM_BLACKFIN =    106;\n-enum EM_SE_C33 =      107;\n-enum EM_SEP =         108;\n-enum EM_ARCA =        109;\n-enum EM_UNICORE =     110;\n-\n enum EM_486 =           6;\n enum EM_MIPS_RS4_BE =  10;\n enum EM_ALPHA_STD =    41;\n-enum EM_ALPHA =    0x9026;\n-\n-enum SHN_UNDEF =       0;\n-enum SHN_LORESERVE =   0xff00;\n-enum SHN_LOPROC =      0xff00;\n-enum SHN_HIPROC =      0xff1f;\n-enum SHN_LOOS =        0xff20;\n-enum SHN_HIOS =        0xff3f;\n-enum SHN_ABS =         0xfff1;\n-enum SHN_COMMON =      0xfff2;\n-enum SHN_XINDEX =      0xffff;\n-enum SHN_HIRESERVE =   0xffff;\n-\n-enum SHT_NULL =          0;\n-enum SHT_PROGBITS =      1;\n-enum SHT_SYMTAB =        2;\n-enum SHT_STRTAB =        3;\n-enum SHT_RELA =          4;\n-enum SHT_HASH =          5;\n-enum SHT_DYNAMIC =       6;\n-enum SHT_NOTE =          7;\n-enum SHT_NOBITS =        8;\n-enum SHT_REL =           9;\n-enum SHT_SHLIB =         10;\n-enum SHT_DYNSYM =        11;\n-enum SHT_INIT_ARRAY =    14;\n-enum SHT_FINI_ARRAY =    15;\n-enum SHT_PREINIT_ARRAY = 16;\n-enum SHT_GROUP =         17;\n-enum SHT_SYMTAB_SHNDX =  18;\n-enum SHT_LOOS =          0x60000000;\n-enum SHT_LOSUNW =        0x6ffffff4;\n enum SHT_SUNW_dof =      0x6ffffff4;\n enum SHT_SUNW_cap =      0x6ffffff5;\n enum SHT_SUNW_SIGNATURE = 0x6ffffff6;\n-enum SHT_GNU_HASH =      0x6ffffff6;\n-enum SHT_SUNW_ANNOTATE = 0x6ffffff7;\n-enum SHT_SUNW_DEBUGSTR = 0x6ffffff8;\n-enum SHT_SUNW_DEBUG =    0x6ffffff9;\n-enum SHT_SUNW_move =     0x6ffffffa;\n-enum SHT_SUNW_COMDAT =   0x6ffffffb;\n-enum SHT_SUNW_syminfo =  0x6ffffffc;\n enum SHT_SUNW_verdef =   0x6ffffffd;\n-enum SHT_GNU_verdef =    0x6ffffffd;\n enum SHT_SUNW_verneed =  0x6ffffffe;\n-enum SHT_GNU_verneed =   0x6ffffffe;\n enum SHT_SUNW_versym =   0x6fffffff;\n-enum SHT_GNU_versym =    0x6fffffff;\n-enum SHT_HISUNW =        0x6fffffff;\n-enum SHT_HIOS =          0x6fffffff;\n-enum SHT_LOPROC =        0x70000000;\n-enum SHT_AMD64_UNWIND =  0x70000001;\n-enum SHT_ARM_EXIDX =     0x70000001;\n-enum SHT_ARM_PREEMPTMAP = 0x70000002;\n-enum SHT_ARM_ATTRIBUTES = 0x70000003;\n-enum SHT_ARM_DEBUGOVERLAY = 0x70000004;\n-enum SHT_ARM_OVERLAYSECTION = 0x70000005;\n-enum SHT_MIPS_REGINFO =  0x70000006;\n-enum SHT_MIPS_OPTIONS =  0x7000000d;\n-enum SHT_MIPS_DWARF =    0x7000001e;\n-enum SHT_HIPROC =        0x7fffffff;\n-enum SHT_LOUSER =        0x80000000;\n-enum SHT_HIUSER =        0x8fffffff;\n \n-enum SHF_WRITE =            (1 << 0);\n-enum SHF_ALLOC =            (1 << 1);\n-enum SHF_EXECINSTR =        (1 << 2);\n-enum SHF_MERGE =            (1 << 4);\n-enum SHF_STRINGS =          (1 << 5);\n-enum SHF_INFO_LINK =        (1 << 6);\n-enum SHF_LINK_ORDER =       (1 << 7);\n-enum SHF_OS_NONCONFORMING = (1 << 8);\n-enum SHF_GROUP =            (1 << 9);\n-enum SHF_TLS =              (1 << 10);\n-enum SHF_COMPRESSED =       (1 << 11);\n-enum SHF_MASKOS =           0x0ff00000;\n-enum SHF_MASKPROC =         0xf0000000;\n-\n-enum PT_NULL =         0;\n-enum PT_LOAD =         1;\n-enum PT_DYNAMIC =      2;\n-enum PT_INTERP =       3;\n-enum PT_NOTE =         4;\n-enum PT_SHLIB =        5;\n-enum PT_PHDR =         6;\n-enum PT_TLS =          7;\n-enum PT_LOOS =         0x60000000;\n-enum PT_SUNW_UNWIND =  0x6464e550;\n-enum PT_GNU_EH_FRAME = 0x6474e550;\n-enum PT_GNU_STACK =    0x6474e551;\n-enum PT_GNU_RELRO =    0x6474e552;\n-enum PT_LOSUNW =       0x6ffffffa;\n-enum PT_SUNWBSS =      0x6ffffffa;\n-enum PT_SUNWSTACK =    0x6ffffffb;\n enum PT_SUNWDTRACE =   0x6ffffffc;\n enum PT_SUNWCAP =      0x6ffffffd;\n-enum PT_HISUNW =       0x6fffffff;\n-enum PT_HIOS =         0x6fffffff;\n-enum PT_LOPROC =       0x70000000;\n-enum PT_HIPROC =       0x7fffffff;\n-\n-enum PF_X =            (1 << 0);\n-enum PF_W =            (1 << 1);\n-enum PF_R =            (1 << 2);\n-enum PF_MASKOS =       0x0ff00000;\n-enum PF_MASKPROC =     0xf0000000;\n \n-enum PN_XNUM =         0xffff;\n-\n-enum DT_NULL =         0;\n-enum DT_NEEDED =       1;\n-enum DT_PLTRELSZ =     2;\n-enum DT_PLTGOT =       3;\n-enum DT_HASH =         4;\n-enum DT_STRTAB =       5;\n-enum DT_SYMTAB =       6;\n-enum DT_RELA =         7;\n-enum DT_RELASZ =       8;\n-enum DT_RELAENT =      9;\n-enum DT_STRSZ =        10;\n-enum DT_SYMENT =       11;\n-enum DT_INIT =         12;\n-enum DT_FINI =         13;\n-enum DT_SONAME =       14;\n-enum DT_RPATH =        15;\n-enum DT_SYMBOLIC =     16;\n-enum DT_REL =          17;\n-enum DT_RELSZ =        18;\n-enum DT_RELENT =       19;\n-enum DT_PLTREL =       20;\n-enum DT_DEBUG =        21;\n-enum DT_TEXTREL =      22;\n-enum DT_JMPREL =       23;\n-enum DT_BIND_NOW =     24;\n-enum DT_INIT_ARRAY =   25;\n-enum DT_FINI_ARRAY =   26;\n-enum DT_INIT_ARRAYSZ = 27;\n-enum DT_FINI_ARRAYSZ = 28;\n-enum DT_RUNPATH =      29;\n-enum DT_FLAGS =        30;\n-enum DT_ENCODING =     32;\n-enum DT_PREINIT_ARRAY = 32;\n-enum DT_PREINIT_ARRAYSZ = 33;\n enum DT_MAXPOSTAGS =   34;\n-enum DT_LOOS =         0x6000000d;\n enum DT_SUNW_AUXILIARY = 0x6000000d;\n enum DT_SUNW_RTLDINF = 0x6000000e;\n enum DT_SUNW_FILTER =  0x6000000f;\n enum DT_SUNW_CAP =     0x60000010;\n-enum DT_HIOS =         0x6ffff000;\n-enum DT_VALRNGLO =     0x6ffffd00;\n-enum DT_CHECKSUM =     0x6ffffdf8;\n-enum DT_PLTPADSZ =     0x6ffffdf9;\n-enum DT_MOVEENT =      0x6ffffdfa;\n-enum DT_MOVESZ =       0x6ffffdfb;\n-enum DT_FEATURE_1 =    0x6ffffdfc;\n-enum DT_POSFLAG_1 =    0x6ffffdfd;\n-enum DT_SYMINSZ =      0x6ffffdfe;\n-enum DT_SYMINENT =     0x6ffffdff;\n-enum DT_VALRNGHI =     0x6ffffdff;\n-enum DT_ADDRRNGLO =    0x6ffffe00;\n-enum DT_GNU_HASH =     0x6ffffef5;\n-enum DT_CONFIG =       0x6ffffefa;\n-enum DT_DEPAUDIT =     0x6ffffefb;\n-enum DT_AUDIT =        0x6ffffefc;\n-enum DT_PLTPAD =       0x6ffffefd;\n-enum DT_MOVETAB =      0x6ffffefe;\n-enum DT_SYMINFO =      0x6ffffeff;\n-enum DT_ADDRRNGHI =    0x6ffffeff;\n-enum DT_VERSYM =       0x6ffffff0;\n-enum DT_RELACOUNT =    0x6ffffff9;\n-enum DT_RELCOUNT =     0x6ffffffa;\n-enum DT_FLAGS_1 =      0x6ffffffb;\n-enum DT_VERDEF =       0x6ffffffc;\n-enum DT_VERDEFNUM =    0x6ffffffd;\n-enum DT_VERNEED =      0x6ffffffe;\n-enum DT_VERNEEDNUM =   0x6fffffff;\n-enum DT_LOPROC =       0x70000000;\n enum DT_DEPRECATED_SPARC_REGISTER = 0x7000001;\n-enum DT_AUXILIARY =    0x7ffffffd;\n enum DT_USED =         0x7ffffffe;\n-enum DT_FILTER =       0x7fffffff;\n-enum DT_HIPROC =       0x7fffffff;\n-\n-enum DF_ORIGIN =       0x00000001;\n-enum DF_SYMBOLIC =     0x00000002;\n-enum DF_TEXTREL =      0x00000004;\n-enum DF_BIND_NOW =     0x00000008;\n-enum DF_STATIC_TLS =   0x00000010;\n \n enum DF_1_BIND_NOW =   0x00000001;\n-enum DF_1_GLOBAL =     0x00000002;\n-enum DF_1_NODELETE =   0x00000008;\n-enum DF_1_LOADFLTR =   0x00000010;\n-enum DF_1_NOOPEN =     0x00000040;\n-enum DF_1_NODEFLIB =   0x00000800;\n \n enum NT_PRSTATUS =     1;\n enum NT_FPREGSET =     2;\n@@ -402,55 +75,19 @@ enum NT_PROCSTAT_OSREL = 14;\n enum NT_PROCSTAT_PSSTRINGS = 15;\n enum NT_PROCSTAT_AUXV = 16;\n \n-enum STB_LOCAL =       0;\n-enum STB_GLOBAL =      1;\n-enum STB_WEAK =        2;\n-enum STB_NUM =         3;\n-enum STB_LOOS =        10;\n-enum STB_HIOS =        12;\n-enum STB_LOPROC =      13;\n-enum STB_HIPROC =      15;\n-\n-enum STT_NOTYPE =      0;\n-enum STT_OBJECT =      1;\n-enum STT_FUNC =        2;\n-enum STT_SECTION =     3;\n-enum STT_FILE =        4;\n-enum STT_COMMON =      5;\n-enum STT_TLS =         6;\n-enum STT_NUM =         7;\n-enum STT_LOOS =        10;\n-enum STT_GNU_IFUNC =   10;\n-enum STT_HIOS =        12;\n-enum STT_LOPROC =      13;\n-enum STT_HIPROC =      15;\n-\n-enum STV_DEFAULT =     0;\n-enum STV_INTERNAL =    1;\n-enum STV_HIDDEN =      2;\n-enum STV_PROTECTED =   3;\n enum STV_EXPORTED =    4;\n enum STV_SINGLETON =   5;\n enum STV_ELIMINATE =   6;\n \n-enum STN_UNDEF =       0;\n-\n-enum VER_DEF_CURRENT = 1;\n alias VER_NDX VER_DEF_IDX;\n \n-enum VER_FLG_BASE =    0x1;\n-enum VER_FLG_WEAK =    0x2;\n-\n-enum VER_NEED_CURRENT = 1;\n enum VER_NEED_WEAK =    32768;\n enum VER_NEED_HIDDEN = VER_NDX_HIDDEN;\n alias VER_NDX VER_NEED_IDX;\n \n-enum VER_NDX_LOCAL =           0;\n-enum VER_NDX_GLOBAL =          1;\n enum VER_NDX_GIVEN =           2;\n-\n enum VER_NDX_HIDDEN =      32768;\n+\n extern (D)\n {\n     auto VER_NDX(V)(V v) { return v & ~(1u << 15); }\n@@ -460,420 +97,28 @@ enum CA_SUNW_NULL =    0;\n enum CA_SUNW_HW_1 =    1;\n enum CA_SUNW_SF_1 =    2;\n \n-enum SYMINFO_FLG_DIRECT =      0x0001;\n-enum SYMINFO_FLG_PASSTHRU =    0x0002;\n-enum SYMINFO_FLG_COPY =        0x0004;\n-enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n enum SYMINFO_FLG_DIRECTBIND =  0x0010;\n enum SYMINFO_FLG_NOEXTDIRECT = 0x0020;\n enum SYMINFO_FLG_FILTER =      0x0002;\n enum SYMINFO_FLG_AUXILIARY =   0x0040;\n \n-enum SYMINFO_BT_SELF =         0xffff;\n-enum SYMINFO_BT_PARENT =       0xfffe;\n enum SYMINFO_BT_NONE =         0xfffd;\n enum SYMINFO_BT_EXTERN =       0xfffc;\n-enum SYMINFO_BT_LOWRESERVE =   0xff00;\n-\n-enum SYMINFO_NONE =            0;\n-enum SYMINFO_CURRENT =         1;\n-enum SYMINFO_NUM =             2;\n-\n-enum R_386_NONE =               0;\n-enum R_386_32 =                 1;\n-enum R_386_PC32 =               2;\n-enum R_386_GOT32 =              3;\n-enum R_386_PLT32 =              4;\n-enum R_386_COPY =               5;\n-enum R_386_GLOB_DAT =           6;\n-enum R_386_JMP_SLOT =           7;\n-enum R_386_RELATIVE =           8;\n-enum R_386_GOTOFF =             9;\n-enum R_386_GOTPC =              10;\n-enum R_386_TLS_TPOFF =          14;\n-enum R_386_TLS_IE =             15;\n-enum R_386_TLS_GOTIE =          16;\n-enum R_386_TLS_LE =             17;\n-enum R_386_TLS_GD =             18;\n-enum R_386_TLS_LDM =            19;\n-enum R_386_TLS_GD_32 =          24;\n-enum R_386_TLS_GD_PUSH =        25;\n-enum R_386_TLS_GD_CALL =        26;\n-enum R_386_TLS_GD_POP =         27;\n-enum R_386_TLS_LDM_32 =         28;\n-enum R_386_TLS_LDM_PUSH =       29;\n-enum R_386_TLS_LDM_CALL =       30;\n-enum R_386_TLS_LDM_POP =        31;\n-enum R_386_TLS_LDO_32 =         32;\n-enum R_386_TLS_IE_32 =          33;\n-enum R_386_TLS_LE_32 =          34;\n-enum R_386_TLS_DTPMOD32 =       35;\n-enum R_386_TLS_DTPOFF32 =       36;\n-enum R_386_TLS_TPOFF32 =        37;\n-enum R_386_IRELATIVE =          42;\n-\n-enum R_ARM_NONE =               0;\n-enum R_ARM_PC24 =               1;\n-enum R_ARM_ABS32 =              2;\n-enum R_ARM_REL32 =              3;\n-enum R_ARM_PC13 =               4;\n-enum R_ARM_ABS16 =              5;\n-enum R_ARM_ABS12 =              6;\n-enum R_ARM_THM_ABS5 =           7;\n-enum R_ARM_ABS8 =               8;\n-enum R_ARM_SBREL32 =            9;\n-enum R_ARM_THM_PC22 =           10;\n-enum R_ARM_THM_PC8 =            11;\n-enum R_ARM_AMP_VCALL9 =         12;\n-enum R_ARM_SWI24 =              13;\n-enum R_ARM_THM_SWI8 =           14;\n-enum R_ARM_XPC25 =              15;\n-enum R_ARM_THM_XPC22 =          16;\n-enum R_ARM_TLS_DTPMOD32 =       17;\n-enum R_ARM_TLS_DTPOFF32 =       18;\n-enum R_ARM_TLS_TPOFF32 =        19;\n-enum R_ARM_COPY =               20;\n-enum R_ARM_GLOB_DAT =           21;\n-enum R_ARM_JUMP_SLOT =          22;\n-enum R_ARM_RELATIVE =           23;\n-enum R_ARM_GOTOFF =             24;\n-enum R_ARM_GOTPC =              25;\n-enum R_ARM_GOT32 =              26;\n-enum R_ARM_PLT32 =              27;\n-enum R_ARM_GNU_VTENTRY =        100;\n-enum R_ARM_GNU_VTINHERIT =      101;\n-enum R_ARM_RSBREL32 =           250;\n-enum R_ARM_THM_RPC22 =          251;\n-enum R_ARM_RREL32 =             252;\n-enum R_ARM_RABS32 =             253;\n-enum R_ARM_RPC24 =              254;\n-enum R_ARM_RBASE =              255;\n-\n-enum R_IA_64_NONE =             0;\n-enum R_IA_64_IMM14 =            0x21;\n-enum R_IA_64_IMM22 =            0x22;\n-enum R_IA_64_IMM64 =            0x23;\n-enum R_IA_64_DIR32MSB =         0x24;\n-enum R_IA_64_DIR32LSB =         0x25;\n-enum R_IA_64_DIR64MSB =         0x26;\n-enum R_IA_64_DIR64LSB =         0x27;\n-enum R_IA_64_GPREL22 =          0x2a;\n-enum R_IA_64_GPREL64I =         0x2b;\n-enum R_IA_64_GPREL32MSB =       0x2c;\n-enum R_IA_64_GPREL32LSB =       0x2d;\n-enum R_IA_64_GPREL64MSB =       0x2e;\n-enum R_IA_64_GPREL64LSB =       0x2f;\n-enum R_IA_64_LTOFF22 =          0x32;\n-enum R_IA_64_LTOFF64I =         0x33;\n-enum R_IA_64_PLTOFF22 =         0x3a;\n-enum R_IA_64_PLTOFF64I =        0x3b;\n-enum R_IA_64_PLTOFF64MSB =      0x3e;\n-enum R_IA_64_PLTOFF64LSB =      0x3f;\n-enum R_IA_64_FPTR64I =          0x43;\n-enum R_IA_64_FPTR32MSB =        0x44;\n-enum R_IA_64_FPTR32LSB =        0x45;\n-enum R_IA_64_FPTR64MSB =        0x46;\n-enum R_IA_64_FPTR64LSB =        0x47;\n-enum R_IA_64_PCREL60B =         0x48;\n-enum R_IA_64_PCREL21B =         0x49;\n-enum R_IA_64_PCREL21M =         0x4a;\n-enum R_IA_64_PCREL21F =         0x4b;\n-enum R_IA_64_PCREL32MSB =       0x4c;\n-enum R_IA_64_PCREL32LSB =       0x4d;\n-enum R_IA_64_PCREL64MSB =       0x4e;\n-enum R_IA_64_PCREL64LSB =       0x4f;\n-enum R_IA_64_LTOFF_FPTR22 =     0x52;\n-enum R_IA_64_LTOFF_FPTR64I =    0x53;\n-enum R_IA_64_LTOFF_FPTR32MSB =  0x54;\n-enum R_IA_64_LTOFF_FPTR32LSB =  0x55;\n-enum R_IA_64_LTOFF_FPTR64MSB =  0x56;\n-enum R_IA_64_LTOFF_FPTR64LSB =  0x57;\n-enum R_IA_64_SEGREL32MSB =      0x5c;\n-enum R_IA_64_SEGREL32LSB =      0x5d;\n-enum R_IA_64_SEGREL64MSB =      0x5e;\n-enum R_IA_64_SEGREL64LSB =      0x5f;\n-enum R_IA_64_SECREL32MSB =      0x64;\n-enum R_IA_64_SECREL32LSB =      0x65;\n-enum R_IA_64_SECREL64MSB =      0x66;\n-enum R_IA_64_SECREL64LSB =      0x67;\n-enum R_IA_64_REL32MSB =         0x6c;\n-enum R_IA_64_REL32LSB =         0x6d;\n-enum R_IA_64_REL64MSB =         0x6e;\n-enum R_IA_64_REL64LSB =         0x6f;\n-enum R_IA_64_LTV32MSB =         0x74;\n-enum R_IA_64_LTV32LSB =         0x75;\n-enum R_IA_64_LTV64MSB =         0x76;\n-enum R_IA_64_LTV64LSB =         0x77;\n-enum R_IA_64_PCREL21BI =        0x79;\n-enum R_IA_64_PCREL22 =          0x7a;\n-enum R_IA_64_PCREL64I =         0x7b;\n-enum R_IA_64_IPLTMSB =          0x80;\n-enum R_IA_64_IPLTLSB =          0x81;\n-enum R_IA_64_SUB =              0x85;\n-enum R_IA_64_LTOFF22X =         0x86;\n-enum R_IA_64_LDXMOV =           0x87;\n-enum R_IA_64_TPREL14 =          0x91;\n-enum R_IA_64_TPREL22 =          0x92;\n-enum R_IA_64_TPREL64I =         0x93;\n-enum R_IA_64_TPREL64MSB =       0x96;\n-enum R_IA_64_TPREL64LSB =       0x97;\n-enum R_IA_64_LTOFF_TPREL22 =    0x9a;\n-enum R_IA_64_DTPMOD64MSB =      0xa6;\n-enum R_IA_64_DTPMOD64LSB =      0xa7;\n-enum R_IA_64_LTOFF_DTPMOD22 =   0xaa;\n-enum R_IA_64_DTPREL14 =         0xb1;\n-enum R_IA_64_DTPREL22 =         0xb2;\n-enum R_IA_64_DTPREL64I =        0xb3;\n-enum R_IA_64_DTPREL32MSB =      0xb4;\n-enum R_IA_64_DTPREL32LSB =      0xb5;\n-enum R_IA_64_DTPREL64MSB =      0xb6;\n-enum R_IA_64_DTPREL64LSB =      0xb7;\n-enum R_IA_64_LTOFF_DTPREL22 =   0xba;\n-\n-enum R_MIPS_NONE =              0;\n-enum R_MIPS_16 =                1;\n-enum R_MIPS_32 =                2;\n-enum R_MIPS_REL32 =             3;\n-enum R_MIPS_26 =                4;\n-enum R_MIPS_HI16 =              5;\n-enum R_MIPS_LO16 =              6;\n-enum R_MIPS_GPREL16 =           7;\n-enum R_MIPS_LITERAL =           8;\n-enum R_MIPS_GOT16 =             9;\n-enum R_MIPS_PC16 =              10;\n-enum R_MIPS_CALL16 =            11;\n-enum R_MIPS_GPREL32 =           12;\n-enum R_MIPS_GOTHI16 =           21;\n-enum R_MIPS_GOTLO16 =           22;\n-enum R_MIPS_CALLHI16 =          30;\n-enum R_MIPS_CALLLO16 =          31;\n-\n-enum R_PPC_NONE =               0;\n-enum R_PPC_ADDR32 =             1;\n-enum R_PPC_ADDR24 =             2;\n-enum R_PPC_ADDR16 =             3;\n-enum R_PPC_ADDR16_LO =          4;\n-enum R_PPC_ADDR16_HI =          5;\n-enum R_PPC_ADDR16_HA =          6;\n-enum R_PPC_ADDR14 =             7;\n-enum R_PPC_ADDR14_BRTAKEN =     8;\n-enum R_PPC_ADDR14_BRNTAKEN =    9;\n-enum R_PPC_REL24 =              10;\n-enum R_PPC_REL14 =              11;\n-enum R_PPC_REL14_BRTAKEN =      12;\n-enum R_PPC_REL14_BRNTAKEN =     13;\n-enum R_PPC_GOT16 =              14;\n-enum R_PPC_GOT16_LO =           15;\n-enum R_PPC_GOT16_HI =           16;\n-enum R_PPC_GOT16_HA =           17;\n-enum R_PPC_PLTREL24 =           18;\n-enum R_PPC_COPY =               19;\n-enum R_PPC_GLOB_DAT =           20;\n-enum R_PPC_JMP_SLOT =           21;\n-enum R_PPC_RELATIVE =           22;\n-enum R_PPC_LOCAL24PC =          23;\n-enum R_PPC_UADDR32 =            24;\n-enum R_PPC_UADDR16 =            25;\n-enum R_PPC_REL32 =              26;\n-enum R_PPC_PLT32 =              27;\n-enum R_PPC_PLTREL32 =           28;\n-enum R_PPC_PLT16_LO =           29;\n-enum R_PPC_PLT16_HI =           30;\n-enum R_PPC_PLT16_HA =           31;\n-enum R_PPC_SDAREL16 =           32;\n-enum R_PPC_SECTOFF =            33;\n-enum R_PPC_SECTOFF_LO =         34;\n-enum R_PPC_SECTOFF_HI =         35;\n-enum R_PPC_SECTOFF_HA =         36;\n-\n-enum R_PPC64_ADDR64 =           38;\n-enum R_PPC64_ADDR16_HIGHER =    39;\n-enum R_PPC64_ADDR16_HIGHERA =   40;\n-enum R_PPC64_ADDR16_HIGHEST =   41;\n-enum R_PPC64_ADDR16_HIGHESTA =  42;\n-enum R_PPC64_UADDR64 =          43;\n-enum R_PPC64_REL64 =            44;\n-enum R_PPC64_PLT64 =            45;\n-enum R_PPC64_PLTREL64 =         46;\n-enum R_PPC64_TOC16 =            47;\n-enum R_PPC64_TOC16_LO =         48;\n-enum R_PPC64_TOC16_HI =         49;\n-enum R_PPC64_TOC16_HA =         50;\n-enum R_PPC64_TOC =              51;\n-enum R_PPC64_DTPMOD64 =         68;\n-enum R_PPC64_TPREL64 =          73;\n-enum R_PPC64_DTPREL64 =         78;\n-\n-enum R_PPC_TLS =                67;\n-enum R_PPC_DTPMOD32 =           68;\n-enum R_PPC_TPREL16 =            69;\n-enum R_PPC_TPREL16_LO =         70;\n-enum R_PPC_TPREL16_HI =         71;\n-enum R_PPC_TPREL16_HA =         72;\n-enum R_PPC_TPREL32 =            73;\n-enum R_PPC_DTPREL16 =           74;\n-enum R_PPC_DTPREL16_LO =        75;\n-enum R_PPC_DTPREL16_HI =        76;\n-enum R_PPC_DTPREL16_HA =        77;\n-enum R_PPC_DTPREL32 =           78;\n-enum R_PPC_GOT_TLSGD16 =        79;\n-enum R_PPC_GOT_TLSGD16_LO =     80;\n-enum R_PPC_GOT_TLSGD16_HI =     81;\n-enum R_PPC_GOT_TLSGD16_HA =     82;\n-enum R_PPC_GOT_TLSLD16 =        83;\n-enum R_PPC_GOT_TLSLD16_LO =     84;\n-enum R_PPC_GOT_TLSLD16_HI =     85;\n-enum R_PPC_GOT_TLSLD16_HA =     86;\n-enum R_PPC_GOT_TPREL16 =        87;\n-enum R_PPC_GOT_TPREL16_LO =     88;\n-enum R_PPC_GOT_TPREL16_HI =     89;\n-enum R_PPC_GOT_TPREL16_HA =     90;\n-\n-enum R_PPC_EMB_NADDR32 =        101;\n-enum R_PPC_EMB_NADDR16 =        102;\n-enum R_PPC_EMB_NADDR16_LO =     103;\n-enum R_PPC_EMB_NADDR16_HI =     104;\n-enum R_PPC_EMB_NADDR16_HA =     105;\n-enum R_PPC_EMB_SDAI16 =         106;\n-enum R_PPC_EMB_SDA2I16 =        107;\n-enum R_PPC_EMB_SDA2REL =        108;\n-enum R_PPC_EMB_SDA21 =          109;\n-enum R_PPC_EMB_MRKREF =         110;\n-enum R_PPC_EMB_RELSEC16 =       111;\n-enum R_PPC_EMB_RELST_LO =       112;\n-enum R_PPC_EMB_RELST_HI =       113;\n-enum R_PPC_EMB_RELST_HA =       114;\n-enum R_PPC_EMB_BIT_FLD =        115;\n-enum R_PPC_EMB_RELSDA =         116;\n-\n-enum R_SPARC_NONE =             0;\n-enum R_SPARC_8 =                1;\n-enum R_SPARC_16 =               2;\n-enum R_SPARC_32 =               3;\n-enum R_SPARC_DISP8 =            4;\n-enum R_SPARC_DISP16 =           5;\n-enum R_SPARC_DISP32 =           6;\n-enum R_SPARC_WDISP30 =          7;\n-enum R_SPARC_WDISP22 =          8;\n-enum R_SPARC_HI22 =             9;\n-enum R_SPARC_22 =               10;\n-enum R_SPARC_13 =               11;\n-enum R_SPARC_LO10 =             12;\n-enum R_SPARC_GOT10 =            13;\n-enum R_SPARC_GOT13 =            14;\n-enum R_SPARC_GOT22 =            15;\n-enum R_SPARC_PC10 =             16;\n-enum R_SPARC_PC22 =             17;\n-enum R_SPARC_WPLT30 =           18;\n-enum R_SPARC_COPY =             19;\n-enum R_SPARC_GLOB_DAT =         20;\n-enum R_SPARC_JMP_SLOT =         21;\n-enum R_SPARC_RELATIVE =         22;\n-enum R_SPARC_UA32 =             23;\n-enum R_SPARC_PLT32 =            24;\n-enum R_SPARC_HIPLT22 =          25;\n-enum R_SPARC_LOPLT10 =          26;\n-enum R_SPARC_PCPLT32 =          27;\n-enum R_SPARC_PCPLT22 =          28;\n-enum R_SPARC_PCPLT10 =          29;\n-enum R_SPARC_10 =               30;\n-enum R_SPARC_11 =               31;\n-enum R_SPARC_64 =               32;\n-enum R_SPARC_OLO10 =            33;\n-enum R_SPARC_HH22 =             34;\n-enum R_SPARC_HM10 =             35;\n-enum R_SPARC_LM22 =             36;\n-enum R_SPARC_PC_HH22 =          37;\n-enum R_SPARC_PC_HM10 =          38;\n-enum R_SPARC_PC_LM22 =          39;\n-enum R_SPARC_WDISP16 =          40;\n-enum R_SPARC_WDISP19 =          41;\n-enum R_SPARC_GLOB_JMP =         42;\n-enum R_SPARC_7 =                43;\n-enum R_SPARC_5 =                44;\n-enum R_SPARC_6 =                45;\n-enum R_SPARC_DISP64 =           46;\n-enum R_SPARC_PLT64 =            47;\n-enum R_SPARC_HIX22 =            48;\n-enum R_SPARC_LOX10 =            49;\n-enum R_SPARC_H44 =              50;\n-enum R_SPARC_M44 =              51;\n-enum R_SPARC_L44 =              52;\n-enum R_SPARC_REGISTER =         53;\n-enum R_SPARC_UA64 =             54;\n-enum R_SPARC_UA16 =             55;\n-enum R_SPARC_TLS_GD_HI22 =      56;\n-enum R_SPARC_TLS_GD_LO10 =      57;\n-enum R_SPARC_TLS_GD_ADD =       58;\n-enum R_SPARC_TLS_GD_CALL =      59;\n-enum R_SPARC_TLS_LDM_HI22 =     60;\n-enum R_SPARC_TLS_LDM_LO10 =     61;\n-enum R_SPARC_TLS_LDM_ADD =      62;\n-enum R_SPARC_TLS_LDM_CALL =     63;\n-enum R_SPARC_TLS_LDO_HIX22 =    64;\n-enum R_SPARC_TLS_LDO_LOX10 =    65;\n-enum R_SPARC_TLS_LDO_ADD =      66;\n-enum R_SPARC_TLS_IE_HI22 =      67;\n-enum R_SPARC_TLS_IE_LO10 =      68;\n-enum R_SPARC_TLS_IE_LD =        69;\n-enum R_SPARC_TLS_IE_LDX =       70;\n-enum R_SPARC_TLS_IE_ADD =       71;\n-enum R_SPARC_TLS_LE_HIX22 =     72;\n-enum R_SPARC_TLS_LE_LOX10 =     73;\n-enum R_SPARC_TLS_DTPMOD32 =     74;\n-enum R_SPARC_TLS_DTPMOD64 =     75;\n-enum R_SPARC_TLS_DTPOFF32 =     76;\n-enum R_SPARC_TLS_DTPOFF64 =     77;\n-enum R_SPARC_TLS_TPOFF32 =      78;\n-enum R_SPARC_TLS_TPOFF64 =      79;\n-\n-enum R_X86_64_NONE =            0;\n-enum R_X86_64_64 =              1;\n-enum R_X86_64_PC32 =            2;\n-enum R_X86_64_GOT32 =           3;\n-enum R_X86_64_PLT32 =           4;\n-enum R_X86_64_COPY =            5;\n-enum R_X86_64_GLOB_DAT =        6;\n-enum R_X86_64_JMP_SLOT =        7;\n-enum R_X86_64_RELATIVE =        8;\n-enum R_X86_64_GOTPCREL =        9;\n-enum R_X86_64_32 =              10;\n-enum R_X86_64_32S =             11;\n-enum R_X86_64_16 =              12;\n-enum R_X86_64_PC16 =            13;\n-enum R_X86_64_8 =               14;\n-enum R_X86_64_PC8 =             15;\n-enum R_X86_64_DTPMOD64 =        16;\n-enum R_X86_64_DTPOFF64 =        17;\n-enum R_X86_64_TPOFF64 =         18;\n-enum R_X86_64_TLSGD =           19;\n-enum R_X86_64_TLSLD =           20;\n-enum R_X86_64_DTPOFF32 =        21;\n-enum R_X86_64_GOTTPOFF =        22;\n-enum R_X86_64_TPOFF32 =         23;\n-enum R_X86_64_IRELATIVE =       37;\n \n version (PPC64)\n {\n-enum __ELF_WORD_SIZE = 64;\n-enum ELF_ARCH = EM_PPC64;\n-enum ELF_MACHINE_OK(x) = ((x) == EM_PPC64);\n+    enum __ELF_WORD_SIZE = 64;\n+    enum ELF_ARCH = EM_PPC64;\n+    enum ELF_MACHINE_OK(x) = ((x) == EM_PPC64);\n }\n version (PPC)\n {\n-enum __ELF_WORD_SIZE = 32;\n-enum ELF_ARCH = EM_PPC;\n-enum ELF_ARCH32 = EM_PPC;\n-enum ELF_MACHINE_OK(x) = ((x) == EM_PPC);\n+    enum __ELF_WORD_SIZE = 32;\n+    enum ELF_ARCH = EM_PPC;\n+    enum ELF_ARCH32 = EM_PPC;\n+    enum ELF_MACHINE_OK(x) = ((x) == EM_PPC);\n }\n \n-/**\n- * Auxiliary vector entries for passing information to the interpreter.\n- *\n- * The PowerPC supplement to the SVR4 ABI specification names this \"auxv_t\",\n- * but POSIX lays claim to all symbols ending with \"_t\".\n- */\n-\n struct Elf32_Auxinfo\n {\n     int a_type;\n@@ -896,12 +141,6 @@ struct Elf64_Auxinfo\n     }\n }\n \n-// __ElfType(Auxinfo);\n-\n-/**\n- * Values for a_type.\n- */\n-\n enum AT_NULL   = 0;\n enum AT_IGNORE = 1;\n enum AT_EXECFD = 2;\n@@ -926,31 +165,23 @@ enum AT_STACKPROT = 21;\n enum AT_TIMEKEEP  = 22;\n enum AT_COUNT = 23;\n \n-/**\n- * Relocation types.\n- */\n-\n enum R_PPC_COUNT =  37;\n enum R_PPC_EMB_COUNT =  (R_PPC_EMB_RELSDA - R_PPC_EMB_NADDR32 + 1);\n \n-/**\n- * Define \"machine\" characteristics\n- */\n-\n version (PPC64)\n {\n-enum ELF_TARG_CLASS =   ELFCLASS64;\n-enum ELF_TARG_DATA =    ELFDATA2MSB;\n-enum ELF_TARG_MACH =    EM_PPC64;\n-enum ELF_TARG_VER =     1;\n+    enum ELF_TARG_CLASS =   ELFCLASS64;\n+    enum ELF_TARG_DATA =    ELFDATA2MSB;\n+    enum ELF_TARG_MACH =    EM_PPC64;\n+    enum ELF_TARG_VER =     1;\n }\n \n version (PPC)\n {\n-enum ELF_TARG_CLASS =   ELFCLASS32;\n-enum ELF_TARG_DATA =    ELFDATA2MSB;\n-enum ELF_TARG_MACH =    EM_PPC;\n-enum ELF_TARG_VER =     1;\n+    enum ELF_TARG_CLASS =   ELFCLASS32;\n+    enum ELF_TARG_DATA =    ELFDATA2MSB;\n+    enum ELF_TARG_MACH =    EM_PPC;\n+    enum ELF_TARG_VER =     1;\n }\n \n enum ET_DYN_LOAD_ADDR = 0x01010000;"}, {"sha": "2cd933170a134dc257a443a38245473baea3377d", "filename": "libphobos/libdruntime/core/sys/linux/elf.d", "status": "modified", "additions": 13, "deletions": 2406, "changes": 2419, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Felf.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -12,494 +12,28 @@ nothrow:\n @system:\n \n import core.stdc.stdint;\n-\n-alias uint16_t Elf32_Half;\n-alias uint16_t Elf64_Half;\n-\n-alias uint32_t Elf32_Word;\n-alias int32_t  Elf32_Sword;\n-alias uint32_t Elf64_Word;\n-alias int32_t  Elf64_Sword;\n-\n-alias uint64_t Elf32_Xword;\n-alias int64_t  Elf32_Sxword;\n-alias uint64_t Elf64_Xword;\n-alias int64_t  Elf64_Sxword;\n-\n-alias uint32_t Elf32_Addr;\n-alias uint64_t Elf64_Addr;\n-\n-alias uint32_t Elf32_Off;\n-alias uint64_t Elf64_Off;\n-\n-alias uint16_t Elf32_Section;\n-alias uint16_t Elf64_Section;\n-\n-alias Elf32_Half Elf32_Versym;\n-alias Elf64_Half Elf64_Versym;\n-\n-\n-enum EI_NIDENT = 16;\n-\n-struct Elf32_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf32_Half    e_type;\n-    Elf32_Half    e_machine;\n-    Elf32_Word    e_version;\n-    Elf32_Addr    e_entry;\n-    Elf32_Off     e_phoff;\n-    Elf32_Off     e_shoff;\n-    Elf32_Word    e_flags;\n-    Elf32_Half    e_ehsize;\n-    Elf32_Half    e_phentsize;\n-    Elf32_Half    e_phnum;\n-    Elf32_Half    e_shentsize;\n-    Elf32_Half    e_shnum;\n-    Elf32_Half    e_shstrndx;\n-}\n-\n-struct Elf64_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf64_Half    e_type;\n-    Elf64_Half    e_machine;\n-    Elf64_Word    e_version;\n-    Elf64_Addr    e_entry;\n-    Elf64_Off     e_phoff;\n-    Elf64_Off     e_shoff;\n-    Elf64_Word    e_flags;\n-    Elf64_Half    e_ehsize;\n-    Elf64_Half    e_phentsize;\n-    Elf64_Half    e_phnum;\n-    Elf64_Half    e_shentsize;\n-    Elf64_Half    e_shnum;\n-    Elf64_Half    e_shstrndx;\n-}\n-\n-enum EI_MAG0 =         0;\n-enum ELFMAG0 =         0x7f;\n-\n-enum EI_MAG1 =         1;\n-enum ELFMAG1 =         'E';\n-\n-enum EI_MAG2 =         2;\n-enum ELFMAG2 =         'L';\n-\n-enum EI_MAG3 =         3;\n-enum ELFMAG3 =         'F';\n-enum ELFMAG =          \"\\177ELF\";\n-enum SELFMAG =         4;\n-\n-enum EI_CLASS =        4;\n-enum ELFCLASSNONE =    0;\n-enum ELFCLASS32 =      1;\n-enum ELFCLASS64 =      2;\n-enum ELFCLASSNUM =     3;\n-\n-enum EI_DATA =         5;\n-enum ELFDATANONE =     0;\n-enum ELFDATA2LSB =     1;\n-enum ELFDATA2MSB =     2;\n-enum ELFDATANUM =      3;\n-\n-enum EI_VERSION =      6;\n-\n-enum EI_OSABI =        7;\n-enum ELFOSABI_NONE =           0;\n-enum ELFOSABI_SYSV =           0;\n-enum ELFOSABI_HPUX =           1;\n-enum ELFOSABI_NETBSD =         2;\n-enum ELFOSABI_GNU =            3;\n-enum ELFOSABI_LINUX =          ELFOSABI_GNU;\n-enum ELFOSABI_SOLARIS =        6;\n-enum ELFOSABI_AIX =            7;\n-enum ELFOSABI_IRIX =           8;\n-enum ELFOSABI_FREEBSD =        9;\n-enum ELFOSABI_TRU64 =          10;\n-enum ELFOSABI_MODESTO =        11;\n-enum ELFOSABI_OPENBSD =        12;\n-enum ELFOSABI_ARM_AEABI =      64;\n-enum ELFOSABI_ARM =            97;\n-enum ELFOSABI_STANDALONE =     255;\n-enum ELFOSABI_DRAGONFLYBSD =   ELFOSABI_NONE;\n-\n-enum EI_ABIVERSION =   8;\n-\n-enum EI_PAD =          9;\n-\n-enum ET_NONE =         0;\n-enum ET_REL =          1;\n-enum ET_EXEC =         2;\n-enum ET_DYN =          3;\n-enum ET_CORE =         4;\n-enum ET_NUM =          5;\n-enum ET_LOOS =         0xfe00;\n-enum ET_HIOS =         0xfeff;\n-enum ET_LOPROC =       0xff00;\n-enum ET_HIPROC =       0xffff;\n-\n-enum EM_NONE =          0;\n-enum EM_M32 =           1;\n-enum EM_SPARC =         2;\n-enum EM_386 =           3;\n-enum EM_68K =           4;\n-enum EM_88K =           5;\n-enum EM_860 =           7;\n-enum EM_MIPS =          8;\n-enum EM_S370 =          9;\n-enum EM_MIPS_RS3_LE =  10;\n-\n-enum EM_PARISC =       15;\n-enum EM_VPP500 =       17;\n-enum EM_SPARC32PLUS =  18;\n-enum EM_960 =          19;\n-enum EM_PPC =          20;\n-enum EM_PPC64 =        21;\n-enum EM_S390 =         22;\n-\n-enum EM_V800 =         36;\n-enum EM_FR20 =         37;\n-enum EM_RH32 =         38;\n-enum EM_RCE =          39;\n-enum EM_ARM =          40;\n-enum EM_FAKE_ALPHA =   41;\n-enum EM_SH =           42;\n-enum EM_SPARCV9 =      43;\n-enum EM_TRICORE =      44;\n-enum EM_ARC =          45;\n-enum EM_H8_300 =       46;\n-enum EM_H8_300H =      47;\n-enum EM_H8S =          48;\n-enum EM_H8_500 =       49;\n-enum EM_IA_64 =        50;\n-enum EM_MIPS_X =       51;\n-enum EM_COLDFIRE =     52;\n-enum EM_68HC12 =       53;\n-enum EM_MMA =          54;\n-enum EM_PCP =          55;\n-enum EM_NCPU =         56;\n-enum EM_NDR1 =         57;\n-enum EM_STARCORE =     58;\n-enum EM_ME16 =         59;\n-enum EM_ST100 =        60;\n-enum EM_TINYJ =        61;\n-enum EM_X86_64 =       62;\n-enum EM_PDSP =         63;\n-\n-enum EM_FX66 =         66;\n-enum EM_ST9PLUS =      67;\n-enum EM_ST7 =          68;\n-enum EM_68HC16 =       69;\n-enum EM_68HC11 =       70;\n-enum EM_68HC08 =       71;\n-enum EM_68HC05 =       72;\n-enum EM_SVX =          73;\n-enum EM_ST19 =         74;\n-enum EM_VAX =          75;\n-enum EM_CRIS =         76;\n-enum EM_JAVELIN =      77;\n-enum EM_FIREPATH =     78;\n-enum EM_ZSP =          79;\n-enum EM_MMIX =         80;\n-enum EM_HUANY =        81;\n-enum EM_PRISM =        82;\n-enum EM_AVR =          83;\n-enum EM_FR30 =         84;\n-enum EM_D10V =         85;\n-enum EM_D30V =         86;\n-enum EM_V850 =         87;\n-enum EM_M32R =         88;\n-enum EM_MN10300 =      89;\n-enum EM_MN10200 =      90;\n-enum EM_PJ =           91;\n-enum EM_OPENRISC =     92;\n-enum EM_ARC_A5 =       93;\n-enum EM_XTENSA =       94;\n-enum EM_AARCH64 =      183;\n-enum EM_TILEPRO =      188;\n-enum EM_TILEGX =       191;\n-enum EM_NUM =          192;\n-\n-enum EM_ALPHA =        0x9026;\n-\n-enum EV_NONE =         0;\n-enum EV_CURRENT =      1;\n-enum EV_NUM =          2;\n-\n-struct Elf32_Shdr\n-{\n-  Elf32_Word    sh_name;\n-  Elf32_Word    sh_type;\n-  Elf32_Word    sh_flags;\n-  Elf32_Addr    sh_addr;\n-  Elf32_Off     sh_offset;\n-  Elf32_Word    sh_size;\n-  Elf32_Word    sh_link;\n-  Elf32_Word    sh_info;\n-  Elf32_Word    sh_addralign;\n-  Elf32_Word    sh_entsize;\n-}\n-\n-struct Elf64_Shdr\n-{\n-  Elf64_Word    sh_name;\n-  Elf64_Word    sh_type;\n-  Elf64_Xword   sh_flags;\n-  Elf64_Addr    sh_addr;\n-  Elf64_Off     sh_offset;\n-  Elf64_Xword   sh_size;\n-  Elf64_Word    sh_link;\n-  Elf64_Word    sh_info;\n-  Elf64_Xword   sh_addralign;\n-  Elf64_Xword   sh_entsize;\n-}\n-\n-enum SHN_UNDEF =       0;\n-enum SHN_LORESERVE =   0xff00;\n-enum SHN_LOPROC =      0xff00;\n-enum SHN_BEFORE =      0xff00;\n-enum SHN_AFTER =       0xff01;\n-enum SHN_HIPROC =      0xff1f;\n-enum SHN_LOOS =        0xff20;\n-enum SHN_HIOS =        0xff3f;\n-enum SHN_ABS =         0xfff1;\n-enum SHN_COMMON =      0xfff2;\n-enum SHN_XINDEX =      0xffff;\n-enum SHN_HIRESERVE =   0xffff;\n-\n-enum SHT_NULL =          0;\n-enum SHT_PROGBITS =      1;\n-enum SHT_SYMTAB =        2;\n-enum SHT_STRTAB =        3;\n-enum SHT_RELA =          4;\n-enum SHT_HASH =          5;\n-enum SHT_DYNAMIC =       6;\n-enum SHT_NOTE =          7;\n-enum SHT_NOBITS =        8;\n-enum SHT_REL =           9;\n-enum SHT_SHLIB =         10;\n-enum SHT_DYNSYM =        11;\n-enum SHT_INIT_ARRAY =    14;\n-enum SHT_FINI_ARRAY =    15;\n-enum SHT_PREINIT_ARRAY = 16;\n-enum SHT_GROUP =         17;\n-enum SHT_SYMTAB_SHNDX =  18;\n-enum SHT_NUM =           19;\n-enum SHT_LOOS =          0x60000000;\n-enum SHT_GNU_ATTRIBUTES = 0x6ffffff5;\n-enum SHT_GNU_HASH =      0x6ffffff6;\n-enum SHT_GNU_LIBLIST =   0x6ffffff7;\n-enum SHT_CHECKSUM =      0x6ffffff8;\n-enum SHT_LOSUNW =        0x6ffffffa;\n-enum SHT_SUNW_move =     0x6ffffffa;\n-enum SHT_SUNW_COMDAT =   0x6ffffffb;\n-enum SHT_SUNW_syminfo =  0x6ffffffc;\n-enum SHT_GNU_verdef =    0x6ffffffd;\n-enum SHT_GNU_verneed =   0x6ffffffe;\n-enum SHT_GNU_versym =    0x6fffffff;\n-enum SHT_HISUNW =        0x6fffffff;\n-enum SHT_HIOS =          0x6fffffff;\n-enum SHT_LOPROC =        0x70000000;\n-enum SHT_HIPROC =        0x7fffffff;\n-enum SHT_LOUSER =        0x80000000;\n-enum SHT_HIUSER =        0x8fffffff;\n-\n-enum SHF_WRITE =            (1 << 0);\n-enum SHF_ALLOC =            (1 << 1);\n-enum SHF_EXECINSTR =        (1 << 2);\n-enum SHF_MERGE =            (1 << 4);\n-enum SHF_STRINGS =          (1 << 5);\n-enum SHF_INFO_LINK =        (1 << 6);\n-enum SHF_LINK_ORDER =       (1 << 7);\n-enum SHF_OS_NONCONFORMING = (1 << 8);\n-enum SHF_GROUP =            (1 << 9);\n-enum SHF_TLS =              (1 << 10);\n-enum SHF_COMPRESSED =       (1 << 11);\n-enum SHF_MASKOS =           0x0ff00000;\n-enum SHF_MASKPROC =         0xf0000000;\n-enum SHF_ORDERED =          (1 << 30);\n-enum SHF_EXCLUDE =          (1 << 31);\n-enum GRP_COMDAT =      0x1;\n-\n-struct Elf32_Sym\n-{\n-  Elf32_Word    st_name;\n-  Elf32_Addr    st_value;\n-  Elf32_Word    st_size;\n-  ubyte st_info;\n-  ubyte st_other;\n-  Elf32_Section st_shndx;\n-}\n-\n-struct Elf64_Sym\n-{\n-  Elf64_Word    st_name;\n-  ubyte st_info;\n-  ubyte st_other;\n-  Elf64_Section st_shndx;\n-  Elf64_Addr    st_value;\n-  Elf64_Xword   st_size;\n-}\n-\n-struct Elf32_Syminfo\n-{\n-  Elf32_Half si_boundto;\n-  Elf32_Half si_flags;\n-}\n-\n-struct Elf64_Syminfo\n-{\n-  Elf64_Half si_boundto;\n-  Elf64_Half si_flags;\n-}\n-enum SYMINFO_BT_SELF =         0xffff;\n-enum SYMINFO_BT_PARENT =       0xfffe;\n-enum SYMINFO_BT_LOWRESERVE =   0xff00;\n-enum SYMINFO_FLG_DIRECT =      0x0001;\n-enum SYMINFO_FLG_PASSTHRU =    0x0002;\n-enum SYMINFO_FLG_COPY =        0x0004;\n-enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n-enum SYMINFO_NONE =            0;\n-enum SYMINFO_CURRENT =         1;\n-enum SYMINFO_NUM =             2;\n-\n-extern (D)\n-{\n-    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF32_ST_TYPE(T)(T val) { return val & 0xf; }\n-    auto ELF32_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n-    alias ELF32_ST_BIND ELF64_ST_BIND;\n-    alias ELF32_ST_TYPE ELF64_ST_TYPE;\n-    alias ELF32_ST_INFO ELF64_ST_INFO;\n-}\n-\n-enum STB_LOCAL =       0;\n-enum STB_GLOBAL =      1;\n-enum STB_WEAK =        2;\n-enum STB_NUM =         3;\n-enum STB_LOOS =        10;\n-enum STB_GNU_UNIQUE =  10;\n-enum STB_HIOS =        12;\n-enum STB_LOPROC =      13;\n-enum STB_HIPROC =      15;\n-\n-enum STT_NOTYPE =      0;\n-enum STT_OBJECT =      1;\n-enum STT_FUNC =        2;\n-enum STT_SECTION =     3;\n-enum STT_FILE =        4;\n-enum STT_COMMON =      5;\n-enum STT_TLS =         6;\n-enum STT_NUM =         7;\n-enum STT_LOOS =        10;\n-enum STT_GNU_IFUNC =   10;\n-enum STT_HIOS =        12;\n-enum STT_LOPROC =      13;\n-enum STT_HIPROC =      15;\n-\n-enum STN_UNDEF =       0;\n+public import core.sys.elf;\n \n extern (D)\n {\n     auto ELF32_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n     alias ELF32_ST_VISIBILITY ELF64_ST_VISIBILITY;\n }\n-enum STV_DEFAULT =     0;\n-enum STV_INTERNAL =    1;\n-enum STV_HIDDEN =      2;\n-enum STV_PROTECTED =   3;\n-\n-struct Elf32_Rel\n-{\n-  Elf32_Addr    r_offset;\n-  Elf32_Word    r_info;\n-}\n-\n-struct Elf64_Rel\n-{\n-  Elf64_Addr    r_offset;\n-  Elf64_Xword   r_info;\n-}\n \n-struct Elf32_Rela\n-{\n-  Elf32_Addr    r_offset;\n-  Elf32_Word    r_info;\n-  Elf32_Sword   r_addend;\n-}\n-\n-struct Elf64_Rela\n-{\n-  Elf64_Addr    r_offset;\n-  Elf64_Xword   r_info;\n-  Elf64_Sxword  r_addend;\n-}\n-\n-extern (D)\n-{\n-    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n-    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n-    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n-\n-    auto ELF64_R_SYM(I)(I i) { return i >> 32; }\n-    auto ELF64_R_TYPE(I)(I i) { return i & 0xffffffff; }\n-    auto ELF64_R_INFO(S, T)(S sym, T type) { return (sym << 32) + (type); }\n-}\n-\n-struct Elf32_Phdr\n+struct Elf32_Nhdr\n {\n-  Elf32_Word    p_type;\n-  Elf32_Off     p_offset;\n-  Elf32_Addr    p_vaddr;\n-  Elf32_Addr    p_paddr;\n-  Elf32_Word    p_filesz;\n-  Elf32_Word    p_memsz;\n-  Elf32_Word    p_flags;\n-  Elf32_Word    p_align;\n+  Elf32_Word n_namesz;\n+  Elf32_Word n_descsz;\n+  Elf32_Word n_type;\n }\n \n-struct Elf64_Phdr\n+struct Elf64_Nhdr\n {\n-  Elf64_Word    p_type;\n-  Elf64_Word    p_flags;\n-  Elf64_Off     p_offset;\n-  Elf64_Addr    p_vaddr;\n-  Elf64_Addr    p_paddr;\n-  Elf64_Xword   p_filesz;\n-  Elf64_Xword   p_memsz;\n-  Elf64_Xword   p_align;\n+  Elf64_Word n_namesz;\n+  Elf64_Word n_descsz;\n+  Elf64_Word n_type;\n }\n \n-enum PN_XNUM =         0xffff;\n-\n-enum PT_NULL =         0;\n-enum PT_LOAD =         1;\n-enum PT_DYNAMIC =      2;\n-enum PT_INTERP =       3;\n-enum PT_NOTE =         4;\n-enum PT_SHLIB =        5;\n-enum PT_PHDR =         6;\n-enum PT_TLS =          7;\n-enum PT_NUM =          8;\n-enum PT_LOOS =         0x60000000;\n-enum PT_GNU_EH_FRAME = 0x6474e550;\n-enum PT_GNU_STACK =    0x6474e551;\n-enum PT_GNU_RELRO =    0x6474e552;\n-enum PT_LOSUNW =       0x6ffffffa;\n-enum PT_SUNWBSS =      0x6ffffffa;\n-enum PT_SUNWSTACK =    0x6ffffffb;\n-enum PT_HISUNW =       0x6fffffff;\n-enum PT_HIOS =         0x6fffffff;\n-enum PT_LOPROC =       0x70000000;\n-enum PT_HIPROC =       0x7fffffff;\n-\n-enum PF_X =            (1 << 0);\n-enum PF_W =            (1 << 1);\n-enum PF_R =            (1 << 2);\n-enum PF_MASKOS =       0x0ff00000;\n-enum PF_MASKPROC =     0xf0000000;\n-\n enum NT_PRSTATUS =     1;\n enum NT_FPREGSET =     2;\n enum NT_PRPSINFO =     3;\n@@ -541,242 +75,10 @@ enum NT_ARM_HW_WATCH = 0x403;\n \n enum NT_VERSION =      1;\n \n-struct Elf32_Dyn\n-{\n-  Elf32_Sword   d_tag;\n-  union _d_un\n-  {\n-      Elf32_Word d_val;\n-      Elf32_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf64_Dyn\n-{\n-  Elf64_Sxword  d_tag;\n-  union _d_un\n-  {\n-      Elf64_Xword d_val;\n-      Elf64_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-enum DT_NULL =         0;\n-enum DT_NEEDED =       1;\n-enum DT_PLTRELSZ =     2;\n-enum DT_PLTGOT =       3;\n-enum DT_HASH =         4;\n-enum DT_STRTAB =       5;\n-enum DT_SYMTAB =       6;\n-enum DT_RELA =         7;\n-enum DT_RELASZ =       8;\n-enum DT_RELAENT =      9;\n-enum DT_STRSZ =        10;\n-enum DT_SYMENT =       11;\n-enum DT_INIT =         12;\n-enum DT_FINI =         13;\n-enum DT_SONAME =       14;\n-enum DT_RPATH =        15;\n-enum DT_SYMBOLIC =     16;\n-enum DT_REL =          17;\n-enum DT_RELSZ =        18;\n-enum DT_RELENT =       19;\n-enum DT_PLTREL =       20;\n-enum DT_DEBUG =        21;\n-enum DT_TEXTREL =      22;\n-enum DT_JMPREL =       23;\n-enum DT_BIND_NOW =     24;\n-enum DT_INIT_ARRAY =   25;\n-enum DT_FINI_ARRAY =   26;\n-enum DT_INIT_ARRAYSZ = 27;\n-enum DT_FINI_ARRAYSZ = 28;\n-enum DT_RUNPATH =      29;\n-enum DT_FLAGS =        30;\n-enum DT_ENCODING =     32;\n-enum DT_PREINIT_ARRAY = 32;\n-enum DT_PREINIT_ARRAYSZ = 33;\n-enum DT_NUM =          34;\n-enum DT_LOOS =         0x6000000d;\n-enum DT_HIOS =         0x6ffff000;\n-enum DT_LOPROC =       0x70000000;\n-enum DT_HIPROC =       0x7fffffff;\n-enum DT_PROCNUM =      DT_MIPS_NUM;\n-enum DT_VALRNGLO =     0x6ffffd00;\n-enum DT_GNU_PRELINKED = 0x6ffffdf5;\n-enum DT_GNU_CONFLICTSZ = 0x6ffffdf6;\n-enum DT_GNU_LIBLISTSZ = 0x6ffffdf7;\n-enum DT_CHECKSUM =     0x6ffffdf8;\n-enum DT_PLTPADSZ =     0x6ffffdf9;\n-enum DT_MOVEENT =      0x6ffffdfa;\n-enum DT_MOVESZ =       0x6ffffdfb;\n-enum DT_FEATURE_1 =    0x6ffffdfc;\n-enum DT_POSFLAG_1 =    0x6ffffdfd;\n-enum DT_SYMINSZ =      0x6ffffdfe;\n-enum DT_SYMINENT =     0x6ffffdff;\n-enum DT_VALRNGHI =     0x6ffffdff;\n-extern (D) auto DT_VALTAGIDX(T)(T tag)\n-{\n-    return DT_VALRNGHI - tag;\n-}\n-enum DT_VALNUM = 12;\n-enum DT_ADDRRNGLO =    0x6ffffe00;\n-enum DT_GNU_HASH =     0x6ffffef5;\n-enum DT_TLSDESC_PLT =  0x6ffffef6;\n-enum DT_TLSDESC_GOT =  0x6ffffef7;\n-enum DT_GNU_CONFLICT = 0x6ffffef8;\n-enum DT_GNU_LIBLIST =  0x6ffffef9;\n-enum DT_CONFIG =       0x6ffffefa;\n-enum DT_DEPAUDIT =     0x6ffffefb;\n-enum DT_AUDIT =        0x6ffffefc;\n-enum DT_PLTPAD =       0x6ffffefd;\n-enum DT_MOVETAB =      0x6ffffefe;\n-enum DT_SYMINFO =      0x6ffffeff;\n-enum DT_ADDRRNGHI =    0x6ffffeff;\n-extern (D) auto DT_ADDRTAGIDX(T)(T tag)\n-{\n-    return DT_ADDRRNGHI - tag;\n-}\n-enum DT_ADDRNUM = 11;\n-enum DT_VERSYM =       0x6ffffff0;\n-\n-enum DT_RELACOUNT =    0x6ffffff9;\n-enum DT_RELCOUNT =     0x6ffffffa;\n-enum DT_FLAGS_1 =      0x6ffffffb;\n-enum DT_VERDEF =       0x6ffffffc;\n-enum DT_VERDEFNUM =    0x6ffffffd;\n-enum DT_VERNEED =      0x6ffffffe;\n-enum DT_VERNEEDNUM =   0x6fffffff;\n-extern (D) auto DT_VERSIONTAGIDX(T)(T tag)\n-{\n-    return DT_VERNEEDNUM - tag;\n-}\n-enum DT_VERSIONTAGNUM = 16;\n-enum DT_AUXILIARY =    0x7ffffffd;\n-enum DT_FILTER =       0x7fffffff;\n-extern (D) auto DT_EXTRATAGIDX(T)(T tag)\n-{\n-    return cast(Elf32_Word)(-(cast(Elf32_Sword)(tag) <<1>>1)-1);\n-}\n-enum DT_EXTRANUM =     3;\n-enum DF_ORIGIN =       0x00000001;\n-enum DF_SYMBOLIC =     0x00000002;\n-enum DF_TEXTREL =      0x00000004;\n-enum DF_BIND_NOW =     0x00000008;\n-enum DF_STATIC_TLS =   0x00000010;\n-enum DF_1_NOW =        0x00000001;\n-enum DF_1_GLOBAL =     0x00000002;\n-enum DF_1_GROUP =      0x00000004;\n-enum DF_1_NODELETE =   0x00000008;\n-enum DF_1_LOADFLTR =   0x00000010;\n-enum DF_1_INITFIRST =  0x00000020;\n-enum DF_1_NOOPEN =     0x00000040;\n-enum DF_1_ORIGIN =     0x00000080;\n-enum DF_1_DIRECT =     0x00000100;\n-enum DF_1_TRANS =      0x00000200;\n-enum DF_1_INTERPOSE =  0x00000400;\n-enum DF_1_NODEFLIB =   0x00000800;\n-enum DF_1_NODUMP =     0x00001000;\n-enum DF_1_CONFALT =    0x00002000;\n-enum DF_1_ENDFILTEE =  0x00004000;\n-enum DF_1_DISPRELDNE = 0x00008000;\n-enum DF_1_DISPRELPND = 0x00010000;\n-enum DF_1_NODIRECT =   0x00020000;\n-enum DF_1_IGNMULDEF =  0x00040000;\n-enum DF_1_NOKSYMS =    0x00080000;\n-enum DF_1_NOHDR =      0x00100000;\n-enum DF_1_EDITED =     0x00200000;\n-enum DF_1_NORELOC =    0x00400000;\n-enum DF_1_SYMINTPOSE = 0x00800000;\n-enum DF_1_GLOBAUDIT =  0x01000000;\n-enum DF_1_SINGLETON =  0x02000000;\n-enum DTF_1_PARINIT =   0x00000001;\n-enum DTF_1_CONFEXP =   0x00000002;\n-enum DF_P1_LAZYLOAD =  0x00000001;\n-enum DF_P1_GROUPPERM = 0x00000002;\n-\n-struct Elf32_Verdef\n-{\n-    Elf32_Half    vd_version;\n-    Elf32_Half    vd_flags;\n-    Elf32_Half    vd_ndx;\n-    Elf32_Half    vd_cnt;\n-    Elf32_Word    vd_hash;\n-    Elf32_Word    vd_aux;\n-    Elf32_Word    vd_next;\n-}\n-\n-struct Elf64_Verdef\n-{\n-    Elf64_Half    vd_version;\n-    Elf64_Half    vd_flags;\n-    Elf64_Half    vd_ndx;\n-    Elf64_Half    vd_cnt;\n-    Elf64_Word    vd_hash;\n-    Elf64_Word    vd_aux;\n-    Elf64_Word    vd_next;\n-}\n-enum VER_DEF_NONE =    0;\n-enum VER_DEF_CURRENT = 1;\n-enum VER_DEF_NUM =     2;\n-enum VER_FLG_BASE =    0x1;\n-enum VER_FLG_WEAK =    0x2;\n-enum VER_NDX_LOCAL =           0;\n-enum VER_NDX_GLOBAL =          1;\n-enum VER_NDX_LORESERVE =       0xff00;\n-enum VER_NDX_ELIMINATE =       0xff01;\n-\n-struct Elf32_Verdaux\n-{\n-    Elf32_Word    vda_name;\n-    Elf32_Word    vda_next;\n-}\n-\n-struct Elf64_Verdaux\n-{\n-    Elf64_Word    vda_name;\n-    Elf64_Word    vda_next;\n-}\n-\n-struct Elf32_Verneed\n-{\n-    Elf32_Half    vn_version;\n-    Elf32_Half    vn_cnt;\n-    Elf32_Word    vn_file;\n-    Elf32_Word    vn_aux;\n-    Elf32_Word    vn_next;\n-}\n-\n-struct Elf64_Verneed\n-{\n-    Elf64_Half    vn_version;\n-    Elf64_Half    vn_cnt;\n-    Elf64_Word    vn_file;\n-    Elf64_Word    vn_aux;\n-    Elf64_Word    vn_next;\n-}\n-enum VER_NEED_NONE =    0;\n-enum VER_NEED_CURRENT = 1;\n-enum VER_NEED_NUM =     2;\n-\n-struct Elf32_Vernaux\n-{\n-    Elf32_Word    vna_hash;\n-    Elf32_Half    vna_flags;\n-    Elf32_Half    vna_other;\n-    Elf32_Word    vna_name;\n-    Elf32_Word    vna_next;\n-}\n-\n-struct Elf64_Vernaux\n-{\n-    Elf64_Word    vna_hash;\n-    Elf64_Half    vna_flags;\n-    Elf64_Half    vna_other;\n-    Elf64_Word    vna_name;\n-    Elf64_Word    vna_next;\n-}\n-// duplicate\n-// enum VER_FLG_WEAK =    0x2;\n+enum NT_GNU_ABI_TAG =      1;\n+enum NT_GNU_HWCAP =        2;\n+enum NT_GNU_BUILD_ID =     3;\n+enum NT_GNU_GOLD_VERSION = 4;\n \n struct Elf32_auxv_t\n {\n@@ -836,1698 +138,3 @@ enum AT_L1I_CACHESHAPE =       34;\n enum AT_L1D_CACHESHAPE =       35;\n enum AT_L2_CACHESHAPE =        36;\n enum AT_L3_CACHESHAPE =        37;\n-\n-struct Elf32_Nhdr\n-{\n-  Elf32_Word n_namesz;\n-  Elf32_Word n_descsz;\n-  Elf32_Word n_type;\n-}\n-\n-struct Elf64_Nhdr\n-{\n-  Elf64_Word n_namesz;\n-  Elf64_Word n_descsz;\n-  Elf64_Word n_type;\n-}\n-enum ELF_NOTE_SOLARIS =        \"SUNW Solaris\";\n-enum ELF_NOTE_GNU =            \"GNU\";\n-enum ELF_NOTE_PAGESIZE_HINT =  1;\n-enum NT_GNU_ABI_TAG =  1;\n-enum ELF_NOTE_ABI =    NT_GNU_ABI_TAG;\n-enum ELF_NOTE_OS_LINUX =       0;\n-enum ELF_NOTE_OS_GNU =         1;\n-enum ELF_NOTE_OS_SOLARIS2 =    2;\n-enum ELF_NOTE_OS_FREEBSD =     3;\n-enum NT_GNU_HWCAP =    2;\n-enum NT_GNU_BUILD_ID = 3;\n-enum NT_GNU_GOLD_VERSION =     4;\n-struct Elf32_Move\n-{\n-  Elf32_Xword m_value;\n-  Elf32_Word m_info;\n-  Elf32_Word m_poffset;\n-  Elf32_Half m_repeat;\n-  Elf32_Half m_stride;\n-}\n-\n-struct Elf64_Move\n-{\n-  Elf64_Xword m_value;\n-  Elf64_Xword m_info;\n-  Elf64_Xword m_poffset;\n-  Elf64_Half m_repeat;\n-  Elf64_Half m_stride;\n-}\n-extern (D)\n-{\n-    auto ELF32_M_SYM(I)(I info) { return info >> 8; }\n-    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n-alias ELF32_M_SYM ELF64_M_SYM;\n-alias ELF32_M_SIZE ELF64_M_SIZE;\n-alias ELF32_M_INFO ELF64_M_INFO;\n-enum EF_CPU32 =        0x00810000;\n-\n-enum R_68K_NONE =      0;\n-enum R_68K_32 =        1;\n-enum R_68K_16 =        2;\n-enum R_68K_8 =         3;\n-enum R_68K_PC32 =      4;\n-enum R_68K_PC16 =      5;\n-enum R_68K_PC8 =       6;\n-enum R_68K_GOT32 =     7;\n-enum R_68K_GOT16 =     8;\n-enum R_68K_GOT8 =      9;\n-enum R_68K_GOT32O =    10;\n-enum R_68K_GOT16O =    11;\n-enum R_68K_GOT8O =     12;\n-enum R_68K_PLT32 =     13;\n-enum R_68K_PLT16 =     14;\n-enum R_68K_PLT8 =      15;\n-enum R_68K_PLT32O =    16;\n-enum R_68K_PLT16O =    17;\n-enum R_68K_PLT8O =     18;\n-enum R_68K_COPY =      19;\n-enum R_68K_GLOB_DAT =  20;\n-enum R_68K_JMP_SLOT =  21;\n-enum R_68K_RELATIVE =  22;\n-enum R_68K_TLS_GD32 =      25;\n-enum R_68K_TLS_GD16 =      26;\n-enum R_68K_TLS_GD8 =       27;\n-enum R_68K_TLS_LDM32 =     28;\n-enum R_68K_TLS_LDM16 =     29;\n-enum R_68K_TLS_LDM8 =      30;\n-enum R_68K_TLS_LDO32 =     31;\n-enum R_68K_TLS_LDO16 =     32;\n-enum R_68K_TLS_LDO8 =      33;\n-enum R_68K_TLS_IE32 =      34;\n-enum R_68K_TLS_IE16 =      35;\n-enum R_68K_TLS_IE8 =       36;\n-enum R_68K_TLS_LE32 =      37;\n-enum R_68K_TLS_LE16 =      38;\n-enum R_68K_TLS_LE8 =       39;\n-enum R_68K_TLS_DTPMOD32 =  40;\n-enum R_68K_TLS_DTPREL32 =  41;\n-enum R_68K_TLS_TPREL32 =   42;\n-enum R_68K_NUM =       43;\n-\n-enum R_386_NONE =         0;\n-enum R_386_32 =           1;\n-enum R_386_PC32 =         2;\n-enum R_386_GOT32 =        3;\n-enum R_386_PLT32 =        4;\n-enum R_386_COPY =         5;\n-enum R_386_GLOB_DAT =     6;\n-enum R_386_JMP_SLOT =     7;\n-enum R_386_RELATIVE =     8;\n-enum R_386_GOTOFF =       9;\n-enum R_386_GOTPC =        10;\n-enum R_386_32PLT =        11;\n-enum R_386_TLS_TPOFF =    14;\n-enum R_386_TLS_IE =       15;\n-enum R_386_TLS_GOTIE =    16;\n-enum R_386_TLS_LE =       17;\n-enum R_386_TLS_GD =       18;\n-enum R_386_TLS_LDM =      19;\n-enum R_386_16 =           20;\n-enum R_386_PC16 =         21;\n-enum R_386_8 =            22;\n-enum R_386_PC8 =          23;\n-enum R_386_TLS_GD_32 =    24;\n-enum R_386_TLS_GD_PUSH =  25;\n-enum R_386_TLS_GD_CALL =  26;\n-enum R_386_TLS_GD_POP =   27;\n-enum R_386_TLS_LDM_32 =   28;\n-enum R_386_TLS_LDM_PUSH = 29;\n-enum R_386_TLS_LDM_CALL = 30;\n-enum R_386_TLS_LDM_POP =  31;\n-enum R_386_TLS_LDO_32 =   32;\n-enum R_386_TLS_IE_32 =    33;\n-enum R_386_TLS_LE_32 =    34;\n-enum R_386_TLS_DTPMOD32 = 35;\n-enum R_386_TLS_DTPOFF32 = 36;\n-enum R_386_TLS_TPOFF32 =  37;\n-enum R_386_SIZE32 =       38;\n-enum R_386_TLS_GOTDESC =  39;\n-enum R_386_TLS_DESC_CALL = 40;\n-enum R_386_TLS_DESC =     41;\n-enum R_386_IRELATIVE =    42;\n-enum R_386_NUM =          43;\n-\n-enum STT_SPARC_REGISTER =      13;\n-\n-enum EF_SPARCV9_MM =           3;\n-enum EF_SPARCV9_TSO =          0;\n-enum EF_SPARCV9_PSO =          1;\n-enum EF_SPARCV9_RMO =          2;\n-enum EF_SPARC_LEDATA =         0x800000;\n-enum EF_SPARC_EXT_MASK =       0xFFFF00;\n-enum EF_SPARC_32PLUS =         0x000100;\n-enum EF_SPARC_SUN_US1 =        0x000200;\n-enum EF_SPARC_HAL_R1 =         0x000400;\n-enum EF_SPARC_SUN_US3 =        0x000800;\n-\n-enum R_SPARC_NONE =            0;\n-enum R_SPARC_8 =               1;\n-enum R_SPARC_16 =              2;\n-enum R_SPARC_32 =              3;\n-enum R_SPARC_DISP8 =           4;\n-enum R_SPARC_DISP16 =          5;\n-enum R_SPARC_DISP32 =          6;\n-enum R_SPARC_WDISP30 =         7;\n-enum R_SPARC_WDISP22 =         8;\n-enum R_SPARC_HI22 =            9;\n-enum R_SPARC_22 =              10;\n-enum R_SPARC_13 =              11;\n-enum R_SPARC_LO10 =            12;\n-enum R_SPARC_GOT10 =           13;\n-enum R_SPARC_GOT13 =           14;\n-enum R_SPARC_GOT22 =           15;\n-enum R_SPARC_PC10 =            16;\n-enum R_SPARC_PC22 =            17;\n-enum R_SPARC_WPLT30 =          18;\n-enum R_SPARC_COPY =            19;\n-enum R_SPARC_GLOB_DAT =        20;\n-enum R_SPARC_JMP_SLOT =        21;\n-enum R_SPARC_RELATIVE =        22;\n-enum R_SPARC_UA32 =            23;\n-\n-enum R_SPARC_PLT32 =           24;\n-enum R_SPARC_HIPLT22 =         25;\n-enum R_SPARC_LOPLT10 =         26;\n-enum R_SPARC_PCPLT32 =         27;\n-enum R_SPARC_PCPLT22 =         28;\n-enum R_SPARC_PCPLT10 =         29;\n-enum R_SPARC_10 =              30;\n-enum R_SPARC_11 =              31;\n-enum R_SPARC_64 =              32;\n-enum R_SPARC_OLO10 =           33;\n-enum R_SPARC_HH22 =            34;\n-enum R_SPARC_HM10 =            35;\n-enum R_SPARC_LM22 =            36;\n-enum R_SPARC_PC_HH22 =         37;\n-enum R_SPARC_PC_HM10 =         38;\n-enum R_SPARC_PC_LM22 =         39;\n-enum R_SPARC_WDISP16 =         40;\n-enum R_SPARC_WDISP19 =         41;\n-enum R_SPARC_GLOB_JMP =        42;\n-enum R_SPARC_7 =               43;\n-enum R_SPARC_5 =               44;\n-enum R_SPARC_6 =               45;\n-enum R_SPARC_DISP64 =          46;\n-enum R_SPARC_PLT64 =           47;\n-enum R_SPARC_HIX22 =           48;\n-enum R_SPARC_LOX10 =           49;\n-enum R_SPARC_H44 =             50;\n-enum R_SPARC_M44 =             51;\n-enum R_SPARC_L44 =             52;\n-enum R_SPARC_REGISTER =        53;\n-enum R_SPARC_UA64 =            54;\n-enum R_SPARC_UA16 =            55;\n-enum R_SPARC_TLS_GD_HI22 =     56;\n-enum R_SPARC_TLS_GD_LO10 =     57;\n-enum R_SPARC_TLS_GD_ADD =      58;\n-enum R_SPARC_TLS_GD_CALL =     59;\n-enum R_SPARC_TLS_LDM_HI22 =    60;\n-enum R_SPARC_TLS_LDM_LO10 =    61;\n-enum R_SPARC_TLS_LDM_ADD =     62;\n-enum R_SPARC_TLS_LDM_CALL =    63;\n-enum R_SPARC_TLS_LDO_HIX22 =   64;\n-enum R_SPARC_TLS_LDO_LOX10 =   65;\n-enum R_SPARC_TLS_LDO_ADD =     66;\n-enum R_SPARC_TLS_IE_HI22 =     67;\n-enum R_SPARC_TLS_IE_LO10 =     68;\n-enum R_SPARC_TLS_IE_LD =       69;\n-enum R_SPARC_TLS_IE_LDX =      70;\n-enum R_SPARC_TLS_IE_ADD =      71;\n-enum R_SPARC_TLS_LE_HIX22 =    72;\n-enum R_SPARC_TLS_LE_LOX10 =    73;\n-enum R_SPARC_TLS_DTPMOD32 =    74;\n-enum R_SPARC_TLS_DTPMOD64 =    75;\n-enum R_SPARC_TLS_DTPOFF32 =    76;\n-enum R_SPARC_TLS_DTPOFF64 =    77;\n-enum R_SPARC_TLS_TPOFF32 =     78;\n-enum R_SPARC_TLS_TPOFF64 =     79;\n-enum R_SPARC_GOTDATA_HIX22 =   80;\n-enum R_SPARC_GOTDATA_LOX10 =   81;\n-enum R_SPARC_GOTDATA_OP_HIX22 =        82;\n-enum R_SPARC_GOTDATA_OP_LOX10 =        83;\n-enum R_SPARC_GOTDATA_OP =      84;\n-enum R_SPARC_H34 =             85;\n-enum R_SPARC_SIZE32 =          86;\n-enum R_SPARC_SIZE64 =          87;\n-enum R_SPARC_WDISP10 =         88;\n-enum R_SPARC_JMP_IREL =        248;\n-enum R_SPARC_IRELATIVE =       249;\n-enum R_SPARC_GNU_VTINHERIT =   250;\n-enum R_SPARC_GNU_VTENTRY =     251;\n-enum R_SPARC_REV32 =           252;\n-enum R_SPARC_NUM =             253;\n-\n-enum DT_SPARC_REGISTER =       0x70000001;\n-enum DT_SPARC_NUM =            2;\n-\n-enum EF_MIPS_NOREORDER =       1;\n-enum EF_MIPS_PIC =             2;\n-enum EF_MIPS_CPIC =            4;\n-enum EF_MIPS_XGOT =            8;\n-enum EF_MIPS_64BIT_WHIRL =     16;\n-enum EF_MIPS_ABI2 =            32;\n-enum EF_MIPS_ABI_ON32 =        64;\n-enum EF_MIPS_ARCH =            0xf0000000;\n-\n-enum EF_MIPS_ARCH_1 =          0x00000000;\n-enum EF_MIPS_ARCH_2 =          0x10000000;\n-enum EF_MIPS_ARCH_3 =          0x20000000;\n-enum EF_MIPS_ARCH_4 =          0x30000000;\n-enum EF_MIPS_ARCH_5 =          0x40000000;\n-enum EF_MIPS_ARCH_32 =         0x50000000;\n-enum EF_MIPS_ARCH_64 =         0x60000000;\n-enum EF_MIPS_ARCH_32R2 =       0x70000000;\n-enum EF_MIPS_ARCH_64R2 =       0x80000000;\n-\n-enum E_MIPS_ARCH_1 =           EF_MIPS_ARCH_1;\n-enum E_MIPS_ARCH_2 =           EF_MIPS_ARCH_2;\n-enum E_MIPS_ARCH_3 =           EF_MIPS_ARCH_3;\n-enum E_MIPS_ARCH_4 =           EF_MIPS_ARCH_4;\n-enum E_MIPS_ARCH_5 =           EF_MIPS_ARCH_5;\n-enum E_MIPS_ARCH_32 =          EF_MIPS_ARCH_32;\n-enum E_MIPS_ARCH_64 =          EF_MIPS_ARCH_64;\n-\n-enum SHN_MIPS_ACOMMON =        0xff00;\n-enum SHN_MIPS_TEXT =           0xff01;\n-enum SHN_MIPS_DATA =           0xff02;\n-enum SHN_MIPS_SCOMMON =        0xff03;\n-enum SHN_MIPS_SUNDEFINED =     0xff04;\n-\n-enum SHT_MIPS_LIBLIST =        0x70000000;\n-enum SHT_MIPS_MSYM =           0x70000001;\n-enum SHT_MIPS_CONFLICT =       0x70000002;\n-enum SHT_MIPS_GPTAB =          0x70000003;\n-enum SHT_MIPS_UCODE =          0x70000004;\n-enum SHT_MIPS_DEBUG =          0x70000005;\n-enum SHT_MIPS_REGINFO =        0x70000006;\n-enum SHT_MIPS_PACKAGE =        0x70000007;\n-enum SHT_MIPS_PACKSYM =        0x70000008;\n-enum SHT_MIPS_RELD =           0x70000009;\n-enum SHT_MIPS_IFACE =          0x7000000b;\n-enum SHT_MIPS_CONTENT =        0x7000000c;\n-enum SHT_MIPS_OPTIONS =        0x7000000d;\n-enum SHT_MIPS_SHDR =           0x70000010;\n-enum SHT_MIPS_FDESC =          0x70000011;\n-enum SHT_MIPS_EXTSYM =         0x70000012;\n-enum SHT_MIPS_DENSE =          0x70000013;\n-enum SHT_MIPS_PDESC =          0x70000014;\n-enum SHT_MIPS_LOCSYM =         0x70000015;\n-enum SHT_MIPS_AUXSYM =         0x70000016;\n-enum SHT_MIPS_OPTSYM =         0x70000017;\n-enum SHT_MIPS_LOCSTR =         0x70000018;\n-enum SHT_MIPS_LINE =           0x70000019;\n-enum SHT_MIPS_RFDESC =         0x7000001a;\n-enum SHT_MIPS_DELTASYM =       0x7000001b;\n-enum SHT_MIPS_DELTAINST =      0x7000001c;\n-enum SHT_MIPS_DELTACLASS =     0x7000001d;\n-enum SHT_MIPS_DWARF =          0x7000001e;\n-enum SHT_MIPS_DELTADECL =      0x7000001f;\n-enum SHT_MIPS_SYMBOL_LIB =     0x70000020;\n-enum SHT_MIPS_EVENTS =         0x70000021;\n-enum SHT_MIPS_TRANSLATE =      0x70000022;\n-enum SHT_MIPS_PIXIE =          0x70000023;\n-enum SHT_MIPS_XLATE =          0x70000024;\n-enum SHT_MIPS_XLATE_DEBUG =    0x70000025;\n-enum SHT_MIPS_WHIRL =          0x70000026;\n-enum SHT_MIPS_EH_REGION =      0x70000027;\n-enum SHT_MIPS_XLATE_OLD =      0x70000028;\n-enum SHT_MIPS_PDR_EXCEPTION =  0x70000029;\n-\n-enum SHF_MIPS_GPREL =          0x10000000;\n-enum SHF_MIPS_MERGE =          0x20000000;\n-enum SHF_MIPS_ADDR =           0x40000000;\n-enum SHF_MIPS_STRINGS =        0x80000000;\n-enum SHF_MIPS_NOSTRIP =        0x08000000;\n-enum SHF_MIPS_LOCAL =          0x04000000;\n-enum SHF_MIPS_NAMES =          0x02000000;\n-enum SHF_MIPS_NODUPE =         0x01000000;\n-enum STO_MIPS_DEFAULT =                0x0;\n-enum STO_MIPS_INTERNAL =               0x1;\n-enum STO_MIPS_HIDDEN =                 0x2;\n-enum STO_MIPS_PROTECTED =              0x3;\n-enum STO_MIPS_PLT =                    0x8;\n-enum STO_MIPS_SC_ALIGN_UNUSED =        0xff;\n-enum STB_MIPS_SPLIT_COMMON =           13;\n-\n-union Elf32_gptab\n-{\n-    struct _gt_header\n-    {\n-        Elf32_Word gt_current_g_value;\n-        Elf32_Word gt_unused;\n-    } _gt_header gt_header;\n-    struct _gt_entry\n-    {\n-        Elf32_Word gt_g_value;\n-        Elf32_Word gt_bytes;\n-    } _gt_entry gt_entry;\n-}\n-\n-struct Elf32_RegInfo\n-{\n-    Elf32_Word ri_gprmask;\n-    Elf32_Word[4] ri_cprmask;\n-    Elf32_Sword ri_gp_value;\n-}\n-\n-struct Elf_Options\n-{\n-    ubyte kind;\n-    ubyte size;\n-    Elf32_Section section;\n-    Elf32_Word info;\n-}\n-\n-enum ODK_NULL =        0;\n-enum ODK_REGINFO =     1;\n-enum ODK_EXCEPTIONS =  2;\n-enum ODK_PAD =         3;\n-enum ODK_HWPATCH =     4;\n-enum ODK_FILL =        5;\n-enum ODK_TAGS =        6;\n-enum ODK_HWAND =       7;\n-enum ODK_HWOR =        8;\n-\n-enum OEX_FPU_MIN =     0x1f;\n-enum OEX_FPU_MAX =     0x1f00;\n-enum OEX_PAGE0 =       0x10000;\n-enum OEX_SMM =         0x20000;\n-enum OEX_FPDBUG =      0x40000;\n-enum OEX_PRECISEFP =   OEX_FPDBUG;\n-enum OEX_DISMISS =     0x80000;\n-\n-enum OEX_FPU_INVAL =   0x10;\n-enum OEX_FPU_DIV0 =    0x08;\n-enum OEX_FPU_OFLO =    0x04;\n-enum OEX_FPU_UFLO =    0x02;\n-enum OEX_FPU_INEX =    0x01;\n-\n-enum OHW_R4KEOP =      0x1;\n-enum OHW_R8KPFETCH =   0x2;\n-enum OHW_R5KEOP =      0x4;\n-enum OHW_R5KCVTL =     0x8;\n-\n-enum OPAD_PREFIX =     0x1;\n-enum OPAD_POSTFIX =    0x2;\n-enum OPAD_SYMBOL =     0x4;\n-\n-struct Elf_Options_Hw\n-{\n-    Elf32_Word hwp_flags1;\n-    Elf32_Word hwp_flags2;\n-}\n-\n-enum OHWA0_R4KEOP_CHECKED =    0x00000001;\n-enum OHWA1_R4KEOP_CLEAN =      0x00000002;\n-\n-enum R_MIPS_NONE =             0;\n-enum R_MIPS_16 =               1;\n-enum R_MIPS_32 =               2;\n-enum R_MIPS_REL32 =            3;\n-enum R_MIPS_26 =               4;\n-enum R_MIPS_HI16 =             5;\n-enum R_MIPS_LO16 =             6;\n-enum R_MIPS_GPREL16 =          7;\n-enum R_MIPS_LITERAL =          8;\n-enum R_MIPS_GOT16 =            9;\n-enum R_MIPS_PC16 =             10;\n-enum R_MIPS_CALL16 =           11;\n-enum R_MIPS_GPREL32 =          12;\n-\n-enum R_MIPS_SHIFT5 =           16;\n-enum R_MIPS_SHIFT6 =           17;\n-enum R_MIPS_64 =               18;\n-enum R_MIPS_GOT_DISP =         19;\n-enum R_MIPS_GOT_PAGE =         20;\n-enum R_MIPS_GOT_OFST =         21;\n-enum R_MIPS_GOT_HI16 =         22;\n-enum R_MIPS_GOT_LO16 =         23;\n-enum R_MIPS_SUB =              24;\n-enum R_MIPS_INSERT_A =         25;\n-enum R_MIPS_INSERT_B =         26;\n-enum R_MIPS_DELETE =           27;\n-enum R_MIPS_HIGHER =           28;\n-enum R_MIPS_HIGHEST =          29;\n-enum R_MIPS_CALL_HI16 =        30;\n-enum R_MIPS_CALL_LO16 =        31;\n-enum R_MIPS_SCN_DISP =         32;\n-enum R_MIPS_REL16 =            33;\n-enum R_MIPS_ADD_IMMEDIATE =    34;\n-enum R_MIPS_PJUMP =            35;\n-enum R_MIPS_RELGOT =           36;\n-enum R_MIPS_JALR =             37;\n-enum R_MIPS_TLS_DTPMOD32 =     38;\n-enum R_MIPS_TLS_DTPREL32 =     39;\n-enum R_MIPS_TLS_DTPMOD64 =     40;\n-enum R_MIPS_TLS_DTPREL64 =     41;\n-enum R_MIPS_TLS_GD =           42;\n-enum R_MIPS_TLS_LDM =          43;\n-enum R_MIPS_TLS_DTPREL_HI16 =  44;\n-enum R_MIPS_TLS_DTPREL_LO16 =  45;\n-enum R_MIPS_TLS_GOTTPREL =     46;\n-enum R_MIPS_TLS_TPREL32 =      47;\n-enum R_MIPS_TLS_TPREL64 =      48;\n-enum R_MIPS_TLS_TPREL_HI16 =   49;\n-enum R_MIPS_TLS_TPREL_LO16 =   50;\n-enum R_MIPS_GLOB_DAT =         51;\n-enum R_MIPS_COPY =             126;\n-enum R_MIPS_JUMP_SLOT =        127;\n-enum R_MIPS_NUM =              128;\n-\n-enum PT_MIPS_REGINFO = 0x70000000;\n-enum PT_MIPS_RTPROC =  0x70000001;\n-enum PT_MIPS_OPTIONS = 0x70000002;\n-\n-enum PF_MIPS_LOCAL =   0x10000000;\n-\n-enum DT_MIPS_RLD_VERSION =  0x70000001;\n-enum DT_MIPS_TIME_STAMP =   0x70000002;\n-enum DT_MIPS_ICHECKSUM =    0x70000003;\n-enum DT_MIPS_IVERSION =     0x70000004;\n-enum DT_MIPS_FLAGS =        0x70000005;\n-enum DT_MIPS_BASE_ADDRESS = 0x70000006;\n-enum DT_MIPS_MSYM =         0x70000007;\n-enum DT_MIPS_CONFLICT =     0x70000008;\n-enum DT_MIPS_LIBLIST =      0x70000009;\n-enum DT_MIPS_LOCAL_GOTNO =  0x7000000a;\n-enum DT_MIPS_CONFLICTNO =   0x7000000b;\n-enum DT_MIPS_LIBLISTNO =    0x70000010;\n-enum DT_MIPS_SYMTABNO =     0x70000011;\n-enum DT_MIPS_UNREFEXTNO =   0x70000012;\n-enum DT_MIPS_GOTSYM =       0x70000013;\n-enum DT_MIPS_HIPAGENO =     0x70000014;\n-enum DT_MIPS_RLD_MAP =      0x70000016;\n-enum DT_MIPS_DELTA_CLASS =  0x70000017;\n-enum DT_MIPS_DELTA_CLASS_NO =    0x70000018;\n-enum DT_MIPS_DELTA_INSTANCE =    0x70000019;\n-enum DT_MIPS_DELTA_INSTANCE_NO = 0x7000001a;\n-enum DT_MIPS_DELTA_RELOC =  0x7000001b;\n-enum DT_MIPS_DELTA_RELOC_NO = 0x7000001c;\n-enum DT_MIPS_DELTA_SYM =    0x7000001d;\n-enum DT_MIPS_DELTA_SYM_NO = 0x7000001e;\n-enum DT_MIPS_DELTA_CLASSSYM = 0x70000020;\n-enum DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021;\n-enum DT_MIPS_CXX_FLAGS =    0x70000022;\n-enum DT_MIPS_PIXIE_INIT =   0x70000023;\n-enum DT_MIPS_SYMBOL_LIB =   0x70000024;\n-enum DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025;\n-enum DT_MIPS_LOCAL_GOTIDX = 0x70000026;\n-enum DT_MIPS_HIDDEN_GOTIDX = 0x70000027;\n-enum DT_MIPS_PROTECTED_GOTIDX = 0x70000028;\n-enum DT_MIPS_OPTIONS =      0x70000029;\n-enum DT_MIPS_INTERFACE =    0x7000002a;\n-enum DT_MIPS_DYNSTR_ALIGN = 0x7000002b;\n-enum DT_MIPS_INTERFACE_SIZE = 0x7000002c;\n-enum DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002d;\n-enum DT_MIPS_PERF_SUFFIX =  0x7000002e;\n-enum DT_MIPS_COMPACT_SIZE = 0x7000002f;\n-enum DT_MIPS_GP_VALUE =     0x70000030;\n-enum DT_MIPS_AUX_DYNAMIC =  0x70000031;\n-enum DT_MIPS_PLTGOT =       0x70000032;\n-enum DT_MIPS_RWPLT =        0x70000034;\n-enum DT_MIPS_NUM =          0x35;\n-\n-enum RHF_NONE =                   0;\n-enum RHF_QUICKSTART =             (1 << 0);\n-enum RHF_NOTPOT =                 (1 << 1);\n-enum RHF_NO_LIBRARY_REPLACEMENT = (1 << 2);\n-enum RHF_NO_MOVE =                (1 << 3);\n-enum RHF_SGI_ONLY =               (1 << 4);\n-enum RHF_GUARANTEE_INIT =         (1 << 5);\n-enum RHF_DELTA_C_PLUS_PLUS =      (1 << 6);\n-enum RHF_GUARANTEE_START_INIT =   (1 << 7);\n-enum RHF_PIXIE =                  (1 << 8);\n-enum RHF_DEFAULT_DELAY_LOAD =     (1 << 9);\n-enum RHF_REQUICKSTART =           (1 << 10);\n-enum RHF_REQUICKSTARTED =         (1 << 11);\n-enum RHF_CORD =                   (1 << 12);\n-enum RHF_NO_UNRES_UNDEF =         (1 << 13);\n-enum RHF_RLD_ORDER_SAFE =         (1 << 14);\n-\n-struct Elf32_Lib\n-{\n-    Elf32_Word l_name;\n-    Elf32_Word l_time_stamp;\n-    Elf32_Word l_checksum;\n-    Elf32_Word l_version;\n-    Elf32_Word l_flags;\n-}\n-\n-struct Elf64_Lib\n-{\n-    Elf64_Word l_name;\n-    Elf64_Word l_time_stamp;\n-    Elf64_Word l_checksum;\n-    Elf64_Word l_version;\n-    Elf64_Word l_flags;\n-}\n-\n-enum LL_NONE =           0;\n-enum LL_EXACT_MATCH =    (1 << 0);\n-enum LL_IGNORE_INT_VER = (1 << 1);\n-enum LL_REQUIRE_MINOR =  (1 << 2);\n-enum LL_EXPORTS =        (1 << 3);\n-enum LL_DELAY_LOAD =     (1 << 4);\n-enum LL_DELTA =          (1 << 5);\n-\n-alias Elf32_Addr Elf32_Conflict;\n-\n-enum EF_PARISC_TRAPNIL =       0x00010000;\n-enum EF_PARISC_EXT =           0x00020000;\n-enum EF_PARISC_LSB =           0x00040000;\n-enum EF_PARISC_WIDE =          0x00080000;\n-enum EF_PARISC_NO_KABP =       0x00100000;\n-enum EF_PARISC_LAZYSWAP =      0x00400000;\n-enum EF_PARISC_ARCH =          0x0000ffff;\n-\n-enum EFA_PARISC_1_0 =              0x020b;\n-enum EFA_PARISC_1_1 =              0x0210;\n-enum EFA_PARISC_2_0 =              0x0214;\n-\n-enum SHN_PARISC_ANSI_COMMON =  0xff00;\n-enum SHN_PARISC_HUGE_COMMON =  0xff01;\n-\n-enum SHT_PARISC_EXT =          0x70000000;\n-enum SHT_PARISC_UNWIND =       0x70000001;\n-enum SHT_PARISC_DOC =          0x70000002;\n-\n-enum SHF_PARISC_SHORT =        0x20000000;\n-enum SHF_PARISC_HUGE =         0x40000000;\n-enum SHF_PARISC_SBP =          0x80000000;\n-\n-enum STT_PARISC_MILLICODE =    13;\n-\n-enum STT_HP_OPAQUE =           (STT_LOOS + 0x1);\n-enum STT_HP_STUB =             (STT_LOOS + 0x2);\n-\n-enum R_PARISC_NONE =           0;\n-enum R_PARISC_DIR32 =          1;\n-enum R_PARISC_DIR21L =         2;\n-enum R_PARISC_DIR17R =         3;\n-enum R_PARISC_DIR17F =         4;\n-enum R_PARISC_DIR14R =         6;\n-enum R_PARISC_PCREL32 =        9;\n-enum R_PARISC_PCREL21L =       10;\n-enum R_PARISC_PCREL17R =       11;\n-enum R_PARISC_PCREL17F =       12;\n-enum R_PARISC_PCREL14R =       14;\n-enum R_PARISC_DPREL21L =       18;\n-enum R_PARISC_DPREL14R =       22;\n-enum R_PARISC_GPREL21L =       26;\n-enum R_PARISC_GPREL14R =       30;\n-enum R_PARISC_LTOFF21L =       34;\n-enum R_PARISC_LTOFF14R =       38;\n-enum R_PARISC_SECREL32 =       41;\n-enum R_PARISC_SEGBASE =        48;\n-enum R_PARISC_SEGREL32 =       49;\n-enum R_PARISC_PLTOFF21L =      50;\n-enum R_PARISC_PLTOFF14R =      54;\n-enum R_PARISC_LTOFF_FPTR32 =   57;\n-enum R_PARISC_LTOFF_FPTR21L =  58;\n-enum R_PARISC_LTOFF_FPTR14R =  62;\n-enum R_PARISC_FPTR64 =         64;\n-enum R_PARISC_PLABEL32 =       65;\n-enum R_PARISC_PLABEL21L =      66;\n-enum R_PARISC_PLABEL14R =      70;\n-enum R_PARISC_PCREL64 =        72;\n-enum R_PARISC_PCREL22F =       74;\n-enum R_PARISC_PCREL14WR =      75;\n-enum R_PARISC_PCREL14DR =      76;\n-enum R_PARISC_PCREL16F =       77;\n-enum R_PARISC_PCREL16WF =      78;\n-enum R_PARISC_PCREL16DF =      79;\n-enum R_PARISC_DIR64 =          80;\n-enum R_PARISC_DIR14WR =        83;\n-enum R_PARISC_DIR14DR =        84;\n-enum R_PARISC_DIR16F =         85;\n-enum R_PARISC_DIR16WF =        86;\n-enum R_PARISC_DIR16DF =        87;\n-enum R_PARISC_GPREL64 =        88;\n-enum R_PARISC_GPREL14WR =      91;\n-enum R_PARISC_GPREL14DR =      92;\n-enum R_PARISC_GPREL16F =       93;\n-enum R_PARISC_GPREL16WF =      94;\n-enum R_PARISC_GPREL16DF =      95;\n-enum R_PARISC_LTOFF64 =        96;\n-enum R_PARISC_LTOFF14WR =      99;\n-enum R_PARISC_LTOFF14DR =      100;\n-enum R_PARISC_LTOFF16F =       101;\n-enum R_PARISC_LTOFF16WF =      102;\n-enum R_PARISC_LTOFF16DF =      103;\n-enum R_PARISC_SECREL64 =       104;\n-enum R_PARISC_SEGREL64 =       112;\n-enum R_PARISC_PLTOFF14WR =     115;\n-enum R_PARISC_PLTOFF14DR =     116;\n-enum R_PARISC_PLTOFF16F =      117;\n-enum R_PARISC_PLTOFF16WF =     118;\n-enum R_PARISC_PLTOFF16DF =     119;\n-enum R_PARISC_LTOFF_FPTR64 =   120;\n-enum R_PARISC_LTOFF_FPTR14WR = 123;\n-enum R_PARISC_LTOFF_FPTR14DR = 124;\n-enum R_PARISC_LTOFF_FPTR16F =  125;\n-enum R_PARISC_LTOFF_FPTR16WF = 126;\n-enum R_PARISC_LTOFF_FPTR16DF = 127;\n-enum R_PARISC_LORESERVE =      128;\n-enum R_PARISC_COPY =           128;\n-enum R_PARISC_IPLT =           129;\n-enum R_PARISC_EPLT =           130;\n-enum R_PARISC_TPREL32 =        153;\n-enum R_PARISC_TPREL21L =       154;\n-enum R_PARISC_TPREL14R =       158;\n-enum R_PARISC_LTOFF_TP21L =    162;\n-enum R_PARISC_LTOFF_TP14R =    166;\n-enum R_PARISC_LTOFF_TP14F =    167;\n-enum R_PARISC_TPREL64 =        216;\n-enum R_PARISC_TPREL14WR =      219;\n-enum R_PARISC_TPREL14DR =      220;\n-enum R_PARISC_TPREL16F =       221;\n-enum R_PARISC_TPREL16WF =      222;\n-enum R_PARISC_TPREL16DF =      223;\n-enum R_PARISC_LTOFF_TP64 =     224;\n-enum R_PARISC_LTOFF_TP14WR =   227;\n-enum R_PARISC_LTOFF_TP14DR =   228;\n-enum R_PARISC_LTOFF_TP16F =    229;\n-enum R_PARISC_LTOFF_TP16WF =   230;\n-enum R_PARISC_LTOFF_TP16DF =   231;\n-enum R_PARISC_GNU_VTENTRY =    232;\n-enum R_PARISC_GNU_VTINHERIT =  233;\n-enum R_PARISC_TLS_GD21L =      234;\n-enum R_PARISC_TLS_GD14R =      235;\n-enum R_PARISC_TLS_GDCALL =     236;\n-enum R_PARISC_TLS_LDM21L =     237;\n-enum R_PARISC_TLS_LDM14R =     238;\n-enum R_PARISC_TLS_LDMCALL =    239;\n-enum R_PARISC_TLS_LDO21L =     240;\n-enum R_PARISC_TLS_LDO14R =     241;\n-enum R_PARISC_TLS_DTPMOD32 =   242;\n-enum R_PARISC_TLS_DTPMOD64 =   243;\n-enum R_PARISC_TLS_DTPOFF32 =   244;\n-enum R_PARISC_TLS_DTPOFF64 =   245;\n-enum R_PARISC_TLS_LE21L =      R_PARISC_TPREL21L;\n-enum R_PARISC_TLS_LE14R =      R_PARISC_TPREL14R;\n-enum R_PARISC_TLS_IE21L =      R_PARISC_LTOFF_TP21L;\n-enum R_PARISC_TLS_IE14R =      R_PARISC_LTOFF_TP14R;\n-enum R_PARISC_TLS_TPREL32 =    R_PARISC_TPREL32;\n-enum R_PARISC_TLS_TPREL64 =    R_PARISC_TPREL64;\n-enum R_PARISC_HIRESERVE =      255;\n-\n-enum PT_HP_TLS =               (PT_LOOS + 0x0);\n-enum PT_HP_CORE_NONE =         (PT_LOOS + 0x1);\n-enum PT_HP_CORE_VERSION =      (PT_LOOS + 0x2);\n-enum PT_HP_CORE_KERNEL =       (PT_LOOS + 0x3);\n-enum PT_HP_CORE_COMM =         (PT_LOOS + 0x4);\n-enum PT_HP_CORE_PROC =         (PT_LOOS + 0x5);\n-enum PT_HP_CORE_LOADABLE =     (PT_LOOS + 0x6);\n-enum PT_HP_CORE_STACK =        (PT_LOOS + 0x7);\n-enum PT_HP_CORE_SHM =          (PT_LOOS + 0x8);\n-enum PT_HP_CORE_MMF =          (PT_LOOS + 0x9);\n-enum PT_HP_PARALLEL =          (PT_LOOS + 0x10);\n-enum PT_HP_FASTBIND =          (PT_LOOS + 0x11);\n-enum PT_HP_OPT_ANNOT =         (PT_LOOS + 0x12);\n-enum PT_HP_HSL_ANNOT =         (PT_LOOS + 0x13);\n-enum PT_HP_STACK =             (PT_LOOS + 0x14);\n-\n-enum PT_PARISC_ARCHEXT =       0x70000000;\n-enum PT_PARISC_UNWIND =        0x70000001;\n-\n-enum PF_PARISC_SBP =           0x08000000;\n-\n-enum PF_HP_PAGE_SIZE =         0x00100000;\n-enum PF_HP_FAR_SHARED =        0x00200000;\n-enum PF_HP_NEAR_SHARED =       0x00400000;\n-enum PF_HP_CODE =              0x01000000;\n-enum PF_HP_MODIFY =            0x02000000;\n-enum PF_HP_LAZYSWAP =          0x04000000;\n-enum PF_HP_SBP =               0x08000000;\n-\n-enum EF_ALPHA_32BIT =          1;\n-enum EF_ALPHA_CANRELAX =       2;\n-enum SHT_ALPHA_DEBUG =         0x70000001;\n-enum SHT_ALPHA_REGINFO =       0x70000002;\n-\n-enum SHF_ALPHA_GPREL =         0x10000000;\n-enum STO_ALPHA_NOPV =          0x80;\n-enum STO_ALPHA_STD_GPLOAD =    0x88;\n-\n-enum R_ALPHA_NONE =            0;\n-enum R_ALPHA_REFLONG =         1;\n-enum R_ALPHA_REFQUAD =         2;\n-enum R_ALPHA_GPREL32 =         3;\n-enum R_ALPHA_LITERAL =         4;\n-enum R_ALPHA_LITUSE =          5;\n-enum R_ALPHA_GPDISP =          6;\n-enum R_ALPHA_BRADDR =          7;\n-enum R_ALPHA_HINT =            8;\n-enum R_ALPHA_SREL16 =          9;\n-enum R_ALPHA_SREL32 =          10;\n-enum R_ALPHA_SREL64 =          11;\n-enum R_ALPHA_GPRELHIGH =       17;\n-enum R_ALPHA_GPRELLOW =        18;\n-enum R_ALPHA_GPREL16 =         19;\n-enum R_ALPHA_COPY =            24;\n-enum R_ALPHA_GLOB_DAT =        25;\n-enum R_ALPHA_JMP_SLOT =        26;\n-enum R_ALPHA_RELATIVE =        27;\n-enum R_ALPHA_TLS_GD_HI =       28;\n-enum R_ALPHA_TLSGD =           29;\n-enum R_ALPHA_TLS_LDM =         30;\n-enum R_ALPHA_DTPMOD64 =        31;\n-enum R_ALPHA_GOTDTPREL =       32;\n-enum R_ALPHA_DTPREL64 =        33;\n-enum R_ALPHA_DTPRELHI =        34;\n-enum R_ALPHA_DTPRELLO =        35;\n-enum R_ALPHA_DTPREL16 =        36;\n-enum R_ALPHA_GOTTPREL =        37;\n-enum R_ALPHA_TPREL64 =         38;\n-enum R_ALPHA_TPRELHI =         39;\n-enum R_ALPHA_TPRELLO =         40;\n-enum R_ALPHA_TPREL16 =         41;\n-enum R_ALPHA_NUM =             46;\n-enum LITUSE_ALPHA_ADDR =       0;\n-enum LITUSE_ALPHA_BASE =       1;\n-enum LITUSE_ALPHA_BYTOFF =     2;\n-enum LITUSE_ALPHA_JSR =        3;\n-enum LITUSE_ALPHA_TLS_GD =     4;\n-enum LITUSE_ALPHA_TLS_LDM =    5;\n-enum DT_ALPHA_PLTRO =          (DT_LOPROC + 0);\n-enum DT_ALPHA_NUM =            1;\n-enum EF_PPC_EMB =              0x80000000;\n-enum EF_PPC_RELOCATABLE =      0x00010000;\n-enum EF_PPC_RELOCATABLE_LIB =  0x00008000;\n-enum R_PPC_NONE =              0;\n-enum R_PPC_ADDR32 =            1;\n-enum R_PPC_ADDR24 =            2;\n-enum R_PPC_ADDR16 =            3;\n-enum R_PPC_ADDR16_LO =         4;\n-enum R_PPC_ADDR16_HI =         5;\n-enum R_PPC_ADDR16_HA =         6;\n-enum R_PPC_ADDR14 =            7;\n-enum R_PPC_ADDR14_BRTAKEN =    8;\n-enum R_PPC_ADDR14_BRNTAKEN =   9;\n-enum R_PPC_REL24 =             10;\n-enum R_PPC_REL14 =             11;\n-enum R_PPC_REL14_BRTAKEN =     12;\n-enum R_PPC_REL14_BRNTAKEN =    13;\n-enum R_PPC_GOT16 =             14;\n-enum R_PPC_GOT16_LO =          15;\n-enum R_PPC_GOT16_HI =          16;\n-enum R_PPC_GOT16_HA =          17;\n-enum R_PPC_PLTREL24 =          18;\n-enum R_PPC_COPY =              19;\n-enum R_PPC_GLOB_DAT =          20;\n-enum R_PPC_JMP_SLOT =          21;\n-enum R_PPC_RELATIVE =          22;\n-enum R_PPC_LOCAL24PC =         23;\n-enum R_PPC_UADDR32 =           24;\n-enum R_PPC_UADDR16 =           25;\n-enum R_PPC_REL32 =             26;\n-enum R_PPC_PLT32 =             27;\n-enum R_PPC_PLTREL32 =          28;\n-enum R_PPC_PLT16_LO =          29;\n-enum R_PPC_PLT16_HI =          30;\n-enum R_PPC_PLT16_HA =          31;\n-enum R_PPC_SDAREL16 =          32;\n-enum R_PPC_SECTOFF =           33;\n-enum R_PPC_SECTOFF_LO =        34;\n-enum R_PPC_SECTOFF_HI =        35;\n-enum R_PPC_SECTOFF_HA =        36;\n-enum R_PPC_TLS =               67;\n-enum R_PPC_DTPMOD32 =          68;\n-enum R_PPC_TPREL16 =           69;\n-enum R_PPC_TPREL16_LO =        70;\n-enum R_PPC_TPREL16_HI =        71;\n-enum R_PPC_TPREL16_HA =        72;\n-enum R_PPC_TPREL32 =           73;\n-enum R_PPC_DTPREL16 =          74;\n-enum R_PPC_DTPREL16_LO =       75;\n-enum R_PPC_DTPREL16_HI =       76;\n-enum R_PPC_DTPREL16_HA =       77;\n-enum R_PPC_DTPREL32 =          78;\n-enum R_PPC_GOT_TLSGD16 =       79;\n-enum R_PPC_GOT_TLSGD16_LO =    80;\n-enum R_PPC_GOT_TLSGD16_HI =    81;\n-enum R_PPC_GOT_TLSGD16_HA =    82;\n-enum R_PPC_GOT_TLSLD16 =       83;\n-enum R_PPC_GOT_TLSLD16_LO =    84;\n-enum R_PPC_GOT_TLSLD16_HI =    85;\n-enum R_PPC_GOT_TLSLD16_HA =    86;\n-enum R_PPC_GOT_TPREL16 =       87;\n-enum R_PPC_GOT_TPREL16_LO =    88;\n-enum R_PPC_GOT_TPREL16_HI =    89;\n-enum R_PPC_GOT_TPREL16_HA =    90;\n-enum R_PPC_GOT_DTPREL16 =      91;\n-enum R_PPC_GOT_DTPREL16_LO =   92;\n-enum R_PPC_GOT_DTPREL16_HI =   93;\n-enum R_PPC_GOT_DTPREL16_HA =   94;\n-enum R_PPC_EMB_NADDR32 =       101;\n-enum R_PPC_EMB_NADDR16 =       102;\n-enum R_PPC_EMB_NADDR16_LO =    103;\n-enum R_PPC_EMB_NADDR16_HI =    104;\n-enum R_PPC_EMB_NADDR16_HA =    105;\n-enum R_PPC_EMB_SDAI16 =        106;\n-enum R_PPC_EMB_SDA2I16 =       107;\n-enum R_PPC_EMB_SDA2REL =       108;\n-enum R_PPC_EMB_SDA21 =         109;\n-enum R_PPC_EMB_MRKREF =        110;\n-enum R_PPC_EMB_RELSEC16 =      111;\n-enum R_PPC_EMB_RELST_LO =      112;\n-enum R_PPC_EMB_RELST_HI =      113;\n-enum R_PPC_EMB_RELST_HA =      114;\n-enum R_PPC_EMB_BIT_FLD =       115;\n-enum R_PPC_EMB_RELSDA =        116;\n-enum R_PPC_DIAB_SDA21_LO =     180;\n-enum R_PPC_DIAB_SDA21_HI =     181;\n-enum R_PPC_DIAB_SDA21_HA =     182;\n-enum R_PPC_DIAB_RELSDA_LO =    183;\n-enum R_PPC_DIAB_RELSDA_HI =    184;\n-enum R_PPC_DIAB_RELSDA_HA =    185;\n-enum R_PPC_IRELATIVE =         248;\n-enum R_PPC_REL16 =             249;\n-enum R_PPC_REL16_LO =          250;\n-enum R_PPC_REL16_HI =          251;\n-enum R_PPC_REL16_HA =          252;\n-enum R_PPC_TOC16 =             255;\n-enum DT_PPC_GOT =              (DT_LOPROC + 0);\n-enum DT_PPC_NUM =              1;\n-enum R_PPC64_NONE =            R_PPC_NONE;\n-enum R_PPC64_ADDR32 =          R_PPC_ADDR32;\n-enum R_PPC64_ADDR24 =          R_PPC_ADDR24;\n-enum R_PPC64_ADDR16 =          R_PPC_ADDR16;\n-enum R_PPC64_ADDR16_LO =       R_PPC_ADDR16_LO;\n-enum R_PPC64_ADDR16_HI =       R_PPC_ADDR16_HI;\n-enum R_PPC64_ADDR16_HA =       R_PPC_ADDR16_HA;\n-enum R_PPC64_ADDR14 =          R_PPC_ADDR14;\n-enum R_PPC64_ADDR14_BRTAKEN =  R_PPC_ADDR14_BRTAKEN;\n-enum R_PPC64_ADDR14_BRNTAKEN = R_PPC_ADDR14_BRNTAKEN;\n-enum R_PPC64_REL24 =           R_PPC_REL24;\n-enum R_PPC64_REL14 =           R_PPC_REL14;\n-enum R_PPC64_REL14_BRTAKEN =   R_PPC_REL14_BRTAKEN;\n-enum R_PPC64_REL14_BRNTAKEN =  R_PPC_REL14_BRNTAKEN;\n-enum R_PPC64_GOT16 =           R_PPC_GOT16;\n-enum R_PPC64_GOT16_LO =        R_PPC_GOT16_LO;\n-enum R_PPC64_GOT16_HI =        R_PPC_GOT16_HI;\n-enum R_PPC64_GOT16_HA =        R_PPC_GOT16_HA;\n-\n-enum R_PPC64_COPY =            R_PPC_COPY;\n-enum R_PPC64_GLOB_DAT =        R_PPC_GLOB_DAT;\n-enum R_PPC64_JMP_SLOT =        R_PPC_JMP_SLOT;\n-enum R_PPC64_RELATIVE =        R_PPC_RELATIVE;\n-\n-enum R_PPC64_UADDR32 =         R_PPC_UADDR32;\n-enum R_PPC64_UADDR16 =         R_PPC_UADDR16;\n-enum R_PPC64_REL32 =           R_PPC_REL32;\n-enum R_PPC64_PLT32 =           R_PPC_PLT32;\n-enum R_PPC64_PLTREL32 =        R_PPC_PLTREL32;\n-enum R_PPC64_PLT16_LO =        R_PPC_PLT16_LO;\n-enum R_PPC64_PLT16_HI =        R_PPC_PLT16_HI;\n-enum R_PPC64_PLT16_HA =        R_PPC_PLT16_HA;\n-\n-enum R_PPC64_SECTOFF =         R_PPC_SECTOFF;\n-enum R_PPC64_SECTOFF_LO =      R_PPC_SECTOFF_LO;\n-enum R_PPC64_SECTOFF_HI =      R_PPC_SECTOFF_HI;\n-enum R_PPC64_SECTOFF_HA =      R_PPC_SECTOFF_HA;\n-enum R_PPC64_ADDR30 =          37;\n-enum R_PPC64_ADDR64 =          38;\n-enum R_PPC64_ADDR16_HIGHER =   39;\n-enum R_PPC64_ADDR16_HIGHERA =  40;\n-enum R_PPC64_ADDR16_HIGHEST =  41;\n-enum R_PPC64_ADDR16_HIGHESTA = 42;\n-enum R_PPC64_UADDR64 =         43;\n-enum R_PPC64_REL64 =           44;\n-enum R_PPC64_PLT64 =           45;\n-enum R_PPC64_PLTREL64 =        46;\n-enum R_PPC64_TOC16 =           47;\n-enum R_PPC64_TOC16_LO =        48;\n-enum R_PPC64_TOC16_HI =        49;\n-enum R_PPC64_TOC16_HA =        50;\n-enum R_PPC64_TOC =             51;\n-enum R_PPC64_PLTGOT16 =        52;\n-enum R_PPC64_PLTGOT16_LO =     53;\n-enum R_PPC64_PLTGOT16_HI =     54;\n-enum R_PPC64_PLTGOT16_HA =     55;\n-\n-enum R_PPC64_ADDR16_DS =       56;\n-enum R_PPC64_ADDR16_LO_DS =    57;\n-enum R_PPC64_GOT16_DS =        58;\n-enum R_PPC64_GOT16_LO_DS =     59;\n-enum R_PPC64_PLT16_LO_DS =     60;\n-enum R_PPC64_SECTOFF_DS =      61;\n-enum R_PPC64_SECTOFF_LO_DS =   62;\n-enum R_PPC64_TOC16_DS =        63;\n-enum R_PPC64_TOC16_LO_DS =     64;\n-enum R_PPC64_PLTGOT16_DS =     65;\n-enum R_PPC64_PLTGOT16_LO_DS =  66;\n-enum R_PPC64_TLS =             67;\n-enum R_PPC64_DTPMOD64 =        68;\n-enum R_PPC64_TPREL16 =         69;\n-enum R_PPC64_TPREL16_LO =      70;\n-enum R_PPC64_TPREL16_HI =      71;\n-enum R_PPC64_TPREL16_HA =      72;\n-enum R_PPC64_TPREL64 =         73;\n-enum R_PPC64_DTPREL16 =        74;\n-enum R_PPC64_DTPREL16_LO =     75;\n-enum R_PPC64_DTPREL16_HI =     76;\n-enum R_PPC64_DTPREL16_HA =     77;\n-enum R_PPC64_DTPREL64 =        78;\n-enum R_PPC64_GOT_TLSGD16 =     79;\n-enum R_PPC64_GOT_TLSGD16_LO =  80;\n-enum R_PPC64_GOT_TLSGD16_HI =  81;\n-enum R_PPC64_GOT_TLSGD16_HA =  82;\n-enum R_PPC64_GOT_TLSLD16 =     83;\n-enum R_PPC64_GOT_TLSLD16_LO =  84;\n-enum R_PPC64_GOT_TLSLD16_HI =  85;\n-enum R_PPC64_GOT_TLSLD16_HA =  86;\n-enum R_PPC64_GOT_TPREL16_DS =  87;\n-enum R_PPC64_GOT_TPREL16_LO_DS = 88;\n-enum R_PPC64_GOT_TPREL16_HI =  89;\n-enum R_PPC64_GOT_TPREL16_HA =  90;\n-enum R_PPC64_GOT_DTPREL16_DS = 91;\n-enum R_PPC64_GOT_DTPREL16_LO_DS = 92;\n-enum R_PPC64_GOT_DTPREL16_HI = 93;\n-enum R_PPC64_GOT_DTPREL16_HA = 94;\n-enum R_PPC64_TPREL16_DS =      95;\n-enum R_PPC64_TPREL16_LO_DS =   96;\n-enum R_PPC64_TPREL16_HIGHER =  97;\n-enum R_PPC64_TPREL16_HIGHERA = 98;\n-enum R_PPC64_TPREL16_HIGHEST = 99;\n-enum R_PPC64_TPREL16_HIGHESTA = 100;\n-enum R_PPC64_DTPREL16_DS =     101;\n-enum R_PPC64_DTPREL16_LO_DS =  102;\n-enum R_PPC64_DTPREL16_HIGHER = 103;\n-enum R_PPC64_DTPREL16_HIGHERA = 104;\n-enum R_PPC64_DTPREL16_HIGHEST = 105;\n-enum R_PPC64_DTPREL16_HIGHESTA = 106;\n-enum R_PPC64_JMP_IREL =        247;\n-enum R_PPC64_IRELATIVE =       248;\n-enum R_PPC64_REL16 =           249;\n-enum R_PPC64_REL16_LO =        250;\n-enum R_PPC64_REL16_HI =        251;\n-enum R_PPC64_REL16_HA =        252;\n-enum DT_PPC64_GLINK =  (DT_LOPROC + 0);\n-enum DT_PPC64_OPD =    (DT_LOPROC + 1);\n-enum DT_PPC64_OPDSZ =  (DT_LOPROC + 2);\n-enum DT_PPC64_NUM =    3;\n-enum EF_ARM_RELEXEC =          0x01;\n-enum EF_ARM_HASENTRY =         0x02;\n-enum EF_ARM_INTERWORK =        0x04;\n-enum EF_ARM_APCS_26 =          0x08;\n-enum EF_ARM_APCS_FLOAT =       0x10;\n-enum EF_ARM_PIC =              0x20;\n-enum EF_ARM_ALIGN8 =           0x40;\n-enum EF_ARM_NEW_ABI =          0x80;\n-enum EF_ARM_OLD_ABI =          0x100;\n-enum EF_ARM_SOFT_FLOAT =       0x200;\n-enum EF_ARM_VFP_FLOAT =        0x400;\n-enum EF_ARM_MAVERICK_FLOAT =   0x800;\n-\n-enum EF_ARM_ABI_FLOAT_SOFT =   0x200;\n-enum EF_ARM_ABI_FLOAT_HARD =   0x400;\n-enum EF_ARM_SYMSARESORTED =    0x04;\n-enum EF_ARM_DYNSYMSUSESEGIDX = 0x08;\n-enum EF_ARM_MAPSYMSFIRST =     0x10;\n-enum EF_ARM_EABIMASK =         0XFF000000;\n-enum EF_ARM_BE8 =          0x00800000;\n-enum EF_ARM_LE8 =          0x00400000;\n-\n-extern (D) auto EF_ARM_EABI_VERSION(F)(F flags) { return flags & EF_ARM_EABIMASK; }\n-enum EF_ARM_EABI_UNKNOWN =     0x00000000;\n-enum EF_ARM_EABI_VER1 =        0x01000000;\n-enum EF_ARM_EABI_VER2 =        0x02000000;\n-enum EF_ARM_EABI_VER3 =        0x03000000;\n-enum EF_ARM_EABI_VER4 =        0x04000000;\n-enum EF_ARM_EABI_VER5 =        0x05000000;\n-enum STT_ARM_TFUNC =           STT_LOPROC;\n-enum STT_ARM_16BIT =           STT_HIPROC;\n-enum SHF_ARM_ENTRYSECT =       0x10000000;\n-enum SHF_ARM_COMDEF =          0x80000000;\n-enum PF_ARM_SB =               0x10000000;\n-enum PF_ARM_PI =               0x20000000;\n-enum PF_ARM_ABS =              0x40000000;\n-enum PT_ARM_EXIDX =            (PT_LOPROC + 1);\n-enum SHT_ARM_EXIDX =           (SHT_LOPROC + 1);\n-enum SHT_ARM_PREEMPTMAP =      (SHT_LOPROC + 2);\n-enum SHT_ARM_ATTRIBUTES =      (SHT_LOPROC + 3);\n-\n-enum R_AARCH64_NONE =            0;\n-enum R_AARCH64_ABS64 =         257;\n-enum R_AARCH64_ABS32 =         258;\n-enum R_AARCH64_COPY =         1024;\n-enum R_AARCH64_GLOB_DAT =     1025;\n-enum R_AARCH64_JUMP_SLOT =    1026;\n-enum R_AARCH64_RELATIVE =     1027;\n-enum R_AARCH64_TLS_DTPMOD64 = 1028;\n-enum R_AARCH64_TLS_DTPREL64 = 1029;\n-enum R_AARCH64_TLS_TPREL64 =  1030;\n-enum R_AARCH64_TLSDESC =      1031;\n-\n-enum R_ARM_NONE =              0;\n-enum R_ARM_PC24 =              1;\n-enum R_ARM_ABS32 =             2;\n-enum R_ARM_REL32 =             3;\n-enum R_ARM_PC13 =              4;\n-enum R_ARM_ABS16 =             5;\n-enum R_ARM_ABS12 =             6;\n-enum R_ARM_THM_ABS5 =          7;\n-enum R_ARM_ABS8 =              8;\n-enum R_ARM_SBREL32 =           9;\n-enum R_ARM_THM_PC22 =          10;\n-enum R_ARM_THM_PC8 =           11;\n-enum R_ARM_AMP_VCALL9 =        12;\n-enum R_ARM_SWI24 =             13;\n-enum R_ARM_TLS_DESC =          13;\n-enum R_ARM_THM_SWI8 =          14;\n-enum R_ARM_XPC25 =             15;\n-enum R_ARM_THM_XPC22 =         16;\n-enum R_ARM_TLS_DTPMOD32 =      17;\n-enum R_ARM_TLS_DTPOFF32 =      18;\n-enum R_ARM_TLS_TPOFF32 =       19;\n-enum R_ARM_COPY =              20;\n-enum R_ARM_GLOB_DAT =          21;\n-enum R_ARM_JUMP_SLOT =         22;\n-enum R_ARM_RELATIVE =          23;\n-enum R_ARM_GOTOFF =            24;\n-enum R_ARM_GOTPC =             25;\n-enum R_ARM_GOT32 =             26;\n-enum R_ARM_PLT32 =             27;\n-enum R_ARM_ALU_PCREL_7_0 =     32;\n-enum R_ARM_ALU_PCREL_15_8 =    33;\n-enum R_ARM_ALU_PCREL_23_15 =   34;\n-enum R_ARM_LDR_SBREL_11_0 =    35;\n-enum R_ARM_ALU_SBREL_19_12 =   36;\n-enum R_ARM_ALU_SBREL_27_20 =   37;\n-enum R_ARM_TLS_GOTDESC =       90;\n-enum R_ARM_TLS_CALL =          91;\n-enum R_ARM_TLS_DESCSEQ =       92;\n-enum R_ARM_THM_TLS_CALL =      93;\n-enum R_ARM_GNU_VTENTRY =       100;\n-enum R_ARM_GNU_VTINHERIT =     101;\n-enum R_ARM_THM_PC11 =          102;\n-enum R_ARM_THM_PC9 =           103;\n-enum R_ARM_TLS_GD32 =          104;\n-enum R_ARM_TLS_LDM32 =         105;\n-enum R_ARM_TLS_LDO32 =         106;\n-enum R_ARM_TLS_IE32 =          107;\n-enum R_ARM_TLS_LE32 =          108;\n-enum R_ARM_THM_TLS_DESCSEQ =   129;\n-enum R_ARM_IRELATIVE =         160;\n-enum R_ARM_RXPC25 =            249;\n-enum R_ARM_RSBREL32 =          250;\n-enum R_ARM_THM_RPC22 =         251;\n-enum R_ARM_RREL32 =            252;\n-enum R_ARM_RABS22 =            253;\n-enum R_ARM_RPC24 =             254;\n-enum R_ARM_RBASE =             255;\n-enum R_ARM_NUM =               256;\n-enum EF_IA_64_MASKOS =         0x0000000f;\n-enum EF_IA_64_ABI64 =          0x00000010;\n-enum EF_IA_64_ARCH =           0xff000000;\n-enum PT_IA_64_ARCHEXT =        (PT_LOPROC + 0);\n-enum PT_IA_64_UNWIND =         (PT_LOPROC + 1);\n-enum PT_IA_64_HP_OPT_ANOT =    (PT_LOOS + 0x12);\n-enum PT_IA_64_HP_HSL_ANOT =    (PT_LOOS + 0x13);\n-enum PT_IA_64_HP_STACK =       (PT_LOOS + 0x14);\n-enum PF_IA_64_NORECOV =        0x80000000;\n-enum SHT_IA_64_EXT =           (SHT_LOPROC + 0);\n-enum SHT_IA_64_UNWIND =        (SHT_LOPROC + 1);\n-enum SHF_IA_64_SHORT =         0x10000000;\n-enum SHF_IA_64_NORECOV =       0x20000000;\n-enum DT_IA_64_PLT_RESERVE =    (DT_LOPROC + 0);\n-enum DT_IA_64_NUM =            1;\n-enum R_IA64_NONE =             0x00;\n-enum R_IA64_IMM14 =            0x21;\n-enum R_IA64_IMM22 =            0x22;\n-enum R_IA64_IMM64 =            0x23;\n-enum R_IA64_DIR32MSB =         0x24;\n-enum R_IA64_DIR32LSB =         0x25;\n-enum R_IA64_DIR64MSB =         0x26;\n-enum R_IA64_DIR64LSB =         0x27;\n-enum R_IA64_GPREL22 =          0x2a;\n-enum R_IA64_GPREL64I =         0x2b;\n-enum R_IA64_GPREL32MSB =       0x2c;\n-enum R_IA64_GPREL32LSB =       0x2d;\n-enum R_IA64_GPREL64MSB =       0x2e;\n-enum R_IA64_GPREL64LSB =       0x2f;\n-enum R_IA64_LTOFF22 =          0x32;\n-enum R_IA64_LTOFF64I =         0x33;\n-enum R_IA64_PLTOFF22 =         0x3a;\n-enum R_IA64_PLTOFF64I =        0x3b;\n-enum R_IA64_PLTOFF64MSB =      0x3e;\n-enum R_IA64_PLTOFF64LSB =      0x3f;\n-enum R_IA64_FPTR64I =          0x43;\n-enum R_IA64_FPTR32MSB =        0x44;\n-enum R_IA64_FPTR32LSB =        0x45;\n-enum R_IA64_FPTR64MSB =        0x46;\n-enum R_IA64_FPTR64LSB =        0x47;\n-enum R_IA64_PCREL60B =         0x48;\n-enum R_IA64_PCREL21B =         0x49;\n-enum R_IA64_PCREL21M =         0x4a;\n-enum R_IA64_PCREL21F =         0x4b;\n-enum R_IA64_PCREL32MSB =       0x4c;\n-enum R_IA64_PCREL32LSB =       0x4d;\n-enum R_IA64_PCREL64MSB =       0x4e;\n-enum R_IA64_PCREL64LSB =       0x4f;\n-enum R_IA64_LTOFF_FPTR22 =     0x52;\n-enum R_IA64_LTOFF_FPTR64I =    0x53;\n-enum R_IA64_LTOFF_FPTR32MSB =  0x54;\n-enum R_IA64_LTOFF_FPTR32LSB =  0x55;\n-enum R_IA64_LTOFF_FPTR64MSB =  0x56;\n-enum R_IA64_LTOFF_FPTR64LSB =  0x57;\n-enum R_IA64_SEGREL32MSB =      0x5c;\n-enum R_IA64_SEGREL32LSB =      0x5d;\n-enum R_IA64_SEGREL64MSB =      0x5e;\n-enum R_IA64_SEGREL64LSB =      0x5f;\n-enum R_IA64_SECREL32MSB =      0x64;\n-enum R_IA64_SECREL32LSB =      0x65;\n-enum R_IA64_SECREL64MSB =      0x66;\n-enum R_IA64_SECREL64LSB =      0x67;\n-enum R_IA64_REL32MSB =         0x6c;\n-enum R_IA64_REL32LSB =         0x6d;\n-enum R_IA64_REL64MSB =         0x6e;\n-enum R_IA64_REL64LSB =         0x6f;\n-enum R_IA64_LTV32MSB =         0x74;\n-enum R_IA64_LTV32LSB =         0x75;\n-enum R_IA64_LTV64MSB =         0x76;\n-enum R_IA64_LTV64LSB =         0x77;\n-enum R_IA64_PCREL21BI =        0x79;\n-enum R_IA64_PCREL22 =          0x7a;\n-enum R_IA64_PCREL64I =         0x7b;\n-enum R_IA64_IPLTMSB =          0x80;\n-enum R_IA64_IPLTLSB =          0x81;\n-enum R_IA64_COPY =             0x84;\n-enum R_IA64_SUB =              0x85;\n-enum R_IA64_LTOFF22X =         0x86;\n-enum R_IA64_LDXMOV =           0x87;\n-enum R_IA64_TPREL14 =          0x91;\n-enum R_IA64_TPREL22 =          0x92;\n-enum R_IA64_TPREL64I =         0x93;\n-enum R_IA64_TPREL64MSB =       0x96;\n-enum R_IA64_TPREL64LSB =       0x97;\n-enum R_IA64_LTOFF_TPREL22 =    0x9a;\n-enum R_IA64_DTPMOD64MSB =      0xa6;\n-enum R_IA64_DTPMOD64LSB =      0xa7;\n-enum R_IA64_LTOFF_DTPMOD22 =   0xaa;\n-enum R_IA64_DTPREL14 =         0xb1;\n-enum R_IA64_DTPREL22 =         0xb2;\n-enum R_IA64_DTPREL64I =        0xb3;\n-enum R_IA64_DTPREL32MSB =      0xb4;\n-enum R_IA64_DTPREL32LSB =      0xb5;\n-enum R_IA64_DTPREL64MSB =      0xb6;\n-enum R_IA64_DTPREL64LSB =      0xb7;\n-enum R_IA64_LTOFF_DTPREL22 =   0xba;\n-enum EF_SH_MACH_MASK =         0x1f;\n-enum EF_SH_UNKNOWN =           0x0;\n-enum EF_SH1 =                  0x1;\n-enum EF_SH2 =                  0x2;\n-enum EF_SH3 =                  0x3;\n-enum EF_SH_DSP =               0x4;\n-enum EF_SH3_DSP =              0x5;\n-enum EF_SH4AL_DSP =            0x6;\n-enum EF_SH3E =                 0x8;\n-enum EF_SH4 =                  0x9;\n-enum EF_SH2E =                 0xb;\n-enum EF_SH4A =                 0xc;\n-enum EF_SH2A =                 0xd;\n-enum EF_SH4_NOFPU =            0x10;\n-enum EF_SH4A_NOFPU =           0x11;\n-enum EF_SH4_NOMMU_NOFPU =      0x12;\n-enum EF_SH2A_NOFPU =           0x13;\n-enum EF_SH3_NOMMU =            0x14;\n-enum EF_SH2A_SH4_NOFPU =       0x15;\n-enum EF_SH2A_SH3_NOFPU =       0x16;\n-enum EF_SH2A_SH4 =             0x17;\n-enum EF_SH2A_SH3E =            0x18;\n-enum R_SH_NONE =               0;\n-enum R_SH_DIR32 =              1;\n-enum R_SH_REL32 =              2;\n-enum R_SH_DIR8WPN =            3;\n-enum R_SH_IND12W =             4;\n-enum R_SH_DIR8WPL =            5;\n-enum R_SH_DIR8WPZ =            6;\n-enum R_SH_DIR8BP =             7;\n-enum R_SH_DIR8W =              8;\n-enum R_SH_DIR8L =              9;\n-enum R_SH_SWITCH16 =           25;\n-enum R_SH_SWITCH32 =           26;\n-enum R_SH_USES =               27;\n-enum R_SH_COUNT =              28;\n-enum R_SH_ALIGN =              29;\n-enum R_SH_CODE =               30;\n-enum R_SH_DATA =               31;\n-enum R_SH_LABEL =              32;\n-enum R_SH_SWITCH8 =            33;\n-enum R_SH_GNU_VTINHERIT =      34;\n-enum R_SH_GNU_VTENTRY =        35;\n-enum R_SH_TLS_GD_32 =          144;\n-enum R_SH_TLS_LD_32 =          145;\n-enum R_SH_TLS_LDO_32 =         146;\n-enum R_SH_TLS_IE_32 =          147;\n-enum R_SH_TLS_LE_32 =          148;\n-enum R_SH_TLS_DTPMOD32 =       149;\n-enum R_SH_TLS_DTPOFF32 =       150;\n-enum R_SH_TLS_TPOFF32 =        151;\n-enum R_SH_GOT32 =              160;\n-enum R_SH_PLT32 =              161;\n-enum R_SH_COPY =               162;\n-enum R_SH_GLOB_DAT =           163;\n-enum R_SH_JMP_SLOT =           164;\n-enum R_SH_RELATIVE =           165;\n-enum R_SH_GOTOFF =             166;\n-enum R_SH_GOTPC =              167;\n-enum R_SH_NUM =                256;\n-\n-enum EF_S390_HIGH_GPRS =    0x00000001;\n-\n-enum R_390_NONE =              0;\n-enum R_390_8 =                 1;\n-enum R_390_12 =                2;\n-enum R_390_16 =                3;\n-enum R_390_32 =                4;\n-enum R_390_PC32 =              5;\n-enum R_390_GOT12 =             6;\n-enum R_390_GOT32 =             7;\n-enum R_390_PLT32 =             8;\n-enum R_390_COPY =              9;\n-enum R_390_GLOB_DAT =          10;\n-enum R_390_JMP_SLOT =          11;\n-enum R_390_RELATIVE =          12;\n-enum R_390_GOTOFF32 =          13;\n-enum R_390_GOTPC =             14;\n-enum R_390_GOT16 =             15;\n-enum R_390_PC16 =              16;\n-enum R_390_PC16DBL =           17;\n-enum R_390_PLT16DBL =          18;\n-enum R_390_PC32DBL =           19;\n-enum R_390_PLT32DBL =          20;\n-enum R_390_GOTPCDBL =          21;\n-enum R_390_64 =                22;\n-enum R_390_PC64 =              23;\n-enum R_390_GOT64 =             24;\n-enum R_390_PLT64 =             25;\n-enum R_390_GOTENT =            26;\n-enum R_390_GOTOFF16 =          27;\n-enum R_390_GOTOFF64 =          28;\n-enum R_390_GOTPLT12 =          29;\n-enum R_390_GOTPLT16 =          30;\n-enum R_390_GOTPLT32 =          31;\n-enum R_390_GOTPLT64 =          32;\n-enum R_390_GOTPLTENT =         33;\n-enum R_390_PLTOFF16 =          34;\n-enum R_390_PLTOFF32 =          35;\n-enum R_390_PLTOFF64 =          36;\n-enum R_390_TLS_LOAD =          37;\n-enum R_390_TLS_GDCALL =        38;\n-enum R_390_TLS_LDCALL =        39;\n-enum R_390_TLS_GD32 =          40;\n-enum R_390_TLS_GD64 =          41;\n-enum R_390_TLS_GOTIE12 =       42;\n-enum R_390_TLS_GOTIE32 =       43;\n-enum R_390_TLS_GOTIE64 =       44;\n-enum R_390_TLS_LDM32 =         45;\n-enum R_390_TLS_LDM64 =         46;\n-enum R_390_TLS_IE32 =          47;\n-enum R_390_TLS_IE64 =          48;\n-enum R_390_TLS_IEENT =         49;\n-enum R_390_TLS_LE32 =          50;\n-enum R_390_TLS_LE64 =          51;\n-enum R_390_TLS_LDO32 =         52;\n-enum R_390_TLS_LDO64 =         53;\n-enum R_390_TLS_DTPMOD =        54;\n-enum R_390_TLS_DTPOFF =        55;\n-enum R_390_TLS_TPOFF =         56;\n-enum R_390_20 =                57;\n-enum R_390_GOT20 =             58;\n-enum R_390_GOTPLT20 =          59;\n-enum R_390_TLS_GOTIE20 =       60;\n-enum R_390_IRELATIVE =         61;\n-enum R_390_NUM =               62;\n-enum R_CRIS_NONE =             0;\n-enum R_CRIS_8 =                1;\n-enum R_CRIS_16 =               2;\n-enum R_CRIS_32 =               3;\n-enum R_CRIS_8_PCREL =          4;\n-enum R_CRIS_16_PCREL =         5;\n-enum R_CRIS_32_PCREL =         6;\n-enum R_CRIS_GNU_VTINHERIT =    7;\n-enum R_CRIS_GNU_VTENTRY =      8;\n-enum R_CRIS_COPY =             9;\n-enum R_CRIS_GLOB_DAT =         10;\n-enum R_CRIS_JUMP_SLOT =        11;\n-enum R_CRIS_RELATIVE =         12;\n-enum R_CRIS_16_GOT =           13;\n-enum R_CRIS_32_GOT =           14;\n-enum R_CRIS_16_GOTPLT =        15;\n-enum R_CRIS_32_GOTPLT =        16;\n-enum R_CRIS_32_GOTREL =        17;\n-enum R_CRIS_32_PLT_GOTREL =    18;\n-enum R_CRIS_32_PLT_PCREL =     19;\n-\n-enum R_CRIS_NUM =              20;\n-enum R_X86_64_NONE =           0;\n-enum R_X86_64_64 =             1;\n-enum R_X86_64_PC32 =           2;\n-enum R_X86_64_GOT32 =          3;\n-enum R_X86_64_PLT32 =          4;\n-enum R_X86_64_COPY =           5;\n-enum R_X86_64_GLOB_DAT =       6;\n-enum R_X86_64_JUMP_SLOT =      7;\n-enum R_X86_64_RELATIVE =       8;\n-enum R_X86_64_GOTPCREL =       9;\n-enum R_X86_64_32 =             10;\n-enum R_X86_64_32S =            11;\n-enum R_X86_64_16 =             12;\n-enum R_X86_64_PC16 =           13;\n-enum R_X86_64_8 =              14;\n-enum R_X86_64_PC8 =            15;\n-enum R_X86_64_DTPMOD64 =       16;\n-enum R_X86_64_DTPOFF64 =       17;\n-enum R_X86_64_TPOFF64 =        18;\n-enum R_X86_64_TLSGD =          19;\n-enum R_X86_64_TLSLD =          20;\n-enum R_X86_64_DTPOFF32 =       21;\n-enum R_X86_64_GOTTPOFF =       22;\n-enum R_X86_64_TPOFF32 =        23;\n-enum R_X86_64_PC64 =           24;\n-enum R_X86_64_GOTOFF64 =       25;\n-enum R_X86_64_GOTPC32 =        26;\n-enum R_X86_64_GOT64 =          27;\n-enum R_X86_64_GOTPCREL64 =     28;\n-enum R_X86_64_GOTPC64 =        29;\n-enum R_X86_64_GOTPLT64 =       30;\n-enum R_X86_64_PLTOFF64 =       31;\n-enum R_X86_64_SIZE32 =         32;\n-enum R_X86_64_SIZE64 =         33;\n-enum R_X86_64_GOTPC32_TLSDESC = 34;\n-enum R_X86_64_TLSDESC_CALL =   35;\n-enum R_X86_64_TLSDESC =        36;\n-enum R_X86_64_IRELATIVE =      37;\n-enum R_X86_64_RELATIVE64 =     38;\n-\n-enum R_X86_64_NUM =            39;\n-enum R_MN10300_NONE =          0;\n-enum R_MN10300_32 =            1;\n-enum R_MN10300_16 =            2;\n-enum R_MN10300_8 =             3;\n-enum R_MN10300_PCREL32 =       4;\n-enum R_MN10300_PCREL16 =       5;\n-enum R_MN10300_PCREL8 =        6;\n-enum R_MN10300_GNU_VTINHERIT = 7;\n-enum R_MN10300_GNU_VTENTRY =   8;\n-enum R_MN10300_24 =            9;\n-enum R_MN10300_GOTPC32 =       10;\n-enum R_MN10300_GOTPC16 =       11;\n-enum R_MN10300_GOTOFF32 =      12;\n-enum R_MN10300_GOTOFF24 =      13;\n-enum R_MN10300_GOTOFF16 =      14;\n-enum R_MN10300_PLT32 =         15;\n-enum R_MN10300_PLT16 =         16;\n-enum R_MN10300_GOT32 =         17;\n-enum R_MN10300_GOT24 =         18;\n-enum R_MN10300_GOT16 =         19;\n-enum R_MN10300_COPY =          20;\n-enum R_MN10300_GLOB_DAT =      21;\n-enum R_MN10300_JMP_SLOT =      22;\n-enum R_MN10300_RELATIVE =      23;\n-enum R_MN10300_TLS_GD =        24;\n-enum R_MN10300_TLS_LD =        25;\n-enum R_MN10300_TLS_LDO =       26;\n-enum R_MN10300_TLS_GOTIE =     27;\n-enum R_MN10300_TLS_IE =        28;\n-enum R_MN10300_TLS_LE =        29;\n-enum R_MN10300_TLS_DTPMOD =    30;\n-enum R_MN10300_TLS_DTPOFF =    31;\n-enum R_MN10300_TLS_TPOFF =     32;\n-enum R_MN10300_SYM_DIFF =      33;\n-enum R_MN10300_ALIGN =         34;\n-enum R_MN10300_NUM =           35;\n-enum R_M32R_NONE =             0;\n-enum R_M32R_16 =               1;\n-enum R_M32R_32 =               2;\n-enum R_M32R_24 =               3;\n-enum R_M32R_10_PCREL =         4;\n-enum R_M32R_18_PCREL =         5;\n-enum R_M32R_26_PCREL =         6;\n-enum R_M32R_HI16_ULO =         7;\n-enum R_M32R_HI16_SLO =         8;\n-enum R_M32R_LO16 =             9;\n-enum R_M32R_SDA16 =            10;\n-enum R_M32R_GNU_VTINHERIT =    11;\n-enum R_M32R_GNU_VTENTRY =      12;\n-enum R_M32R_16_RELA =          33;\n-enum R_M32R_32_RELA =          34;\n-enum R_M32R_24_RELA =          35;\n-enum R_M32R_10_PCREL_RELA =    36;\n-enum R_M32R_18_PCREL_RELA =    37;\n-enum R_M32R_26_PCREL_RELA =    38;\n-enum R_M32R_HI16_ULO_RELA =    39;\n-enum R_M32R_HI16_SLO_RELA =    40;\n-enum R_M32R_LO16_RELA =        41;\n-enum R_M32R_SDA16_RELA =       42;\n-enum R_M32R_RELA_GNU_VTINHERIT =       43;\n-enum R_M32R_RELA_GNU_VTENTRY = 44;\n-enum R_M32R_REL32 =            45;\n-\n-enum R_M32R_GOT24 =            48;\n-enum R_M32R_26_PLTREL =        49;\n-enum R_M32R_COPY =             50;\n-enum R_M32R_GLOB_DAT =         51;\n-enum R_M32R_JMP_SLOT =         52;\n-enum R_M32R_RELATIVE =         53;\n-enum R_M32R_GOTOFF =           54;\n-enum R_M32R_GOTPC24 =          55;\n-enum R_M32R_GOT16_HI_ULO =     56;\n-enum R_M32R_GOT16_HI_SLO =     57;\n-enum R_M32R_GOT16_LO =         58;\n-enum R_M32R_GOTPC_HI_ULO =     59;\n-enum R_M32R_GOTPC_HI_SLO =     60;\n-enum R_M32R_GOTPC_LO =         61;\n-enum R_M32R_GOTOFF_HI_ULO =    62;\n-enum R_M32R_GOTOFF_HI_SLO =    63;\n-enum R_M32R_GOTOFF_LO =        64;\n-enum R_M32R_NUM =              256;\n-enum R_TILEPRO_NONE =          0;\n-enum R_TILEPRO_32 =            1;\n-enum R_TILEPRO_16 =            2;\n-enum R_TILEPRO_8 =             3;\n-enum R_TILEPRO_32_PCREL =      4;\n-enum R_TILEPRO_16_PCREL =      5;\n-enum R_TILEPRO_8_PCREL =       6;\n-enum R_TILEPRO_LO16 =          7;\n-enum R_TILEPRO_HI16 =          8;\n-enum R_TILEPRO_HA16 =          9;\n-enum R_TILEPRO_COPY =          10;\n-enum R_TILEPRO_GLOB_DAT =      11;\n-enum R_TILEPRO_JMP_SLOT =      12;\n-enum R_TILEPRO_RELATIVE =      13;\n-enum R_TILEPRO_BROFF_X1 =      14;\n-enum R_TILEPRO_JOFFLONG_X1 =   15;\n-enum R_TILEPRO_JOFFLONG_X1_PLT = 16;\n-enum R_TILEPRO_IMM8_X0 =       17;\n-enum R_TILEPRO_IMM8_Y0 =       18;\n-enum R_TILEPRO_IMM8_X1 =       19;\n-enum R_TILEPRO_IMM8_Y1 =       20;\n-enum R_TILEPRO_MT_IMM15_X1 =   21;\n-enum R_TILEPRO_MF_IMM15_X1 =   22;\n-enum R_TILEPRO_IMM16_X0 =      23;\n-enum R_TILEPRO_IMM16_X1 =      24;\n-enum R_TILEPRO_IMM16_X0_LO =   25;\n-enum R_TILEPRO_IMM16_X1_LO =   26;\n-enum R_TILEPRO_IMM16_X0_HI =   27;\n-enum R_TILEPRO_IMM16_X1_HI =   28;\n-enum R_TILEPRO_IMM16_X0_HA =   29;\n-enum R_TILEPRO_IMM16_X1_HA =   30;\n-enum R_TILEPRO_IMM16_X0_PCREL = 31;\n-enum R_TILEPRO_IMM16_X1_PCREL = 32;\n-enum R_TILEPRO_IMM16_X0_LO_PCREL = 33;\n-enum R_TILEPRO_IMM16_X1_LO_PCREL = 34;\n-enum R_TILEPRO_IMM16_X0_HI_PCREL = 35;\n-enum R_TILEPRO_IMM16_X1_HI_PCREL = 36;\n-enum R_TILEPRO_IMM16_X0_HA_PCREL = 37;\n-enum R_TILEPRO_IMM16_X1_HA_PCREL = 38;\n-enum R_TILEPRO_IMM16_X0_GOT =  39;\n-enum R_TILEPRO_IMM16_X1_GOT =  40;\n-enum R_TILEPRO_IMM16_X0_GOT_LO = 41;\n-enum R_TILEPRO_IMM16_X1_GOT_LO = 42;\n-enum R_TILEPRO_IMM16_X0_GOT_HI = 43;\n-enum R_TILEPRO_IMM16_X1_GOT_HI = 44;\n-enum R_TILEPRO_IMM16_X0_GOT_HA = 45;\n-enum R_TILEPRO_IMM16_X1_GOT_HA = 46;\n-enum R_TILEPRO_MMSTART_X0 =    47;\n-enum R_TILEPRO_MMEND_X0 =      48;\n-enum R_TILEPRO_MMSTART_X1 =    49;\n-enum R_TILEPRO_MMEND_X1 =      50;\n-enum R_TILEPRO_SHAMT_X0 =      51;\n-enum R_TILEPRO_SHAMT_X1 =      52;\n-enum R_TILEPRO_SHAMT_Y0 =      53;\n-enum R_TILEPRO_SHAMT_Y1 =      54;\n-enum R_TILEPRO_DEST_IMM8_X1 =  55;\n-enum R_TILEPRO_TLS_GD_CALL =   60;\n-enum R_TILEPRO_IMM8_X0_TLS_GD_ADD = 61;\n-enum R_TILEPRO_IMM8_X1_TLS_GD_ADD = 62;\n-enum R_TILEPRO_IMM8_Y0_TLS_GD_ADD = 63;\n-enum R_TILEPRO_IMM8_Y1_TLS_GD_ADD = 64;\n-enum R_TILEPRO_TLS_IE_LOAD =   65;\n-enum R_TILEPRO_IMM16_X0_TLS_GD = 66;\n-enum R_TILEPRO_IMM16_X1_TLS_GD = 67;\n-enum R_TILEPRO_IMM16_X0_TLS_GD_LO = 68;\n-enum R_TILEPRO_IMM16_X1_TLS_GD_LO = 69;\n-enum R_TILEPRO_IMM16_X0_TLS_GD_HI = 70;\n-enum R_TILEPRO_IMM16_X1_TLS_GD_HI = 71;\n-enum R_TILEPRO_IMM16_X0_TLS_GD_HA = 72;\n-enum R_TILEPRO_IMM16_X1_TLS_GD_HA = 73;\n-enum R_TILEPRO_IMM16_X0_TLS_IE = 74;\n-enum R_TILEPRO_IMM16_X1_TLS_IE = 75;\n-enum R_TILEPRO_IMM16_X0_TLS_IE_LO = 76;\n-enum R_TILEPRO_IMM16_X1_TLS_IE_LO = 77;\n-enum R_TILEPRO_IMM16_X0_TLS_IE_HI = 78;\n-enum R_TILEPRO_IMM16_X1_TLS_IE_HI = 79;\n-enum R_TILEPRO_IMM16_X0_TLS_IE_HA = 80;\n-enum R_TILEPRO_IMM16_X1_TLS_IE_HA = 81;\n-enum R_TILEPRO_TLS_DTPMOD32 =  82;\n-enum R_TILEPRO_TLS_DTPOFF32 =  83;\n-enum R_TILEPRO_TLS_TPOFF32 =   84;\n-enum R_TILEPRO_IMM16_X0_TLS_LE = 85;\n-enum R_TILEPRO_IMM16_X1_TLS_LE = 86;\n-enum R_TILEPRO_IMM16_X0_TLS_LE_LO = 87;\n-enum R_TILEPRO_IMM16_X1_TLS_LE_LO = 88;\n-enum R_TILEPRO_IMM16_X0_TLS_LE_HI = 89;\n-enum R_TILEPRO_IMM16_X1_TLS_LE_HI = 90;\n-enum R_TILEPRO_IMM16_X0_TLS_LE_HA = 91;\n-enum R_TILEPRO_IMM16_X1_TLS_LE_HA = 92;\n-\n-enum R_TILEPRO_GNU_VTINHERIT = 128;\n-enum R_TILEPRO_GNU_VTENTRY =   129;\n-\n-enum R_TILEPRO_NUM =           130;\n-enum R_TILEGX_NONE =           0;\n-enum R_TILEGX_64 =             1;\n-enum R_TILEGX_32 =             2;\n-enum R_TILEGX_16 =             3;\n-enum R_TILEGX_8 =              4;\n-enum R_TILEGX_64_PCREL =       5;\n-enum R_TILEGX_32_PCREL =       6;\n-enum R_TILEGX_16_PCREL =       7;\n-enum R_TILEGX_8_PCREL =        8;\n-enum R_TILEGX_HW0 =            9;\n-enum R_TILEGX_HW1 =            10;\n-enum R_TILEGX_HW2 =            11;\n-enum R_TILEGX_HW3 =            12;\n-enum R_TILEGX_HW0_LAST =       13;\n-enum R_TILEGX_HW1_LAST =       14;\n-enum R_TILEGX_HW2_LAST =       15;\n-enum R_TILEGX_COPY =           16;\n-enum R_TILEGX_GLOB_DAT =       17;\n-enum R_TILEGX_JMP_SLOT =       18;\n-enum R_TILEGX_RELATIVE =       19;\n-enum R_TILEGX_BROFF_X1 =       20;\n-enum R_TILEGX_JUMPOFF_X1 =     21;\n-enum R_TILEGX_JUMPOFF_X1_PLT = 22;\n-enum R_TILEGX_IMM8_X0 =        23;\n-enum R_TILEGX_IMM8_Y0 =        24;\n-enum R_TILEGX_IMM8_X1 =        25;\n-enum R_TILEGX_IMM8_Y1 =        26;\n-enum R_TILEGX_DEST_IMM8_X1 =   27;\n-enum R_TILEGX_MT_IMM14_X1 =    28;\n-enum R_TILEGX_MF_IMM14_X1 =    29;\n-enum R_TILEGX_MMSTART_X0 =     30;\n-enum R_TILEGX_MMEND_X0 =       31;\n-enum R_TILEGX_SHAMT_X0 =       32;\n-enum R_TILEGX_SHAMT_X1 =       33;\n-enum R_TILEGX_SHAMT_Y0 =       34;\n-enum R_TILEGX_SHAMT_Y1 =       35;\n-enum R_TILEGX_IMM16_X0_HW0 =   36;\n-enum R_TILEGX_IMM16_X1_HW0 =   37;\n-enum R_TILEGX_IMM16_X0_HW1 =   38;\n-enum R_TILEGX_IMM16_X1_HW1 =   39;\n-enum R_TILEGX_IMM16_X0_HW2 =   40;\n-enum R_TILEGX_IMM16_X1_HW2 =   41;\n-enum R_TILEGX_IMM16_X0_HW3 =   42;\n-enum R_TILEGX_IMM16_X1_HW3 =   43;\n-enum R_TILEGX_IMM16_X0_HW0_LAST = 44;\n-enum R_TILEGX_IMM16_X1_HW0_LAST = 45;\n-enum R_TILEGX_IMM16_X0_HW1_LAST = 46;\n-enum R_TILEGX_IMM16_X1_HW1_LAST = 47;\n-enum R_TILEGX_IMM16_X0_HW2_LAST = 48;\n-enum R_TILEGX_IMM16_X1_HW2_LAST = 49;\n-enum R_TILEGX_IMM16_X0_HW0_PCREL = 50;\n-enum R_TILEGX_IMM16_X1_HW0_PCREL = 51;\n-enum R_TILEGX_IMM16_X0_HW1_PCREL = 52;\n-enum R_TILEGX_IMM16_X1_HW1_PCREL = 53;\n-enum R_TILEGX_IMM16_X0_HW2_PCREL = 54;\n-enum R_TILEGX_IMM16_X1_HW2_PCREL = 55;\n-enum R_TILEGX_IMM16_X0_HW3_PCREL = 56;\n-enum R_TILEGX_IMM16_X1_HW3_PCREL = 57;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_PCREL = 58;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_PCREL = 59;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_PCREL = 60;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_PCREL = 61;\n-enum R_TILEGX_IMM16_X0_HW2_LAST_PCREL = 62;\n-enum R_TILEGX_IMM16_X1_HW2_LAST_PCREL = 63;\n-enum R_TILEGX_IMM16_X0_HW0_GOT = 64;\n-enum R_TILEGX_IMM16_X1_HW0_GOT = 65;\n-enum R_TILEGX_IMM16_X0_HW0_PLT_PCREL = 66;\n-enum R_TILEGX_IMM16_X1_HW0_PLT_PCREL = 67;\n-enum R_TILEGX_IMM16_X0_HW1_PLT_PCREL = 68;\n-enum R_TILEGX_IMM16_X1_HW1_PLT_PCREL = 69;\n-enum R_TILEGX_IMM16_X0_HW2_PLT_PCREL = 70;\n-enum R_TILEGX_IMM16_X1_HW2_PLT_PCREL = 71;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_GOT = 72;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_GOT = 73;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_GOT = 74;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_GOT = 75;\n-enum R_TILEGX_IMM16_X0_HW3_PLT_PCREL = 76;\n-enum R_TILEGX_IMM16_X1_HW3_PLT_PCREL = 77;\n-enum R_TILEGX_IMM16_X0_HW0_TLS_GD = 78;\n-enum R_TILEGX_IMM16_X1_HW0_TLS_GD = 79;\n-enum R_TILEGX_IMM16_X0_HW0_TLS_LE = 80;\n-enum R_TILEGX_IMM16_X1_HW0_TLS_LE = 81;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE = 82;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE = 83;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE = 84;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE = 85;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD = 86;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD = 87;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD = 88;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD = 89;\n-enum R_TILEGX_IMM16_X0_HW0_TLS_IE = 92;\n-enum R_TILEGX_IMM16_X1_HW0_TLS_IE = 93;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL = 94;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL = 95;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL = 96;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL = 97;\n-enum R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL = 98;\n-enum R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL = 99;\n-enum R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE = 100;\n-enum R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE = 101;\n-enum R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE = 102;\n-enum R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE = 103;\n-enum R_TILEGX_TLS_DTPMOD64 =   106;\n-enum R_TILEGX_TLS_DTPOFF64 =   107;\n-enum R_TILEGX_TLS_TPOFF64 =    108;\n-enum R_TILEGX_TLS_DTPMOD32 =   109;\n-enum R_TILEGX_TLS_DTPOFF32 =   110;\n-enum R_TILEGX_TLS_TPOFF32 =    111;\n-enum R_TILEGX_TLS_GD_CALL =    112;\n-enum R_TILEGX_IMM8_X0_TLS_GD_ADD = 113;\n-enum R_TILEGX_IMM8_X1_TLS_GD_ADD = 114;\n-enum R_TILEGX_IMM8_Y0_TLS_GD_ADD = 115;\n-enum R_TILEGX_IMM8_Y1_TLS_GD_ADD = 116;\n-enum R_TILEGX_TLS_IE_LOAD =    117;\n-enum R_TILEGX_IMM8_X0_TLS_ADD = 118;\n-enum R_TILEGX_IMM8_X1_TLS_ADD = 119;\n-enum R_TILEGX_IMM8_Y0_TLS_ADD = 120;\n-enum R_TILEGX_IMM8_Y1_TLS_ADD = 121;\n-\n-enum R_TILEGX_GNU_VTINHERIT =  128;\n-enum R_TILEGX_GNU_VTENTRY =    129;\n-\n-enum R_TILEGX_NUM =            130;"}, {"sha": "ce7d8bade3f122924273fac08ec133d7b6e74d2d", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/elf32.d", "status": "modified", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf32.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,108 +13,13 @@ nothrow:\n import core.stdc.stdint;\n public import core.sys.netbsd.sys.elf_common;\n \n-alias uint16_t Elf32_Half;\n-alias uint32_t Elf32_Word;\n-alias int32_t  Elf32_Sword;\n alias uint64_t Elf32_Lword;\n-alias uint32_t Elf32_Addr;\n-alias uint32_t Elf32_Off;\n alias Elf32_Word Elf32_Hashelt;\n alias Elf32_Word Elf32_Size;\n alias Elf32_Sword Elf32_Ssize;\n \n-struct Elf32_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf32_Half    e_type;\n-    Elf32_Half    e_machine;\n-    Elf32_Word    e_version;\n-    Elf32_Addr    e_entry;\n-    Elf32_Off     e_phoff;\n-    Elf32_Off     e_shoff;\n-    Elf32_Word    e_flags;\n-    Elf32_Half    e_ehsize;\n-    Elf32_Half    e_phentsize;\n-    Elf32_Half    e_phnum;\n-    Elf32_Half    e_shentsize;\n-    Elf32_Half    e_shnum;\n-    Elf32_Half    e_shstrndx;\n-}\n-\n-struct Elf32_Shdr\n-{\n-    Elf32_Word    sh_name;\n-    Elf32_Word    sh_type;\n-    Elf32_Word    sh_flags;\n-    Elf32_Addr    sh_addr;\n-    Elf32_Off     sh_offset;\n-    Elf32_Word    sh_size;\n-    Elf32_Word    sh_link;\n-    Elf32_Word    sh_info;\n-    Elf32_Word    sh_addralign;\n-    Elf32_Word    sh_entsize;\n-}\n-\n-struct Elf32_Phdr\n-{\n-    Elf32_Word    p_type;\n-    Elf32_Off     p_offset;\n-    Elf32_Addr    p_vaddr;\n-    Elf32_Addr    p_paddr;\n-    Elf32_Word    p_filesz;\n-    Elf32_Word    p_memsz;\n-    Elf32_Word    p_flags;\n-    Elf32_Word    p_align;\n-}\n-\n-struct Elf32_Dyn\n-{\n-  Elf32_Sword   d_tag;\n-  union _d_un\n-  {\n-      Elf32_Word d_val;\n-      Elf32_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf32_Rel\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-}\n-\n-struct Elf32_Rela\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-    Elf32_Sword   r_addend;\n-}\n-\n-extern (D)\n-{\n-    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n-    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n-    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n-}\n-\n alias Elf_Note Elf32_Nhdr;\n \n-struct Elf32_Move\n-{\n-    Elf32_Lword   m_value;\n-    Elf32_Word    m_info;\n-    Elf32_Word    m_poffset;\n-    Elf32_Half    m_repeat;\n-    Elf32_Half    m_stride;\n-}\n-\n-extern (D)\n-{\n-    auto ELF32_M_SYM(I)(I info) { return info >> 8; }\n-    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf32_Cap\n {\n     Elf32_Word    c_tag;\n@@ -125,63 +30,7 @@ struct Elf32_Cap\n     } _c_un c_un;\n }\n \n-struct Elf32_Sym\n-{\n-    Elf32_Word    st_name;\n-    Elf32_Addr    st_value;\n-    Elf32_Word    st_size;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf32_Half st_shndx;\n-}\n-\n extern (D)\n {\n-    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF32_ST_TYPE(T)(T val) { return val & 0xf; }\n-    auto ELF32_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n     auto ELF32_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }\n-\n-struct Elf32_Verdef\n-{\n-    Elf32_Half    vd_version;\n-    Elf32_Half    vd_flags;\n-    Elf32_Half    vd_ndx;\n-    Elf32_Half    vd_cnt;\n-    Elf32_Word    vd_hash;\n-    Elf32_Word    vd_aux;\n-    Elf32_Word    vd_next;\n-}\n-\n-struct Elf32_Verdaux\n-{\n-    Elf32_Word    vda_name;\n-    Elf32_Word    vda_next;\n-}\n-\n-struct Elf32_Verneed\n-{\n-    Elf32_Half    vn_version;\n-    Elf32_Half    vn_cnt;\n-    Elf32_Word    vn_file;\n-    Elf32_Word    vn_aux;\n-    Elf32_Word    vn_next;\n-}\n-\n-struct Elf32_Vernaux\n-{\n-    Elf32_Word    vna_hash;\n-    Elf32_Half    vna_flags;\n-    Elf32_Half    vna_other;\n-    Elf32_Word    vna_name;\n-    Elf32_Word    vna_next;\n-}\n-\n-alias Elf32_Half Elf32_Versym;\n-\n-struct Elf32_Syminfo\n-{\n-    Elf32_Half si_boundto;\n-    Elf32_Half si_flags;\n-}"}, {"sha": "7fa9a8b4de4dd35e7b40426ad53d5a4126171586", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/elf64.d", "status": "modified", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf64.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -13,114 +13,20 @@ nothrow:\n import core.stdc.stdint;\n public import core.sys.netbsd.sys.elf_common;\n \n-alias uint16_t Elf64_Half;\n-alias uint32_t Elf64_Word;\n-alias int32_t  Elf64_Sword;\n alias uint64_t Elf64_Lword;\n-alias uint64_t Elf64_Xword;\n-alias int64_t  Elf64_Sxword;\n-alias uint64_t Elf64_Addr;\n-alias uint64_t Elf64_Off;\n alias Elf64_Word Elf64_Hashelt;\n alias Elf64_Xword Elf64_Size;\n alias Elf64_Sxword Elf64_Ssize;\n \n-struct Elf64_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf64_Half    e_type;\n-    Elf64_Half    e_machine;\n-    Elf64_Word    e_version;\n-    Elf64_Addr    e_entry;\n-    Elf64_Off     e_phoff;\n-    Elf64_Off     e_shoff;\n-    Elf64_Word    e_flags;\n-    Elf64_Half    e_ehsize;\n-    Elf64_Half    e_phentsize;\n-    Elf64_Half    e_phnum;\n-    Elf64_Half    e_shentsize;\n-    Elf64_Half    e_shnum;\n-    Elf64_Half    e_shstrndx;\n-}\n-\n-struct Elf64_Shdr\n-{\n-    Elf64_Word    sh_name;\n-    Elf64_Word    sh_type;\n-    Elf64_Xword   sh_flags;\n-    Elf64_Addr    sh_addr;\n-    Elf64_Off     sh_offset;\n-    Elf64_Xword   sh_size;\n-    Elf64_Word    sh_link;\n-    Elf64_Word    sh_info;\n-    Elf64_Xword   sh_addralign;\n-    Elf64_Xword   sh_entsize;\n-}\n-\n-struct Elf64_Phdr\n-{\n-    Elf64_Word    p_type;\n-    Elf64_Word    p_flags;\n-    Elf64_Off     p_offset;\n-    Elf64_Addr    p_vaddr;\n-    Elf64_Addr    p_paddr;\n-    Elf64_Xword   p_filesz;\n-    Elf64_Xword   p_memsz;\n-    Elf64_Xword   p_align;\n-}\n-\n-struct Elf64_Dyn\n-{\n-  Elf64_Sxword  d_tag;\n-  union _d_un\n-  {\n-      Elf64_Xword d_val;\n-      Elf64_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf64_Rel\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-}\n-\n-struct Elf64_Rela\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-    Elf64_Sxword  r_addend;\n-}\n-\n extern (D)\n {\n-    auto ELF64_R_SYM(I)(I i) { return i >> 32; }\n-    auto ELF64_R_TYPE(I)(I i) { return i & 0xffffffff; }\n-    auto ELF64_R_INFO(S, T)(S sym, T type) { return (sym << 32) + (type & 0xffffffff); }\n-\n     auto ELF64_R_TYPE_DATA(I)(I i) { return (cast(Elf64_Xword) i << 32) >> 40; }\n     auto ELF64_R_TYPE_ID(I)(I i) { return (cast(Elf64_Xword) i << 56 ) >> 56; }\n     auto ELF64_R_TYPE_INFO(D, T)(D d, T t) { return cast(Elf64_Xword) d << 8 + cast(Elf64_Xword) t; }\n }\n \n alias Elf_Note Elf64_Nhdr;\n \n-struct Elf64_Move\n-{\n-    Elf64_Lword   m_value;\n-    Elf64_Xword   m_info;\n-    Elf64_Xword   m_poffset;\n-    Elf64_Half    m_repeat;\n-    Elf64_Half    m_stride;\n-}\n-\n-extern (D)\n-{\n-    auto ELF64_M_SYM(I)(I info) { return info >> 8; }\n-    auto ELF64_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF64_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf64_Cap\n {\n     Elf64_Xword   c_tag;\n@@ -131,63 +37,7 @@ struct Elf64_Cap\n     } _c_un c_un;\n }\n \n-struct Elf64_Sym\n-{\n-    Elf64_Word    st_name;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf64_Half st_shndx;\n-    Elf64_Addr    st_value;\n-    Elf64_Xword   st_size;\n-}\n-\n extern (D)\n {\n-    auto ELF64_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF64_ST_TYPE(T)(T val) { return val & 0xf; }\n-    auto ELF64_ST_INFO(B, T)(B bind, T type) { return (bind << 4) + (type & 0xf); }\n     auto ELF64_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }\n-\n-struct Elf64_Verdef\n-{\n-    Elf64_Half    vd_version;\n-    Elf64_Half    vd_flags;\n-    Elf64_Half    vd_ndx;\n-    Elf64_Half    vd_cnt;\n-    Elf64_Word    vd_hash;\n-    Elf64_Word    vd_aux;\n-    Elf64_Word    vd_next;\n-}\n-\n-struct Elf64_Verdaux\n-{\n-    Elf64_Word    vda_name;\n-    Elf64_Word    vda_next;\n-}\n-\n-struct Elf64_Verneed\n-{\n-    Elf64_Half    vn_version;\n-    Elf64_Half    vn_cnt;\n-    Elf64_Word    vn_file;\n-    Elf64_Word    vn_aux;\n-    Elf64_Word    vn_next;\n-}\n-\n-struct Elf64_Vernaux\n-{\n-    Elf64_Word    vna_hash;\n-    Elf64_Half    vna_flags;\n-    Elf64_Half    vna_other;\n-    Elf64_Word    vna_name;\n-    Elf64_Word    vna_next;\n-}\n-\n-alias Elf64_Half Elf64_Versym;\n-\n-struct Elf64_Syminfo\n-{\n-    Elf64_Half si_boundto;\n-    Elf64_Half si_flags;\n-}"}, {"sha": "6c911bdc6b9c45c76b76795cdd73bcfe384d9966", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/elf_common.d", "status": "modified", "additions": 4, "deletions": 754, "changes": 758, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf_common.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf_common.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Felf_common.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -11,6 +11,7 @@ pure:\n nothrow:\n \n import core.stdc.stdint;\n+public import core.sys.elf;\n \n struct Elf_Note\n {\n@@ -27,58 +28,7 @@ struct Elf_GNU_Hash_Header\n     uint32_t      gh_shift2;\n }\n \n-enum EI_MAG0 =         0;\n-enum EI_MAG1 =         1;\n-enum EI_MAG2 =         2;\n-enum EI_MAG3 =         3;\n-enum EI_CLASS =        4;\n-enum EI_DATA =         5;\n-enum EI_VERSION =      6;\n-enum EI_OSABI =        7;\n-enum EI_ABIVERSION =   8;\n enum OLD_EI_BRAND =    8;\n-enum EI_PAD =          9;\n-enum EI_NIDENT =       16;\n-\n-enum ELFMAG0 =         0x7f;\n-enum ELFMAG1 =         'E';\n-enum ELFMAG2 =         'L';\n-enum ELFMAG3 =         'F';\n-enum ELFMAG =          \"\\177ELF\";\n-enum SELFMAG =         4;\n-\n-enum EV_NONE =         0;\n-enum EV_CURRENT =      1;\n-\n-enum ELFCLASSNONE =    0;\n-enum ELFCLASS32 =      1;\n-enum ELFCLASS64 =      2;\n-\n-enum ELFDATANONE =     0;\n-enum ELFDATA2LSB =     1;\n-enum ELFDATA2MSB =     2;\n-\n-enum ELFOSABI_NONE =           0;\n-enum ELFOSABI_SYSV =           0;\n-enum ELFOSABI_HPUX =           1;\n-enum ELFOSABI_NETBSD =         2;\n-enum ELFOSABI_LINUX =          3;\n-enum ELFOSABI_HURD  =          4;\n-enum ELFOSABI_86OPEN =         5;\n-enum ELFOSABI_SOLARIS =        6;\n-enum ELFOSABI_AIX =            7;\n-enum ELFOSABI_MONTEREY =       7;\n-enum ELFOSABI_IRIX =           8;\n-enum ELFOSABI_FREEBSD =        9;\n-enum ELFOSABI_TRU64 =          10;\n-enum ELFOSABI_MODESTO =        11;\n-enum ELFOSABI_OPENBSD =        12;\n-enum ELFOSABI_OPENVMS =        13;\n-enum ELFOSABI_NSK =            14;\n-enum ELFOSABI_AROS =           15;\n-enum ELFOSABI_ARM =            97;\n-enum ELFOSABI_STANDALONE =     255;\n-enum ELFOSABI_DRAGONFLYBSD =   ELFOSABI_NONE;\n \n extern (D)\n {\n@@ -88,310 +38,31 @@ extern (D)\n                                     ehdr.e_ident[EI_MAG3] == ELFMAG3; }\n }\n \n-enum ET_NONE =         0;\n-enum ET_REL =          1;\n-enum ET_EXEC =         2;\n-enum ET_DYN =          3;\n-enum ET_CORE =         4;\n-enum ET_LOOS =         0xfe00;\n-enum ET_HIOS =         0xfeff;\n-enum ET_LOPROC =       0xff00;\n-enum ET_HIPROC =       0xffff;\n-\n-enum EM_NONE =          0;\n-enum EM_M32 =           1;\n-enum EM_SPARC =         2;\n-enum EM_386 =           3;\n-enum EM_68K =           4;\n-enum EM_88K =           5;\n-enum EM_860 =           7;\n-enum EM_MIPS =          8;\n-enum EM_S370 =          9;\n-enum EM_MIPS_RS3_LE =  10;\n-enum EM_PARISC =       15;\n-enum EM_VPP500 =       17;\n-enum EM_SPARC32PLUS =  18;\n-enum EM_960 =          19;\n-enum EM_PPC =          20;\n-enum EM_PPC64 =        21;\n-enum EM_S390 =         22;\n-enum EM_V800 =         36;\n-enum EM_FR20 =         37;\n-enum EM_RH32 =         38;\n-enum EM_RCE =          39;\n-enum EM_ARM =          40;\n-enum EM_SH =           42;\n-enum EM_SPARCV9 =      43;\n-enum EM_TRICORE =      44;\n-enum EM_ARC =          45;\n-enum EM_H8_300 =       46;\n-enum EM_H8_300H =      47;\n-enum EM_H8S =          48;\n-enum EM_H8_500 =       49;\n-enum EM_IA_64 =        50;\n-enum EM_MIPS_X =       51;\n-enum EM_COLDFIRE =     52;\n-enum EM_68HC12 =       53;\n-enum EM_MMA =          54;\n-enum EM_PCP =          55;\n-enum EM_NCPU =         56;\n-enum EM_NDR1 =         57;\n-enum EM_STARCORE =     58;\n-enum EM_ME16 =         59;\n-enum EM_ST100 =        60;\n-enum EM_TINYJ =        61;\n-enum EM_X86_64 =       62;\n-enum EM_AMD64 =        62;\n-enum EM_PDSP =         63;\n-enum EM_FX66 =         66;\n-enum EM_ST9PLUS =      67;\n-enum EM_ST7 =          68;\n-enum EM_68HC16 =       69;\n-enum EM_68HC11 =       70;\n-enum EM_68HC08 =       71;\n-enum EM_68HC05 =       72;\n-enum EM_SVX =          73;\n-enum EM_ST19 =         74;\n-enum EM_VAX =          75;\n-enum EM_CRIS =         76;\n-enum EM_JAVELIN =      77;\n-enum EM_FIREPATH =     78;\n-enum EM_ZSP =          79;\n-enum EM_MMIX =         80;\n-enum EM_HUANY =        81;\n-enum EM_PRISM =        82;\n-enum EM_AVR =          83;\n-enum EM_FR30 =         84;\n-enum EM_D10V =         85;\n-enum EM_D30V =         86;\n-enum EM_V850 =         87;\n-enum EM_M32R =         88;\n-enum EM_MN10300 =      89;\n-enum EM_MN10200 =      90;\n-enum EM_PJ =           91;\n-enum EM_OPENRISC =     92;\n-enum EM_ARC_A5 =       93;\n-enum EM_XTENSA =       94;\n-enum EM_VIDEOCORE =    95;\n-enum EM_TMM_GPP =      96;\n-enum EM_NS32K =        97;\n-enum EM_TPC =          98;\n-enum EM_SNP1K =        99;\n-enum EM_ST200 =       100;\n-enum EM_IP2K =        101;\n-enum EM_MAX =         102;\n-enum EM_CR =          103;\n-enum EM_F2MC16 =      104;\n-enum EM_MSP430 =      105;\n-enum EM_BLACKFIN =    106;\n-enum EM_SE_C33 =      107;\n-enum EM_SEP =         108;\n-enum EM_ARCA =        109;\n-enum EM_UNICORE =     110;\n-enum EM_AARCH64 =     183;     /* AArch64 64-bit ARM microprocessor */\n-\n-/* Unofficial machine types follow */\n-enum EM_AVR32  =       6317;    /* used by NetBSD/avr32 */\n-enum EM_ALPHA_EXP  =  36902;   /* used by NetBSD/alpha; obsolete */\n+enum EM_AVR32  =       6317;\n+enum EM_ALPHA_EXP  =  36902;\n \n enum EM_486 =           6;\n enum EM_MIPS_RS4_BE =  10;\n enum EM_ALPHA_STD =    41;\n-enum EM_ALPHA =    0x9026;\n-\n-enum SHN_UNDEF =       0;\n-enum SHN_LORESERVE =   0xff00;\n-enum SHN_LOPROC =      0xff00;\n-enum SHN_HIPROC =      0xff1f;\n-enum SHN_LOOS =        0xff20;\n-enum SHN_HIOS =        0xff3f;\n-enum SHN_ABS =         0xfff1;\n-enum SHN_COMMON =      0xfff2;\n-enum SHN_XINDEX =      0xffff;\n-enum SHN_HIRESERVE =   0xffff;\n \n-enum SHT_NULL =          0;\n-enum SHT_PROGBITS =      1;\n-enum SHT_SYMTAB =        2;\n-enum SHT_STRTAB =        3;\n-enum SHT_RELA =          4;\n-enum SHT_HASH =          5;\n-enum SHT_DYNAMIC =       6;\n-enum SHT_NOTE =          7;\n-enum SHT_NOBITS =        8;\n-enum SHT_REL =           9;\n-enum SHT_SHLIB =         10;\n-enum SHT_DYNSYM =        11;\n-enum SHT_INIT_ARRAY =    14;\n-enum SHT_FINI_ARRAY =    15;\n-enum SHT_PREINIT_ARRAY = 16;\n-enum SHT_GROUP =         17;\n-enum SHT_SYMTAB_SHNDX =  18;\n-enum SHT_LOOS =          0x60000000;\n-enum SHT_LOSUNW =        0x6ffffff4;\n enum SHT_SUNW_dof =      0x6ffffff4;\n enum SHT_SUNW_cap =      0x6ffffff5;\n enum SHT_SUNW_SIGNATURE = 0x6ffffff6;\n-enum SHT_GNU_HASH =      0x6ffffff6;\n-enum SHT_SUNW_ANNOTATE = 0x6ffffff7;\n-enum SHT_SUNW_DEBUGSTR = 0x6ffffff8;\n-enum SHT_SUNW_DEBUG =    0x6ffffff9;\n-enum SHT_SUNW_move =     0x6ffffffa;\n-enum SHT_SUNW_COMDAT =   0x6ffffffb;\n-enum SHT_SUNW_syminfo =  0x6ffffffc;\n enum SHT_SUNW_verdef =   0x6ffffffd;\n-enum SHT_GNU_verdef =    0x6ffffffd;\n enum SHT_SUNW_verneed =  0x6ffffffe;\n-enum SHT_GNU_verneed =   0x6ffffffe;\n enum SHT_SUNW_versym =   0x6fffffff;\n-enum SHT_GNU_versym =    0x6fffffff;\n-enum SHT_HISUNW =        0x6fffffff;\n-enum SHT_HIOS =          0x6fffffff;\n-enum SHT_LOPROC =        0x70000000;\n-enum SHT_AMD64_UNWIND =  0x70000001;\n-enum SHT_ARM_EXIDX =     0x70000001;\n-enum SHT_ARM_PREEMPTMAP = 0x70000002;\n-enum SHT_ARM_ATTRIBUTES = 0x70000003;\n-enum SHT_ARM_DEBUGOVERLAY = 0x70000004;\n-enum SHT_ARM_OVERLAYSECTION = 0x70000005;\n-enum SHT_MIPS_REGINFO =  0x70000006;\n-enum SHT_MIPS_OPTIONS =  0x7000000d;\n-enum SHT_MIPS_DWARF =    0x7000001e;\n-enum SHT_HIPROC =        0x7fffffff;\n-enum SHT_LOUSER =        0x80000000;\n-enum SHT_HIUSER =        0x8fffffff;\n \n-enum SHF_WRITE =            (1 << 0);\n-enum SHF_ALLOC =            (1 << 1);\n-enum SHF_EXECINSTR =        (1 << 2);\n-enum SHF_MERGE =            (1 << 4);\n-enum SHF_STRINGS =          (1 << 5);\n-enum SHF_INFO_LINK =        (1 << 6);\n-enum SHF_LINK_ORDER =       (1 << 7);\n-enum SHF_OS_NONCONFORMING = (1 << 8);\n-enum SHF_GROUP =            (1 << 9);\n-enum SHF_TLS =              (1 << 10);\n-enum SHF_MASKOS =           0x0ff00000;\n-enum SHF_MASKPROC =         0xf0000000;\n-\n-enum PT_NULL =         0;\n-enum PT_LOAD =         1;\n-enum PT_DYNAMIC =      2;\n-enum PT_INTERP =       3;\n-enum PT_NOTE =         4;\n-enum PT_SHLIB =        5;\n-enum PT_PHDR =         6;\n-enum PT_TLS =          7;\n-enum PT_LOOS =         0x60000000;\n-enum PT_SUNW_UNWIND =  0x6464e550;\n-enum PT_GNU_EH_FRAME = 0x6474e550;\n-enum PT_GNU_STACK =    0x6474e551;\n-enum PT_GNU_RELRO =    0x6474e552;\n-enum PT_LOSUNW =       0x6ffffffa;\n-enum PT_SUNWBSS =      0x6ffffffa;\n-enum PT_SUNWSTACK =    0x6ffffffb;\n enum PT_SUNWDTRACE =   0x6ffffffc;\n enum PT_SUNWCAP =      0x6ffffffd;\n-enum PT_HISUNW =       0x6fffffff;\n-enum PT_HIOS =         0x6fffffff;\n-enum PT_LOPROC =       0x70000000;\n-enum PT_HIPROC =       0x7fffffff;\n-\n-enum PF_X =            (1 << 0);\n-enum PF_W =            (1 << 1);\n-enum PF_R =            (1 << 2);\n-enum PF_MASKOS =       0x0ff00000;\n-enum PF_MASKPROC =     0xf0000000;\n-\n-enum PN_XNUM =         0xffff;\n-\n-enum DT_NULL =         0;\n-enum DT_NEEDED =       1;\n-enum DT_PLTRELSZ =     2;\n-enum DT_PLTGOT =       3;\n-enum DT_HASH =         4;\n-enum DT_STRTAB =       5;\n-enum DT_SYMTAB =       6;\n-enum DT_RELA =         7;\n-enum DT_RELASZ =       8;\n-enum DT_RELAENT =      9;\n-enum DT_STRSZ =        10;\n-enum DT_SYMENT =       11;\n-enum DT_INIT =         12;\n-enum DT_FINI =         13;\n-enum DT_SONAME =       14;\n-enum DT_RPATH =        15;\n-enum DT_SYMBOLIC =     16;\n-enum DT_REL =          17;\n-enum DT_RELSZ =        18;\n-enum DT_RELENT =       19;\n-enum DT_PLTREL =       20;\n-enum DT_DEBUG =        21;\n-enum DT_TEXTREL =      22;\n-enum DT_JMPREL =       23;\n-enum DT_BIND_NOW =     24;\n-enum DT_INIT_ARRAY =   25;\n-enum DT_FINI_ARRAY =   26;\n-enum DT_INIT_ARRAYSZ = 27;\n-enum DT_FINI_ARRAYSZ = 28;\n-enum DT_RUNPATH =      29;\n-enum DT_FLAGS =        30;\n-enum DT_ENCODING =     32;\n-enum DT_PREINIT_ARRAY = 32;\n-enum DT_PREINIT_ARRAYSZ = 33;\n enum DT_MAXPOSTAGS =   34;\n-enum DT_LOOS =         0x6000000d;\n enum DT_SUNW_AUXILIARY = 0x6000000d;\n enum DT_SUNW_RTLDINF = 0x6000000e;\n enum DT_SUNW_FILTER =  0x6000000f;\n enum DT_SUNW_CAP =     0x60000010;\n-enum DT_HIOS =         0x6ffff000;\n-enum DT_VALRNGLO =     0x6ffffd00;\n-enum DT_CHECKSUM =     0x6ffffdf8;\n-enum DT_PLTPADSZ =     0x6ffffdf9;\n-enum DT_MOVEENT =      0x6ffffdfa;\n-enum DT_MOVESZ =       0x6ffffdfb;\n-enum DT_FEATURE_1 =    0x6ffffdfc;\n-enum DT_POSFLAG_1 =    0x6ffffdfd;\n-enum DT_SYMINSZ =      0x6ffffdfe;\n-enum DT_SYMINENT =     0x6ffffdff;\n-enum DT_VALRNGHI =     0x6ffffdff;\n-enum DT_ADDRRNGLO =    0x6ffffe00;\n-enum DT_GNU_HASH =     0x6ffffef5;\n-enum DT_CONFIG =       0x6ffffefa;\n-enum DT_DEPAUDIT =     0x6ffffefb;\n-enum DT_AUDIT =        0x6ffffefc;\n-enum DT_PLTPAD =       0x6ffffefd;\n-enum DT_MOVETAB =      0x6ffffefe;\n-enum DT_SYMINFO =      0x6ffffeff;\n-enum DT_ADDRRNGHI =    0x6ffffeff;\n-enum DT_VERSYM =       0x6ffffff0;\n-enum DT_RELACOUNT =    0x6ffffff9;\n-enum DT_RELCOUNT =     0x6ffffffa;\n-enum DT_FLAGS_1 =      0x6ffffffb;\n-enum DT_VERDEF =       0x6ffffffc;\n-enum DT_VERDEFNUM =    0x6ffffffd;\n-enum DT_VERNEED =      0x6ffffffe;\n-enum DT_VERNEEDNUM =   0x6fffffff;\n-enum DT_LOPROC =       0x70000000;\n enum DT_DEPRECATED_SPARC_REGISTER = 0x7000001;\n-enum DT_AUXILIARY =    0x7ffffffd;\n enum DT_USED =         0x7ffffffe;\n-enum DT_FILTER =       0x7fffffff;\n-enum DT_HIPROC =       0x7fffffff;\n-\n-enum DF_ORIGIN =       0x00000001;\n-enum DF_SYMBOLIC =     0x00000002;\n-enum DF_TEXTREL =      0x00000004;\n-enum DF_BIND_NOW =     0x00000008;\n-enum DF_STATIC_TLS =   0x00000010;\n \n enum DF_1_BIND_NOW =   0x00000001;\n-enum DF_1_GLOBAL =     0x00000002;\n-enum DF_1_NODELETE =   0x00000008;\n-enum DF_1_LOADFLTR =   0x00000010;\n-enum DF_1_NOOPEN =     0x00000040;\n-enum DF_1_NODEFLIB =   0x00000800;\n \n enum NT_PRSTATUS =     1;\n enum NT_FPREGSET =     2;\n@@ -407,55 +78,19 @@ enum NT_PROCSTAT_OSREL = 14;\n enum NT_PROCSTAT_PSSTRINGS = 15;\n enum NT_PROCSTAT_AUXV = 16;\n \n-enum STB_LOCAL =       0;\n-enum STB_GLOBAL =      1;\n-enum STB_WEAK =        2;\n-enum STB_NUM =         3;\n-enum STB_LOOS =        10;\n-enum STB_HIOS =        12;\n-enum STB_LOPROC =      13;\n-enum STB_HIPROC =      15;\n-\n-enum STT_NOTYPE =      0;\n-enum STT_OBJECT =      1;\n-enum STT_FUNC =        2;\n-enum STT_SECTION =     3;\n-enum STT_FILE =        4;\n-enum STT_COMMON =      5;\n-enum STT_TLS =         6;\n-enum STT_NUM =         7;\n-enum STT_LOOS =        10;\n-enum STT_GNU_IFUNC =   10;\n-enum STT_HIOS =        12;\n-enum STT_LOPROC =      13;\n-enum STT_HIPROC =      15;\n-\n-enum STV_DEFAULT =     0;\n-enum STV_INTERNAL =    1;\n-enum STV_HIDDEN =      2;\n-enum STV_PROTECTED =   3;\n enum STV_EXPORTED =    4;\n enum STV_SINGLETON =   5;\n enum STV_ELIMINATE =   6;\n \n-enum STN_UNDEF =       0;\n-\n-enum VER_DEF_CURRENT = 1;\n alias VER_NDX VER_DEF_IDX;\n \n-enum VER_FLG_BASE =    0x1;\n-enum VER_FLG_WEAK =    0x2;\n-\n-enum VER_NEED_CURRENT = 1;\n enum VER_NEED_WEAK =    32768;\n enum VER_NEED_HIDDEN = VER_NDX_HIDDEN;\n alias VER_NDX VER_NEED_IDX;\n \n-enum VER_NDX_LOCAL =           0;\n-enum VER_NDX_GLOBAL =          1;\n enum VER_NDX_GIVEN =           2;\n-\n enum VER_NDX_HIDDEN =      32768;\n+\n extern (D)\n {\n     auto VER_NDX(V)(V v) { return v & ~(1u << 15); }\n@@ -465,395 +100,10 @@ enum CA_SUNW_NULL =    0;\n enum CA_SUNW_HW_1 =    1;\n enum CA_SUNW_SF_1 =    2;\n \n-enum SYMINFO_FLG_DIRECT =      0x0001;\n-enum SYMINFO_FLG_PASSTHRU =    0x0002;\n-enum SYMINFO_FLG_COPY =        0x0004;\n-enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n enum SYMINFO_FLG_DIRECTBIND =  0x0010;\n enum SYMINFO_FLG_NOEXTDIRECT = 0x0020;\n enum SYMINFO_FLG_FILTER =      0x0002;\n enum SYMINFO_FLG_AUXILIARY =   0x0040;\n \n-enum SYMINFO_BT_SELF =         0xffff;\n-enum SYMINFO_BT_PARENT =       0xfffe;\n enum SYMINFO_BT_NONE =         0xfffd;\n enum SYMINFO_BT_EXTERN =       0xfffc;\n-enum SYMINFO_BT_LOWRESERVE =   0xff00;\n-\n-enum SYMINFO_NONE =            0;\n-enum SYMINFO_CURRENT =         1;\n-enum SYMINFO_NUM =             2;\n-\n-enum R_386_NONE =               0;\n-enum R_386_32 =                 1;\n-enum R_386_PC32 =               2;\n-enum R_386_GOT32 =              3;\n-enum R_386_PLT32 =              4;\n-enum R_386_COPY =               5;\n-enum R_386_GLOB_DAT =           6;\n-enum R_386_JMP_SLOT =           7;\n-enum R_386_RELATIVE =           8;\n-enum R_386_GOTOFF =             9;\n-enum R_386_GOTPC =              10;\n-enum R_386_TLS_TPOFF =          14;\n-enum R_386_TLS_IE =             15;\n-enum R_386_TLS_GOTIE =          16;\n-enum R_386_TLS_LE =             17;\n-enum R_386_TLS_GD =             18;\n-enum R_386_TLS_LDM =            19;\n-enum R_386_TLS_GD_32 =          24;\n-enum R_386_TLS_GD_PUSH =        25;\n-enum R_386_TLS_GD_CALL =        26;\n-enum R_386_TLS_GD_POP =         27;\n-enum R_386_TLS_LDM_32 =         28;\n-enum R_386_TLS_LDM_PUSH =       29;\n-enum R_386_TLS_LDM_CALL =       30;\n-enum R_386_TLS_LDM_POP =        31;\n-enum R_386_TLS_LDO_32 =         32;\n-enum R_386_TLS_IE_32 =          33;\n-enum R_386_TLS_LE_32 =          34;\n-enum R_386_TLS_DTPMOD32 =       35;\n-enum R_386_TLS_DTPOFF32 =       36;\n-enum R_386_TLS_TPOFF32 =        37;\n-enum R_386_IRELATIVE =          42;\n-\n-enum R_ARM_NONE =               0;\n-enum R_ARM_PC24 =               1;\n-enum R_ARM_ABS32 =              2;\n-enum R_ARM_REL32 =              3;\n-enum R_ARM_PC13 =               4;\n-enum R_ARM_ABS16 =              5;\n-enum R_ARM_ABS12 =              6;\n-enum R_ARM_THM_ABS5 =           7;\n-enum R_ARM_ABS8 =               8;\n-enum R_ARM_SBREL32 =            9;\n-enum R_ARM_THM_PC22 =           10;\n-enum R_ARM_THM_PC8 =            11;\n-enum R_ARM_AMP_VCALL9 =         12;\n-enum R_ARM_SWI24 =              13;\n-enum R_ARM_THM_SWI8 =           14;\n-enum R_ARM_XPC25 =              15;\n-enum R_ARM_THM_XPC22 =          16;\n-enum R_ARM_TLS_DTPMOD32 =       17;\n-enum R_ARM_TLS_DTPOFF32 =       18;\n-enum R_ARM_TLS_TPOFF32 =        19;\n-enum R_ARM_COPY =               20;\n-enum R_ARM_GLOB_DAT =           21;\n-enum R_ARM_JUMP_SLOT =          22;\n-enum R_ARM_RELATIVE =           23;\n-enum R_ARM_GOTOFF =             24;\n-enum R_ARM_GOTPC =              25;\n-enum R_ARM_GOT32 =              26;\n-enum R_ARM_PLT32 =              27;\n-enum R_ARM_GNU_VTENTRY =        100;\n-enum R_ARM_GNU_VTINHERIT =      101;\n-enum R_ARM_RSBREL32 =           250;\n-enum R_ARM_THM_RPC22 =          251;\n-enum R_ARM_RREL32 =             252;\n-enum R_ARM_RABS32 =             253;\n-enum R_ARM_RPC24 =              254;\n-enum R_ARM_RBASE =              255;\n-\n-enum R_IA_64_NONE =             0;\n-enum R_IA_64_IMM14 =            0x21;\n-enum R_IA_64_IMM22 =            0x22;\n-enum R_IA_64_IMM64 =            0x23;\n-enum R_IA_64_DIR32MSB =         0x24;\n-enum R_IA_64_DIR32LSB =         0x25;\n-enum R_IA_64_DIR64MSB =         0x26;\n-enum R_IA_64_DIR64LSB =         0x27;\n-enum R_IA_64_GPREL22 =          0x2a;\n-enum R_IA_64_GPREL64I =         0x2b;\n-enum R_IA_64_GPREL32MSB =       0x2c;\n-enum R_IA_64_GPREL32LSB =       0x2d;\n-enum R_IA_64_GPREL64MSB =       0x2e;\n-enum R_IA_64_GPREL64LSB =       0x2f;\n-enum R_IA_64_LTOFF22 =          0x32;\n-enum R_IA_64_LTOFF64I =         0x33;\n-enum R_IA_64_PLTOFF22 =         0x3a;\n-enum R_IA_64_PLTOFF64I =        0x3b;\n-enum R_IA_64_PLTOFF64MSB =      0x3e;\n-enum R_IA_64_PLTOFF64LSB =      0x3f;\n-enum R_IA_64_FPTR64I =          0x43;\n-enum R_IA_64_FPTR32MSB =        0x44;\n-enum R_IA_64_FPTR32LSB =        0x45;\n-enum R_IA_64_FPTR64MSB =        0x46;\n-enum R_IA_64_FPTR64LSB =        0x47;\n-enum R_IA_64_PCREL60B =         0x48;\n-enum R_IA_64_PCREL21B =         0x49;\n-enum R_IA_64_PCREL21M =         0x4a;\n-enum R_IA_64_PCREL21F =         0x4b;\n-enum R_IA_64_PCREL32MSB =       0x4c;\n-enum R_IA_64_PCREL32LSB =       0x4d;\n-enum R_IA_64_PCREL64MSB =       0x4e;\n-enum R_IA_64_PCREL64LSB =       0x4f;\n-enum R_IA_64_LTOFF_FPTR22 =     0x52;\n-enum R_IA_64_LTOFF_FPTR64I =    0x53;\n-enum R_IA_64_LTOFF_FPTR32MSB =  0x54;\n-enum R_IA_64_LTOFF_FPTR32LSB =  0x55;\n-enum R_IA_64_LTOFF_FPTR64MSB =  0x56;\n-enum R_IA_64_LTOFF_FPTR64LSB =  0x57;\n-enum R_IA_64_SEGREL32MSB =      0x5c;\n-enum R_IA_64_SEGREL32LSB =      0x5d;\n-enum R_IA_64_SEGREL64MSB =      0x5e;\n-enum R_IA_64_SEGREL64LSB =      0x5f;\n-enum R_IA_64_SECREL32MSB =      0x64;\n-enum R_IA_64_SECREL32LSB =      0x65;\n-enum R_IA_64_SECREL64MSB =      0x66;\n-enum R_IA_64_SECREL64LSB =      0x67;\n-enum R_IA_64_REL32MSB =         0x6c;\n-enum R_IA_64_REL32LSB =         0x6d;\n-enum R_IA_64_REL64MSB =         0x6e;\n-enum R_IA_64_REL64LSB =         0x6f;\n-enum R_IA_64_LTV32MSB =         0x74;\n-enum R_IA_64_LTV32LSB =         0x75;\n-enum R_IA_64_LTV64MSB =         0x76;\n-enum R_IA_64_LTV64LSB =         0x77;\n-enum R_IA_64_PCREL21BI =        0x79;\n-enum R_IA_64_PCREL22 =          0x7a;\n-enum R_IA_64_PCREL64I =         0x7b;\n-enum R_IA_64_IPLTMSB =          0x80;\n-enum R_IA_64_IPLTLSB =          0x81;\n-enum R_IA_64_SUB =              0x85;\n-enum R_IA_64_LTOFF22X =         0x86;\n-enum R_IA_64_LDXMOV =           0x87;\n-enum R_IA_64_TPREL14 =          0x91;\n-enum R_IA_64_TPREL22 =          0x92;\n-enum R_IA_64_TPREL64I =         0x93;\n-enum R_IA_64_TPREL64MSB =       0x96;\n-enum R_IA_64_TPREL64LSB =       0x97;\n-enum R_IA_64_LTOFF_TPREL22 =    0x9a;\n-enum R_IA_64_DTPMOD64MSB =      0xa6;\n-enum R_IA_64_DTPMOD64LSB =      0xa7;\n-enum R_IA_64_LTOFF_DTPMOD22 =   0xaa;\n-enum R_IA_64_DTPREL14 =         0xb1;\n-enum R_IA_64_DTPREL22 =         0xb2;\n-enum R_IA_64_DTPREL64I =        0xb3;\n-enum R_IA_64_DTPREL32MSB =      0xb4;\n-enum R_IA_64_DTPREL32LSB =      0xb5;\n-enum R_IA_64_DTPREL64MSB =      0xb6;\n-enum R_IA_64_DTPREL64LSB =      0xb7;\n-enum R_IA_64_LTOFF_DTPREL22 =   0xba;\n-\n-enum R_MIPS_NONE =              0;\n-enum R_MIPS_16 =                1;\n-enum R_MIPS_32 =                2;\n-enum R_MIPS_REL32 =             3;\n-enum R_MIPS_26 =                4;\n-enum R_MIPS_HI16 =              5;\n-enum R_MIPS_LO16 =              6;\n-enum R_MIPS_GPREL16 =           7;\n-enum R_MIPS_LITERAL =           8;\n-enum R_MIPS_GOT16 =             9;\n-enum R_MIPS_PC16 =              10;\n-enum R_MIPS_CALL16 =            11;\n-enum R_MIPS_GPREL32 =           12;\n-enum R_MIPS_GOTHI16 =           21;\n-enum R_MIPS_GOTLO16 =           22;\n-enum R_MIPS_CALLHI16 =          30;\n-enum R_MIPS_CALLLO16 =          31;\n-\n-enum R_PPC_NONE =               0;\n-enum R_PPC_ADDR32 =             1;\n-enum R_PPC_ADDR24 =             2;\n-enum R_PPC_ADDR16 =             3;\n-enum R_PPC_ADDR16_LO =          4;\n-enum R_PPC_ADDR16_HI =          5;\n-enum R_PPC_ADDR16_HA =          6;\n-enum R_PPC_ADDR14 =             7;\n-enum R_PPC_ADDR14_BRTAKEN =     8;\n-enum R_PPC_ADDR14_BRNTAKEN =    9;\n-enum R_PPC_REL24 =              10;\n-enum R_PPC_REL14 =              11;\n-enum R_PPC_REL14_BRTAKEN =      12;\n-enum R_PPC_REL14_BRNTAKEN =     13;\n-enum R_PPC_GOT16 =              14;\n-enum R_PPC_GOT16_LO =           15;\n-enum R_PPC_GOT16_HI =           16;\n-enum R_PPC_GOT16_HA =           17;\n-enum R_PPC_PLTREL24 =           18;\n-enum R_PPC_COPY =               19;\n-enum R_PPC_GLOB_DAT =           20;\n-enum R_PPC_JMP_SLOT =           21;\n-enum R_PPC_RELATIVE =           22;\n-enum R_PPC_LOCAL24PC =          23;\n-enum R_PPC_UADDR32 =            24;\n-enum R_PPC_UADDR16 =            25;\n-enum R_PPC_REL32 =              26;\n-enum R_PPC_PLT32 =              27;\n-enum R_PPC_PLTREL32 =           28;\n-enum R_PPC_PLT16_LO =           29;\n-enum R_PPC_PLT16_HI =           30;\n-enum R_PPC_PLT16_HA =           31;\n-enum R_PPC_SDAREL16 =           32;\n-enum R_PPC_SECTOFF =            33;\n-enum R_PPC_SECTOFF_LO =         34;\n-enum R_PPC_SECTOFF_HI =         35;\n-enum R_PPC_SECTOFF_HA =         36;\n-\n-enum R_PPC64_ADDR64 =           38;\n-enum R_PPC64_ADDR16_HIGHER =    39;\n-enum R_PPC64_ADDR16_HIGHERA =   40;\n-enum R_PPC64_ADDR16_HIGHEST =   41;\n-enum R_PPC64_ADDR16_HIGHESTA =  42;\n-enum R_PPC64_UADDR64 =          43;\n-enum R_PPC64_REL64 =            44;\n-enum R_PPC64_PLT64 =            45;\n-enum R_PPC64_PLTREL64 =         46;\n-enum R_PPC64_TOC16 =            47;\n-enum R_PPC64_TOC16_LO =         48;\n-enum R_PPC64_TOC16_HI =         49;\n-enum R_PPC64_TOC16_HA =         50;\n-enum R_PPC64_TOC =              51;\n-enum R_PPC64_DTPMOD64 =         68;\n-enum R_PPC64_TPREL64 =          73;\n-enum R_PPC64_DTPREL64 =         78;\n-\n-enum R_PPC_TLS =                67;\n-enum R_PPC_DTPMOD32 =           68;\n-enum R_PPC_TPREL16 =            69;\n-enum R_PPC_TPREL16_LO =         70;\n-enum R_PPC_TPREL16_HI =         71;\n-enum R_PPC_TPREL16_HA =         72;\n-enum R_PPC_TPREL32 =            73;\n-enum R_PPC_DTPREL16 =           74;\n-enum R_PPC_DTPREL16_LO =        75;\n-enum R_PPC_DTPREL16_HI =        76;\n-enum R_PPC_DTPREL16_HA =        77;\n-enum R_PPC_DTPREL32 =           78;\n-enum R_PPC_GOT_TLSGD16 =        79;\n-enum R_PPC_GOT_TLSGD16_LO =     80;\n-enum R_PPC_GOT_TLSGD16_HI =     81;\n-enum R_PPC_GOT_TLSGD16_HA =     82;\n-enum R_PPC_GOT_TLSLD16 =        83;\n-enum R_PPC_GOT_TLSLD16_LO =     84;\n-enum R_PPC_GOT_TLSLD16_HI =     85;\n-enum R_PPC_GOT_TLSLD16_HA =     86;\n-enum R_PPC_GOT_TPREL16 =        87;\n-enum R_PPC_GOT_TPREL16_LO =     88;\n-enum R_PPC_GOT_TPREL16_HI =     89;\n-enum R_PPC_GOT_TPREL16_HA =     90;\n-\n-enum R_PPC_EMB_NADDR32 =        101;\n-enum R_PPC_EMB_NADDR16 =        102;\n-enum R_PPC_EMB_NADDR16_LO =     103;\n-enum R_PPC_EMB_NADDR16_HI =     104;\n-enum R_PPC_EMB_NADDR16_HA =     105;\n-enum R_PPC_EMB_SDAI16 =         106;\n-enum R_PPC_EMB_SDA2I16 =        107;\n-enum R_PPC_EMB_SDA2REL =        108;\n-enum R_PPC_EMB_SDA21 =          109;\n-enum R_PPC_EMB_MRKREF =         110;\n-enum R_PPC_EMB_RELSEC16 =       111;\n-enum R_PPC_EMB_RELST_LO =       112;\n-enum R_PPC_EMB_RELST_HI =       113;\n-enum R_PPC_EMB_RELST_HA =       114;\n-enum R_PPC_EMB_BIT_FLD =        115;\n-enum R_PPC_EMB_RELSDA =         116;\n-\n-enum R_SPARC_NONE =             0;\n-enum R_SPARC_8 =                1;\n-enum R_SPARC_16 =               2;\n-enum R_SPARC_32 =               3;\n-enum R_SPARC_DISP8 =            4;\n-enum R_SPARC_DISP16 =           5;\n-enum R_SPARC_DISP32 =           6;\n-enum R_SPARC_WDISP30 =          7;\n-enum R_SPARC_WDISP22 =          8;\n-enum R_SPARC_HI22 =             9;\n-enum R_SPARC_22 =               10;\n-enum R_SPARC_13 =               11;\n-enum R_SPARC_LO10 =             12;\n-enum R_SPARC_GOT10 =            13;\n-enum R_SPARC_GOT13 =            14;\n-enum R_SPARC_GOT22 =            15;\n-enum R_SPARC_PC10 =             16;\n-enum R_SPARC_PC22 =             17;\n-enum R_SPARC_WPLT30 =           18;\n-enum R_SPARC_COPY =             19;\n-enum R_SPARC_GLOB_DAT =         20;\n-enum R_SPARC_JMP_SLOT =         21;\n-enum R_SPARC_RELATIVE =         22;\n-enum R_SPARC_UA32 =             23;\n-enum R_SPARC_PLT32 =            24;\n-enum R_SPARC_HIPLT22 =          25;\n-enum R_SPARC_LOPLT10 =          26;\n-enum R_SPARC_PCPLT32 =          27;\n-enum R_SPARC_PCPLT22 =          28;\n-enum R_SPARC_PCPLT10 =          29;\n-enum R_SPARC_10 =               30;\n-enum R_SPARC_11 =               31;\n-enum R_SPARC_64 =               32;\n-enum R_SPARC_OLO10 =            33;\n-enum R_SPARC_HH22 =             34;\n-enum R_SPARC_HM10 =             35;\n-enum R_SPARC_LM22 =             36;\n-enum R_SPARC_PC_HH22 =          37;\n-enum R_SPARC_PC_HM10 =          38;\n-enum R_SPARC_PC_LM22 =          39;\n-enum R_SPARC_WDISP16 =          40;\n-enum R_SPARC_WDISP19 =          41;\n-enum R_SPARC_GLOB_JMP =         42;\n-enum R_SPARC_7 =                43;\n-enum R_SPARC_5 =                44;\n-enum R_SPARC_6 =                45;\n-enum R_SPARC_DISP64 =           46;\n-enum R_SPARC_PLT64 =            47;\n-enum R_SPARC_HIX22 =            48;\n-enum R_SPARC_LOX10 =            49;\n-enum R_SPARC_H44 =              50;\n-enum R_SPARC_M44 =              51;\n-enum R_SPARC_L44 =              52;\n-enum R_SPARC_REGISTER =         53;\n-enum R_SPARC_UA64 =             54;\n-enum R_SPARC_UA16 =             55;\n-enum R_SPARC_TLS_GD_HI22 =      56;\n-enum R_SPARC_TLS_GD_LO10 =      57;\n-enum R_SPARC_TLS_GD_ADD =       58;\n-enum R_SPARC_TLS_GD_CALL =      59;\n-enum R_SPARC_TLS_LDM_HI22 =     60;\n-enum R_SPARC_TLS_LDM_LO10 =     61;\n-enum R_SPARC_TLS_LDM_ADD =      62;\n-enum R_SPARC_TLS_LDM_CALL =     63;\n-enum R_SPARC_TLS_LDO_HIX22 =    64;\n-enum R_SPARC_TLS_LDO_LOX10 =    65;\n-enum R_SPARC_TLS_LDO_ADD =      66;\n-enum R_SPARC_TLS_IE_HI22 =      67;\n-enum R_SPARC_TLS_IE_LO10 =      68;\n-enum R_SPARC_TLS_IE_LD =        69;\n-enum R_SPARC_TLS_IE_LDX =       70;\n-enum R_SPARC_TLS_IE_ADD =       71;\n-enum R_SPARC_TLS_LE_HIX22 =     72;\n-enum R_SPARC_TLS_LE_LOX10 =     73;\n-enum R_SPARC_TLS_DTPMOD32 =     74;\n-enum R_SPARC_TLS_DTPMOD64 =     75;\n-enum R_SPARC_TLS_DTPOFF32 =     76;\n-enum R_SPARC_TLS_DTPOFF64 =     77;\n-enum R_SPARC_TLS_TPOFF32 =      78;\n-enum R_SPARC_TLS_TPOFF64 =      79;\n-\n-enum R_X86_64_NONE =            0;\n-enum R_X86_64_64 =              1;\n-enum R_X86_64_PC32 =            2;\n-enum R_X86_64_GOT32 =           3;\n-enum R_X86_64_PLT32 =           4;\n-enum R_X86_64_COPY =            5;\n-enum R_X86_64_GLOB_DAT =        6;\n-enum R_X86_64_JMP_SLOT =        7;\n-enum R_X86_64_RELATIVE =        8;\n-enum R_X86_64_GOTPCREL =        9;\n-enum R_X86_64_32 =              10;\n-enum R_X86_64_32S =             11;\n-enum R_X86_64_16 =              12;\n-enum R_X86_64_PC16 =            13;\n-enum R_X86_64_8 =               14;\n-enum R_X86_64_PC8 =             15;\n-enum R_X86_64_DTPMOD64 =        16;\n-enum R_X86_64_DTPOFF64 =        17;\n-enum R_X86_64_TPOFF64 =         18;\n-enum R_X86_64_TLSGD =           19;\n-enum R_X86_64_TLSLD =           20;\n-enum R_X86_64_DTPOFF32 =        21;\n-enum R_X86_64_GOTTPOFF =        22;\n-enum R_X86_64_TPOFF32 =         23;\n-enum R_X86_64_IRELATIVE =       37;"}, {"sha": "342282b857b73d38b19c6e41ccc91486c7d01533", "filename": "libphobos/libdruntime/core/sys/openbsd/sys/elf32.d", "status": "modified", "additions": 4, "deletions": 154, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf32.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf32.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf32.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,114 +7,20 @@\n module core.sys.openbsd.sys.elf32;\n \n version (OpenBSD):\n-\n extern (C):\n+pure:\n+nothrow:\n \n import core.stdc.stdint;\n public import core.sys.openbsd.sys.elf_common;\n \n-alias uint16_t Elf32_Half;\n-alias uint32_t Elf32_Word;\n-alias int32_t  Elf32_Sword;\n alias uint64_t Elf32_Lword;\n-alias uint32_t Elf32_Addr;\n-alias uint32_t Elf32_Off;\n alias Elf32_Word Elf32_Hashelt;\n alias Elf32_Word Elf32_Size;\n alias Elf32_Sword Elf32_Ssize;\n \n-struct Elf32_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf32_Half    e_type;\n-    Elf32_Half    e_machine;\n-    Elf32_Word    e_version;\n-    Elf32_Addr    e_entry;\n-    Elf32_Off     e_phoff;\n-    Elf32_Off     e_shoff;\n-    Elf32_Word    e_flags;\n-    Elf32_Half    e_ehsize;\n-    Elf32_Half    e_phentsize;\n-    Elf32_Half    e_phnum;\n-    Elf32_Half    e_shentsize;\n-    Elf32_Half    e_shnum;\n-    Elf32_Half    e_shstrndx;\n-}\n-\n-struct Elf32_Shdr\n-{\n-    Elf32_Word    sh_name;\n-    Elf32_Word    sh_type;\n-    Elf32_Word    sh_flags;\n-    Elf32_Addr    sh_addr;\n-    Elf32_Off     sh_offset;\n-    Elf32_Word    sh_size;\n-    Elf32_Word    sh_link;\n-    Elf32_Word    sh_info;\n-    Elf32_Word    sh_addralign;\n-    Elf32_Word    sh_entsize;\n-}\n-\n-struct Elf32_Phdr\n-{\n-    Elf32_Word    p_type;\n-    Elf32_Off     p_offset;\n-    Elf32_Addr    p_vaddr;\n-    Elf32_Addr    p_paddr;\n-    Elf32_Word    p_filesz;\n-    Elf32_Word    p_memsz;\n-    Elf32_Word    p_flags;\n-    Elf32_Word    p_align;\n-}\n-\n-struct Elf32_Dyn\n-{\n-  Elf32_Sword   d_tag;\n-  union _d_un\n-  {\n-      Elf32_Word d_val;\n-      Elf32_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf32_Rel\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-}\n-\n-struct Elf32_Rela\n-{\n-    Elf32_Addr    r_offset;\n-    Elf32_Word    r_info;\n-    Elf32_Sword   r_addend;\n-}\n-\n-extern (D) pure @safe\n-{\n-    auto ELF32_R_SYM(V)(V val) { return val >> 8; }\n-    auto ELF32_R_TYPE(V)(V val) { return val & 0xff; }\n-    auto ELF32_R_INFO(S, T)(S sym, T type) { return (sym << 8) + (type & 0xff); }\n-}\n-\n alias Elf_Note Elf32_Nhdr;\n \n-struct Elf32_Move\n-{\n-    Elf32_Lword   m_value;\n-    Elf32_Word    m_info;\n-    Elf32_Word    m_poffset;\n-    Elf32_Half    m_repeat;\n-    Elf32_Half    m_stride;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF32_M_SYM(I)(I info) @safe { return info >> 8; }\n-    auto ELF32_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF32_M_INFO(S, SZ)(S sym, SZ size) { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf32_Cap\n {\n     Elf32_Word    c_tag;\n@@ -125,63 +31,7 @@ struct Elf32_Cap\n     } _c_un c_un;\n }\n \n-struct Elf32_Sym\n-{\n-    Elf32_Word    st_name;\n-    Elf32_Addr    st_value;\n-    Elf32_Word    st_size;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf32_Half st_shndx;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF32_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF32_ST_TYPE(T)(T val) @safe { return val & 0xf; }\n-    auto ELF32_ST_INFO(B, T)(B bind, T type) @safe { return (bind << 4) + (type & 0xf); }\n-    auto ELF32_ST_VISIBILITY(O)(O o) @safe { return o & 0x03; }\n-}\n-\n-struct Elf32_Verdef\n-{\n-    Elf32_Half    vd_version;\n-    Elf32_Half    vd_flags;\n-    Elf32_Half    vd_ndx;\n-    Elf32_Half    vd_cnt;\n-    Elf32_Word    vd_hash;\n-    Elf32_Word    vd_aux;\n-    Elf32_Word    vd_next;\n-}\n-\n-struct Elf32_Verdaux\n-{\n-    Elf32_Word    vda_name;\n-    Elf32_Word    vda_next;\n-}\n-\n-struct Elf32_Verneed\n-{\n-    Elf32_Half    vn_version;\n-    Elf32_Half    vn_cnt;\n-    Elf32_Word    vn_file;\n-    Elf32_Word    vn_aux;\n-    Elf32_Word    vn_next;\n-}\n-\n-struct Elf32_Vernaux\n-{\n-    Elf32_Word    vna_hash;\n-    Elf32_Half    vna_flags;\n-    Elf32_Half    vna_other;\n-    Elf32_Word    vna_name;\n-    Elf32_Word    vna_next;\n-}\n-\n-alias Elf32_Half Elf32_Versym;\n-\n-struct Elf32_Syminfo\n+extern (D)\n {\n-    Elf32_Half si_boundto;\n-    Elf32_Half si_flags;\n+    auto ELF32_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }"}, {"sha": "b76d669b3049e54bc070fa356e051593b48d3c15", "filename": "libphobos/libdruntime/core/sys/openbsd/sys/elf64.d", "status": "modified", "additions": 4, "deletions": 153, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf64.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,120 +7,27 @@\n module core.sys.openbsd.sys.elf64;\n \n version (OpenBSD):\n-\n extern (C):\n+pure:\n+nothrow:\n \n import core.stdc.stdint;\n public import core.sys.openbsd.sys.elf_common;\n \n-alias uint16_t Elf64_Half;\n-alias uint32_t Elf64_Word;\n-alias int32_t  Elf64_Sword;\n alias uint64_t Elf64_Lword;\n-alias uint64_t Elf64_Xword;\n-alias int64_t  Elf64_Sxword;\n-alias uint64_t Elf64_Addr;\n-alias uint64_t Elf64_Off;\n alias Elf64_Word Elf64_Hashelt;\n alias Elf64_Xword Elf64_Size;\n alias Elf64_Sxword Elf64_Ssize;\n \n-struct Elf64_Ehdr\n-{\n-    char[EI_NIDENT] e_ident = 0;\n-    Elf64_Half    e_type;\n-    Elf64_Half    e_machine;\n-    Elf64_Word    e_version;\n-    Elf64_Addr    e_entry;\n-    Elf64_Off     e_phoff;\n-    Elf64_Off     e_shoff;\n-    Elf64_Word    e_flags;\n-    Elf64_Half    e_ehsize;\n-    Elf64_Half    e_phentsize;\n-    Elf64_Half    e_phnum;\n-    Elf64_Half    e_shentsize;\n-    Elf64_Half    e_shnum;\n-    Elf64_Half    e_shstrndx;\n-}\n-\n-struct Elf64_Shdr\n-{\n-    Elf64_Word    sh_name;\n-    Elf64_Word    sh_type;\n-    Elf64_Xword   sh_flags;\n-    Elf64_Addr    sh_addr;\n-    Elf64_Off     sh_offset;\n-    Elf64_Xword   sh_size;\n-    Elf64_Word    sh_link;\n-    Elf64_Word    sh_info;\n-    Elf64_Xword   sh_addralign;\n-    Elf64_Xword   sh_entsize;\n-}\n-\n-struct Elf64_Phdr\n-{\n-    Elf64_Word    p_type;\n-    Elf64_Word    p_flags;\n-    Elf64_Off     p_offset;\n-    Elf64_Addr    p_vaddr;\n-    Elf64_Addr    p_paddr;\n-    Elf64_Xword   p_filesz;\n-    Elf64_Xword   p_memsz;\n-    Elf64_Xword   p_align;\n-}\n-\n-struct Elf64_Dyn\n-{\n-  Elf64_Sxword  d_tag;\n-  union _d_un\n-  {\n-      Elf64_Xword d_val;\n-      Elf64_Addr d_ptr;\n-  } _d_un d_un;\n-}\n-\n-struct Elf64_Rel\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-}\n-\n-struct Elf64_Rela\n-{\n-    Elf64_Addr    r_offset;\n-    Elf64_Xword   r_info;\n-    Elf64_Sxword  r_addend;\n-}\n-\n extern (D) pure\n {\n-    auto ELF64_R_SYM(I)(I i) @safe { return i >> 32; }\n-    auto ELF64_R_TYPE(I)(I i) @safe { return i & 0xffffffff; }\n-    auto ELF64_R_INFO(S, T)(S sym, T type) @safe { return (sym << 32) + (type & 0xffffffff); }\n-\n     auto ELF64_R_TYPE_DATA(I)(I i) { return (cast(Elf64_Xword) i << 32) >> 40; }\n     auto ELF64_R_TYPE_ID(I)(I i) { return (cast(Elf64_Xword) i << 56 ) >> 56; }\n     auto ELF64_R_TYPE_INFO(D, T)(D d, T t) { return cast(Elf64_Xword) d << 8 + cast(Elf64_Xword) t; }\n }\n \n alias Elf_Note Elf64_Nhdr;\n \n-struct Elf64_Move\n-{\n-    Elf64_Lword   m_value;\n-    Elf64_Xword   m_info;\n-    Elf64_Xword   m_poffset;\n-    Elf64_Half    m_repeat;\n-    Elf64_Half    m_stride;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF64_M_SYM(I)(I info) @safe { return info >> 8; }\n-    auto ELF64_M_SIZE(I)(I info) { return cast(ubyte)info; }\n-    auto ELF64_M_INFO(S, SZ)(S sym, SZ size) @safe { return (sym << 8) + cast(ubyte)size; }\n-}\n-\n struct Elf64_Cap\n {\n     Elf64_Xword   c_tag;\n@@ -131,63 +38,7 @@ struct Elf64_Cap\n     } _c_un c_un;\n }\n \n-struct Elf64_Sym\n-{\n-    Elf64_Word    st_name;\n-    ubyte st_info;\n-    ubyte st_other;\n-    Elf64_Half st_shndx;\n-    Elf64_Addr    st_value;\n-    Elf64_Xword   st_size;\n-}\n-\n-extern (D) pure\n-{\n-    auto ELF64_ST_BIND(T)(T val) { return cast(ubyte)val >> 4; }\n-    auto ELF64_ST_TYPE(T)(T val) @safe { return val & 0xf; }\n-    auto ELF64_ST_INFO(B, T)(B bind, T type) @safe { return (bind << 4) + (type & 0xf); }\n-    auto ELF64_ST_VISIBILITY(O)(O o) @safe { return o & 0x03; }\n-}\n-\n-struct Elf64_Verdef\n-{\n-    Elf64_Half    vd_version;\n-    Elf64_Half    vd_flags;\n-    Elf64_Half    vd_ndx;\n-    Elf64_Half    vd_cnt;\n-    Elf64_Word    vd_hash;\n-    Elf64_Word    vd_aux;\n-    Elf64_Word    vd_next;\n-}\n-\n-struct Elf64_Verdaux\n-{\n-    Elf64_Word    vda_name;\n-    Elf64_Word    vda_next;\n-}\n-\n-struct Elf64_Verneed\n-{\n-    Elf64_Half    vn_version;\n-    Elf64_Half    vn_cnt;\n-    Elf64_Word    vn_file;\n-    Elf64_Word    vn_aux;\n-    Elf64_Word    vn_next;\n-}\n-\n-struct Elf64_Vernaux\n-{\n-    Elf64_Word    vna_hash;\n-    Elf64_Half    vna_flags;\n-    Elf64_Half    vna_other;\n-    Elf64_Word    vna_name;\n-    Elf64_Word    vna_next;\n-}\n-\n-alias Elf64_Half Elf64_Versym;\n-\n-struct Elf64_Syminfo\n+extern (D)\n {\n-    Elf64_Half si_boundto;\n-    Elf64_Half si_flags;\n+    auto ELF64_ST_VISIBILITY(O)(O o) { return o & 0x03; }\n }"}, {"sha": "4812e1f04dd85b8869655d56a2db30b469cd3f11", "filename": "libphobos/libdruntime/core/sys/openbsd/sys/elf_common.d", "status": "modified", "additions": 5, "deletions": 599, "changes": 604, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf_common.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf_common.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fsys%2Felf_common.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -7,10 +7,12 @@\n module core.sys.openbsd.sys.elf_common;\n \n version (OpenBSD):\n-\n extern (C):\n+pure:\n+nothrow:\n \n import core.stdc.stdint;\n+public import core.sys.elf;\n \n struct Elf_Note\n {\n@@ -27,60 +29,7 @@ struct Elf_GNU_Hash_Header\n     uint32_t      gh_shift2;\n }\n \n-enum EI_MAG0 =         0;\n-enum EI_MAG1 =         1;\n-enum EI_MAG2 =         2;\n-enum EI_MAG3 =         3;\n-enum EI_CLASS =        4;\n-enum EI_DATA =         5;\n-enum EI_VERSION =      6;\n-enum EI_OSABI =        7;\n-enum EI_ABIVERSION =   8;\n enum OLD_EI_BRAND =    8;\n-enum EI_PAD =          9;\n-enum EI_NIDENT =       16;\n-\n-enum ELFMAG0 =         0x7f;\n-enum ELFMAG1 =         'E';\n-enum ELFMAG2 =         'L';\n-enum ELFMAG3 =         'F';\n-enum ELFMAG =          \"\\177ELF\";\n-enum SELFMAG =         4;\n-\n-enum EV_NONE =         0;\n-enum EV_CURRENT =      1;\n-\n-enum ELFCLASSNONE =    0;\n-enum ELFCLASS32 =      1;\n-enum ELFCLASS64 =      2;\n-\n-enum ELFDATANONE =     0;\n-enum ELFDATA2LSB =     1;\n-enum ELFDATA2MSB =     2;\n-\n-enum ELFOSABI_NONE =           0;\n-enum ELFOSABI_SYSV =           0;\n-enum ELFOSABI_HPUX =           1;\n-enum ELFOSABI_NETBSD =         2;\n-enum ELFOSABI_LINUX =          3;\n-enum ELFOSABI_HURD  =          4;\n-enum ELFOSABI_86OPEN =         5;\n-enum ELFOSABI_SOLARIS =        6;\n-enum ELFOSABI_AIX =            7;\n-enum ELFOSABI_MONTEREY =       7;\n-enum ELFOSABI_IRIX =           8;\n-enum ELFOSABI_FREEBSD =        9;\n-enum ELFOSABI_TRU64 =          10;\n-enum ELFOSABI_MODESTO =        11;\n-enum ELFOSABI_OPENBSD =        12;\n-enum ELFOSABI_OPENVMS =        13;\n-enum ELFOSABI_NSK =            14;\n-enum ELFOSABI_AROS =           15;\n-enum ELFOSABI_ARM =            97;\n-enum ELFOSABI_STANDALONE =     255;\n-\n-// just a pointer\n-enum ELFOSABI_DRAGONFLYBSD =   ELFOSABI_NONE;\n \n extern (D) pure @safe\n {\n@@ -90,587 +39,44 @@ extern (D) pure @safe\n                                     ehdr.e_ident[EI_MAG3] == ELFMAG3; }\n }\n \n-enum ET_NONE =         0;\n-enum ET_REL =          1;\n-enum ET_EXEC =         2;\n-enum ET_DYN =          3;\n-enum ET_CORE =         4;\n-enum ET_LOOS =         0xfe00;\n-enum ET_HIOS =         0xfeff;\n-enum ET_LOPROC =       0xff00;\n-enum ET_HIPROC =       0xffff;\n-\n-enum EM_NONE =          0;\n-enum EM_M32 =           1;\n-enum EM_SPARC =         2;\n-enum EM_386 =           3;\n-enum EM_68K =           4;\n-enum EM_88K =           5;\n-enum EM_860 =           7;\n-enum EM_MIPS =          8;\n-enum EM_S370 =          9;\n-enum EM_MIPS_RS3_LE =  10;\n-enum EM_PARISC =       15;\n-enum EM_VPP500 =       17;\n-enum EM_SPARC32PLUS =  18;\n-enum EM_960 =          19;\n-enum EM_PPC =          20;\n-enum EM_PPC64 =        21;\n-enum EM_S390 =         22;\n-enum EM_V800 =         36;\n-enum EM_FR20 =         37;\n-enum EM_RH32 =         38;\n-enum EM_RCE =          39;\n-enum EM_ARM =          40;\n-enum EM_SH =           42;\n-enum EM_SPARCV9 =      43;\n-enum EM_TRICORE =      44;\n-enum EM_ARC =          45;\n-enum EM_H8_300 =       46;\n-enum EM_H8_300H =      47;\n-enum EM_H8S =          48;\n-enum EM_H8_500 =       49;\n-enum EM_IA_64 =        50;\n-enum EM_MIPS_X =       51;\n-enum EM_COLDFIRE =     52;\n-enum EM_68HC12 =       53;\n-enum EM_MMA =          54;\n-enum EM_PCP =          55;\n-enum EM_NCPU =         56;\n-enum EM_NDR1 =         57;\n-enum EM_STARCORE =     58;\n-enum EM_ME16 =         59;\n-enum EM_ST100 =        60;\n-enum EM_TINYJ =        61;\n-enum EM_X86_64 =       62;\n-enum EM_AMD64 =        62;\n-enum EM_PDSP =         63;\n-enum EM_FX66 =         66;\n-enum EM_ST9PLUS =      67;\n-enum EM_ST7 =          68;\n-enum EM_68HC16 =       69;\n-enum EM_68HC11 =       70;\n-enum EM_68HC08 =       71;\n-enum EM_68HC05 =       72;\n-enum EM_SVX =          73;\n-enum EM_ST19 =         74;\n-enum EM_VAX =          75;\n-enum EM_CRIS =         76;\n-enum EM_JAVELIN =      77;\n-enum EM_FIREPATH =     78;\n-enum EM_ZSP =          79;\n-enum EM_MMIX =         80;\n-enum EM_HUANY =        81;\n-enum EM_PRISM =        82;\n-enum EM_AVR =          83;\n-enum EM_FR30 =         84;\n-enum EM_D10V =         85;\n-enum EM_D30V =         86;\n-enum EM_V850 =         87;\n-enum EM_M32R =         88;\n-enum EM_MN10300 =      89;\n-enum EM_MN10200 =      90;\n-enum EM_PJ =           91;\n-enum EM_OPENRISC =     92;\n-enum EM_ARC_A5 =       93;\n-enum EM_XTENSA =       94;\n-enum EM_VIDEOCORE =    95;\n-enum EM_TMM_GPP =      96;\n-enum EM_NS32K =        97;\n-enum EM_TPC =          98;\n-enum EM_SNP1K =        99;\n-enum EM_ST200 =       100;\n-enum EM_IP2K =        101;\n-enum EM_MAX =         102;\n-enum EM_CR =          103;\n-enum EM_F2MC16 =      104;\n-enum EM_MSP430 =      105;\n-enum EM_BLACKFIN =    106;\n-enum EM_SE_C33 =      107;\n-enum EM_SEP =         108;\n-enum EM_ARCA =        109;\n-enum EM_UNICORE =     110;\n-enum EM_DXP =         112;\n-enum EM_ALTERA_NIOS2 =113;\n-enum EM_CRX =         114;\n-enum EM_XGATE =       115;\n-enum EM_C166  =       116;\n-enum EM_M16C  =       117;\n-enum EM_DSPIC30F =    118;\n-enum EM_CE =          119;\n-enum EM_M32C  =       120;\n-enum EM_res121 =      121;\n-enum EM_res122 =      122;\n-enum EM_res123 =      123;\n-enum EM_res124 =      124;\n-enum EM_res125 =      125;\n-enum EM_res126 =      126;\n-enum EM_res127 =      127;\n-enum EM_res128 =      128;\n-enum EM_res129 =      129;\n-enum EM_res130 =      130;\n-enum EM_TSK3000 =     131;\n-enum EM_RS08  =       132;\n-enum EM_res133 =      133;\n-enum EM_ECOG2 =       134;\n-enum EM_SCORE =       135;\n-enum EM_SCORE7 =      135;\n-enum EM_DSP24 =       136;\n-enum EM_VIDEOCORE3 =  137;\n-enum EM_LATTICEMICO32 = 138;\n-enum EM_SE_C17 =      139;\n-enum EM_TI_C6000 =    140;\n-enum EM_TI_C2000 =    141;\n-enum EM_TI_C5500 =    142;\n-enum EM_res143 =      143;\n-enum EM_res144 =      144;\n-enum EM_res145 =      145;\n-enum EM_res146 =      146;\n-enum EM_res147 =      147;\n-enum EM_res148 =      148;\n-enum EM_res149 =      149;\n-enum EM_res150 =      150;\n-enum EM_res151 =      151;\n-enum EM_res152 =      152;\n-enum EM_res153 =      153;\n-enum EM_res154 =      154;\n-enum EM_res155 =      155;\n-enum EM_res156 =      156;\n-enum EM_res157 =      157;\n-enum EM_res158 =      158;\n-enum EM_res159 =      159;\n-enum EM_MMDSP_PLUS =  160;\n-enum EM_CYPRESS_M8C = 161;\n-enum EM_R32C  =       162;\n-enum EM_TRIMEDIA =    163;\n-enum EM_QDSP6 =       164;\n-enum EM_8051  =       165;\n-enum EM_STXP7X =      166;\n-enum EM_NDS32 =       167;\n-enum EM_ECOG1 =       168;\n-enum EM_ECOG1X =      168;\n-enum EM_MAXQ30 =      169;\n-enum EM_XIMO16 =      170;\n-enum EM_MANIK =       171;\n-enum EM_CRAYNV2 =     172;\n-enum EM_RX =          173;\n-enum EM_METAG =       174;\n-enum EM_MCST_ELBRUS = 175;\n-enum EM_ECOG16 =      176;\n-enum EM_CR16  =       177;\n-enum EM_ETPU  =       178;\n-enum EM_SLE9X =       179;\n-enum EM_L1OM  =       180;\n-enum EM_K1OM  =       181;\n-enum EM_INTEL182 =    182;\n-enum EM_res183 =      183;\n-enum EM_res184 =      184;\n-enum EM_AVR32 =       185;\n-enum EM_STM8  =       186;\n-enum EM_TILE64 =      187;\n-enum EM_TILEPRO =     188;\n-enum EM_MICROBLAZE =  189;\n-enum EM_CUDA  =       190;\n-enum EM_TILEGX =      191;\n-\n enum EM_486 =           6;\n enum EM_MIPS_RS4_BE =  10;\n enum EM_ALPHA_STD =    41;\n-enum EM_ALPHA =    0x9026;\n-\n-enum SHN_UNDEF =       0;\n-enum SHN_LORESERVE =   0xff00;\n-enum SHN_LOPROC =      0xff00;\n-enum SHN_HIPROC =      0xff1f;\n-enum SHN_LOOS =        0xff20;\n-enum SHN_HIOS =        0xff3f;\n-enum SHN_ABS =         0xfff1;\n-enum SHN_COMMON =      0xfff2;\n-enum SHN_XINDEX =      0xffff;\n-enum SHN_HIRESERVE =   0xffff;\n \n-enum PT_NULL =         0;\n-enum PT_LOAD =         1;\n-enum PT_DYNAMIC =      2;\n-enum PT_INTERP =       3;\n-enum PT_NOTE =         4;\n-enum PT_SHLIB =        5;\n-enum PT_PHDR =         6;\n-enum PT_TLS =          7;\n-enum PT_LOOS =         0x60000000;\n-enum PT_HIOS =         0x6fffffff;\n-enum PT_LOPROC =       0x70000000;\n-enum PT_HIPROC =       0x7fffffff;\n-\n-enum PT_GNU_EH_FRAME =  PT_LOOS + 0x474e550; /* Frame unwind information */\n-enum PT_SUNW_EH_FRAME = PT_GNU_EH_FRAME;     /* Solaris uses the same value */\n-enum PT_GNU_STACK =     PT_LOOS + 0x474e551; /* Stack flags */\n-enum PT_GNU_RELRO =     PT_LOOS + 0x474e552;  /* Read-only after relocation */\n-\n-enum PF_X =            0x1;\n-enum PF_W =            0x2;\n-enum PF_R =            0x4;\n-enum PF_MASKOS =       0x0ff00000;\n-enum PF_MASKPROC =     0xf0000000;\n-\n-enum PN_XNUM =         0xffff;\n-\n-enum SHT_NULL =          0;\n-enum SHT_PROGBITS =      1;\n-enum SHT_SYMTAB =        2;\n-enum SHT_STRTAB =        3;\n-enum SHT_RELA =          4;\n-enum SHT_HASH =          5;\n-enum SHT_DYNAMIC =       6;\n-enum SHT_NOTE =          7;\n-enum SHT_NOBITS =        8;\n-enum SHT_REL =           9;\n-enum SHT_SHLIB =         10;\n-enum SHT_DYNSYM =        11;\n-\n-enum SHT_INIT_ARRAY =    14;\n-enum SHT_FINI_ARRAY =    15;\n-enum SHT_PREINIT_ARRAY = 16;\n-enum SHT_GROUP =         17;\n-enum SHT_SYMTAB_SHNDX =  18;\n-\n-enum SHT_LOOS =          0x60000000;\n-enum SHT_LOSUNW =        0x6ffffff4;\n+enum PT_SUNW_EH_FRAME = PT_GNU_EH_FRAME;\n \n enum SHT_GNU_INCREMENTAL_INPUTS =  0x6fff4700;\n-enum SHT_GNU_ATTRIBUTES =       0x6ffffff5;\n-enum SHT_GNU_HASH =             0x6ffffff6;\n-enum SHT_GNU_LIBLIST =          0x6ffffff7;\n \n-//enum SHT_SUNW_dof =      0x6ffffff4;\n-//enum SHT_SUNW_cap =      0x6ffffff5;\n-//enum SHT_SUNW_SIGNATURE = 0x6ffffff6;\n enum SHT_SUNW_verdef =   0x6ffffffd;\n enum SHT_SUNW_verneed =  0x6ffffffe;\n enum SHT_SUNW_versym =   0x6fffffff;\n \n-enum SHT_GNU_verdef =    SHT_SUNW_verdef;\n-enum SHT_GNU_verneed =   SHT_SUNW_verneed;\n-enum SHT_GNU_versym =    SHT_SUNW_versym;\n-\n-enum SHT_LOPROC =        0x70000000;\n-enum SHT_HIPROC =        0x7fffffff;\n-enum SHT_LOUSER =        0x80000000;\n-enum SHT_HIUSER =        0x8fffffff;\n-\n-/*\n-enum SHT_GNU_HASH =      0x6ffffff6;\n-enum SHT_SUNW_ANNOTATE = 0x6ffffff7;\n-enum SHT_SUNW_DEBUGSTR = 0x6ffffff8;\n-enum SHT_SUNW_DEBUG =    0x6ffffff9;\n-enum SHT_SUNW_move =     0x6ffffffa;\n-enum SHT_SUNW_COMDAT =   0x6ffffffb;\n-enum SHT_SUNW_syminfo =  0x6ffffffc;\n-enum SHT_HISUNW =        0x6fffffff;\n-enum SHT_HIOS =          0x6fffffff;\n-enum SHT_AMD64_UNWIND =  0x70000001;\n-enum SHT_ARM_EXIDX =     0x70000001;\n-enum SHT_ARM_PREEMPTMAP = 0x70000002;\n-enum SHT_ARM_ATTRIBUTES = 0x70000003;\n-enum SHT_ARM_DEBUGOVERLAY = 0x70000004;\n-enum SHT_ARM_OVERLAYSECTION = 0x70000005;\n-enum SHT_MIPS_REGINFO =  0x70000006;\n-enum SHT_MIPS_OPTIONS =  0x7000000d;\n-enum SHT_MIPS_DWARF =    0x7000001e;\n-*/\n-\n-enum SHF_WRITE =            (1 << 0);\n-enum SHF_ALLOC =            (1 << 1);\n-enum SHF_EXECINSTR =        (1 << 2);\n-enum SHF_MERGE =            (1 << 4);\n-enum SHF_STRINGS =          (1 << 5);\n-enum SHF_INFO_LINK =        (1 << 6);\n-enum SHF_LINK_ORDER =       (1 << 7);\n-enum SHF_OS_NONCONFORMING = (1 << 8);\n-enum SHF_GROUP =            (1 << 9);\n-enum SHF_TLS =              (1 << 10);\n-enum SHF_COMPRESSED =       (1 << 11);\n-\n-enum SHF_MASKOS =           0x0ff00000;\n-enum SHF_MASKPROC =         0xf0000000;\n-\n enum NT_PRSTATUS =     1;\n enum NT_FPREGSET =     2;\n enum NT_PRPSINFO =     3;\n enum NT_TASKSTRUCT =   4;\n enum NT_AUXV =         6;\n \n-/*\n-enum NT_THRMISC =      7;\n-enum NT_PROCSTAT_PROC = 8;\n-enum NT_PROCSTAT_FILES = 9;\n-enum NT_PROCSTAT_VMMAP = 10;\n-enum NT_PROCSTAT_GROUPS = 11;\n-enum NT_PROCSTAT_UMASK = 12;\n-enum NT_PROCSTAT_RLIMIT = 13;\n-enum NT_PROCSTAT_OSREL = 14;\n-enum NT_PROCSTAT_PSSTRINGS = 15;\n-enum NT_PROCSTAT_AUXV = 16;\n-*/\n-\n-enum STN_UNDEF =       0;\n-\n-enum STB_LOCAL =       0;\n-enum STB_GLOBAL =      1;\n-enum STB_WEAK =        2;\n-enum STB_NUM =         3;\n-enum STB_LOOS =        10;\n-enum STB_HIOS =        12;\n-enum STB_LOPROC =      13;\n-enum STB_HIPROC =      15;\n-\n-enum STT_NOTYPE =      0;\n-enum STT_OBJECT =      1;\n-enum STT_FUNC =        2;\n-enum STT_SECTION =     3;\n-enum STT_FILE =        4;\n-enum STT_COMMON =      5;\n-enum STT_TLS =         6;\n-enum STT_NUM =         7;\n-enum STT_LOOS =        10;\n-enum STT_GNU_IFUNC =   10;\n-enum STT_HIOS =        12;\n-enum STT_LOPROC =      13;\n-enum STT_HIPROC =      15;\n-\n-enum STV_DEFAULT =     0;\n-enum STV_INTERNAL =    1;\n-enum STV_HIDDEN =      2;\n-enum STV_PROTECTED =   3;\n-/*\n-enum STV_EXPORTED =    4;\n-enum STV_SINGLETON =   5;\n-enum STV_ELIMINATE =   6;\n-*/\n-\n-enum DT_NULL =         0;\n-enum DT_NEEDED =       1;\n-enum DT_PLTRELSZ =     2;\n-enum DT_PLTGOT =       3;\n-enum DT_HASH =         4;\n-enum DT_STRTAB =       5;\n-enum DT_SYMTAB =       6;\n-enum DT_RELA =         7;\n-enum DT_RELASZ =       8;\n-enum DT_RELAENT =      9;\n-enum DT_STRSZ =        10;\n-enum DT_SYMENT =       11;\n-enum DT_INIT =         12;\n-enum DT_FINI =         13;\n-enum DT_SONAME =       14;\n-enum DT_RPATH =        15;\n-enum DT_SYMBOLIC =     16;\n-enum DT_REL =          17;\n-enum DT_RELSZ =        18;\n-enum DT_RELENT =       19;\n-enum DT_PLTREL =       20;\n-enum DT_DEBUG =        21;\n-enum DT_TEXTREL =      22;\n-enum DT_JMPREL =       23;\n-enum DT_BIND_NOW =     24;\n-enum DT_INIT_ARRAY =   25;\n-enum DT_FINI_ARRAY =   26;\n-enum DT_INIT_ARRAYSZ = 27;\n-enum DT_FINI_ARRAYSZ = 28;\n-enum DT_RUNPATH =      29;\n-enum DT_FLAGS =        30;\n-\n-enum DT_ENCODING =     32;\n-enum DT_PREINIT_ARRAY = 32;\n-enum DT_PREINIT_ARRAYSZ = 33;\n-//enum DT_MAXPOSTAGS =   34;\n-enum DT_LOOS =         0x6000000d;\n-enum DT_HIOS =         0x6ffff000;\n-/*\n-enum DT_SUNW_AUXILIARY = 0x6000000d;\n-enum DT_SUNW_RTLDINF = 0x6000000e;\n-enum DT_SUNW_FILTER =  0x6000000f;\n-enum DT_SUNW_CAP =     0x60000010;\n-*/\n-\n-enum DT_VALRNGLO =     0x6ffffd00;\n-enum DT_GNU_PRELINKED = 0x6ffffdf5;\n-enum DT_GNU_CONFLICTSZ =0x6ffffdf6;\n-enum DT_GNU_LIBLISTSZ = 0x6ffffdf7;\n-enum DT_CHECKSUM =     0x6ffffdf8;\n-enum DT_PLTPADSZ =     0x6ffffdf9;\n-enum DT_MOVEENT =      0x6ffffdfa;\n-enum DT_MOVESZ =       0x6ffffdfb;\n-enum DT_FEATURE_1 =    0x6ffffdfc;\n-enum DT_POSFLAG_1 =    0x6ffffdfd;\n-enum DT_SYMINSZ =      0x6ffffdfe;\n-enum DT_SYMINENT =     0x6ffffdff;\n-enum DT_VALRNGHI =     0x6ffffdff;\n-enum DT_ADDRRNGLO =    0x6ffffe00;\n-enum DT_GNU_HASH =     0x6ffffef5;\n-enum DT_TLSDESC_PLT =  0x6ffffef6;\n-enum DT_TLSDESC_GOT =  0x6ffffef7;\n-enum DT_GNU_CONFLICT = 0x6ffffef8;\n-enum DT_GNU_LIBLIST =  0x6ffffef9;\n-enum DT_CONFIG =       0x6ffffefa;\n-enum DT_DEPAUDIT =     0x6ffffefb;\n-enum DT_AUDIT =        0x6ffffefc;\n-enum DT_PLTPAD =       0x6ffffefd;\n-enum DT_MOVETAB =      0x6ffffefe;\n-enum DT_SYMINFO =      0x6ffffeff;\n-enum DT_ADDRRNGHI =    0x6ffffeff;\n-enum DT_RELACOUNT =    0x6ffffff9;\n-enum DT_RELCOUNT =     0x6ffffffa;\n-enum DT_FLAGS_1 =      0x6ffffffb;\n-enum DT_VERDEF =       0x6ffffffc;\n-enum DT_VERDEFNUM =    0x6ffffffd;\n-enum DT_VERNEED =      0x6ffffffe;\n-enum DT_VERNEEDNUM =   0x6fffffff;\n-enum DT_VERSYM =       0x6ffffff0;\n-enum DT_LOPROC =       0x70000000;\n-//enum DT_DEPRECATED_SPARC_REGISTER = 0x7000001;\n-enum DT_AUXILIARY =    0x7ffffffd;\n enum DT_USED =         0x7ffffffe;\n-enum DT_FILTER =       0x7fffffff;\n-enum DT_HIPROC =       0x7fffffff;\n-\n-enum DTF_1_PARINIT =   0x00000001;\n-enum DTF_1_CONFEXP =   0x00000002;\n-\n-enum DF_P1_LAZYLOAD =  0x00000001;\n-enum DF_P1_GROUPPERM=  0x00000002;\n \n-enum DF_1_NOW =        0x00000001;\n enum DF_1_BIND_NOW =   0x00000001;\n-enum DF_1_GLOBAL =     0x00000002;\n-enum DF_1_GROUP =      0x00000004;\n-enum DF_1_NODELETE =   0x00000008;\n-enum DF_1_LOADFLTR =   0x00000010;\n-enum DF_1_INITFIRST =  0x00000020;\n-enum DF_1_NOOPEN =     0x00000040;\n-enum DF_1_ORIGIN =     0x00000080;\n-enum DF_1_DIRECT =     0x00000100;\n-enum DF_1_TRANS =      0x00000200;\n-enum DF_1_INTERPOSE =  0x00000400;\n-enum DF_1_NODEFLIB =   0x00000800;\n-enum DF_1_NODUMP =     0x00001000;\n-enum DF_1_CONLFAT =    0x00002000;\n \n-enum DF_ORIGIN =       0x00000001;\n-enum DF_SYMBOLIC =     0x00000002;\n-enum DF_TEXTREL =      0x00000004;\n-enum DF_BIND_NOW =     0x00000008;\n-enum DF_STATIC_TLS =   0x00000010;\n-\n-enum VER_DEF_NONE =    0;\n-enum VER_DEF_CURRENT = 1;\n alias VER_NDX VER_DEF_IDX;\n \n-enum VER_FLG_BASE =    0x1;\n-enum VER_FLG_WEAK =    0x2;\n enum VER_FLG_INFO =    0x4;\n \n-enum VER_NDX_LOCAL =           0;\n-enum VER_NDX_GLOBAL =          1;\n enum VER_NDX_GIVEN =           2;\n enum VER_NDX_HIDDEN =      32768;\n+\n extern (D) pure @safe\n {\n     auto VER_NDX(V)(V v) { return v & ~(1u << 15); }\n }\n \n-enum VER_NEED_NONE   = 0;\n-enum VER_NEED_CURRENT = 1;\n enum VER_NEED_WEAK =    32768;\n enum VER_NEED_HIDDEN = VER_NDX_HIDDEN;\n alias VER_NDX VER_NEED_IDX;\n \n-/*\n-enum CA_SUNW_NULL =    0;\n-enum CA_SUNW_HW_1 =    1;\n-enum CA_SUNW_SF_1 =    2;\n-*/\n-\n enum VERSYM_HIDDEN =   0x8000;\n enum VERSYM_VERSION =  0x7fff;\n enum ELF_VER_CHR =     '@';\n-\n-enum SYMINFO_BT_SELF =         0xffff;\n-enum SYMINFO_BT_PARENT =       0xfffe;\n-//enum SYMINFO_BT_NONE =         0xfffd;\n-//enum SYMINFO_BT_EXTERN =       0xfffc;\n-enum SYMINFO_BT_LOWRESERVE =   0xff00;\n-\n-enum SYMINFO_FLG_DIRECT =      0x0001;\n-enum SYMINFO_FLG_PASSTHRU =    0x0002;\n-enum SYMINFO_FLG_COPY =        0x0004;\n-enum SYMINFO_FLG_LAZYLOAD =    0x0008;\n-//enum SYMINFO_FLG_DIRECTBIND =  0x0010;\n-//enum SYMINFO_FLG_NOEXTDIRECT = 0x0020;\n-//enum SYMINFO_FLG_FILTER =      0x0002;\n-//enum SYMINFO_FLG_AUXILIARY =   0x0040;\n-\n-enum SYMINFO_NONE =            0;\n-enum SYMINFO_CURRENT =         1;\n-enum SYMINFO_NUM =             2;\n-\n-enum GRP_COMDAT =              0x1;\n-\n-enum R_386_NONE =               0;\n-enum R_386_32 =                 1;\n-enum R_386_PC32 =               2;\n-enum R_386_GOT32 =              3;\n-enum R_386_PLT32 =              4;\n-enum R_386_COPY =               5;\n-enum R_386_GLOB_DAT =           6;\n-enum R_386_JMP_SLOT =           7;\n-enum R_386_RELATIVE =           8;\n-enum R_386_GOTOFF =             9;\n-enum R_386_GOTPC =              10;\n-enum R_386_TLS_TPOFF =          14;\n-enum R_386_TLS_IE =             15;\n-enum R_386_TLS_GOTIE =          16;\n-enum R_386_TLS_LE =             17;\n-enum R_386_TLS_GD =             18;\n-enum R_386_TLS_LDM =            19;\n-enum R_386_TLS_GD_32 =          24;\n-enum R_386_TLS_GD_PUSH =        25;\n-enum R_386_TLS_GD_CALL =        26;\n-enum R_386_TLS_GD_POP =         27;\n-enum R_386_TLS_LDM_32 =         28;\n-enum R_386_TLS_LDM_PUSH =       29;\n-enum R_386_TLS_LDM_CALL =       30;\n-enum R_386_TLS_LDM_POP =        31;\n-enum R_386_TLS_LDO_32 =         32;\n-enum R_386_TLS_IE_32 =          33;\n-enum R_386_TLS_LE_32 =          34;\n-enum R_386_TLS_DTPMOD32 =       35;\n-enum R_386_TLS_DTPOFF32 =       36;\n-enum R_386_TLS_TPOFF32 =        37;\n-enum R_386_IRELATIVE =          42;\n-\n-enum R_X86_64_NONE =            0;\n-enum R_X86_64_64 =              1;\n-enum R_X86_64_PC32 =            2;\n-enum R_X86_64_GOT32 =           3;\n-enum R_X86_64_PLT32 =           4;\n-enum R_X86_64_COPY =            5;\n-enum R_X86_64_GLOB_DAT =        6;\n-enum R_X86_64_JMP_SLOT =        7;\n-enum R_X86_64_RELATIVE =        8;\n-enum R_X86_64_GOTPCREL =        9;\n-enum R_X86_64_32 =              10;\n-enum R_X86_64_32S =             11;\n-enum R_X86_64_16 =              12;\n-enum R_X86_64_PC16 =            13;\n-enum R_X86_64_8 =               14;\n-enum R_X86_64_PC8 =             15;\n-enum R_X86_64_DTPMOD64 =        16;\n-enum R_X86_64_DTPOFF64 =        17;\n-enum R_X86_64_TPOFF64 =         18;\n-enum R_X86_64_TLSGD =           19;\n-enum R_X86_64_TLSLD =           20;\n-enum R_X86_64_DTPOFF32 =        21;\n-enum R_X86_64_GOTTPOFF =        22;\n-enum R_X86_64_TPOFF32 =         23;\n-enum R_X86_64_IRELATIVE =       37;"}, {"sha": "3a7b753adff87a0e354227113304fd4729d273b6", "filename": "libphobos/libdruntime/core/sys/posix/sys/socket.d", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643", "patch": "@@ -589,28 +589,31 @@ else version (Darwin)\n \n     struct cmsghdr\n     {\n-         socklen_t cmsg_len;\n-         int       cmsg_level;\n-         int       cmsg_type;\n+        socklen_t  cmsg_len;\n+        int        cmsg_level;\n+        int        cmsg_type;\n+    }\n+\n+\n+    extern (D)\n+    {\n+        socklen_t CMSG_ALIGN(socklen_t len) pure nothrow @nogc { return (len + socklen_t.sizeof - 1) & cast(socklen_t) (~(socklen_t.sizeof - 1)); }\n+        socklen_t CMSG_SPACE(socklen_t len) pure nothrow @nogc { return CMSG_ALIGN(len) + CMSG_ALIGN(cmsghdr.sizeof); }\n+        socklen_t CMSG_LEN(socklen_t len) pure nothrow @nogc { return CMSG_ALIGN(cmsghdr.sizeof) + len; }\n+\n+        inout(ubyte)*   CMSG_DATA( return scope inout(cmsghdr)* cmsg ) pure nothrow @nogc { return cast(ubyte*)( cmsg + 1 ); }\n+\n+        inout(cmsghdr)* CMSG_FIRSTHDR( inout(msghdr)* mhdr ) pure nothrow @nogc\n+        {\n+            return ( cast(socklen_t)mhdr.msg_controllen >= cmsghdr.sizeof ? cast(inout(cmsghdr)*) mhdr.msg_control : cast(inout(cmsghdr)*) null );\n+        }\n     }\n \n     enum : uint\n     {\n         SCM_RIGHTS = 0x01\n     }\n \n-    /+\n-    CMSG_DATA(cmsg)     ((unsigned char *)(cmsg) + \\\n-                         ALIGN(sizeof(struct cmsghdr)))\n-    CMSG_NXTHDR(mhdr, cmsg) \\\n-                        (((unsigned char *)(cmsg) + ALIGN((cmsg)->cmsg_len) + \\\n-                         ALIGN(sizeof(struct cmsghdr)) > \\\n-                         (unsigned char *)(mhdr)->msg_control +(mhdr)->msg_controllen) ? \\\n-                         (struct cmsghdr *)0 /* NULL */ : \\\n-                         (struct cmsghdr *)((unsigned char *)(cmsg) + ALIGN((cmsg)->cmsg_len)))\n-    CMSG_FIRSTHDR(mhdr) ((struct cmsghdr *)(mhdr)->msg_control)\n-    +/\n-\n     struct linger\n     {\n         int l_onoff;"}, {"sha": "687e7f7d513491eb873f5e3a3113600e6f8c60e5", "filename": "libphobos/libdruntime/core/sys/solaris/sys/elf.d", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fsolaris%2Fsys%2Felf.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "bb9e7ea024084f34845b6bb0d3f797f0a4fc67d4", "filename": "libphobos/libdruntime/core/sys/windows/objbase.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjbase.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjbase.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fobjbase.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "6db1db883c63876dc4e80fb4c528293c83df5e6d", "filename": "libphobos/libdruntime/core/sys/windows/unknwn.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Funknwn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Funknwn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Funknwn.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "1bbce3f858dac629e4135e704cd700c2071a1807", "filename": "libphobos/libdruntime/core/thread/osthread.d", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "9042a365242efbfd2b2c873d4f734ad11ceea825", "filename": "libphobos/libdruntime/core/thread/threadbase.d", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fthreadbase.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fthreadbase.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fthreadbase.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "3a88552f302d606a644800858d211cbf0319250b", "filename": "libphobos/libdruntime/object.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fobject.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Fobject.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fobject.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "96d9a804d7c67dba030eac31a84a3655aca23f50", "filename": "libphobos/libdruntime/rt/lifetime.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Frt%2Flifetime.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Flibdruntime%2Frt%2Flifetime.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Flifetime.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "3de142fe009125770bc6a307380d997deef474ec", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "94a2e7a001276651e6205c9265509a568ab9cdae", "filename": "libphobos/src/std/exception.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fexception.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fexception.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fexception.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "efc4ef7f74a7620e91cd36adf4cc342e22cabfc5", "filename": "libphobos/src/std/experimental/logger/core.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fexperimental%2Flogger%2Fcore.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fexperimental%2Flogger%2Fcore.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fexperimental%2Flogger%2Fcore.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "daf2cecbebe25cbdb45038c998954364dac24c1a", "filename": "libphobos/src/std/math/exponential.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fmath%2Fexponential.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fmath%2Fexponential.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fmath%2Fexponential.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "7bff07e86d489019e309d999422b9414ae2d3fb1", "filename": "libphobos/src/std/math/hardware.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fmath%2Fhardware.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fmath%2Fhardware.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fmath%2Fhardware.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "92af9a9a16a74865ecf45a91fe7a04568d4efe99", "filename": "libphobos/src/std/outbuffer.d", "status": "modified", "additions": 61, "deletions": 10, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Foutbuffer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Foutbuffer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Foutbuffer.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "6ec798581947070092b9394e316b849652bdd3da", "filename": "libphobos/src/std/socket.d", "status": "modified", "additions": 38, "deletions": 32, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fsocket.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "869c36fdfe81425aa72abe5f01241189e9e93f4a", "filename": "libphobos/src/std/sumtype.d", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fsumtype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Fsumtype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fsumtype.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "cc08ea638be82a133c529c1fff956cfe41a77804", "filename": "libphobos/src/std/traits.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Ftraits.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "8a3e22f74a95b20370f85e650ff6d234eb66c2f4", "filename": "libphobos/src/std/typecons.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Ftypecons.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Fsrc%2Fstd%2Ftypecons.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Ftypecons.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}, {"sha": "ee2dcee92e4efc212ed127ba1a66e4330318a94d", "filename": "libphobos/testsuite/libphobos.init_fini/custom_gc.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Ftestsuite%2Flibphobos.init_fini%2Fcustom_gc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9927aae076200bb7ba3f22c33b0a7c97c5643/libphobos%2Ftestsuite%2Flibphobos.init_fini%2Fcustom_gc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flibphobos.init_fini%2Fcustom_gc.d?ref=5eb9927aae076200bb7ba3f22c33b0a7c97c5643"}]}