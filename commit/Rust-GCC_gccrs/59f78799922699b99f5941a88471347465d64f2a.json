{"sha": "59f78799922699b99f5941a88471347465d64f2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmNzg3OTk5MjI2OTliOTlmNTk0MWE4ODQ3MTM0NzQ2NWQ2NGYyYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T11:10:13Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T11:10:13Z"}, "message": "S/390: arch13: vector float-int conversion builtins\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390-builtin-types.def: New builtin function type\n\tdefinitions. Remove unused types.\n\t* config/s390/s390-builtins.def (s390_vcdgb, s390_vcdlgb)\n\t(s390_vcgdb, s390_vclgdb): Remove low-level builtin definitions.\n\t(s390_vec_float, s390_vec_signed, s390_vec_unsigned): New\n\toverloaded builtins.\n\t(s390_vcefb, s390_vcdgb, s390_vcelfb, s390_vcdlgb, s390_vcfeb)\n\t(s390_vcgdb, s390_vclfeb, s390_vclgdb): New low-level builtins.\n\t* config/s390/vecintrin.h (vec_float): New builtin macro definition.\n\t(vec_double, vec_signed, vec_unsigned): Define to use the new\n\toverloaded builtins.\n\t* config/s390/vx-builtins.md (\"vec_double_s64\", \"vec_double_u64\"):\n\tRemove expanders.\n\ngcc/testsuite/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/zvector/vec-double-compile.c: New test.\n\t* gcc.target/s390/zvector/vec-float-compile.c: New test.\n\t* gcc.target/s390/zvector/vec-signed-compile.c: New test.\n\t* gcc.target/s390/zvector/vec-unsigned-compile.c: New test.\n\nFrom-SVN: r270091", "tree": {"sha": "6ffb56b2e0808122abf7ac9cae44e43d4fe90fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ffb56b2e0808122abf7ac9cae44e43d4fe90fe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f78799922699b99f5941a88471347465d64f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f78799922699b99f5941a88471347465d64f2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f78799922699b99f5941a88471347465d64f2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f78799922699b99f5941a88471347465d64f2a/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49adc4618014f627ea2420de215899c038c976ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49adc4618014f627ea2420de215899c038c976ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49adc4618014f627ea2420de215899c038c976ec"}], "stats": {"total": 289, "additions": 255, "deletions": 34}, "files": [{"sha": "c7a6203e8dea39a2cc239828432aa6c3676723fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -1,3 +1,19 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390-builtin-types.def: New builtin function type\n+\tdefinitions. Remove unused types.\n+\t* config/s390/s390-builtins.def (s390_vcdgb, s390_vcdlgb)\n+\t(s390_vcgdb, s390_vclgdb): Remove low-level builtin definitions.\n+\t(s390_vec_float, s390_vec_signed, s390_vec_unsigned): New\n+\toverloaded builtins.\n+\t(s390_vcefb, s390_vcdgb, s390_vcelfb, s390_vcdlgb, s390_vcfeb)\n+\t(s390_vcgdb, s390_vclfeb, s390_vclgdb): New low-level builtins.\n+\t* config/s390/vecintrin.h (vec_float): New builtin macro definition.\n+\t(vec_double, vec_signed, vec_unsigned): Define to use the new\n+\toverloaded builtins.\n+\t* config/s390/vx-builtins.md (\"vec_double_s64\", \"vec_double_u64\"):\n+\tRemove expanders.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390-builtin-types.def: New builtin function type"}, {"sha": "53398a98e9e12a9afd7b6d2373a5a085e244db7c", "filename": "gcc/config/s390/s390-builtin-types.def", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -140,11 +140,13 @@ DEF_FN_TYPE_1 (BT_FN_UV2DI_ULONGLONGCONSTPTR, BT_UV2DI, BT_ULONGLONGCONSTPTR)\n DEF_FN_TYPE_1 (BT_FN_UV2DI_USHORT, BT_UV2DI, BT_USHORT)\n DEF_FN_TYPE_1 (BT_FN_UV2DI_UV2DI, BT_UV2DI, BT_UV2DI)\n DEF_FN_TYPE_1 (BT_FN_UV2DI_UV4SI, BT_UV2DI, BT_UV4SI)\n+DEF_FN_TYPE_1 (BT_FN_UV2DI_V2DF, BT_UV2DI, BT_V2DF)\n DEF_FN_TYPE_1 (BT_FN_UV4SI_UINT, BT_UV4SI, BT_UINT)\n DEF_FN_TYPE_1 (BT_FN_UV4SI_UINTCONSTPTR, BT_UV4SI, BT_UINTCONSTPTR)\n DEF_FN_TYPE_1 (BT_FN_UV4SI_USHORT, BT_UV4SI, BT_USHORT)\n DEF_FN_TYPE_1 (BT_FN_UV4SI_UV4SI, BT_UV4SI, BT_UV4SI)\n DEF_FN_TYPE_1 (BT_FN_UV4SI_UV8HI, BT_UV4SI, BT_UV8HI)\n+DEF_FN_TYPE_1 (BT_FN_UV4SI_V4SF, BT_UV4SI, BT_V4SF)\n DEF_FN_TYPE_1 (BT_FN_UV8HI_USHORT, BT_UV8HI, BT_USHORT)\n DEF_FN_TYPE_1 (BT_FN_UV8HI_USHORTCONSTPTR, BT_UV8HI, BT_USHORTCONSTPTR)\n DEF_FN_TYPE_1 (BT_FN_UV8HI_UV16QI, BT_UV8HI, BT_UV16QI)\n@@ -162,13 +164,17 @@ DEF_FN_TYPE_1 (BT_FN_V2DF_V2DI, BT_V2DF, BT_V2DI)\n DEF_FN_TYPE_1 (BT_FN_V2DF_V4SF, BT_V2DF, BT_V4SF)\n DEF_FN_TYPE_1 (BT_FN_V2DI_SHORT, BT_V2DI, BT_SHORT)\n DEF_FN_TYPE_1 (BT_FN_V2DI_V16QI, BT_V2DI, BT_V16QI)\n+DEF_FN_TYPE_1 (BT_FN_V2DI_V2DF, BT_V2DI, BT_V2DF)\n DEF_FN_TYPE_1 (BT_FN_V2DI_V2DI, BT_V2DI, BT_V2DI)\n DEF_FN_TYPE_1 (BT_FN_V2DI_V4SI, BT_V2DI, BT_V4SI)\n DEF_FN_TYPE_1 (BT_FN_V2DI_V8HI, BT_V2DI, BT_V8HI)\n DEF_FN_TYPE_1 (BT_FN_V4SF_FLT, BT_V4SF, BT_FLT)\n DEF_FN_TYPE_1 (BT_FN_V4SF_FLTCONSTPTR, BT_V4SF, BT_FLTCONSTPTR)\n+DEF_FN_TYPE_1 (BT_FN_V4SF_UV4SI, BT_V4SF, BT_UV4SI)\n DEF_FN_TYPE_1 (BT_FN_V4SF_V4SF, BT_V4SF, BT_V4SF)\n+DEF_FN_TYPE_1 (BT_FN_V4SF_V4SI, BT_V4SF, BT_V4SI)\n DEF_FN_TYPE_1 (BT_FN_V4SI_SHORT, BT_V4SI, BT_SHORT)\n+DEF_FN_TYPE_1 (BT_FN_V4SI_V4SF, BT_V4SI, BT_V4SF)\n DEF_FN_TYPE_1 (BT_FN_V4SI_V4SI, BT_V4SI, BT_V4SI)\n DEF_FN_TYPE_1 (BT_FN_V4SI_V8HI, BT_V4SI, BT_V8HI)\n DEF_FN_TYPE_1 (BT_FN_V8HI_SHORT, BT_V8HI, BT_SHORT)\n@@ -296,7 +302,6 @@ DEF_FN_TYPE_3 (BT_FN_UV16QI_UV8HI_UV8HI_INTPTR, BT_UV16QI, BT_UV8HI, BT_UV8HI, B\n DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_ULONGLONG_INT, BT_UV2DI, BT_UV2DI, BT_ULONGLONG, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UV2DI_INT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_UV2DI_UV4SI_UV4SI_UV2DI, BT_UV2DI, BT_UV4SI, BT_UV4SI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_V2DF_INT_INT, BT_UV2DI, BT_V2DF, BT_INT, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_UV4SI_UV2DI_UV2DI_INTPTR, BT_UV4SI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UINT_INT, BT_UV4SI, BT_UV4SI, BT_UINT, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UV4SI_INT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n@@ -313,15 +318,12 @@ DEF_FN_TYPE_3 (BT_FN_V16QI_UV16QI_UV16QI_INTPTR, BT_V16QI, BT_UV16QI, BT_UV16QI,\n DEF_FN_TYPE_3 (BT_FN_V16QI_V16QI_V16QI_INTPTR, BT_V16QI, BT_V16QI, BT_V16QI, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V16QI_V16QI_V16QI_V16QI, BT_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n DEF_FN_TYPE_3 (BT_FN_V16QI_V8HI_V8HI_INTPTR, BT_V16QI, BT_V8HI, BT_V8HI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_UV2DI_INT_INT, BT_V2DF, BT_UV2DI, BT_INT, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_DBL_INT, BT_V2DF, BT_V2DF, BT_DBL, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_UCHAR_UCHAR, BT_V2DF, BT_V2DF, BT_UCHAR, BT_UCHAR)\n DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_UINT_UINT, BT_V2DF, BT_V2DF, BT_UINT, BT_UINT)\n DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_V2DF_INT, BT_V2DF, BT_V2DF, BT_V2DF, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_V2DF_V2DF, BT_V2DF, BT_V2DF, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_V2DI_INT_INT, BT_V2DF, BT_V2DI, BT_INT, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_V2DI_UV2DI_UV2DI_INTPTR, BT_V2DI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_INT_INT, BT_V2DI, BT_V2DF, BT_INT, BT_INT)\n DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_INT_INTPTR, BT_V2DI, BT_V2DF, BT_INT, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_V2DF_INTPTR, BT_V2DI, BT_V2DF, BT_V2DF, BT_INTPTR)\n DEF_FN_TYPE_3 (BT_FN_V2DI_V2DI_V2DI_INTPTR, BT_V2DI, BT_V2DI, BT_V2DI, BT_INTPTR)\n@@ -569,6 +571,7 @@ DEF_OV_TYPE (BT_OV_UV2DI_UV4SI, BT_UV2DI, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_UV2DI_UV4SI_UV4SI, BT_UV2DI, BT_UV4SI, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_UV2DI_UV4SI_UV4SI_UV2DI, BT_UV2DI, BT_UV4SI, BT_UV4SI, BT_UV2DI)\n DEF_OV_TYPE (BT_OV_UV2DI_UV8HI_UV8HI, BT_UV2DI, BT_UV8HI, BT_UV8HI)\n+DEF_OV_TYPE (BT_OV_UV2DI_V2DF, BT_UV2DI, BT_V2DF)\n DEF_OV_TYPE (BT_OV_UV2DI_V2DI, BT_UV2DI, BT_V2DI)\n DEF_OV_TYPE (BT_OV_UV4SI_BV4SI_BV4SI, BT_UV4SI, BT_BV4SI, BT_BV4SI)\n DEF_OV_TYPE (BT_OV_UV4SI_BV4SI_BV4SI_INTPTR, BT_UV4SI, BT_BV4SI, BT_BV4SI, BT_INTPTR)\n@@ -607,6 +610,7 @@ DEF_OV_TYPE (BT_OV_UV4SI_UV8HI, BT_UV4SI, BT_UV8HI)\n DEF_OV_TYPE (BT_OV_UV4SI_UV8HI_UV8HI, BT_UV4SI, BT_UV8HI, BT_UV8HI)\n DEF_OV_TYPE (BT_OV_UV4SI_UV8HI_UV8HI_UV4SI, BT_UV4SI, BT_UV8HI, BT_UV8HI, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_UV4SI_V2DI_V2DI, BT_UV4SI, BT_V2DI, BT_V2DI)\n+DEF_OV_TYPE (BT_OV_UV4SI_V4SF, BT_UV4SI, BT_V4SF)\n DEF_OV_TYPE (BT_OV_UV4SI_V4SI, BT_UV4SI, BT_V4SI)\n DEF_OV_TYPE (BT_OV_UV8HI_BV8HI_BV8HI, BT_UV8HI, BT_BV8HI, BT_BV8HI)\n DEF_OV_TYPE (BT_OV_UV8HI_BV8HI_BV8HI_INTPTR, BT_UV8HI, BT_BV8HI, BT_BV8HI, BT_INTPTR)\n@@ -710,6 +714,7 @@ DEF_OV_TYPE (BT_OV_V2DI_LONGLONG_LONGLONG, BT_V2DI, BT_LONGLONG, BT_LONGLONG)\n DEF_OV_TYPE (BT_OV_V2DI_LONGLONG_V2DI_INT, BT_V2DI, BT_LONGLONG, BT_V2DI, BT_INT)\n DEF_OV_TYPE (BT_OV_V2DI_LONG_LONGLONGCONSTPTR, BT_V2DI, BT_LONG, BT_LONGLONGCONSTPTR)\n DEF_OV_TYPE (BT_OV_V2DI_V16QI, BT_V2DI, BT_V16QI)\n+DEF_OV_TYPE (BT_OV_V2DI_V2DF, BT_V2DI, BT_V2DF)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI, BT_V2DI, BT_V2DI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_BV2DI, BT_V2DI, BT_V2DI, BT_BV2DI)\n DEF_OV_TYPE (BT_OV_V2DI_V2DI_UCHAR, BT_V2DI, BT_V2DI, BT_UCHAR)\n@@ -739,6 +744,7 @@ DEF_OV_TYPE (BT_OV_V4SF_FLTCONSTPTR_USHORT, BT_V4SF, BT_FLTCONSTPTR, BT_USHORT)\n DEF_OV_TYPE (BT_OV_V4SF_FLT_INT, BT_V4SF, BT_FLT, BT_INT)\n DEF_OV_TYPE (BT_OV_V4SF_FLT_V4SF_INT, BT_V4SF, BT_FLT, BT_V4SF, BT_INT)\n DEF_OV_TYPE (BT_OV_V4SF_LONG_FLTCONSTPTR, BT_V4SF, BT_LONG, BT_FLTCONSTPTR)\n+DEF_OV_TYPE (BT_OV_V4SF_UV4SI, BT_V4SF, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF, BT_V4SF, BT_V4SF)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_BV4SI, BT_V4SF, BT_V4SF, BT_BV4SI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_UCHAR, BT_V4SF, BT_V4SF, BT_UCHAR)\n@@ -753,6 +759,7 @@ DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_UV16QI, BT_V4SF, BT_V4SF, BT_V4SF, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_UV4SI, BT_V4SF, BT_V4SF, BT_V4SF, BT_UV4SI)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SF_V4SF, BT_V4SF, BT_V4SF, BT_V4SF, BT_V4SF)\n DEF_OV_TYPE (BT_OV_V4SF_V4SF_V4SI, BT_V4SF, BT_V4SF, BT_V4SI)\n+DEF_OV_TYPE (BT_OV_V4SF_V4SI, BT_V4SF, BT_V4SI)\n DEF_OV_TYPE (BT_OV_V4SI_BV4SI_V4SI, BT_V4SI, BT_BV4SI, BT_V4SI)\n DEF_OV_TYPE (BT_OV_V4SI_INT, BT_V4SI, BT_INT)\n DEF_OV_TYPE (BT_OV_V4SI_INTCONSTPTR, BT_V4SI, BT_INTCONSTPTR)\n@@ -764,6 +771,7 @@ DEF_OV_TYPE (BT_OV_V4SI_LONG_INTCONSTPTR, BT_V4SI, BT_LONG, BT_INTCONSTPTR)\n DEF_OV_TYPE (BT_OV_V4SI_UV4SI_V4SI_V4SI, BT_V4SI, BT_UV4SI, BT_V4SI, BT_V4SI)\n DEF_OV_TYPE (BT_OV_V4SI_V2DI_V2DI, BT_V4SI, BT_V2DI, BT_V2DI)\n DEF_OV_TYPE (BT_OV_V4SI_V2DI_V2DI_INTPTR, BT_V4SI, BT_V2DI, BT_V2DI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_V4SI_V4SF, BT_V4SI, BT_V4SF)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI, BT_V4SI, BT_V4SI)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_BV4SI, BT_V4SI, BT_V4SI, BT_BV4SI)\n DEF_OV_TYPE (BT_OV_V4SI_V4SI_INTPTR, BT_V4SI, BT_V4SI, BT_INTPTR)"}, {"sha": "fbf7d9f50e84114b4c8da973b670ec9c210bf9ae", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -2792,12 +2792,36 @@ OB_DEF_VAR (s390_vfi_dbl,               s390_vfidb,         0,\n \n B_DEF      (s390_vec_ctd_s64,           vec_ctd_s64,        0,                  B_VX,               O2_U3,              BT_FN_V2DF_V2DI_INT)                     /* vcdgb */\n B_DEF      (s390_vec_ctd_u64,           vec_ctd_u64,        0,                  B_VX,               O2_U3,              BT_FN_V2DF_UV2DI_INT)                    /* vcdlgb */\n-B_DEF      (s390_vcdgb,                 vcdgb,              0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DF_V2DI_INT_INT)\n-B_DEF      (s390_vcdlgb,                vcdlgb,             0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DF_UV2DI_INT_INT)\n B_DEF      (s390_vec_ctsl,              vec_ctsl,           0,                  B_VX,               O2_U3,              BT_FN_V2DI_V2DF_INT)                     /* vcgdb */\n B_DEF      (s390_vec_ctul,              vec_ctul,           0,                  B_VX,               O2_U3,              BT_FN_UV2DI_V2DF_INT)                    /* vclgdb */\n-B_DEF      (s390_vcgdb,                 vcgdb,              0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DI_V2DF_INT_INT)\n-B_DEF      (s390_vclgdb,                vclgdb,             0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_UV2DI_V2DF_INT_INT)\n+\n+\n+OB_DEF     (s390_vec_float,             s390_vec_float_s32, s390_vec_float_u32, B_VXE2,             BT_FN_OV4SI_OV4SI)\n+OB_DEF_VAR (s390_vec_float_s32,         s390_vcefb,         0,                  0,                  BT_OV_V4SF_V4SI)\n+OB_DEF_VAR (s390_vec_float_u32,         s390_vcelfb,        0,                  0,                  BT_OV_V4SF_UV4SI)\n+\n+OB_DEF     (s390_vec_double,            s390_vec_double_s64,s390_vec_double_u64,B_VX,               BT_FN_OV4SI_OV4SI)\n+OB_DEF_VAR (s390_vec_double_s64,        s390_vcdgb,         0,                  0,                  BT_OV_V2DF_V2DI)\n+OB_DEF_VAR (s390_vec_double_u64,        s390_vcdlgb,        0,                  0,                  BT_OV_V2DF_UV2DI)\n+\n+B_DEF      (s390_vcefb,                 floatv4siv4sf2,     0,                  B_VXE2,             O2_U4 | O3_U3,      BT_FN_V4SF_V4SI)\n+B_DEF      (s390_vcdgb,                 floatv2div2df2,     0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DF_V2DI)\n+B_DEF      (s390_vcelfb,                floatunsv4siv4sf2,  0,                  B_VXE2,             O2_U4 | O3_U3,      BT_FN_V4SF_UV4SI)\n+B_DEF      (s390_vcdlgb,                floatunsv2div2df2,  0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DF_UV2DI)\n+\n+OB_DEF     (s390_vec_signed,            s390_vec_signed_flt,s390_vec_signed_dbl,B_VX,               BT_FN_OV4SI_OV4SI)\n+OB_DEF_VAR (s390_vec_signed_flt,        s390_vcfeb,         0,                  B_VXE2,             BT_OV_V4SI_V4SF)\n+OB_DEF_VAR (s390_vec_signed_dbl,        s390_vcgdb,         0,                  0,                  BT_OV_V2DI_V2DF)\n+\n+OB_DEF     (s390_vec_unsigned,          s390_vec_unsigned_flt,s390_vec_unsigned_dbl,B_VX,           BT_FN_OV4SI_OV4SI)\n+OB_DEF_VAR (s390_vec_unsigned_flt,      s390_vclfeb,        0,                B_VXE2,             BT_OV_UV4SI_V4SF)\n+OB_DEF_VAR (s390_vec_unsigned_dbl,      s390_vclgdb,        0,                0,                  BT_OV_UV2DI_V2DF)\n+\n+B_DEF      (s390_vcfeb,                 fix_truncv4sfv4si2, 0,                  B_VXE2,             O2_U4 | O3_U3,      BT_FN_V4SI_V4SF)\n+B_DEF      (s390_vcgdb,                 fix_truncv2dfv2di2, 0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DI_V2DF)\n+B_DEF      (s390_vclfeb,                fixuns_truncv4sfv4si2, 0,               B_VXE2,             O2_U4 | O3_U3,      BT_FN_UV4SI_V4SF)\n+B_DEF      (s390_vclgdb,                fixuns_truncv2dfv2di2, 0,               B_VX,               O2_U4 | O3_U3,      BT_FN_UV2DI_V2DF)\n+\n B_DEF      (s390_vfisb,                 vec_fpintv4sf,      0,                  B_VXE,              O2_U4 | O3_U3,      BT_FN_V4SF_V4SF_UCHAR_UCHAR)\n B_DEF      (s390_vfidb,                 vec_fpintv2df,      0,                  B_VX,               O2_U4 | O3_U3,      BT_FN_V2DF_V2DF_UCHAR_UCHAR)\n B_DEF      (s390_vec_ld2f,              vec_ld2f,           0,                  B_VX,               0,                  BT_FN_V2DF_FLTCONSTPTR)                  /* vldeb */\n@@ -2815,13 +2839,6 @@ B_DEF      (s390_vfnmsdb,               neg_fmsv2df4,       0,\n B_DEF      (s390_vfsqsb,                sqrtv4sf2,          0,                  B_VXE,              0,                  BT_FN_V4SF_V4SF)\n B_DEF      (s390_vfsqdb,                sqrtv2df2,          0,                  B_VX,               0,                  BT_FN_V2DF_V2DF)\n \n-OB_DEF     (s390_vec_double,            s390_vec_double_s64,s390_vec_double_u64,B_VX,               BT_FN_OV4SI_OV4SI)\n-OB_DEF_VAR (s390_vec_double_s64,        s390_vec_double_s64,0,                  0,                  BT_OV_V2DF_V2DI)\n-OB_DEF_VAR (s390_vec_double_u64,        s390_vec_double_u64,0,                  0,                  BT_OV_V2DF_UV2DI)\n-\n-B_DEF      (s390_vec_double_s64,        vec_double_s64,     0,                  B_INT | B_VX,       0,                  BT_FN_V2DF_V2DI)  /* vcdgb */\n-B_DEF      (s390_vec_double_u64,        vec_double_u64,     0,                  B_INT | B_VX,       0,                  BT_FN_V2DF_UV2DI) /* vcdlgb */\n-\n B_DEF      (s390_vflls,                 vflls,              0,                  B_VX,               0,                  BT_FN_V2DF_V4SF)                         /* vldeb */\n B_DEF      (s390_vflrd,                 vflrd,              0,                  B_VX,               O2_U4 | O3_U4,      BT_FN_V4SF_V2DF_INT_INT)                 /* vledb */\n "}, {"sha": "21375970c9119dfefeaa7ced30d5ffc40a0279f0", "filename": "gcc/config/s390/vecintrin.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvecintrin.h?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -109,8 +109,6 @@ __lcbb(const void *ptr, int bndry)\n #define vec_rint(X)   __builtin_s390_vfi((X), 0, 0)\n #define vec_roundc(X) __builtin_s390_vfi((X), 4, 0)\n #define vec_round(X)  __builtin_s390_vfi((X), 4, 4)\n-#define vec_signed(X) __builtin_s390_vcgdb((X), 0, 0)\n-#define vec_unsigned(X) __builtin_s390_vclgdb((X), 0, 0)\n #define vec_doublee(X) __builtin_s390_vfll((X))\n #define vec_floate(X) __builtin_s390_vflr((X), 0, 0)\n #define vec_load_len_r(X,Y) __builtin_s390_vlrl((Y),(X))\n@@ -315,9 +313,12 @@ __lcbb(const void *ptr, int bndry)\n #define vec_ctd_u64 __builtin_s390_vec_ctd_u64\n #define vec_ctsl __builtin_s390_vec_ctsl\n #define vec_ctul __builtin_s390_vec_ctul\n+#define vec_float __builtin_s390_vec_float\n+#define vec_double __builtin_s390_vec_double\n+#define vec_signed __builtin_s390_vec_signed\n+#define vec_unsigned __builtin_s390_vec_unsigned\n #define vec_ld2f __builtin_s390_vec_ld2f\n #define vec_st2f __builtin_s390_vec_st2f\n-#define vec_double __builtin_s390_vec_double\n #define vec_madd __builtin_s390_vec_madd\n #define vec_msub __builtin_s390_vec_msub\n #define vec_nmadd __builtin_s390_vec_nmadd"}, {"sha": "22189ff24147e2467afe22572e561f7a6620f521", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -2125,22 +2125,6 @@\n   \"<vw>fche<sdx>bs\\t%v2,%v0,%v1\"\n   [(set_attr \"op_type\" \"VRR\")])\n \n-(define_expand \"vec_double_s64\"\n-  [(set (match_operand:V2DF               0 \"register_operand\")\n-\t(unspec:V2DF [(match_operand:V2DI 1 \"register_operand\")\n-\t\t      (const_int VEC_INEXACT)\n-\t\t      (const_int VEC_RND_CURRENT)]\n-\t\t     UNSPEC_VEC_VCDGB))]\n-  \"TARGET_VX\")\n-\n-(define_expand \"vec_double_u64\"\n-  [(set (match_operand:V2DF               0 \"register_operand\")\n-\t(unspec:V2DF [(match_operand:V2DI 1 \"register_operand\")\n-\t\t      (const_int VEC_INEXACT)\n-\t\t      (const_int VEC_RND_CURRENT)]\n-\t\t     UNSPEC_VEC_VCDLGB))]\n-  \"TARGET_VX\")\n-\n \n (define_insn \"vfmin<mode>\"\n   [(set (match_operand:VF_HW                0 \"register_operand\" \"=v\")"}, {"sha": "25b8acb0a01c82c3aaf4ba2072d59af15c24a154", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -1,3 +1,10 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/zvector/vec-double-compile.c: New test.\n+\t* gcc.target/s390/zvector/vec-float-compile.c: New test.\n+\t* gcc.target/s390/zvector/vec-signed-compile.c: New test.\n+\t* gcc.target/s390/zvector/vec-unsigned-compile.c: New test.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/zvector/vec-search-string-cc-1.c: New test."}, {"sha": "0a70b095b8815ed53a4a56a4e2331f21f8550495", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-double-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector double\n+vcdgb (vector signed long long a)\n+{\n+  return vec_double (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcdgb.*\\n\\tvcdgb.*floatv2div2df2\" 1 } } */\n+\n+vector double\n+vcdlgb (vector unsigned long long a)\n+{\n+  return vec_double (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcdlgb.*\\n\\tvcdlgb.*floatunsv2div2df2\" 1 } } */\n+\n+vector double\n+vcdgb_mem (vector signed long long *a)\n+{\n+  return vec_double (*a);\n+}\n+\n+vector double\n+vcdlgb_mem (vector unsigned long long *a)\n+{\n+  return vec_double (*a);\n+}\n+\n+vector double\n+vcdgb_imm ()\n+{\n+  return vec_double ((vector signed long long) { 1, -2 });\n+}\n+\n+vector double\n+vcdlgb_imm ()\n+{\n+  return vec_double ((vector unsigned long long){ 1, 2 });\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcdgb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcdlgb\\t\" 3 } } */"}, {"sha": "a591e23872e4075930a89660a8675fe5ea897e6b", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-float-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector float\n+vcefb (vector signed int a)\n+{\n+  return vec_float (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcefb.*\\n\\tvcefb.*floatv4siv4sf2\" 1 } } */\n+\n+vector float\n+vcelfb (vector unsigned int a)\n+{\n+  return vec_float (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcelfb.*\\n\\tvcelfb.*floatunsv4siv4sf2\" 1 } } */\n+\n+vector float\n+vcefb_mem (vector signed int *a)\n+{\n+  return vec_float (*a);\n+}\n+\n+vector float\n+vcelfb_mem (vector unsigned int *a)\n+{\n+  return vec_float (*a);\n+}\n+\n+vector float\n+vcefb_imm ()\n+{\n+  return vec_float ((vector signed int) { 1, -2 });\n+}\n+\n+vector float\n+vcelfb_imm ()\n+{\n+  return vec_float ((vector unsigned int){ 1, 2 });\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcefb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcelfb\\t\" 3 } } */"}, {"sha": "9814cc5d74d2d2d07e8c09c1a9f7581761e14fa1", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-signed-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector signed int\n+vcfeb (vector float a)\n+{\n+  return vec_signed (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcfeb.*\\n\\tvcfeb.*fix_truncv4sfv4si2\" 1 } } */\n+\n+vector signed long long\n+vcgdb (vector double a)\n+{\n+  return vec_signed (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcgdb.*\\n\\tvcgdb.*fix_truncv2dfv2di2\" 1 } } */\n+\n+vector signed int\n+vcfeb_mem (vector float *a)\n+{\n+  return vec_signed (*a);\n+}\n+\n+vector signed long long\n+vcgdb_mem (vector double *a)\n+{\n+  return vec_signed (*a);\n+}\n+\n+vector signed int\n+vcfeb_imm ()\n+{\n+  return vec_signed ((vector float) { 1.0f, 2.0f });\n+}\n+\n+vector signed long long\n+vcgdb_imm ()\n+{\n+  return vec_signed ((vector double){ 1.0, 2.0 });\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcfeb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcgdb\\t\" 3 } } */"}, {"sha": "1eed284adffa92f80237be07b32b30c3cf56289d", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-unsigned-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f78799922699b99f5941a88471347465d64f2a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c?ref=59f78799922699b99f5941a88471347465d64f2a", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector -fno-asynchronous-unwind-tables -dp\" } */\n+\n+#include <vecintrin.h>\n+\n+vector unsigned int\n+vclfeb (vector float a)\n+{\n+  return vec_unsigned (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclfeb.*\\n\\tvclfeb.*fixuns_truncv4sfv4si2\" 1 } } */\n+\n+vector unsigned long long\n+vclgdb (vector double a)\n+{\n+  return vec_unsigned (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclgdb.*\\n\\tvclgdb.*fixuns_truncv2dfv2di2\" 1 } } */\n+\n+vector unsigned int\n+vclfeb_mem (vector float *a)\n+{\n+  return vec_unsigned (*a);\n+}\n+\n+vector unsigned long long\n+vclgdb_mem (vector double *a)\n+{\n+  return vec_unsigned (*a);\n+}\n+\n+vector unsigned int\n+vclfeb_imm ()\n+{\n+  return vec_unsigned ((vector float) { 1.0f, 2.0f });\n+}\n+\n+vector unsigned long long\n+vclgdb_imm ()\n+{\n+  return vec_unsigned ((vector double){ 1.0, 2.0 });\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclfeb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vclgdb\\t\" 3 } } */"}]}