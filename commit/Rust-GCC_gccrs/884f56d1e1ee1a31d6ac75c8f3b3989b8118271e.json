{"sha": "884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0ZjU2ZDFlMWVlMWEzMWQ2YWM3NWM4ZjNiMzk4OWI4MTE4MjcxZQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-01-02T12:51:57Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-01-02T12:51:57Z"}, "message": "re PR target/51345 ([avr] Devices with 8-bit SP need their own multilib(s))\n\ncontrib/\n\tPR target/51345\n\t* gcc_update (files_and_dependencies): Add\n\tgcc/config/avr/t-multilib, gcc/config/avr/multilib.h.\n\t\nlibgcc/\n\tPR target/51345\n\t* config/avr/lib1funcs.S: Remove FIXME comments.\n\t(SPEED_DIV): Depend on __AVR_HAVE_8BIT_SP__.\ngcc/\t\n\tPR target/51345\n\t* config.gcc (tm_file target=avr]): Add avr/avr-multilib.h\n\t(tmake_file target=avr): Add avr/t-multilib.\n\n\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use AVR_HAVE_8BIT_SP\n\tto built-in define __AVR_HAVE_8BIT_SP__, __AVR_HAVE_16BIT_SP__.\n\t* config/avr/genmultilib.awk: New file.\n\t* config/avr/t-multilib: New auto-generated file.\n\t* config/avr/multilib.h: New auto-generated file.\n\t* config/avr/t-avr (AVR_MCUS): New variable.\n\t(genopt.sh): Use it.\n\t(s-mlib): Depend on t-multilib.\n\t(t-multilib, multilib.h): New dependencies.\n\t(s-avr-mlib): New rule to build t-multilib, multilib.h from AVR_MCUS.\n\t(MULTILIB_OPTIONS): Remove.\n\t(MULTILIB_MATCHES): Remove.\n\t(MULTILIB_DIRNAMES): Remove.\n\t(MULTILIB_EXCEPTIONS): Remove:\n\t* config/avr/genopt.sh: Don't use hard coded file name;\n\tpass AVR_MCUS from t-avr instead.\n\nFrom-SVN: r182797", "tree": {"sha": "09faf9ffade22c526948920809d1a98fde9264e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09faf9ffade22c526948920809d1a98fde9264e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94fae14bf8aa693c31a8d19febfffd048edb9535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fae14bf8aa693c31a8d19febfffd048edb9535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fae14bf8aa693c31a8d19febfffd048edb9535"}], "stats": {"total": 808, "additions": 641, "deletions": 167}, "files": [{"sha": "94aef3d21098325569ad7a3e954397245f777efa", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -1,3 +1,9 @@\n+2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/51345\n+\t* gcc_update (files_and_dependencies): Add\n+\tgcc/config/avr/t-multilib, gcc/config/avr/multilib.h.\n+\n 2011-11-29  DJ Delorie  <dj@redhat.com>\n \n \t* config-list.mk (LIST): Add rl78-elf."}, {"sha": "364a1a240980aa5223af055fc8a2c7669c67da63", "filename": "contrib/gcc_update", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -82,6 +82,8 @@ gcc/fixinc/fixincl.x: gcc/fixinc/fixincl.tpl gcc/fixinc/inclhack.def\n gcc/config/arm/arm-tune.md: gcc/config/arm/arm-cores.def gcc/config/arm/gentune.sh\n gcc/config/arm/arm-tables.opt: gcc/config/arm/arm-arches.def gcc/config/arm/arm-cores.def gcc/config/arm/arm-fpus.def gcc/config/arm/genopt.sh\n gcc/config/avr/avr-tables.opt: gcc/config/avr/avr-mcus.def gcc/config/avr/genopt.sh\n+gcc/config/avr/t-multilib: gcc/config/avr/avr-mcus.def gcc/config/avr/genmultilib.awk\n+gcc/config/avr/multilib.h: gcc/config/avr/avr-mcus.def gcc/config/avr/genmultilib.awk\n gcc/config/c6x/c6x-tables.opt: gcc/config/c6x/c6x-isas.def gcc/config/c6x/genopt.sh\n gcc/config/c6x/c6x-sched.md: gcc/config/c6x/c6x-sched.md.in gcc/config/c6x/gensched.sh\n gcc/config/c6x/c6x-mult.md: gcc/config/c6x/c6x-mult.md.in gcc/config/c6x/genmult.sh"}, {"sha": "9d3a7dfa30bd0aab4b91a85245821faa675eee77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -1,3 +1,26 @@\n+2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/51345\n+\t* config.gcc (tm_file target=avr]): Add avr/avr-multilib.h\n+\t(tmake_file target=avr): Add avr/t-multilib.\n+\n+\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use AVR_HAVE_8BIT_SP\n+\tto built-in define __AVR_HAVE_8BIT_SP__, __AVR_HAVE_16BIT_SP__.\n+\t* config/avr/genmultilib.awk: New file.\n+\t* config/avr/t-multilib: New auto-generated file.\n+\t* config/avr/multilib.h: New auto-generated file.\n+\t* config/avr/t-avr (AVR_MCUS): New variable.\n+\t(genopt.sh): Use it.\n+\t(s-mlib): Depend on t-multilib.\n+\t(t-multilib, multilib.h): New dependencies.\n+\t(s-avr-mlib): New rule to build t-multilib, multilib.h from AVR_MCUS.\n+\t(MULTILIB_OPTIONS): Remove.\n+\t(MULTILIB_MATCHES): Remove.\n+\t(MULTILIB_DIRNAMES): Remove.\n+\t(MULTILIB_EXCEPTIONS): Remove:\n+\t* config/avr/genopt.sh: Don't use hard coded file name;\n+\tpass AVR_MCUS from t-avr instead.\n+\n 2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_out_ashrpsi3): Fix \"case 31\" to \"case 23\"."}, {"sha": "bc2bf05ec4e2cd905518ec99c893c2a8f680ab7d", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -909,13 +909,14 @@ arm*-wince-pe*)\n \textra_objs=\"pe.o\"\n \t;;\n avr-*-rtems*)\n-\ttm_file=\"elfos.h avr/elf.h avr/avr.h dbxelf.h avr/rtems.h rtems.h newlib-stdint.h\"\n-\ttmake_file=\"avr/t-avr t-rtems avr/t-rtems\"\n+\ttm_file=\"elfos.h avr/elf.h avr/avr.h avr/multilib.h dbxelf.h avr/rtems.h rtems.h newlib-stdint.h\"\n+\ttmake_file=\"avr/t-avr avr/t-multilib t-rtems avr/t-rtems\"\n \textra_gcc_objs=\"driver-avr.o avr-devices.o\"\n \textra_objs=\"avr-devices.o avr-log.o\"\n \t;;\n avr-*-*)\n-\ttm_file=\"elfos.h avr/elf.h avr/avr.h dbxelf.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h avr/elf.h avr/avr.h avr/multilib.h dbxelf.h newlib-stdint.h\"\n+\ttmake_file=\"avr/t-avr avr/t-multilib\"\n \tuse_gcc_stdint=wrap\n \textra_gcc_objs=\"driver-avr.o avr-devices.o\"\n \textra_objs=\"avr-devices.o avr-log.o\""}, {"sha": "a6e43de9b1adf8a47060b0992ad4e3be839f9991", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -113,7 +113,7 @@ avr_cpu_cpp_builtins (struct cpp_reader *pfile)\n       cpp_define (pfile, \"__AVR_2_BYTE_PC__\");\n     }\n \n-  if (avr_current_device->short_sp)\n+  if (AVR_HAVE_8BIT_SP)\n     cpp_define (pfile, \"__AVR_HAVE_8BIT_SP__\");\n   else\n     cpp_define (pfile, \"__AVR_HAVE_16BIT_SP__\");"}, {"sha": "5573a9cff8ac2475e4506314036b70c211c0ce49", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -21,7 +21,6 @@\n /* List of all known AVR MCU types - if updated, it has to be kept\n    in sync in several places (FIXME: is there a better way?):\n     - here;\n-    - t-avr (MULTILIB_MATCHES);\n     - gas/config/tc-avr.c;\n     - avr-libc.\n "}, {"sha": "7bc3b4af2256f36c168514700f3e5edae2cb592f", "filename": "gcc/config/avr/genmultilib.awk", "status": "added", "additions": 315, "deletions": 0, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgenmultilib.awk?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -0,0 +1,315 @@\n+# Copyright (C) 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU General Public License as published by the Free\n+# Software Foundation; either version 3, or (at your option) any later\n+# version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+# WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+##################################################################\n+#  \n+# Transform Core/Device Information from avr-mcus.def to a\n+# Representation that is understood by GCC's multilib Machinery.\n+#\n+# The Script works as a Filter from STDIN to STDOUT.\n+# \n+# FORMAT = \"Makefile\": Generate Makefile Snipet that sets some\n+#                      MULTILIB_* Variables as needed.\n+#\n+# FORMAT = \"multilib.h\": Generate C Header intended to override\n+#                      (parts of) multilib.h used in gcc.c.\n+#\n+##################################################################\n+\n+BEGIN {\n+    FS =\"[(, \\t]+\"\n+    option[\"\"] = \"\"\n+    tiny_stack[\"\"] = 1\n+    comment = 1\n+    n_mcu = 0\n+    n_cores = 0\n+\n+    mtiny[0] = \"\"\n+    mtiny[1] = \"tiny-stack\"\n+    option[\"tiny-stack\"] = \"mtiny-stack\"\n+}\n+\n+##################################################################\n+# Add some Comments to the generated Files and copy-paste\n+# Copyright Notice from above.\n+##################################################################\n+\n+/^#/ {\n+    if (!comment)\n+\tnext\n+    else if (comment == 1)\n+    {\n+\tif (FORMAT == \"multilib.h\")\n+\t{\n+\t    print \"/*\"\n+\t    print \"   Auto-generated C header\"\n+\t    print \"   Generated by    : ./gcc/config/avr/genmultilib.awk\"\n+\t    print \"   Generated from  : ./gcc/config/avr/avr-mcus.def\"\n+\t    print \"   Used by         : ./gcc/gcc.c via tm.h\"\n+\t    print \"   Purpose         : Override multilib_raw[] from multilib.h\"\n+\t    print \"*/\"\n+\t    print \"/*\"\n+\t}\n+\n+\tif (FORMAT == \"Makefile\")\n+\t{\n+\t    print \"# Auto-generated Makefile Snip\"\n+\t    print \"# Generated by    : ./gcc/config/avr/genmultilib.awk\"\n+\t    print \"# Generated from  : ./gcc/config/avr/avr-mcus.def\"\n+\t    print \"# Used by         : tmake_file from Makefile and genmultilib\"\n+\t    print \"\"\n+\t}\n+    }\n+\n+    comment = 2;\n+\n+    if (FORMAT == \"multilib.h\")\n+\tgsub (\"#\", \"  \")\n+\n+    print\n+}\n+\n+/^$/ {\n+    if (comment && FORMAT == \"multilib.h\")\n+\tprint \"*/\"\n+\n+    comment = 0\n+}\n+\n+##################################################################\n+# Run over all AVR_MCU Lines and gather Information:\n+# cores[]     : Enumerates the Cores (avr2, avr25, ...)\n+# mcu[]       : Enumerates the Devices\n+# tiny_stack[]: Maps Core/Device to 0 (2-byte SP) or 1 (1-byte SP)\n+# option[]    : Maps Core/Device to the mmcu= option to get it\n+# toCore[]    : Maps Device to its Core\n+##################################################################\n+\n+/^AVR_MCU/ {\n+    name = $2\n+    gsub (\"\\\"\", \"\", name)\n+\n+    if ($4 == \"NULL\")\n+    {\n+\tcore = name\n+\n+\t# avr1 is supported for Assembler only:  It gets no multilib\n+\tif (core == \"avr1\")\n+\t    next\n+\n+\tcores[n_cores] = core\n+\tn_cores++\n+\ttiny_stack[core] = 0\n+\toption[core] = \"mmcu=\" core\n+\n+\tnext\n+    }\n+\n+    # avr1 is supported for Assembler only:  Its Devices are ignored\n+    if (core == \"avr1\")\n+\tnext\n+\n+    tiny_stack[name]  = $5\n+    mcu[n_mcu] = name\n+    n_mcu++\n+    option[name]      = \"mmcu=\" name\n+    toCore[name]      = core\n+\n+    if (tiny_stack[name] == 1)\n+\ttiny_stack[core] = 1\n+}\n+\n+##################################################################\n+# \n+# We gathered all the Information, now build/output the following:\n+#\n+#    awk Variable         target Variable          FORMAT\n+#  -----------------------------------------------------------\n+#    m_options     <->    MULTILIB_OPTIONS         Makefile\n+#    m_dirnames    <->    MULTILIB_DIRNAMES           \"\n+#    m_exceptions  <->    MULTILIB_EXCEPTIONS         \"\n+#    m_matches     <->    MULTILIB_MATCHES            \"\n+#    m_raw         <->    avr_multilib_raw         multilib.h\n+#\n+##################################################################\n+\n+END {\n+    m_options    = \"\\nMULTILIB_OPTIONS = \"\n+    m_dirnames   = \"\\nMULTILIB_DIRNAMES =\"\n+    m_exceptions = \"\\nMULTILIB_EXCEPTIONS =\"\n+    m_matches    = \"\\nMULTILIB_MATCHES =\"\n+\n+    m_raw = \"\"\n+\n+    ##############################################################\n+    # Compose MULTILIB_OPTIONS.  This represents the Cross-Product\n+    #    (avr2, avr25, ...) x mtiny-stack\n+\n+    sep = \"\"\n+    for (c = 0; c < n_cores; c++)\n+    {\n+\tm_options = m_options sep option[cores[c]]\n+\tsep = \"/\"\n+    }\n+\n+    # The ... x mtiny-stack\n+    m_options = m_options \" \" option[mtiny[1]]\n+\n+    ##############################################################\n+    # Map Device to its multilib\n+\n+    # All Mappings that cannot be represented by GCC's genmultilib\n+    # Machinery must be handcrafted.\n+\n+    dot_excludes = \"\"\n+    m_raw_sp8 = \"\"\n+\n+    for (t = 0; t < n_mcu; t++)\n+    {\n+\tcore = toCore[mcu[t]]\n+\t\n+\tif (tiny_stack[mcu[t]] == 1)\n+\t{\n+\t    if (core == \"avr2\")\n+\t\tdir = mtiny[1]\n+\t    else\n+\t\tdir = core \"/\" mtiny[1]\n+\n+\t    m_raw_sp8 = m_raw_sp8 \"  \\\"\" dir \" \" option[mcu[t]] \";\\\",\\n\"\n+\t    dot_excludes = dot_excludes \" !\" option[mcu[t]]\n+\n+\t    line = option[mcu[t]] \":\" option[mcu[t]]\n+\t    gsub (\"=\", \"?\", line)\n+\t    gsub (\":\", \"=\", line)\n+\n+\t    m_matches = m_matches \" \\\\\\n\\t\" line\n+\t}\n+\n+\t# The SP = 16 Devices are vanilla: Do the same as\n+\t# MULTILIB_MATCHES would yield.  Don't list avr2 (default)\n+\n+\tif (core != \"avr2\")\n+\t{\n+\t    line = option[core] \":\" option[mcu[t]]\n+\t    gsub (\"=\", \"?\", line)\n+\t    gsub (\":\", \"=\", line)\n+\n+\t    m_matches = m_matches \" \\\\\\n\\t\" line\n+\t}\n+    }\n+\n+    ####################################################################\n+    # Compose MULTILIB_DIRNAMES, MULTILIB_EXEPTIONS and avr_multilib_raw\n+\n+    n_mtiny = 2\n+    for (t = 0; t < n_mtiny; t++)\n+\tfor (c = -1; c < n_cores; c++)\n+\t{\n+\t    if (c == -1)\n+\t\tcore = \"\"\n+\t    else\n+\t\tcore = cores[c]\n+\n+\t    # The Directory Name for this multilib\n+\n+\t    if (core != \"\" && mtiny[t] != \"\")\n+\t    {\n+\t\tmdir = core \"/\" mtiny[t]\n+\t\tmopt = option[core] \"/\" option[mtiny[t]]\n+\t    }\n+\t    else\n+\t    {\n+\t\tmdir = core mtiny[t]\n+\t\tmopt = option[core] option[mtiny[t]]\n+\t    }\n+\n+\t    if (core != \"\" && tiny_stack[core] == 0 && mtiny[t] != \"\")\n+\t    {\n+\t\t# There's not a single SP = 8 Devices for this Core:\n+\t\t# Don't build respective multilib\n+\t\tm_exceptions = m_exceptions \" \\\\\\n\\t\" mopt\n+\t\tcontinue\n+\t    }\n+\n+\t    if (core != \"avr2\" || mtiny[t] == \"\")\n+\t\tm_dirnames = m_dirnames \" \" mdir\n+\n+\t    # Remainder deals with avr_multilib_raw Entries.\n+\t    # Each Entry looks like\n+\t    #     \"multilib-dir option-to-match !option-to-avoid-match;\"\n+\t    # for Example:\n+\t    #     \"avr25/tiny-stack !mmcu=avr2 mmcu=avr25 !mmcu=avr3 ... mtiny-stack;\"\n+\n+\t    if (mdir == \"\")\n+\t\tmdir = \".\"\n+\n+\t    line = mdir\n+\n+\t    for (s = 0; s < n_cores; s++)\n+\t    {\n+\t\tif (cores[s] == core)\n+\t\t    line = line \" \" option[cores[s]]\n+\t\telse\n+\t\t    line = line \" !\" option[cores[s]]\n+\t    }\n+\n+\t    if (tiny_stack[core] != 0)\n+\t    {\n+\t\tif (mtiny[t] == \"\")\n+\t\t    line = line \" !\" option[mtiny[1]]\n+\t\telse\n+\t\t    line = line \" \" option[mtiny[1]]\n+\t    }\n+\n+\t    if (mdir == \".\")\n+\t\tline = line dot_excludes\n+\n+\t    m_raw = m_raw \"  \\\"\" line \";\\\",\\n\"\n+\t}\n+\n+    ############################################################\n+    # Output that Stuff\n+    ############################################################\n+\n+    if (FORMAT == \"Makefile\")\n+    {\n+\t# Intended Target: ./gcc/config/avr/t-multilib\n+\n+\tprint m_options\n+\tprint m_dirnames\n+\tprint m_exceptions\n+\tprint m_matches\n+    }\n+\n+    if (FORMAT == \"multilib.h\")\n+    {\n+\t# Intended Target: ./gcc/config/avr/multilib.h\n+\n+\tprint \"#if defined NULL && !defined AVR_MULTILIB_H\"\n+\tprint \"#define AVR_MULTILIB_H\"\n+\n+\tprint \"static const char* const avr_multilib_raw[] = {\"\n+\tprint m_raw_sp8\n+\tprint m_raw\n+\tprint \"  NULL\\n};\"\n+\n+\tprint \"#undef  multilib_raw\"\n+\tprint \"#define multilib_raw avr_multilib_raw\"\n+\tprint \"#endif /* AVR_MULTILIB_H */\"\n+    }\n+}"}, {"sha": "6f9b778fc51f2771d7ef7b1ae23a7cb07925da9e", "filename": "gcc/config/avr/genopt.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fgenopt.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fgenopt.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgenopt.sh?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -56,4 +56,4 @@ awk -F'[(, \t]+' 'BEGIN {\n     print \"Enum(avr_mcu) String(\" name \") Value(\" value \")\"\n     print \"\"\n     value++\n-}' $1/avr-mcus.def\n+}' $1"}, {"sha": "c434850123fbcc82547eb2b02d2da10d93dc7cc9", "filename": "gcc/config/avr/multilib.h", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fmultilib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Fmultilib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fmultilib.h?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -0,0 +1,65 @@\n+/*\n+   Auto-generated C header\n+   Generated by    : ./gcc/config/avr/genmultilib.awk\n+   Generated from  : ./gcc/config/avr/avr-mcus.def\n+   Used by         : ./gcc/gcc.c via tm.h\n+   Purpose         : Override multilib_raw[] from multilib.h\n+*/\n+/*\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+  \n+   This file is part of GCC.\n+  \n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+  \n+   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n+  \n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.\n+*/\n+#if defined NULL && !defined AVR_MULTILIB_H\n+#define AVR_MULTILIB_H\n+static const char* const avr_multilib_raw[] = {\n+  \"tiny-stack mmcu=at90s2313;\",\n+  \"tiny-stack mmcu=at90s2323;\",\n+  \"tiny-stack mmcu=at90s2333;\",\n+  \"tiny-stack mmcu=at90s2343;\",\n+  \"tiny-stack mmcu=attiny22;\",\n+  \"tiny-stack mmcu=attiny26;\",\n+  \"tiny-stack mmcu=at90s4433;\",\n+  \"avr25/tiny-stack mmcu=attiny13;\",\n+  \"avr25/tiny-stack mmcu=attiny13a;\",\n+  \"avr25/tiny-stack mmcu=attiny2313;\",\n+  \"avr25/tiny-stack mmcu=attiny2313a;\",\n+  \"avr25/tiny-stack mmcu=attiny24;\",\n+  \"avr25/tiny-stack mmcu=attiny24a;\",\n+  \"avr25/tiny-stack mmcu=attiny25;\",\n+  \"avr25/tiny-stack mmcu=attiny261;\",\n+  \"avr25/tiny-stack mmcu=attiny261a;\",\n+\n+  \". !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mtiny-stack !mmcu=at90s2313 !mmcu=at90s2323 !mmcu=at90s2333 !mmcu=at90s2343 !mmcu=attiny22 !mmcu=attiny26 !mmcu=at90s4433 !mmcu=attiny13 !mmcu=attiny13a !mmcu=attiny2313 !mmcu=attiny2313a !mmcu=attiny24 !mmcu=attiny24a !mmcu=attiny25 !mmcu=attiny261 !mmcu=attiny261a;\",\n+  \"avr2 mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mtiny-stack;\",\n+  \"avr25 !mmcu=avr2 mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mtiny-stack;\",\n+  \"avr3 !mmcu=avr2 !mmcu=avr25 mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6;\",\n+  \"avr31 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6;\",\n+  \"avr35 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6;\",\n+  \"avr4 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6;\",\n+  \"avr5 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 mmcu=avr5 !mmcu=avr51 !mmcu=avr6;\",\n+  \"avr51 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 mmcu=avr51 !mmcu=avr6;\",\n+  \"avr6 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 mmcu=avr6;\",\n+  \"tiny-stack !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 mtiny-stack;\",\n+  \"avr2/tiny-stack mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 mtiny-stack;\",\n+  \"avr25/tiny-stack !mmcu=avr2 mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 mtiny-stack;\",\n+\n+  NULL\n+};\n+#undef  multilib_raw\n+#define multilib_raw avr_multilib_raw\n+#endif /* AVR_MULTILIB_H */"}, {"sha": "732ca00568812cd62f778315a0178dd7441ab9b8", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 23, "deletions": 150, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -34,156 +34,29 @@ avr-log.o: $(srcdir)/config/avr/avr-log.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(INPUT_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n-$(srcdir)/config/avr/avr-tables.opt: $(srcdir)/config/avr/genopt.sh \\\n-  $(srcdir)/config/avr/avr-mcus.def\n-\t$(SHELL) $(srcdir)/config/avr/genopt.sh $(srcdir)/config/avr > \\\n-\t\t$(srcdir)/config/avr/avr-tables.opt\n+# Files and Variables auto-generated from avr-mcus.def\n \n-MULTILIB_OPTIONS = mmcu=avr2/mmcu=avr25/mmcu=avr3/mmcu=avr31/mmcu=avr35/mmcu=avr4/mmcu=avr5/mmcu=avr51/mmcu=avr6\n-MULTILIB_DIRNAMES = avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6\n+AVR_MCUS = $(srcdir)/config/avr/avr-mcus.def\n \n-# The many avr2 matches are not listed here - this is the default.\n-MULTILIB_MATCHES = \\\n-\tmmcu?avr25=mmcu?ata6289 \\\n-\tmmcu?avr25=mmcu?attiny13 \\\n-\tmmcu?avr25=mmcu?attiny13a \\\n-\tmmcu?avr25=mmcu?attiny2313 \\\n-\tmmcu?avr25=mmcu?attiny2313a \\\n-\tmmcu?avr25=mmcu?attiny4313 \\\n-\tmmcu?avr25=mmcu?attiny24 \\\n-\tmmcu?avr25=mmcu?attiny24a \\\n-\tmmcu?avr25=mmcu?attiny44 \\\n-\tmmcu?avr25=mmcu?attiny44a \\\n-\tmmcu?avr25=mmcu?attiny84 \\\n-\tmmcu?avr25=mmcu?attiny84a \\\n-\tmmcu?avr25=mmcu?attiny25 \\\n-\tmmcu?avr25=mmcu?attiny45 \\\n-\tmmcu?avr25=mmcu?attiny85 \\\n-\tmmcu?avr25=mmcu?attiny261 \\\n-\tmmcu?avr25=mmcu?attiny261a \\\n-\tmmcu?avr25=mmcu?attiny461 \\\n-\tmmcu?avr25=mmcu?attiny461a \\\n-\tmmcu?avr25=mmcu?attiny861 \\\n-\tmmcu?avr25=mmcu?attiny861a \\\n-\tmmcu?avr25=mmcu?attiny43u \\\n-\tmmcu?avr25=mmcu?attiny87 \\\n-\tmmcu?avr25=mmcu?attiny48 \\\n-\tmmcu?avr25=mmcu?attiny88 \\\n-\tmmcu?avr25=mmcu?at86rf401 \\\n-\tmmcu?avr3=mmcu?at43usb355 \\\n-\tmmcu?avr3=mmcu?at76c711 \\\n-\tmmcu?avr31=mmcu?atmega103 \\\n-\tmmcu?avr31=mmcu?at43usb320 \\\n-\tmmcu?avr35=mmcu?at90usb82 \\\n-\tmmcu?avr35=mmcu?at90usb162 \\\n-\tmmcu?avr35=mmcu?atmega8u2 \\\n-\tmmcu?avr35=mmcu?atmega16u2 \\\n-\tmmcu?avr35=mmcu?atmega32u2 \\\n-\tmmcu?avr35=mmcu?attiny167 \\\n-\tmmcu?avr4=mmcu?atmega48 \\\n-\tmmcu?avr4=mmcu?atmega48a \\\n-\tmmcu?avr4=mmcu?atmega48p \\\n-\tmmcu?avr4=mmcu?atmega8 \\\n-\tmmcu?avr4=mmcu?atmega8515 \\\n-\tmmcu?avr4=mmcu?atmega8535 \\\n-\tmmcu?avr4=mmcu?atmega88 \\\n-\tmmcu?avr4=mmcu?atmega88a \\\n-\tmmcu?avr4=mmcu?atmega88p \\\n-\tmmcu?avr4=mmcu?atmega88pa \\\n-\tmmcu?avr4=mmcu?atmega8hva \\\n-\tmmcu?avr4=mmcu?at90pwm1 \\\n-\tmmcu?avr4=mmcu?at90pwm2 \\\n-\tmmcu?avr4=mmcu?at90pwm2b \\\n-\tmmcu?avr4=mmcu?at90pwm3 \\\n-\tmmcu?avr4=mmcu?at90pwm3b \\\n-\tmmcu?avr4=mmcu?at90pwm81 \\\n-\tmmcu?avr5=mmcu?atmega16 \\\n-\tmmcu?avr5=mmcu?atmega16a \\\n-\tmmcu?avr5=mmcu?atmega161 \\\n-\tmmcu?avr5=mmcu?atmega162 \\\n-\tmmcu?avr5=mmcu?atmega163 \\\n-\tmmcu?avr5=mmcu?atmega164a \\\n-\tmmcu?avr5=mmcu?atmega164p \\\n-\tmmcu?avr5=mmcu?atmega165 \\\n-\tmmcu?avr5=mmcu?atmega165a \\\n-\tmmcu?avr5=mmcu?atmega165p \\\n-\tmmcu?avr5=mmcu?atmega168 \\\n-\tmmcu?avr5=mmcu?atmega168a \\\n-\tmmcu?avr5=mmcu?atmega168p \\\n-\tmmcu?avr5=mmcu?atmega169 \\\n-\tmmcu?avr5=mmcu?atmega169a \\\n-\tmmcu?avr5=mmcu?atmega169p \\\n-\tmmcu?avr5=mmcu?atmega169pa \\\n-\tmmcu?avr5=mmcu?atmega32 \\\n-\tmmcu?avr5=mmcu?atmega323 \\\n-\tmmcu?avr5=mmcu?atmega324a \\\n-\tmmcu?avr5=mmcu?atmega324p \\\n-\tmmcu?avr5=mmcu?atmega324pa \\\n-\tmmcu?avr5=mmcu?atmega325 \\\n-\tmmcu?avr5=mmcu?atmega325a \\\n-\tmmcu?avr5=mmcu?atmega325p \\\n-\tmmcu?avr5=mmcu?atmega3250 \\\n-\tmmcu?avr5=mmcu?atmega3250a \\\n-\tmmcu?avr5=mmcu?atmega3250p \\\n-\tmmcu?avr5=mmcu?atmega328 \\\n-\tmmcu?avr5=mmcu?atmega328p \\\n-\tmmcu?avr5=mmcu?atmega329 \\\n-\tmmcu?avr5=mmcu?atmega329a \\\n-\tmmcu?avr5=mmcu?atmega329p \\\n-\tmmcu?avr5=mmcu?atmega329pa \\\n-\tmmcu?avr5=mmcu?atmega3290 \\\n-\tmmcu?avr5=mmcu?atmega3290a \\\n-\tmmcu?avr5=mmcu?atmega3290p \\\n-\tmmcu?avr5=mmcu?atmega406 \\\n-\tmmcu?avr5=mmcu?atmega64  \\\n-\tmmcu?avr5=mmcu?atmega640 \\\n-\tmmcu?avr5=mmcu?atmega644 \\\n-\tmmcu?avr5=mmcu?atmega644a \\\n-\tmmcu?avr5=mmcu?atmega644p \\\n-\tmmcu?avr5=mmcu?atmega644pa \\\n-\tmmcu?avr5=mmcu?atmega645 \\\n-\tmmcu?avr5=mmcu?atmega645a \\\n-\tmmcu?avr5=mmcu?atmega645p \\\n-\tmmcu?avr5=mmcu?atmega6450 \\\n-\tmmcu?avr5=mmcu?atmega6450a \\\n-\tmmcu?avr5=mmcu?atmega6450p \\\n-\tmmcu?avr5=mmcu?atmega649 \\\n-\tmmcu?avr5=mmcu?atmega649a \\\n-\tmmcu?avr5=mmcu?atmega649p \\\n-\tmmcu?avr5=mmcu?atmega6490 \\\n-\tmmcu?avr5=mmcu?atmega6490a \\\n-\tmmcu?avr5=mmcu?atmega6490p \\\n-\tmmcu?avr5=mmcu?atmega16hva \\\n-\tmmcu?avr5=mmcu?atmega16hva2 \\\n-\tmmcu?avr5=mmcu?atmega16hvb \\\n-\tmmcu?avr5=mmcu?atmega32hvb \\\n-\tmmcu?avr5=mmcu?atmega64hve \\\n-\tmmcu?avr5=mmcu?at90can32 \\\n-\tmmcu?avr5=mmcu?at90can64 \\\n-\tmmcu?avr5=mmcu?at90pwm216 \\\n-\tmmcu?avr5=mmcu?at90pwm316 \\\n-\tmmcu?avr5=mmcu?atmega32c1 \\\n-\tmmcu?avr5=mmcu?atmega64c1 \\\n-\tmmcu?avr5=mmcu?atmega16m1 \\\n-\tmmcu?avr5=mmcu?atmega32m1 \\\n-\tmmcu?avr5=mmcu?atmega64m1 \\\n-\tmmcu?avr5=mmcu?atmega16u4 \\\n-\tmmcu?avr5=mmcu?atmega32u4 \\\n-\tmmcu?avr5=mmcu?atmega32u6 \\\n-\tmmcu?avr5=mmcu?at90scr100 \\\n-\tmmcu?avr5=mmcu?at90usb646 \\\n-\tmmcu?avr5=mmcu?at90usb647 \\\n-\tmmcu?avr5=mmcu?at94k \\\n-\tmmcu?avr5=mmcu?m3000 \\\n-\tmmcu?avr51=mmcu?atmega128 \\\n-\tmmcu?avr51=mmcu?atmega1280 \\\n-\tmmcu?avr51=mmcu?atmega1281 \\\n-\tmmcu?avr51=mmcu?atmega1284p \\\n-\tmmcu?avr51=mmcu?atmega128rfa1 \\\n-\tmmcu?avr51=mmcu?at90can128 \\\n-\tmmcu?avr51=mmcu?at90usb1286 \\\n-\tmmcu?avr51=mmcu?at90usb1287 \\\n-\tmmcu?avr6=mmcu?atmega2560 \\\n-\tmmcu?avr6=mmcu?atmega2561\n+$(srcdir)/config/avr/avr-tables.opt: $(srcdir)/config/avr/genopt.sh $(AVR_MCUS)\n+\t$(SHELL) $< $(AVR_MCUS) > $@\n \n-MULTILIB_EXCEPTIONS =\n+# MULTILIB_OPTIONS\n+# MULTILIB_DIRNAMES\n+# MULTILIB_EXCEPTIONS\n+# MULTILIB_MATCHES\n+$(srcdir)/config/avr/t-multilib: s-avr-mlib; @true\n+\n+# Override multilib_raw[] from multilib.h\n+$(srcdir)/config/avr/multilib.h: s-avr-mlib; @true\n+\n+s-mlib: $(srcdir)/config/avr/t-multilib\n+\n+s-avr-mlib: $(srcdir)/config/avr/genmultilib.awk $(AVR_MCUS)\n+\t$(AWK) -f $< -v FORMAT=Makefile   $< $(AVR_MCUS) > tmp-avr-mlib\n+\t$(AWK) -f $< -v FORMAT=multilib.h $< $(AVR_MCUS) > tmp-avr-mlib.h\n+\t$(SHELL) $(srcdir)/../move-if-change \\\n+\t\ttmp-avr-mlib.h \t$(srcdir)/config/avr/multilib.h\n+\t$(SHELL) $(srcdir)/../move-if-change \\\n+\t\ttmp-avr-mlib \t$(srcdir)/config/avr/t-multilib\n+\t$(STAMP) $@"}, {"sha": "7f5a19a3d76c0e9281616f1c8129ab8dc55dd8ff", "filename": "gcc/config/avr/t-multilib", "status": "added", "additions": 192, "deletions": 0, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/gcc%2Fconfig%2Favr%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-multilib?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -0,0 +1,192 @@\n+# Auto-generated Makefile Snip\n+# Generated by    : ./gcc/config/avr/genmultilib.awk\n+# Generated from  : ./gcc/config/avr/avr-mcus.def\n+# Used by         : tmake_file from Makefile and genmultilib\n+\n+# Copyright (C) 2011 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it under\n+# the terms of the GNU General Public License as published by the Free\n+# Software Foundation; either version 3, or (at your option) any later\n+# version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+# WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+MULTILIB_OPTIONS = mmcu=avr2/mmcu=avr25/mmcu=avr3/mmcu=avr31/mmcu=avr35/mmcu=avr4/mmcu=avr5/mmcu=avr51/mmcu=avr6 mtiny-stack\n+\n+MULTILIB_DIRNAMES =  avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 tiny-stack avr25/tiny-stack\n+\n+MULTILIB_EXCEPTIONS = \\\n+\tmmcu=avr3/mtiny-stack \\\n+\tmmcu=avr31/mtiny-stack \\\n+\tmmcu=avr35/mtiny-stack \\\n+\tmmcu=avr4/mtiny-stack \\\n+\tmmcu=avr5/mtiny-stack \\\n+\tmmcu=avr51/mtiny-stack \\\n+\tmmcu=avr6/mtiny-stack\n+\n+MULTILIB_MATCHES = \\\n+\tmmcu?at90s2313=mmcu?at90s2313 \\\n+\tmmcu?at90s2323=mmcu?at90s2323 \\\n+\tmmcu?at90s2333=mmcu?at90s2333 \\\n+\tmmcu?at90s2343=mmcu?at90s2343 \\\n+\tmmcu?attiny22=mmcu?attiny22 \\\n+\tmmcu?attiny26=mmcu?attiny26 \\\n+\tmmcu?at90s4433=mmcu?at90s4433 \\\n+\tmmcu?avr25=mmcu?ata6289 \\\n+\tmmcu?attiny13=mmcu?attiny13 \\\n+\tmmcu?avr25=mmcu?attiny13 \\\n+\tmmcu?attiny13a=mmcu?attiny13a \\\n+\tmmcu?avr25=mmcu?attiny13a \\\n+\tmmcu?attiny2313=mmcu?attiny2313 \\\n+\tmmcu?avr25=mmcu?attiny2313 \\\n+\tmmcu?attiny2313a=mmcu?attiny2313a \\\n+\tmmcu?avr25=mmcu?attiny2313a \\\n+\tmmcu?attiny24=mmcu?attiny24 \\\n+\tmmcu?avr25=mmcu?attiny24 \\\n+\tmmcu?attiny24a=mmcu?attiny24a \\\n+\tmmcu?avr25=mmcu?attiny24a \\\n+\tmmcu?avr25=mmcu?attiny4313 \\\n+\tmmcu?avr25=mmcu?attiny44 \\\n+\tmmcu?avr25=mmcu?attiny44a \\\n+\tmmcu?avr25=mmcu?attiny84 \\\n+\tmmcu?avr25=mmcu?attiny84a \\\n+\tmmcu?attiny25=mmcu?attiny25 \\\n+\tmmcu?avr25=mmcu?attiny25 \\\n+\tmmcu?avr25=mmcu?attiny45 \\\n+\tmmcu?avr25=mmcu?attiny85 \\\n+\tmmcu?attiny261=mmcu?attiny261 \\\n+\tmmcu?avr25=mmcu?attiny261 \\\n+\tmmcu?attiny261a=mmcu?attiny261a \\\n+\tmmcu?avr25=mmcu?attiny261a \\\n+\tmmcu?avr25=mmcu?attiny461 \\\n+\tmmcu?avr25=mmcu?attiny461a \\\n+\tmmcu?avr25=mmcu?attiny861 \\\n+\tmmcu?avr25=mmcu?attiny861a \\\n+\tmmcu?avr25=mmcu?attiny43u \\\n+\tmmcu?avr25=mmcu?attiny87 \\\n+\tmmcu?avr25=mmcu?attiny48 \\\n+\tmmcu?avr25=mmcu?attiny88 \\\n+\tmmcu?avr25=mmcu?at86rf401 \\\n+\tmmcu?avr3=mmcu?at43usb355 \\\n+\tmmcu?avr3=mmcu?at76c711 \\\n+\tmmcu?avr31=mmcu?atmega103 \\\n+\tmmcu?avr31=mmcu?at43usb320 \\\n+\tmmcu?avr35=mmcu?at90usb82 \\\n+\tmmcu?avr35=mmcu?at90usb162 \\\n+\tmmcu?avr35=mmcu?atmega8u2 \\\n+\tmmcu?avr35=mmcu?atmega16u2 \\\n+\tmmcu?avr35=mmcu?atmega32u2 \\\n+\tmmcu?avr35=mmcu?attiny167 \\\n+\tmmcu?avr4=mmcu?atmega8 \\\n+\tmmcu?avr4=mmcu?atmega48 \\\n+\tmmcu?avr4=mmcu?atmega48a \\\n+\tmmcu?avr4=mmcu?atmega48p \\\n+\tmmcu?avr4=mmcu?atmega88 \\\n+\tmmcu?avr4=mmcu?atmega88a \\\n+\tmmcu?avr4=mmcu?atmega88p \\\n+\tmmcu?avr4=mmcu?atmega88pa \\\n+\tmmcu?avr4=mmcu?atmega8515 \\\n+\tmmcu?avr4=mmcu?atmega8535 \\\n+\tmmcu?avr4=mmcu?atmega8hva \\\n+\tmmcu?avr4=mmcu?at90pwm1 \\\n+\tmmcu?avr4=mmcu?at90pwm2 \\\n+\tmmcu?avr4=mmcu?at90pwm2b \\\n+\tmmcu?avr4=mmcu?at90pwm3 \\\n+\tmmcu?avr4=mmcu?at90pwm3b \\\n+\tmmcu?avr4=mmcu?at90pwm81 \\\n+\tmmcu?avr5=mmcu?atmega16 \\\n+\tmmcu?avr5=mmcu?atmega16a \\\n+\tmmcu?avr5=mmcu?atmega161 \\\n+\tmmcu?avr5=mmcu?atmega162 \\\n+\tmmcu?avr5=mmcu?atmega163 \\\n+\tmmcu?avr5=mmcu?atmega164a \\\n+\tmmcu?avr5=mmcu?atmega164p \\\n+\tmmcu?avr5=mmcu?atmega165 \\\n+\tmmcu?avr5=mmcu?atmega165a \\\n+\tmmcu?avr5=mmcu?atmega165p \\\n+\tmmcu?avr5=mmcu?atmega168 \\\n+\tmmcu?avr5=mmcu?atmega168a \\\n+\tmmcu?avr5=mmcu?atmega168p \\\n+\tmmcu?avr5=mmcu?atmega169 \\\n+\tmmcu?avr5=mmcu?atmega169a \\\n+\tmmcu?avr5=mmcu?atmega169p \\\n+\tmmcu?avr5=mmcu?atmega169pa \\\n+\tmmcu?avr5=mmcu?atmega32 \\\n+\tmmcu?avr5=mmcu?atmega323 \\\n+\tmmcu?avr5=mmcu?atmega324a \\\n+\tmmcu?avr5=mmcu?atmega324p \\\n+\tmmcu?avr5=mmcu?atmega324pa \\\n+\tmmcu?avr5=mmcu?atmega325 \\\n+\tmmcu?avr5=mmcu?atmega325a \\\n+\tmmcu?avr5=mmcu?atmega325p \\\n+\tmmcu?avr5=mmcu?atmega3250 \\\n+\tmmcu?avr5=mmcu?atmega3250a \\\n+\tmmcu?avr5=mmcu?atmega3250p \\\n+\tmmcu?avr5=mmcu?atmega328 \\\n+\tmmcu?avr5=mmcu?atmega328p \\\n+\tmmcu?avr5=mmcu?atmega329 \\\n+\tmmcu?avr5=mmcu?atmega329a \\\n+\tmmcu?avr5=mmcu?atmega329p \\\n+\tmmcu?avr5=mmcu?atmega329pa \\\n+\tmmcu?avr5=mmcu?atmega3290 \\\n+\tmmcu?avr5=mmcu?atmega3290a \\\n+\tmmcu?avr5=mmcu?atmega3290p \\\n+\tmmcu?avr5=mmcu?atmega406 \\\n+\tmmcu?avr5=mmcu?atmega64 \\\n+\tmmcu?avr5=mmcu?atmega640 \\\n+\tmmcu?avr5=mmcu?atmega644 \\\n+\tmmcu?avr5=mmcu?atmega644a \\\n+\tmmcu?avr5=mmcu?atmega644p \\\n+\tmmcu?avr5=mmcu?atmega644pa \\\n+\tmmcu?avr5=mmcu?atmega645 \\\n+\tmmcu?avr5=mmcu?atmega645a \\\n+\tmmcu?avr5=mmcu?atmega645p \\\n+\tmmcu?avr5=mmcu?atmega6450 \\\n+\tmmcu?avr5=mmcu?atmega6450a \\\n+\tmmcu?avr5=mmcu?atmega6450p \\\n+\tmmcu?avr5=mmcu?atmega649 \\\n+\tmmcu?avr5=mmcu?atmega649a \\\n+\tmmcu?avr5=mmcu?atmega649p \\\n+\tmmcu?avr5=mmcu?atmega6490 \\\n+\tmmcu?avr5=mmcu?atmega16hva \\\n+\tmmcu?avr5=mmcu?atmega16hva2 \\\n+\tmmcu?avr5=mmcu?atmega16hvb \\\n+\tmmcu?avr5=mmcu?atmega32hvb \\\n+\tmmcu?avr5=mmcu?atmega64hve \\\n+\tmmcu?avr5=mmcu?at90can32 \\\n+\tmmcu?avr5=mmcu?at90can64 \\\n+\tmmcu?avr5=mmcu?at90pwm216 \\\n+\tmmcu?avr5=mmcu?at90pwm316 \\\n+\tmmcu?avr5=mmcu?atmega32c1 \\\n+\tmmcu?avr5=mmcu?atmega64c1 \\\n+\tmmcu?avr5=mmcu?atmega16m1 \\\n+\tmmcu?avr5=mmcu?atmega32m1 \\\n+\tmmcu?avr5=mmcu?atmega64m1 \\\n+\tmmcu?avr5=mmcu?atmega16u4 \\\n+\tmmcu?avr5=mmcu?atmega32u4 \\\n+\tmmcu?avr5=mmcu?atmega32u6 \\\n+\tmmcu?avr5=mmcu?at90scr100 \\\n+\tmmcu?avr5=mmcu?at90usb646 \\\n+\tmmcu?avr5=mmcu?at90usb647 \\\n+\tmmcu?avr5=mmcu?at94k \\\n+\tmmcu?avr5=mmcu?m3000 \\\n+\tmmcu?avr51=mmcu?atmega128 \\\n+\tmmcu?avr51=mmcu?atmega1280 \\\n+\tmmcu?avr51=mmcu?atmega1281 \\\n+\tmmcu?avr51=mmcu?atmega1284p \\\n+\tmmcu?avr51=mmcu?atmega128rfa1 \\\n+\tmmcu?avr51=mmcu?at90can128 \\\n+\tmmcu?avr51=mmcu?at90usb1286 \\\n+\tmmcu?avr51=mmcu?at90usb1287 \\\n+\tmmcu?avr6=mmcu?atmega2560 \\\n+\tmmcu?avr6=mmcu?atmega2561"}, {"sha": "912663248888df07a6f72701f1233de0b90ec953", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -1,3 +1,9 @@\n+2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/51345\n+\t* config/avr/lib1funcs.S: Remove FIXME comments.\n+\t(SPEED_DIV): Depend on __AVR_HAVE_8BIT_SP__.\n+\n 2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n \n \tImplement light-weight DImode support."}, {"sha": "b51999323db5eca8b33c97fa7ac147c65395e52e", "filename": "libgcc/config/avr/lib1funcs.S", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "patch": "@@ -1253,11 +1253,12 @@ ENDF __divmodsi4\n \n ;; Use Speed-optimized Version on \"big\" Devices, i.e. Devices with\n ;; at least 16k of Program Memory.  For smaller Devices, depend\n-;; on MOVW.\n+;; on MOVW and SP Size.  There is a Connexion between SP Size and\n+;; Flash Size so that SP Size can be used to test for Flash Size.\n \n #if defined (__AVR_HAVE_JMP_CALL__)\n #   define SPEED_DIV 8\n-#elif defined (__AVR_HAVE_MOVW__)\n+#elif defined (__AVR_HAVE_MOVW__) && !defined (__AVR_HAVE_8BIT_SP__)\n #   define SPEED_DIV 16\n #else\n #   define SPEED_DIV 0\n@@ -1540,9 +1541,6 @@ DEFUN  __divdi3_moddi3\n 4:  ;; Epilogue: Restore the Z = 12 Registers and return\n     in r28, __SP_L__\n #if defined (__AVR_HAVE_8BIT_SP__)\n-;; FIXME: __AVR_HAVE_8BIT_SP__ is set on device level, not on core level\n-;;        so this lines are dead code.  To make it work, devices without\n-;;        SP_H must get their own multilib(s).\n     clr r29\n #else\n     in r29, __SP_H__\n@@ -1694,9 +1692,6 @@ DEFUN __prologue_saves__\n \tpush r28\n \tpush r29\n #if defined (__AVR_HAVE_8BIT_SP__)\n-;; FIXME: __AVR_HAVE_8BIT_SP__ is set on device level, not on core level\n-;;        so this lines are dead code.  To make it work, devices without\n-;;        SP_H must get their own multilib(s).\n \tin\tr28,__SP_L__\n \tsub\tr28,r26\n \tout\t__SP_L__,r28\n@@ -1746,9 +1741,6 @@ DEFUN __epilogue_restores__\n \tldd\tr17,Y+3\n \tldd\tr26,Y+2\n #if defined (__AVR_HAVE_8BIT_SP__)\n-;; FIXME: __AVR_HAVE_8BIT_SP__ is set on device level, not on core level\n-;;        so this lines are dead code.  To make it work, devices without\n-;;        SP_H must get their own multilib(s).\n \tldd\tr29,Y+1\n \tadd\tr28,r30\n \tout\t__SP_L__,r28"}]}