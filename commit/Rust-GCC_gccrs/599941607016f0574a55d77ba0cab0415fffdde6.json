{"sha": "599941607016f0574a55d77ba0cab0415fffdde6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5OTQxNjA3MDE2ZjA1NzRhNTVkNzdiYTBjYWIwNDE1ZmZmZGRlNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-03-03T00:04:22Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-03-03T00:04:22Z"}, "message": "cse.c (rest_of_handle_cse): Do not pass CLEANUP_PRE_LOOP to cfg cleanup.\n\n\t* cse.c (rest_of_handle_cse): Do not pass CLEANUP_PRE_LOOP to cfg\n\tcleanup.\n\t* gcse.c (rest_of_handle_gcse): Ditto.\n\t* except.c (gate_handle_eh): Ditto.\n\t* cfgcleanup.c (rest_of_handle_jump2): Ditto.\n\t* basic-block.h (CLEANUP_PRE_LOOP): Remove.\n\nFrom-SVN: r111653", "tree": {"sha": "0732f0d1ffdc624ba356a07df71af998314be892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0732f0d1ffdc624ba356a07df71af998314be892"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/599941607016f0574a55d77ba0cab0415fffdde6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599941607016f0574a55d77ba0cab0415fffdde6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599941607016f0574a55d77ba0cab0415fffdde6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599941607016f0574a55d77ba0cab0415fffdde6/comments", "author": null, "committer": null, "parents": [{"sha": "5143b5fcfec76fb0529eb9c591f930df810eeb58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5143b5fcfec76fb0529eb9c591f930df810eeb58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5143b5fcfec76fb0529eb9c591f930df810eeb58"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "e9e8a1c959b0cbff198eb4ae1301cc0b3bef8ebc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -1,3 +1,12 @@\n+2006-03-02  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\t* cse.c (rest_of_handle_cse): Do not pass CLEANUP_PRE_LOOP to cfg\n+\tcleanup.\n+\t* gcse.c (rest_of_handle_gcse): Ditto.\n+\t* except.c (gate_handle_eh): Ditto.\n+\t* cfgcleanup.c (rest_of_handle_jump2): Ditto.\n+\t* basic-block.h (CLEANUP_PRE_LOOP): Remove.\n+\n 2006-03-02  Eric Christopher  <echristo@apple.com>\n \n \t* config/i386/i386.c (machopic_output_stub): Add indirection to"}, {"sha": "8179e094338a405e279562c1cd4344803027f74f", "filename": "gcc/basic-block.h", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -832,25 +832,23 @@ enum update_life_extent\n #define CLEANUP_CROSSJUMP\t2\t/* Do crossjumping.  */\n #define CLEANUP_POST_REGSTACK\t4\t/* We run after reg-stack and need\n \t\t\t\t\t   to care REG_DEAD notes.  */\n-#define CLEANUP_PRE_LOOP\t8\t/* Take care to preserve syntactic loop\n-\t\t\t\t\t   notes.  */\n-#define CLEANUP_UPDATE_LIFE\t16\t/* Keep life information up to date.  */\n-#define CLEANUP_THREADING\t32\t/* Do jump threading.  */\n-#define CLEANUP_NO_INSN_DEL\t64\t/* Do not try to delete trivially dead\n+#define CLEANUP_UPDATE_LIFE\t8\t/* Keep life information up to date.  */\n+#define CLEANUP_THREADING\t16\t/* Do jump threading.  */\n+#define CLEANUP_NO_INSN_DEL\t32\t/* Do not try to delete trivially dead\n \t\t\t\t\t   insns.  */\n-#define CLEANUP_CFGLAYOUT\t128\t/* Do cleanup in cfglayout mode.  */\n-#define CLEANUP_LOG_LINKS\t256\t/* Update log links.  */\n+#define CLEANUP_CFGLAYOUT\t64\t/* Do cleanup in cfglayout mode.  */\n+#define CLEANUP_LOG_LINKS\t128\t/* Update log links.  */\n \n /* The following are ORed in on top of the CLEANUP* flags in calls to\n    struct_equiv_block_eq.  */\n-#define STRUCT_EQUIV_START\t512\t /* Initializes the search range.  */\n-#define STRUCT_EQUIV_RERUN\t1024\t/* Rerun to find register use in\n+#define STRUCT_EQUIV_START\t256\t /* Initializes the search range.  */\n+#define STRUCT_EQUIV_RERUN\t512\t/* Rerun to find register use in\n \t\t\t\t\t   found equivalence.  */\n-#define STRUCT_EQUIV_FINAL\t2048\t/* Make any changes necessary to get\n+#define STRUCT_EQUIV_FINAL\t1024\t/* Make any changes necessary to get\n \t\t\t\t\t   actual equivalence.  */\n-#define STRUCT_EQUIV_NEED_FULL_BLOCK 4096 /* struct_equiv_block_eq is required\n+#define STRUCT_EQUIV_NEED_FULL_BLOCK 2048 /* struct_equiv_block_eq is required\n \t\t\t\t\t     to match only full blocks  */\n-#define STRUCT_EQUIV_MATCH_JUMPS 8192\t/* Also include the jumps at the end of the block in the comparison.  */\n+#define STRUCT_EQUIV_MATCH_JUMPS 4096\t/* Also include the jumps at the end of the block in the comparison.  */\n \n extern void life_analysis (int);\n extern int update_life_info (sbitmap, enum update_life_extent, int);"}, {"sha": "cd9d708961d5f950a45d0fc3f888c4737c5a7eeb", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -2309,15 +2309,15 @@ rest_of_handle_jump2 (void)\n   reg_scan (get_insns (), max_reg_num ());\n   if (dump_file)\n     dump_flow_info (dump_file, dump_flags);\n-  cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0) | CLEANUP_PRE_LOOP\n+  cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0)\n                | (flag_thread_jumps ? CLEANUP_THREADING : 0));\n \n   create_loop_notes ();\n \n   purge_line_number_notes ();\n \n   if (optimize)\n-    cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n+    cleanup_cfg (CLEANUP_EXPENSIVE);\n \n   /* Jump optimization, and the removal of NULL pointer checks, may\n      have reduced the number of instructions substantially.  CSE, and"}, {"sha": "53b26d039b9577936a2c15a581676d705e9be55f", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -7864,7 +7864,7 @@ rest_of_handle_cse (void)\n     delete_dead_jumptables ();\n \n   if (tem || optimize > 1)\n-    cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n+    cleanup_cfg (CLEANUP_EXPENSIVE);\n   return 0;\n }\n "}, {"sha": "7c0088e123a3e8a8f14c015f77e26b40261f0acf", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -3863,9 +3863,9 @@ gate_handle_eh (void)\n static unsigned int\n rest_of_handle_eh (void)\n {\n-  cleanup_cfg (CLEANUP_PRE_LOOP | CLEANUP_NO_INSN_DEL);\n+  cleanup_cfg (CLEANUP_NO_INSN_DEL);\n   finish_eh_generation ();\n-  cleanup_cfg (CLEANUP_PRE_LOOP | CLEANUP_NO_INSN_DEL);\n+  cleanup_cfg (CLEANUP_NO_INSN_DEL);\n   return 0;\n }\n "}, {"sha": "f0e25a214ea34535c9087b979d2c24b27b1d1ceb", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599941607016f0574a55d77ba0cab0415fffdde6/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=599941607016f0574a55d77ba0cab0415fffdde6", "patch": "@@ -6696,7 +6696,7 @@ rest_of_handle_gcse (void)\n       timevar_push (TV_JUMP);\n       rebuild_jump_labels (get_insns ());\n       delete_dead_jumptables ();\n-      cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n+      cleanup_cfg (CLEANUP_EXPENSIVE);\n       timevar_pop (TV_JUMP);\n     }\n "}]}