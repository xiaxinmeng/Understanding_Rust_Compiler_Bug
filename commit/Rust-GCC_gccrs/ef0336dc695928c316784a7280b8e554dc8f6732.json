{"sha": "ef0336dc695928c316784a7280b8e554dc8f6732", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwMzM2ZGM2OTU5MjhjMzE2Nzg0YTcyODBiOGU1NTRkYzhmNjczMg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2018-11-15T00:41:10Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2018-11-15T00:41:10Z"}, "message": "re PR lto/55102 (The options -flto and -On do not behave as described in GCC docs)\n\n2018-11-14  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR lto/55102\n\tPR lto/56700\n\n\tgcc/\n\t* doc/invoke.texi (Optimize Options): Remove bad example about\n\tinteraction between -flto and -O.  Replace it with a note that\n\tyou need to compile with -O and not just link.  Copy-edit -flto\n\tdiscussion to reduce verbiage and improve flow.\n\nFrom-SVN: r266168", "tree": {"sha": "d1dad658abd201d03f932c1cd865b3804e59b2cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1dad658abd201d03f932c1cd865b3804e59b2cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef0336dc695928c316784a7280b8e554dc8f6732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0336dc695928c316784a7280b8e554dc8f6732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0336dc695928c316784a7280b8e554dc8f6732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0336dc695928c316784a7280b8e554dc8f6732/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97eb702c67b746d8ce2e0207bc3e6d183e039bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97eb702c67b746d8ce2e0207bc3e6d183e039bf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97eb702c67b746d8ce2e0207bc3e6d183e039bf8"}], "stats": {"total": 54, "additions": 26, "deletions": 28}, "files": [{"sha": "66a45c970a987732ff6262b90b00d38c6128585f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0336dc695928c316784a7280b8e554dc8f6732/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0336dc695928c316784a7280b8e554dc8f6732/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef0336dc695928c316784a7280b8e554dc8f6732", "patch": "@@ -1,3 +1,12 @@\n+2018-11-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR lto/55102\n+\tPR lto/56700\n+\t* doc/invoke.texi (Optimize Options): Remove bad example about\n+\tinteraction between -flto and -O.  Replace it with a note that\n+\tyou need to compile with -O and not just link.  Copy-edit -flto\n+\tdiscussion to reduce verbiage and improve flow.\n+\n 2018-11-14  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR middle-end/59658"}, {"sha": "f6486de2ccd57d75f506315dfe1d77bc26e92368", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 28, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0336dc695928c316784a7280b8e554dc8f6732/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0336dc695928c316784a7280b8e554dc8f6732/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ef0336dc695928c316784a7280b8e554dc8f6732", "patch": "@@ -9822,15 +9822,11 @@ The above generates bytecode for @file{foo.c} and @file{bar.c},\n merges them together into a single GIMPLE representation and optimizes\n them as usual to produce @file{myprog}.\n \n-The only important thing to keep in mind is that to enable link-time\n+The important thing to keep in mind is that to enable link-time\n optimizations you need to use the GCC driver to perform the link step.\n-GCC then automatically performs link-time optimization if any of the\n+GCC automatically performs link-time optimization if any of the\n objects involved were compiled with the @option{-flto} command-line option.  \n-You generally\n-should specify the optimization options to be used for link-time\n-optimization though GCC tries to be clever at guessing an\n-optimization level to use from the options used at compile time\n-if you fail to specify one at link time.  You can always override\n+You can always override\n the automatic decision to do link-time optimization\n by passing @option{-fno-lto} to the link command.\n \n@@ -9844,8 +9840,8 @@ the linker plugin is not available, @option{-fwhole-program} should be\n used to allow the compiler to make these assumptions, which leads\n to more aggressive optimization decisions.\n \n-When @option{-fuse-linker-plugin} is not enabled, when a file is\n-compiled with @option{-flto}, the generated object file is larger than\n+When a file is compiled with @option{-flto} without\n+@option{-fuse-linker-plugin}, the generated object file is larger than\n a regular object file because it contains GIMPLE bytecodes and the usual\n final code (see @option{-ffat-lto-objects}.  This means that\n object files with LTO information can be linked as normal object\n@@ -9854,36 +9850,29 @@ interprocedural optimizations are applied.  Note that when\n @option{-fno-fat-lto-objects} is enabled the compile stage is faster\n but you cannot perform a regular, non-LTO link on them.\n \n-Additionally, the optimization flags used to compile individual files\n-are not necessarily related to those used at link time.  For instance,\n-\n-@smallexample\n-gcc -c -O0 -ffat-lto-objects -flto foo.c\n-gcc -c -O0 -ffat-lto-objects -flto bar.c\n-gcc -o myprog -O3 foo.o bar.o\n-@end smallexample\n-\n-This produces individual object files with unoptimized assembler\n-code, but the resulting binary @file{myprog} is optimized at\n-@option{-O3}.  If, instead, the final binary is generated with\n-@option{-fno-lto}, then @file{myprog} is not optimized.\n-\n When producing the final binary, GCC only\n applies link-time optimizations to those files that contain bytecode.\n Therefore, you can mix and match object files and libraries with\n GIMPLE bytecodes and final object code.  GCC automatically selects\n which files to optimize in LTO mode and which files to link without\n further processing.\n \n-There are some code generation flags preserved by GCC when\n-generating bytecodes, as they need to be used during the final link\n-stage.  Generally options specified at link time override those\n-specified at compile time.\n+Generally, options specified at link time override those\n+specified at compile time, although in some cases GCC attempts to infer\n+link-time options from the settings used to compile the input files.\n \n If you do not specify an optimization level option @option{-O} at\n link time, then GCC uses the highest optimization level \n-used when compiling the object files.\n+used when compiling the object files.  Note that it is generally \n+ineffective to specify an optimization level option only at link time and \n+not at compile time, for two reasons.  First, compiling without \n+optimization suppresses compiler passes that gather information \n+needed for effective optimization at link time.  Second, some early\n+optimization passes can be performed only at compile time and \n+not at link time.\n \n+There are some code generation flags preserved by GCC when\n+generating bytecodes, as they need to be used during the final link.\n Currently, the following options and their settings are taken from\n the first object file that explicitly specifies them: \n @option{-fPIC}, @option{-fpic}, @option{-fpie}, @option{-fcommon},"}]}