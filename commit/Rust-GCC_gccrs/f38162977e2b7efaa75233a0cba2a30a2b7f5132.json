{"sha": "f38162977e2b7efaa75233a0cba2a30a2b7f5132", "node_id": "C_kwDOANBUbNoAKGYzODE2Mjk3N2UyYjdlZmFhNzUyMzNhMGNiYTJhMzBhMmI3ZjUxMzI", "commit": {"author": {"name": "melonedo", "email": "funanzeng@gmail.com", "date": "2022-09-19T08:01:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-09-27T16:28:39Z"}, "message": "runtime: synchronize empty struct field handling\n\nIn GCCGO and gollvm, the logic for allocating one byte for the last field is:\n1. the last field has zero size\n2. the struct itself does not have zero size\n3. the last field is not blank\nthis commit adds the last two conditions to runtime.structToFFI.\n\nFor golang/go#55146\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/431735", "tree": {"sha": "fe1805c24a4ce17d6d50af1ed31d23cb29ae935e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe1805c24a4ce17d6d50af1ed31d23cb29ae935e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f38162977e2b7efaa75233a0cba2a30a2b7f5132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38162977e2b7efaa75233a0cba2a30a2b7f5132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38162977e2b7efaa75233a0cba2a30a2b7f5132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38162977e2b7efaa75233a0cba2a30a2b7f5132/comments", "author": null, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b2706ac0e6d6b990d789325f9e081dfe4501f4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2706ac0e6d6b990d789325f9e081dfe4501f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2706ac0e6d6b990d789325f9e081dfe4501f4f"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "73aa712dbdf8434fc9d481287d32156406e5ecda", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38162977e2b7efaa75233a0cba2a30a2b7f5132/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38162977e2b7efaa75233a0cba2a30a2b7f5132/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=f38162977e2b7efaa75233a0cba2a30a2b7f5132", "patch": "@@ -1,4 +1,4 @@\n-42efec8c126cf3787bc7c89d9c7f224eff7c5a21\n+0140cca9bc0fad1108c7ed369376ac71cc4bfecf\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "86ce5b85d046aee89c9de2c4f72fa3309f82252b", "filename": "libgo/go/runtime/ffi.go", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f38162977e2b7efaa75233a0cba2a30a2b7f5132/libgo%2Fgo%2Fruntime%2Fffi.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f38162977e2b7efaa75233a0cba2a30a2b7f5132/libgo%2Fgo%2Fruntime%2Fffi.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fffi.go?ref=f38162977e2b7efaa75233a0cba2a30a2b7f5132", "patch": "@@ -4,6 +4,7 @@\n \n // Only build this file if libffi is supported.\n \n+//go:build libffi\n // +build libffi\n \n package runtime\n@@ -221,16 +222,14 @@ func stringToFFI() *__ffi_type {\n // structToFFI returns an ffi_type for a Go struct type.\n func structToFFI(typ *structtype) *__ffi_type {\n \tc := len(typ.fields)\n-\tif c == 0 {\n-\t\treturn emptyStructToFFI()\n-\t}\n \tif typ.typ.kind&kindDirectIface != 0 {\n \t\treturn ffi_type_pointer()\n \t}\n \n \tfields := make([]*__ffi_type, 0, c+1)\n \tcheckPad := false\n \tlastzero := false\n+\tsawnonzero := false\n \tfor i, v := range typ.fields {\n \t\t// Skip zero-sized fields; they confuse libffi,\n \t\t// and there is no value to pass in any case.\n@@ -239,10 +238,13 @@ func structToFFI(typ *structtype) *__ffi_type {\n \t\t// next field.\n \t\tif v.typ.size == 0 {\n \t\t\tcheckPad = true\n-\t\t\tlastzero = true\n+\t\t\tif v.name == nil || *v.name != \"_\" {\n+\t\t\t\tlastzero = true\n+\t\t\t}\n \t\t\tcontinue\n \t\t}\n \t\tlastzero = false\n+\t\tsawnonzero = true\n \n \t\tif checkPad {\n \t\t\toff := uintptr(0)\n@@ -263,6 +265,10 @@ func structToFFI(typ *structtype) *__ffi_type {\n \t\tfields = append(fields, typeToFFI(v.typ))\n \t}\n \n+\tif !sawnonzero {\n+\t\treturn emptyStructToFFI()\n+\t}\n+\n \tif lastzero {\n \t\t// The compiler adds one byte padding to non-empty struct ending\n \t\t// with a zero-sized field (types.cc:get_backend_struct_fields)."}]}