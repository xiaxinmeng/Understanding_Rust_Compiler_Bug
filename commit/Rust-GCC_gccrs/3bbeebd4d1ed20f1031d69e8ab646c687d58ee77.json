{"sha": "3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiZWViZDRkMWVkMjBmMTAzMWQ2OWU4YWI2NDZjNjg3ZDU4ZWU3Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-04-03T14:59:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-04-03T14:59:21Z"}, "message": "i386.c (emit_i387_cw_initialization): Always use logic instructions when changing rounding bits to preserve precision...\n\n\t* config/i386/i386.c (emit_i387_cw_initialization): Always use logic\n\tinstructions when changing rounding bits to preserve precision bits\n\tin the x87 control word.\n\nFrom-SVN: r259034", "tree": {"sha": "19bc8e63f17d9e4c7c667ea572f12b076aeda673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19bc8e63f17d9e4c7c667ea572f12b076aeda673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2d0710e1a88ec2a97939ab3ee87a84d1f62720a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d0710e1a88ec2a97939ab3ee87a84d1f62720a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d0710e1a88ec2a97939ab3ee87a84d1f62720a"}], "stats": {"total": 92, "additions": 31, "deletions": 61}, "files": [{"sha": "f1030b4fd64efd903d77482e7810ab6c7a23a3d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "patch": "@@ -1,3 +1,9 @@\n+2018-04-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (emit_i387_cw_initialization): Always use logic\n+\tinstructions when changing rounding bits to preserve precision bits\n+\tin the x87 control word.\n+\n 2018-04-03  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/82491"}, {"sha": "44ef60e563982f8a8277f28d0e303c8da9833120", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 25, "deletions": 61, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbeebd4d1ed20f1031d69e8ab646c687d58ee77/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3bbeebd4d1ed20f1031d69e8ab646c687d58ee77", "patch": "@@ -19678,72 +19678,36 @@ emit_i387_cw_initialization (int mode)\n   emit_insn (gen_x86_fnstcw_1 (stored_mode));\n   emit_move_insn (reg, copy_rtx (stored_mode));\n \n-  if (TARGET_64BIT || TARGET_PARTIAL_REG_STALL\n-      || optimize_insn_for_size_p ())\n-    {\n-      switch (mode)\n-\t{\n-\tcase I387_CW_TRUNC:\n-\t  /* round toward zero (truncate) */\n-\t  emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0c00)));\n-\t  slot = SLOT_CW_TRUNC;\n-\t  break;\n-\n-\tcase I387_CW_FLOOR:\n-\t  /* round down toward -oo */\n-\t  emit_insn (gen_andhi3 (reg, reg, GEN_INT (~0x0c00)));\n-\t  emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0400)));\n-\t  slot = SLOT_CW_FLOOR;\n-\t  break;\n-\n-\tcase I387_CW_CEIL:\n-\t  /* round up toward +oo */\n-\t  emit_insn (gen_andhi3 (reg, reg, GEN_INT (~0x0c00)));\n-\t  emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0800)));\n-\t  slot = SLOT_CW_CEIL;\n-\t  break;\n-\n-\tcase I387_CW_MASK_PM:\n-\t  /* mask precision exception for nearbyint() */\n-\t  emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0020)));\n-\t  slot = SLOT_CW_MASK_PM;\n-\t  break;\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n-    }\n-  else\n+  switch (mode)\n     {\n-      switch (mode)\n-\t{\n-\tcase I387_CW_TRUNC:\n-\t  /* round toward zero (truncate) */\n-\t  emit_insn (gen_insvsi_1 (reg, GEN_INT (0xc)));\n-\t  slot = SLOT_CW_TRUNC;\n-\t  break;\n+    case I387_CW_TRUNC:\n+      /* round toward zero (truncate) */\n+      emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0c00)));\n+      slot = SLOT_CW_TRUNC;\n+      break;\n \n-\tcase I387_CW_FLOOR:\n-\t  /* round down toward -oo */\n-\t  emit_insn (gen_insvsi_1 (reg, GEN_INT (0x4)));\n-\t  slot = SLOT_CW_FLOOR;\n-\t  break;\n+    case I387_CW_FLOOR:\n+      /* round down toward -oo */\n+      emit_insn (gen_andhi3 (reg, reg, GEN_INT (~0x0c00)));\n+      emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0400)));\n+      slot = SLOT_CW_FLOOR;\n+      break;\n \n-\tcase I387_CW_CEIL:\n-\t  /* round up toward +oo */\n-\t  emit_insn (gen_insvsi_1 (reg, GEN_INT (0x8)));\n-\t  slot = SLOT_CW_CEIL;\n-\t  break;\n+    case I387_CW_CEIL:\n+      /* round up toward +oo */\n+      emit_insn (gen_andhi3 (reg, reg, GEN_INT (~0x0c00)));\n+      emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0800)));\n+      slot = SLOT_CW_CEIL;\n+      break;\n \n-\tcase I387_CW_MASK_PM:\n-\t  /* mask precision exception for nearbyint() */\n-\t  emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0020)));\n-\t  slot = SLOT_CW_MASK_PM;\n-\t  break;\n+    case I387_CW_MASK_PM:\n+      /* mask precision exception for nearbyint() */\n+      emit_insn (gen_iorhi3 (reg, reg, GEN_INT (0x0020)));\n+      slot = SLOT_CW_MASK_PM;\n+      break;\n \n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+    default:\n+      gcc_unreachable ();\n     }\n \n   gcc_assert (slot < MAX_386_STACK_LOCALS);"}]}