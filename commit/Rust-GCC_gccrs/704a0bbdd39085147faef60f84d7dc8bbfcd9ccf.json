{"sha": "704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0YTBiYmRkMzkwODUxNDdmYWVmNjBmODRkN2RjOGJiZmNkOWNjZg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-03-01T01:12:08Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-03-01T01:12:08Z"}, "message": "parser.c (cp_parser_init_declarator): Revert opaque vector_opaque_p change.\n\n2003-02-28  Aldy Hernandez  <aldyh@redhat.com>\n\n        * parser.c (cp_parser_init_declarator): Revert opaque\n        vector_opaque_p change.\n        Do not include target.h.\n\nFrom-SVN: r63599", "tree": {"sha": "2f8e24c5e57fadcdd288a11414b642d42fc094c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f8e24c5e57fadcdd288a11414b642d42fc094c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f53c0dc86b5d312743835190536681b50cd911c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f53c0dc86b5d312743835190536681b50cd911c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f53c0dc86b5d312743835190536681b50cd911c"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "78d4f262e655fdb4d65e6ada615aaf36fe49e38f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "patch": "@@ -1,3 +1,9 @@\n+2003-02-28  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * parser.c (cp_parser_init_declarator): Revert opaque\n+        vector_opaque_p change.\n+        Do not include target.h.\n+\n 2003-02-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9879"}, {"sha": "fb02453f55dc9583473d481c1a40f4fd2187fa35", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704a0bbdd39085147faef60f84d7dc8bbfcd9ccf/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=704a0bbdd39085147faef60f84d7dc8bbfcd9ccf", "patch": "@@ -34,7 +34,6 @@\n #include \"diagnostic.h\"\n #include \"toplev.h\"\n #include \"output.h\"\n-#include \"target.h\"\n \n \f\n /* The lexer.  */\n@@ -9703,13 +9702,7 @@ cp_parser_init_declarator (cp_parser* parser,\n \n   /* Parse the initializer.  */\n   if (is_initialized)\n-    {\n-      if ((*targetm.vector_opaque_p) (TREE_TYPE (decl)))\n-\tcp_parser_error (parser, \"opaque vector types cannot be initialized\");\n-\n-      initializer = cp_parser_initializer (parser, \n-\t\t\t\t\t   &is_parenthesized_init);\n-    }\n+    initializer = cp_parser_initializer (parser, &is_parenthesized_init);\n   else\n     {\n       initializer = NULL_TREE;"}]}