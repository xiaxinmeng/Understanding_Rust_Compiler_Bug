{"sha": "fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEwOTIxZmNkMGM4OTk1NDZmZTJkNGY2ZjRjZWUwYWIwMWVhOTdlYg==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2010-09-13T19:41:12Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2010-09-13T19:41:12Z"}, "message": "volatile-2.c: Allow underscores before symbols.\n\n\t* gcc.target/i386/volatile-2.c: Allow underscores before symbols.\n\nFrom-SVN: r164256", "tree": {"sha": "7066ba7abb4b16dd48b8af78423d20cb43ad243f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7066ba7abb4b16dd48b8af78423d20cb43ad243f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e72eba8584e4a8bb548e120a2ebb6bbdec8a91a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72eba8584e4a8bb548e120a2ebb6bbdec8a91a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72eba8584e4a8bb548e120a2ebb6bbdec8a91a1"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "d1b690a82e494457caff66b6c647b5b8d8ef5948", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "patch": "@@ -1,3 +1,7 @@\n+2010-09-13  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* gcc.target/i386/volatile-2.c: Allow underscores before symbols.\n+\n 2010-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/fma4-256-vector.c: Add -mtune=generic."}, {"sha": "f4e6fb124a82ae066ace93708d786516ce9a9c47", "filename": "gcc/testsuite/gcc.target/i386/volatile-2.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c?ref=fa0921fcd0c899546fe2d4f6f4cee0ab01ea97eb", "patch": "@@ -11,26 +11,26 @@ extern int volatile obj_0;\n void test_0 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_0(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_0(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_0(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_0(\\\\(%rip\\\\))?,\" } } */\n   obj_0 = data;\n }\n \n extern int volatile obj_1;\n int test_1 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_1(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_1(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_1(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_1(\\\\(%rip\\\\))?,\" } } */\n   return obj_1 = data;\n }\n \n extern int volatile obj_2;\n int test_2 (void)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_2(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_2(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_2(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_2(\\\\(%rip\\\\))?,\" } } */\n   return obj_2 = 0;\n }\n \n@@ -41,25 +41,25 @@ extern int volatile obj_3;\n int test_3 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_3(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_3(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_3(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_3(\\\\(%rip\\\\))?,\" } } */\n   return (obj_3 = data, 0);\n }\n \n extern int volatile obj_4;\n int test_4 (void)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_4(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_4(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_4(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_4(\\\\(%rip\\\\))?,\" } } */\n   return (obj_4 = 0, 0);\n }\n extern int volatile obj_5;\n int test_5 (void)\n {\n   /* should reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_5(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]obj_5(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_5(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]_?obj_5(\\\\(%rip\\\\))?,\" } } */\n   return (obj_5 = 0, obj_5);\n }\n \n@@ -69,25 +69,25 @@ extern int volatile obj_6;\n void test_6 (int data, int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_6(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_6(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_6(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_6(\\\\(%rip\\\\))?,\" } } */\n   cond ? obj_6 = data : 0;\n }\n \n extern int volatile obj_7;\n int test_7 (int data, int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_7(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_7(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_7(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_7(\\\\(%rip\\\\))?,\" } } */\n   return cond ? obj_7 = data : 0;\n }\n \n extern int volatile obj_8;\n int test_8 (int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_8(\\\\(%rip\\\\))?\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_8(\\\\(%rip\\\\))?,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, _?obj_8(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]_?obj_8(\\\\(%rip\\\\))?,\" } } */\n   return cond ? obj_8 = 0 : 0;\n }"}]}