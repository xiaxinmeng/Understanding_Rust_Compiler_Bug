{"sha": "b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmYmQxNDdmZTYxZDUzZjQ2ZGJmNjBmYzExMDNlYzAxNDA5YzhiNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-09-16T14:55:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-09-16T14:55:37Z"}, "message": "system_error (system_error::system_error(error_code), [...]): Fix for what() to return the NBTS recommended in the Note in 19.5.6.2/14.\n\n2010-09-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/system_error (system_error::system_error(error_code),\n\tsystem_error(error_code, const string&), system_error(int, const\n\terror_category&), system_error(int, const error_category&,\n\tconst string&)): Fix for what() to return the NBTS recommended in\n\tthe Note in 19.5.6.2/14.\n\t* testsuite/19_diagnostics/system_error/cons-1.cc: Adjust.\n\t* testsuite/19_diagnostics/system_error/what-1.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-2.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-big.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-3.cc: Likewise.\n\n\t* testsuite/19_diagnostics/system_error/what-4.cc: Tidy includes.\n\nFrom-SVN: r164339", "tree": {"sha": "62c67233a98b4b2f7d6e793a4fc989df02ce2345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c67233a98b4b2f7d6e793a4fc989df02ce2345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/comments", "author": null, "committer": null, "parents": [{"sha": "7d58b9e77aab0f4c8cd8f6eb4dc618b240325099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d58b9e77aab0f4c8cd8f6eb4dc618b240325099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d58b9e77aab0f4c8cd8f6eb4dc618b240325099"}], "stats": {"total": 67, "additions": 40, "deletions": 27}, "files": [{"sha": "1af8a2861a15057c1d7a82275ac114d510600d58", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,3 +1,18 @@\n+2010-09-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/system_error (system_error::system_error(error_code),\n+\tsystem_error(error_code, const string&), system_error(int, const\n+\terror_category&), system_error(int, const error_category&,\n+\tconst string&)): Fix for what() to return the NBTS recommended in\n+\tthe Note in 19.5.6.2/14.\n+\t* testsuite/19_diagnostics/system_error/cons-1.cc: Adjust.\n+\t* testsuite/19_diagnostics/system_error/what-1.cc: Likewise.\n+\t* testsuite/19_diagnostics/system_error/what-2.cc: Likewise.\n+\t* testsuite/19_diagnostics/system_error/what-big.cc: Likewise.\n+\t* testsuite/19_diagnostics/system_error/what-3.cc: Likewise.\n+\n+\t* testsuite/19_diagnostics/system_error/what-4.cc: Tidy includes.\n+\n 2010-09-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/complex (complex<float>::operator=(float),"}, {"sha": "2c968e92e9032b4959c489471192639a65b313e7", "filename": "libstdc++-v3/include/std/system_error", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -311,26 +311,29 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   public:\n     system_error(error_code __ec = error_code())\n-    : runtime_error(\"\"), _M_code(__ec) { }\n+    : runtime_error(__ec.message()), _M_code(__ec) { }\n \n     system_error(error_code __ec, const string& __what)\n-    : runtime_error(__what), _M_code(__ec) { }\n-    \n+    : runtime_error(__what + \": \" + __ec.message()), _M_code(__ec) { }\n+\n     /*\n      * TODO: Add const char* ctors to all exceptions.\n      *\n      * system_error(error_code __ec, const char* __what)\n-     * : runtime_error(__what), _M_code(__ec) { }\n+     * : runtime_error(__what + (\": \" + __ec.message())), _M_code(__ec) { }\n      *\n      * system_error(int __v, const error_category& __ecat, const char* __what)\n-     * : runtime_error(__what), _M_code(error_code(__v, __ecat)) { }\n+     * : runtime_error(__what + (\": \" + __ec.message())),\n+     *   _M_code(error_code(__v, __ecat)) { }\n      */\n \n     system_error(int __v, const error_category& __ecat)\n-    : runtime_error(\"\"), _M_code(error_code(__v, __ecat)) { }\n+    : runtime_error(error_code(__v, __ecat).message()),\n+      _M_code(__v, __ecat) { }\n \n     system_error(int __v, const error_category& __ecat, const string& __what)\n-    : runtime_error(__what), _M_code(error_code(__v, __ecat)) { }\n+    : runtime_error(__what + \": \" + error_code(__v, __ecat).message()),\n+      _M_code(__v, __ecat) { }\n \n     virtual ~system_error() throw();\n "}, {"sha": "4a145a993491f062181864b4989320b04463d202", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/cons-1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fcons-1.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // 2007-06-05 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cstring>\n+#include <string>\n #include <system_error>\n #include <testsuite_hooks.h>\n \n@@ -33,14 +33,14 @@ int main()\n   {\n     std::system_error err1(e, s);\n     VERIFY( err1.code() == e ); \n-    VERIFY( std::strcmp(err1.runtime_error::what(), s.c_str()) == 0 );\n+    VERIFY( std::string(err1.what()).find(s) != std::string::npos );\n   }\n \n   // 2\n   {\n     std::system_error err2(95, std::system_category(), s);\n     VERIFY( err2.code() == std::error_code(95, std::system_category()) ); \n-    VERIFY( std::strcmp(err2.runtime_error::what(), s.c_str()) == 0 );\n+    VERIFY( std::string((err2.what(), s)).find(s) != std::string::npos );\n   }\n \n   return 0;"}, {"sha": "9899dfb7ada5d5cfd2afae2b01173a080e1a11d5", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-1.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2008, 2009\n+// Copyright (C) 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -22,7 +22,6 @@\n \n #include <string>\n #include <system_error>\n-#include <cstring>\n #include <testsuite_hooks.h>\n \n using namespace std;\n@@ -39,8 +38,8 @@ void test01()\n   // 2\n   system_error obj2(error_code(), s);\n \n-  VERIFY( strcmp(obj1.what(), s.data()) == 0 );\n-  VERIFY( strcmp(obj2.what(), s.data()) == 0 );\n+  VERIFY( string(obj1.what()).find(s.data()) != string::npos );\n+  VERIFY( string(obj2.what()).find(s.data()) != string::npos );\n }\n \n void test02()\n@@ -49,7 +48,7 @@ void test02()\n   string s(\"lack of sunlight error\");\n   system_error x(error_code(), s);\n   \n-  VERIFY( strcmp(x.what(), s.data()) == 0 );\n+  VERIFY( string(x.what()).find(s.data()) != string::npos );\n }\n \n int main(void)"}, {"sha": "b5fe39cb2344cc9e13dc569030010c997da4a849", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-2.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-2.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2008, 2009\n+// Copyright (C) 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -22,7 +22,6 @@\n \n #include <string>\n #include <system_error>\n-#include <cstring>\n #include <testsuite_hooks.h>\n \n // libstdc++/2089\n@@ -38,7 +37,7 @@ void test03()\n   try\n     { throw fuzzy_logic(); }\n   catch(const fuzzy_logic& obj)\n-    { VERIFY( std::strcmp(\"whoa\", obj.what()) == 0 ); }\n+    { VERIFY( std::string(obj.what()).find(\"whoa\") != std::string::npos ); }\n   catch(...)\n     { VERIFY( false ); }\n }"}, {"sha": "d1d2ffee484ab09c57f02129f7a8c0652dfa9b5e", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-3.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -20,7 +20,6 @@\n \n #include <string>\n #include <system_error>\n-#include <cstring>\n #include <testsuite_hooks.h>\n \n // test copy ctors, assignment operators, and persistence of member string data\n@@ -52,7 +51,7 @@ void test04()\n     obj1 = obj2;\n   }\n   allocate_on_stack();\n-  VERIFY( std::strcmp(strlit1, obj1.what()) == 0 ); \n+  VERIFY( std::string(obj1.what()).find(strlit1) != std::string::npos ); \n \n   // block 02\n   {\n@@ -61,7 +60,7 @@ void test04()\n     obj1 = obj3;\n   }\n   allocate_on_stack();     \n-  VERIFY( std::strcmp(strlit2, obj1.what()) == 0 ); \n+  VERIFY( std::string(obj1.what()).find(strlit2) != std::string::npos ); \n }\n \n int main(void)"}, {"sha": "7c729c7f11740cceaab2d626599e7007df7df090", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-4.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-4.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2008, 2009\n+// Copyright (C) 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -20,7 +20,6 @@\n \n // 19.1 Exception classes\n \n-#include <cstring>\n #include <string>\n #include <system_error>\n #include <testsuite_hooks.h>"}, {"sha": "351fc2914d1bcb5dbe57963d61e3b0dc0d9d16b9", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-big.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fbd147fe61d53f46dbf60fc1103ec01409c8b4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-big.cc?ref=b5fbd147fe61d53f46dbf60fc1103ec01409c8b4", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,7 +17,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cstring>\n #include <string>\n #include <system_error>\n #include <testsuite_hooks.h>\n@@ -30,7 +29,7 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   const std::string xxx(10000, 'x');\n   test_type t(std::error_code(), xxx);\n-  VERIFY( std::strcmp(t.what(), xxx.c_str()) == 0 );\n+  VERIFY( std::string(t.what()).find(xxx) != std::string::npos );\n }\n \n int main(void)"}]}