{"sha": "87935f601efe35aa8fbefbd4cb53c92864148b14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc5MzVmNjAxZWZlMzVhYThmYmVmYmQ0Y2I1M2M5Mjg2NDE0OGIxNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-01T22:07:57Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-01T22:07:57Z"}, "message": "(find_reloads_address_1): Handle SUBREGs same as REGs.\n\nFrom-SVN: r5240", "tree": {"sha": "f2015339df02ca5cc8ca4fe4c6faac6fb2fbb425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2015339df02ca5cc8ca4fe4c6faac6fb2fbb425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87935f601efe35aa8fbefbd4cb53c92864148b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87935f601efe35aa8fbefbd4cb53c92864148b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87935f601efe35aa8fbefbd4cb53c92864148b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87935f601efe35aa8fbefbd4cb53c92864148b14/comments", "author": null, "committer": null, "parents": [{"sha": "5555d6d103826d686f2f4658f028009db877bdd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5555d6d103826d686f2f4658f028009db877bdd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5555d6d103826d686f2f4658f028009db877bdd2"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "37d0efce933511910ff5df3cd84a36350ef95b0f", "filename": "gcc/reload.c", "status": "modified", "additions": 34, "deletions": 20, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87935f601efe35aa8fbefbd4cb53c92864148b14/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87935f601efe35aa8fbefbd4cb53c92864148b14/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=87935f601efe35aa8fbefbd4cb53c92864148b14", "patch": "@@ -4379,30 +4379,44 @@ find_reloads_address_1 (x, context, loc, opnum, type, ind_levels)\n \n   if (code == PLUS)\n     {\n-      register rtx op0 = XEXP (x, 0);\n-      register rtx op1 = XEXP (x, 1);\n-      register RTX_CODE code0 = GET_CODE (op0);\n-      register RTX_CODE code1 = GET_CODE (op1);\n+      register rtx orig_op0 = XEXP (x, 0);\n+      register rtx orig_op1 = XEXP (x, 1);\n+      register RTX_CODE code0 = GET_CODE (orig_op0);\n+      register RTX_CODE code1 = GET_CODE (orig_op1);\n+      register rtx op0 = orig_op0;\n+      register rtx op1 = orig_op1;\n+\n+      if (GET_CODE (op0) == SUBREG)\n+\t{\n+\t  op0 = SUBREG_REG (op0);\n+\t  code0 = GET_CODE (op0);\n+\t}\n+      if (GET_CODE (op1) == SUBREG)\n+\t{\n+\t  op1 = SUBREG_REG (op1);\n+\t  code1 = GET_CODE (op1);\n+\t}\n+\n       if (code0 == MULT || code0 == SIGN_EXTEND || code1 == MEM)\n \t{\n-\t  find_reloads_address_1 (op0, 1, &XEXP (x, 0), opnum, type,\n+\t  find_reloads_address_1 (orig_op0, 1, &XEXP (x, 0), opnum, type,\n \t\t\t\t  ind_levels);\n-\t  find_reloads_address_1 (op1, 0, &XEXP (x, 1), opnum, type,\n+\t  find_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type,\n \t\t\t\t  ind_levels);\n \t}\n       else if (code1 == MULT || code1 == SIGN_EXTEND || code0 == MEM)\n \t{\n-\t  find_reloads_address_1 (op0, 0, &XEXP (x, 0), opnum, type,\n+\t  find_reloads_address_1 (orig_op0, 0, &XEXP (x, 0), opnum, type,\n \t\t\t\t  ind_levels);\n-\t  find_reloads_address_1 (op1, 1, &XEXP (x, 1), opnum, type,\n+\t  find_reloads_address_1 (orig_op1, 1, &XEXP (x, 1), opnum, type,\n \t\t\t\t  ind_levels);\n \t}\n       else if (code0 == CONST_INT || code0 == CONST\n \t       || code0 == SYMBOL_REF || code0 == LABEL_REF)\n-\tfind_reloads_address_1 (op1, 0, &XEXP (x, 1), opnum, type, ind_levels);\n+\tfind_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type, ind_levels);\n       else if (code1 == CONST_INT || code1 == CONST\n \t       || code1 == SYMBOL_REF || code1 == LABEL_REF)\n-\tfind_reloads_address_1 (op0, 0, &XEXP (x, 0), opnum, type, ind_levels);\n+\tfind_reloads_address_1 (orig_op0, 0, &XEXP (x, 0), opnum, type, ind_levels);\n       else if (code0 == REG && code1 == REG)\n \t{\n \t  if (REG_OK_FOR_INDEX_P (op0)\n@@ -4412,37 +4426,37 @@ find_reloads_address_1 (x, context, loc, opnum, type, ind_levels)\n \t      && REG_OK_FOR_BASE_P (op0))\n \t    return 0;\n \t  else if (REG_OK_FOR_BASE_P (op1))\n-\t    find_reloads_address_1 (op0, 1, &XEXP (x, 0), opnum, type, \n+\t    find_reloads_address_1 (orig_op0, 1, &XEXP (x, 0), opnum, type, \n \t\t\t\t    ind_levels);\n \t  else if (REG_OK_FOR_BASE_P (op0))\n-\t    find_reloads_address_1 (op1, 1, &XEXP (x, 1), opnum, type,\n+\t    find_reloads_address_1 (orig_op1, 1, &XEXP (x, 1), opnum, type,\n \t\t\t\t    ind_levels);\n \t  else if (REG_OK_FOR_INDEX_P (op1))\n-\t    find_reloads_address_1 (op0, 0, &XEXP (x, 0), opnum, type,\n+\t    find_reloads_address_1 (orig_op0, 0, &XEXP (x, 0), opnum, type,\n \t\t\t\t    ind_levels);\n \t  else if (REG_OK_FOR_INDEX_P (op0))\n-\t    find_reloads_address_1 (op1, 0, &XEXP (x, 1), opnum, type,\n+\t    find_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type,\n \t\t\t\t    ind_levels);\n \t  else\n \t    {\n-\t      find_reloads_address_1 (op0, 1, &XEXP (x, 0), opnum, type,\n+\t      find_reloads_address_1 (orig_op0, 1, &XEXP (x, 0), opnum, type,\n \t\t\t\t      ind_levels);\n-\t      find_reloads_address_1 (op1, 0, &XEXP (x, 1), opnum, type,\n+\t      find_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type,\n \t\t\t\t      ind_levels);\n \t    }\n \t}\n       else if (code0 == REG)\n \t{\n-\t  find_reloads_address_1 (op0, 1, &XEXP (x, 0), opnum, type,\n+\t  find_reloads_address_1 (orig_op0, 1, &XEXP (x, 0), opnum, type,\n \t\t\t\t  ind_levels);\n-\t  find_reloads_address_1 (op1, 0, &XEXP (x, 1), opnum, type,\n+\t  find_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type,\n \t\t\t\t  ind_levels);\n \t}\n       else if (code1 == REG)\n \t{\n-\t  find_reloads_address_1 (op1, 1, &XEXP (x, 1), opnum, type,\n+\t  find_reloads_address_1 (orig_op1, 1, &XEXP (x, 1), opnum, type,\n \t\t\t\t  ind_levels);\n-\t  find_reloads_address_1 (op0, 0, &XEXP (x, 0), opnum, type,\n+\t  find_reloads_address_1 (orig_op0, 0, &XEXP (x, 0), opnum, type,\n \t\t\t\t  ind_levels);\n \t}\n     }"}]}