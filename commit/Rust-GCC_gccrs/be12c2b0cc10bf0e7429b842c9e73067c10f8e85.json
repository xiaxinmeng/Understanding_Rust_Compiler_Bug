{"sha": "be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxMmMyYjBjYzEwYmYwZTc0MjliODQyYzllNzMwNjdjMTBmOGU4NQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2003-04-02T17:20:54Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2003-04-02T17:20:54Z"}, "message": "2003-04-02  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* config/rs6000/rs6000.c\n\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Redefine the\n\tmacros.\n\t(rs6000_issue_rate): Add case for 8540.\n\t(rs6000_use_sched_lookahead): New function.\n\n\t* config/rs6000/8540.md: Rename SIU units into SU ones and MIU\n\tunits into MU ones.\n\t(ppc8540_branch, ppc8540_cr_logical): Add one cycle in the\n\treservation before retirement.\n\t(ppc8540_multiply, ppc8540_load, ppc8540_store,\n\tppc8540_simple_float, ppc8540_vector_load, ppc8540_vector_store):\n\tRemove additional cycle in the reservation before retirement.\n\t(ppc8540_mfcr, ppc8540_mtcrf, ppc8540_mtjmpr): Add missed\n\treservation of ppc8540_issue.\n\nFrom-SVN: r65167", "tree": {"sha": "64e26658e2671094d1d275a0d5132da969150076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64e26658e2671094d1d275a0d5132da969150076"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f91f09492e5c9a43d813169ce54533ecffe3106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f91f09492e5c9a43d813169ce54533ecffe3106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f91f09492e5c9a43d813169ce54533ecffe3106"}], "stats": {"total": 138, "additions": 91, "deletions": 47}, "files": [{"sha": "7a1b00f17aec8e322641599cf59b18675e86792d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "patch": "@@ -1,3 +1,21 @@\n+2003-04-02  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* config/rs6000/rs6000.c\n+\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Redefine the\n+\tmacros.\n+\t(rs6000_issue_rate): Add case for 8540.\n+\t(rs6000_use_sched_lookahead): New function.\n+\n+\t* config/rs6000/8540.md: Rename SIU units into SU ones and MIU\n+\tunits into MU ones.\n+\t(ppc8540_branch, ppc8540_cr_logical): Add one cycle in the\n+\treservation before retirement.\n+\t(ppc8540_multiply, ppc8540_load, ppc8540_store,\n+\tppc8540_simple_float, ppc8540_vector_load, ppc8540_vector_store):\n+\tRemove additional cycle in the reservation before retirement.\n+\t(ppc8540_mfcr, ppc8540_mtcrf, ppc8540_mtjmpr): Add missed\n+\treservation of ppc8540_issue.\n+\t\n 2003-04-02  Andreas Schwab  <schwab@suse.de>\n \n \t* real.c (decode_ieee_single): Fix decoding of SNaN bit."}, {"sha": "b8651bb03cfba20dab2be5b85e9d126b44f2cb0e", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 57, "deletions": 47, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "patch": "@@ -20,6 +20,13 @@\n \n (define_automaton \"ppc8540_most,ppc8540_long,ppc8540_retire\")\n (define_cpu_unit \"ppc8540_decode_0,ppc8540_decode_1\" \"ppc8540_most\")\n+\n+;; We don't simulate general issue queue (GIC).  If we have SU insn\n+;; and then SU1 insn, they can not be issued on the same cycle\n+;; (although SU1 insn and then SU insn can be issued) because the SU\n+;; insn will go to SU1 from GIC0 entry.  Fortunately, the first cycle\n+;; multipass insn scheduling will find the situation and issue the SU1\n+;; insn and then the SU insn.\n (define_cpu_unit \"ppc8540_issue_0,ppc8540_issue_1\"   \"ppc8540_most\")\n \n ;; We could describe completion buffers slots in combination with the\n@@ -37,19 +44,19 @@\n ;; Branch unit:\n (define_cpu_unit \"ppc8540_bu\" \"ppc8540_most\")\n \n-;; SIU:\n-(define_cpu_unit \"ppc8540_siu0_stage0,ppc8540_siu1_stage0\" \"ppc8540_most\")\n+;; SU:\n+(define_cpu_unit \"ppc8540_su0_stage0,ppc8540_su1_stage0\" \"ppc8540_most\")\n \n-;; We could describe here MIU subunits for float multiply, float add\n+;; We could describe here MU subunits for float multiply, float add\n ;; etc.  But the result automaton would behave the same way as the\n-;; described one pipeline below because MIU can start only one insn\n+;; described one pipeline below because MU can start only one insn\n ;; per cycle.  Actually we could simplify the automaton more not\n ;; describing stages 1-3, the result automata would be the same.\n-(define_cpu_unit \"ppc8540_miu_stage0,ppc8540_miu_stage1\" \"ppc8540_most\")\n-(define_cpu_unit \"ppc8540_miu_stage2,ppc8540_miu_stage3\" \"ppc8540_most\")\n+(define_cpu_unit \"ppc8540_mu_stage0,ppc8540_mu_stage1\" \"ppc8540_most\")\n+(define_cpu_unit \"ppc8540_mu_stage2,ppc8540_mu_stage3\" \"ppc8540_most\")\n \n ;; The following unit is used to describe non-pipelined division.\n-(define_cpu_unit \"ppc8540_miu_div\" \"ppc8540_long\")\n+(define_cpu_unit \"ppc8540_mu_div\" \"ppc8540_long\")\n \n ;; Here we simplified LSU unit description not describing the stages.\n (define_cpu_unit \"ppc8540_lsu\" \"ppc8540_most\")\n@@ -58,13 +65,13 @@\n (define_cpu_unit \"present_ppc8540_decode_0\" \"ppc8540_most\")\n (define_cpu_unit \"present_ppc8540_issue_0\" \"ppc8540_most\")\n (define_cpu_unit \"present_ppc8540_retire_0\" \"ppc8540_retire\")\n-(define_cpu_unit \"present_ppc8540_siu0_stage0\" \"ppc8540_most\")\n+(define_cpu_unit \"present_ppc8540_su0_stage0\" \"ppc8540_most\")\n \n ;; The following sets to make automata deterministic when option ndfa is used.\n (presence_set \"present_ppc8540_decode_0\" \"ppc8540_decode_0\")\n (presence_set \"present_ppc8540_issue_0\" \"ppc8540_issue_0\")\n (presence_set \"present_ppc8540_retire_0\" \"ppc8540_retire_0\")\n-(presence_set \"present_ppc8540_siu0_stage0\" \"ppc8540_siu0_stage0\")\n+(presence_set \"present_ppc8540_su0_stage0\" \"ppc8540_su0_stage0\")\n \n ;; Some useful abbreviations.\n (define_reservation \"ppc8540_decode\"\n@@ -73,153 +80,156 @@\n     \"ppc8540_issue_0|ppc8540_issue_1+present_ppc8540_issue_0\")\n (define_reservation \"ppc8540_retire\"\n    \"ppc8540_retire_0|ppc8540_retire_1+present_ppc8540_retire_0\")\n-(define_reservation \"ppc8540_siu_stage0\"\n-   \"ppc8540_siu0_stage0|ppc8540_siu1_stage0+present_ppc8540_siu0_stage0\")\n+(define_reservation \"ppc8540_su_stage0\"\n+   \"ppc8540_su0_stage0|ppc8540_su1_stage0+present_ppc8540_su0_stage0\")\n \n-;; Simple SIU insns\n-(define_insn_reservation \"ppc8540_siu\" 1\n+;; Simple SU insns\n+(define_insn_reservation \"ppc8540_su\" 1\n   (and (eq_attr \"type\" \"integer,cmp,compare,delayed_compare,fast_compare\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n ;; Branch.  Actually this latency time is not used by the scheduler.\n (define_insn_reservation \"ppc8540_branch\" 1\n   (and (eq_attr \"type\" \"jmpreg,branch\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_bu+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_bu,ppc8540_retire\")\n \n ;; Multiply\n (define_insn_reservation \"ppc8540_multiply\" 4\n   (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n-   ppc8540_miu_stage2,ppc8540_miu_stage3,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0,ppc8540_mu_stage1,\\\n+   ppc8540_mu_stage2,ppc8540_mu_stage3+ppc8540_retire\")\n \n ;; Divide.  We use the average latency time here.  We omit reserving a\n-;; retire unit because of the result automata will be huge.\n+;; retire unit because of the result automata will be huge.  We ignore\n+;; reservation of miu_stage3 here because we use the average latency\n+;; time.\n (define_insn_reservation \"ppc8540_divide\" 14\n   (and (eq_attr \"type\" \"idiv\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n-   ppc8540_miu_div*13\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0+ppc8540_mu_div,\\\n+   ppc8540_mu_div*13\")\n \n ;; CR logical\n (define_insn_reservation \"ppc8540_cr_logical\" 1\n   (and (eq_attr \"type\" \"cr_logical,delayed_cr\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_bu+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_bu,ppc8540_retire\")\n \n ;; Mfcr\n (define_insn_reservation \"ppc8540_mfcr\" 1\n   (and (eq_attr \"type\" \"mfcr\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_siu1_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su1_stage0+ppc8540_retire\")\n \n ;; Mtcrf\n (define_insn_reservation \"ppc8540_mtcrf\" 1\n   (and (eq_attr \"type\" \"mtcr\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_siu1_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su1_stage0+ppc8540_retire\")\n \n ;; Mtjmpr\n (define_insn_reservation \"ppc8540_mtjmpr\" 1\n   (and (eq_attr \"type\" \"mtjmpr\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_siu_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n ;; Loads\n (define_insn_reservation \"ppc8540_load\" 3\n   (and (eq_attr \"type\" \"load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing,ppc8540_retire\")\n \n ;; Stores.\n (define_insn_reservation \"ppc8540_store\" 3\n   (and (eq_attr \"type\" \"store,store_ux,store_u\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing,ppc8540_retire\")\n \n ;; Simple FP\n (define_insn_reservation \"ppc8540_simple_float\" 1\n   (and (eq_attr \"type\" \"fpsimple\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n ;; FP\n (define_insn_reservation \"ppc8540_float\" 4\n   (and (eq_attr \"type\" \"fp\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n-   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0,ppc8540_mu_stage1,\\\n+   ppc8540_mu_stage2,ppc8540_mu_stage3+ppc8540_retire\")\n \n-;; float divides.  We omit reserving a retire unit because of the\n-;; result automata will be huge.\n+;; float divides.  We omit reserving a retire unit and miu_stage3\n+;; because of the result automata will be huge.\n (define_insn_reservation \"ppc8540_float_vector_divide\" 29\n   (and (eq_attr \"type\" \"vecfdiv\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n-   ppc8540_miu_div*28\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0+ppc8540_mu_div,\\\n+   ppc8540_mu_div*28\")\n \n ;; Brinc\n (define_insn_reservation \"ppc8540_brinc\" 1\n   (and (eq_attr \"type\" \"brinc\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n ;; Simple vector\n (define_insn_reservation \"ppc8540_simple_vector\" 1\n   (and (eq_attr \"type\" \"vecsimple\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su1_stage0+ppc8540_retire\")\n \n ;; Simple vector compare\n (define_insn_reservation \"ppc8540_simple_vector_compare\" 1\n   (and (eq_attr \"type\" \"veccmpsimple\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n ;; Vector compare\n (define_insn_reservation \"ppc8540_vector_compare\" 1\n   (and (eq_attr \"type\" \"veccmp\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su1_stage0+ppc8540_retire\")\n \n ;; evsplatfi evsplati\n (define_insn_reservation \"ppc8540_vector_perm\" 1\n   (and (eq_attr \"type\" \"vecperm\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su1_stage0+ppc8540_retire\")\n \n ;; Vector float\n (define_insn_reservation \"ppc8540_float_vector\" 4\n   (and (eq_attr \"type\" \"vecfloat\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n-   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0,ppc8540_mu_stage1,\\\n+   ppc8540_mu_stage2,ppc8540_mu_stage3+ppc8540_retire\")\n \n ;; Vector divides: Use the average.  We omit reserving a retire unit\n-;; because of the result automata will be huge.\n+;; because of the result automata will be huge.  We ignore reservation\n+;; of miu_stage3 here because we use the average latency time.\n (define_insn_reservation \"ppc8540_vector_divide\" 14\n   (and (eq_attr \"type\" \"vecdiv\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n-   ppc8540_miu_div*13\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0+ppc8540_mu_div,\\\n+   ppc8540_mu_div*13\")\n \n ;; Complex vector.\n (define_insn_reservation \"ppc8540_complex_vector\" 4\n   (and (eq_attr \"type\" \"veccomplex\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n-   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0,ppc8540_mu_stage1,\\\n+   ppc8540_mu_stage2,ppc8540_mu_stage3+ppc8540_retire\")\n \n ;; Vector load\n (define_insn_reservation \"ppc8540_vector_load\" 3\n   (and (eq_attr \"type\" \"vecload\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing,ppc8540_retire\")\n \n ;; Vector store\n (define_insn_reservation \"ppc8540_vector_store\" 3\n   (and (eq_attr \"type\" \"vecstore\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n-  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing,ppc8540_retire\")"}, {"sha": "f5d6a7e517b1907c13c62a3447ff4a85432261ff", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12c2b0cc10bf0e7429b842c9e73067c10f8e85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=be12c2b0cc10bf0e7429b842c9e73067c10f8e85", "patch": "@@ -241,6 +241,7 @@ static bool rs6000_rtx_costs PARAMS ((rtx, int, int, int *));\n static int rs6000_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n static int rs6000_adjust_priority PARAMS ((rtx, int));\n static int rs6000_issue_rate PARAMS ((void));\n+static int rs6000_use_sched_lookahead PARAMS ((void));\n \n static void rs6000_init_builtins PARAMS ((void));\n static rtx rs6000_expand_unop_builtin PARAMS ((enum insn_code, tree, rtx));\n@@ -407,6 +408,9 @@ static const char alt_reg_names[][8] =\n #undef TARGET_SCHED_ADJUST_PRIORITY\n #define TARGET_SCHED_ADJUST_PRIORITY rs6000_adjust_priority\n \n+#undef TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD\n+#define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD rs6000_use_sched_lookahead\n+\n #undef TARGET_INIT_BUILTINS\n #define TARGET_INIT_BUILTINS rs6000_init_builtins\n \n@@ -12661,6 +12665,7 @@ rs6000_issue_rate ()\n   case CPU_PPC603:\n   case CPU_PPC750:\n   case CPU_PPC7400:\n+  case CPU_PPC8540:\n     return 2; \n   case CPU_RIOS2:\n   case CPU_PPC604:\n@@ -12674,6 +12679,17 @@ rs6000_issue_rate ()\n   }\n }\n \n+/* Return how many instructions to look ahead for better insn\n+   scheduling.  */\n+\n+static int\n+rs6000_use_sched_lookahead ()\n+{\n+  if (rs6000_cpu_attr == CPU_PPC8540)\n+    return 4;\n+  return 0;\n+}\n+\n \f\n /* Length in units of the trampoline for entering a nested function.  */\n "}]}