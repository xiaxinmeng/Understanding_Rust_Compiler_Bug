{"sha": "f208c5ccc76fe9f15776e62d466ccb8f565d2284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIwOGM1Y2NjNzZmZTlmMTU3NzZlNjJkNDY2Y2NiOGY1NjVkMjI4NA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-01-13T20:41:00Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-01-13T20:41:00Z"}, "message": "re PR fortran/82007 (DTIO write format stored in a string leads to severe errors)\n\n2018-01-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n        PR fortran/82007\n        * resolve.c (resolve_transfer): Delete code looking for 'DT'\n        format specifiers in format strings. Set formatted to true if a\n        format string or format label is present.\n        * trans-io.c (get_dtio_proc): Likewise. (transfer_expr): Fix\n        whitespace.\n\nFrom-SVN: r256649", "tree": {"sha": "3a36687995781a9d97613d60463d8da90be8f6d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a36687995781a9d97613d60463d8da90be8f6d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f208c5ccc76fe9f15776e62d466ccb8f565d2284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f208c5ccc76fe9f15776e62d466ccb8f565d2284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f208c5ccc76fe9f15776e62d466ccb8f565d2284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f208c5ccc76fe9f15776e62d466ccb8f565d2284/comments", "author": null, "committer": null, "parents": [{"sha": "f36180f4a415cb579461f8f3e79a1a4aa80e6be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36180f4a415cb579461f8f3e79a1a4aa80e6be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36180f4a415cb579461f8f3e79a1a4aa80e6be8"}], "stats": {"total": 50, "additions": 16, "deletions": 34}, "files": [{"sha": "75331718092559daf01bfd3faa8f862dd17426c5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f208c5ccc76fe9f15776e62d466ccb8f565d2284", "patch": "@@ -1,3 +1,12 @@\n+2018-01-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/82007\n+\t* resolve.c (resolve_transfer): Delete code looking for 'DT'\n+\tformat specifiers in format strings. Set formatted to true if a\n+\tformat string or format label is present.\n+\t* trans-io.c (get_dtio_proc): Likewise. (transfer_expr): Fix\n+\twhitespace.\n+\t\n 2018-01-13  Thomas Koenig <tkoenig@gcc.gnu.org>\n \n \tPR fortran/83744"}, {"sha": "67568710b05a330eb5ef9fa818dc9a4cec6d8ab4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f208c5ccc76fe9f15776e62d466ccb8f565d2284", "patch": "@@ -9198,19 +9198,9 @@ resolve_transfer (gfc_code *code)\n       else\n \tderived = ts->u.derived->components->ts.u.derived;\n \n-      if (dt->format_expr)\n-\t{\n-\t  char *fmt;\n-\t  fmt = gfc_widechar_to_char (dt->format_expr->value.character.string,\n-\t\t\t\t      -1);\n-\t  if (strtok (fmt, \"DT\") != NULL)\n-\t    formatted = true;\n-\t}\n-      else if (dt->format_label == &format_asterisk)\n-\t{\n-\t  /* List directed io must call the formatted DTIO procedure.  */\n-\t  formatted = true;\n-\t}\n+      /* Determine when to use the formatted DTIO procedure.  */\n+      if (dt && (dt->format_expr || dt->format_label))\n+\tformatted = true;\n \n       write = dt->dt_io_kind->value.iokind == M_WRITE\n \t      || dt->dt_io_kind->value.iokind == M_PRINT;"}, {"sha": "082b9f7a52f8e3015bccb751dee41d81b78e4fe3", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f208c5ccc76fe9f15776e62d466ccb8f565d2284/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=f208c5ccc76fe9f15776e62d466ccb8f565d2284", "patch": "@@ -2227,25 +2227,9 @@ get_dtio_proc (gfc_typespec * ts, gfc_code * code, gfc_symbol **dtio_sub)\n   bool formatted = false;\n   gfc_dt *dt = code->ext.dt;\n \n-  if (dt)\n-    {\n-      char *fmt = NULL;\n-\n-      if (dt->format_label == &format_asterisk)\n-\t{\n-\t  /* List directed io must call the formatted DTIO procedure.  */\n-\t  formatted = true;\n-\t}\n-      else if (dt->format_expr)\n-\tfmt = gfc_widechar_to_char (dt->format_expr->value.character.string,\n-\t\t\t\t      -1);\n-      else if (dt->format_label)\n-\tfmt = gfc_widechar_to_char (dt->format_label->format->value.character.string,\n-\t\t\t\t      -1);\n-      if (fmt && strtok (fmt, \"DT\") != NULL)\n-\tformatted = true;\n-\n-    }\n+  /* Determine when to use the formatted DTIO procedure.  */\n+  if (dt && (dt->format_expr || dt->format_label))\n+    formatted = true;\n \n   if (ts->type == BT_CLASS)\n     derived = ts->u.derived->components->ts.u.derived;\n@@ -2455,8 +2439,7 @@ transfer_expr (gfc_se * se, gfc_typespec * ts, tree addr_expr,\n \t    {\n \t      /* Recurse into the elements of the derived type.  */\n \t      expr = gfc_evaluate_now (addr_expr, &se->pre);\n-\t      expr = build_fold_indirect_ref_loc (input_location,\n-\t\t\t\t      expr);\n+\t      expr = build_fold_indirect_ref_loc (input_location, expr);\n \n \t      /* Make sure that the derived type has been built.  An external\n \t\t function, if only referenced in an io statement, requires this"}]}