{"sha": "c6d851b95a7bd268c9ba8576d77e057fa162b855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkODUxYjk1YTdiZDI2OGM5YmE4NTc2ZDc3ZTA1N2ZhMTYyYjg1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-08T18:00:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-08T18:00:10Z"}, "message": "re PR rtl-optimization/55845 (454.calculix miscompares with -march=btver2 -O3 -ffastmath -fschedule-insns -mvzeroupper for test data run)\n\n\tPR rtl-optimization/55845\n\t* df-problems.c (can_move_insns_across): Stop scanning at\n\tvolatile_insn_p source instruction or give up if\n\tacross_from .. across_to range contains any volatile_insn_p\n\tinstructions.\n\n\t* gcc.target/i386/pr55845.c: New test.\n\nFrom-SVN: r195028", "tree": {"sha": "fb756f10444e5e6416cb8b94e292ce75b17b24f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb756f10444e5e6416cb8b94e292ce75b17b24f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6d851b95a7bd268c9ba8576d77e057fa162b855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d851b95a7bd268c9ba8576d77e057fa162b855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d851b95a7bd268c9ba8576d77e057fa162b855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d851b95a7bd268c9ba8576d77e057fa162b855/comments", "author": null, "committer": null, "parents": [{"sha": "4369c11e008025946fee81886a4b4a841c910408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4369c11e008025946fee81886a4b4a841c910408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4369c11e008025946fee81886a4b4a841c910408"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "83e02978ecb62d0b971a3486a136992ddc781a9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6d851b95a7bd268c9ba8576d77e057fa162b855", "patch": "@@ -1,3 +1,12 @@\n+2012-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/55845\n+\t* df-problems.c (can_move_insns_across): Stop scanning at\n+\tvolatile_insn_p source instruction or give up if\n+\tacross_from .. across_to range contains any volatile_insn_p\n+\tinstructions.\n+\n 2013-01-08  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (vec_init<mode>): New. "}, {"sha": "0af593d6c97616ec14f4d08f9eda3138b14198c6", "filename": "gcc/df-problems.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=c6d851b95a7bd268c9ba8576d77e057fa162b855", "patch": "@@ -1,6 +1,6 @@\n /* Standard problems for dataflow support routines.\n    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-   2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+   2008, 2009, 2010, 2011, 2012, 2013 Free Software Foundation, Inc.\n    Originally contributed by Michael P. Hayes\n              (m.hayes@elec.canterbury.ac.nz, mhayes@redhat.com)\n    Major rewrite contributed by Danny Berlin (dberlin@dberlin.org)\n@@ -3858,6 +3858,8 @@ can_move_insns_across (rtx from, rtx to, rtx across_from, rtx across_to,\n \t}\n       if (NONDEBUG_INSN_P (insn))\n \t{\n+\t  if (volatile_insn_p (PATTERN (insn)))\n+\t    return false;\n \t  memrefs_in_across |= for_each_rtx (&PATTERN (insn), find_memory,\n \t\t\t\t\t     NULL);\n \t  note_stores (PATTERN (insn), find_memory_stores,\n@@ -3917,7 +3919,9 @@ can_move_insns_across (rtx from, rtx to, rtx across_from, rtx across_to,\n       if (NONDEBUG_INSN_P (insn))\n \t{\n \t  if (may_trap_or_fault_p (PATTERN (insn))\n-\t      && (trapping_insns_in_across || other_branch_live != NULL))\n+\t      && (trapping_insns_in_across\n+\t\t  || other_branch_live != NULL\n+\t\t  || volatile_insn_p (PATTERN (insn))))\n \t    break;\n \n \t  /* We cannot move memory stores past each other, or move memory"}, {"sha": "d509109c1ebd075389c61e92d211c336622061e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6d851b95a7bd268c9ba8576d77e057fa162b855", "patch": "@@ -1,3 +1,9 @@\n+2012-01-08  Uros Bizjak  <ubizjak@gmail.com>\n+\t    Vladimir Yakovlev  <vladimir.b.yakovlev@intel.com>\n+\n+\tPR rtl-optimization/55845\n+\t* gcc.target/i386/pr55845.c: New test.\n+\n 2013-01-08  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* gcc.target/aarch64/vect-mull-compile.c: Explicitly scan for "}, {"sha": "59f7520efd6f189b37a0bdcc07c6b55d4fea1f5e", "filename": "gcc/testsuite/gcc.target/i386/pr55845.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55845.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d851b95a7bd268c9ba8576d77e057fa162b855/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55845.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55845.c?ref=c6d851b95a7bd268c9ba8576d77e057fa162b855", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O3 -ffast-math -fschedule-insns -mavx -mvzeroupper\" } */\n+\n+#include \"avx-check.h\"\n+\n+#define N 100\n+\n+double\n+__attribute__((noinline))\n+foo (int size, double *y, double *x)\n+{\n+  double sum = 0.0;\n+  int i;\n+  for (i = 0, sum = 0.; i < size; i++)\n+    sum += y[i] * x[i];\n+  return sum;\n+}\n+\n+static void\n+__attribute__ ((noinline))\n+avx_test ()\n+{\n+  double x[N];\n+  double y[N];\n+  double s;\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      x[i] = i;\n+      y[i] = i;\n+    }\n+\n+  s = foo (N, y, x);\n+\n+  if (s != 328350.0)\n+    abort ();\n+}"}]}