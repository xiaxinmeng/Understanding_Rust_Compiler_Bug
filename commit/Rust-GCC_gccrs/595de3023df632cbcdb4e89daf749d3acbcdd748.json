{"sha": "595de3023df632cbcdb4e89daf749d3acbcdd748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk1ZGUzMDIzZGY2MzJjYmNkYjRlODlkYWY3NDlkM2FjYmNkZDc0OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-08-19T17:14:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-08-19T17:14:33Z"}, "message": "re PR c++/41119 (Revision 150805 failed 447.dealII in SPEC CPU 2006)\n\n\tPR c++/41119\n\tPR c++/41120\n\t* decl2.c (mark_used): Increment function_depth during synthesis.\n\t* parser.c (cp_parser_default_argument): Not here.\n\nFrom-SVN: r150939", "tree": {"sha": "275bb6c8182e33d4221c2ad1e90ddfac0e1309a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/275bb6c8182e33d4221c2ad1e90ddfac0e1309a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/595de3023df632cbcdb4e89daf749d3acbcdd748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595de3023df632cbcdb4e89daf749d3acbcdd748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595de3023df632cbcdb4e89daf749d3acbcdd748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595de3023df632cbcdb4e89daf749d3acbcdd748/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc0c6451cd5551fe2f1cac817acf62e71ab73423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0c6451cd5551fe2f1cac817acf62e71ab73423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc0c6451cd5551fe2f1cac817acf62e71ab73423"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "7112a67df67a092e84b678305af0740d5234fa64", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=595de3023df632cbcdb4e89daf749d3acbcdd748", "patch": "@@ -1,3 +1,10 @@\n+2009-08-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41119\n+\tPR c++/41120\n+\t* decl2.c (mark_used): Increment function_depth during synthesis.\n+\t* parser.c (cp_parser_default_argument): Not here.\n+\n 2009-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* method.c (use_thunk): Call free_after_compilation after"}, {"sha": "225cd9db310dfcb98d33f7e29bc472ce0a75fd50", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=595de3023df632cbcdb4e89daf749d3acbcdd748", "patch": "@@ -3948,7 +3948,16 @@ mark_used (tree decl)\n       && !DECL_THUNK_P (decl)\n       && ! DECL_INITIAL (decl))\n     {\n+      /* Synthesizing an implicitly defined member function will result in\n+\t garbage collection.  We must treat this situation as if we were\n+\t within the body of a function so as to avoid collecting live data\n+\t on the stack (such as overload resolution candidates).\n+\n+         ??? Now that inlining is done unit-at-a-time, we ought to defer\n+         synthesis like we do templates.  */\n+      ++function_depth;\n       synthesize_method (decl);\n+      --function_depth;\n       /* If we've already synthesized the method we don't need to\n \t do the instantiation test below.  */\n     }"}, {"sha": "a3e9f0ebebcdc987ece171995012e59e6fd2069d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=595de3023df632cbcdb4e89daf749d3acbcdd748", "patch": "@@ -14615,21 +14615,13 @@ cp_parser_default_argument (cp_parser *parser, bool template_parm_p)\n      appear in a default argument.  */\n   saved_local_variables_forbidden_p = parser->local_variables_forbidden_p;\n   parser->local_variables_forbidden_p = true;\n-  /* The default argument expression may cause implicitly\n-     defined member functions to be synthesized, which will\n-     result in garbage collection.  We must treat this\n-     situation as if we were within the body of function so as\n-     to avoid collecting live data on the stack.  */\n-  ++function_depth;\n   /* Parse the assignment-expression.  */\n   if (template_parm_p)\n     push_deferring_access_checks (dk_no_deferred);\n   default_argument\n     = cp_parser_assignment_expression (parser, /*cast_p=*/false, NULL);\n   if (template_parm_p)\n     pop_deferring_access_checks ();\n-  /* Restore saved state.  */\n-  --function_depth;\n   parser->greater_than_is_operator_p = saved_greater_than_is_operator_p;\n   parser->local_variables_forbidden_p = saved_local_variables_forbidden_p;\n "}, {"sha": "a29294938c46030ae082785f7baa5ca5616e716d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=595de3023df632cbcdb4e89daf749d3acbcdd748", "patch": "@@ -1,3 +1,8 @@\n+2009-08-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41120\n+\t* g++.dg/other/gc4.C: New.\n+\n 2009-08-18  Michael Matz  <matz@suse.de>\n \n \t* gfortran.dg/vect/vect-gems.f90: New test."}, {"sha": "50c16b366db79a25b9bbbf6323d9197a280ccdef", "filename": "gcc/testsuite/g++.dg/other/gc4.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595de3023df632cbcdb4e89daf749d3acbcdd748/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc4.C?ref=595de3023df632cbcdb4e89daf749d3acbcdd748", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/41120\n+// { dg-options \"--param ggc-min-heapsize=0 --param ggc-min-expand=0\" }\n+\n+struct A\n+{\n+  A();\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+B b;"}]}