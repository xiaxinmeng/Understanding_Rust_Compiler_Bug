{"sha": "fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRlOWM0MjhjYTYzMGI1ZTRmYjRkYzI0ZmJhNmU1OWI5NWU0OGQ0Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-27T13:23:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-27T13:23:45Z"}, "message": "re PR tree-optimization/44284 (vectorization does not work for short variable)\n\n2010-05-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44284\n\t* tree-vect-stmts.c (vectorizable_assignment): Handle\n\tsign-changing conversions as simple copy.\n\n\t* gcc.dg/vect/vect-118.c: New testcase.\n\t* gcc.dg/vect/bb-slp-20.c: Adjust.\n\t* gcc.dg/vect/no-section-anchors-vect-36.c: Likewise.\n\t* gcc.dg/vect/slp-9.c: Likewise.\n\t* gcc.dg/vect/slp-reduc-4.c: Likewise.\n\t* gcc.dg/vect/vect-10.c: Likewise.\n\t* gcc.dg/vect/vect-109.c: Likewise.\n\t* gcc.dg/vect/vect-12.c: Likewise.\n\t* gcc.dg/vect/vect-36.c: Likewise.\n\t* gcc.dg/vect/vect-7.c: Likewise.\n\t* gcc.dg/vect/vect-iv-8.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-10.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-13.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-14.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-15.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-7.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-8.c: Likewise.\n\t* gcc.dg/vect/vect-multitypes-9.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-s16b.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-s8a.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-s8b.c: Likewise.\n\t* gcc.dg/vect/vect-reduc-dot-u16b.c: Likewise.\n\t* gcc.dg/vect/vect-strided-a-u32-mult.c: Likewise.\n\t* gcc.dg/vect/vect-strided-u32-mult.c: Likewise.\n\t* gcc.dg/vect/vect-widen-mult-s16.c: Likewise.\n\t* gcc.dg/vect/vect-widen-mult-s8.c: Likewise.\n\t* gcc.dg/vect/vect-widen-mult-sum.c: Likewise.\n\t* gcc.dg/vect/vect-widen-mult-u16.c: Likewise.\n\nFrom-SVN: r159920", "tree": {"sha": "c7af50810d78cf10cd129e4f8a04c3346b66466e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7af50810d78cf10cd129e4f8a04c3346b66466e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3714764d104151e6b3658ead1559cec3ee9266a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3714764d104151e6b3658ead1559cec3ee9266a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3714764d104151e6b3658ead1559cec3ee9266a6"}], "stats": {"total": 128, "additions": 104, "deletions": 24}, "files": [{"sha": "947d1b11c8dabf690a4e8d523812e91ad9a27461", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -1,3 +1,9 @@\n+2010-05-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44284\n+\t* tree-vect-stmts.c (vectorizable_assignment): Handle\n+\tsign-changing conversions as simple copy.\n+\n 2010-05-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* gthr-posix.h (pthread_cancel): Don't declare if compiling against"}, {"sha": "e9d2a9ac39ae047fedd8ac3bb60acff8602ae0dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -1,3 +1,35 @@\n+2010-05-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44284\n+\t* gcc.dg/vect/vect-118.c: New testcase.\n+\t* gcc.dg/vect/bb-slp-20.c: Adjust.\n+\t* gcc.dg/vect/no-section-anchors-vect-36.c: Likewise.\n+\t* gcc.dg/vect/slp-9.c: Likewise.\n+\t* gcc.dg/vect/slp-reduc-4.c: Likewise.\n+\t* gcc.dg/vect/vect-10.c: Likewise.\n+\t* gcc.dg/vect/vect-109.c: Likewise.\n+\t* gcc.dg/vect/vect-12.c: Likewise.\n+\t* gcc.dg/vect/vect-36.c: Likewise.\n+\t* gcc.dg/vect/vect-7.c: Likewise.\n+\t* gcc.dg/vect/vect-iv-8.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-10.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-13.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-14.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-15.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-7.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-8.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-9.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-s16b.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-s8a.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-s8b.c: Likewise.\n+\t* gcc.dg/vect/vect-reduc-dot-u16b.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-a-u32-mult.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-u32-mult.c: Likewise.\n+\t* gcc.dg/vect/vect-widen-mult-s16.c: Likewise.\n+\t* gcc.dg/vect/vect-widen-mult-s8.c: Likewise.\n+\t* gcc.dg/vect/vect-widen-mult-sum.c: Likewise.\n+\t* gcc.dg/vect/vect-widen-mult-u16.c: Likewise.\n+\n 2010-05-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* gcc.dg/glibc-uclibc-1.c, gcc.dg/glibc-uclibc-2.c: Remove, no longer"}, {"sha": "910eae5baff6f6407bd7ccc9f0e4901babb81b83", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-20.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -21,8 +21,7 @@ main1 (unsigned int x, unsigned int y)\n   else\n     y = x;\n \n-  /* Two SLP instances in the basic block, only one is supported for now,\n-     the second one contains type conversion.  */\n+  /* Two SLP instances in the basic block.  */\n   a0 = in[0] + 23;\n   a1 = in[1] + 142;\n   a2 = in[2] + 2;\n@@ -63,6 +62,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"basic block vectorized using SLP\" 1 \"slp\" { target vect_int_mult } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "947677346886e4e43d3810a603792f5e0c2a7ec4", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-36.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-36.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -18,6 +18,7 @@ int main1 ()\n   for (i = 0; i < N; i++)\n     {\n       s.cb[i] = 3*i;\n+      __asm__ volatile (\"\");\n     }\n \n   for (i = 0; i < N; i++)"}, {"sha": "7e1ede4b3f8511c75edaa9493315f1e2fe26ff09", "filename": "gcc/testsuite/gcc.dg/vect/slp-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-9.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -29,6 +29,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "b7b97a710e4837dd9146b241920929cf3acadb11", "filename": "gcc/testsuite/gcc.dg/vect/slp-reduc-4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-reduc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-reduc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-reduc-4.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -48,7 +48,10 @@ int main (void)\n   check_vect ();\n \n   for (i = 0; i < N; i++)\n-    uc[i] = i+3;\n+    {\n+      uc[i] = i+3;\n+      __asm__ volatile (\"\");\n+    }\n \n   main1 (N/8, 123, 124, 125, 126, 127, 128, 129, 313);\n   return 0;"}, {"sha": "6447b75a4f87fa2c81cdac7cf7728c8831fe8b16", "filename": "gcc/testsuite/gcc.dg/vect/vect-10.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -12,8 +12,7 @@ int foo ()\n   short b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   short c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n \n-\n-  /* Not vectorizable yet (strided access pattern).  */\n+  /* Strided access pattern.  */\n   for (i = 0; i < N/2; i++)\n     {\n       a[i] = b[2*i+1] * c[2*i+1] - b[2*i] * c[2*i];\n@@ -23,5 +22,5 @@ int foo ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { ! vect_extract_even_odd } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "393909312bd7185244aa2f4cf8e451f3daebc360", "filename": "gcc/testsuite/gcc.dg/vect/vect-109.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -72,7 +72,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 2 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"not vectorized: unsupported unaligned store\" 2 \"vect\" { xfail vect_hw_misalign } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 10 \"vect\" { target vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "bc08e9108a5e72991e39391726e0db193d4627d9", "filename": "gcc/testsuite/gcc.dg/vect/vect-118.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-118.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-118.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-118.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void f(short * __restrict__ a, short * __restrict__ b, short * __restrict__ x)\n+{\n+  int i;\n+  for (i=0;i<1024;i++)\n+    x[i] = a[i] + b[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "80a08c80213cafe5d391c7abcccdcfc25ea9d7a2", "filename": "gcc/testsuite/gcc.dg/vect/vect-12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -16,7 +16,7 @@ int main1 ()\n   short sc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n-  /* Not vectorizable yet (multiple types with different nunits in vector).  */\n+  /* Multiple types with different nunits in vector.  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = ib[i] + ic[i];\n@@ -40,5 +40,5 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "20df3940a48131a3857e29f5c0c5af3f2b731868", "filename": "gcc/testsuite/gcc.dg/vect/vect-36.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -18,6 +18,7 @@ int main1 ()\n   for (i = 0; i < N; i++)\n     {\n       s.cb[i] = 3*i;\n+      __asm__ volatile (\"\");\n     }\n \n   for (i = 0; i < N; i++)"}, {"sha": "7a6eb6180fc3906d8a925414f7ba0139cd1fe83c", "filename": "gcc/testsuite/gcc.dg/vect/vect-7.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -47,7 +47,6 @@ int main (void)\n   return main1 ();\n }\n \n-/* Fails for 32-bit targets that don't vectorize PLUS.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6544988b2472ef5028882cf9a84faace86c0e08c", "filename": "gcc/testsuite/gcc.dg/vect/vect-iv-8.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-8.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,9 +39,5 @@ int main (void)\n   return main1 (3);\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n-/* Fails to get vectorized due to a redundant cast. Once this is fixed, \n-   should be vectorized as follows:\n-   dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_pack_trunc && vect_unpack } } } \n-*/\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_pack_trunc && vect_unpack } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "60a4fc85481693ff76923f4c66d42b98c0fdc435", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-10.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -43,6 +43,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = 16-i;\n     uX[i] = 16-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "4200e62a17a43685d6560d9ced37ddcea031793d", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-13.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,6 +39,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = 16-i;\n     uX[i] = 16-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "816f4e49c58af9772d5e75d59fd62378e0d97c9f", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-14.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -31,6 +31,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     uX[i] = 16-i;\n     uY[i] = 16-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "f55872d8c7ccb93d068609ef75198d19e5b1e799", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-15.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -38,6 +38,7 @@ int main (void)\n     X[i] = i;\n     Y[i] = 64-i;\n     CX[i] = i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "4221d2db4a4df50232fd940cd2208430321acd46", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-7.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,6 +39,7 @@ int main (void)\n     X[i] = i;\n     Y[i] = 64-i;\n     CX[i] = i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "699c87bd172f137ab336806f8b1b6fcb24357c6c", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-8.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -31,6 +31,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     uX[i] = 16-i;\n     uY[i] = 16-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "9313f2a23aa6117864fd72a17218ad966b408eb5", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-9.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,6 +39,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = 16-i;\n     uX[i] = 16-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "c986344165bde3689956d2d73a8488f22f6cf4a9", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s16a.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16a.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,6 +39,7 @@ main (void)\n     {\n       X[i] = i;\n       Y[i] = N - i;\n+      __asm__ volatile (\"\");\n     }\n \n   dot = foo (N);"}, {"sha": "1344ca955536de145efb5a1e8819ac6d2a633ddd", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s16b.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s16b.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -39,6 +39,7 @@ main (void)\n     {\n       X[i] = i;\n       Y[i] = 64 - i;\n+      __asm__ volatile (\"\");\n     }\n \n   dot = foo (N);"}, {"sha": "96c2950c08806cb9a9f2d5f1bfd78289057a5bba", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s8a.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8a.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -40,6 +40,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   dot1 = foo1 (N);"}, {"sha": "53a240118c65151a70ae66f3449c16217fada566", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s8b.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8b.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -47,6 +47,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   dot2 = foo2 (N);"}, {"sha": "59b174e3f3688b1924f476c533080e25f07b8dc6", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-s8c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-s8c.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -32,6 +32,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   dot3 = foo3 (N);"}, {"sha": "42b104fb8f751768f404199fd43ba2b370d11686", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-dot-u16b.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u16b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u16b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-dot-u16b.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -37,6 +37,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   dot2 = foo2 (N);"}, {"sha": "bac1caa1ce920047d8e8d8ba12e86ba06c9eeeda", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-a-u32-mult.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u32-mult.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u32-mult.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u32-mult.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -26,8 +26,7 @@ main1 ()\n       arr[i] = i;\n       iarr[i].a = i;\n       iarr[i].b = i * 3;\n-      if (arr[i] == 178)\n-         abort();\n+      __asm__ volatile (\"\");\n     }\n \n   for (i = 0; i < N; i++)"}, {"sha": "f900b71f10d2b09fdbfd0f289e7bab9b0117b6b5", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-u32-mult.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u32-mult.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u32-mult.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u32-mult.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -53,8 +53,7 @@ int main (void)\n       arr[i] = i;\n       iarr[i].a = i;\n       iarr[i].b = i * 3;\n-      if (arr[i] == 178)\n-         abort();\n+      __asm__ volatile (\"\");\n     }\n   main1 (arr, iarr); \n     "}, {"sha": "983d7e70c7994c03b8351186ecfb9f712fd3918c", "filename": "gcc/testsuite/gcc.dg/vect/vect-widen-mult-s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s16.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -28,6 +28,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "7a4c3c0089e16e7ba4fe881fe6669f8c7d704e54", "filename": "gcc/testsuite/gcc.dg/vect/vect-widen-mult-s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-s8.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -28,6 +28,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "2898918306c963bebcf19f03267e2e344cc40b7a", "filename": "gcc/testsuite/gcc.dg/vect/vect-widen-mult-sum.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-sum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-sum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-sum.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -30,6 +30,7 @@ int main (void)\n \n   for (i=0; i<N; i++) {\n     X[i] = 16-i; \n+    __asm__ volatile (\"\");\n   }\n \n   sum = main1 (X, 1, 16, N-1);"}, {"sha": "92d2e85a9fc4dce98d704465c57f0a98cb634556", "filename": "gcc/testsuite/gcc.dg/vect/vect-widen-mult-u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-widen-mult-u16.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -30,6 +30,7 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    __asm__ volatile (\"\");\n   }\n \n   foo1 (N);"}, {"sha": "8f564104379a2798f13db9adec7fa5f09f100426", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=fde9c428ca630b5e4fb4dc24fba6e59b95e48d4c", "patch": "@@ -1829,14 +1829,16 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n   tree def;\n   gimple def_stmt;\n   enum vect_def_type dt[2] = {vect_unknown_def_type, vect_unknown_def_type};\n-  int nunits = TYPE_VECTOR_SUBPARTS (vectype);\n+  unsigned int nunits = TYPE_VECTOR_SUBPARTS (vectype);\n   int ncopies;\n   int i, j;\n   VEC(tree,heap) *vec_oprnds = NULL;\n   tree vop;\n   bb_vec_info bb_vinfo = STMT_VINFO_BB_VINFO (stmt_info);\n   gimple new_stmt = NULL;\n   stmt_vec_info prev_stmt_info = NULL;\n+  enum tree_code code;\n+  tree vectype_in;\n \n   /* Multiple types in SLP are handled by creating the appropriate number of\n      vectorized stmts for each SLP node. Hence, NCOPIES is always 1 in\n@@ -1862,19 +1864,31 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n   if (TREE_CODE (scalar_dest) != SSA_NAME)\n     return false;\n \n+  code = gimple_assign_rhs_code (stmt);\n   if (gimple_assign_single_p (stmt)\n-      || gimple_assign_rhs_code (stmt) == PAREN_EXPR)\n+      || code == PAREN_EXPR\n+      || CONVERT_EXPR_CODE_P (code))\n     op = gimple_assign_rhs1 (stmt);\n   else\n     return false;\n \n-  if (!vect_is_simple_use (op, loop_vinfo, bb_vinfo, &def_stmt, &def, &dt[0]))\n+  if (!vect_is_simple_use_1 (op, loop_vinfo, bb_vinfo,\n+\t\t\t     &def_stmt, &def, &dt[0], &vectype_in))\n     {\n       if (vect_print_dump_info (REPORT_DETAILS))\n         fprintf (vect_dump, \"use not simple.\");\n       return false;\n     }\n \n+  /* We can handle NOP_EXPR conversions that do not change the number\n+     of elements or the vector size.  */\n+  if (CONVERT_EXPR_CODE_P (code)\n+      && (!vectype_in\n+\t  || TYPE_VECTOR_SUBPARTS (vectype_in) != nunits\n+\t  || (GET_MODE_SIZE (TYPE_MODE (vectype))\n+\t      != GET_MODE_SIZE (TYPE_MODE (vectype_in)))))\n+    return false;\n+\n   if (!vec_stmt) /* transformation not required.  */\n     {\n       STMT_VINFO_TYPE (stmt_info) = assignment_vec_info_type;\n@@ -1903,6 +1917,8 @@ vectorizable_assignment (gimple stmt, gimple_stmt_iterator *gsi,\n       /* Arguments are ready. create the new vector stmt.  */\n       for (i = 0; VEC_iterate (tree, vec_oprnds, i, vop); i++)\n        {\n+\t if (CONVERT_EXPR_CODE_P (code))\n+\t   vop = build1_stat (VIEW_CONVERT_EXPR, vectype, vop);\n          new_stmt = gimple_build_assign (vec_dest, vop);\n          new_temp = make_ssa_name (vec_dest, new_stmt);\n          gimple_assign_set_lhs (new_stmt, new_temp);"}]}