{"sha": "a0ac393230b56069de1b28b7fea89ac0dfc708e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBhYzM5MzIzMGI1NjA2OWRlMWIyOGI3ZmVhODlhYzBkZmM3MDhlMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-08-04T12:34:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T12:34:16Z"}, "message": "sem_ch13.ads: Minor comment update\n\n2008-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.ads: Minor comment update\n\n\t* sem_res.adb: (Large_Storage_Type): Improve previous change.\n\nFrom-SVN: r138612", "tree": {"sha": "2c98d4773a34e951cf28404399417a3a5a4297d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c98d4773a34e951cf28404399417a3a5a4297d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0ac393230b56069de1b28b7fea89ac0dfc708e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ac393230b56069de1b28b7fea89ac0dfc708e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0ac393230b56069de1b28b7fea89ac0dfc708e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ac393230b56069de1b28b7fea89ac0dfc708e2/comments", "author": null, "committer": null, "parents": [{"sha": "5b2314f66005b217e7311c4c91643a3db48b9a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2314f66005b217e7311c4c91643a3db48b9a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2314f66005b217e7311c4c91643a3db48b9a05"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "d59c30bc0f9dbedf476e88aae96f5d8176efc5e6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ac393230b56069de1b28b7fea89ac0dfc708e2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ac393230b56069de1b28b7fea89ac0dfc708e2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a0ac393230b56069de1b28b7fea89ac0dfc708e2", "patch": "@@ -446,16 +446,18 @@ package body Sem_Res is\n                return;\n             end if;\n \n-            --   Detect a common beginner error:\n+            --   Detect a common error:\n \n             --   type R (D : Positive := 100) is record\n             --     Name : String (1 .. D);\n             --   end record;\n \n-            --  The default value causes an object of type R to be\n-            --  allocated with room for Positive'Last characters.\n+            --  The default value causes an object of type R to be allocated\n+            --  with room for Positive'Last characters. The RM does not mandate\n+            --  the allocation of the maximum size, but that is what GNAT does\n+            --  so we should warn the programmer that there is a problem.\n \n-            declare\n+            Check_Large : declare\n                SI : Node_Id;\n                T  : Entity_Id;\n                TB : Node_Id;\n@@ -480,9 +482,11 @@ package body Sem_Res is\n                     and then Compile_Time_Known_Value (Type_High_Bound (T))\n                     and then\n                       Minimum_Size (T, Biased => True) >=\n-                        Esize (Standard_Integer) - 1;\n+                        RM_Size (Standard_Positive);\n                end Large_Storage_Type;\n \n+            --  Start of processing for Check_Large\n+\n             begin\n                --  Check that the Disc has a large range\n \n@@ -553,7 +557,7 @@ package body Sem_Res is\n                <<No_Danger>>\n                   null;\n \n-            end;\n+            end Check_Large;\n          end if;\n \n       --  Legal case is in index or discriminant constraint"}]}