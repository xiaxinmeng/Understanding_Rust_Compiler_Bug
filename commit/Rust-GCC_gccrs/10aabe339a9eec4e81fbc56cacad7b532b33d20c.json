{"sha": "10aabe339a9eec4e81fbc56cacad7b532b33d20c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBhYWJlMzM5YTllZWM0ZTgxZmJjNTZjYWNhZDdiNTMyYjMzZDIwYw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-10-14T19:18:34Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-10-14T19:18:34Z"}, "message": "[Darwin, machopic 9/n] Minor code clean-ups.\n\nImprove some comments, replace some asserts that have been in the code\nbase for years with checking-asserts.\n\ngcc/ChangeLog:\n\n2019-10-14  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c: Use unsigned ints for the picbase label\n\tcounters, initialise the vars explicitly.\n\t(update_pic_label_number_if_needed): Move a variable declaration\n\tto where it's needed.\n\t(machopic_output_function_base_name): Use a more strict checking\n\tassert, and and unsigned int for the picbase label counter.\n\t(machopic_get_function_picbase): Likewise.\n\nFrom-SVN: r276967", "tree": {"sha": "d8ab9e4b04ab77f54f84a5a831ff9147a9cb3eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8ab9e4b04ab77f54f84a5a831ff9147a9cb3eca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10aabe339a9eec4e81fbc56cacad7b532b33d20c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aabe339a9eec4e81fbc56cacad7b532b33d20c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10aabe339a9eec4e81fbc56cacad7b532b33d20c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aabe339a9eec4e81fbc56cacad7b532b33d20c/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dccdbcff61201656cf1b37cd690ad6c3f7db8ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dccdbcff61201656cf1b37cd690ad6c3f7db8ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dccdbcff61201656cf1b37cd690ad6c3f7db8ad"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "adc3550fc39a6ac8d916591c22f4eb6cd7e67085", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aabe339a9eec4e81fbc56cacad7b532b33d20c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aabe339a9eec4e81fbc56cacad7b532b33d20c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10aabe339a9eec4e81fbc56cacad7b532b33d20c", "patch": "@@ -1,3 +1,13 @@\n+2019-10-14  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c: Use unsigned ints for the picbase label\n+\tcounters, initialise the vars explicitly.\n+\t(update_pic_label_number_if_needed): Move a variable declaration\n+\tto where it's needed.\n+\t(machopic_output_function_base_name): Use a more strict checking\n+\tassert, and and unsigned int for the picbase label counter.\n+\t(machopic_get_function_picbase): Likewise.\n+\n 2019-10-14  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/92046"}, {"sha": "1d386e06703fac2e1f053b3bb94f17d861c1160c", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aabe339a9eec4e81fbc56cacad7b532b33d20c/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aabe339a9eec4e81fbc56cacad7b532b33d20c/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=10aabe339a9eec4e81fbc56cacad7b532b33d20c", "patch": "@@ -375,20 +375,22 @@ machopic_gen_offset (rtx orig)\n     }\n }\n \n-static GTY(()) const char * function_base_func_name;\n-static GTY(()) int current_pic_label_num;\n-static GTY(()) int emitted_pic_label_num;\n-\n+static GTY(()) const char * function_base_func_name = NULL;\n+static GTY(()) unsigned current_pic_label_num = 0;\n+static GTY(()) unsigned emitted_pic_label_num = 0;\n+\n+/* We need to keep one picbase label per function, but (when we emit code\n+   to reload the picbase for setjump receiver) we might need to check for\n+   a second use.  So, only update the picbase label counter when we see a\n+   new function.  When there's no function decl, we assume that the call is\n+   from the x86 stub generation code.  */\n static void\n update_pic_label_number_if_needed (void)\n {\n-  const char *current_name;\n-\n-  /* When we are generating _get_pc thunks within stubs, there is no current\n-     function.  */\n   if (current_function_decl)\n     {\n-      current_name =\n+\n+      const char *current_name =\n \tIDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl));\n       if (function_base_func_name != current_name)\n \t{\n@@ -406,23 +408,23 @@ update_pic_label_number_if_needed (void)\n void\n machopic_output_function_base_name (FILE *file)\n {\n-  /* If dynamic-no-pic is on, we should not get here.  */\n-  gcc_assert (!MACHO_DYNAMIC_NO_PIC_P);\n+  /* We should only get here for -fPIC.  */\n+  gcc_checking_assert (MACHOPIC_PURE);\n \n   update_pic_label_number_if_needed ();\n-  fprintf (file, \"L%d$pb\", current_pic_label_num);\n+  fprintf (file, \"L%u$pb\", current_pic_label_num);\n }\n \n char curr_picbasename[32];\n \n const char *\n machopic_get_function_picbase (void)\n {\n-  /* If dynamic-no-pic is on, we should not get here.  */\n-  gcc_assert (!MACHO_DYNAMIC_NO_PIC_P);\n+  /* We should only get here for -fPIC.  */\n+  gcc_checking_assert (MACHOPIC_PURE);\n \n   update_pic_label_number_if_needed ();\n-  snprintf (curr_picbasename, 32, \"L%d$pb\", current_pic_label_num);\n+  snprintf (curr_picbasename, 32, \"L%u$pb\", current_pic_label_num);\n   return (const char *) curr_picbasename;\n }\n "}]}