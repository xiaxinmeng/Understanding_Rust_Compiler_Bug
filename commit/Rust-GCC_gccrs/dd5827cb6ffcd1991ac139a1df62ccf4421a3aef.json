{"sha": "dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1ODI3Y2I2ZmZjZDE5OTFhYzEzOWExZGY2MmNjZjQ0MjFhM2FlZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2006-01-14T08:15:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2006-01-14T08:15:59Z"}, "message": "tree.c (tree_not_class_check_failed): New function.\n\n\t* tree.c (tree_not_class_check_failed): New function.\n\t* tree.h (NON_TYPE_CHECK): Call tree_not_class_check_failed.\n\t(tree_not_class_check_failed): Declare.\n\nFrom-SVN: r109699", "tree": {"sha": "17c9dc2ef96d5fc56b7b2b3d989e5a93eeaa38b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17c9dc2ef96d5fc56b7b2b3d989e5a93eeaa38b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce99549f58527066c820d5a8c26983a2db9ee925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce99549f58527066c820d5a8c26983a2db9ee925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce99549f58527066c820d5a8c26983a2db9ee925"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "0e8ee822ca87dc143f81b1d32a9c774978d5e9ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "patch": "@@ -1,3 +1,9 @@\n+2006-01-14  Ian Lance Taylor  <ian@airs.com>\n+\n+\t* tree.c (tree_not_class_check_failed): New function.\n+\t* tree.h (NON_TYPE_CHECK): Call tree_not_class_check_failed.\n+\t(tree_not_class_check_failed): Declare.\n+\n 2006-01-13  Ian Lance Taylor  <ian@airs.com>\n \n \t* reload1.c (do_output_reload): Add assertion rejecting a"}, {"sha": "4bda846734f3cbee4c56a7111b4f987e9529380e", "filename": "gcc/tree.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "patch": "@@ -6012,6 +6012,21 @@ tree_class_check_failed (const tree node, const enum tree_code_class cl,\n      TREE_CODE_CLASS_STRING (TREE_CODE_CLASS (TREE_CODE (node))),\n      tree_code_name[TREE_CODE (node)], function, trim_filename (file), line);\n }\n+\n+/* Similar to tree_check_failed, except that we check that a tree does\n+   not have the specified code, given in CL.  */\n+\n+void\n+tree_not_class_check_failed (const tree node, const enum tree_code_class cl,\n+\t\t\t     const char *file, int line, const char *function)\n+{\n+  internal_error\n+    (\"tree check: did not expect class %qs, have %qs (%s) in %s, at %s:%d\",\n+     TREE_CODE_CLASS_STRING (cl),\n+     TREE_CODE_CLASS_STRING (TREE_CODE_CLASS (TREE_CODE (node))),\n+     tree_code_name[TREE_CODE (node)], function, trim_filename (file), line);\n+}\n+\n #undef DEFTREESTRUCT\n #define DEFTREESTRUCT(VAL, NAME) NAME,\n "}, {"sha": "afeaf1eb040c032d825d35ad72d109c273bb5415", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "patch": "@@ -592,8 +592,8 @@ enum tree_node_structure_enum {\n #define NON_TYPE_CHECK(T) __extension__\t\t\t\t\t\\\n ({  const tree __t = (T);\t\t\t\t\t\t\\\n     if (TYPE_P (__t))\t\t\t\t\t\t\t\\\n-      tree_class_check_failed (__t, tcc_type, __FILE__, __LINE__,\t\\\n-\t\t\t       __FUNCTION__);\t\t\t\t\\\n+      tree_not_class_check_failed (__t, tcc_type, __FILE__, __LINE__,\t\\\n+\t\t\t\t   __FUNCTION__);\t\t\t\\\n     __t; })\n \n #define TREE_VEC_ELT_CHECK(T, I) __extension__\t\t\t\t\\\n@@ -660,6 +660,10 @@ extern void tree_not_check_failed (const tree, const char *, int, const char *,\n extern void tree_class_check_failed (const tree, const enum tree_code_class,\n \t\t\t\t     const char *, int, const char *)\n     ATTRIBUTE_NORETURN;\n+extern void tree_not_class_check_failed (const tree,\n+\t\t\t\t\t const enum tree_code_class,\n+\t\t\t\t\t const char *, int, const char *)\n+    ATTRIBUTE_NORETURN;\n extern void tree_vec_elt_check_failed (int, int, const char *,\n \t\t\t\t       int, const char *)\n     ATTRIBUTE_NORETURN;"}]}