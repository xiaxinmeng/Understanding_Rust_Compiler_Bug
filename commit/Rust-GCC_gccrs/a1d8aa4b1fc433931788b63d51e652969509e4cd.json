{"sha": "a1d8aa4b1fc433931788b63d51e652969509e4cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkOGFhNGIxZmM0MzM5MzE3ODhiNjNkNTFlNjUyOTY5NTA5ZTRjZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-11-11T18:42:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-11-11T18:42:35Z"}, "message": "tree-ssa-math-opts.c (convert_mult_to_fma): Do not verify that the target has the exact fma operation that we matched.\n\n\t* tree-ssa-math-opts.c (convert_mult_to_fma): Do not verify\n\tthat the target has the exact fma operation that we matched.\n\nFrom-SVN: r166611", "tree": {"sha": "ef82f67ce81c13bd9e9d05a3fa9df5b50b2da485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef82f67ce81c13bd9e9d05a3fa9df5b50b2da485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d8aa4b1fc433931788b63d51e652969509e4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8aa4b1fc433931788b63d51e652969509e4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d8aa4b1fc433931788b63d51e652969509e4cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8aa4b1fc433931788b63d51e652969509e4cd/comments", "author": null, "committer": null, "parents": [{"sha": "658bd5ca00275d0a7b1a987018bc663b8a2d4a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658bd5ca00275d0a7b1a987018bc663b8a2d4a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658bd5ca00275d0a7b1a987018bc663b8a2d4a57"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "2cdcaf204f01b86e941edb2120101e3936d17bb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8aa4b1fc433931788b63d51e652969509e4cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8aa4b1fc433931788b63d51e652969509e4cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1d8aa4b1fc433931788b63d51e652969509e4cd", "patch": "@@ -1,3 +1,8 @@\n+2010-11-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-ssa-math-opts.c (convert_mult_to_fma): Do not verify\n+\tthat the target has the exact fma operation that we matched.\n+\n 2010-11-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* reginfo.c (fix_register): Avoid inserting English word in"}, {"sha": "a2dfac6bb482e634de617ff8d07f98ea17f8f11c", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8aa4b1fc433931788b63d51e652969509e4cd/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8aa4b1fc433931788b63d51e652969509e4cd/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=a1d8aa4b1fc433931788b63d51e652969509e4cd", "patch": "@@ -1531,7 +1531,6 @@ convert_mult_to_fma (gimple mul_stmt)\n       enum tree_code use_code;\n       tree result = mul_result;\n       bool negate_p = false;\n-      optab opt;\n \n       use_stmt = USE_STMT (use_p);\n \n@@ -1574,32 +1573,31 @@ convert_mult_to_fma (gimple mul_stmt)\n \t  negate_p = true;\n \t}\n \n-      /* Determine if the target supports the exact form we found.  */\n       switch (use_code)\n \t{\n \tcase MINUS_EXPR:\n-\t  if (gimple_assign_rhs1 (use_stmt) == result)\n-\t    {\n-\t      opt = negate_p ? fnms_optab : fms_optab;\n-\t      break;\n-\t    }\n-\t  negate_p = !negate_p;\n-\t  /* FALLTHRU */\n-\n+\t  if (gimple_assign_rhs2 (use_stmt) == result)\n+\t    negate_p = !negate_p;\n+\t  break;\n \tcase PLUS_EXPR:\n-\t  opt = negate_p ? fnma_optab : fma_optab;\n \t  break;\n-\n \tdefault:\n \t  /* FMA can only be formed from PLUS and MINUS.  */\n \t  return false;\n \t}\n-      if (optab_handler (opt, TYPE_MODE (type)) == CODE_FOR_nothing)\n-\treturn false;\n \n       /* We can't handle a * b + a * b.  */\n       if (gimple_assign_rhs1 (use_stmt) == gimple_assign_rhs2 (use_stmt))\n \treturn false;\n+\n+      /* While it is possible to validate whether or not the exact form\n+\t that we've recognized is available in the backend, the assumption\n+\t is that the transformation is never a loss.  For instance, suppose\n+\t the target only has the plain FMA pattern available.  Consider\n+\t a*b-c -> fma(a,b,-c): we've exchanged MUL+SUB for FMA+NEG, which\n+\t is still two operations.  Consider -(a*b)-c -> fma(-a,b,-c): we\n+\t still have 3 operations, but in the FMA form the two NEGs are\n+\t independant and could be run in parallel.  */\n     }\n \n   FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, mul_result)"}]}