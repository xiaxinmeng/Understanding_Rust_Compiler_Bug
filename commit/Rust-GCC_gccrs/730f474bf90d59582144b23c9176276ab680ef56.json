{"sha": "730f474bf90d59582144b23c9176276ab680ef56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMwZjQ3NGJmOTBkNTk1ODIxNDRiMjNjOTE3NjI3NmFiNjgwZWY1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-13T14:42:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-13T14:42:30Z"}, "message": "re PR ipa/65034 (ICE (segfault) on arm-linux-gnueabihf)\n\n\tPR ipa/65034\n\t* stmt.c (emit_case_nodes): Use void_type_node instead of\n\tNULL_TREE as LABEL_DECL type.\n\n\t* decl.c (start_preparsed_function): Use void_type_node instead\n\tof NULL_TREE as LABEL_DECL type.\n\n\t* g++.dg/ipa/pr65034.C: New test.\n\nFrom-SVN: r220683", "tree": {"sha": "057890be2e241d8ec94af725a0ddbbe26fa20fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057890be2e241d8ec94af725a0ddbbe26fa20fb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/730f474bf90d59582144b23c9176276ab680ef56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f474bf90d59582144b23c9176276ab680ef56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730f474bf90d59582144b23c9176276ab680ef56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f474bf90d59582144b23c9176276ab680ef56/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e0c223f94b886b4d4e54582a1fb4ea9b5feb722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e0c223f94b886b4d4e54582a1fb4ea9b5feb722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e0c223f94b886b4d4e54582a1fb4ea9b5feb722"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "e06f69a74d2f01a5e1f7f882119d4d24b405700e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/65034\n+\t* stmt.c (emit_case_nodes): Use void_type_node instead of\n+\tNULL_TREE as LABEL_DECL type.\n+\n 2015-02-13  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/constraints.md: Change \"Q\" and \"T\" constraints to memory"}, {"sha": "8132e2feee6d49dac21d934890c636bfcdc5c0e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/65034\n+\t* decl.c (start_preparsed_function): Use void_type_node instead\n+\tof NULL_TREE as LABEL_DECL type.\n+\n 2015-02-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/64898"}, {"sha": "f95a61a4487a09c76074d02e98b71613c87e9353", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -13721,7 +13721,7 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n \t  && targetm.cxx.cdtor_returns_this ()))\n     {\n       cdtor_label = build_decl (input_location, \n-\t\t\t\tLABEL_DECL, NULL_TREE, NULL_TREE);\n+\t\t\t\tLABEL_DECL, NULL_TREE, void_type_node);\n       DECL_CONTEXT (cdtor_label) = current_function_decl;\n     }\n "}, {"sha": "45dc45fd049aed27d63ba8d47a00dd2858afafb3", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -1722,7 +1722,7 @@ emit_case_nodes (rtx index, case_node_ptr node, rtx default_label,\n \n \t      tree test_label\n \t\t= build_decl (curr_insn_location (),\n-\t\t\t      LABEL_DECL, NULL_TREE, NULL_TREE);\n+\t\t\t      LABEL_DECL, NULL_TREE, void_type_node);\n \n               /* The default label could be reached either through the right\n                  subtree or the left subtree. Divide the probability\n@@ -1881,7 +1881,7 @@ emit_case_nodes (rtx index, case_node_ptr node, rtx default_label,\n \t\t Branch to a label where we will handle it later.  */\n \n \t      test_label = build_decl (curr_insn_location (),\n-\t\t\t\t       LABEL_DECL, NULL_TREE, NULL_TREE);\n+\t\t\t\t       LABEL_DECL, NULL_TREE, void_type_node);\n               probability = conditional_probability (\n                   node->right->subtree_prob + default_prob/2,\n                   subtree_prob + default_prob);"}, {"sha": "5c9ff2e2f94e0073643855314047b0a7b1bd1a6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -1,3 +1,8 @@\n+2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/65034\n+\t* g++.dg/ipa/pr65034.C: New test.\n+\n 2015-02-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR tree-optimization/65002"}, {"sha": "cb33d5056c1547e0c1dde84ea9f0502010edea0a", "filename": "gcc/testsuite/g++.dg/ipa/pr65034.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65034.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/730f474bf90d59582144b23c9176276ab680ef56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65034.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65034.C?ref=730f474bf90d59582144b23c9176276ab680ef56", "patch": "@@ -0,0 +1,40 @@\n+// PR ipa/65034\n+// { dg-do compile }\n+// { dg-options \"-g -O2\" }\n+\n+enum B { C };\n+enum D { E };\n+struct A { A (B, D) { } };\n+struct F { unsigned g, h, i, j; } a;\n+\n+void\n+foo (unsigned x, unsigned y)\n+{\n+  switch (x)\n+    {\n+    case 6:\n+      a.i = y;\n+      break;\n+    case 7:\n+      a.j = y;\n+      break;\n+    default:\n+      A (C, E);\n+    }\n+}\n+\n+void\n+bar (unsigned x, unsigned y)\n+{\n+  switch (x)\n+    {\n+    case 6:\n+      a.i = y;\n+      break;\n+    case 7:\n+      a.j = y;\n+      break;\n+    default:\n+      A (C, E);\n+    }\n+}"}]}