{"sha": "194571f10e354ff084afd84518f85d3326d118e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0NTcxZjEwZTM1NGZmMDg0YWZkODQ1MThmODVkMzMyNmQxMThlOQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2015-04-14T11:02:48Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2015-04-14T11:02:48Z"}, "message": "re PR libstdc++/61347 (std::distance(list.first(),list.end()) in O(1))\n\n2015-04-14  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/61347\n\t* include/bits/stl_iterator_base_funcs.h (_List_iterator,\n\t_List_const_iterator): Declare.\n\t(__distance): Declare new overloads for _List_iterator and\n\t_List_const_iterator.\n\t* include/bits/stl_list.h (__distance): New overloads for\n\t_List_iterator and _List_const_iterator.\n\t* testsuite/23_containers/list/61347.cc: New testcase.\n\nFrom-SVN: r222082", "tree": {"sha": "b0ae9d80156cd68e14a97919270f242055f36e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0ae9d80156cd68e14a97919270f242055f36e43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194571f10e354ff084afd84518f85d3326d118e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194571f10e354ff084afd84518f85d3326d118e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194571f10e354ff084afd84518f85d3326d118e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194571f10e354ff084afd84518f85d3326d118e9/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "453e2916ce448096efd6acc830e2dee35ae8b215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/453e2916ce448096efd6acc830e2dee35ae8b215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/453e2916ce448096efd6acc830e2dee35ae8b215"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "22b434ea5bea86965741b181f04d59153d57c9fb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=194571f10e354ff084afd84518f85d3326d118e9", "patch": "@@ -1,3 +1,14 @@\n+2015-04-14  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/61347\n+\t* include/bits/stl_iterator_base_funcs.h (_List_iterator,\n+\t_List_const_iterator): Declare.\n+\t(__distance): Declare new overloads for _List_iterator and\n+\t_List_const_iterator.\n+\t* include/bits/stl_list.h (__distance): New overloads for\n+\t_List_iterator and _List_const_iterator.\n+\t* testsuite/23_containers/list/61347.cc: New testcase.\n+\n 2015-04-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/evolution.xml: Fix typos."}, {"sha": "6ee2ffbc5f28494f76119b3a3a7d013a36bb7b8d", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=194571f10e354ff084afd84518f85d3326d118e9", "patch": "@@ -66,6 +66,12 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n+_GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n+  // Forward declaration for the overloads of __distance.\n+  template <typename> struct _List_iterator;\n+  template <typename> struct _List_const_iterator;\n+_GLIBCXX_END_NAMESPACE_CONTAINER\n+\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _InputIterator>\n@@ -96,6 +102,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __last - __first;\n     }\n \n+#if _GLIBCXX_USE_CXX11_ABI\n+  // Forward declaration because of the qualified call in distance.\n+  template<typename _Tp>\n+    ptrdiff_t\n+    __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,\n+\t       _GLIBCXX_STD_C::_List_iterator<_Tp>,\n+\t       input_iterator_tag);\n+\n+  template<typename _Tp>\n+    ptrdiff_t\n+    __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,\n+\t       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,\n+\t       input_iterator_tag);\n+#endif\n+\n   /**\n    *  @brief A generalization of pointer arithmetic.\n    *  @param  __first  An input iterator."}, {"sha": "3401e5b4d2552fd2f89b77bc5b0cb9df4737aa70", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=194571f10e354ff084afd84518f85d3326d118e9", "patch": "@@ -1868,6 +1868,45 @@ _GLIBCXX_END_NAMESPACE_CXX11\n     { __x.swap(__y); }\n \n _GLIBCXX_END_NAMESPACE_CONTAINER\n+\n+#if _GLIBCXX_USE_CXX11_ABI\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  // Detect when distance is used to compute the size of the whole list.\n+  template<typename _Tp>\n+    inline ptrdiff_t\n+    __distance(_GLIBCXX_STD_C::_List_iterator<_Tp> __first,\n+\t       _GLIBCXX_STD_C::_List_iterator<_Tp> __last,\n+\t       input_iterator_tag __tag)\n+    {\n+      typedef _GLIBCXX_STD_C::_List_const_iterator<_Tp> _CIter;\n+      return std::__distance(_CIter(__first), _CIter(__last), __tag);\n+    }\n+\n+  template<typename _Tp>\n+    inline ptrdiff_t\n+    __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp> __first,\n+\t       _GLIBCXX_STD_C::_List_const_iterator<_Tp> __last,\n+\t       input_iterator_tag)\n+    {\n+      typedef _GLIBCXX_STD_C::_List_node<size_t> _Sentinel;\n+      _GLIBCXX_STD_C::_List_const_iterator<_Tp> __beyond = __last;\n+      ++__beyond;\n+      bool __whole = __first == __beyond;\n+      if (__builtin_constant_p (__whole) && __whole)\n+\treturn static_cast<const _Sentinel*>(__last._M_node)->_M_data;\n+\n+      ptrdiff_t __n = 0;\n+      while (__first != __last)\n+\t{\n+\t  ++__first;\n+\t  ++__n;\n+\t}\n+      return __n;\n+    }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+#endif\n } // namespace std\n \n #endif /* _STL_LIST_H */"}, {"sha": "653591228efca53663b1a5cbe1656e1228ebafdf", "filename": "libstdc++-v3/testsuite/23_containers/list/61347.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194571f10e354ff084afd84518f85d3326d118e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc?ref=194571f10e354ff084afd84518f85d3326d118e9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \"-std=gnu++11 -O2 -D_GLIBCXX_USE_CXX11_ABI\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <list>\n+#include <iterator>\n+#include <testsuite_hooks.h>\n+\n+__attribute__((__noinline__, __noclone__))\n+void testm(std::list<short>& l)\n+{\n+  bool b = std::distance(l.begin(), l.end()) == l.size();\n+  VERIFY( __builtin_constant_p(b) );\n+  VERIFY( b );\n+}\n+\n+__attribute__((__noinline__, __noclone__))\n+void testc(const std::list<short>& l)\n+{\n+  bool b = std::distance(l.begin(), l.end()) == l.size();\n+  VERIFY( __builtin_constant_p(b) );\n+  VERIFY( b );\n+}\n+\n+int main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+#if _GLIBCXX_USE_DUAL_ABI\n+  std::list<short> l;\n+  testm(l);\n+  testc(l);\n+#endif\n+}"}]}