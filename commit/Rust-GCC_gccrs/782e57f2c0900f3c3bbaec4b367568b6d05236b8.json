{"sha": "782e57f2c0900f3c3bbaec4b367568b6d05236b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgyZTU3ZjJjMDkwMGYzYzNiYmFlYzRiMzY3NTY4YjZkMDUyMzZiOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-05-21T12:52:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-05-21T15:06:30Z"}, "message": "x86: Remove MAX_BITSIZE_MODE_ANY_INT\n\nIt is only defined for i386 and everyone uses the default:\n\n #define MAX_BITSIZE_MODE_ANY_INT (64*BITS_PER_UNIT)\n\nWhatever problems we had before, they have been fixed now.\n\n\t* config/i386/i386-modes.def (MAX_BITSIZE_MODE_ANY_INT): Removed.", "tree": {"sha": "eecccc8824db61570ea71b75e988c13aa029ee38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eecccc8824db61570ea71b75e988c13aa029ee38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/782e57f2c0900f3c3bbaec4b367568b6d05236b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782e57f2c0900f3c3bbaec4b367568b6d05236b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/782e57f2c0900f3c3bbaec4b367568b6d05236b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782e57f2c0900f3c3bbaec4b367568b6d05236b8/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53fb833d635da04f5b44af16bcea1082e7b59e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53fb833d635da04f5b44af16bcea1082e7b59e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53fb833d635da04f5b44af16bcea1082e7b59e75"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "4e7014be0346bdf961e0aabeb2e5aa5e61b163ed", "filename": "gcc/config/i386/i386-modes.def", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/782e57f2c0900f3c3bbaec4b367568b6d05236b8/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/782e57f2c0900f3c3bbaec4b367568b6d05236b8/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-modes.def?ref=782e57f2c0900f3c3bbaec4b367568b6d05236b8", "patch": "@@ -107,19 +107,10 @@ INT_MODE (XI, 64);\n PARTIAL_INT_MODE (HI, 16, P2QI);\n PARTIAL_INT_MODE (SI, 32, P2HI);\n \n-/* Mode used for signed overflow checking of TImode.  As\n-   MAX_BITSIZE_MODE_ANY_INT is only 160, wide-int.h reserves only that\n-   rounded up to multiple of HOST_BITS_PER_WIDE_INT bits in wide_int etc.,\n-   so OImode is too large.  For the overflow checking we actually need\n-   just 1 or 2 bits beyond TImode precision.  Use 160 bits to have\n-   a multiple of 32.  */\n+/* Mode used for signed overflow checking of TImode.  For the overflow\n+   checking we actually need just 1 or 2 bits beyond TImode precision.\n+   Use 160 bits to have a multiple of 32.  */\n PARTIAL_INT_MODE (OI, 160, POI);\n \n-/* Keep the OI and XI modes from confusing the compiler into thinking\n-   that these modes could actually be used for computation.  They are\n-   only holders for vectors during data movement.  Include POImode precision\n-   though.  */\n-#define MAX_BITSIZE_MODE_ANY_INT (160)\n-\n /* The symbol Pmode stands for one of the above machine modes (usually SImode).\n    The tm.h file specifies which one.  It is not a distinct mode.  */"}]}