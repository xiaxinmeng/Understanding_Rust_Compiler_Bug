{"sha": "6e1e0decc9e17a4283d1b5508e892be5215b8ab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxZTBkZWNjOWUxN2E0MjgzZDFiNTUwOGU4OTJiZTUyMTViOGFiOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-22T15:38:58Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-22T15:43:26Z"}, "message": "c++: Don't add enums to class's decl_list\n\nWe don't need to add CONST_DECLs to a template decl's decl list.  Also made the\ncode flow a bit clearer.\n\n\tgcc/cp/\n\t* class.c (maybe_add_class_template_decl_list): Don't add CONST_DECLs.", "tree": {"sha": "2e32971813a1d65d01c41b8ef8824da11457627a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e32971813a1d65d01c41b8ef8824da11457627a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e1e0decc9e17a4283d1b5508e892be5215b8ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1e0decc9e17a4283d1b5508e892be5215b8ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1e0decc9e17a4283d1b5508e892be5215b8ab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1e0decc9e17a4283d1b5508e892be5215b8ab9/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7be9b276b441dd8b33283c2bc36906e94b569806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7be9b276b441dd8b33283c2bc36906e94b569806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7be9b276b441dd8b33283c2bc36906e94b569806"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a3913f4ce0b540a54bee8db07c891c155910ca0b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1e0decc9e17a4283d1b5508e892be5215b8ab9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1e0decc9e17a4283d1b5508e892be5215b8ab9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6e1e0decc9e17a4283d1b5508e892be5215b8ab9", "patch": "@@ -3049,11 +3049,14 @@ finish_struct_anon (tree t)\n void\n maybe_add_class_template_decl_list (tree type, tree t, int friend_p)\n {\n-  /* Save some memory by not creating TREE_LIST if TYPE is not template.  */\n-  if (CLASSTYPE_TEMPLATE_INFO (type))\n-    CLASSTYPE_DECL_LIST (type)\n-      = tree_cons (friend_p ? NULL_TREE : type,\n-\t\t   t, CLASSTYPE_DECL_LIST (type));\n+  if (CLASSTYPE_TEMPLATE_INFO (type)\n+      && TREE_CODE (t) != CONST_DECL)\n+    {\n+      tree purpose = friend_p ? NULL_TREE : type;\n+\n+      CLASSTYPE_DECL_LIST (type)\n+\t= tree_cons (purpose, t, CLASSTYPE_DECL_LIST (type));\n+    }\n }\n \n /* This function is called from declare_virt_assop_and_dtor via"}]}