{"sha": "9700b81f206df1f8c6ae76cccf91f7d69b513342", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwMGI4MWYyMDZkZjFmOGM2YWU3NmNjY2Y5MWY3ZDY5YjUxMzM0Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-08-24T11:12:27Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-08-24T11:12:27Z"}, "message": "typeck.c (convert_for_initialization): Move check for odd uses of NULL to avoid duplicate warnings.\n\n\t* typeck.c (convert_for_initialization): Move check for odd uses\n\tof NULL to avoid duplicate warnings.\n\nFrom-SVN: r21938", "tree": {"sha": "79416321bcb2ac1fb0b6a6edbcab49ad79e6219c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79416321bcb2ac1fb0b6a6edbcab49ad79e6219c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9700b81f206df1f8c6ae76cccf91f7d69b513342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9700b81f206df1f8c6ae76cccf91f7d69b513342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9700b81f206df1f8c6ae76cccf91f7d69b513342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9700b81f206df1f8c6ae76cccf91f7d69b513342/comments", "author": null, "committer": null, "parents": [{"sha": "1eb79505a9e355513012405179ce495076d086fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb79505a9e355513012405179ce495076d086fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb79505a9e355513012405179ce495076d086fd"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "57dc30ed8a558792ef78aa7d6043841de05ac1b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9700b81f206df1f8c6ae76cccf91f7d69b513342/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9700b81f206df1f8c6ae76cccf91f7d69b513342/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9700b81f206df1f8c6ae76cccf91f7d69b513342", "patch": "@@ -1,3 +1,8 @@\n+1998-08-24  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* typeck.c (convert_for_initialization): Move check for odd uses\n+\tof NULL to avoid duplicate warnings.\n+\n 1998-08-24  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* tree.c (lvalue_type): Fix for arrays."}, {"sha": "3bbd6bdd0a07c50f166db6cda955109626d78e66", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9700b81f206df1f8c6ae76cccf91f7d69b513342/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9700b81f206df1f8c6ae76cccf91f7d69b513342/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=9700b81f206df1f8c6ae76cccf91f7d69b513342", "patch": "@@ -7085,10 +7085,6 @@ convert_for_initialization (exp, type, rhs, flags, errtype, fndecl, parmnum)\n   register tree rhstype;\n   register enum tree_code coder;\n \n-  /* Issue warnings about peculiar, but legal, uses of NULL.  */\n-  if (ARITHMETIC_TYPE_P (type) && rhs == null_node)\n-    cp_warning (\"converting NULL to non-pointer type\");\n-\n   /* build_c_cast puts on a NOP_EXPR to make the result not an lvalue.\n      Strip such NOP_EXPRs, since RHS is used in non-lvalue context.  */\n   if (TREE_CODE (rhs) == NOP_EXPR\n@@ -7176,8 +7172,16 @@ convert_for_initialization (exp, type, rhs, flags, errtype, fndecl, parmnum)\n \n   if (type == TREE_TYPE (rhs))\n     {\n+      /* Issue warnings about peculiar, but legal, uses of NULL.  We\n+\t do this *before* the call to decl_constant_value so as to\n+\t avoid duplicate warnings on code like `const int I = NULL;\n+\t f(I);'.  */\n+      if (ARITHMETIC_TYPE_P (type) && rhs == null_node)\n+\tcp_warning (\"converting NULL to non-pointer type\");\n+\n       if (TREE_READONLY_DECL_P (rhs))\n \trhs = decl_constant_value (rhs);\n+\n       return rhs;\n     }\n "}]}