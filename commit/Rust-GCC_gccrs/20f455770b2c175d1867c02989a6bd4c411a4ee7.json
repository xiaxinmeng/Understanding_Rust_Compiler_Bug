{"sha": "20f455770b2c175d1867c02989a6bd4c411a4ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmNDU1NzcwYjJjMTc1ZDE4NjdjMDI5ODlhNmJkNGM0MTFhNGVlNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-30T14:33:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-30T14:33:00Z"}, "message": "re PR middle-end/46717 (Compiler segfault in profile-use mode)\n\n2010-11-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46717\n\t* value-prof.c (gimple_ic): Preserve EH edges of the indirect\n\tcall.  Manually create EH edges for the direct call and update\n\ttarget PHI nodes.\n\nFrom-SVN: r167298", "tree": {"sha": "16a1ccec49b0641047dbd3739de6833a0dffdf78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16a1ccec49b0641047dbd3739de6833a0dffdf78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f455770b2c175d1867c02989a6bd4c411a4ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f455770b2c175d1867c02989a6bd4c411a4ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f455770b2c175d1867c02989a6bd4c411a4ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f455770b2c175d1867c02989a6bd4c411a4ee7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f1faac1daefa83b6588424873c01f7d1370277d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1faac1daefa83b6588424873c01f7d1370277d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1faac1daefa83b6588424873c01f7d1370277d"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "ab808ce3992f378433820fcf5244edc6dadee603", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f455770b2c175d1867c02989a6bd4c411a4ee7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f455770b2c175d1867c02989a6bd4c411a4ee7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20f455770b2c175d1867c02989a6bd4c411a4ee7", "patch": "@@ -1,3 +1,10 @@\n+2010-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46717\n+\t* value-prof.c (gimple_ic): Preserve EH edges of the indirect\n+\tcall.  Manually create EH edges for the direct call and update\n+\ttarget PHI nodes.\n+\n 2010-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.c (build_range_type_1): Do not set TYPE_STRUCTURAL_EQUALITY_P"}, {"sha": "9e27a9679fc50c62e4522f69bdc1a8aacd0d3186", "filename": "gcc/value-prof.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f455770b2c175d1867c02989a6bd4c411a4ee7/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f455770b2c175d1867c02989a6bd4c411a4ee7/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=20f455770b2c175d1867c02989a6bd4c411a4ee7", "patch": "@@ -1145,7 +1145,11 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   icall_bb = e_di->dest;\n   icall_bb->count = all - count;\n \n-  e_ij = split_block (icall_bb, icall_stmt);\n+  /* Do not disturb existing EH edges from the indirect call.  */\n+  if (last_stmt (icall_bb) != icall_stmt)\n+    e_ij = split_block (icall_bb, icall_stmt);\n+  else\n+    e_ij = find_fallthru_edge (icall_bb->succs);\n   join_bb = e_ij->dest;\n   join_bb->count = all;\n \n@@ -1181,21 +1185,27 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n       add_phi_arg (phi, gimple_call_lhs (dcall_stmt), e_dj, UNKNOWN_LOCATION);\n     }\n \n-  /* Fix eh edges */\n+  /* Build an EH edge for the direct call if necessary.  */\n   lp_nr = lookup_stmt_eh_lp (icall_stmt);\n-  if (lp_nr != 0)\n+  if (lp_nr != 0\n+      && stmt_could_throw_p (dcall_stmt))\n     {\n-      if (stmt_could_throw_p (dcall_stmt))\n+      edge e_eh, e;\n+      edge_iterator ei;\n+      gimple_stmt_iterator psi;\n+\n+      add_stmt_to_eh_lp (dcall_stmt, lp_nr);\n+      FOR_EACH_EDGE (e_eh, ei, icall_bb->succs)\n+\tif (e_eh->flags & EDGE_EH)\n+\t  break;\n+      e = make_edge (dcall_bb, e_eh->dest, EDGE_EH);\n+      for (psi = gsi_start_phis (e_eh->dest);\n+\t   !gsi_end_p (psi); gsi_next (&psi))\n \t{\n-\t  add_stmt_to_eh_lp (dcall_stmt, lp_nr);\n-\t  make_eh_edges (dcall_stmt);\n+\t  gimple phi = gsi_stmt (psi);\n+\t  SET_USE (PHI_ARG_DEF_PTR_FROM_EDGE (phi, e),\n+\t\t   PHI_ARG_DEF_FROM_EDGE (phi, e_eh));\n \t}\n-\n-      gcc_assert (stmt_could_throw_p (icall_stmt));\n-      make_eh_edges (icall_stmt);\n-\n-      /* The old EH edges are sill on the join BB, purge them.  */\n-      gimple_purge_dead_eh_edges (join_bb);\n     }\n \n   return dcall_stmt;"}]}