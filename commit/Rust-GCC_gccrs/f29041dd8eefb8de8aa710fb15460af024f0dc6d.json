{"sha": "f29041dd8eefb8de8aa710fb15460af024f0dc6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5MDQxZGQ4ZWVmYjhkZThhYTcxMGZiMTU0NjBhZjAyNGYwZGM2ZA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-12-31T08:18:52Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-12-31T08:18:52Z"}, "message": "re PR fortran/51502 (Potentially wrong code generation due to wrong implict_pure check)\n\n2011-12-31  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51502\n\t* expr.c (gfc_check_vardef_context):  When determining\n\timplicit pure status, also check for variable definition\n\tcontext.  Walk up namespaces until a procedure is\n\tfound to reset the implict pure attribute.\n\t* resolve.c (gfc_implicit_pure):  Walk up namespaces\n\tuntil a procedure is found.\n\n2011-12-31  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51502\n\t* lib/gcc-dg.exp (scan-module-absence):  New function.\n\t* gfortran.dg/implicit_pure_2.f90:  New test.\n\nFrom-SVN: r182754", "tree": {"sha": "68b7fd1b2d1494a99a6c86ebfda5a6211ca412d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b7fd1b2d1494a99a6c86ebfda5a6211ca412d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f29041dd8eefb8de8aa710fb15460af024f0dc6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29041dd8eefb8de8aa710fb15460af024f0dc6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29041dd8eefb8de8aa710fb15460af024f0dc6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29041dd8eefb8de8aa710fb15460af024f0dc6d/comments", "author": null, "committer": null, "parents": [{"sha": "a78873e4f39e57309c21669e480fc73c39fc68c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78873e4f39e57309c21669e480fc73c39fc68c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78873e4f39e57309c21669e480fc73c39fc68c2"}], "stats": {"total": 81, "additions": 65, "deletions": 16}, "files": [{"sha": "c7ac160386c68bd0460e99808e9df2c01c769136", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f29041dd8eefb8de8aa710fb15460af024f0dc6d", "patch": "@@ -1,3 +1,13 @@\n+2011-12-31  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51502\n+\t* expr.c (gfc_check_vardef_context):  When determining\n+\timplicit pure status, also check for variable definition\n+\tcontext.  Walk up namespaces until a procedure is\n+\tfound to reset the implict pure attribute.\n+\t* resolve.c (gfc_implicit_pure):  Walk up namespaces\n+\tuntil a procedure is found.\n+\n 2011-12-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* dependency.c (gfc_dep_compare_functions):  Document"}, {"sha": "182738cbf3df00f64fb6ecc8d9826965ffdb5528", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=f29041dd8eefb8de8aa710fb15460af024f0dc6d", "patch": "@@ -4690,9 +4690,24 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, bool alloc_obj,\n       return FAILURE;\n     }\n \n-  if (!pointer && gfc_implicit_pure (NULL) && gfc_impure_variable (sym))\n-    gfc_current_ns->proc_name->attr.implicit_pure = 0;\n+  if (!pointer && context && gfc_implicit_pure (NULL)\n+      && gfc_impure_variable (sym))\n+    {\n+      gfc_namespace *ns;\n+      gfc_symbol *sym;\n \n+      for (ns = gfc_current_ns; ns; ns = ns->parent)\n+\t{\n+\t  sym = ns->proc_name;\n+\t  if (sym == NULL)\n+\t    break;\n+\t  if (sym->attr.flavor == FL_PROCEDURE)\n+\t    {\n+\t      sym->attr.implicit_pure = 0;\n+\t      break;\n+\t    }\n+\t}\n+    }\n   /* Check variable definition context for associate-names.  */\n   if (!pointer && sym->assoc)\n     {"}, {"sha": "0c27b2360b0558de14e5c244a7757488744fa227", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f29041dd8eefb8de8aa710fb15460af024f0dc6d", "patch": "@@ -13103,24 +13103,25 @@ gfc_pure (gfc_symbol *sym)\n int\n gfc_implicit_pure (gfc_symbol *sym)\n {\n-  symbol_attribute attr;\n+  gfc_namespace *ns;\n \n   if (sym == NULL)\n     {\n-      /* Check if the current namespace is implicit_pure.  */\n-      sym = gfc_current_ns->proc_name;\n-      if (sym == NULL)\n-\treturn 0;\n-      attr = sym->attr;\n-      if (attr.flavor == FL_PROCEDURE\n-\t    && attr.implicit_pure && !attr.pure)\n-\treturn 1;\n-      return 0;\n+      /* Check if the current procedure is implicit_pure.  Walk up\n+\t the procedure list until we find a procedure.  */\n+      for (ns = gfc_current_ns; ns; ns = ns->parent)\n+\t{\n+\t  sym = ns->proc_name;\n+\t  if (sym == NULL)\n+\t    return 0;\n+\t  \n+\t  if (sym->attr.flavor == FL_PROCEDURE)\n+\t    break;\n+\t}\n     }\n-\n-  attr = sym->attr;\n-\n-  return attr.flavor == FL_PROCEDURE && attr.implicit_pure && !attr.pure;\n+  \n+  return sym->attr.flavor == FL_PROCEDURE && sym->attr.implicit_pure\n+    && !sym->attr.pure;\n }\n \n "}, {"sha": "aaba8c0de5c1586d4c888145217cd54ab46bd2f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f29041dd8eefb8de8aa710fb15460af024f0dc6d", "patch": "@@ -1,3 +1,9 @@\n+2011-12-31  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51502\n+\t* lib/gcc-dg.exp (scan-module-absence):  New function.\n+\t* gfortran.dg/implicit_pure_2.f90:  New test.\n+\n 2011-12-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51316"}, {"sha": "496e856e04ac394067ce9c41b39b1507c405d89a", "filename": "gcc/testsuite/gfortran.dg/implicit_pure_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29041dd8eefb8de8aa710fb15460af024f0dc6d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_pure_2.f90?ref=f29041dd8eefb8de8aa710fb15460af024f0dc6d", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! PR 51502 - this was wrongly detected to be implicit pure.\n+module m\n+  integer :: i\n+contains\n+  subroutine foo(x)\n+    integer, intent(inout) :: x\n+    outer: block\n+      block\n+        i = 5\n+      end block\n+    end block outer\n+  end subroutine foo\n+end module m\n+\n+! { dg-final { scan-module-absence \"m\" \"IMPLICIT_PURE\" } }\n+! { dg-final { cleanup-modules \"m\" } }"}]}