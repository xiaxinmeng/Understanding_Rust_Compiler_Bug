{"sha": "895cf059f064bb0c86c333f9bd05fc95fa9e8d56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1Y2YwNTlmMDY0YmIwYzg2YzMzM2Y5YmQwNWZjOTVmYTllOGQ1Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-04T08:32:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:34:55Z"}, "message": "[Ada] Fix incorrect insertion of post-call actions in if-expression\n\n2020-06-10  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch6.adb (Insert_Post_Call_Actions): Deal with the context\n\tof an if-expression and with a call written in prefixed notation.", "tree": {"sha": "8493970418911bdfb0e2b4e1c2226c130f8d74b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8493970418911bdfb0e2b4e1c2226c130f8d74b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/895cf059f064bb0c86c333f9bd05fc95fa9e8d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895cf059f064bb0c86c333f9bd05fc95fa9e8d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/895cf059f064bb0c86c333f9bd05fc95fa9e8d56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895cf059f064bb0c86c333f9bd05fc95fa9e8d56/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c392a001491bd8603556bd922d073a96b6df8724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c392a001491bd8603556bd922d073a96b6df8724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c392a001491bd8603556bd922d073a96b6df8724"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "db96fb77922bffcd8f99b51396afacd9d5581410", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/895cf059f064bb0c86c333f9bd05fc95fa9e8d56/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/895cf059f064bb0c86c333f9bd05fc95fa9e8d56/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=895cf059f064bb0c86c333f9bd05fc95fa9e8d56", "patch": "@@ -7810,20 +7810,25 @@ package body Exp_Ch6 is\n          return;\n       end if;\n \n-      --  Cases where the call is not a member of a statement list. This\n-      --  includes the case where the call is an actual in another function\n-      --  call or indexing, i.e. an expression context as well.\n+      --  Cases where the call is not a member of a statement list. This also\n+      --  includes the cases where the call is an actual in another function\n+      --  call, or is an index, or is an operand of an if-expression, i.e. is\n+      --  in an expression context.\n \n       if not Is_List_Member (N)\n-        or else Nkind_In (Context, N_Function_Call, N_Indexed_Component)\n+        or else Nkind_In (Context, N_Function_Call,\n+                                   N_If_Expression,\n+                                   N_Indexed_Component)\n       then\n          --  In Ada 2012 the call may be a function call in an expression\n          --  (since OUT and IN OUT parameters are now allowed for such calls).\n          --  The write-back of (in)-out parameters is handled by the back-end,\n          --  but the constraint checks generated when subtypes of formal and\n          --  actual don't match must be inserted in the form of assignments.\n \n-         if Nkind (Original_Node (N)) = N_Function_Call then\n+         if Nkind (N) = N_Function_Call\n+           or else Nkind (Original_Node (N)) = N_Function_Call\n+         then\n             pragma Assert (Ada_Version >= Ada_2012);\n             --  Functions with '[in] out' parameters are only allowed in Ada\n             --  2012."}]}