{"sha": "2465bf7657aee12ef1237014054619cdfd549684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2NWJmNzY1N2FlZTEyZWYxMjM3MDE0MDU0NjE5Y2RmZDU0OTY4NA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-03-12T05:28:21Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-03-12T05:28:21Z"}, "message": "1750a.h, [...] (POINTER_SIZE): Delete.\n\n\t* 1750a.h, a29k.h, arc.h, arm.h, c4x.h, clipper.h, cris.h, d30v.h,\n\tdsp16xx.h, fr30.h, h8300.h, i370.h, i386.h, i860.h, i960.h,\n\tm32r.h, m68hc11.h, m68k.h, m88k.h, mcore.h, mmix.h, mn10300.h,\n\tns32k.h, pa.h, pdp11.h, pj.h, romp.h, s390.h, stormy16.h,\n\tv850.h, vax.h, we32k.h, xtensa.h (POINTER_SIZE): Delete.\n\t* defaults.h (POINTER_SIZE): Define.\n\t* doc/tm.texi (POINTER_SIZE): Document default.\n\nFrom-SVN: r50634", "tree": {"sha": "c38377a305fc2977fb82d0f436a05bfc165dba0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c38377a305fc2977fb82d0f436a05bfc165dba0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2465bf7657aee12ef1237014054619cdfd549684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2465bf7657aee12ef1237014054619cdfd549684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2465bf7657aee12ef1237014054619cdfd549684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2465bf7657aee12ef1237014054619cdfd549684/comments", "author": null, "committer": null, "parents": [{"sha": "53f3e9ca98434523c57787c6f4d67216b1093525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3e9ca98434523c57787c6f4d67216b1093525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f3e9ca98434523c57787c6f4d67216b1093525"}], "stats": {"total": 129, "additions": 17, "deletions": 112}, "files": [{"sha": "cb3e3ee73ec55083ad87cdf57ba63777836aba5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -1,3 +1,13 @@\n+2002-03-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* 1750a.h, a29k.h, arc.h, arm.h, c4x.h, clipper.h, cris.h, d30v.h,\n+\tdsp16xx.h, fr30.h, h8300.h, i370.h, i386.h, i860.h, i960.h,\n+\tm32r.h, m68hc11.h, m68k.h, m88k.h, mcore.h, mmix.h, mn10300.h,\n+\tns32k.h, pa.h, pdp11.h, pj.h, romp.h, s390.h, stormy16.h,\n+\tv850.h, vax.h, we32k.h, xtensa.h (POINTER_SIZE): Delete.\n+\t* defaults.h (POINTER_SIZE): Define.\n+\t* doc/tm.texi (POINTER_SIZE): Document default.\n+\n 2002-03-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* mn10200.h (PTRDIFF_TYPE): Change it to a signed type."}, {"sha": "ce61f65670f59f086565c2f7eb8d8f4b2ae2abaa", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -96,10 +96,6 @@ extern const char *const sectname[4];\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD       1\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE         16\n-\n #define PTRDIFF_TYPE        \"int\"\n \n /* Type to use for `size_t'. If undefined, uses `long unsigned int'.  */"}, {"sha": "3b8712ee5be93634445088e51e6caad61fab5d5d", "filename": "gcc/config/a29k/a29k.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fa29k%2Fa29k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fa29k%2Fa29k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -168,10 +168,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "4ba19f1eaf6644275c71c89b9c1f2ef0cb2fdb7d", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -209,10 +209,6 @@ if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n /* Likewise, if the function return value is promoted.  */\n #define PROMOTE_FUNCTION_RETURN\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "c180e267b38138401e58a84d1dfa1c4f03d71855", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -690,8 +690,6 @@ extern int arm_is_6_or_7;\n \n #define UNITS_PER_WORD\t4\n \n-#define POINTER_SIZE  32\n-\n #define PARM_BOUNDARY  \t32\n \n #define STACK_BOUNDARY  32"}, {"sha": "ba63e3cb9b78289aa5e67cb0fd3ab45744934f1c", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -340,7 +340,6 @@ extern const char *c4x_rpts_cycles_string, *c4x_cpu_version_string;\n \n #define BITS_PER_UNIT\t\t32\n #define UNITS_PER_WORD\t\t1\n-#define POINTER_SIZE\t\t32\n #define PARM_BOUNDARY\t        32\n #define STACK_BOUNDARY\t\t32\n #define FUNCTION_BOUNDARY\t32"}, {"sha": "4f6e65731d439a5e2c6ceae9abbcfd42a35828cb", "filename": "gcc/config/clipper/clipper.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fclipper%2Fclipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fclipper%2Fclipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -72,10 +72,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "235777db85e26de3621c03128bc929a250a32634", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -477,8 +477,6 @@ extern int target_flags;\n \n #define UNITS_PER_WORD 4\n \n-#define POINTER_SIZE 32\n-\n /* A combination of defining PROMOTE_MODE, PROMOTE_FUNCTION_ARGS,\n    PROMOTE_FOR_CALL_ONLY and *not* defining PROMOTE_PROTOTYPES gives the\n    best code size and speed for gcc, ipps and products in gcc-2.7.2.  */"}, {"sha": "122e8b25b10bb4cedf2208de4978ea0e185140f3", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -163,8 +163,6 @@ extern int target_flags;\n \n #define UNITS_PER_WORD 4\n \n-#define POINTER_SIZE 32\n-\n #define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\t\\"}, {"sha": "ec8f2b799aec4d9b10484db41c6e2225f8ec97b6", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -317,10 +317,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 1\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 16\n-\n /* Allocation boundary (in *bits*) for storing pointers in memory.  */\n #define POINTER_BOUNDARY 16\n "}, {"sha": "cc59cd4c966ab75b5edc3786bb107152b0b3fe2f", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -85,8 +85,6 @@ extern int target_flags;\n \n #define UNITS_PER_WORD \t4\n \n-#define POINTER_SIZE \t32\n-\n #define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\"}, {"sha": "79562fcd6021ecdb62d75de05ff958257f0f6d77", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -201,10 +201,6 @@ extern int target_flags;\n #define UNITS_PER_WORD\t\t(TARGET_H8300H || TARGET_H8300S ? 4 : 2)\n #define MIN_UNITS_PER_WORD\t2\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE (TARGET_H8300H || TARGET_H8300S ? 32 : 16)\n-\n #define SHORT_TYPE_SIZE\t16\n #define INT_TYPE_SIZE\t\t(TARGET_INT32 ? 32 : 16)\n #define LONG_TYPE_SIZE\t\t32"}, {"sha": "112758c7ad00a0340ae930a188d889ad03a41e0b", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -90,10 +90,6 @@ extern int mvs_function_name_length;\n \n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.  See also the macro `Pmode' defined below.  */\n-\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing pointers in memory.  */\n \n #define POINTER_BOUNDARY 32"}, {"sha": "50e8dd5f6cf1204775b9016d0542d14d9dde098a", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -718,10 +718,6 @@ extern int ix86_arch;\n #define UNITS_PER_WORD (TARGET_64BIT ? 8 : 4)\n #define MIN_UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE BITS_PER_WORD\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY BITS_PER_WORD\n "}, {"sha": "f9fd62c88d6a2205197b8b0c21221e6f4f04a762", "filename": "gcc/config/i860/i860.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi860%2Fi860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi860%2Fi860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -85,10 +85,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "794b3c90579ff2767c6f2ffe026c60e79b4a6687", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -399,9 +399,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.  See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Width in bits of a long double.  Define to 96, and let\n    ROUND_TYPE_ALIGN adjust the alignment for speed.  */\n #define\tLONG_DOUBLE_TYPE_SIZE (TARGET_LONG_DOUBLE_64 ? 64 : 96)"}, {"sha": "8d9aeebb7c772b8befa2df1bd6f70139a0778244", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -462,10 +462,6 @@ extern enum m32r_sdata m32r_sdata;\n    PROMOTE_MODE.  */\n /*#define PROMOTE_FUNCTION_RETURN*/\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "b522c849814d4e18dfa4ab258fef85a7d2e2684a", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -244,9 +244,6 @@ extern const struct processor_costs *m68hc11_cost;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD\t\t2\n \n-/* Width in bits of a pointer.  See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE\t\t16\n-\n /* Definition of size_t.  This is really an unsigned short as the\n    68hc11 only handles a 64K address space.  */\n #define SIZE_TYPE               \"short unsigned int\""}, {"sha": "9a20494aa3851fd65f98d628e72bd30360a154e7", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -318,10 +318,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY (TARGET_SHORT ? 16 : 32)\n "}, {"sha": "2373b9dbbcaf13dc0a4a56a2cd87b23219f90b7b", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -338,10 +338,6 @@ extern int flag_pic;\t\t\t\t/* -fpic */\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "40f0ab20598657de1aa0b94259fdd5c914ac0a68", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -248,10 +248,6 @@ extern const char * mcore_stack_increment_string;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD\t4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE  32\n-\n /* A C expression for the size in bits of the type `long long' on the\n    target machine.  If you don't define this, the default is two\n    words.  */"}, {"sha": "45c474a8e822ea537b6f9a854fe84b4a768dac54", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -254,7 +254,6 @@ extern int target_flags;\n #define WORDS_BIG_ENDIAN 1\n #define FLOAT_WORDS_BIG_ENDIAN 1\n #define UNITS_PER_WORD 8\n-#define POINTER_SIZE 64\n \n /* FIXME: This macro is correlated to MAX_FIXED_MODE_SIZE in that\n    e.g. this macro must not be 8 (default, UNITS_PER_WORD) when"}, {"sha": "2c1dc7af05b79c31fe3818ea3171d57d5f8273de", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -93,10 +93,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD\t\t4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE \t\t32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY\t\t32\n "}, {"sha": "04bf0b2e949e083f0fc5d116b3c42a4f532fe473", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -199,10 +199,6 @@ while (0)\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "5d0955f57b9f1ea3cd1a9b800f5cec8b10944109", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -393,10 +393,6 @@ extern int target_flags;\n #define UNITS_PER_WORD (TARGET_64BIT ? 8 : 4)\n #define MIN_UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE BITS_PER_WORD\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY BITS_PER_WORD\n "}, {"sha": "53888ee03f812b87831bf9833b6033c992a9a07b", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -173,10 +173,6 @@ extern int target_flags;\n    DImode or Dfmode ...*/\n #define MAX_FIXED_MODE_SIZE 64\t\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 16\n-\n /* Allocation boundary (in *bits*) for storing pointers in memory.  */\n #define POINTER_BOUNDARY 16\n "}, {"sha": "294f2fea98351b6cbb357923172f2ffa6cd7afa6", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -134,10 +134,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD  4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE  32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY   32\n "}, {"sha": "07150c0a4fb0c781412e8c50959683101e9b2903", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -93,10 +93,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "8ab287b2df7cf8547b24854e986ed28b92b91a13", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -113,10 +113,6 @@ extern int current_function_outgoing_args_size;\n #define UNITS_PER_WORD (TARGET_64BIT ? 8 : 4)\n #define MIN_UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.  See also the macro `Pmode' defined below.  */\n-\n-#define POINTER_SIZE (TARGET_64BIT ? 64 : 32)\n-\n /* A C expression for the size in bits of the type `short' on the\n    target machine.  If you don't define this, the default is half a\n    word.  (If this would be less than one storage unit, it is"}, {"sha": "099fac0d8cba2a8a2711389a3a1e82fa97244f16", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -91,8 +91,6 @@ extern int target_flags;\n \n #define UNITS_PER_WORD 2\n \n-#define POINTER_SIZE 16\n-\n #define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\t\\"}, {"sha": "077572bd27aa02d76a6baf25b99981a4d278b61c", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -231,10 +231,6 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD\t\t4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE \t\t32\n-\n /* Define this macro if it is advisable to hold scalars in registers\n    in a wider mode than that declared by the program.  In such cases,\n    the value is constrained to be within the bounds of the declared"}, {"sha": "72c7f3dfc3a783238d9bf39e5a8020b975959d75", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -106,10 +106,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "eec05ab32116ffb4479ef57d42d3e57ea31d911d", "filename": "gcc/config/we32k/we32k.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -65,10 +65,6 @@ extern int target_flags;\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE 32\n-\n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n #define PARM_BOUNDARY 32\n "}, {"sha": "7d581b3f2a81ca5ffe84575f40874e3e434e33df", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -250,7 +250,6 @@ extern unsigned xtensa_current_frame_size;\n #define FLOAT_TYPE_SIZE 32\n #define DOUBLE_TYPE_SIZE 64\n #define LONG_DOUBLE_TYPE_SIZE 64\n-#define POINTER_SIZE 32\n \n /* Tell the preprocessor the maximum size of wchar_t.  */\n #ifndef MAX_WCHAR_TYPE_SIZE"}, {"sha": "1597d52a97cd429f76e2aa33e249d8e79781ed35", "filename": "gcc/defaults.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -329,6 +329,11 @@ do {\t\t\t\t\t\t\t\t\\\n #define LONG_DOUBLE_TYPE_SIZE (BITS_PER_WORD * 2)\n #endif\n \n+/* Width in bits of a pointer.  Mind the value of the macro `Pmode'.  */\n+#ifndef POINTER_SIZE\n+#define POINTER_SIZE BITS_PER_WORD\n+#endif\n+\n #ifndef BUILD_VA_LIST_TYPE\n #define BUILD_VA_LIST_TYPE(X) ((X) = ptr_type_node)\n #endif"}, {"sha": "20d9fa125662d9866c5d89f2973bccc0ffa828aa", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2465bf7657aee12ef1237014054619cdfd549684/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=2465bf7657aee12ef1237014054619cdfd549684", "patch": "@@ -951,7 +951,8 @@ smallest value that @code{UNITS_PER_WORD} can have at run-time.\n @item POINTER_SIZE\n Width of a pointer, in bits.  You must specify a value no wider than the\n width of @code{Pmode}.  If it is not equal to the width of @code{Pmode},\n-you must define @code{POINTERS_EXTEND_UNSIGNED}.\n+you must define @code{POINTERS_EXTEND_UNSIGNED}.  If you do not specify\n+a value the default is @code{BITS_PER_WORD}.\n \n @findex POINTERS_EXTEND_UNSIGNED\n @item POINTERS_EXTEND_UNSIGNED"}]}