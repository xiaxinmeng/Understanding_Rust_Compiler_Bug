{"sha": "6cb1ef51438f731064431977ca56f7db598409d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiMWVmNTE0MzhmNzMxMDY0NDMxOTc3Y2E1NmY3ZGI1OTg0MDlkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-09-26T17:55:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-09-26T17:55:04Z"}, "message": "re PR c++/50512 (surprising change in overloading resolution)\n\n\tPR c++/50512\n\t* call.c (compare_ics): Only consider rvaluedness_matches_p\n\tif the target type is the same or it too differs in rvalueness.\n\nFrom-SVN: r179208", "tree": {"sha": "8d459f359d524e6cbe9c6f0cdf60a67a3a1a398d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d459f359d524e6cbe9c6f0cdf60a67a3a1a398d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb1ef51438f731064431977ca56f7db598409d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb1ef51438f731064431977ca56f7db598409d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb1ef51438f731064431977ca56f7db598409d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb1ef51438f731064431977ca56f7db598409d1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31fd727b4d33fd4c9814e7796e5770e7643dc7c4"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "d1c79469a39d868195753ad0a3af29fe6ee296fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6cb1ef51438f731064431977ca56f7db598409d1", "patch": "@@ -1,5 +1,9 @@\n 2011-09-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50512\n+\t* call.c (compare_ics): Only consider rvaluedness_matches_p\n+\tif the target type is the same or it too differs in rvalueness.\n+\n \tPR c++/50523\n \t* call.c (implicit_conversion): Mask out inappropriate LOOKUP\n \tflags at the top of the function."}, {"sha": "a52ec29eb66a4d03e158de338d1e03c3b81a235f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6cb1ef51438f731064431977ca56f7db598409d1", "patch": "@@ -7864,18 +7864,25 @@ compare_ics (conversion *ics1, conversion *ics2)\n      types to which the references refer are the same type except for\n      top-level cv-qualifiers, and the type to which the reference\n      initialized by S2 refers is more cv-qualified than the type to\n-     which the reference initialized by S1 refers */\n+     which the reference initialized by S1 refers.\n+\n+     DR 1328 [over.match.best]: the context is an initialization by\n+     conversion function for direct reference binding (13.3.1.6) of a\n+     reference to function type, the return type of F1 is the same kind of\n+     reference (i.e. lvalue or rvalue) as the reference being initialized,\n+     and the return type of F2 is not.  */\n \n   if (ref_conv1 && ref_conv2)\n     {\n-      if (!ref_conv1->this_p && !ref_conv2->this_p)\n+      if (!ref_conv1->this_p && !ref_conv2->this_p\n+\t  && (ref_conv1->rvaluedness_matches_p\n+\t      != ref_conv2->rvaluedness_matches_p)\n+\t  && (same_type_p (ref_conv1->type, ref_conv2->type)\n+\t      || (TYPE_REF_IS_RVALUE (ref_conv1->type)\n+\t\t  != TYPE_REF_IS_RVALUE (ref_conv2->type))))\n \t{\n-\t  if (ref_conv1->rvaluedness_matches_p\n-\t      > ref_conv2->rvaluedness_matches_p)\n-\t    return 1;\n-\t  if (ref_conv2->rvaluedness_matches_p\n-\t      > ref_conv1->rvaluedness_matches_p)\n-\t    return -1;\n+\t  return (ref_conv1->rvaluedness_matches_p\n+\t\t  - ref_conv2->rvaluedness_matches_p);\n \t}\n \n       if (same_type_ignoring_top_level_qualifiers_p (to_type1, to_type2))"}, {"sha": "56233c0a64aa883d5af62ef8976f5694c2f15eec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cb1ef51438f731064431977ca56f7db598409d1", "patch": "@@ -1,5 +1,8 @@\n 2011-09-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50512\n+\t* g++.dg/overload/rvalue3.C: New.\n+\n \tPR c++/50523\n \t* g++.dg/overload/ref-conv2.C: New.\n "}, {"sha": "5a5d237429063c279ab291888fa4291ff6ae8f2d", "filename": "gcc/testsuite/g++.dg/overload/rvalue3.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Frvalue3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb1ef51438f731064431977ca56f7db598409d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Frvalue3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Frvalue3.C?ref=6cb1ef51438f731064431977ca56f7db598409d1", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/50512\n+\n+void foo (const char *const& s);\n+template<typename C> void foo (const C& x) { x.a; }\n+\n+void f () {\n+  foo (\"abc\");\n+}"}]}