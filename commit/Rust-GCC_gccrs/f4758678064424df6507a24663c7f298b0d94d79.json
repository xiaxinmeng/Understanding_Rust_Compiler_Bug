{"sha": "f4758678064424df6507a24663c7f298b0d94d79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3NTg2NzgwNjQ0MjRkZjY1MDdhMjQ2NjNjN2YyOThiMGQ5NGQ3OQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-08T15:30:21Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-08T15:30:21Z"}, "message": "2003-10-08  Michael Koch  <konqueror@gmx.de>\n\n\t* java/util/prefs/Preferences.java\n\t(defaultFactoryClass): Fixed class name.\n\t(getFactory): Create instance of class returned by Class.forName(),\n\treformated code.\n\nFrom-SVN: r72229", "tree": {"sha": "076376087c734f035660b966607617d4f0a43043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/076376087c734f035660b966607617d4f0a43043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4758678064424df6507a24663c7f298b0d94d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4758678064424df6507a24663c7f298b0d94d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4758678064424df6507a24663c7f298b0d94d79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4758678064424df6507a24663c7f298b0d94d79/comments", "author": null, "committer": null, "parents": [{"sha": "e55f4a34138fbecad0143015d76106f9a552f757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55f4a34138fbecad0143015d76106f9a552f757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55f4a34138fbecad0143015d76106f9a552f757"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "c4627048a3f2f6aca70258e47c3fb1ab4181bdf7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4758678064424df6507a24663c7f298b0d94d79/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4758678064424df6507a24663c7f298b0d94d79/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f4758678064424df6507a24663c7f298b0d94d79", "patch": "@@ -1,3 +1,10 @@\n+2003-10-08  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/util/prefs/Preferences.java\n+\t(defaultFactoryClass): Fixed class name.\n+\t(getFactory): Create instance of class returned by Class.forName(),\n+\treformated code.\n+\n 2003-10-08  Arnaud Vandyck <arnaud.vandyck@ulg.ac.be>\n \n \t* javax/swing/table/AbstractTableModel.java"}, {"sha": "ab4874b86a6a00de30776dfb7f6e99f1bb5f2692", "filename": "libjava/java/util/prefs/Preferences.java", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4758678064424df6507a24663c7f298b0d94d79/libjava%2Fjava%2Futil%2Fprefs%2FPreferences.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4758678064424df6507a24663c7f298b0d94d79/libjava%2Fjava%2Futil%2Fprefs%2FPreferences.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fprefs%2FPreferences.java?ref=f4758678064424df6507a24663c7f298b0d94d79", "patch": "@@ -92,11 +92,11 @@ public abstract class Preferences {\n      * Default PreferencesFactory class used when the system property\n      * \"java.util.prefs.PreferencesFactory\" is not set.\n \t * <p>\n-\t * XXX - Currently set to MemoryBasedPreferencesFactory, should be changed\n+\t * XXX - Currently set to MemoryBasedFactory, should be changed\n \t * when FileBasedPreferences backend works.\n      */\n     private static final String defaultFactoryClass\n-        = \"gnu.java.util.prefs.MemoryBasedPreferencesFactory\";\n+        = \"gnu.java.util.prefs.MemoryBasedFactory\";\n \n     /** Permission needed to access system or user root. */\n     private static final Permission prefsPermission\n@@ -210,18 +210,23 @@ public Object run() {\n                         });\n \n             // Still no factory? Use our default.\n-            if (factory == null) {\n-                try {\n-                    Object o = Class.forName(defaultFactoryClass);\n-                    factory = (PreferencesFactory) o;\n-                } catch (ClassNotFoundException cnfe) {\n-                    throw new RuntimeException(\"Couldn't load default factory\"\n+            if (factory == null)\n+\t      {\n+                try\n+\t\t  {\n+                    Class cls = Class.forName (defaultFactoryClass);\n+                    factory = (PreferencesFactory) cls.newInstance();\n+                  }\n+\t\tcatch (Exception e)\n+\t\t  {\n+                    throw new RuntimeException (\"Couldn't load default factory\"\n                         + \" '\"+ defaultFactoryClass +\"'\");\n                     // XXX - when using 1.4 compatible throwables add cause\n-                }\n-            }\n+                  }\n+              }\n \n         }\n+\t\n         return factory;\n     }\n "}]}