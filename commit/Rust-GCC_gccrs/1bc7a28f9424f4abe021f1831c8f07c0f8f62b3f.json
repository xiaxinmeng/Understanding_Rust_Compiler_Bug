{"sha": "1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjN2EyOGY5NDI0ZjRhYmUwMjFmMTgzMWM4ZjA3YzBmOGY2MmIzZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-08-22T22:54:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-08-22T22:54:33Z"}, "message": "PR libstdc++/87061 remove pmr type aliases for COW strings\n\nThe pmr aliases for basic_string and match_results are incompatible with\nthe gcc4-compatible ABI because the Copy-On-Write basic_string class\ndoesn't support C++11 allocators.\n\n\tPR libstdc++/87061\n\t* include/experimental/regex [!_GLIBCXX_USE_CXX11_ABI]\n\t(experimental::pmr::match_results, experimental::pmr::cmatch)\n\t(experimental::pmr::smatch, experimental::pmr::wcmatch)\n\t(experimental::pmr::wsmatch): Do not declare for gcc4-compatible ABI,\n\tbecause COW strings don't support C++11 allocator model.\n\t* include/experimental/string [!_GLIBCXX_USE_CXX11_ABI]\n\t(experimental::pmr::basic_string, experimental::pmr::string)\n\t(experimental::pmr::u16string, experimental::pmr::u32string)\n\t(experimental::pmr::wstring): Likewise.\n\t* include/std/regex [!_GLIBCXX_USE_CXX11_ABI] (pmr::match_results)\n\t(pmr::cmatch, pmr::smatch, pmr::wcmatch, pmr::wsmatch): Likewise.\n\t* include/std/string [!_GLIBCXX_USE_CXX11_ABI] (pmr::basic_string)\n\t(pmr::string, pmr::u16string, pmr::u32string, pmr::wstring): Likewise.\n\t* testsuite/21_strings/basic_string/types/pmr_typedefs.cc: Require\n\tcxx11-abi.\n\t* testsuite/28_regex/match_results/pmr_typedefs.cc: Likewise.\n\nFrom-SVN: r263791", "tree": {"sha": "da495d90be79538037a589639cba305dcc02f0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da495d90be79538037a589639cba305dcc02f0a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af55b3af33f0a35fecd2117a43ee93468925e98c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55b3af33f0a35fecd2117a43ee93468925e98c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af55b3af33f0a35fecd2117a43ee93468925e98c"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "e703ffb514363af551970f2646a1831aa027a98c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -1,5 +1,23 @@\n 2018-08-22  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/87061\n+\t* include/experimental/regex [!_GLIBCXX_USE_CXX11_ABI]\n+\t(experimental::pmr::match_results, experimental::pmr::cmatch)\n+\t(experimental::pmr::smatch, experimental::pmr::wcmatch)\n+\t(experimental::pmr::wsmatch): Do not declare for gcc4-compatible ABI,\n+\tbecause COW strings don't support C++11 allocator model.\n+\t* include/experimental/string [!_GLIBCXX_USE_CXX11_ABI]\n+\t(experimental::pmr::basic_string, experimental::pmr::string)\n+\t(experimental::pmr::u16string, experimental::pmr::u32string)\n+\t(experimental::pmr::wstring): Likewise.\n+\t* include/std/regex [!_GLIBCXX_USE_CXX11_ABI] (pmr::match_results)\n+\t(pmr::cmatch, pmr::smatch, pmr::wcmatch, pmr::wsmatch): Likewise.\n+\t* include/std/string [!_GLIBCXX_USE_CXX11_ABI] (pmr::basic_string)\n+\t(pmr::string, pmr::u16string, pmr::u32string, pmr::wstring): Likewise.\n+\t* testsuite/21_strings/basic_string/types/pmr_typedefs.cc: Require\n+\tcxx11-abi.\n+\t* testsuite/28_regex/match_results/pmr_typedefs.cc: Likewise.\n+\n \tPR libstdc++/78448\n \t* include/bits/deque.tcc (deque::_M_range_initialize): Use\n \t_S_check_init_len to check size."}, {"sha": "633b396b312ee08699d2fafbfaef809c73bb6dd0", "filename": "libstdc++-v3/include/experimental/regex", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fregex?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -44,6 +44,7 @@ namespace experimental\n {\n inline namespace fundamentals_v2\n {\n+#if _GLIBCXX_USE_CXX11_ABI\n namespace pmr\n {\n   template<typename _BidirectionalIterator>\n@@ -57,7 +58,7 @@ namespace pmr\n   typedef match_results<wstring::const_iterator> wsmatch;\n \n } // namespace pmr\n-\n+#endif\n } // namespace fundamentals_v2\n } // namespace experimental\n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "5a96bf78d7331afb72fc559c2827c6f8a22c4f67", "filename": "libstdc++-v3/include/experimental/string", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -62,6 +62,7 @@ inline namespace fundamentals_v2\n \t\t   __cont.end());\n     }\n \n+#if _GLIBCXX_USE_CXX11_ABI\n   namespace pmr\n   {\n     // basic_string using polymorphic allocator in namespace pmr\n@@ -77,6 +78,7 @@ inline namespace fundamentals_v2\n     typedef basic_string<wchar_t> wstring;\n \n   } // namespace pmr\n+#endif\n } // namespace fundamentals_v2\n } // namespace experimental\n "}, {"sha": "fd15565835300b17cd037a45172d07ead3e50c49", "filename": "libstdc++-v3/include/std/regex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -62,7 +62,7 @@\n #include <bits/regex.h>\n #include <bits/regex_executor.h>\n \n-#if __cplusplus >= 201703L\n+#if __cplusplus >= 201703L && _GLIBCXX_USE_CXX11_ABI\n #include <memory_resource>\n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "dd60df2ba6e6284d9fc1592a81cdd66a1b3b97c7", "filename": "libstdc++-v3/include/std/string", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -52,7 +52,7 @@\n #include <bits/basic_string.h>\n #include <bits/basic_string.tcc>\n \n-#if __cplusplus >= 201703L\n+#if __cplusplus >= 201703L && _GLIBCXX_USE_CXX11_ABI\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION"}, {"sha": "23956673792f70ef99497343e64cd349d62422d2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/types/pmr_typedefs.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2Fpmr_typedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2Fpmr_typedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2Fpmr_typedefs.cc?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -17,6 +17,7 @@\n \n // { dg-options \"-std=gnu++17\" }\n // { dg-do compile { target c++17 } }\n+// { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <memory_resource>"}, {"sha": "d97fcfeb75eb2c79563388407b7aa230cd457c41", "filename": "libstdc++-v3/testsuite/28_regex/match_results/pmr_typedefs.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fpmr_typedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fpmr_typedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fpmr_typedefs.cc?ref=1bc7a28f9424f4abe021f1831c8f07c0f8f62b3f", "patch": "@@ -17,6 +17,7 @@\n \n // { dg-options \"-std=gnu++17\" }\n // { dg-do compile { target c++17 } }\n+// { dg-require-effective-target cxx11-abi }\n \n #include <regex>\n #include <memory_resource>"}]}