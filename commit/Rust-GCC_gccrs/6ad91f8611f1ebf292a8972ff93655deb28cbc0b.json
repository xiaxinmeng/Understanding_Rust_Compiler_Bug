{"sha": "6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkOTFmODYxMWYxZWJmMjkyYTg5NzJmZjkzNjU1ZGViMjhjYmMwYg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-02-15T09:35:51Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-02-15T09:35:51Z"}, "message": "Updated the NEWS\n\nFrom-SVN: r31983", "tree": {"sha": "eb108759662931458271973be04e0fd07593a2d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb108759662931458271973be04e0fd07593a2d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad91f8611f1ebf292a8972ff93655deb28cbc0b/comments", "author": null, "committer": null, "parents": [{"sha": "2e5aca8386154551563c599688abdc13639be261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5aca8386154551563c599688abdc13639be261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e5aca8386154551563c599688abdc13639be261"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "0541bb4dc54239757ec01a60fedae09002037bd9", "filename": "libjava/NEWS", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad91f8611f1ebf292a8972ff93655deb28cbc0b/libjava%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad91f8611f1ebf292a8972ff93655deb28cbc0b/libjava%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FNEWS?ref=6ad91f8611f1ebf292a8972ff93655deb28cbc0b", "patch": "@@ -4,26 +4,28 @@ New in libgcj X.XX:\n is not found in the application binary or linked shared libraries, the\n class loader will search for a bytecode version in the CLASSPATH and execute\n it using the interpreter. A new front end that behaves like the traditional\n-`java' command is provided: `gij'.\n+`java' command is also provided: `gij'.\n \n * Support for specifying java system properties. Properties can either be set \n at runtime via the GCJ_PROPERTIES environment variable in the format \n \"<name>=<value> ...\"'; or can be compiled into an application binary using \n -D<name>=<value>.\n \n * Support for setjmp/longjmp (sjlj) exception handling has been added, as an\n-alternative to the existing range-table based mechanism. sljl is the default\n+alternative to the existing range-table based mechanism. sjlj is the default\n on non-sparc, non-x86 targets, or can be specified with the \n `--enable-sjlj-exceptions' configure parameter.\n \n * Complete JDK 1.1 reflection support, including invocation.\n \n * Throwable.printStackTrace() has been implemented.\n \n-* Runtime.loadLibrary() has been implemented. In addition, Class.forName() \n-will try to load a series of shared objects in order to find the requested \n-class.  If a class `gnu.quux.whatever' is requested, libgcj will first look \n-for `gnu-quux-whatever.so', then `gnu-quux.so', and finally `gnu.so'.\n+* Runtime.loadLibrary() has been implemented.\n+\n+* Class.forName() will now try to load a series of shared objects in order \n+to find the requested class.  If a class `gnu.quux.whatever' is requested, \n+libgcj will search the system shared library path (eg LD_LIBRARY_PATH) for \n+`gnu-quux-whatever.so', then `gnu-quux.so', and finally `gnu.so'.\n \n * A pure-java implementation of java.math.BigInteger.\n "}]}