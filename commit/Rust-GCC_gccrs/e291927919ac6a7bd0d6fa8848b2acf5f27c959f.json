{"sha": "e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5MTkyNzkxOWFjNmE3YmQwZDZmYTg4NDhiMmFjZjVmMjdjOTU5Zg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-03-07T19:35:22Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-03-07T19:35:22Z"}, "message": "re PR target/65153 ([SH][4.9 Regression] \"insn does not satisfy its constraints\" when compiling libmcrypt)\n\ngcc/testsuite/\n\tPR target/65153\n\t* gcc.c-torture/compile/pr65153.c: New.\n\nFrom-SVN: r221257", "tree": {"sha": "ddf2a985d2e060ab94ca982bddba013ee0d3720c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddf2a985d2e060ab94ca982bddba013ee0d3720c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e291927919ac6a7bd0d6fa8848b2acf5f27c959f/comments", "author": null, "committer": null, "parents": [{"sha": "af68c1b73c33717577ed66fd83896714cd81b0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af68c1b73c33717577ed66fd83896714cd81b0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af68c1b73c33717577ed66fd83896714cd81b0e2"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "e303a39504414111ee8ca4d8884ae8cb9e1af400", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e291927919ac6a7bd0d6fa8848b2acf5f27c959f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e291927919ac6a7bd0d6fa8848b2acf5f27c959f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "patch": "@@ -1,3 +1,8 @@\n+2015-03-07  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/65153\n+\t* gcc.c-torture/compile/pr65153.c: New.\n+\n 2015-03-07  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/65249"}, {"sha": "3cc0df6947d07e839af7318542dee287d39b6fb3", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65153.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e291927919ac6a7bd0d6fa8848b2acf5f27c959f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65153.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e291927919ac6a7bd0d6fa8848b2acf5f27c959f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65153.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65153.c?ref=e291927919ac6a7bd0d6fa8848b2acf5f27c959f", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-additional-options \"-fPIC\" { target fpic } }  */\n+\n+typedef unsigned long word32;\n+typedef unsigned char byte;\n+typedef struct cast256_instance { word32 l_key[96];} cast256_key;\n+word32 cast256_sbox[4][256] = {};\n+void\n+key (cast256_key *key, const word32 *in_key, const int key_len)\n+{\n+  word32 i, j, t, u, cm, cr, lk[8], tm[8], tr[8];\n+  for (i = 0; i < 96; i += 8)\n+    {\n+      for (j = 0; j < 8; ++j)\n+\t{\n+\t  tm[j] = cm;\n+\t  cm += 0x6ed9eba1;\n+\t  tr[j] = cr;\n+\t  cr += 17;\n+\t}\n+      t = (((tm[0] + lk[7]) << ((word32)(tr[0] & 31)))\n+\t   | ((tm[0] + lk[7]) >> (32 - (word32)(tr[0] & 31))));\n+      u = cast256_sbox[0][((byte)((t) >> (8 * 3)))];\n+      u ^= cast256_sbox[1][((byte)((t) >> (8 * 2)))];\n+      lk[7] ^= u;\n+      for (j = 0; j < 8; ++j)\n+\t{\n+\t  cm += 0x6ed9eba1;\n+\t  tr[j] = cr;\n+\t  cr += 17;\n+\t}\n+      t = (((tm[0] + lk[7]) << ((word32)(tr[0] & 31)))\n+\t   | ((tm[0] + lk[7]) >> (32 - (word32)(tr[0] & 31))));\n+      u = cast256_sbox[0][((byte)((t) >> (8 * 3)))];\n+      u ^= cast256_sbox[1][((byte)((t) >> (8 * 2)))];\n+      u -= cast256_sbox[2][((byte)((t) >> (8 * 1)))];\n+      lk[2] ^= u;\n+      lk[7] ^= u;\n+      key->l_key[i + 1] = lk[2];\n+    }\n+}"}]}