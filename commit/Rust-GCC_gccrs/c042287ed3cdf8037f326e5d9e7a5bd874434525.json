{"sha": "c042287ed3cdf8037f326e5d9e7a5bd874434525", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA0MjI4N2VkM2NkZjgwMzdmMzI2ZTVkOWU3YTViZDg3NDQzNDUyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:11:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:11:24Z"}, "message": "Add TARGET_5200 to conditions which determine whether the extbl instruction is emitted.\n\nAdd TARGET_5200 to conditions which determine whether the extbl instruction\nis emitted.\n(mulsi3): Enable pattern with TARGET_5200.\n\nFrom-SVN: r12516", "tree": {"sha": "963cc06afd24510c393694e9a9db6e3637ffdeec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/963cc06afd24510c393694e9a9db6e3637ffdeec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c042287ed3cdf8037f326e5d9e7a5bd874434525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c042287ed3cdf8037f326e5d9e7a5bd874434525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c042287ed3cdf8037f326e5d9e7a5bd874434525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c042287ed3cdf8037f326e5d9e7a5bd874434525/comments", "author": null, "committer": null, "parents": [{"sha": "25fc6214e3705977d82cf1c6052f8f37891a92e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc6214e3705977d82cf1c6052f8f37891a92e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25fc6214e3705977d82cf1c6052f8f37891a92e5"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "9fb0c8c2505cc4cb347d45ba7b0e58082cfd6556", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c042287ed3cdf8037f326e5d9e7a5bd874434525/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c042287ed3cdf8037f326e5d9e7a5bd874434525/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=c042287ed3cdf8037f326e5d9e7a5bd874434525", "patch": "@@ -1646,7 +1646,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_68020)\n+  if (TARGET_68020 || TARGET_5200)\n     return \\\"move%.b %1,%2\\;extb%.l %2\\;smi %0\\;extb%.l %0\\\";\n   else\n     return \\\"move%.b %1,%2\\;ext%.w %0\\;ext%.l %2\\;move%.l %2,%0\\;smi %0\\\";\n@@ -1661,7 +1661,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_68020)\n+  if (TARGET_68020 || TARGET_5200)\n     return \\\"move%.w %1,%2\\;ext%.l %2\\;smi %0\\;extb%.l %0\\\";\n   else\n     return \\\"move%.w %1,%2\\;ext%.l %2\\;smi %0\\;ext%.w %0\\;ext%.l %0\\\";\n@@ -1676,7 +1676,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx (REG, SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_68020)\n+  if (TARGET_68020 || TARGET_5200)\n     return \\\"move%.l %1,%2\\;smi %0\\;extb%.l %0\\\";\n   else\n     return \\\"move%.l %1,%2\\;smi %0\\;ext%.w %0\\;ext%.l %0\\\";\n@@ -1708,7 +1708,7 @@\n     output_asm_insn (\\\"add%.l %2,%3\\\", operands);\n   else\n     output_asm_insn (\\\"move%.l %2,%3\\;add%.l %1,%3\\\", operands);\n-  if (TARGET_68020)\n+  if (TARGET_68020 || TARGET_5200)\n     return \\\"smi %0\\;extb%.l %0\\\";\n   else\n     return \\\"smi %0\\;ext%.w %0\\;ext%.l %0\\\";\n@@ -1735,7 +1735,7 @@\n (define_insn \"extendqisi2\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=d\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")))]\n-  \"TARGET_68020\"\n+  \"TARGET_68020 || TARGET_5200\"\n   \"extb%.l %0\")\n \f\n ;; Conversions between float and double.\n@@ -2034,7 +2034,7 @@\n    && GET_CODE (XEXP (operands[1], 0)) == PRE_DEC)\n     output_asm_insn (\\\"move%.l %4,%3\\\", operands);\n   output_asm_insn (\\\"move%.l %1,%0\\;smi %2\\\", operands);\n-  if (TARGET_68020)\n+  if (TARGET_68020 || TARGET_5200)\n     output_asm_insn (\\\"extb%.l %2\\\", operands);\n   else\n     output_asm_insn (\\\"ext%.w %2\\;ext%.l %2\\\", operands);\n@@ -2947,7 +2947,7 @@\n   [(set (match_operand:SI 0 \"general_operand\" \"=d\")\n \t(mult:SI (match_operand:SI 1 \"general_operand\" \"%0\")\n \t\t (match_operand:SI 2 \"general_operand\" \"dmsK\")))]\n-  \"TARGET_68020\"\n+  \"TARGET_68020 || TARGET_5200\"\n   \"muls%.l %2,%0\")\n \n (define_insn \"umulhisi3\"\n@@ -6343,7 +6343,8 @@\n \t  else\n \t    output_asm_insn (\\\"addq%.l %1,%0\\\", xoperands);\n \t}\n-      else if (INTVAL (xoperands[1]) <= 16 && TARGET_68020 && !TARGET_68060)\n+      else if (INTVAL (xoperands[1]) <= 16 \n+\t       && TARGET_68020 && !TARGET_68040 && !TARGET_68060)\n \t{\n \t  xoperands[1] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t\t  INTVAL (xoperands[1]) - 8);\n@@ -6385,7 +6386,8 @@\n \t  else\n \t    output_asm_insn (\\\"addq%.l %1,%0\\\", xoperands);\n \t}\n-      else if (INTVAL (xoperands[1]) <= 16 && TARGET_68020 && !TARGET_68060)\n+      else if (INTVAL (xoperands[1]) <= 16 \n+\t       && TARGET_68020 && !TARGET_68040 && !TARGET_68060)\n \t{\n \t  xoperands[1] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t\t  INTVAL (xoperands[1]) - 8);"}]}