{"sha": "2ca6de338d405d8ebe4d8b80526c383540209007", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhNmRlMzM4ZDQwNWQ4ZWJlNGQ4YjgwNTI2YzM4MzU0MDIwOTAwNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-29T17:03:29Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-29T17:03:29Z"}, "message": "Annotate vec::copy better for mem stats\n\n\t* vec.h (vec<T, va_heap, vl_ptr>::copy): Pass mem stat info.", "tree": {"sha": "d350be4290f4f30bef52bc9ff7b5ec8946113e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d350be4290f4f30bef52bc9ff7b5ec8946113e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca6de338d405d8ebe4d8b80526c383540209007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca6de338d405d8ebe4d8b80526c383540209007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca6de338d405d8ebe4d8b80526c383540209007", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca6de338d405d8ebe4d8b80526c383540209007/comments", "author": null, "committer": null, "parents": [{"sha": "0da3e7668c429cc356d96aac4b72c0c01c027b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da3e7668c429cc356d96aac4b72c0c01c027b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da3e7668c429cc356d96aac4b72c0c01c027b34"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "14d77e873427a06a55885bd98eae3529eb3796f9", "filename": "gcc/vec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6de338d405d8ebe4d8b80526c383540209007/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6de338d405d8ebe4d8b80526c383540209007/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=2ca6de338d405d8ebe4d8b80526c383540209007", "patch": "@@ -1731,7 +1731,7 @@ vec<T, va_heap, vl_ptr>::copy (ALONE_MEM_STAT_DECL) const\n {\n   vec<T, va_heap, vl_ptr> new_vec = vNULL;\n   if (length ())\n-    new_vec.m_vec = m_vec->copy ();\n+    new_vec.m_vec = m_vec->copy (ALONE_PASS_MEM_STAT);\n   return new_vec;\n }\n "}]}