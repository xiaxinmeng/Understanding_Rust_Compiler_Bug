{"sha": "3279e88a454b75a49bafb8c17676d8ba273f46fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3OWU4OGE0NTRiNzVhNDliYWZiOGMxNzY3NmQ4YmEyNzNmNDZmZA==", "commit": {"author": {"name": "Jonathan Lennox", "email": "lennox@cs.columbia.edu", "date": "2002-10-09T06:32:11Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-10-09T06:32:11Z"}, "message": "PR libstdc++/8071, libstdc++/8127, c++/6745\n\n\n2002-10-08  Jonathan Lennox  <lennox@cs.columbia.edu>\n\n\tPR libstdc++/8071, libstdc++/8127, c++/6745\n\t* streambuf.tcc (__copy_streambufs): Handle cases where\n\t__sbin->in_avail() returns 0, or where __sbin doesn't set gptr().\n\t* testsuite/27_io/ostream_inserter_other.cc (test05): Add.\n\nFrom-SVN: r57970", "tree": {"sha": "cbc5456623322112b44210a8f5a7c9c2e2f5aadd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc5456623322112b44210a8f5a7c9c2e2f5aadd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3279e88a454b75a49bafb8c17676d8ba273f46fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3279e88a454b75a49bafb8c17676d8ba273f46fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3279e88a454b75a49bafb8c17676d8ba273f46fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3279e88a454b75a49bafb8c17676d8ba273f46fd/comments", "author": null, "committer": null, "parents": [{"sha": "f5264b52cfaa000c6acc8220a7037ca9ac01085c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5264b52cfaa000c6acc8220a7037ca9ac01085c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5264b52cfaa000c6acc8220a7037ca9ac01085c"}], "stats": {"total": 132, "additions": 121, "deletions": 11}, "files": [{"sha": "56a6eff5d37367aa20974b955bf8724fa6b8949a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3279e88a454b75a49bafb8c17676d8ba273f46fd", "patch": "@@ -1,3 +1,10 @@\n+2002-10-08  Jonathan Lennox  <lennox@cs.columbia.edu>\n+\n+\tPR libstdc++/8071, libstdc++/8127, c++/6745\n+\t* streambuf.tcc (__copy_streambufs): Handle cases where\n+\t__sbin->in_avail() returns 0, or where __sbin doesn't set gptr().\n+\t* testsuite/27_io/ostream_inserter_other.cc (test05): Add.\n+\t\n 2002-10-08  Paolo Carlini  <pcarlini@unitus.it>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\t\n "}, {"sha": "2101f10b2ef2dd761cbf86f71b8e2eea1ee18c84", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=3279e88a454b75a49bafb8c17676d8ba273f46fd", "patch": "@@ -208,19 +208,28 @@ namespace std\n       try \n \t{\n \t  while (__testput && __bufsize != -1)\n-\t    {\n-\t      __xtrct = __sbout->sputn(__sbin->gptr(), __bufsize);\n-\t      __ret += __xtrct;\n-\t      __sbin->_M_in_cur_move(__xtrct);\n-\t      if (__xtrct == __bufsize)\n+  \t    {\n+ \t      if (__bufsize != 0 && __sbin->gptr() != NULL) \n \t\t{\n-\t\t  if (_Traits::eq_int_type(__sbin->sgetc(), _Traits::eof()))\n+\t\t  __xtrct = __sbout->sputn(__sbin->gptr(), __bufsize);\n+\t\t  __ret += __xtrct;\n+\t\t  __sbin->_M_in_cur_move(__xtrct);\n+\t\t  if (__xtrct != __bufsize)\n \t\t    break;\n-\t\t  __bufsize = __sbin->in_avail();\n \t\t}\n-\t      else\n-\t\tbreak;\n-\t    }\n+ \t      else \n+\t\t{\n+\t\t  _CharT __buf[256];\n+\t\t  streamsize __charsread = __sbin->sgetn(__buf, sizeof(__buf));\n+\t\t  __xtrct = __sbout->sputn(__buf, __charsread);\n+\t\t  __ret += __xtrct;\n+\t\t  if (__xtrct != __charsread)\n+\t\t    break;\n+\t\t}\n+ \t      if (_Traits::eq_int_type(__sbin->sgetc(), _Traits::eof()))\n+  \t\tbreak;\n+ \t      __bufsize = __sbin->in_avail();\n+  \t    }\n \t}\n       catch(exception& __fail) \n \t{"}, {"sha": "9d8cc0f9ecca7b393b5541786295217ffdb58cf5", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_other.cc", "status": "modified", "additions": 95, "deletions": 1, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3279e88a454b75a49bafb8c17676d8ba273f46fd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc?ref=3279e88a454b75a49bafb8c17676d8ba273f46fd", "patch": "@@ -149,13 +149,107 @@ void test04()\n   VERIFY( test );\n }\n \n+\n+class test_buffer_1 : public std::streambuf \n+{\n+public:\n+  test_buffer_1(const std::string& s) : str(s), it(str.begin()) { }\n+  \n+protected:\n+  virtual int underflow() { return (it != str.end() ? *it : EOF); }\n+  virtual int uflow() { return (it != str.end() ? *it++ : EOF); }\n+\n+private:\n+  const std::string str;\n+  std::string::const_iterator it;\n+};\n+\n+\n+class test_buffer_2 : public std::streambuf \n+{\n+public:\n+  test_buffer_2(const std::string& s) : str(s), it(str.begin()) { }\n+  \n+protected:\n+  virtual int underflow() { return (it != str.end() ? *it : EOF); }\n+  virtual int uflow() { return (it != str.end() ? *it++ : EOF); }\n+  virtual std::streamsize showmanyc() { return std::distance(it, str.end()); }\n+private:\n+  const std::string str;\n+  std::string::const_iterator it;\n+};\n+\n+\n+class test_buffer_3 : public std::streambuf \n+{\n+public:\n+  test_buffer_3(const std::string& s) : str(s), it(str.begin()) { }\n+\n+protected:\n+  virtual int underflow() { return (it != str.end() ? *it : EOF); }\n+  virtual int uflow() { return (it != str.end() ? *it++ : EOF); }\n+  virtual std::streamsize showmanyc() \n+  {\n+    std::streamsize ret = std::distance(it, str.end());\n+    return ret > 0 ? ret : -1;\n+  }\n+private:\n+  const std::string str;\n+  std::string::const_iterator it;\n+};\n+\n+\n+void test(const std::string& str, std::streambuf& buf)\n+{\n+  bool test = true;\n+\n+  std::ostringstream out;\n+  std::istream in(&buf);\n+\n+  out << in.rdbuf();\n+\n+  if (out.str() != str) \n+    VERIFY( false );\n+}\n+\n+// libstdc++/6745\n+// libstdc++/8071\n+// libstdc++/8127\n+// Jonathan Lennox  <lennox@cs.columbia.edu>\n+void test05()\n+{\n+  std::ostringstream out_1, out_2, out_3, out_4;\n+\n+  std::string string_a(\"Hello, world!\");\n+  std::string string_b(\"\");\n+\n+  test_buffer_1 buf1a(string_a);\n+  test_buffer_1 buf1b(string_b);\n+\n+  test_buffer_2 buf2a(string_a);\n+  test_buffer_2 buf2b(string_b);\n+\n+  test_buffer_3 buf3a(string_a);\n+  test_buffer_3 buf3b(string_b);\n+\n+  test(string_a, buf1a);\n+  test(string_b, buf1b);\n+\n+  test(string_a, buf2a);\n+  test(string_b, buf2b);\n+\n+  test(string_a, buf3a);\n+  test(string_b, buf3b);\n+}\n+\n int \n main()\n {\n   test01();\n   test02();\n   test03();\n   test04();\n-\n+  \n+  test05();\n   return 0;\n }"}]}