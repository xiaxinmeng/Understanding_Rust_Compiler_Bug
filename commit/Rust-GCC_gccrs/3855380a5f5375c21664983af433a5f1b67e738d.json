{"sha": "3855380a5f5375c21664983af433a5f1b67e738d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg1NTM4MGE1ZjUzNzVjMjE2NjQ5ODNhZjQzM2E1ZjFiNjdlNzM4ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2012-10-17T10:25:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-10-17T10:25:56Z"}, "message": "tree-streamer-out.c (write_ts_decl_common_tree_pointers): Do not write TREE_CHAIN of PARM_DECLs.\n\n2012-10-17  Richard Biener  <rguenther@suse.de>\n\n\t* tree-streamer-out.c (write_ts_decl_common_tree_pointers):\n\tDo not write TREE_CHAIN of PARM_DECLs.\n\t(write_ts_decl_non_common_tree_pointers): Instead stream\n\tthe DECL_ARGUMENTS chain.\n\t* tree-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n\tDo not read TREE_CHAIN of PARM_DECLs.\n\t(lto_input_ts_decl_non_common_tree_pointes): Instead read\n\tthe DECL_ARGUMENTS as chain.\n\nFrom-SVN: r192529", "tree": {"sha": "188b0be336692e3c2577ed892935d7bf5ff84a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/188b0be336692e3c2577ed892935d7bf5ff84a90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3855380a5f5375c21664983af433a5f1b67e738d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3855380a5f5375c21664983af433a5f1b67e738d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3855380a5f5375c21664983af433a5f1b67e738d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3855380a5f5375c21664983af433a5f1b67e738d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0de0c3b403372e916d951c2fe541fe260b571ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0de0c3b403372e916d951c2fe541fe260b571ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0de0c3b403372e916d951c2fe541fe260b571ff"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "0787f59983ad51e92d381dc871a43fec1d1fc75b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3855380a5f5375c21664983af433a5f1b67e738d", "patch": "@@ -1,3 +1,14 @@\n+2012-10-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-streamer-out.c (write_ts_decl_common_tree_pointers):\n+\tDo not write TREE_CHAIN of PARM_DECLs.\n+\t(write_ts_decl_non_common_tree_pointers): Instead stream\n+\tthe DECL_ARGUMENTS chain.\n+\t* tree-streamer-in.c (lto_input_ts_decl_common_tree_pointers):\n+\tDo not read TREE_CHAIN of PARM_DECLs.\n+\t(lto_input_ts_decl_non_common_tree_pointes): Instead read\n+\tthe DECL_ARGUMENTS as chain.\n+\n 2012-10-17  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/iq2000/iq2000.h (call_used_regs): Remove definition."}, {"sha": "9e1e9750cb0123da39d1c06a22e0b03ce7d7b618", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=3855380a5f5375c21664983af433a5f1b67e738d", "patch": "@@ -643,9 +643,6 @@ lto_input_ts_decl_common_tree_pointers (struct lto_input_block *ib,\n      for early inlining so drop it on the floor instead of ICEing in\n      dwarf2out.c.  */\n \n-  if (TREE_CODE (expr) == PARM_DECL)\n-    TREE_CHAIN (expr) = streamer_read_chain (ib, data_in);\n-\n   if ((TREE_CODE (expr) == VAR_DECL\n        || TREE_CODE (expr) == PARM_DECL)\n       && DECL_HAS_VALUE_EXPR_P (expr))\n@@ -670,7 +667,7 @@ lto_input_ts_decl_non_common_tree_pointers (struct lto_input_block *ib,\n {\n   if (TREE_CODE (expr) == FUNCTION_DECL)\n     {\n-      DECL_ARGUMENTS (expr) = stream_read_tree (ib, data_in);\n+      DECL_ARGUMENTS (expr) = streamer_read_chain (ib, data_in);\n       DECL_RESULT (expr) = stream_read_tree (ib, data_in);\n     }\n   else if (TREE_CODE (expr) == TYPE_DECL)"}, {"sha": "ee5e31172b90fdd1b242dda04ad3c733667cf6c1", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855380a5f5375c21664983af433a5f1b67e738d/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=3855380a5f5375c21664983af433a5f1b67e738d", "patch": "@@ -562,9 +562,6 @@ write_ts_decl_common_tree_pointers (struct output_block *ob, tree expr,\n      for early inlining so drop it on the floor instead of ICEing in\n      dwarf2out.c.  */\n \n-  if (TREE_CODE (expr) == PARM_DECL)\n-    streamer_write_chain (ob, TREE_CHAIN (expr), ref_p);\n-\n   if ((TREE_CODE (expr) == VAR_DECL\n        || TREE_CODE (expr) == PARM_DECL)\n       && DECL_HAS_VALUE_EXPR_P (expr))\n@@ -585,7 +582,7 @@ write_ts_decl_non_common_tree_pointers (struct output_block *ob, tree expr,\n {\n   if (TREE_CODE (expr) == FUNCTION_DECL)\n     {\n-      stream_write_tree (ob, DECL_ARGUMENTS (expr), ref_p);\n+      streamer_write_chain (ob, DECL_ARGUMENTS (expr), ref_p);\n       stream_write_tree (ob, DECL_RESULT (expr), ref_p);\n     }\n   else if (TREE_CODE (expr) == TYPE_DECL)"}]}