{"sha": "8c3390831f47bc38a327ab9ae3abc16494cfcc98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzMzkwODMxZjQ3YmMzOGEzMjdhYjlhZTNhYmMxNjQ5NGNmY2M5OA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-06-23T01:19:57Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-06-23T01:19:57Z"}, "message": "re PR target/27531 (sparc: undefined reference to .LL226 with -O2)\n\n2006-06-22  Roger Sayle  <roger@eyesopen.com>\n\t    Steven Bosscher  <stevenb.gcc@gmail.com>\n\n\tPR target/27531\n\t* reload1.c (gen_reload): Call mark_jump_label on the new insns\n\tgenerated by gen_move_insn to add REG_LABEL notes if necessary.\n\n\t* gcc.dg/pr27531-1.c: New test case.\n\n\nCo-Authored-By: Steven Bosscher <stevenb.gcc@gmail.com>\n\nFrom-SVN: r114921", "tree": {"sha": "84cbd07ec7782287ae980befff4689504563d3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84cbd07ec7782287ae980befff4689504563d3bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c3390831f47bc38a327ab9ae3abc16494cfcc98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3390831f47bc38a327ab9ae3abc16494cfcc98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3390831f47bc38a327ab9ae3abc16494cfcc98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3390831f47bc38a327ab9ae3abc16494cfcc98/comments", "author": null, "committer": null, "parents": [{"sha": "70259b264e0a06ddddea4b8b7680e72a82e528dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70259b264e0a06ddddea4b8b7680e72a82e528dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70259b264e0a06ddddea4b8b7680e72a82e528dc"}], "stats": {"total": 132, "additions": 131, "deletions": 1}, "files": [{"sha": "1d64969bc432dbbcdc618e6ee64d296789639de1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c3390831f47bc38a327ab9ae3abc16494cfcc98", "patch": "@@ -1,3 +1,10 @@\n+2006-06-22  Roger Sayle  <roger@eyesopen.com>\n+\t    Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\tPR target/27531\n+\t* reload1.c (gen_reload): Call mark_jump_label on the new insns\n+\tgenerated by gen_move_insn to add REG_LABEL notes if necessary.\n+\n 2006-06-22  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/lib1funcs.asm (MIN_ESA): Delete."}, {"sha": "210b007af9e9159ec11ebf273e1f09edacc22358", "filename": "gcc/reload1.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=8c3390831f47bc38a327ab9ae3abc16494cfcc98", "patch": "@@ -7757,7 +7757,11 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n     }\n   /* If IN is a simple operand, use gen_move_insn.  */\n   else if (OBJECT_P (in) || GET_CODE (in) == SUBREG)\n-    emit_insn (gen_move_insn (out, in));\n+    {\n+      tem = emit_insn (gen_move_insn (out, in));\n+      /* IN may contain a LABEL_REF, if so add a REG_LABEL note.  */\n+      mark_jump_label (in, tem, 0);\n+    }\n \n #ifdef HAVE_reload_load_address\n   else if (HAVE_reload_load_address)"}, {"sha": "f0a68e5c5e3d156de1708066312f670ce909ca6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c3390831f47bc38a327ab9ae3abc16494cfcc98", "patch": "@@ -1,3 +1,8 @@\n+2006-06-22  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/27531\n+\t* gcc.dg/pr27531-1.c: New test case.\n+\n 2006-06-22  Asher Langton  <langton2@llnl.gov>\n \n \tPR fortran/24748"}, {"sha": "08e3f5ea24507951f7bf41b78f9ed67f1da8baa0", "filename": "gcc/testsuite/gcc.dg/pr27531-1.c", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27531-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3390831f47bc38a327ab9ae3abc16494cfcc98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27531-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27531-1.c?ref=8c3390831f47bc38a327ab9ae3abc16494cfcc98", "patch": "@@ -0,0 +1,114 @@\n+/* PR target/27531 */\n+/* This test case stressed the register allocator into reloading a LABEL_REF\n+   on sparc, but didn't add a REG_LABEL note, ultimately causing the assembly\n+   output to reference a label that had been eliminated.  */\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+typedef struct _IO_FILE FILE;\n+char const *RCSname;\n+void *Locks;\n+void * Head;\n+struct Revpairs{\n+    struct Revpairs * rnext;\n+};\n+extern char *strchr(const char *s, int c);\n+extern int fprintf(FILE *, const char *format, ...);\n+static void getrevpairs (char*);\n+static int branchflag;\n+static struct Revpairs *revlist, *Revlst;\n+\n+extern int warn(const char *msg, char *argv);\n+extern int error(const char *msg, int c, char *argv);\n+extern int recentdate(void *foo, void *bar);\n+\n+char *t;\n+int main (int argc, char **argv)\n+{\n+    FILE *out;\n+    char *a, **newargv;\n+    void *currdate;\n+    int descflag, selectflag;\n+    int onlylockflag;\n+    int onlyRCSflag;\n+    int shownames;\n+    descflag = selectflag = shownames = 1;\n+    onlylockflag = onlyRCSflag = 0;\n+    while (a = *++argv, 0<--argc)\n+    {\n+        switch (*a++)\n+        {\n+            case 'L':\n+                onlylockflag = 1;\n+            case 'N':\n+                shownames = 0;\n+            case 'R':\n+                t = a;\n+            case 'b':\n+                branchflag = 1;\n+            case 'r':\n+                getrevpairs(a);\n+        }\n+        if (onlylockflag && !Locks)\n+            fprintf(out, \"%s\\n\", RCSname);\n+        if (shownames) \n+            while( currdate)\n+                recentdate(Head, currdate);\n+    }\n+}\n+void getrevpairs(char *argv)\n+{\n+    char c;\n+    struct Revpairs * nextrevpair;\n+    int separator;\n+    if (strchr(argv,':'))\n+        separator = ':';\n+    else\n+    {\n+        if (strchr(argv,'-') )\n+            warn(\"`-' is obsolete in `-r%s'; use `:' instead\", argv);\n+        separator = '-';\n+    }\n+    for (;;)\n+    {\n+        nextrevpair->rnext = revlist;\n+        for (;; c = *++argv)\n+        {\n+            switch (c)\n+            {\n+                default:\n+                    continue;\n+                case ' ':\n+                case '\\t':\n+                case '\\n':\n+                    break;\n+                case ':':\n+                case '-':\n+                    if (c == separator)\n+                        continue;\n+            }\n+            break;\n+        }\n+        if (!c)\n+            break;\n+        error(\"missing `,' near `%c%s'\", c, argv+1);\n+    }\n+}\n+\n+int warn(const char *msg, char *argv)\n+{\n+  t = 0;  /* this function needs side-effects.  */\n+  return 0;\n+}\n+\n+int error(const char *msg, int c, char *argv)\n+{\n+  t = 0; /* this function needs side-effects.  */\n+  return 0;\n+}\n+\n+int recentdate(void *foo, void *bar)\n+{\n+  t = 0; /* this function needs side-effects.  */\n+  return 0;\n+}\n+"}]}