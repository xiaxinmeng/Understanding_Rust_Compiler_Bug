{"sha": "d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxYmE1NmZjNDZlZDljZjhjMmI0YTNkYmY3NGMwMWViMDAxODg3Zg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-07-16T19:34:50Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-07-16T19:34:50Z"}, "message": "simplify-rtx.c (simplify_replace_rtx): Convert constant comparisons to MODE_FLOAT constants if...\n\n\n\t* simplify-rtx.c (simplify_replace_rtx): Convert constant comparisons\n\tto MODE_FLOAT constants if FLOAT_STORE_FLAG_VALUE is defined.\n\t(simplify_rtx): Likewise.  Simplify (lo_sum (high X) X) as X.\n\nFrom-SVN: r69475", "tree": {"sha": "6fec9a7da738bbe40bc3e850d549dd27e19739f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fec9a7da738bbe40bc3e850d549dd27e19739f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f/comments", "author": null, "committer": null, "parents": [{"sha": "264d65c1b53f893bdb421fd18b7d86792f3a38aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264d65c1b53f893bdb421fd18b7d86792f3a38aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264d65c1b53f893bdb421fd18b7d86792f3a38aa"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "ba9356f6e6c5e45b0dde2fad50f9dd7f6610b63e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "patch": "@@ -1,3 +1,9 @@\n+2003-07-16  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* simplify-rtx.c (simplify_replace_rtx): Convert constant comparisons\n+\tto MODE_FLOAT constants if FLOAT_STORE_FLAG_VALUE is defined.\n+\t(simplify_rtx): Likewise.  Simplify (lo_sum (high X) X) as X.\n+\n 2003-07-16  Andrew Pinski  <pinskia@physics.uc.edu>\n \t\n \t* doc/install.texi (--without-headers): New."}, {"sha": "3b857673c720d8fd8396d9ac47cc392dff05d962", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 46, "deletions": 12, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=d41ba56fc46ed9cf8c2b4a3dbf74c01eb001887f", "patch": "@@ -269,15 +269,24 @@ simplify_replace_rtx (rtx x, rtx old, rtx new)\n \t\t\t\t     : GET_MODE (XEXP (x, 1)));\n \trtx op0 = simplify_replace_rtx (XEXP (x, 0), old, new);\n \trtx op1 = simplify_replace_rtx (XEXP (x, 1), old, new);\n-\n-\treturn\n-\t  simplify_gen_relational (code, mode,\n-\t\t\t\t   (op_mode != VOIDmode\n-\t\t\t\t    ? op_mode\n-\t\t\t\t    : GET_MODE (op0) != VOIDmode\n-\t\t\t\t    ? GET_MODE (op0)\n-\t\t\t\t    : GET_MODE (op1)),\n-\t\t\t\t   op0, op1);\n+\trtx temp = simplify_gen_relational (code, mode,\n+\t\t\t\t\t    (op_mode != VOIDmode\n+\t\t\t\t\t     ? op_mode\n+\t\t\t\t\t     : GET_MODE (op0) != VOIDmode\n+\t\t\t\t\t       ? GET_MODE (op0)\n+\t\t\t\t\t       : GET_MODE (op1)),\n+\t\t\t\t\t    op0, op1);\n+#ifdef FLOAT_STORE_FLAG_VALUE\n+\tif (GET_MODE_CLASS (mode) == MODE_FLOAT)\n+\t{\n+\t  if (temp == const0_rtx)\n+\t    temp = CONST0_RTX (mode);\n+\t  else if (temp == const_true_rtx)\n+\t    temp = CONST_DOUBLE_FROM_REAL_VALUE (FLOAT_STORE_FLAG_VALUE (mode),\n+\t\t\t\t\t\t mode);\n+\t}\n+#endif\n+\treturn temp;\n       }\n \n     case '3':\n@@ -3030,6 +3039,7 @@ simplify_rtx (rtx x)\n {\n   enum rtx_code code = GET_CODE (x);\n   enum machine_mode mode = GET_MODE (x);\n+  rtx temp;\n \n   switch (GET_RTX_CLASS (code))\n     {\n@@ -3058,12 +3068,24 @@ simplify_rtx (rtx x)\n \t\t\t\t\t XEXP (x, 2));\n \n     case '<':\n-      return simplify_relational_operation (code,\n+      temp = simplify_relational_operation (code,\n \t\t\t\t\t    ((GET_MODE (XEXP (x, 0))\n \t\t\t\t\t      != VOIDmode)\n \t\t\t\t\t     ? GET_MODE (XEXP (x, 0))\n \t\t\t\t\t     : GET_MODE (XEXP (x, 1))),\n \t\t\t\t\t    XEXP (x, 0), XEXP (x, 1));\n+#ifdef FLOAT_STORE_FLAG_VALUE\n+      if (temp != 0 && GET_MODE_CLASS (mode) == MODE_FLOAT)\n+\t{\n+\t  if (temp == const0_rtx)\n+\t    temp = CONST0_RTX (mode);\n+\t  else\n+\t    temp = CONST_DOUBLE_FROM_REAL_VALUE (FLOAT_STORE_FLAG_VALUE (mode),\n+\t\t\t\t\t\t mode);\n+\t}\n+#endif\n+      return temp;\n+\n     case 'x':\n       if (code == SUBREG)\n \treturn simplify_gen_subreg (mode, SUBREG_REG (x),\n@@ -3074,8 +3096,20 @@ simplify_rtx (rtx x)\n \t  if (CONSTANT_P (XEXP (x, 0)))\n \t    return const1_rtx;\n \t}\n-      return NULL;\n+      break;\n+\n+    case 'o':\n+      if (code == LO_SUM)\n+\t{\n+\t  /* Convert (lo_sum (high FOO) FOO) to FOO.  */\n+\t  if (GET_CODE (XEXP (x, 0)) == HIGH\n+\t      && rtx_equal_p (XEXP (XEXP (x, 0), 0), XEXP (x, 1)))\n+\t  return XEXP (x, 1);\n+\t}\n+      break;\n+\n     default:\n-      return NULL;\n+      break;\n     }\n+  return NULL;\n }"}]}