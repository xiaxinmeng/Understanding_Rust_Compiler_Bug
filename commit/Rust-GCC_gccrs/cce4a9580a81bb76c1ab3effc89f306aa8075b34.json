{"sha": "cce4a9580a81bb76c1ab3effc89f306aa8075b34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NlNGE5NTgwYTgxYmI3NmMxYWIzZWZmYzg5ZjMwNmFhODA3NWIzNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-12-17T13:09:00Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-12-17T13:09:00Z"}, "message": "* hwint.h: New file to consolidate HOST_WIDE_INT (etc) macros.\n\nFrom-SVN: r24362", "tree": {"sha": "e9e93d3d505cf32661e1adbe129d64df784a5bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9e93d3d505cf32661e1adbe129d64df784a5bdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cce4a9580a81bb76c1ab3effc89f306aa8075b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce4a9580a81bb76c1ab3effc89f306aa8075b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce4a9580a81bb76c1ab3effc89f306aa8075b34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce4a9580a81bb76c1ab3effc89f306aa8075b34/comments", "author": null, "committer": null, "parents": [{"sha": "d5ff227d1839465b9b0e52317bdd2a4af252b09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ff227d1839465b9b0e52317bdd2a4af252b09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ff227d1839465b9b0e52317bdd2a4af252b09c"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "7c567497dc498801c291d5f8873d1c99a580f4aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce4a9580a81bb76c1ab3effc89f306aa8075b34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce4a9580a81bb76c1ab3effc89f306aa8075b34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cce4a9580a81bb76c1ab3effc89f306aa8075b34", "patch": "@@ -1,3 +1,7 @@\n+Thu Dec 17 15:58:26 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* hwint.h: New file to consolidate HOST_WIDE_INT (etc) macros.\n+\n Thu Dec 17 12:31:12 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* Makefile.in (INTERNAL_CFLAGS): Add SCHED_CFLAGS."}, {"sha": "91973b8187ae01cea740629269e34dacf38dd22e", "filename": "gcc/hwint.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce4a9580a81bb76c1ab3effc89f306aa8075b34/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce4a9580a81bb76c1ab3effc89f306aa8075b34/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=cce4a9580a81bb76c1ab3effc89f306aa8075b34", "patch": "@@ -0,0 +1,96 @@\n+/* HOST_WIDE_INT definitions for the GNU compiler.\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+\n+   This file is part of GNU CC.\n+\n+   Provide definitions for macros which depend on HOST_BITS_PER_INT\n+   and HOST_BITS_PER_LONG. */\n+\n+#ifndef __HWINT_H__\n+#define __HWINT_H__\n+\n+/* Only do all of this if both of these macros are defined, otherwise\n+   they'll evaluate to zero, which is not what you want. */\n+#if defined (HOST_BITS_PER_LONG) && defined (HOST_BITS_PER_INT)\n+\n+/* Find the largest host integer type and set its size and type.  */\n+\n+#ifndef HOST_BITS_PER_WIDE_INT\n+\n+# if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n+#  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n+#  define HOST_WIDE_INT long\n+# else\n+#  define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n+#  define HOST_WIDE_INT int\n+# endif\n+\n+#endif /* ! HOST_BITS_PER_WIDE_INT */\n+\n+\n+/* Provide defaults for the way to print a HOST_WIDE_INT\n+   in various manners.  */\n+\n+#ifndef HOST_WIDE_INT_PRINT_DEC\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#  define HOST_WIDE_INT_PRINT_DEC \"%d\"\n+# else\n+#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#   define HOST_WIDE_INT_PRINT_DEC \"%ld\"\n+#  else\n+#   define HOST_WIDE_INT_PRINT_DEC \"%lld\"\n+#  endif\n+# endif\n+#endif /* ! HOST_WIDE_INT_PRINT_DEC */\n+\n+#ifndef HOST_WIDE_INT_PRINT_UNSIGNED\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#  define HOST_WIDE_INT_PRINT_UNSIGNED \"%u\"\n+# else\n+#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#   define HOST_WIDE_INT_PRINT_UNSIGNED \"%lu\"\n+#  else\n+#   define HOST_WIDE_INT_PRINT_UNSIGNED \"%llu\"\n+#  endif\n+# endif\n+#endif /* ! HOST_WIDE_INT_PRINT_UNSIGNED */\n+\n+#ifndef HOST_WIDE_INT_PRINT_HEX\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#  define HOST_WIDE_INT_PRINT_HEX \"0x%x\"\n+# else\n+#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#   define HOST_WIDE_INT_PRINT_HEX \"0x%lx\"\n+#  else\n+#   define HOST_WIDE_INT_PRINT_HEX \"0x%llx\"\n+#  endif\n+# endif\n+#endif /* ! HOST_WIDE_INT_PRINT_HEX */\n+\n+#ifndef HOST_WIDE_INT_PRINT_DOUBLE_HEX\n+# if HOST_BITS_PER_WIDE_INT == 64\n+#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#   define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%x%016x\"\n+#  else\n+#   if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#    define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%016lx\"\n+#   else\n+#    define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%llx%016llx\"\n+#   endif\n+#  endif\n+# else\n+#  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n+#   define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%x%08x\"\n+#  else\n+#   if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+#    define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%lx%08lx\"\n+#   else\n+#    define HOST_WIDE_INT_PRINT_DOUBLE_HEX \"0x%llx%08llx\"\n+#   endif\n+#  endif\n+# endif\n+#endif /* ! HOST_WIDE_INT_PRINT_DOUBLE_HEX */\n+\n+#endif /* HOST_BITS_PER_LONG && HOST_BITS_PER_INT */\n+\n+#endif /* __HWINT_H__ */"}]}