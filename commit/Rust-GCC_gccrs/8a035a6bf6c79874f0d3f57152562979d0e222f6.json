{"sha": "8a035a6bf6c79874f0d3f57152562979d0e222f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwMzVhNmJmNmM3OTg3NGYwZDNmNTcxNTI1NjI5NzlkMGUyMjJmNg==", "commit": {"author": {"name": "Ashif Harji", "email": "asharji@uwaterloo.ca", "date": "2003-03-02T14:09:31Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-03-02T14:09:31Z"}, "message": "gcc.c (default_compilers): Add -no-integrated-cpp flag to invoke an external cpp during compilation.\n\n\t* gcc.c (default_compilers): Add -no-integrated-cpp flag to invoke\n\t  an external cpp during compilation.\n\t(option_map): Likewise.\n\t* cp/lang-specs.h (default_compilers): Similarly.\n\t* objc/lang-specs.h (default_compilers): Similarly.\n\t* doc/invoke.texi: Document -no-integrated-cpp flag.\n\nFrom-SVN: r63664", "tree": {"sha": "e22f6ca4460579d9c884f08cad445f3d80ac0fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e22f6ca4460579d9c884f08cad445f3d80ac0fda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a035a6bf6c79874f0d3f57152562979d0e222f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a035a6bf6c79874f0d3f57152562979d0e222f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a035a6bf6c79874f0d3f57152562979d0e222f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a035a6bf6c79874f0d3f57152562979d0e222f6/comments", "author": null, "committer": null, "parents": [{"sha": "e589ede6fdc3f0f3f70be950bdd85d996eb19eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e589ede6fdc3f0f3f70be950bdd85d996eb19eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e589ede6fdc3f0f3f70be950bdd85d996eb19eca"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "a953cd380908c5d1fe85ed8fb89f85194b4c1198", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -1,3 +1,11 @@\n+2003-03-02  Ashif Harji  <asharji@uwaterloo.ca>\n+\n+\t* gcc.c (default_compilers): Add -no-integrated-cpp flag to invoke\n+\t  an external cpp during compilation.\n+\t(option_map): Likewise.\n+\t* objc/lang-specs.h (default_compilers): Similarly.\n+\t* doc/invoke.texi: Document -no-integrated-cpp flag.\n+\n 2003-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (zero_extendqisi2): Change to an"}, {"sha": "30efcf37464516f8f744746d8a4b14347308a3ee", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -1,3 +1,8 @@\n+2003-03-02  Ashif Harji  <asharji@uwaterloo.ca>\n+\n+\t* lang-specs.h (default_compilers): Add -no-integrated-cpp flag to\n+\t  invoke an external cpp during compilation.\n+\n 2003-03-01  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* decl.c (duplicate_decls): Convert use of warning_with_decl() to"}, {"sha": "229164445b7da099cfca6b6d7f83101abde589d7", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -50,10 +50,10 @@ Boston, MA 02111-1307, USA.  */\n     \"%{E|M|MM:cc1plus -E %{!no-gcc:-D__GNUG__=%v1}\\\n        %(cpp_options) %2 %(cpp_debug_options)}\\\n      %{!E:%{!M:%{!MM:\\\n-       %{save-temps:cc1plus -E %{!no-gcc:-D__GNUG__=%v1}\\\n-\t\t%(cpp_options) %2 %b.ii \\n}\\\n-      cc1plus %{save-temps:-fpreprocessed %b.ii}\\\n-\t      %{!save-temps:%(cpp_unique_options) %{!no-gcc:-D__GNUG__=%v1}}\\\n+       %{save-temps|no-integrated-cpp:cc1plus -E %{!no-gcc:-D__GNUG__=%v1}\\\n+\t\t%(cpp_options) %2 %{save-temps:%b.ii} %{!save-temps:%g.ii} \\n}\\\n+      cc1plus %{save-temps|no-integrated-cpp:-fpreprocessed %{save-temps:%b.ii} %{!save-temps:%g.ii}}\\\n+\t      %{!save-temps:%{!no-integrated-cpp:%(cpp_unique_options) %{!no-gcc:-D__GNUG__=%v1}}}\\\n \t%(cc1_options) %2 %{+e1*}\\\n        %{!fsyntax-only:%(invoke_as)}}}}\",\n      CPLUSPLUS_CPP_SPEC},"}, {"sha": "22d0ffc62f6d95797c576f472266070fa7f75dc3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -166,7 +166,7 @@ in the following sections.\n -ansi  -std=@var{standard}  -aux-info @var{filename} @gol\n -fno-asm  -fno-builtin -fno-builtin-@var{function} @gol\n -fhosted  -ffreestanding  -fms-extensions @gol\n--trigraphs  -traditional  -traditional-cpp @gol\n+-trigraphs  -no-integrated-cpp  -traditional  -traditional-cpp @gol\n -fallow-single-precision  -fcond-mismatch @gol\n -fsigned-bitfields  -fsigned-char @gol\n -funsigned-bitfields  -funsigned-char @gol\n@@ -1198,6 +1198,17 @@ Accept some non-standard constructs used in Microsoft header files.\n Support ISO C trigraphs.  The @option{-ansi} option (and @option{-std}\n options for strict ISO C conformance) implies @option{-trigraphs}.\n \n+@item -no-integrated-cpp\n+@opindex no-integrated-cpp\n+Performs a compilation in two passes: preprocessing and compiling.  This\n+option allows a user supplied \"cc1\", \"cc1plus\", or \"cc1obj\" via the\n+@option{-B} option. The user supplied compilation step can then add in\n+an additional preprocessing step after normal preprocessing but before\n+compiling. The default is to use the integrated cpp (internal cpp)\n+\n+The semantics of this option will change if \"cc1\", \"cc1plus\", and\n+\"cc1obj\" are merged.\n+\n @cindex traditional C language\n @cindex C language, traditional\n @item -traditional"}, {"sha": "a07bd9c6f8ac3e1b0a088e9fdf1b11be49cc24ba", "filename": "gcc/gcc.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -911,11 +911,11 @@ static const struct compiler default_compilers[] =\n       %{!E:%{!M:%{!MM:\\\n           %{traditional|ftraditional:\\\n %eGNU C no longer supports -traditional without -E}\\\n-\t  %{save-temps|traditional-cpp:%(trad_capable_cpp) \\\n-\t\t%(cpp_options) %b.i \\n\\\n-\t\t    cc1 -fpreprocessed %b.i %(cc1_options)}\\\n-\t  %{!save-temps:%{!traditional-cpp:\\\n-\t\tcc1 %(cpp_unique_options) %(cc1_options)}}\\\n+\t  %{save-temps|traditional-cpp|no-integrated-cpp:%(trad_capable_cpp) \\\n+\t\t%(cpp_options) %{save-temps:%b.i} %{!save-temps:%g.i} \\n\\\n+\t\t    cc1 -fpreprocessed %{save-temps:%b.i} %{!save-temps:%g.i} %(cc1_options)}\\\n+\t  %{!save-temps:%{!traditional-cpp:%{!no-integrated-cpp:\\\n+\t\tcc1 %(cpp_unique_options) %(cc1_options)}}}\\\n         %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n   {\"-\",\n    \"%{!E:%e-E required when input is from standard input}\\\n@@ -1038,6 +1038,7 @@ static const struct option_map option_map[] =\n    {\"--library-directory\", \"-L\", \"a\"},\n    {\"--machine\", \"-m\", \"aj\"},\n    {\"--machine-\", \"-m\", \"*j\"},\n+   {\"--no-integrated-cpp\", \"-no-integrated-cpp\", 0},\n    {\"--no-line-commands\", \"-P\", 0},\n    {\"--no-precompiled-includes\", \"-noprecomp\", 0},\n    {\"--no-standard-includes\", \"-nostdinc\", 0},"}, {"sha": "f8e6761d06f39b68e396429aeaa771926beaafc7", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a035a6bf6c79874f0d3f57152562979d0e222f6/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=8a035a6bf6c79874f0d3f57152562979d0e222f6", "patch": "@@ -31,10 +31,10 @@ Boston, MA 02111-1307, USA.  */\n       %{!E:%{!M:%{!MM:\\\n \t%{traditional|ftraditional|traditional-cpp:\\\n %eGNU Objective C no longer supports traditional compilation}\\\n-\t%{save-temps:cc1obj -E %(cpp_options) %b.mi \\n\\\n-\t    cc1obj -fpreprocessed %b.mi %(cc1_options) %{gen-decls}}\\\n-\t%{!save-temps:\\\n-\t    cc1obj %(cpp_unique_options) %(cc1_options) %{gen-decls}}\\\n+\t%{save-temps|no-integrated-cpp:cc1obj -E %(cpp_options) %{save-temps:%b.mi} %{!save-temps:%g.mi} \\n\\\n+\t    cc1obj -fpreprocessed %{save-temps:%b.mi} %{!save-temps:%g.mi} %(cc1_options) %{gen-decls}}\\\n+\t%{!save-temps:%{!no-integrated-cpp:\\\n+\t    cc1obj %(cpp_unique_options) %(cc1_options) %{gen-decls}}}\\\n         %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n   {\".mi\", \"@objc-cpp-output\", 0},\n   {\"@objc-cpp-output\","}]}