{"sha": "22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1MTg0MjhhZjdhYWRmMWVjMWY1YmE5NTdlN2FjNGM4ZTlhNmFjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-08T10:13:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-08T10:13:23Z"}, "message": "re PR tree-optimization/69172 (ICE in make_ssa_name_fn, at tree-ssanames.c:266)\n\n\tPR tree-optimization/69172\n\t* gimple-fold.c (gimple_fold_builtin_memory_chk): Pass type to\n\tgimple_build.\n\n\t* gcc.dg/pr69172.c: New test.\n\nFrom-SVN: r232155", "tree": {"sha": "28cc9453c1cb60d797d702d0a26b6a907aec8c00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28cc9453c1cb60d797d702d0a26b6a907aec8c00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80e9b3aaac461dac31b8a3990ac6e820d5bce54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e9b3aaac461dac31b8a3990ac6e820d5bce54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e9b3aaac461dac31b8a3990ac6e820d5bce54d"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "ee2f4a9509d688d2d8c65812fb942051cb396451", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "patch": "@@ -1,3 +1,9 @@\n+2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69172\n+\t* gimple-fold.c (gimple_fold_builtin_memory_chk): Pass type to\n+\tgimple_build.\n+\n 2016-01-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/67781"}, {"sha": "2f379be4b28f0b785c56e7858d401b70090cbecb", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "patch": "@@ -1710,7 +1710,8 @@ gimple_fold_builtin_memory_chk (gimple_stmt_iterator *gsi,\n \t{\n \t  gimple_seq stmts = NULL;\n \t  len = gimple_convert_to_ptrofftype (&stmts, loc, len);\n-\t  tree temp = gimple_build (&stmts, loc, POINTER_PLUS_EXPR, dest, len);\n+\t  tree temp = gimple_build (&stmts, loc, POINTER_PLUS_EXPR,\n+\t\t\t\t    TREE_TYPE (dest), dest, len);\n \t  gsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n \t  replace_call_with_value (gsi, temp);\n \t  return true;"}, {"sha": "672a4961b09654a2d4ee1910f6e4eacf73c92e8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "patch": "@@ -1,3 +1,8 @@\n+2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69172\n+\t* gcc.dg/pr69172.c: New test.\n+\n 2016-01-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/67781"}, {"sha": "c0e74633834ca2fc8b51342e7396142d196be4d0", "filename": "gcc/testsuite/gcc.dg/pr69172.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69172.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69172.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69172.c?ref=22518428af7aadf1ec1f5ba957e7ac4c8e9a6acb", "patch": "@@ -0,0 +1,45 @@\n+/* PR tree-optimization/69172 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int a;\n+\n+void *\n+f1 (void)\n+{\n+  int *b = &a, *c = &a;\n+  return __builtin___mempcpy_chk (b, c, sizeof (int), 0);\n+}\n+\n+void *\n+f2 (void)\n+{\n+  int *b = &a;\n+  return __builtin___mempcpy_chk (b, b, sizeof (int), 0);\n+}\n+\n+void *\n+f3 (void)\n+{\n+  return __builtin___mempcpy_chk (&a, &a, sizeof (int), 0);\n+}\n+\n+void *\n+f4 (int x)\n+{\n+  int *b = &a, *c = &a;\n+  return __builtin___mempcpy_chk (b, c, x, 0);\n+}\n+\n+void *\n+f5 (int x)\n+{\n+  int *b = &a;\n+  return __builtin___mempcpy_chk (b, b, x, 0);\n+}\n+\n+void *\n+f6 (int x)\n+{\n+  return __builtin___mempcpy_chk (&a, &a, x, 0);\n+}"}]}