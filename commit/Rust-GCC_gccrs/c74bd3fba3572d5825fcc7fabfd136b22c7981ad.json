{"sha": "c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0YmQzZmJhMzU3MmQ1ODI1ZmNjN2ZhYmZkMTM2YjIyYzc5ODFhZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-05-18T12:46:32Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-05-18T12:46:32Z"}, "message": "Print working directory to gcov files (PR gcov-profile/84846).\n\n2018-05-18  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/84846\n\t* coverage.c (coverage_init): Write PWD to .gcno file.\n\t* doc/gcov.texi: Document how working directory is printed.\n\t* gcov-dump.c (dump_gcov_file): Print PWD.\n\t* gcov.c (output_intermediate_file): Likewise.\n\t(read_graph_file): Read PWD string.\n\t(output_lines): Print PWD.\n\nFrom-SVN: r260359", "tree": {"sha": "eacb67111d71264764a92e34f26db84357547c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eacb67111d71264764a92e34f26db84357547c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bec3ee81e3c60bc4e8001871ede2b0b07ff417f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec3ee81e3c60bc4e8001871ede2b0b07ff417f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec3ee81e3c60bc4e8001871ede2b0b07ff417f1"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "dc0932fb8276c4a5bb6a8c44b395edfb431fa45f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "patch": "@@ -1,3 +1,13 @@\n+2018-05-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/84846\n+\t* coverage.c (coverage_init): Write PWD to .gcno file.\n+\t* doc/gcov.texi: Document how working directory is printed.\n+\t* gcov-dump.c (dump_gcov_file): Print PWD.\n+\t* gcov.c (output_intermediate_file): Likewise.\n+\t(read_graph_file): Read PWD string.\n+\t(output_lines): Print PWD.\n+\n 2018-05-18  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR middle-end/85817"}, {"sha": "9e0185acd0909ef5d87cb8988c0b3142d0578c13", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "patch": "@@ -1269,6 +1269,7 @@ coverage_init (const char *filename)\n \t  gcov_write_unsigned (GCOV_NOTE_MAGIC);\n \t  gcov_write_unsigned (GCOV_VERSION);\n \t  gcov_write_unsigned (bbg_file_stamp);\n+\t  gcov_write_string (getpwd ());\n \n \t  /* Do not support has_unexecuted_blocks for Ada.  */\n \t  gcov_write_unsigned (strcmp (lang_hooks.name, \"GNU Ada\") != 0);"}, {"sha": "54625ce67cb430f7728493a049bc15c4ec8f2944", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "patch": "@@ -189,6 +189,7 @@ one entry per line\n \n @smallexample\n version:@var{gcc_version}\n+cwd:@var{working_directory}\n file:@var{source_file_name}\n function:@var{start_line_number},@var{end_line_number},@var{execution_count},@var{function_name}\n lcount:@var{line number},@var{execution_count},@var{has_unexecuted_block}\n@@ -210,6 +211,7 @@ Here is a sample when @option{-i} is used in conjunction with @option{-b} option\n \n @smallexample\n version: 8.1.0 20180103\n+cwd:/home/gcc/testcase\n file:tmp.cpp\n function:7,7,0,_ZN3FooIcEC2Ev\n function:7,7,1,_ZN3FooIiEC2Ev\n@@ -441,6 +443,7 @@ Here is a sample:\n \n @smallexample\n         -:    0:Source:tmp.cpp\n+        -:    0:Working directory:/home/gcc/testcase\n         -:    0:Graph:tmp.gcno\n         -:    0:Data:tmp.gcda\n         -:    0:Runs:1\n@@ -508,6 +511,7 @@ counts, and the output looks like this:\n \n @smallexample\n         -:    0:Source:tmp.cpp\n+        -:    0:Working directory:/home/gcc/testcase\n         -:    0:Graph:tmp.gcno\n         -:    0:Data:tmp.gcda\n         -:    0:Runs:1\n@@ -596,6 +600,7 @@ When you use the @option{-b} option, your output looks like this:\n \n @smallexample\n         -:    0:Source:tmp.cpp\n+        -:    0:Working directory:/home/gcc/testcase\n         -:    0:Graph:tmp.gcno\n         -:    0:Data:tmp.gcda\n         -:    0:Runs:1"}, {"sha": "0ae7e944483b8c541f297135d396458353e19762", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "patch": "@@ -220,6 +220,8 @@ dump_gcov_file (const char *filename)\n \n   if (!is_data_type)\n     {\n+      printf (\"%s:cwd: %s\\n\", filename, gcov_read_string ());\n+\n       /* Support for unexecuted basic blocks.  */\n       unsigned support_unexecuted_blocks = gcov_read_unsigned ();\n       if (!support_unexecuted_blocks)"}, {"sha": "8ed6e0d4d3fda0bae4bc27c88fa1739a42d3e71c", "filename": "gcc/gcov.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74bd3fba3572d5825fcc7fabfd136b22c7981ad/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=c74bd3fba3572d5825fcc7fabfd136b22c7981ad", "patch": "@@ -432,6 +432,9 @@ static unsigned bbg_stamp;\n /* Supports has_unexecuted_blocks functionality.  */\n static unsigned bbg_supports_has_unexecuted_blocks;\n \n+/* Working directory in which a TU was compiled.  */\n+static const char *bbg_cwd;\n+\n /* Name and file pointer of the input file for the count data (gcda).  */\n \n static char *da_file_name;\n@@ -1037,6 +1040,7 @@ output_intermediate_file (FILE *gcov_file, source_info *src)\n {\n   fprintf (gcov_file, \"version:%s\\n\", version_string);\n   fprintf (gcov_file, \"file:%s\\n\", src->name);    /* source file name */\n+  fprintf (gcov_file, \"cwd:%s\\n\", bbg_cwd);\n \n   std::sort (src->functions.begin (), src->functions.end (),\n \t     function_line_start_cmp ());\n@@ -1550,6 +1554,7 @@ read_graph_file (void)\n \t       bbg_file_name, v, e);\n     }\n   bbg_stamp = gcov_read_unsigned ();\n+  bbg_cwd = xstrdup (gcov_read_string ());\n   bbg_supports_has_unexecuted_blocks = gcov_read_unsigned ();\n \n   function_info *fn = NULL;\n@@ -2918,6 +2923,8 @@ output_lines (FILE *gcov_file, const source_info *src)\n   const char *retval;\n \n   fprintf (gcov_file, DEFAULT_LINE_START \"Source:%s\\n\", src->coverage.name);\n+  fprintf (gcov_file, DEFAULT_LINE_START \"Working directory:%s\\n\",\n+\t   bbg_cwd);\n   if (!multiple_files)\n     {\n       fprintf (gcov_file, DEFAULT_LINE_START \"Graph:%s\\n\", bbg_file_name);"}]}