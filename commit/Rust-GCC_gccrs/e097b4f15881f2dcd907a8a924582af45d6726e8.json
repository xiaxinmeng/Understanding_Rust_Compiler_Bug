{"sha": "e097b4f15881f2dcd907a8a924582af45d6726e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5N2I0ZjE1ODgxZjJkY2Q5MDdhOGE5MjQ1ODJhZjQ1ZDY3MjZlOA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@watson.ibm.com", "date": "2005-09-26T19:08:27Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-26T19:08:27Z"}, "message": "configure.ac: Add check for __clog.\n\n\t* configure.ac: Add check for __clog.\n\t* configure: Regenerate.\n\nFrom-SVN: r104654", "tree": {"sha": "fd76ae6cc8fee660f0767e1320811ac701494421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd76ae6cc8fee660f0767e1320811ac701494421"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e097b4f15881f2dcd907a8a924582af45d6726e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e097b4f15881f2dcd907a8a924582af45d6726e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e097b4f15881f2dcd907a8a924582af45d6726e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e097b4f15881f2dcd907a8a924582af45d6726e8/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c59dabbe46f7fb351cf1eeadadc3c7fc655a57f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59dabbe46f7fb351cf1eeadadc3c7fc655a57f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59dabbe46f7fb351cf1eeadadc3c7fc655a57f6"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "70ef38dffd7d572676c838728249f0c43e7ca8ff", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e097b4f15881f2dcd907a8a924582af45d6726e8", "patch": "@@ -1,3 +1,8 @@\n+2005-09-26  David Edelsohn  <dje@watson.ibm.com>\n+\n+\t* configure.ac: Add check for __clog.\n+\t* configure: Regenerate.\n+\n 2005-09-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* c99_protos.h: Add prototypes for C99 complex functions."}, {"sha": "6ace2fb76b15640f5d408c0414b19565e0c49844", "filename": "libgfortran/configure", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=e097b4f15881f2dcd907a8a924582af45d6726e8", "patch": "@@ -19028,6 +19028,85 @@ _ACEOF\n fi\n \n \n+# Hack for AIX\n+echo \"$as_me:$LINENO: checking for __clog in -lm\" >&5\n+echo $ECHO_N \"checking for __clog in -lm... $ECHO_C\" >&6\n+if test \"${ac_cv_lib_m___clog+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char __clog ();\n+int\n+main ()\n+{\n+__clog ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_lib_m___clog=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_lib_m___clog=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_lib_m___clog\" >&5\n+echo \"${ECHO_T}$ac_cv_lib_m___clog\" >&6\n+if test $ac_cv_lib_m___clog = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_CLOG 1\n+_ACEOF\n+\n+fi\n+\n+\n # Fallback in case isfinite is not available.\n echo \"$as_me:$LINENO: checking for finite in -lm\" >&5\n echo $ECHO_N \"checking for finite in -lm... $ECHO_C\" >&6"}, {"sha": "ebd17b193b1882a3ceae72ce0ffcc74b12f2816c", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e097b4f15881f2dcd907a8a924582af45d6726e8/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=e097b4f15881f2dcd907a8a924582af45d6726e8", "patch": "@@ -325,6 +325,9 @@ AC_CHECK_LIB([m],[ynf],[AC_DEFINE([HAVE_YNF],[1],[libm includes ynf])])\n AC_CHECK_LIB([m],[yn],[AC_DEFINE([HAVE_YN],[1],[libm includes yn])])\n AC_CHECK_LIB([m],[ynl],[AC_DEFINE([HAVE_YNL],[1],[libm includes ynl])])\n \n+# On AIX, clog is present in libm as __clog\n+AC_CHECK_LIB([m],[__clog],[AC_DEFINE([HAVE_CLOG],[1],[libm includes clog])])\n+\n # Fallback in case isfinite is not available.\n AC_CHECK_LIB([m],[finite],[AC_DEFINE([HAVE_FINITE],[1],[libm includes finite])])\n "}]}