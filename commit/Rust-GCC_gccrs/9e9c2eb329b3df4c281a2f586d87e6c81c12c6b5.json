{"sha": "9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5YzJlYjMyOWIzZGY0YzI4MWEyZjU4NmQ4N2U2YzgxYzEyYzZiNQ==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-07-06T07:41:21Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:18Z"}, "message": "Added Nios II target hook (or provisional one at least)", "tree": {"sha": "b5dc56683102e67303807fb7b4deba75919e7995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5dc56683102e67303807fb7b4deba75919e7995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f0507ad9ebff18c7c2baacb981434018dad2600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0507ad9ebff18c7c2baacb981434018dad2600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0507ad9ebff18c7c2baacb981434018dad2600"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "fa277d0d5c2ee1fdf90bc4f90fefaa30bb5bb85b", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "patch": "@@ -521,6 +521,7 @@ nds32*)\n \t;;\n nios2-*-*)\n \tcpu_type=nios2\n+\trust_target_objs=\"nios2-rust.o\"\n \textra_options=\"${extra_options} g.opt\"\n \t;;\n nvptx-*-*)"}, {"sha": "a42868ae71f5f273712f3018f58e0777a1ad90af", "filename": "gcc/config/nios2/nios2-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h?ref=9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "patch": "@@ -29,6 +29,9 @@ extern void nios2_expand_epilogue (bool);\n extern bool nios2_expand_return (void);\n extern void nios2_function_profiler (FILE *, int);\n \n+/* Routines implemented in nios2-rust.c  */\n+extern void nios2_rust_target_cpu_info (void);\n+\n #ifdef RTX_CODE\n extern bool nios2_large_constant_p (rtx);\n extern bool nios2_large_constant_memory_operand_p (rtx);"}, {"sha": "3a013daa32c8e7225f391adb8b5363fee697a9cf", "filename": "gcc/config/nios2/nios2-rust.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2-rust.c?ref=9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "patch": "@@ -0,0 +1,88 @@\n+/* Subroutines for the Rust front end for the Altera Nios II architecture.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_CPU_INFO for Altera Nios II targets.  */\n+\n+void nios2_rust_target_cpu_info(void) {\n+    rust_add_target_info(\"target_arch\", \"nios2\");\n+\n+    // made up names as no apparent support (current or historical) in llvm\n+    if (TARGET_HAS_DIV)\n+        rust_add_target_info(\"target_feature\", \"hw-div\");\n+    if (TARGET_HAS_MUL)\n+        rust_add_target_info(\"target_feature\", \"hw-mul\");\n+    if (TARGET_HAS_MULX)\n+        rust_add_target_info(\"target_feature\", \"hw-mulx\");\n+    if (TARGET_FAST_SW_DIV)\n+        rust_add_target_info(\"target_feature\", \"fast-sw-div\");\n+    if (TARGET_BYPASS_CACHE)\n+        rust_add_target_info(\"target_feature\", \"bypass-cache\");\n+    if (TARGET_BYPASS_CACHE_VOLATILE)\n+        rust_add_target_info(\"target_feature\", \"no-cache-volatile\");\n+    // TODO: ensure below switch variable and whatever works\n+    // TODO: improve how this works? the defining kinda sucks a bit\n+    switch (nios2_gpopt_option) {\n+        case gpopt_none:\n+            rust_add_target_info(\"target_feature\", \"gpopt-none\");\n+            break;\n+        case gpopt_local:\n+            rust_add_target_info(\"target_feature\", \"gpopt-local\");\n+            break;\n+        case gpopt_global:\n+            rust_add_target_info(\"target_feature\", \"gpopt-global\");\n+            break;\n+        case gpopt_data:\n+            rust_add_target_info(\"target_feature\", \"gpopt-data\");\n+            break;\n+        case gpopt_all:\n+            rust_add_target_info(\"target_feature\", \"gpopt-all\");\n+            break;\n+        default: // unknown gpopt status - should this be an error?\n+            break;\n+    }\n+    if (TARGET_BIG_ENDIAN)\n+        rust_add_target_info(\"target_feature\", \"eb\");\n+    else\n+        rust_add_target_info(\"target_feature\", \"el\");\n+    /* TODO: figure out how to have custom-fpu-cfg, custom-ftruncds (including no-custom-ftruncds),\n+     * etc. (all custom instructions and their no- equivalents) in define form  */\n+    // TODO: ensure below switch and variable works\n+    switch (nios2_arch_option) {\n+        case ARCH_R1:\n+            rust_add_target_info(\"target_feature\", \"r1\");\n+            break;\n+        case ARCH_R2:\n+            rust_add_target_info(\"target_feature\", \"r2\");\n+            break;\n+        default: // should this be an error?\n+            break;\n+    }\n+    if (TARGET_HAS_BMX)\n+        rust_add_target_info(\"target_feature\", \"bmx\");\n+    if (TARGET_HAS_CDX)\n+        rust_add_target_info(\"target_feature\", \"cdx\");\n+    // TODO: figure out how to have gprel-sec and r0rel-sec as defines\n+    // TODO: maybe extra defines for features available on bare metal target? (hal, smallc, etc.)\n+}"}, {"sha": "0a91ff9344cd8ffc9429c3f422ef04f77a80048a", "filename": "gcc/config/nios2/nios2.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Fnios2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.h?ref=9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "patch": "@@ -44,6 +44,9 @@\n     }\t\t\t\t\t\t    \\\n   while (0)\n \n+/* Target CPU info for Rust.  */\n+#define TARGET_RUST_CPU_INFO nios2_rust_target_cpu_info\n+\n /* We're little endian, unless otherwise specified by defining\n    BIG_ENDIAN_FLAG.  */\n #ifndef TARGET_ENDIAN_DEFAULT"}, {"sha": "f6a7b235760ae65b55ed023365edf528fb568b30", "filename": "gcc/config/nios2/t-nios2", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Ft-nios2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5/gcc%2Fconfig%2Fnios2%2Ft-nios2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Ft-nios2?ref=9e9c2eb329b3df4c281a2f586d87e6c81c12c6b5", "patch": "@@ -25,3 +25,7 @@\n # MULTILIB_OPTIONS += EL/EB\n # MULTILIB_DIRNAMES += le be\n # MULTILIB_MATCHES += EL=mel EB=meb\n+\n+nios2-rust.o: $(srcdir)/config/nios2/nios2-rust.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n\\ No newline at end of file"}]}