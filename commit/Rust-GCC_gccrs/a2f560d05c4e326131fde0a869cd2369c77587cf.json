{"sha": "a2f560d05c4e326131fde0a869cd2369c77587cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJmNTYwZDA1YzRlMzI2MTMxZmRlMGE4NjljZDIzNjljNzc1ODdjZg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-11-02T22:14:20Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-11-02T22:14:20Z"}, "message": "Forgot files from r153825\n\nFrom-SVN: r153827", "tree": {"sha": "539a7589952089a00aa66963c7ef3bdd913dc0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539a7589952089a00aa66963c7ef3bdd913dc0d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2f560d05c4e326131fde0a869cd2369c77587cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f560d05c4e326131fde0a869cd2369c77587cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f560d05c4e326131fde0a869cd2369c77587cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f560d05c4e326131fde0a869cd2369c77587cf/comments", "author": null, "committer": null, "parents": [{"sha": "92cbdb684563b23b5832c84bb331fe6386955cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92cbdb684563b23b5832c84bb331fe6386955cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92cbdb684563b23b5832c84bb331fe6386955cee"}], "stats": {"total": 368, "additions": 368, "deletions": 0}, "files": [{"sha": "368cec28b2cc727ef963d3995689453bb6772641", "filename": "libgfortran/io/fbuf.h", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Ffbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Ffbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.h?ref=a2f560d05c4e326131fde0a869cd2369c77587cf", "patch": "@@ -0,0 +1,81 @@\n+/* Copyright (C) 2009\n+   Free Software Foundation, Inc.\n+   Contributed by Janne Blomqvist\n+\n+This file is part of the GNU Fortran runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"io.h\"\n+\n+#ifndef GFOR_FBUF_H\n+#define GFOR_FBUF_H\n+\n+\n+/* Formatting buffer. This is a temporary scratch buffer used by\n+   formatted read and writes.  After every formatted I/O statement,\n+   this buffer is flushed. This buffer is needed since not all devices\n+   are seekable, and T or TL edit descriptors require moving backwards\n+   in the record.  However, advance='no' complicates the situation, so\n+   the buffer must only be partially flushed from the end of the last\n+   flush until the current position in the record. */\n+\n+struct fbuf\n+{\n+  char *buf;\t\t\t/* Start of buffer.  */\n+  int len;\t\t\t/* Length of buffer.  */\n+  int act;\t\t\t/* Active bytes in buffer.  */\n+  int pos;\t\t\t/* Current position in buffer.  */\n+};\n+\n+extern void fbuf_init (gfc_unit *, int);\n+internal_proto(fbuf_init);\n+\n+extern void fbuf_destroy (gfc_unit *);\n+internal_proto(fbuf_destroy);\n+\n+extern int fbuf_reset (gfc_unit *);\n+internal_proto(fbuf_reset);\n+\n+extern char * fbuf_alloc (gfc_unit *, int);\n+internal_proto(fbuf_alloc);\n+\n+extern int fbuf_flush (gfc_unit *, unit_mode);\n+internal_proto(fbuf_flush);\n+\n+extern int fbuf_seek (gfc_unit *, int, int);\n+internal_proto(fbuf_seek);\n+\n+extern char * fbuf_read (gfc_unit *, int *);\n+internal_proto(fbuf_read);\n+\n+/* Never call this function, only use fbuf_getc().  */\n+extern int fbuf_getc_refill (gfc_unit *);\n+internal_proto(fbuf_getc_refill);\n+\n+static inline int\n+fbuf_getc (gfc_unit * u)\n+{\n+  if (u->fbuf->pos < u->fbuf->act)\n+    return (unsigned char) u->fbuf->buf[u->fbuf->pos++];\n+  return fbuf_getc_refill (u);\n+}\n+\n+#endif"}, {"sha": "c338daa19504730a4f907d944741367a18c2a399", "filename": "libgfortran/io/format.h", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Fformat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Fformat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.h?ref=a2f560d05c4e326131fde0a869cd2369c77587cf", "patch": "@@ -0,0 +1,118 @@\n+/* Copyright (C) 2009\n+   Free Software Foundation, Inc.\n+   Contributed by Janne Blomqvist\n+\n+This file is part of the GNU Fortran runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"io.h\"\n+\n+#ifndef GFOR_FORMAT_H\n+#define GFOR_FORMAT_H\n+\n+/* Format tokens.  Only about half of these can be stored in the\n+   format nodes.  */\n+\n+typedef enum\n+{\n+  FMT_NONE = 0, FMT_UNKNOWN, FMT_SIGNED_INT, FMT_ZERO, FMT_POSINT, FMT_PERIOD,\n+  FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_T, FMT_TR, FMT_TL,\n+  FMT_LPAREN, FMT_RPAREN, FMT_X, FMT_S, FMT_SS, FMT_SP, FMT_STRING,\n+  FMT_BADSTRING, FMT_P, FMT_I, FMT_B, FMT_BN, FMT_BZ, FMT_O, FMT_Z, FMT_F,\n+  FMT_E, FMT_EN, FMT_ES, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END, FMT_DC,\n+  FMT_DP, FMT_STAR, FMT_RC, FMT_RD, FMT_RN, FMT_RP, FMT_RU, FMT_RZ\n+}\n+format_token;\n+\n+\n+/* Format nodes.  A format string is converted into a tree of these\n+   structures, which is traversed as part of a data transfer statement.  */\n+\n+struct fnode\n+{\n+  format_token format;\n+  int repeat;\n+  struct fnode *next;\n+  char *source;\n+\n+  union\n+  {\n+    struct\n+    {\n+      int w, d, e;\n+    }\n+    real;\n+\n+    struct\n+    {\n+      int length;\n+      char *p;\n+    }\n+    string;\n+\n+    struct\n+    {\n+      int w, m;\n+    }\n+    integer;\n+\n+    int w;\n+    int k;\n+    int r;\n+    int n;\n+\n+    struct fnode *child;\n+  }\n+  u;\n+\n+  /* Members for traversing the tree during data transfer.  */\n+\n+  int count;\n+  struct fnode *current;\n+\n+};\n+\n+\n+extern void parse_format (st_parameter_dt *);\n+internal_proto(parse_format);\n+\n+extern const fnode *next_format (st_parameter_dt *);\n+internal_proto(next_format);\n+\n+extern void unget_format (st_parameter_dt *, const fnode *);\n+internal_proto(unget_format);\n+\n+extern void format_error (st_parameter_dt *, const fnode *, const char *);\n+internal_proto(format_error);\n+\n+extern void free_format_data (struct format_data *);\n+internal_proto(free_format_data);\n+\n+extern void free_format_hash_table (gfc_unit *);\n+internal_proto(free_format_hash_table);\n+\n+extern void init_format_hash (st_parameter_dt *);\n+internal_proto(init_format_hash);\n+\n+extern void free_format_hash (st_parameter_dt *);\n+internal_proto(free_format_hash);\n+\n+#endif"}, {"sha": "721c63c02e4f29e1bc609ba85d56c471ea88ab8d", "filename": "libgfortran/io/unix.h", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f560d05c4e326131fde0a869cd2369c77587cf/libgfortran%2Fio%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.h?ref=a2f560d05c4e326131fde0a869cd2369c77587cf", "patch": "@@ -0,0 +1,169 @@\n+/* Copyright (C) 2009\n+   Free Software Foundation, Inc.\n+   Contributed by Janne Blomqvist\n+\n+This file is part of the GNU Fortran runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"io.h\"\n+\n+#ifndef GFOR_UNIX_H\n+#define GFOR_UNIX_H\n+\n+struct stream\n+{\n+  ssize_t (*read) (struct stream *, void *, ssize_t);\n+  ssize_t (*write) (struct stream *, const void *, ssize_t);\n+  off_t (*seek) (struct stream *, off_t, int);\n+  off_t (*tell) (struct stream *);\n+  /* Avoid keyword truncate due to AIX namespace collision.  */\n+  int (*trunc) (struct stream *, off_t);\n+  int (*flush) (struct stream *);\n+  int (*close) (struct stream *);\n+};\n+\n+/* Inline functions for doing file I/O given a stream.  */\n+static inline ssize_t\n+sread (stream * s, void * buf, ssize_t nbyte)\n+{\n+  return s->read (s, buf, nbyte);\n+}\n+\n+static inline ssize_t\n+swrite (stream * s, const void * buf, ssize_t nbyte)\n+{\n+  return s->write (s, buf, nbyte);\n+}\n+\n+static inline off_t\n+sseek (stream * s, off_t offset, int whence)\n+{\n+  return s->seek (s, offset, whence);\n+}\n+\n+static inline off_t\n+stell (stream * s)\n+{\n+  return s->tell (s);\n+}\n+\n+static inline int\n+struncate (stream * s, off_t length)\n+{\n+  return s->trunc (s, length);\n+}\n+\n+static inline int\n+sflush (stream * s)\n+{\n+  return s->flush (s);\n+}\n+\n+static inline int\n+sclose (stream * s)\n+{\n+  return s->close (s);\n+}\n+\n+\n+extern int compare_files (stream *, stream *);\n+internal_proto(compare_files);\n+\n+extern stream *open_external (st_parameter_open *, unit_flags *);\n+internal_proto(open_external);\n+\n+extern stream *open_internal (char *, int, gfc_offset);\n+internal_proto(open_internal);\n+\n+extern char * mem_alloc_w (stream *, int *);\n+internal_proto(mem_alloc_w);\n+\n+extern char * mem_alloc_r (stream *, int *);\n+internal_proto(mem_alloc_w);\n+\n+extern stream *input_stream (void);\n+internal_proto(input_stream);\n+\n+extern stream *output_stream (void);\n+internal_proto(output_stream);\n+\n+extern stream *error_stream (void);\n+internal_proto(error_stream);\n+\n+extern int compare_file_filename (gfc_unit *, const char *, int);\n+internal_proto(compare_file_filename);\n+\n+extern gfc_unit *find_file (const char *file, gfc_charlen_type file_len);\n+internal_proto(find_file);\n+\n+extern int delete_file (gfc_unit *);\n+internal_proto(delete_file);\n+\n+extern int file_exists (const char *file, gfc_charlen_type file_len);\n+internal_proto(file_exists);\n+\n+extern const char *inquire_sequential (const char *, int);\n+internal_proto(inquire_sequential);\n+\n+extern const char *inquire_direct (const char *, int);\n+internal_proto(inquire_direct);\n+\n+extern const char *inquire_formatted (const char *, int);\n+internal_proto(inquire_formatted);\n+\n+extern const char *inquire_unformatted (const char *, int);\n+internal_proto(inquire_unformatted);\n+\n+extern const char *inquire_read (const char *, int);\n+internal_proto(inquire_read);\n+\n+extern const char *inquire_write (const char *, int);\n+internal_proto(inquire_write);\n+\n+extern const char *inquire_readwrite (const char *, int);\n+internal_proto(inquire_readwrite);\n+\n+extern gfc_offset file_length (stream *);\n+internal_proto(file_length);\n+\n+extern int is_seekable (stream *);\n+internal_proto(is_seekable);\n+\n+extern int is_special (stream *);\n+internal_proto(is_special);\n+\n+extern void flush_if_preconnected (stream *);\n+internal_proto(flush_if_preconnected);\n+\n+extern void empty_internal_buffer(stream *);\n+internal_proto(empty_internal_buffer);\n+\n+extern int stream_isatty (stream *);\n+internal_proto(stream_isatty);\n+\n+extern char * stream_ttyname (stream *);\n+internal_proto(stream_ttyname);\n+\n+extern int unpack_filename (char *, const char *, int);\n+internal_proto(unpack_filename);\n+\n+\n+#endif"}]}