{"sha": "5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkYzFlNWQ4YWUyOGFkYmIzOWU5ZTNlZjBhMDUzODVhMzU1ZGUxMg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2013-06-19T12:06:30Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-06-19T12:06:30Z"}, "message": "re PR bootstrap/57609 (S/390 ESA mode bootstrap failure since r197266)\n\n2013-06-19  Steven Bosscher  <steven@gcc.gnu.org>\n\n\tPR target/57609\n\t* config/s390/s390.c (s390_chunkify_start): Replace next_real_insn\n\twith NEXT_INSN.  Use tablejump_p to check for jump table data\n\tinsns.\n\nFrom-SVN: r200196", "tree": {"sha": "52e8c02ed9240daac54892c4205d83adebbfef89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52e8c02ed9240daac54892c4205d83adebbfef89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12/comments", "author": null, "committer": null, "parents": [{"sha": "e952afba8fccca783802218ecaa3518f8dfc8aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e952afba8fccca783802218ecaa3518f8dfc8aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e952afba8fccca783802218ecaa3518f8dfc8aaa"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "08f40a3b24d216e3d7713ac1c8f513a954143658", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "patch": "@@ -1,3 +1,10 @@\n+2013-06-19  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR target/57609\n+\t* config/s390/s390.c (s390_chunkify_start): Replace next_real_insn\n+\twith NEXT_INSN.  Use tablejump_p to check for jump table data\n+\tinsns.\n+\n 2013-06-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56544"}, {"sha": "06d1228ff06d5bac0f6eb7706bb486c15a5e46df", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 15, "deletions": 23, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=5fdc1e5d8ae28adbb39e9e3ef0a05385a355de12", "patch": "@@ -7023,7 +7023,7 @@ s390_chunkify_start (void)\n       if (LABEL_P (insn)\n \t  && (LABEL_PRESERVE_P (insn) || LABEL_NAME (insn)))\n \t{\n-\t  rtx vec_insn = next_real_insn (insn);\n+\t  rtx vec_insn = NEXT_INSN (insn);\n \t  if (! vec_insn || ! JUMP_TABLE_DATA_P (vec_insn))\n \t    bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (insn));\n \t}\n@@ -7033,6 +7033,8 @@ s390_chunkify_start (void)\n       else if (JUMP_P (insn))\n \t{\n           rtx pat = PATTERN (insn);\n+          rtx table;\n+\n \t  if (GET_CODE (pat) == PARALLEL && XVECLEN (pat, 0) > 2)\n \t    pat = XVECEXP (pat, 0, 0);\n \n@@ -7046,28 +7048,18 @@ s390_chunkify_start (void)\n \t\t    bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n \t\t}\n             }\n-\t  else if (GET_CODE (pat) == PARALLEL\n-\t\t   && XVECLEN (pat, 0) == 2\n-\t\t   && GET_CODE (XVECEXP (pat, 0, 0)) == SET\n-\t\t   && GET_CODE (XVECEXP (pat, 0, 1)) == USE\n-\t\t   && GET_CODE (XEXP (XVECEXP (pat, 0, 1), 0)) == LABEL_REF)\n-\t    {\n-\t      /* Find the jump table used by this casesi jump.  */\n-\t      rtx vec_label = XEXP (XEXP (XVECEXP (pat, 0, 1), 0), 0);\n-\t      rtx vec_insn = next_real_insn (vec_label);\n-\t      if (vec_insn && JUMP_TABLE_DATA_P (vec_insn))\n-\t\t{\n-\t\t  rtx vec_pat = PATTERN (vec_insn);\n-\t\t  int i, diff_p = GET_CODE (vec_pat) == ADDR_DIFF_VEC;\n-\n-\t\t  for (i = 0; i < XVECLEN (vec_pat, diff_p); i++)\n-\t\t    {\n-\t\t      rtx label = XEXP (XVECEXP (vec_pat, diff_p, i), 0);\n-\n-\t\t      if (s390_find_pool (pool_list, label)\n-\t\t\t  != s390_find_pool (pool_list, insn))\n-\t\t\tbitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n-\t\t    }\n+         else if (tablejump_p (insn, NULL, &table))\n+           {\n+             rtx vec_pat = PATTERN (table);\n+             int i, diff_p = GET_CODE (vec_pat) == ADDR_DIFF_VEC;\n+\n+             for (i = 0; i < XVECLEN (vec_pat, diff_p); i++)\n+               {\n+                 rtx label = XEXP (XVECEXP (vec_pat, diff_p, i), 0);\n+\n+                 if (s390_find_pool (pool_list, label)\n+                     != s390_find_pool (pool_list, insn))\n+                   bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (label));\n \t\t}\n \t    }\n         }"}]}