{"sha": "ead51d365447a3441fa087e0f9120b8199d19da2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFkNTFkMzY1NDQ3YTM0NDFmYTA4N2UwZjkxMjBiODE5OWQxOWRhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-04T20:51:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-04T20:51:38Z"}, "message": "re PR c/35430 (ICE with complex arithmetic)\n\n\tPR c/35430\n\t* c-common.c (warn_for_sign_compare): For complex result_type\n\tuse component's type.\n\n\t* gcc.dg/pr35430.c: New test.\n\t* g++.dg/warn/Wsign-compare-2.C: New test.\n\nCo-Authored-By: Andrew Pinski <andrew_pinski@playstation.sony.com>\n\nFrom-SVN: r141587", "tree": {"sha": "595aa91c7fc54a4edf2a2e8e3b8c3e8535c53bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/595aa91c7fc54a4edf2a2e8e3b8c3e8535c53bff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ead51d365447a3441fa087e0f9120b8199d19da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead51d365447a3441fa087e0f9120b8199d19da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead51d365447a3441fa087e0f9120b8199d19da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead51d365447a3441fa087e0f9120b8199d19da2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2bd00524df2c65cb1b59ffb5ea70207a03a24ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2bd00524df2c65cb1b59ffb5ea70207a03a24ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2bd00524df2c65cb1b59ffb5ea70207a03a24ca"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "7e062db5b9630267c10d0561dcb5ee10d3d0f7fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ead51d365447a3441fa087e0f9120b8199d19da2", "patch": "@@ -1,3 +1,10 @@\n+2008-11-04  Jakub Jelinek  <jakub@redhat.com>\n+\t    Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR c/35430\n+\t* c-common.c (warn_for_sign_compare): For complex result_type\n+\tuse component's type.\n+\n 2008-11-04  Jakub Jelinek  <jakuB@redhat.com>\n \n \t* print-tree.c (print_node): Use code instead of TREE_CODE (node)."}, {"sha": "ea7379edc5c56c2ce2f47220284c660dd3f0cc59", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=ead51d365447a3441fa087e0f9120b8199d19da2", "patch": "@@ -8241,7 +8241,7 @@ warn_for_sign_compare (location_t location,\n       && TREE_CODE (TREE_TYPE (orig_op0)) == ENUMERAL_TYPE\n       && TREE_CODE (TREE_TYPE (orig_op1)) == ENUMERAL_TYPE\n       && TYPE_MAIN_VARIANT (TREE_TYPE (orig_op0))\n-      != TYPE_MAIN_VARIANT (TREE_TYPE (orig_op1)))\n+\t != TYPE_MAIN_VARIANT (TREE_TYPE (orig_op1)))\n     {\n       warning_at (location,\n \t\t  OPT_Wsign_compare, \"comparison between types %qT and %qT\",\n@@ -8258,16 +8258,18 @@ warn_for_sign_compare (location_t location,\n     /* OK */;\n   else\n     {\n-      tree sop, uop;\n+      tree sop, uop, base_type;\n       bool ovf;\n-      \n+\n       if (op0_signed)\n         sop = orig_op0, uop = orig_op1;\n       else \n         sop = orig_op1, uop = orig_op0;\n \n       STRIP_TYPE_NOPS (sop); \n       STRIP_TYPE_NOPS (uop);\n+      base_type = (TREE_CODE (result_type) == COMPLEX_TYPE\n+\t\t   ? TREE_TYPE (result_type) : result_type);\n \n       /* Do not warn if the signed quantity is an unsuffixed integer\n          literal (or some static constant expression involving such\n@@ -8280,15 +8282,15 @@ warn_for_sign_compare (location_t location,\n          in the result if the result were signed.  */\n       else if (TREE_CODE (uop) == INTEGER_CST\n                && (resultcode == EQ_EXPR || resultcode == NE_EXPR)\n-               && int_fits_type_p (uop, c_common_signed_type (result_type)))\n+\t       && int_fits_type_p (uop, c_common_signed_type (base_type)))\n         /* OK */;\n       /* In C, do not warn if the unsigned quantity is an enumeration\n          constant and its maximum value would fit in the result if the\n          result were signed.  */\n       else if (!c_dialect_cxx() && TREE_CODE (uop) == INTEGER_CST\n                && TREE_CODE (TREE_TYPE (uop)) == ENUMERAL_TYPE\n                && int_fits_type_p (TYPE_MAX_VALUE (TREE_TYPE (uop)),\n-                                   c_common_signed_type (result_type)))\n+\t\t\t\t   c_common_signed_type (base_type)))\n         /* OK */;\n       else \n         warning_at (location,"}, {"sha": "b2dfc5927d2ec60ec77b033984976af947fa854b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ead51d365447a3441fa087e0f9120b8199d19da2", "patch": "@@ -1,3 +1,10 @@\n+2008-11-04  Jakub Jelinek  <jakub@redhat.com>\n+\t    Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR c/35430\n+\t* gcc.dg/pr35430.c: New test.\n+\t* g++.dg/warn/Wsign-compare-2.C: New test.\n+\n 2008-11-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37106"}, {"sha": "2b8360648fa02552e438a6907532617adc83dc66", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-2.C?ref=ead51d365447a3441fa087e0f9120b8199d19da2", "patch": "@@ -0,0 +1,10 @@\n+// PR c/35430\n+// { dg-do compile }\n+// { dg-options \"-Wsign-compare\" }\n+\n+void\n+foo (__complex__ int i)\n+{\n+  i == 0u;\n+  i == ~1u;\t// { dg-warning \"comparison between signed and unsigned integer expressions\" }\n+}"}, {"sha": "ab5e4cac8a5467644754d22fdae8986c22a3149a", "filename": "gcc/testsuite/gcc.dg/pr35430.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ead51d365447a3441fa087e0f9120b8199d19da2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35430.c?ref=ead51d365447a3441fa087e0f9120b8199d19da2", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/35430 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wsign-compare\" } */\n+\n+void\n+foo (__complex__ int i)\n+{\n+  i == 0u;\n+  i == ~1u;\t/* { dg-warning \"comparison between signed and unsigned integer expressions\" } */\n+}"}]}