{"sha": "f576d4f94244642668b7c7039d62bc20103ba02b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU3NmQ0Zjk0MjQ0NjQyNjY4YjdjNzAzOWQ2MmJjMjAxMDNiYTAyYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-07-07T14:20:58Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-07-07T14:20:58Z"}, "message": "tree-ssa-operands.c (realloc_vop, [...]): Remove.\n\n\t* tree-ssa-operands.c (realloc_vop, realloc_vdef,\n\trealloc_vuse): Remove.\n\t* tree-ssa-operands.h: Remove the prototype for realloc_vdef\n\tand realloc_vuse.\n\nFrom-SVN: r126442", "tree": {"sha": "300825f8b7b7cc294a06cb371039c37d02636791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/300825f8b7b7cc294a06cb371039c37d02636791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f576d4f94244642668b7c7039d62bc20103ba02b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f576d4f94244642668b7c7039d62bc20103ba02b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f576d4f94244642668b7c7039d62bc20103ba02b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f576d4f94244642668b7c7039d62bc20103ba02b/comments", "author": null, "committer": null, "parents": [{"sha": "0a6b055f652b44bd3ad2e86fd8641564b4910d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6b055f652b44bd3ad2e86fd8641564b4910d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a6b055f652b44bd3ad2e86fd8641564b4910d9a"}], "stats": {"total": 101, "additions": 5, "deletions": 96}, "files": [{"sha": "2328ffa68293b43d71ac75d01d4b940c7ca40941", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f576d4f94244642668b7c7039d62bc20103ba02b", "patch": "@@ -11,6 +11,11 @@\n \t* cfgrtl.c (delete_insn_chain_and_edges): Remove.\n \t* rtl.h: Remove the prototype for delete_insn_chain_and_edges.\n \n+\t* tree-ssa-operands.c (realloc_vop, realloc_vdef,\n+\trealloc_vuse): Remove.\n+\t* tree-ssa-operands.h: Remove the prototype for realloc_vdef\n+\tand realloc_vuse.\n+\n 2007-07-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/23488"}, {"sha": "1e9dde7e327017243431e400962a957c47b24faa", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=f576d4f94244642668b7c7039d62bc20103ba02b", "patch": "@@ -669,99 +669,6 @@ add_vdef_op (tree stmt, tree op, int num, voptype_p last)\n }\n   \n \n-/* Reallocate the virtual operand PTR so that it has NUM_ELEM use slots.  ROOT\n-   is the head of the operand list it belongs to.  */\n-\n-static inline struct voptype_d *\n-realloc_vop (struct voptype_d *ptr, unsigned int num_elem,\n-\t     struct voptype_d **root)\n-{\n-  unsigned int x, lim;\n-  tree stmt, val;\n-  struct voptype_d *ret, *tmp;\n-\n-  if (VUSE_VECT_NUM_ELEM (ptr->usev) == num_elem)\n-    return ptr; \n-\n-  val = VUSE_OP (ptr, 0);\n-  if (TREE_CODE (val) == SSA_NAME)\n-    val = SSA_NAME_VAR (val);\n-\n-  stmt = USE_STMT (VUSE_OP_PTR (ptr, 0));\n-\n-  /* Delink all the existing uses.  */\n-  for (x = 0; x < VUSE_VECT_NUM_ELEM (ptr->usev); x++)\n-    {\n-      use_operand_p use_p = VUSE_OP_PTR (ptr, x);\n-      delink_imm_use (use_p);\n-    }\n-\n-  /* If we want less space, simply use this one, and shrink the size.  */\n-  if (VUSE_VECT_NUM_ELEM (ptr->usev) > num_elem)\n-    {\n-      VUSE_VECT_NUM_ELEM (ptr->usev) = num_elem;\n-      return ptr;\n-    }\n-\n-  /* It is growing.  Allocate a new one and replace the old one.  */\n-  ret = add_vuse_op (stmt, val, num_elem, ptr);\n-\n-  /* Clear PTR and add its memory to the free list.  */\n-  lim = VUSE_VECT_NUM_ELEM (ptr->usev);\n-  memset (ptr, 0,\n-          sizeof (struct voptype_d) + sizeof (vuse_element_t) * (lim- 1));\n-  add_vop_to_freelist (ptr);\n-\n-  /* Now simply remove the old one.  */\n-  if (*root == ptr)\n-    {\n-      *root = ret;\n-      return ret;\n-    }\n-  else\n-    for (tmp = *root; \n-\t tmp != NULL && tmp->next != ptr; \n-\t tmp = tmp->next)\n-      {\n-\ttmp->next = ret;\n-\treturn ret;\n-      }\n-\n-  /* The pointer passed in isn't in STMT's VDEF lists.  */\n-  gcc_unreachable ();\n-}\n- \n-\n-/* Reallocate the PTR vdef so that it has NUM_ELEM use slots.  */\n-\n-struct voptype_d *\n-realloc_vdef (struct voptype_d *ptr, unsigned int num_elem)\n-{\n-  tree val, stmt;\n-  struct voptype_d *ret;\n-\n-  val = VDEF_RESULT (ptr);\n-  stmt = USE_STMT (VDEF_OP_PTR (ptr, 0));\n-  ret = realloc_vop (ptr, num_elem, &(VDEF_OPS (stmt)));\n-  VDEF_RESULT (ret) = val;\n-  return ret;\n-}\n-  \n-\n-/* Reallocate the PTR vuse so that it has NUM_ELEM use slots.  */\n-\n-struct voptype_d *\n-realloc_vuse (struct voptype_d *ptr, unsigned int num_elem)\n-{\n-  tree stmt;\n-  struct voptype_d *ret;\n-\n-  stmt = USE_STMT (VUSE_OP_PTR (ptr, 0));\n-  ret = realloc_vop (ptr, num_elem, &(VUSE_OPS (stmt)));\n-  return ret;\n-}\n-\n-\n /* Takes elements from build_defs and turns them into def operands of STMT.\n    TODO -- Make build_defs VEC of tree *.  */\n "}, {"sha": "176104d0ef001857e73ac5c5c99b346efa3d2694", "filename": "gcc/tree-ssa-operands.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2Ftree-ssa-operands.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f576d4f94244642668b7c7039d62bc20103ba02b/gcc%2Ftree-ssa-operands.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.h?ref=f576d4f94244642668b7c7039d62bc20103ba02b", "patch": "@@ -203,9 +203,6 @@ typedef struct stmt_operands_d *stmt_operands_p;\n #define PHI_ARG_INDEX_FROM_USE(USE)   phi_arg_index_from_use (USE)\n \n \n-extern struct voptype_d *realloc_vdef (struct voptype_d *, unsigned int);\n-extern struct voptype_d *realloc_vuse (struct voptype_d *, unsigned int);\n-\n extern void init_ssa_operands (void);\n extern void fini_ssa_operands (void);\n extern void free_ssa_operands (stmt_operands_p);"}]}