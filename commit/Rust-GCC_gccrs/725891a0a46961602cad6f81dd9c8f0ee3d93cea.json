{"sha": "725891a0a46961602cad6f81dd9c8f0ee3d93cea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1ODkxYTBhNDY5NjE2MDJjYWQ2ZjgxZGQ5YzhmMGVlM2Q5M2NlYQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2018-11-14T15:43:54Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2018-11-14T15:43:54Z"}, "message": "re PR middle-end/86575 (-Wimplicit-fallthrough affects code generation)\n\nFix PR middle-end/86575\n\n\tPR middle-end/86575\n\t* gimplify.c (collect_fallthrough_labels): Add new argument,\n\treturn location via that, don't modify statements.\n\t(warn_implicit_fallthrough_r): Adjust call, don't use\n\tstatement location directly.\n\nFrom-SVN: r266148", "tree": {"sha": "139c2cc9dece1c06d5b6c5ccb001c6ffbd479f44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/139c2cc9dece1c06d5b6c5ccb001c6ffbd479f44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/725891a0a46961602cad6f81dd9c8f0ee3d93cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725891a0a46961602cad6f81dd9c8f0ee3d93cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725891a0a46961602cad6f81dd9c8f0ee3d93cea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725891a0a46961602cad6f81dd9c8f0ee3d93cea/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e81d464cafa9815e64674a2e3b3e9d0e5eac6b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81d464cafa9815e64674a2e3b3e9d0e5eac6b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81d464cafa9815e64674a2e3b3e9d0e5eac6b31"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "f83b0edda637c591e0c9a6ca833710b403b4a23a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725891a0a46961602cad6f81dd9c8f0ee3d93cea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725891a0a46961602cad6f81dd9c8f0ee3d93cea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=725891a0a46961602cad6f81dd9c8f0ee3d93cea", "patch": "@@ -1,3 +1,11 @@\n+2018-11-14  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/86575\n+\t* gimplify.c (collect_fallthrough_labels): Add new argument,\n+\treturn location via that, don't modify statements.\n+\t(warn_implicit_fallthrough_r): Adjust call, don't use\n+\tstatement location directly.\n+\n 2018-11-14  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/87985"}, {"sha": "017dbbc37dcf79374dc9ca97b3cd629b84238140", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725891a0a46961602cad6f81dd9c8f0ee3d93cea/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725891a0a46961602cad6f81dd9c8f0ee3d93cea/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=725891a0a46961602cad6f81dd9c8f0ee3d93cea", "patch": "@@ -1963,10 +1963,12 @@ last_stmt_in_scope (gimple *stmt)\n \n static gimple *\n collect_fallthrough_labels (gimple_stmt_iterator *gsi_p,\n-\t\t\t    auto_vec <struct label_entry> *labels)\n+\t\t\t    auto_vec <struct label_entry> *labels,\n+\t\t\t    location_t *prevloc)\n {\n   gimple *prev = NULL;\n \n+  *prevloc = UNKNOWN_LOCATION;\n   do\n     {\n       if (gimple_code (gsi_stmt (*gsi_p)) == GIMPLE_BIND)\n@@ -2003,7 +2005,7 @@ collect_fallthrough_labels (gimple_stmt_iterator *gsi_p,\n \t      /* It might be a label without a location.  Use the\n \t\t location of the scope then.  */\n \t      if (!gimple_has_location (prev))\n-\t\tgimple_set_location (prev, bind_loc);\n+\t\t*prevloc = bind_loc;\n \t    }\n \t  gsi_next (gsi_p);\n \t  continue;\n@@ -2086,6 +2088,8 @@ collect_fallthrough_labels (gimple_stmt_iterator *gsi_p,\n \t && (gimple_code (gsi_stmt (*gsi_p)) != GIMPLE_LABEL\n \t     || !gimple_has_location (gsi_stmt (*gsi_p))));\n \n+  if (prev && gimple_has_location (prev))\n+    *prevloc = gimple_location (prev);\n   return prev;\n }\n \n@@ -2182,7 +2186,8 @@ warn_implicit_fallthrough_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \n \t/* Vector of labels that fall through.  */\n \tauto_vec <struct label_entry> labels;\n-\tgimple *prev = collect_fallthrough_labels (gsi_p, &labels);\n+\tlocation_t prevloc;\n+\tgimple *prev = collect_fallthrough_labels (gsi_p, &labels, &prevloc);\n \n \t/* There might be no more statements.  */\n \tif (gsi_end_p (*gsi_p))\n@@ -2210,8 +2215,8 @@ warn_implicit_fallthrough_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \t\t     /* Try to be clever and don't warn when the statement\n \t\t\tcan't actually fall through.  */\n \t\t     && gimple_stmt_may_fallthru (prev)\n-\t\t     && gimple_has_location (prev))\n-\t      warned_p = warning_at (gimple_location (prev),\n+\t\t     && prevloc != UNKNOWN_LOCATION)\n+\t      warned_p = warning_at (prevloc,\n \t\t\t\t     OPT_Wimplicit_fallthrough_,\n \t\t\t\t     \"this statement may fall through\");\n \t    if (warned_p)"}]}