{"sha": "7920fe3d81ece3a23360ce0d8899f1568a9037c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkyMGZlM2Q4MWVjZTNhMjMzNjBjZTBkODg5OWYxNTY4YTkwMzdjOA==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:24Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:24Z"}, "message": "VAX/testsuite: Run target testing over all the usual optimization levels\n\nIt makes sense to use what other targets do and run all the VAX test\ncases over all the usual optimization levels, so make `vax.exp' use our\n`gcc-dg-runtest' rather than the generic `dg-runtest' test driver.\n\nThis breaks `pr56875.c' however, which is optimized away at levels above\n`-O0' as a result of how it has been written for calculations to make no\neffect:\n\nFAIL: gcc.target/vax/pr56875.c   -O1   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\nFAIL: gcc.target/vax/pr56875.c   -O2   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\nFAIL: gcc.target/vax/pr56875.c   -O3 -g   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\nFAIL: gcc.target/vax/pr56875.c   -Os   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\nFAIL: gcc.target/vax/pr56875.c   -O2 -flto -fno-use-linker-plugin -flto-partition=none   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\nFAIL: gcc.target/vax/pr56875.c   -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects   scan-assembler ashq .*,\\\\$0xffffffffffffffff,\n\nRather than keeping it at `-O0' update the test case for its code to do\nmake effect while retaining its sense.  Also reformat it according to\nour requirements.\n\n\tgcc/testsuite/\n\t* gcc.target/vax/vax.exp: Use `gcc-dg-runtest' rather than\n\t`dg-runtest'.\n\t* gcc.target/vax/pr56875.c (dg-options): Make empty.\n\t(a): Rewrite for calculations to make effect.  Reformat.", "tree": {"sha": "37bb90b86b2e52d658027bacbee1ca262d90040d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37bb90b86b2e52d658027bacbee1ca262d90040d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7920fe3d81ece3a23360ce0d8899f1568a9037c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7920fe3d81ece3a23360ce0d8899f1568a9037c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7920fe3d81ece3a23360ce0d8899f1568a9037c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7920fe3d81ece3a23360ce0d8899f1568a9037c8/comments", "author": null, "committer": null, "parents": [{"sha": "85f5a7d6ac9380fb9a07a8c900aa2e21d83d6805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f5a7d6ac9380fb9a07a8c900aa2e21d83d6805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f5a7d6ac9380fb9a07a8c900aa2e21d83d6805"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "191e05e166ec097d7c009d3de3d125181283ed65", "filename": "gcc/testsuite/gcc.target/vax/pr56875.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7920fe3d81ece3a23360ce0d8899f1568a9037c8/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7920fe3d81ece3a23360ce0d8899f1568a9037c8/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c?ref=7920fe3d81ece3a23360ce0d8899f1568a9037c8", "patch": "@@ -1,13 +1,10 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O0\" } */\n+/* { dg-options \"\" } */\n /* { dg-final { scan-assembler     \"ashq .*,\\\\\\$0xffffffffffffffff,\" } } */\n /* { dg-final { scan-assembler-not \"ashq .*,\\\\\\$-1,\" } } */\n \n-void\n-a (void)\n+unsigned long long\n+a (unsigned long i)\n {\n-\tunsigned long i = 1;\n-\tunsigned long long v;\n-\n-\tv = ~ (unsigned long long) 0 << i;\n+  return ~(unsigned long long) 0 << i;\n }"}, {"sha": "678e9007686a189512e13f4487d40514498a7ded", "filename": "gcc/testsuite/gcc.target/vax/vax.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7920fe3d81ece3a23360ce0d8899f1568a9037c8/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7920fe3d81ece3a23360ce0d8899f1568a9037c8/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp?ref=7920fe3d81ece3a23360ce0d8899f1568a9037c8", "patch": "@@ -34,7 +34,7 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n # All done."}]}