{"sha": "ce95786742efb57662ba5a27f3da38b3b917c56c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5NTc4Njc0MmVmYjU3NjYyYmE1YTI3ZjNkYTM4YjNiOTE3YzU2Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:16:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:16:09Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r194212", "tree": {"sha": "93201bf39cb86e56385dbb10972abddf8b0a4371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93201bf39cb86e56385dbb10972abddf8b0a4371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce95786742efb57662ba5a27f3da38b3b917c56c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce95786742efb57662ba5a27f3da38b3b917c56c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce95786742efb57662ba5a27f3da38b3b917c56c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce95786742efb57662ba5a27f3da38b3b917c56c/comments", "author": null, "committer": null, "parents": [{"sha": "06ad40d3ec3ec2333701f18f6dc6bbf0b9a023ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ad40d3ec3ec2333701f18f6dc6bbf0b9a023ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ad40d3ec3ec2333701f18f6dc6bbf0b9a023ec"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "d34322dc6269e1384b15961712d02f7e2d6e0efe", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce95786742efb57662ba5a27f3da38b3b917c56c/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce95786742efb57662ba5a27f3da38b3b917c56c/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=ce95786742efb57662ba5a27f3da38b3b917c56c", "patch": "@@ -844,15 +844,16 @@ package body Exp_Prag is\n    --     end loop;\n \n    procedure Expand_Pragma_Loop_Variant (N : Node_Id) is\n-      Last_Var    : constant Node_Id    :=\n-                      Last (Pragma_Argument_Associations (N));\n-      Loc         : constant Source_Ptr := Sloc (N);\n-      Curr_Assign : List_Id   := No_List;\n-      Flag_Id     : Entity_Id := Empty;\n-      If_Stmt     : Node_Id   := Empty;\n+      Loc : constant Source_Ptr := Sloc (N);\n+\n+      Last_Var : constant Node_Id := Last (Pragma_Argument_Associations (N));\n+\n+      Curr_Assign : List_Id             := No_List;\n+      Flag_Id     : Entity_Id           := Empty;\n+      If_Stmt     : Node_Id             := Empty;\n+      Old_Assign  : List_Id             := No_List;\n       Loop_Scop   : Entity_Id;\n       Loop_Stmt   : Node_Id;\n-      Old_Assign  : List_Id   := No_List;\n       Variant     : Node_Id;\n \n       procedure Process_Variant (Variant : Node_Id; Is_Last : Boolean);\n@@ -883,7 +884,6 @@ package body Exp_Prag is\n          begin\n             if Chars (Variant) = Name_Increases then\n                return Make_Op_Gt (Loc, Curr_Val, Old_Val);\n-\n             else pragma Assert (Chars (Variant) = Name_Decreases);\n                return Make_Op_Lt (Loc, Curr_Val, Old_Val);\n             end if;\n@@ -959,7 +959,7 @@ package body Exp_Prag is\n          --  Generate:\n          --    Old : <type of Expr>;\n \n-         Old_Id  := Make_Temporary (Loc, 'P');\n+         Old_Id := Make_Temporary (Loc, 'P');\n \n          Insert_Action (Loop_Stmt,\n            Make_Object_Declaration (Loop_Loc,"}, {"sha": "445458ca68753ed3ce25ffce7eed48973df538a4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce95786742efb57662ba5a27f3da38b3b917c56c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce95786742efb57662ba5a27f3da38b3b917c56c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ce95786742efb57662ba5a27f3da38b3b917c56c", "patch": "@@ -9552,13 +9552,15 @@ package body Sem_Res is\n       --  Skip these type conversion checks if universal fixed operands\n       --  operands involved, since range checks are handled separately for\n       --  these cases (in the appropriate Expand routines in unit Exp_Fixd).\n-      --  Also skip type conversion checks in formal verification mode, as the\n-      --  formal verification backend deals directly with these checks.\n \n       if Nkind (N) = N_Type_Conversion\n         and then not Is_Generic_Type (Root_Type (Target_Typ))\n         and then Target_Typ  /= Universal_Fixed\n         and then Operand_Typ /= Universal_Fixed\n+\n+        --  Also skip type conversion checks in formal verification mode, as\n+        --  the formal verification backend deals directly with these checks.\n+\n         and then not Alfa_Mode\n       then\n          Apply_Type_Conversion_Checks (N);"}]}