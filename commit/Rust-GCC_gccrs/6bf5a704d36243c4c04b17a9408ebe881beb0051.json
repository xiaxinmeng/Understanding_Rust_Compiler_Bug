{"sha": "6bf5a704d36243c4c04b17a9408ebe881beb0051", "node_id": "C_kwDOANBUbNoAKDZiZjVhNzA0ZDM2MjQzYzRjMDRiMTdhOTQwOGViZTg4MWJlYjAwNTE", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-20T14:27:47Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-20T14:27:47Z"}, "message": "aarch64: Fix GTY markup for arm_sve.h [PR106491]\n\nIt turns out that GTY(()) markers in definitions like:\n\n  GTY(()) tree scalar_types[NUM_VECTOR_TYPES];\n\nare not effective and are silently ignored.  The GTY(()) has\nto come after an extern or static.\n\nThe externs associated with the SVE ACLE GTY variables are in\naarch64-sve-builtins.h.  This file is not in tm_include_list because\nwe don't want every target-facing file to include it.  It therefore\nisn't in the list of GC header files either.\n\nIn this case that's a blessing in disguise, since the variables\nbelong to a namespace and gengtype doesn't understand namespaces.\nI think the fix is instead to add an extra extern before each\nvariable declaration, similarly to varasm.cc and vtable-verify.cc.\n(This works due to a \"using namespace\" at the end of the file.)\n\ngcc/\n\tPR target/106491\n\t* config/aarch64/aarch64-sve-builtins.cc (scalar_types)\n\t(acle_vector_types, acle_svpattern, acle_svprfop): Add GTY\n\tmarkup to (new) extern declarations instead of to the main\n\tdefinition.", "tree": {"sha": "cc6486e6a027ed46aedf88748525fdb55ba21509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc6486e6a027ed46aedf88748525fdb55ba21509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bf5a704d36243c4c04b17a9408ebe881beb0051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf5a704d36243c4c04b17a9408ebe881beb0051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bf5a704d36243c4c04b17a9408ebe881beb0051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf5a704d36243c4c04b17a9408ebe881beb0051/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1005c89431cc78a68762643e1bc7249c3959927e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1005c89431cc78a68762643e1bc7249c3959927e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1005c89431cc78a68762643e1bc7249c3959927e"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "12d9beee4da3c9e7cca8ba3f750a7236cf300cfc", "filename": "gcc/config/aarch64/aarch64-sve-builtins.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf5a704d36243c4c04b17a9408ebe881beb0051/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf5a704d36243c4c04b17a9408ebe881beb0051/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc?ref=6bf5a704d36243c4c04b17a9408ebe881beb0051", "patch": "@@ -530,21 +530,25 @@ static CONSTEXPR const function_group_info function_groups[] = {\n };\n \n /* The scalar type associated with each vector type.  */\n-GTY(()) tree scalar_types[NUM_VECTOR_TYPES];\n+extern GTY(()) tree scalar_types[NUM_VECTOR_TYPES];\n+tree scalar_types[NUM_VECTOR_TYPES];\n \n /* The single-predicate and single-vector types, with their built-in\n    \"__SV..._t\" name.  Allow an index of NUM_VECTOR_TYPES, which always\n    yields a null tree.  */\n static GTY(()) tree abi_vector_types[NUM_VECTOR_TYPES + 1];\n \n /* Same, but with the arm_sve.h \"sv..._t\" name.  */\n-GTY(()) tree acle_vector_types[MAX_TUPLE_SIZE][NUM_VECTOR_TYPES + 1];\n+extern GTY(()) tree acle_vector_types[MAX_TUPLE_SIZE][NUM_VECTOR_TYPES + 1];\n+tree acle_vector_types[MAX_TUPLE_SIZE][NUM_VECTOR_TYPES + 1];\n \n /* The svpattern enum type.  */\n-GTY(()) tree acle_svpattern;\n+extern GTY(()) tree acle_svpattern;\n+tree acle_svpattern;\n \n /* The svprfop enum type.  */\n-GTY(()) tree acle_svprfop;\n+extern GTY(()) tree acle_svprfop;\n+tree acle_svprfop;\n \n /* The list of all registered function decls, indexed by code.  */\n static GTY(()) vec<registered_function *, va_gc> *registered_functions;"}]}