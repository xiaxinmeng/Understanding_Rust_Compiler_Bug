{"sha": "511245325a4d3414a951e2d489112e8372eae1b1", "node_id": "C_kwDOANBUbNoAKDUxMTI0NTMyNWE0ZDM0MTRhOTUxZTJkNDg5MTEyZTgzNzJlYWUxYjE", "commit": {"author": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-10-14T12:49:02Z"}, "committer": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-11-04T14:55:44Z"}, "message": "gcc/lower_subreg.c: Prevent decomposition if modes are not tieable\n\nPreventing decomposition if modes are not tieable is necessary to\nstop AArch64 partial Neon structure modes being treated as packed in\nregisters.\n\nThis is a necessary prerequisite for a future AArch64 PCS change to\nmaintain good code generation.\n\ngcc/ChangeLog:\n\n2021-10-14  Jonathan Wright  <jonathan.wright@arm.com>\n\n\t* lower-subreg.c (simple_move): Prevent decomposition if\n\tmodes are not tieable.", "tree": {"sha": "d4ecf4bfaac31fec98aedc1453118828ed4f7d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4ecf4bfaac31fec98aedc1453118828ed4f7d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/511245325a4d3414a951e2d489112e8372eae1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511245325a4d3414a951e2d489112e8372eae1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511245325a4d3414a951e2d489112e8372eae1b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511245325a4d3414a951e2d489112e8372eae1b1/comments", "author": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f206b85395c273980e2b81a54dbddc4897e4a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f206b85395c273980e2b81a54dbddc4897e4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f206b85395c273980e2b81a54dbddc4897e4a7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "f0dc63f485f1237d96ceeb0c75dca9aa8e053c6e", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511245325a4d3414a951e2d489112e8372eae1b1/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511245325a4d3414a951e2d489112e8372eae1b1/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=511245325a4d3414a951e2d489112e8372eae1b1", "patch": "@@ -383,8 +383,10 @@ simple_move (rtx_insn *insn, bool speed_p)\n      non-integer mode for which there is no integer mode of the same\n      size.  */\n   mode = GET_MODE (SET_DEST (set));\n+  scalar_int_mode int_mode;\n   if (!SCALAR_INT_MODE_P (mode)\n-      && !int_mode_for_size (GET_MODE_BITSIZE (mode), 0).exists ())\n+      && (!int_mode_for_size (GET_MODE_BITSIZE (mode), 0).exists (&int_mode)\n+\t  || !targetm.modes_tieable_p (mode, int_mode)))\n     return NULL_RTX;\n \n   /* Reject PARTIAL_INT modes.  They are used for processor specific"}]}