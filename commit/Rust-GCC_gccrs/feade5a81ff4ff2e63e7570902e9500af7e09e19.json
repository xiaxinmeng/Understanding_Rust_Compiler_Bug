{"sha": "feade5a81ff4ff2e63e7570902e9500af7e09e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhZGU1YTgxZmY0ZmYyZTYzZTc1NzA5MDJlOTUwMGFmN2UwOWUxOQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2014-09-19T09:17:00Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2014-09-19T09:17:00Z"}, "message": "s390.md (\"trunctdsd2\", [...]): New expanders.\n\n2014-09-19  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.md (\"trunctdsd2\", \"extendsdtd2\"): New\n\texpanders.\n\n2014-09-19  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* gcc.target/s390/dfp-conv1.c: New testcase.\n\nFrom-SVN: r215382", "tree": {"sha": "55b09aa8060dabb209d629ae56ffb614949ca850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b09aa8060dabb209d629ae56ffb614949ca850"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feade5a81ff4ff2e63e7570902e9500af7e09e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feade5a81ff4ff2e63e7570902e9500af7e09e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feade5a81ff4ff2e63e7570902e9500af7e09e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feade5a81ff4ff2e63e7570902e9500af7e09e19/comments", "author": null, "committer": null, "parents": [{"sha": "db716bdeca770228efaa5fb807079ff22e5e356b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db716bdeca770228efaa5fb807079ff22e5e356b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db716bdeca770228efaa5fb807079ff22e5e356b"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "00fbfa1f95af56686b666940ee4c4f4db93236b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=feade5a81ff4ff2e63e7570902e9500af7e09e19", "patch": "@@ -1,3 +1,8 @@\n+2014-09-19  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"trunctdsd2\", \"extendsdtd2\"): New\n+\texpanders.\n+\n 2014-09-19  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \tPR target/62662"}, {"sha": "73ac0dcd2d45a965a83d26724fe376a9b612c349", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=feade5a81ff4ff2e63e7570902e9500af7e09e19", "patch": "@@ -4406,6 +4406,18 @@\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"ftruncsd\")])\n \n+(define_expand \"trunctdsd2\"\n+  [(parallel\n+    [(set (match_dup 3)\n+\t  (float_truncate:DD (match_operand:TD 1 \"register_operand\" \"\")))\n+     (clobber (match_scratch:TD 2 \"\"))])\n+   (set (match_operand:SD 0 \"register_operand\" \"\")\n+\t(float_truncate:SD (match_dup 3)))]\n+  \"TARGET_HARD_DFP\"\n+{\n+  operands[3] = gen_reg_rtx (DDmode);\n+})\n+\n ;\n ; extend(sf|df)(df|tf)2 instruction pattern(s).\n ;\n@@ -4442,6 +4454,16 @@\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"fsimptf\")])\n \n+(define_expand \"extendsdtd2\"\n+  [(set (match_dup 2)\n+\t(float_extend:DD (match_operand:SD 1 \"register_operand\" \"\")))\n+   (set (match_operand:TD 0 \"register_operand\" \"\")\n+\t(float_extend:TD (match_dup 2)))]\n+  \"TARGET_HARD_DFP\"\n+{\n+  operands[2] = gen_reg_rtx (DDmode);\n+})\n+\n ; Binary Floating Point - load fp integer\n \n ; Expanders for: floor, btrunc, round, ceil, and nearbyint"}, {"sha": "6a7f110914c17837405e1ef2e62df196799e8e09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=feade5a81ff4ff2e63e7570902e9500af7e09e19", "patch": "@@ -1,3 +1,7 @@\n+2014-09-19  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* gcc.target/s390/dfp-conv1.c: New testcase.\n+\n 2014-09-19  Marat Zakirov  <m.zakirov@samsung.com>\n \n \t* c-c++-common/asan/red-align-1.c: New test."}, {"sha": "3c553a3406e03c7cbed070d7f7ceed3fdfe71ef9", "filename": "gcc/testsuite/gcc.target/s390/dfp-conv1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-conv1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feade5a81ff4ff2e63e7570902e9500af7e09e19/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-conv1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fdfp-conv1.c?ref=feade5a81ff4ff2e63e7570902e9500af7e09e19", "patch": "@@ -0,0 +1,22 @@\n+/* We do not have hardware instructions which do a direct conversion\n+   between the 32 and 128 bit DFP types.  But we can easily do it in\n+   two steps.  Older libdfp implementations require this not to call\n+   into a lib in order to prevent an endless loop.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z10 -mzarch\" } */\n+\n+_Decimal32 \n+foo (_Decimal128 a)\n+{\n+  return (_Decimal32)a;\n+}\n+\n+_Decimal128\n+bar (_Decimal32 a)\n+{\n+  return (_Decimal128)a;\n+}\n+\n+/* Make sure no library call is emitted.  */\n+/* { dg-final { scan-assembler-not \"brasl\" } } */"}]}