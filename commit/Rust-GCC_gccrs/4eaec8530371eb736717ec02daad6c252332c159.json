{"sha": "4eaec8530371eb736717ec02daad6c252332c159", "node_id": "C_kwDOANBUbNoAKDRlYWVjODUzMDM3MWViNzM2NzE3ZWMwMmRhYWQ2YzI1MjMzMmMxNTk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-20T17:03:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-20T17:03:15Z"}, "message": "Add AST::TuplePatternItems::TuplePatternItemType to differentiate between them", "tree": {"sha": "f77d68b9dbaa49641ecda3338033e227e84fab8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f77d68b9dbaa49641ecda3338033e227e84fab8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eaec8530371eb736717ec02daad6c252332c159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaec8530371eb736717ec02daad6c252332c159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eaec8530371eb736717ec02daad6c252332c159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaec8530371eb736717ec02daad6c252332c159/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03ec66cf1162f139ba873e5d8237a1dfad989937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03ec66cf1162f139ba873e5d8237a1dfad989937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03ec66cf1162f139ba873e5d8237a1dfad989937"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "a3193f7958475d83d4760f207e3b5cba3c1f5310", "filename": "gcc/rust/ast/rust-pattern.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaec8530371eb736717ec02daad6c252332c159/gcc%2Frust%2Fast%2Frust-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaec8530371eb736717ec02daad6c252332c159/gcc%2Frust%2Fast%2Frust-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-pattern.h?ref=4eaec8530371eb736717ec02daad6c252332c159", "patch": "@@ -1135,6 +1135,12 @@ class TupleStructPattern : public Pattern\n class TuplePatternItems\n {\n public:\n+  enum TuplePatternItemType\n+  {\n+    MULTIPLE,\n+    RANGED,\n+  };\n+\n   virtual ~TuplePatternItems () {}\n \n   // TODO: should this store location data?\n@@ -1150,6 +1156,8 @@ class TuplePatternItems\n \n   virtual void accept_vis (ASTVisitor &vis) = 0;\n \n+  virtual TuplePatternItemType get_pattern_type () const = 0;\n+\n protected:\n   // pure virtual clone implementation\n   virtual TuplePatternItems *clone_tuple_pattern_items_impl () const = 0;\n@@ -1234,6 +1242,11 @@ class TuplePatternItemsMultiple : public TuplePatternItems\n     return patterns;\n   }\n \n+  TuplePatternItemType get_pattern_type () const override\n+  {\n+    return TuplePatternItemType::MULTIPLE;\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */\n@@ -1312,6 +1325,11 @@ class TuplePatternItemsRanged : public TuplePatternItems\n     return upper_patterns;\n   }\n \n+  TuplePatternItemType get_pattern_type () const override\n+  {\n+    return TuplePatternItemType::RANGED;\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}]}