{"sha": "88412b71eefd5a445989f5211763c9498b854e1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0MTJiNzFlZWZkNWE0NDU5ODlmNTIxMTc2M2M5NDk4Yjg1NGUxZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-19T21:49:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-19T21:49:19Z"}, "message": "Remove duplicate tests\n\nThese tests originally existed to check the containers in C++11 mode,\nwhen the default was C++98 mode. Now that the default is C++14 (and we\nrun most tests for all modes) it serves no purpose to have two copies of\nthe tests when neither is explicitly using -std=gnu++98 anyway.\n\n\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n\t5_c++0x.cc: Remove redundant test that is functionally identical to\n\tthe 5.cc test.\n\t* testsuite/23_containers/map/requirements/explicit_instantiation/\n\t5_c++0x.cc: Likewise.\n\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/\n\t5_c++0x.cc: Likewise.\n\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/\n\t5_c++0x.cc: Likewise.\n\t* testsuite/23_containers/set/requirements/explicit_instantiation/\n\t5_c++0x.cc: Likewise.\n\nFrom-SVN: r265329", "tree": {"sha": "804711eb39712bbf3829e56e362c280c3e003365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/804711eb39712bbf3829e56e362c280c3e003365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88412b71eefd5a445989f5211763c9498b854e1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88412b71eefd5a445989f5211763c9498b854e1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88412b71eefd5a445989f5211763c9498b854e1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88412b71eefd5a445989f5211763c9498b854e1f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92646d25778952a1fd24fa9a6f407cd421606195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92646d25778952a1fd24fa9a6f407cd421606195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92646d25778952a1fd24fa9a6f407cd421606195"}], "stats": {"total": 160, "additions": 12, "deletions": 148}, "files": [{"sha": "ee7823ad8f4ee0327b6cc54824131e7cad780f2a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88412b71eefd5a445989f5211763c9498b854e1f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88412b71eefd5a445989f5211763c9498b854e1f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=88412b71eefd5a445989f5211763c9498b854e1f", "patch": "@@ -1,5 +1,17 @@\n 2018-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n+\t5_c++0x.cc: Remove redundant test that is functionally identical to\n+\tthe 5.cc test.\n+\t* testsuite/23_containers/map/requirements/explicit_instantiation/\n+\t5_c++0x.cc: Likewise.\n+\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/\n+\t5_c++0x.cc: Likewise.\n+\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/\n+\t5_c++0x.cc: Likewise.\n+\t* testsuite/23_containers/set/requirements/explicit_instantiation/\n+\t5_c++0x.cc: Likewise.\n+\n \t* include/bits/regex_executor.tcc (_Backref_matcher::_M_apply): Use\n \t_GLIBCXX_STD_A to refer to normal mode algorithms.\n \t* testsuite/28_regex/headers/regex/parallel_mode.cc: New test."}, {"sha": "e93a8c7570754f1cf83e6daf3dc8aee434cff049", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/5_c++0x.cc", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc?ref=92646d25778952a1fd24fa9a6f407cd421606195", "patch": "@@ -1,28 +0,0 @@\n-\n-// Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// This file tests explicit instantiation of library containers\n-\n-#include <list>\n-#include <testsuite_allocator.h>\n-\n-// { dg-do compile { target c++11 } }\n-\n-// libstdc++/50118\n-template class std::list<int, __gnu_test::ExplicitConsAlloc<int>>;\n-template class std::list<int, __gnu_test::ExplicitConsAlloc<char>>;"}, {"sha": "88bd861f63189f9f9b460d64a59f32df0a63f1d7", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/explicit_instantiation/5_c++0x.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc?ref=92646d25778952a1fd24fa9a6f407cd421606195", "patch": "@@ -1,30 +0,0 @@\n-\n-// Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// This file tests explicit instantiation of library containers\n-\n-#include <map>\n-#include <testsuite_allocator.h>\n-\n-// { dg-do compile { target c++11 } }\n-\n-// libstdc++/50118\n-template class std::map<int, int, std::less<int>,\n-\t\t\t__gnu_test::ExplicitConsAlloc<int>>;\n-template class std::map<int, int, std::less<int>,\n-\t\t\t__gnu_test::ExplicitConsAlloc<char>>;"}, {"sha": "9ba12e1600b114d0ce2dd2e49fe86502ea9e91ba", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/explicit_instantiation/5_c++0x.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc?ref=92646d25778952a1fd24fa9a6f407cd421606195", "patch": "@@ -1,30 +0,0 @@\n-\n-// Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// This file tests explicit instantiation of library containers\n-\n-#include <map>\n-#include <testsuite_allocator.h>\n-\n-// { dg-do compile { target c++11 } }\n-\n-// libstdc++/50118\n-template class std::multimap<int, int, std::less<int>,\n-\t\t\t     __gnu_test::ExplicitConsAlloc<int>>;\n-template class std::multimap<int, int, std::less<int>,\n-\t\t\t     __gnu_test::ExplicitConsAlloc<char>>;"}, {"sha": "8ec73ba0f067e802132ca4f6dc762f42fa6a1830", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/explicit_instantiation/5_c++0x.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc?ref=92646d25778952a1fd24fa9a6f407cd421606195", "patch": "@@ -1,30 +0,0 @@\n-\n-// Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// This file tests explicit instantiation of library containers\n-\n-#include <set>\n-#include <testsuite_allocator.h>\n-\n-// { dg-do compile { target c++11 } }\n-\n-// libstdc++/50118\n-template class std::multiset<int, std::less<int>,\n-\t\t\t     __gnu_test::ExplicitConsAlloc<int>>;\n-template class std::multiset<int, std::less<int>,\n-\t\t\t     __gnu_test::ExplicitConsAlloc<char>>;"}, {"sha": "52993bda9c0d6d3d448f2617c03e3274cbfc417b", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/explicit_instantiation/5_c++0x.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92646d25778952a1fd24fa9a6f407cd421606195/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5_c%2B%2B0x.cc?ref=92646d25778952a1fd24fa9a6f407cd421606195", "patch": "@@ -1,30 +0,0 @@\n-\n-// Copyright (C) 2011-2018 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// This file tests explicit instantiation of library containers\n-\n-#include <set>\n-#include <testsuite_allocator.h>\n-\n-// { dg-do compile { target c++11 } }\n-\n-// libstdc++/50118\n-template class std::set<int, std::less<int>,\n-\t\t\t__gnu_test::ExplicitConsAlloc<int>>;\n-template class std::set<int, std::less<int>,\n-\t\t\t__gnu_test::ExplicitConsAlloc<char>>;"}]}