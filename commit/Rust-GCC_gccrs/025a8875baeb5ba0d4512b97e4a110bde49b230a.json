{"sha": "025a8875baeb5ba0d4512b97e4a110bde49b230a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1YTg4NzViYWViNWJhMGQ0NTEyYjk3ZTRhMTEwYmRlNDliMjMwYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-18T18:44:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-18T18:44:06Z"}, "message": "(i960_function_arg_advance, i960_function_arg): Likewise.\n\nFrom-SVN: r3264", "tree": {"sha": "72b7f97eb2618091b76ad80079147b4f779bd40b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b7f97eb2618091b76ad80079147b4f779bd40b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/025a8875baeb5ba0d4512b97e4a110bde49b230a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025a8875baeb5ba0d4512b97e4a110bde49b230a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/025a8875baeb5ba0d4512b97e4a110bde49b230a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025a8875baeb5ba0d4512b97e4a110bde49b230a/comments", "author": null, "committer": null, "parents": [{"sha": "13756074430d7ace49756f247d185c0de92f6481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13756074430d7ace49756f247d185c0de92f6481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13756074430d7ace49756f247d185c0de92f6481"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f20de25d29c1b93f944d1049dff73e600f4de0dd", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025a8875baeb5ba0d4512b97e4a110bde49b230a/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025a8875baeb5ba0d4512b97e4a110bde49b230a/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=025a8875baeb5ba0d4512b97e4a110bde49b230a", "patch": "@@ -1943,11 +1943,11 @@ i960_function_arg_advance (cum, mode, type, named)\n   i960_arg_size_and_align (mode, type, &size, &align);\n \n   if (named == 0 || size > 4 || cum->ca_nstackparms != 0\n-      || (size + ROUND (cum->ca_nregparms, align)) > NPARM_REGS\n+      || (size + ROUND_PARM (cum->ca_nregparms, align)) > NPARM_REGS\n       || MUST_PASS_IN_STACK (mode, type))\n-    cum->ca_nstackparms = ROUND (cum->ca_nstackparms, align) + size;\n+    cum->ca_nstackparms = ROUND_PARM (cum->ca_nstackparms, align) + size;\n   else\n-    cum->ca_nregparms = ROUND (cum->ca_nregparms, align) + size;\n+    cum->ca_nregparms = ROUND_PARM (cum->ca_nregparms, align) + size;\n }\n \n /* Return the register that the argument described by MODE and TYPE is\n@@ -1966,15 +1966,15 @@ i960_function_arg (cum, mode, type, named)\n   i960_arg_size_and_align (mode, type, &size, &align);\n \n   if (named == 0 || size > 4 || cum->ca_nstackparms != 0\n-      || (size + ROUND (cum->ca_nregparms, align)) > NPARM_REGS\n+      || (size + ROUND_PARM (cum->ca_nregparms, align)) > NPARM_REGS\n       || MUST_PASS_IN_STACK (mode, type))\n     {\n-      cum->ca_nstackparms = ROUND (cum->ca_nstackparms, align);\n+      cum->ca_nstackparms = ROUND_PARM (cum->ca_nstackparms, align);\n       ret = 0;\n     }\n   else\n     {\n-      cum->ca_nregparms = ROUND (cum->ca_nregparms, align);\n+      cum->ca_nregparms = ROUND_PARM (cum->ca_nregparms, align);\n       ret = gen_rtx (REG, mode, cum->ca_nregparms);\n     }\n "}]}