{"sha": "941bc65971482ba8194d7ab1b3eb2514b481cc70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxYmM2NTk3MTQ4MmJhODE5NGQ3YWIxYjNlYjI1MTRiNDgxY2M3MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-24T10:21:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-24T10:21:46Z"}, "message": "re PR rtl-optimization/9414 ([Sparc] Scheduling bug on Ultrasparc)\n\n\tPR optimization/9414\n\t* config/sparc/sparc.md (widening peepholes): Use\n\twiden_memory_access instead of change_address.\n\nFrom-SVN: r64782", "tree": {"sha": "c9370353ef642711a250b392b01857b29fd113b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9370353ef642711a250b392b01857b29fd113b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/941bc65971482ba8194d7ab1b3eb2514b481cc70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941bc65971482ba8194d7ab1b3eb2514b481cc70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941bc65971482ba8194d7ab1b3eb2514b481cc70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941bc65971482ba8194d7ab1b3eb2514b481cc70/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f29a2bd17dbd3bcd89fabb4af8e9c5aa7dd8d223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29a2bd17dbd3bcd89fabb4af8e9c5aa7dd8d223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29a2bd17dbd3bcd89fabb4af8e9c5aa7dd8d223"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "a470d16cad8b45bd3452a722bf171cebcf00a9fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941bc65971482ba8194d7ab1b3eb2514b481cc70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941bc65971482ba8194d7ab1b3eb2514b481cc70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=941bc65971482ba8194d7ab1b3eb2514b481cc70", "patch": "@@ -1,3 +1,9 @@\n+2003-03-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/9414\n+\t* config/sparc/sparc.md (widening peepholes): Use\n+\twiden_memory_access instead of change_address.\n+\n 2003-03-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7086"}, {"sha": "ad991fdacaf5f3bdb4e00f11de2f6c8fa7a704c4", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941bc65971482ba8194d7ab1b3eb2514b481cc70/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941bc65971482ba8194d7ab1b3eb2514b481cc70/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=941bc65971482ba8194d7ab1b3eb2514b481cc70", "patch": "@@ -7949,7 +7949,7 @@\n    && mems_ok_for_ldd_peep (operands[0], operands[1], NULL_RTX)\"\n   [(set (match_dup 0)\n        (const_int 0))]\n-  \"operands[0] = change_address (operands[0], DImode, NULL);\")\n+  \"operands[0] = widen_memory_access (operands[0], DImode, 0);\")\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"memory_operand\" \"\")\n@@ -7960,7 +7960,7 @@\n    && mems_ok_for_ldd_peep (operands[1], operands[0], NULL_RTX)\"\n   [(set (match_dup 1)\n        (const_int 0))]\n-  \"operands[1] = change_address (operands[1], DImode, NULL);\")\n+  \"operands[1] = widen_memory_access (operands[1], DImode, 0);\")\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -7971,7 +7971,7 @@\n    && mems_ok_for_ldd_peep (operands[1], operands[3], operands[0])\" \n   [(set (match_dup 0)\n \t(match_dup 1))]\n-  \"operands[1] = change_address (operands[1], DImode, NULL);\n+  \"operands[1] = widen_memory_access (operands[1], DImode, 0);\n    operands[0] = gen_rtx_REG (DImode, REGNO (operands[0]));\")\n \n (define_peephole2\n@@ -7983,7 +7983,7 @@\n    && mems_ok_for_ldd_peep (operands[0], operands[2], NULL_RTX)\"\n   [(set (match_dup 0)\n \t(match_dup 1))]\n-  \"operands[0] = change_address (operands[0], DImode, NULL);\n+  \"operands[0] = widen_memory_access (operands[0], DImode, 0);\n    operands[1] = gen_rtx_REG (DImode, REGNO (operands[1]));\")\n \n (define_peephole2\n@@ -7995,7 +7995,7 @@\n    && mems_ok_for_ldd_peep (operands[1], operands[3], operands[0])\"\n   [(set (match_dup 0)\n \t(match_dup 1))]\n-  \"operands[1] = change_address (operands[1], DFmode, NULL);\n+  \"operands[1] = widen_memory_access (operands[1], DFmode, 0);\n    operands[0] = gen_rtx_REG (DFmode, REGNO (operands[0]));\")\n \n (define_peephole2\n@@ -8007,7 +8007,7 @@\n   && mems_ok_for_ldd_peep (operands[0], operands[2], NULL_RTX)\"\n   [(set (match_dup 0)\n \t(match_dup 1))]\n-  \"operands[0] = change_address (operands[0], DFmode, NULL);\n+  \"operands[0] = widen_memory_access (operands[0], DFmode, 0);\n    operands[1] = gen_rtx_REG (DFmode, REGNO (operands[1]));\")\n \n (define_peephole2\n@@ -8019,7 +8019,7 @@\n   && mems_ok_for_ldd_peep (operands[3], operands[1], operands[0])\"\n   [(set (match_dup 2)\n \t(match_dup 3))]\n-   \"operands[3] = change_address (operands[3], DImode, NULL);\n+   \"operands[3] = widen_memory_access (operands[3], DImode, 0);\n     operands[2] = gen_rtx_REG (DImode, REGNO (operands[2]));\")\n \n (define_peephole2\n@@ -8031,7 +8031,7 @@\n   && mems_ok_for_ldd_peep (operands[2], operands[0], NULL_RTX)\" \n   [(set (match_dup 2)\n \t(match_dup 3))]\n-  \"operands[2] = change_address (operands[2], DImode, NULL);\n+  \"operands[2] = widen_memory_access (operands[2], DImode, 0);\n    operands[3] = gen_rtx_REG (DImode, REGNO (operands[3]));\n    \")\n  \n@@ -8044,7 +8044,7 @@\n   && mems_ok_for_ldd_peep (operands[3], operands[1], operands[0])\"\n   [(set (match_dup 2)\n \t(match_dup 3))]\n-  \"operands[3] = change_address (operands[3], DFmode, NULL);\n+  \"operands[3] = widen_memory_access (operands[3], DFmode, 0);\n    operands[2] = gen_rtx_REG (DFmode, REGNO (operands[2]));\")\n \n (define_peephole2\n@@ -8056,7 +8056,7 @@\n   && mems_ok_for_ldd_peep (operands[2], operands[0], NULL_RTX)\"\n   [(set (match_dup 2)\n \t(match_dup 3))]\n-  \"operands[2] = change_address (operands[2], DFmode, NULL);\n+  \"operands[2] = widen_memory_access (operands[2], DFmode, 0);\n    operands[3] = gen_rtx_REG (DFmode, REGNO (operands[3]));\")\n  \n ;; Optimize the case of following a reg-reg move with a test"}]}