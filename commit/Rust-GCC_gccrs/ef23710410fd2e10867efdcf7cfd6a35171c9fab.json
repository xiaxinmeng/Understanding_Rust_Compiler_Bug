{"sha": "ef23710410fd2e10867efdcf7cfd6a35171c9fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyMzcxMDQxMGZkMmUxMDg2N2VmZGNmN2NmZDZhMzUxNzFjOWZhYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T10:22:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T10:22:31Z"}, "message": "[multiple changes]\n\n2010-10-08  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb: Minor reformatting.\n\n2010-10-08  Vincent Celier  <celier@adacore.com>\n\n\t* ali-util.adb (Get_File_Checksum): Make sure that external_as_list is\n\tnot a reserved word.\n\t* prj-proc.adb (Expression): Process string list external references.\n\t* prj-strt.adb (External_Reference): Parse external_as_list external\n\treferences.\n\t* prj-tree.ads (Expression_Kind_Of): Allowed for N_External_Value nodes\n\t(Set_Expression_Kind_Of): Ditto\n\t* prj.adb (Initialize): Set external_as_list as a reserved word\n\t* projects.texi: Document new string external reference external_as_list\n\t* scans.ads (Token_Type): New token Tok_External_As_List\n\t* snames.ads-tmpl: New standard name Name_External_As_List\n\nFrom-SVN: r165157", "tree": {"sha": "ec2b5e80bfd4ae021a7fb9457b85dbe2ab34c666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec2b5e80bfd4ae021a7fb9457b85dbe2ab34c666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef23710410fd2e10867efdcf7cfd6a35171c9fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef23710410fd2e10867efdcf7cfd6a35171c9fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef23710410fd2e10867efdcf7cfd6a35171c9fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef23710410fd2e10867efdcf7cfd6a35171c9fab/comments", "author": null, "committer": null, "parents": [{"sha": "2604ec03c96cc3bfd8b3493df8665689d62778fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2604ec03c96cc3bfd8b3493df8665689d62778fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2604ec03c96cc3bfd8b3493df8665689d62778fa"}], "stats": {"total": 397, "additions": 322, "deletions": 75}, "files": [{"sha": "cb0c7e91bcc07248de42cd0c53cc5872c40f0280", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -1,3 +1,21 @@\n+2010-10-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor reformatting.\n+\n+2010-10-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* ali-util.adb (Get_File_Checksum): Make sure that external_as_list is\n+\tnot a reserved word.\n+\t* prj-proc.adb (Expression): Process string list external references.\n+\t* prj-strt.adb (External_Reference): Parse external_as_list external\n+\treferences.\n+\t* prj-tree.ads (Expression_Kind_Of): Allowed for N_External_Value nodes\n+\t(Set_Expression_Kind_Of): Ditto\n+\t* prj.adb (Initialize): Set external_as_list as a reserved word\n+\t* projects.texi: Document new string external reference external_as_list\n+\t* scans.ads (Token_Type): New token Tok_External_As_List\n+\t* snames.ads-tmpl: New standard name Name_External_As_List\n+\n 2010-10-08  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_prag.adb: Minor reformatting."}, {"sha": "a040d30fa23af95202f27ed05b1fbce6521c814e", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -155,9 +155,10 @@ package body ALI.Util is\n       --  recognized as reserved words, but as identifiers. The byte info for\n       --  those names have been set if we are in gnatmake.\n \n-      Set_Name_Table_Byte (Name_Project,  0);\n-      Set_Name_Table_Byte (Name_Extends,  0);\n-      Set_Name_Table_Byte (Name_External, 0);\n+      Set_Name_Table_Byte (Name_Project,          0);\n+      Set_Name_Table_Byte (Name_Extends,          0);\n+      Set_Name_Table_Byte (Name_External,         0);\n+      Set_Name_Table_Byte (Name_External_As_List, 0);\n \n       --  Scan the complete file to compute its checksum\n "}, {"sha": "0553d33ff8a04e0dee8f72e5a55a5309f831c9c8", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 196, "deletions": 38, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -33,6 +33,8 @@ with Prj.Ext;  use Prj.Ext;\n with Prj.Nmsc; use Prj.Nmsc;\n with Snames;\n \n+with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n+\n with GNAT.Case_Util; use GNAT.Case_Util;\n with GNAT.HTable;\n \n@@ -1021,15 +1023,17 @@ package body Prj.Proc is\n                      From_Project_Node_Tree));\n \n                declare\n-                  Name    : constant Name_Id  := Name_Find;\n-                  Default : Name_Id           := No_Name;\n-                  Value   : Name_Id           := No_Name;\n-\n-                  Def_Var : Variable_Value;\n+                  Name     : constant Name_Id   := Name_Find;\n+                  Default  : Name_Id            := No_Name;\n+                  Value    : Name_Id            := No_Name;\n+                  Ext_List : Boolean            := False;\n+                  Str_List : String_List_Access := null;\n+                  Def_Var  : Variable_Value;\n \n                   Default_Node : constant Project_Node_Id :=\n-                    External_Default_Of\n-                      (The_Current_Term, From_Project_Node_Tree);\n+                                   External_Default_Of\n+                                     (The_Current_Term,\n+                                      From_Project_Node_Tree);\n \n                begin\n                   --  If there is a default value for the external reference,\n@@ -1053,19 +1057,132 @@ package body Prj.Proc is\n                      end if;\n                   end if;\n \n-                  Value :=\n-                    Prj.Ext.Value_Of (From_Project_Node_Tree, Name, Default);\n+                  Ext_List := Expression_Kind_Of\n+                               (The_Current_Term,\n+                                From_Project_Node_Tree) = List;\n \n-                  if Value = No_Name then\n-                     if not Quiet_Output then\n-                        Error_Msg\n-                          (Flags, \"?undefined external reference\",\n-                           Location_Of\n-                             (The_Current_Term, From_Project_Node_Tree),\n-                           Project);\n+                  if Ext_List then\n+                     Value :=\n+                       Prj.Ext.Value_Of\n+                         (From_Project_Node_Tree, Name, No_Name);\n+\n+                     if Value /= No_Name then\n+                        declare\n+                           Sep   : constant String :=\n+                                     Get_Name_String (Default);\n+                           First : Positive := 1;\n+                           Lst   : Natural;\n+                           Done  : Boolean := False;\n+                           Nmb   : Natural;\n+\n+                        begin\n+                           Get_Name_String (Value);\n+\n+                           if Name_Len = 0\n+                             or else Sep'Length = 0\n+                             or else Name_Buffer (1 .. Name_Len) = Sep\n+                           then\n+                              Done := True;\n+                           end if;\n+\n+                           if not Done and then Name_Len < Sep'Length then\n+                              Str_List :=\n+                                new String_List'\n+                                  (1 => new String'\n+                                       (Name_Buffer (1 .. Name_Len)));\n+                              Done := True;\n+                           end if;\n+\n+                           if not Done then\n+                              if Name_Buffer (1 .. Sep'Length) = Sep then\n+                                 First := Sep'Length + 1;\n+                              end if;\n+\n+                              if Name_Len - First + 1 >= Sep'Length\n+                                and then\n+                                  Name_Buffer (Name_Len - Sep'Length + 1 ..\n+                                                   Name_Len) = Sep\n+                              then\n+                                 Name_Len := Name_Len - Sep'Length;\n+                              end if;\n+\n+                              if Name_Len = 0 then\n+                                 Str_List :=\n+                                   new String_List'(1 => new String'(\"\"));\n+                                 Done := True;\n+                              end if;\n+                           end if;\n+\n+                           if not Done then\n+                              --  Count the number of string\n+\n+                              declare\n+                                 Saved : constant Positive := First;\n+                              begin\n+\n+                                 Nmb := 1;\n+                                 loop\n+                                    Lst :=\n+                                      Index\n+                                        (Source  =>\n+                                             Name_Buffer (First .. Name_Len),\n+                                         Pattern => Sep);\n+                                    exit when Lst = 0;\n+                                    Nmb := Nmb + 1;\n+                                    First := Lst + Sep'Length;\n+                                 end loop;\n+\n+                                 First := Saved;\n+                              end;\n+\n+                              Str_List := new String_List (1 .. Nmb);\n+\n+                              --  Populate the string list\n+\n+                              Nmb := 1;\n+                              loop\n+                                 Lst :=\n+                                   Index\n+                                     (Source  =>\n+                                          Name_Buffer (First .. Name_Len),\n+                                      Pattern => Sep);\n+\n+                                 if Lst = 0 then\n+                                    Str_List (Nmb) :=\n+                                      new String'\n+                                        (Name_Buffer (First .. Name_Len));\n+                                    exit;\n+\n+                                 else\n+                                    Str_List (Nmb) :=\n+                                      new String'\n+                                        (Name_Buffer (First .. Lst - 1));\n+                                    Nmb := Nmb + 1;\n+                                    First := Lst + Sep'Length;\n+                                 end if;\n+                              end loop;\n+                           end if;\n+                        end;\n                      end if;\n \n-                     Value := Empty_String;\n+                  else\n+                     --  Get the value\n+\n+                     Value :=\n+                       Prj.Ext.Value_Of\n+                         (From_Project_Node_Tree, Name, Default);\n+\n+                     if Value = No_Name then\n+                        if not Quiet_Output then\n+                           Error_Msg\n+                             (Flags, \"?undefined external reference\",\n+                              Location_Of\n+                                (The_Current_Term, From_Project_Node_Tree),\n+                              Project);\n+                        end if;\n+\n+                        Value := Empty_String;\n+                     end if;\n                   end if;\n \n                   case Kind is\n@@ -1074,34 +1191,75 @@ package body Prj.Proc is\n                         null;\n \n                      when Single =>\n-                        Add (Result.Value, Value);\n+                        if Ext_List then\n+                           null; -- error\n \n-                     when List =>\n-                        String_Element_Table.Increment_Last\n-                          (In_Tree.String_Elements);\n+                        else\n+                           Add (Result.Value, Value);\n+                        end if;\n \n-                        if Last = Nil_String then\n-                           Result.Values := String_Element_Table.Last\n+                     when List =>\n+                        if not Ext_List or else Str_List /= null then\n+                           String_Element_Table.Increment_Last\n                              (In_Tree.String_Elements);\n \n-                        else\n-                           In_Tree.String_Elements.Table\n-                             (Last).Next := String_Element_Table.Last\n-                                       (In_Tree.String_Elements);\n-                        end if;\n+                           if Last = Nil_String then\n+                              Result.Values :=\n+                                String_Element_Table.Last\n+                                  (In_Tree.String_Elements);\n \n-                        Last := String_Element_Table.Last\n+                           else\n+                              In_Tree.String_Elements.Table (Last).Next :=\n+                                String_Element_Table.Last\n                                   (In_Tree.String_Elements);\n-                        In_Tree.String_Elements.Table (Last) :=\n-                          (Value    => Value,\n-                           Display_Value => No_Name,\n-                           Location      =>\n-                             Location_Of\n-                               (The_Current_Term, From_Project_Node_Tree),\n-                           Flag     => False,\n-                           Next     => Nil_String,\n-                           Index    => 0);\n+                           end if;\n \n+                           Last :=\n+                             String_Element_Table.Last\n+                               (In_Tree.String_Elements);\n+\n+                           if Ext_List then\n+                              for Ind in Str_List'Range loop\n+                                 Name_Len := 0;\n+                                 Add_Str_To_Name_Buffer (Str_List (Ind).all);\n+                                 Value := Name_Find;\n+                                 In_Tree.String_Elements.Table (Last) :=\n+                                   (Value         => Value,\n+                                    Display_Value => No_Name,\n+                                    Location      =>\n+                                      Location_Of\n+                                        (The_Current_Term,\n+                                         From_Project_Node_Tree),\n+                                    Flag          => False,\n+                                    Next          => Nil_String,\n+                                    Index         => 0);\n+\n+                                 if Ind /= Str_List'Last then\n+                                    String_Element_Table.Increment_Last\n+                                      (In_Tree.String_Elements);\n+                                    In_Tree.String_Elements.Table\n+                                                              (Last).Next :=\n+                                        String_Element_Table.Last\n+                                          (In_Tree.String_Elements);\n+                                    Last :=\n+                                      String_Element_Table.Last\n+                                        (In_Tree.String_Elements);\n+                                 end if;\n+                              end loop;\n+\n+                           else\n+                              In_Tree.String_Elements.Table (Last) :=\n+                                (Value         => Value,\n+                                 Display_Value => No_Name,\n+                                 Location      =>\n+                                   Location_Of\n+                                     (The_Current_Term,\n+                                      From_Project_Node_Tree),\n+                                 Flag          => False,\n+                                 Next          => Nil_String,\n+                                 Index         => 0);\n+                           end if;\n+                        end if;\n                   end case;\n                end;\n "}, {"sha": "aa637386b4fdfe51b81c098681570ce13b1aba30", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -109,6 +109,7 @@ package body Prj.Strt is\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n       External_Value  : out Project_Node_Id;\n+      Expr_Kind       : in out Variable_Kind;\n       Flags           : Processing_Flags);\n    --  Parse an external reference. Current token is \"external\"\n \n@@ -368,23 +369,38 @@ package body Prj.Strt is\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n       External_Value  : out Project_Node_Id;\n+      Expr_Kind       : in out Variable_Kind;\n       Flags           : Processing_Flags)\n    is\n       Field_Id : Project_Node_Id := Empty_Node;\n+      Ext_List : Boolean         := False;\n \n    begin\n       External_Value :=\n         Default_Project_Node\n           (Of_Kind       => N_External_Value,\n-           In_Tree       => In_Tree,\n-           And_Expr_Kind => Single);\n+           In_Tree       => In_Tree);\n       Set_Location_Of (External_Value, In_Tree, To => Token_Ptr);\n \n-      --  The current token is External\n-\n-      --  Get the left parenthesis\n+      --  The current token is either external or external_as_list\n \n+      Ext_List := Token = Tok_External_As_List;\n       Scan (In_Tree);\n+\n+      if Ext_List then\n+         Set_Expression_Kind_Of (External_Value, In_Tree, To => List);\n+      else\n+         Set_Expression_Kind_Of (External_Value, In_Tree, To => Single);\n+      end if;\n+\n+      if Expr_Kind = Undefined then\n+         if Ext_List then\n+            Expr_Kind := List;\n+         else\n+            Expr_Kind := Single;\n+         end if;\n+      end if;\n+\n       Expect (Tok_Left_Paren, \"`(`\");\n \n       --  Scan past the left parenthesis\n@@ -413,6 +429,10 @@ package body Prj.Strt is\n          case Token is\n \n             when Tok_Right_Paren =>\n+               if Ext_List then\n+                  Error_Msg (Flags, \"`,` expected\", Token_Ptr);\n+               end if;\n+\n                Scan (In_Tree); -- scan past right paren\n \n             when Tok_Comma =>\n@@ -448,7 +468,11 @@ package body Prj.Strt is\n                end if;\n \n             when others =>\n-               Error_Msg (Flags, \"`,` or `)` expected\", Token_Ptr);\n+               if Ext_List then\n+                  Error_Msg (Flags, \"`,` expected\", Token_Ptr);\n+               else\n+                  Error_Msg (Flags, \"`,` or `)` expected\", Token_Ptr);\n+               end if;\n          end case;\n       end if;\n    end External_Reference;\n@@ -1493,19 +1517,13 @@ package body Prj.Strt is\n                end if;\n             end if;\n \n-         when Tok_External =>\n-\n-            --  An external reference is always a single string\n-\n-            if Expr_Kind = Undefined then\n-               Expr_Kind := Single;\n-            end if;\n-\n+         when Tok_External | Tok_External_As_List  =>\n             External_Reference\n               (In_Tree         => In_Tree,\n                Flags           => Flags,\n                Current_Project => Current_Project,\n                Current_Package => Current_Package,\n+               Expr_Kind       => Expr_Kind,\n                External_Value  => Reference);\n             Set_Current_Term (Term, In_Tree, To => Reference);\n "}, {"sha": "f1b700bd96212043ef10a1e0097fd67c785e1a9d", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -559,19 +559,20 @@ package body Prj.Tree is\n \n    function Expression_Kind_Of\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Variable_Kind is\n+      In_Tree : Project_Node_Tree_Ref) return Variable_Kind\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n-           and then\n+           and then -- should use Nkind_In here ??? why not???\n              (In_Tree.Project_Nodes.Table (Node).Kind = N_Literal_String\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Variable_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind =\n-                       N_Typed_Variable_Declaration\n+                                                  N_Typed_Variable_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Package_Declaration\n                 or else\n@@ -581,9 +582,9 @@ package body Prj.Tree is\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Variable_Reference\n                 or else\n-              In_Tree.Project_Nodes.Table (Node).Kind =\n-                        N_Attribute_Reference));\n-\n+              In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Reference\n+                or else\n+              In_Tree.Project_Nodes.Table (Node).Kind = N_External_Value));\n       return In_Tree.Project_Nodes.Table (Node).Expr_Kind;\n    end Expression_Kind_Of;\n \n@@ -1837,15 +1838,15 @@ package body Prj.Tree is\n    begin\n       pragma Assert\n         (Present (Node)\n-           and then\n+           and then -- should use Nkind_In here ??? why not???\n              (In_Tree.Project_Nodes.Table (Node).Kind = N_Literal_String\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Variable_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind =\n-                N_Typed_Variable_Declaration\n+                                                  N_Typed_Variable_Declaration\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Package_Declaration\n                 or else\n@@ -1855,8 +1856,9 @@ package body Prj.Tree is\n                 or else\n               In_Tree.Project_Nodes.Table (Node).Kind = N_Variable_Reference\n                 or else\n-              In_Tree.Project_Nodes.Table (Node).Kind =\n-                N_Attribute_Reference));\n+              In_Tree.Project_Nodes.Table (Node).Kind = N_Attribute_Reference\n+                or else\n+              In_Tree.Project_Nodes.Table (Node).Kind = N_External_Value));\n       In_Tree.Project_Nodes.Table (Node).Expr_Kind := To;\n    end Set_Expression_Kind_Of;\n "}, {"sha": "b6ec05413d9d8ad445ad22b24cd811dddaafae76", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -296,7 +296,8 @@ package Prj.Tree is\n    pragma Inline (Expression_Kind_Of);\n    --  Only valid for N_Literal_String, N_Attribute_Declaration,\n    --  N_Variable_Declaration, N_Typed_Variable_Declaration, N_Expression,\n-   --  N_Term, N_Variable_Reference or N_Attribute_Reference nodes.\n+   --  N_Term, N_Variable_Reference, N_Attribute_Reference nodes or\n+   --  N_External_Value.\n \n    function Is_Extending_All\n      (Node    : Project_Node_Id;\n@@ -759,7 +760,8 @@ package Prj.Tree is\n    pragma Inline (Set_Expression_Kind_Of);\n    --  Only valid for N_Literal_String, N_Attribute_Declaration,\n    --  N_Variable_Declaration, N_Typed_Variable_Declaration, N_Expression,\n-   --  N_Term, N_Variable_Reference or N_Attribute_Reference nodes.\n+   --  N_Term, N_Variable_Reference, N_Attribute_Reference or N_External_Value\n+   --  nodes.\n \n    procedure Set_Is_Extending_All\n      (Node    : Project_Node_Id;"}, {"sha": "2c1d0d3b340fe5c95854547dbd4751e61deda234", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -620,9 +620,15 @@ package body Prj is\n          The_Empty_String := Name_Find;\n \n          Prj.Attr.Initialize;\n-         Set_Name_Table_Byte (Name_Project,  Token_Type'Pos (Tok_Project));\n-         Set_Name_Table_Byte (Name_Extends,  Token_Type'Pos (Tok_Extends));\n-         Set_Name_Table_Byte (Name_External, Token_Type'Pos (Tok_External));\n+\n+         Set_Name_Table_Byte\n+           (Name_Project,          Token_Type'Pos (Tok_Project));\n+         Set_Name_Table_Byte\n+           (Name_Extends,          Token_Type'Pos (Tok_Extends));\n+         Set_Name_Table_Byte\n+           (Name_External,         Token_Type'Pos (Tok_External));\n+         Set_Name_Table_Byte\n+           (Name_External_As_List, Token_Type'Pos (Tok_External_As_List));\n       end if;\n \n       if Tree /= No_Project_Tree then"}, {"sha": "c1afd0d83e715856eb5c6aaf0b1e9da3b46253e7", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -2515,6 +2515,11 @@ An external value is an expression whose value is obtained from the command\n that invoked the processing of the current project file (typically a\n gnatmake or gprbuild command).\n \n+There are two kinds of external values, one that returns a single string, and\n+one that returns a string list.\n+\n+The syntax of a single string external value is:\n+\n @smallexample\n external_value ::= @i{external} ( string_literal [, string_literal] )\n @end smallexample\n@@ -2532,7 +2537,7 @@ or be specified on the command line through the\n are specified, then the command line value is used, so that a user can more\n easily override the value.\n \n-The function @code{external} always returns a string, possibly empty if the\n+The function @code{external} always returns a string. It is an error if the\n value was not found in the environment and no default was specified in the\n call to @code{external}.\n \n@@ -2545,6 +2550,42 @@ are then used in @b{case} statements to control the value assigned to\n attributes in various scenarios. Thus such variables are often called\n @b{scenario variables}.\n \n+The syntax for a string list external value is:\n+\n+@smallexample\n+external_value ::= @i{external_as_list} ( string_literal , string_literal )\n+@end smallexample\n+\n+@noindent\n+The first string_literal is the string to be used on the command line or\n+in the environment to specify the external value. The second string_literal is\n+the separator between each component of the string list.\n+\n+If the external value does not exist in the environment or on the command line,\n+the result is an empty list. This is also the case, if the separator is an\n+empty string or if the external value is only one separator.\n+\n+Any separator at the beginning or at the end of the external value is\n+discarded. Then, if there is no separator in the external vaue, the result is\n+a string list with only one string. Otherwise, any string between the biginning\n+and the first separator, between two consecutive separators and between the\n+last separator and the end are components of the string list.\n+\n+@smallexample\n+   @i{external_as_list} (\"SWITCHES\", \",\")\n+@end smallexample\n+\n+@noindent\n+If the external value is \"-O2,-g\", the result is (\"-O2\", \"-g\").\n+\n+If the external value is \",-O2,-g,\", the result is also (\"-O2\", \"-g\").\n+\n+if the external value is \"-gnav\", the result is (\"-gnatv\").\n+\n+If the external value is \",,\", the result is (\"\").\n+\n+If the external value is \",\", the result is (), the empty string list.\n+\n @c ---------------------------------------------\n @node Typed String Declaration\n @subsection Typed String Declaration"}, {"sha": "7d891190b6bd5125e048f3b187f6fa43a9453575", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -192,7 +192,8 @@ package Scans is\n       Tok_Project,\n       Tok_Extends,\n       Tok_External,\n-      --  These three entries represent keywords for the project file language\n+      Tok_External_As_List,\n+      --  These four entries represent keywords for the project file language\n       --  and can be returned only in the case of scanning project files.\n \n       Tok_Comment,"}, {"sha": "3a4eecf9ec3e718125a079e59ab1cc1a9ef3721c", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -13738,16 +13738,15 @@ package body Sem_Ch3 is\n              (not Is_Interface (Parent_Type)\n                or else not Is_Limited_Interface (Parent_Type))\n          then\n-\n-            --  AI05-0096 : a derivation in the private part of an instance is\n+            --  AI05-0096: a derivation in the private part of an instance is\n             --  legal if the generic formal is untagged limited, and the actual\n             --  is non-limited.\n \n             if Is_Generic_Actual_Type (Parent_Type)\n               and then In_Private_Part (Current_Scope)\n               and then\n                 not Is_Tagged_Type\n-                  (Generic_Parent_Type (Parent (Parent_Type)))\n+                      (Generic_Parent_Type (Parent (Parent_Type)))\n             then\n                null;\n "}, {"sha": "2bb291ff35f39f8cafba62e0f0be9587133552f1", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef23710410fd2e10867efdcf7cfd6a35171c9fab/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=ef23710410fd2e10867efdcf7cfd6a35171c9fab", "patch": "@@ -1063,6 +1063,7 @@ package Snames is\n    Name_Executable                       : constant Name_Id := N + $;\n    Name_Executable_Suffix                : constant Name_Id := N + $;\n    Name_Extends                          : constant Name_Id := N + $;\n+   Name_External_As_List                 : constant Name_Id := N + $;\n    Name_Externally_Built                 : constant Name_Id := N + $;\n    Name_Finder                           : constant Name_Id := N + $;\n    Name_Global_Compilation_Switches      : constant Name_Id := N + $;"}]}