{"sha": "250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "node_id": "C_kwDOANBUbNoAKDI1MGIxZmExOWQ3NmIzZTJmN2ExNzViNmI5ZWU2MDg2ZmI1NDhiZmU", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-08-15T11:43:29Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-08-15T19:35:09Z"}, "message": "d: Build internal TypeInfo types when module name is \"object\"\n\nIf for whatever reason the module declaration doesn't exist in the\nobject file, ensure that the internal definitions for TypeInfo and\nTypeInfo_Class are still created, otherwise an ICE could occur later if\nthey are required for a run-time helper call.\n\ngcc/d/ChangeLog:\n\n\t* d-compiler.cc (Compiler::onParseModule): Call create_tinfo_types\n\twhen module name is object.\n\t* typeinfo.cc (create_tinfo_types): Add guard for multiple\n\tinvocations.", "tree": {"sha": "23957e10c00ddc20bfd237aab21b051fb9f157d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23957e10c00ddc20bfd237aab21b051fb9f157d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb12ee6fb75be4f980a235dc3f28a29ecc80de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb12ee6fb75be4f980a235dc3f28a29ecc80de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb12ee6fb75be4f980a235dc3f28a29ecc80de0"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "ef19df12437a4a4ddfc80d261f2e8045db96db2b", "filename": "gcc/d/d-compiler.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe/gcc%2Fd%2Fd-compiler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe/gcc%2Fd%2Fd-compiler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-compiler.cc?ref=250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "patch": "@@ -130,8 +130,7 @@ Compiler::onParseModule (Module *m)\n     {\n       if (md->packages.length == 0)\n \t{\n-\t  Identifier *id = (md && md->id) ? md->id : m->ident;\n-\t  if (!strcmp (id->toChars (), \"object\"))\n+\t  if (!strcmp (md->id->toChars (), \"object\"))\n \t    {\n \t      create_tinfo_types (m);\n \t      return;\n@@ -147,6 +146,14 @@ Compiler::onParseModule (Module *m)\n \t    }\n \t}\n     }\n+  else if (m->ident)\n+    {\n+      if (!strcmp (m->ident->toChars (), \"object\"))\n+\t{\n+\t  create_tinfo_types (m);\n+\t  return;\n+\t}\n+    }\n \n   if (!flag_no_builtin)\n     d_add_builtin_module (m);"}, {"sha": "3577f669ed18d551b3087f581801372f4c8aa779", "filename": "gcc/d/typeinfo.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe/gcc%2Fd%2Ftypeinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe/gcc%2Fd%2Ftypeinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftypeinfo.cc?ref=250b1fa19d76b3e2f7a175b6b9ee6086fb548bfe", "patch": "@@ -244,6 +244,10 @@ make_frontend_typeinfo (Identifier *ident, ClassDeclaration *base = NULL)\n void\n create_tinfo_types (Module *mod)\n {\n+  /* Already generated internal types for the object module.  */\n+  if (object_module != NULL)\n+    return;\n+\n   /* Build the internal TypeInfo and ClassInfo types.\n      See TypeInfoVisitor for documentation of field layout.  */\n   make_internal_typeinfo (TK_TYPEINFO_TYPE, Identifier::idPool (\"TypeInfo\"),"}]}