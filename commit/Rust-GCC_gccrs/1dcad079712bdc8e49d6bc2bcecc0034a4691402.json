{"sha": "1dcad079712bdc8e49d6bc2bcecc0034a4691402", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjYWQwNzk3MTJiZGM4ZTQ5ZDZiYzJiY2VjYzAwMzRhNDY5MTQwMg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2011-06-07T14:00:13Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-06-07T14:00:13Z"}, "message": "config.gcc: Unify V850 architecture options and add support for newer V850 architectures.\n\n\t* config.gcc: Unify V850 architecture options and add support for\n\tnewer V850 architectures.\n\t* config/v850/t-v850e: Delete.\n\nFrom-SVN: r174744", "tree": {"sha": "f83009af2ecd65b2c59c14143ee7ca574f36373d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f83009af2ecd65b2c59c14143ee7ca574f36373d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dcad079712bdc8e49d6bc2bcecc0034a4691402", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcad079712bdc8e49d6bc2bcecc0034a4691402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcad079712bdc8e49d6bc2bcecc0034a4691402", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcad079712bdc8e49d6bc2bcecc0034a4691402/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "009db074870ccdf44bafc9d3f604246ddb80974b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009db074870ccdf44bafc9d3f604246ddb80974b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009db074870ccdf44bafc9d3f604246ddb80974b"}], "stats": {"total": 277, "additions": 111, "deletions": 166}, "files": [{"sha": "812b9be768fb004a63a95fe0dd7d68cb2f1180d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dcad079712bdc8e49d6bc2bcecc0034a4691402", "patch": "@@ -1,3 +1,9 @@\n+2011-06-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config.gcc: Unify V850 architecture options and add support for\n+\tnewer V850 architectures.\n+\t* config/v850/t-v850e: Delete.\n+\n 2011-06-07  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.c (build_common_tree_nodes): Also initialize size_type_node."}, {"sha": "5d88d1bf60d0fdc9ff6c40ff40192cbc293240ae", "filename": "gcc/config.gcc", "status": "modified", "additions": 25, "deletions": 38, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=1dcad079712bdc8e49d6bc2bcecc0034a4691402", "patch": "@@ -2559,29 +2559,28 @@ spu-*-elf*)\n \tc_target_objs=\"${c_target_objs} spu-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} spu-c.o\"\n \t;;\n-v850e1-*-*)\n-\ttarget_cpu_default=\"TARGET_CPU_v850e1\"\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h v850/v850.h\"\n-\ttm_p_file=v850/v850-protos.h\n-\ttmake_file=v850/t-v850e\n-\tmd_file=v850/v850.md\n-\textra_modes=v850/v850-modes.def\n-\tout_file=v850/v850.c\n-\textra_options=\"${extra_options} v850/v850.opt\"\n-\tif test x$stabs = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} dbx.h\"\n-\tfi\n-\tuse_collect2=no\n-\tc_target_objs=\"v850-c.o\"\n-\tcxx_target_objs=\"v850-c.o\"\n-\tuse_gcc_stdint=wrap\n-\t;;\n-v850e-*-*)\n-\ttarget_cpu_default=\"TARGET_CPU_v850e\"\n+\n+v850*-*-*)\n+\tcase ${target} in\n+\tv850e2v3-*-*)\n+\t\ttarget_cpu_default=\"TARGET_CPU_v850e2v3\"\n+\t\t;;\n+\tv850e2-*-*)\n+\t\ttarget_cpu_default=\"TARGET_CPU_v850e2\"\n+\t\t;;\n+\tv850e1-*-* | v850es-*-*)\n+\t\ttarget_cpu_default=\"TARGET_CPU_v850e1\"\n+\t\t;;\n+\tv850e-*-*)\n+\t\ttarget_cpu_default=\"TARGET_CPU_v850e\"\n+\t\t;;\n+\tv850-*-*)\n+\t\ttarget_cpu_default=\"TARGET_CPU_generic\"\n+\t\t;;\n+\tesac\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h v850/v850.h\"\n \ttm_p_file=v850/v850-protos.h\n-\ttmake_file=v850/t-v850e\n+\ttmake_file=v850/t-v850\n \tmd_file=v850/v850.md\n \textra_modes=v850/v850-modes.def\n \tout_file=v850/v850.c\n@@ -2595,19 +2594,6 @@ v850e-*-*)\n \tcxx_target_objs=\"v850-c.o\"\n \tuse_gcc_stdint=wrap\n \t;;\n-v850-*-*)\n-\ttarget_cpu_default=\"TARGET_CPU_generic\"\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n-\ttmake_file=v850/t-v850\n-\tif test x$stabs = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} dbx.h\"\n-\tfi\n-\tuse_collect2=no\n-\tc_target_objs=\"v850-c.o\"\n-\tcxx_target_objs=\"v850-c.o\"\n-\tuse_gcc_stdint=wrap\n-\t;;\n vax-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h vax/elf.h vax/linux.h\"\n \textra_options=\"${extra_options} vax/elf.opt\"\n@@ -3493,7 +3479,7 @@ case \"${target}\" in\n \tv850*-*-*)\n \t\tsupported_defaults=cpu\n \t\tcase ${with_cpu} in\n-\t\t\"\" | v850e | v850e1)\n+\t\t\"\" | v850e | v850e1 | v850e2 | v850es | v850e2v3)\n \t\t\t# OK\n \t\t\t;;\n \t\t*)\n@@ -3621,14 +3607,15 @@ case ${target} in\n \t\t;;\n \n \tv850*-*-*)\n-\t\t# FIXME: The v850 is \"special\" in that it does not support\n-\t\t# runtime CPU selection, only --with-cpu.\n \t\tcase \"x$with_cpu\" in\n \t\tx)\n \t\t\t;;\n-\t\txv850e)\n+\t\txv850e | xv850e1 | xv850e2 | xv850e2v3)\n \t\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n \t\t\t;;\n+\t\txv850es)\n+\t\t\ttarget_cpu_default2=\"TARGET_CPU_v850e1\"\n+\t\t\t;;\n \t\tesac\n \t\t;;\n esac"}, {"sha": "1eb7685208156c2c4137f10baf4c5ea2f2ff22a6", "filename": "gcc/config/v850/t-v850e", "status": "removed", "additions": 0, "deletions": 112, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009db074870ccdf44bafc9d3f604246ddb80974b/gcc%2Fconfig%2Fv850%2Ft-v850e", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009db074870ccdf44bafc9d3f604246ddb80974b/gcc%2Fconfig%2Fv850%2Ft-v850e", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850e?ref=009db074870ccdf44bafc9d3f604246ddb80974b", "patch": "@@ -1,112 +0,0 @@\n-# Copyright (C) 2003, 2008, 2009, 2010 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-LIB1ASMSRC = v850/lib1funcs.asm\n-LIB1ASMFUNCS\t= _mulsi3 \\\n-\t\t  _divsi3 \\\n-\t\t  _udivsi3 \\\n-\t\t  _modsi3 \\\n-\t\t  _umodsi3 \\\n-\t\t  _save_2 \\\n-\t\t  _save_20 \\\n-\t\t  _save_21 \\\n-\t\t  _save_22 \\\n-\t\t  _save_23 \\\n-\t\t  _save_24 \\\n-\t\t  _save_25 \\\n-\t\t  _save_26 \\\n-\t\t  _save_27 \\\n-\t\t  _save_28 \\\n-\t\t  _save_29 \\\n-\t\t  _save_2c \\\n-\t\t  _save_20c \\\n-\t\t  _save_21c \\\n-\t\t  _save_22c \\\n-\t\t  _save_23c \\\n-\t\t  _save_24c \\\n-\t\t  _save_25c \\\n-\t\t  _save_26c \\\n-\t\t  _save_27c \\\n-\t\t  _save_28c \\\n-\t\t  _save_29c \\\n-\t\t  _save_31c \\\n-\t\t  _save_interrupt \\\n-\t\t  _save_all_interrupt \\\n-                  _callt_save_20 \\\n-\t\t  _callt_save_21 \\\n-\t\t  _callt_save_22 \\\n-\t\t  _callt_save_23 \\\n-\t\t  _callt_save_24 \\\n-\t\t  _callt_save_25 \\\n-\t\t  _callt_save_26 \\\n-\t\t  _callt_save_27 \\\n-\t\t  _callt_save_28 \\\n-\t\t  _callt_save_29 \\\n-\t\t  _callt_save_20c \\\n-\t\t  _callt_save_21c \\\n-\t\t  _callt_save_22c \\\n-\t\t  _callt_save_23c \\\n-\t\t  _callt_save_24c \\\n-\t\t  _callt_save_25c \\\n-\t\t  _callt_save_26c \\\n-\t\t  _callt_save_27c \\\n-\t\t  _callt_save_28c \\\n-\t\t  _callt_save_29c \\\n-\t\t  _callt_save_31c \\\n-\t\t  _callt_save_interrupt \\\n-\t\t  _callt_save_all_interrupt \\\n-\t\t  _callt_save_r2_r29 \\\n-\t\t  _callt_save_r2_r31 \\\n-\t\t  _negdi2 \\\n-\t\t  _cmpdi2 \\\n-\t\t  _ucmpdi2 \\\n-\t\t  _muldi3\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>dp-bit.c\n-\techo '#endif' \t\t>> dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#ifdef __LITTLE_ENDIAN__' >> fp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>fp-bit.c\n-\techo '#endif' \t\t>> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-# Create target-specific versions of the libraries\n-MULTILIB_OPTIONS  = mv850\n-MULTILIB_DIRNAMES = v850\n-INSTALL_LIBGCC    = install-multilib\n-\n-TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n-\n-v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) $(GGC_H) $(TM_P_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/v850/v850-c.c \n-\n-# Local Variables:\n-# mode: Makefile\n-# End:"}, {"sha": "cb31f9aa381ff9f4ad82834821696a5ad93e0376", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=1dcad079712bdc8e49d6bc2bcecc0034a4691402", "patch": "@@ -118,9 +118,18 @@ v850_handle_option (struct gcc_options *opts,\n \n     case OPT_mv850e:\n     case OPT_mv850e1:\n+    case OPT_mv850es:\n       opts->x_target_flags &= ~(MASK_CPU ^ MASK_V850E);\n       return true;\n \n+    case OPT_mv850e2:\n+      opts->x_target_flags &= ~(MASK_CPU ^ MASK_V850E2);\n+      return true;\n+\n+    case OPT_mv850e2v3:\n+      opts->x_target_flags &= ~(MASK_CPU ^ MASK_V850E2V3);\n+      return true;\n+\n     case OPT_mtda_:\n       v850_handle_memory_option (SMALL_MEMORY_TDA, opts,\n \t\t\t\t decoded->orig_option_with_args_text,\n@@ -3130,6 +3139,23 @@ v850_legitimate_constant_p (enum machine_mode mode ATTRIBUTE_UNUSED, rtx x)\n \t       && GET_CODE (XEXP (XEXP (x, 0), 1)) == CONST_INT\n \t       && !CONST_OK_FOR_K (INTVAL (XEXP (XEXP (x, 0), 1)))));\n }\n+\n+static int\n+v850_memory_move_cost (enum machine_mode mode, bool in)\n+{\n+  switch (GET_MODE_SIZE (mode))\n+    {\n+    case 0:\n+      return in ? 24 : 8;\n+    case 1:\n+    case 2:\n+    case 3:\n+    case 4:\n+      return in ? 6 : 2;\n+    default:\n+      return (GET_MODE_SIZE (mode) / 2) * (in ? 3 : 1);\n+    }\n+}\n \f\n /* V850 specific attributes.  */\n \n@@ -3151,6 +3177,10 @@ static const struct attribute_spec v850_attribute_table[] =\n };\n \f\n /* Initialize the GCC target structure.  */\n+\n+#undef  TARGET_MEMORY_MOVE_COST\n+#define TARGET_MEMORY_MOVE_COST v850_memory_move_cost\n+\n #undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.hword\\t\"\n "}, {"sha": "6595a2e65cbdf9d66d55a30bf850e65fb4d6151b", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=1dcad079712bdc8e49d6bc2bcecc0034a4691402", "patch": "@@ -113,7 +113,7 @@ extern GTY(()) rtx v850_compare_op1;\n     builtin_define (\"__EP__\");\t\t\t\\\n } while(0)\n \n-#define MASK_CPU (MASK_V850 | MASK_V850E)\n+#define MASK_CPU (MASK_V850 | MASK_V850E | MASK_V850E1 | MASK_V850E2 | MASK_V850E2V3)\n \f\n /* Target machine storage layout */\n \n@@ -156,7 +156,7 @@ extern GTY(()) rtx v850_compare_op1;\n \n /* Allocation boundary (in *bits*) for the code of a function.\n    16 is the minimum boundary; 32 would give better performance.  */\n-#define FUNCTION_BOUNDARY 16\n+#define FUNCTION_BOUNDARY (optimize_size ? 16 : 32)\n \n /* No data type wants to be aligned rounder than this.  */\n #define BIGGEST_ALIGNMENT\t32"}, {"sha": "cae929da79469d7ec22c7e5b34bf026059602755", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 48, "deletions": 14, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcad079712bdc8e49d6bc2bcecc0034a4691402/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=1dcad079712bdc8e49d6bc2bcecc0034a4691402", "patch": "@@ -232,7 +232,7 @@\n \n (define_insn \"*movsi_high\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(high:SI (match_operand 1 \"\" \"\")))]\n+\t(high:SI (match_operand 1 \"immediate_operand\" \"i\")))]\n   \"\"\n   \"movhi hi(%1),%.,%0\"\n   [(set_attr \"length\" \"4\")\n@@ -543,8 +543,13 @@\n \t(mod:SI (match_dup 1)\n \t\t(match_dup 2)))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_V850E\"\n-  \"div %2,%0,%3\"\n+  \"TARGET_V850E || TARGET_V850E2_ALL\"\n+  {\n+   if (TARGET_V850E2_ALL)\n+     return \"divq %2,%0,%3\";\n+   else\n+     return \"div %2,%0,%3\";\n+  }\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")\n    (set_attr \"type\" \"div\")])\n@@ -557,8 +562,13 @@\n \t(umod:SI (match_dup 1)\n \t\t (match_dup 2)))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_V850E\"\n-  \"divu %2,%0,%3\"\n+  \"TARGET_V850E || TARGET_V850E2_ALL\"\n+  {\n+    if (TARGET_V850E2_ALL)\n+      return \"divqu %2,%0,%3\";\n+   else\n+      return \"divu %2,%0,%3\";\n+  }\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")\n    (set_attr \"type\" \"div\")])\n@@ -574,7 +584,7 @@\n \t(mod:HI (match_dup 1)\n \t\t(match_dup 2)))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_V850E\"\n+  \"TARGET_V850E || TARGET_V850E2_ALL\"\n   \"divh %2,%0,%3\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")\n@@ -591,7 +601,7 @@\n \t(umod:HI (match_dup 1)\n \t\t (match_dup 2)))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_V850E\"\n+  \"TARGET_V850E || TARGET_V850E2_ALL\"\n   \"zxh %0 ; divhu %2,%0,%3\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")\n@@ -1501,7 +1511,7 @@\n ;; EXTEND INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_insn \"\"\n+(define_insn \"*zero_extendhisi2_v850e\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI\n         (match_operand:HI 1 \"nonimmediate_operand\" \"0,r,T,m\")))\n@@ -1515,17 +1525,29 @@\n   [(set_attr \"length\" \"2,4,2,4\")\n    (set_attr \"cc\" \"none_0hit,set_zn,none_0hit,none_0hit\")])\n \n-(define_insn \"zero_extendhisi2\"\n+(define_insn \"*zero_extendhisi2_v850\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI\n \t(match_operand:HI 1 \"register_operand\" \"r\")))\n-   (clobber (reg:CC CC_REGNUM))]\n+   (clobber (reg:CC CC_REGNUM))]  ;; A lie, but we have to match the expander\n   \"\"\n   \"andi 65535,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_insn \"\"\n+(define_expand \"zero_extendhisi2\"\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\")\n+\t\t   (zero_extend:SI\n+\t\t    (match_operand:HI 1 \"nonimmediate_operand\")))\n+\t      (clobber (reg:CC CC_REGNUM))])]\n+  \"\"\n+  {\n+    if (! (TARGET_V850E || TARGET_V850E2_ALL))\n+      operands[1] = force_reg (HImode, operands[1]);\n+  }\n+)\n+\n+(define_insn \"*zero_extendqisi2_v850e\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI\n \t(match_operand:QI 1 \"nonimmediate_operand\" \"0,r,T,m\")))\n@@ -1539,16 +1561,28 @@\n   [(set_attr \"length\" \"2,4,2,4\")\n    (set_attr \"cc\" \"none_0hit,set_zn,none_0hit,none_0hit\")])\n \n-(define_insn \"zero_extendqisi2\"\n+(define_insn \"*zero_extendqisi2_v850\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI\n-\t(match_operand:QI 1 \"register_operand\" \"r\")))\n-   (clobber (reg:CC CC_REGNUM))]\n+\t (match_operand:QI 1 \"register_operand\" \"r\")))\n+   (clobber (reg:CC CC_REGNUM))] ;; A lie, but we have to match the expander\n   \"\"\n   \"andi 255,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_zn\")])\n \n+(define_expand \"zero_extendqisi2\"\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\")\n+\t\t   (zero_extend:SI\n+\t\t     (match_operand:QI 1 \"nonimmediate_operand\")))\n+\t      (clobber (reg:CC CC_REGNUM))])]\n+  \"\"\n+  {\n+    if (! (TARGET_V850E || TARGET_V850E2_ALL))\n+      operands[1] = force_reg (QImode, operands[1]);\n+  }\n+)\n+\n ;;- sign extension instructions\n \n ;; ??? The extendhisi2 pattern should not emit shifts for v850e?"}]}