{"sha": "e07ded7bf92a813f96e6932cca384a83a089f720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3ZGVkN2JmOTJhODEzZjk2ZTY5MzJjY2EzODRhODNhMDg5ZjcyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-23T14:21:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-23T14:21:46Z"}, "message": "re PR tree-optimization/59154 (internal compiler error: tree check: expected ssa_name, have integer_cst)\n\n\tPR tree-optimization/59154\n\t* tree-ssa-reassoc.c (maybe_optimize_range_tests): When changing\n\trhs1 of a cast and new_op is invariant, fold_convert it.\n\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Only call\n\tsimplify_conversion_from_bitmask if rhs1 is a SSA_NAME.\n\nFrom-SVN: r205307", "tree": {"sha": "3588f3e5d92d09b275560f857be2669c3ba82fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3588f3e5d92d09b275560f857be2669c3ba82fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07ded7bf92a813f96e6932cca384a83a089f720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ded7bf92a813f96e6932cca384a83a089f720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07ded7bf92a813f96e6932cca384a83a089f720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ded7bf92a813f96e6932cca384a83a089f720/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b84acf541bfbc444da9cad9cee0d17c1746b240a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84acf541bfbc444da9cad9cee0d17c1746b240a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b84acf541bfbc444da9cad9cee0d17c1746b240a"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "d1f7f6ecab159d7eb45647b6b00614948a6b8cd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e07ded7bf92a813f96e6932cca384a83a089f720", "patch": "@@ -1,3 +1,11 @@\n+2013-11-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59154\n+\t* tree-ssa-reassoc.c (maybe_optimize_range_tests): When changing\n+\trhs1 of a cast and new_op is invariant, fold_convert it.\n+\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Only call\n+\tsimplify_conversion_from_bitmask if rhs1 is a SSA_NAME.\n+\n 2013-11-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/56788"}, {"sha": "6e6d11563e553c04d263e3ef07eccfaeb80f051e", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=e07ded7bf92a813f96e6932cca384a83a089f720", "patch": "@@ -3548,7 +3548,8 @@ ssa_forward_propagate_and_combine (void)\n \t\t      {\n \t\t\ttree outer_type = TREE_TYPE (gimple_assign_lhs (stmt));\n \t\t\ttree inner_type = TREE_TYPE (gimple_assign_rhs1 (stmt));\n-\t\t\tif (INTEGRAL_TYPE_P (outer_type)\n+\t\t\tif (TREE_CODE (gimple_assign_rhs1 (stmt)) == SSA_NAME\n+\t\t\t    && INTEGRAL_TYPE_P (outer_type)\n \t\t\t    && INTEGRAL_TYPE_P (inner_type)\n \t\t\t    && (TYPE_PRECISION (outer_type)\n \t\t\t\t<= TYPE_PRECISION (inner_type)))"}, {"sha": "7145559d697b58f5806c7fcd737b666bea25d787", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ded7bf92a813f96e6932cca384a83a089f720/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=e07ded7bf92a813f96e6932cca384a83a089f720", "patch": "@@ -2935,9 +2935,15 @@ maybe_optimize_range_tests (gimple stmt)\n \t\t      tree new_lhs = make_ssa_name (TREE_TYPE (lhs), NULL);\n \t\t      enum tree_code rhs_code\n \t\t\t= gimple_assign_rhs_code (cast_stmt);\n-\t\t      gimple g\n-\t\t\t= gimple_build_assign_with_ops (rhs_code, new_lhs,\n-\t\t\t\t\t\t\tnew_op, NULL_TREE);\n+\t\t      gimple g;\n+\t\t      if (is_gimple_min_invariant (new_op))\n+\t\t\t{\n+\t\t\t  new_op = fold_convert (TREE_TYPE (lhs), new_op);\n+\t\t\t  g = gimple_build_assign (new_lhs, new_op);\n+\t\t\t}\n+\t\t      else\n+\t\t\tg = gimple_build_assign_with_ops (rhs_code, new_lhs,\n+\t\t\t\t\t\t\t  new_op, NULL_TREE);\n \t\t      gimple_stmt_iterator gsi = gsi_for_stmt (cast_stmt);\n \t\t      gimple_set_uid (g, gimple_uid (cast_stmt));\n \t\t      gimple_set_visited (g, true);"}]}