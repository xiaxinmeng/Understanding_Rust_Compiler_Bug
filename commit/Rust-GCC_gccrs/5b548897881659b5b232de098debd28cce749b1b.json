{"sha": "5b548897881659b5b232de098debd28cce749b1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI1NDg4OTc4ODE2NTliNWIyMzJkZTA5OGRlYmQyOGNjZTc0OWIxYg==", "commit": {"author": {"name": "Dennis Glatting", "email": "dennisg@gnu.org", "date": "1991-11-16T15:57:35Z"}, "committer": {"name": "Dennis Glatting", "email": "dennisg@gnu.org", "date": "1991-11-16T15:57:35Z"}, "message": "changed the defs for class structures for new implementation of run-time.\n\nchanged def of SEL back to its original type.\n\nFrom-SVN: r61", "tree": {"sha": "5ccce460987d28a07aa2909d17d7dd526207dc1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ccce460987d28a07aa2909d17d7dd526207dc1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b548897881659b5b232de098debd28cce749b1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b548897881659b5b232de098debd28cce749b1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b548897881659b5b232de098debd28cce749b1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b548897881659b5b232de098debd28cce749b1b/comments", "author": null, "committer": null, "parents": [{"sha": "defc614f046a261be356c9fad32ec1cf3c8ce58e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/defc614f046a261be356c9fad32ec1cf3c8ce58e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/defc614f046a261be356c9fad32ec1cf3c8ce58e"}], "stats": {"total": 87, "additions": 47, "deletions": 40}, "files": [{"sha": "553f20272984e66b7dfc5db438a49fb065014baa", "filename": "gcc/objc/objc.h", "status": "modified", "additions": 47, "deletions": 40, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b548897881659b5b232de098debd28cce749b1b/gcc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b548897881659b5b232de098debd28cce749b1b/gcc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc.h?ref=5b548897881659b5b232de098debd28cce749b1b", "patch": "@@ -19,10 +19,13 @@\n  * along with this program; if not, write to the Free Software\n  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n  * \n-  $Header: /usr/user/dennis_glatting/ObjC/c-runtime/include/RCS/ObjC.h,v 0.1 1991/10/24 00:19:24 dennisg Exp dennisg $\n+  $Header: /usr/user/dennis_glatting/ObjC/c-runtime/include/RCS/ObjC.h,v 0.2 1991/11/07 22:31:42 dennisg Exp dennisg $\n   $Author: dennisg $\n-  $Date: 1991/10/24 00:19:24 $\n+  $Date: 1991/11/07 22:31:42 $\n   $Log: ObjC.h,v $\n+ * Revision 0.2  1991/11/07  22:31:42  dennisg\n+ * added copyleft.\n+ *\n  * Revision 0.1  1991/10/24  00:19:24  dennisg\n  * Initial check in.  Preliminary development stage.\n  *\n@@ -53,12 +56,18 @@ typedef char  BOOL;\n #define YES   (BOOL)1\n #define NO    (BOOL)0\n \n-                                                /* Defination of a \n+                                                /* Definition of a \n                                                   selector.  Selectors are \n                                                   really of type char*. The\n-                                                  run-time uses strcmp() to\n-                                                  locate selectors. */\n-typedef STR   SEL;\n+                                                  run-time hashes the \n+                                                  string's address to locate\n+                                                  the method.  If the method\n+                                                  isn't in the hash table then\n+                                                  a search is made through the \n+                                                  class hierarchy using \n+                                                  strcmp() to locate the\n+                                                  method. */\n+typedef struct objc_selector*   SEL;\n \n                                                 /* ObjC uses this typedef \n                                                   for untyped instances. */\n@@ -68,11 +77,7 @@ typedef struct objc_object {\n \n                                                 /* Prototype for method \n                                                   functions. */\n-typedef id  ( *IMP )( \n-#ifdef __STDC__\n-  id, SEL, ...\n-#endif\n-); \n+typedef id  ( *IMP )( id, SEL, ... ); \n \n                                                 /* Filer types used to \n                                                   describe Ivars and \n@@ -163,10 +168,8 @@ typedef struct objc_symtab {\n  *  module structure of the executable. \n  */\n typedef struct objc_module {\n-  u_long    version;                            /* Unknown. */\n-  u_long    size;                               /* Suspect this is \n-                                                  sizeof(Module).  It is always \n-                                                  16. */\n+  u_long    version;                            /* Compiler revision. */\n+  u_long    size;                               /* sizeof(Module). */\n   char*     name;                               /* Name of the file where the \n                                                   module was generated.   The \n                                                   name includes the path. */\n@@ -250,25 +253,27 @@ typedef struct objc_method_list {\n  *  \n  * This structure is generated by the compiler in the\n  *  executable and used by the run-time during normal\n- *  messaging operations.  Therefore some definitions \n- *  don't make sense in some contexts.\n+ *  messaging operations.  Therefore some members \n+ *  change type.\n+ * The compiler generates \"char* const\" and places a string\n+ *\tin the following member variables:  isa and super_class.\n  */\n typedef struct objc_metaClass {     \n-  char*         isa;                          /* Always a pointer to the\n-                                                string \"Object\". */\n-  char*         super_class;                  /* Name of the class's super\n-                                                class. */\n-  char*         name;                         /* Name of the meta class. */\n-  long          version;                      /* Unknown. */\n-  long          info;                         /* Bit mask.  See class masks \n+  struct objc_metaClass*\tisa;                /* Pointer to Object meta\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass. */\n+  struct objc_metaClass*\tsuper_class;        /* Pointer to meta class's\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuper meta class. */\n+  char*         \t\t\t\t\tname;               /* Name of the meta class. */\n+  long         \t\t\t\t\t \tversion;            /* Unknown. */\n+  long          \t\t\t\t\tinfo;               /* Bit mask.  See class masks \n                                                 defined above. */\n-  long          instance_size;                /* Always 0 except for Object.\n+  long          \t\t\t\t\tinstance_size;      /* Always 0 except for Object.\n                                                 Should be ignored. */\n-  IvarList_t    ivars;                        /* Always NULL except for \n+  IvarList_t    \t\t\t\t\tivars;              /* Always NULL except for \n                                                 Object.  Should be ignored. */\n-  MethodList_t  methods;                      /* Linked List of factory methods \n+  MethodList_t \t\t\t\t\t \tmethods;            /* Linked List of factory methods \n                                                 for the class. */\n-  Cache_t       cache;                        /* Used to cache factory methods\n+  Cache_t       \t\t\t\t\tcache;              /* Used to cache factory methods\n                                                 defined for the class and its \n                                                 super classes.  Entries are\n                                                 made to the cache as the\n@@ -284,33 +289,35 @@ typedef struct objc_metaClass {\n  *  \n  * This structure is generated by the compiler in the\n  *  executable and used by the run-time during normal\n- *  messaging operations.  Therefore some definitions \n- *  don't make sense in some contexts.\n+ *  messaging operations.  Therefore some members \n+ *  change type.\n+ * The compiler generates \"char* const\" and places a string\n+ *\tin the following member variables:  super_class.\n  */\n typedef struct objc_class {     \n-  MetaClass_t   isa;                          /* Pointer to the class's\n+  MetaClass_t   \t\t\tisa;                    /* Pointer to the class's\n                                                 meta class. */\n-  char*         super_class;                  /* Name of the class's super\n-                                                class. */\n-  char*         name;                         /* Name of the class. */\n-  long          version;                      /* Unknown. */\n-  long          info;                         /* Bit mask.  See class masks \n+  struct objc_class*\tsuper_class;            /* Pointer to the super \n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass. */\n+  char*         \t\t\tname;                   /* Name of the class. */\n+  long          \t\t\tversion;                /* Unknown. */\n+  long          \t\t\tinfo;                   /* Bit mask.  See class masks \n                                                 defined above. */\n-  long          instance_size;                /* Size in bytes of the class.  \n+  long          \t\t\tinstance_size;          /* Size in bytes of the class.  \n                                                 The sum of the class definition \n                                                 and all super class \n                                                 definitions. */\n-  IvarList_t    ivars;                        /* Pointer to a structure that\n+  IvarList_t    \t\t\tivars;                  /* Pointer to a structure that\n                                                 describes the instance \n                                                 variables in the class\n                                                 definition.  NULL indicates\n                                                 no instance variables.  Does\n                                                 not include super class\n                                                 variables. */\n-  MethodList_t  methods;                      /* Linked list of instance\n+  MethodList_t  \t\t\tmethods;                /* Linked list of instance\n                                                 methods defined for the \n                                                 class. */\n-  Cache_t       cache;                        /* Used to cache instance methods\n+  Cache_t      \t\t\t\tcache;                  /* Used to cache instance methods\n                                                 defined for the class and its \n                                                 super classes.  Entries are\n                                                 made to the cache as the"}]}