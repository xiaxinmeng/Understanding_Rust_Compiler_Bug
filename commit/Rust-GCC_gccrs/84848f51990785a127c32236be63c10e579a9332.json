{"sha": "84848f51990785a127c32236be63c10e579a9332", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4NDhmNTE5OTA3ODVhMTI3YzMyMjM2YmU2M2MxMGU1NzlhOTMzMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-25T16:06:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-25T16:06:36Z"}, "message": "* config/i386/i386.md: Move nearbyint patterns closer to rint.\n\nFrom-SVN: r264578", "tree": {"sha": "b6c56b07e59439f2cd5d946aee24cd51c2c57838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6c56b07e59439f2cd5d946aee24cd51c2c57838"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84848f51990785a127c32236be63c10e579a9332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84848f51990785a127c32236be63c10e579a9332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84848f51990785a127c32236be63c10e579a9332", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84848f51990785a127c32236be63c10e579a9332/comments", "author": null, "committer": null, "parents": [{"sha": "0ae1678fd9f972a64bfa54da723e760d32dd95ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae1678fd9f972a64bfa54da723e760d32dd95ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae1678fd9f972a64bfa54da723e760d32dd95ab"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "fc5cfd0124d8a848c0c64d1e784855789f5144b7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84848f51990785a127c32236be63c10e579a9332/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84848f51990785a127c32236be63c10e579a9332/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=84848f51990785a127c32236be63c10e579a9332", "patch": "@@ -16125,6 +16125,38 @@\n   DONE;\n })\n \n+(define_expand \"nearbyintxf2\"\n+  [(set (match_operand:XF 0 \"register_operand\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\")]\n+\t\t   UNSPEC_FRNDINT))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && !flag_trapping_math\")\n+\n+(define_expand \"nearbyint<mode>2\"\n+  [(use (match_operand:MODEF 0 \"register_operand\"))\n+   (use (match_operand:MODEF 1 \"nonimmediate_operand\"))]\n+  \"(TARGET_USE_FANCY_MATH_387\n+    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+\t  || TARGET_MIX_SSE_I387)\n+    && !flag_trapping_math)\n+   || (TARGET_SSE4_1 && TARGET_SSE_MATH)\"\n+{\n+  if (TARGET_SSE4_1 && TARGET_SSE_MATH)\n+    emit_insn (gen_sse4_1_round<mode>2\n+\t       (operands[0], operands[1], GEN_INT (ROUND_MXCSR\n+\t\t\t\t\t\t   | ROUND_NO_EXC)));\n+  else\n+    {\n+      rtx op0 = gen_reg_rtx (XFmode);\n+      rtx op1 = gen_reg_rtx (XFmode);\n+\n+      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+      emit_insn (gen_nearbyintxf2 (op0, op1));\n+      emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+    }\n+  DONE;\n+})\n+\n (define_expand \"round<mode>2\"\n   [(match_operand:X87MODEF 0 \"register_operand\")\n    (match_operand:X87MODEF 1 \"nonimmediate_operand\")]\n@@ -16340,38 +16372,6 @@\n   DONE;\n })\n \n-(define_expand \"nearbyintxf2\"\n-  [(set (match_operand:XF 0 \"register_operand\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FRNDINT))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && !flag_trapping_math\")\n-\n-(define_expand \"nearbyint<mode>2\"\n-  [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"nonimmediate_operand\"))]\n-  \"(TARGET_USE_FANCY_MATH_387\n-    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-\t  || TARGET_MIX_SSE_I387)\n-    && !flag_trapping_math)\n-   || (TARGET_SSE4_1 && TARGET_SSE_MATH)\"\n-{\n-  if (TARGET_SSE4_1 && TARGET_SSE_MATH)\n-    emit_insn (gen_sse4_1_round<mode>2\n-\t       (operands[0], operands[1], GEN_INT (ROUND_MXCSR\n-\t\t\t\t\t\t   | ROUND_NO_EXC)));\n-  else\n-    {\n-      rtx op0 = gen_reg_rtx (XFmode);\n-      rtx op1 = gen_reg_rtx (XFmode);\n-\n-      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n-      emit_insn (gen_nearbyintxf2 (op0, op1));\n-      emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n-    }\n-  DONE;\n-})\n-\n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"*fist<mode>2_<rounding>_1\"\n   [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")"}]}