{"sha": "e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjMWM4ZDFhMThhMjU1MWM5MTI1NGZjMmI5MmY2OWM3ODhjMDc3Yg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-11-24T21:45:36Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-11-24T21:45:36Z"}, "message": "resolve.c (resolve_actual_arglist): Remove the special case for CHAR.\n\n\t* resolve.c (resolve_actual_arglist): Remove the special case for\n\tCHAR.\n\t* intrinsic.c (add_functions): Remove the special case for CHAR.\n\n\t* gfortran.dg/specifics_1.f90: Remove check for CHAR.\n\t* gfortran.dg/specifics_2.f90: Remove check for CHAR.\n\t* gfortran.dg/specifics_3.f90: Remove.\n\nFrom-SVN: r119170", "tree": {"sha": "e1cbdc1778fa66c881bd9fcfcaee531c042b2114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1cbdc1778fa66c881bd9fcfcaee531c042b2114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d"}], "stats": {"total": 43, "additions": 16, "deletions": 27}, "files": [{"sha": "856f1e550c13b4d4c3f4973bf4e692f45eb6a7a0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -1,3 +1,9 @@\n+2006-11-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* resolve.c (resolve_actual_arglist): Remove the special case for\n+\tCHAR.\n+\t* intrinsic.c (add_functions): Remove the special case for CHAR.\n+\n 2006-11-22  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/29441"}, {"sha": "ea68d69e6c66230e1550bbef0db6a89d22721dca", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -200,7 +200,7 @@ do_check (gfc_intrinsic_sym * specific, gfc_actual_arglist * arg)\n    Argument list:\n       char *     name of function\n       int        whether function is elemental\n-      int        If the function can be used as an actual argument [1] [2]\n+      int        If the function can be used as an actual argument [1]\n       bt         return type of function\n       int        kind of return type of function\n       int        Fortran standard version\n@@ -221,10 +221,7 @@ do_check (gfc_intrinsic_sym * specific, gfc_actual_arglist * arg)\n      determined by its presence on the 13.6 list in Fortran 2003.  The\n      following intrinsics, which are GNU extensions, are considered allowed\n      as actual arguments: ACOSH ATANH DACOSH DASINH DATANH DCONJG DIMAG\n-     ZABS ZCOS ZEXP ZLOG ZSIN ZSQRT.\n- [2] The value 2 is used in this field for CHAR, which is allowed as an\n-     actual argument in F2003, but not in F95. It is the only such\n-     intrinsic function.  */\n+     ZABS ZCOS ZEXP ZLOG ZSIN ZSQRT.  */\n \n static void\n add_sym (const char *name, int elemental, int actual_ok, bt type, int kind,\n@@ -1180,7 +1177,7 @@ add_functions (void)\n \n   make_generic (\"ceiling\", GFC_ISYM_CEILING, GFC_STD_F95);\n \n-  add_sym_2 (\"char\", 1, 2, BT_CHARACTER, dc, GFC_STD_F77,\n+  add_sym_2 (\"char\", ELEMENTAL, ACTUAL_NO, BT_CHARACTER, dc, GFC_STD_F77,\n \t     gfc_check_char, gfc_simplify_char, gfc_resolve_char,\n \t     i, BT_INTEGER, di, REQUIRED, kind, BT_INTEGER, di, OPTIONAL);\n "}, {"sha": "44ca7d9a22a2c7f75ad194bc17b1640dac9c60e4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -881,12 +881,6 @@ resolve_actual_arglist (gfc_actual_arglist * arg)\n \t      gfc_error (\"Intrinsic '%s' at %L is not allowed as an \"\n \t\t\t \"actual argument\", sym->name, &e->where);\n \t    }\n-\t  else if (sym->attr.intrinsic && actual_ok == 2)\n-\t  /* We need a special case for CHAR, which is the only intrinsic\n-\t     function allowed as actual argument in F2003 and not allowed\n-\t     in F95.  */\n-\t    gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: CHAR intrinsic \"\n-\t\t\t    \"as actual argument at %L\", &e->where);\n \n \t  if (sym->attr.contained && !sym->attr.use_assoc\n \t      && sym->ns->proc_name->attr.flavor != FL_MODULE)"}, {"sha": "84fee3b8198edfdfe129e062a11a61c5fd6c8b23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -1,3 +1,9 @@\n+2006-11-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* gfortran.dg/specifics_1.f90: Remove check for CHAR.\n+\t* gfortran.dg/specifics_2.f90: Remove check for CHAR.\n+\t* gfortran.dg/specifics_3.f90: Remove.\n+\n 2006-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/29955"}, {"sha": "8970607db0c341241380040a00b1b2bba27924dc", "filename": "gcc/testsuite/gfortran.dg/specifics_1.f90", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_1.f90?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -145,12 +145,6 @@ subroutine test_len(fn,val,res)\n   if (res .ne. fn(val)) call abort\n end subroutine\n \n-subroutine test_char(fn,val,res)\n-  integer val\n-  character(len=1) fn, res\n-  if (res .ne. fn(val)) call abort\n-end subroutine\n-\n subroutine test_index(fn,val1,val2,res)\n   integer fn, res\n   character(len=*) val1, val2\n@@ -235,7 +229,6 @@ program specifics\n   intrinsic mod\n   intrinsic len\n   intrinsic index\n-  intrinsic char\n \n   intrinsic aimag\n   intrinsic dimag\n@@ -319,7 +312,6 @@ program specifics\n   call test_iabs (iabs, -7, iabs(-7))\n   call test_idim (mod, 5, 2, mod(5,2))\n   call test_len (len, \"foobar\", len(\"foobar\"))\n-  call test_char (char, 47, char(47))\n   call test_index (index, \"foobarfoobar\", \"bar\", index(\"foobarfoobar\",\"bar\"))\n \n end program"}, {"sha": "4de0925647f643c96b5597ba247549de4bb7349c", "filename": "gcc/testsuite/gfortran.dg/specifics_2.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c1c8d1a18a2551c91254fc2b92f69c788c077b/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_2.f90?ref=e7c1c8d1a18a2551c91254fc2b92f69c788c077b", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do compile }\n ! This is the list of intrinsics allowed as actual arguments\n  intrinsic abs,acos,acosh,aimag,aint,alog,alog10,amod,anint,asin,asinh,atan,&\n- atan2,atanh,cabs,ccos,cexp,char,clog,conjg,cos,cosh,csin,csqrt,dabs,dacos,&\n+ atan2,atanh,cabs,ccos,cexp,clog,conjg,cos,cosh,csin,csqrt,dabs,dacos,&\n  dacosh,dasin,dasinh,datan,datan2,datanh,dconjg,dcos,dcosh,ddim,dexp,dim,&\n  dimag,dint,dlog,dlog10,dmod,dnint,dprod,dsign,dsin,dsinh,dsqrt,dtan,dtanh,&\n  exp,iabs,idim,idnint,index,isign,len,mod,nint,sign,sin,sinh,sqrt,tan,&\n@@ -24,7 +24,6 @@\n   call foo(cabs)\n   call foo(ccos)\n   call foo(cexp)\n-  call foo(char)\n   call foo(clog)\n   call foo(conjg)\n   call foo(cos)"}, {"sha": "7f5c427dd62a43754782db710ef91c0a4d467845", "filename": "gcc/testsuite/gfortran.dg/specifics_3.f90", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90?ref=5c386a95ee20b9bb8f705ed1f8394ca7b4bafa7d", "patch": "@@ -1,5 +0,0 @@\n-! { dg-do compile }\n-! { dg-options \"-std=f95\" }\n-  intrinsic char\n-  call foo(char) ! { dg-error \"Fortran 2003: CHAR intrinsic as actual argument\" }\n-  end"}]}