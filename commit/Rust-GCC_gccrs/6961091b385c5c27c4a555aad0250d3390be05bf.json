{"sha": "6961091b385c5c27c4a555aad0250d3390be05bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk2MTA5MWIzODVjNWMyN2M0YTU1NWFhZDAyNTBkMzM5MGJlMDViZg==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2021-06-10T12:18:28Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2021-06-10T12:18:28Z"}, "message": "s390: Allow more vcond_mask patterns.\n\nChange vcond_mask iterator as to allow the corresponding int mode for\nthe condition/mask so e.g. boolean conditions become possible:\n\n  vtarget = bool_cond ? vsource1 : vsource2.\n\ngcc/ChangeLog:\n\n\t* config/s390/vector.md (vcond_mask_<mode><mode>): Change to\n\t(vcond_mask_<mode><tointvec>): this.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/vector/vcond-mixed-double.c: New test.\n\t* gcc.target/s390/vector/vcond-mixed-float.c: New test.", "tree": {"sha": "afdeb18442e1856a0a6daaf1befaa383f6f24f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afdeb18442e1856a0a6daaf1befaa383f6f24f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6961091b385c5c27c4a555aad0250d3390be05bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6961091b385c5c27c4a555aad0250d3390be05bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6961091b385c5c27c4a555aad0250d3390be05bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6961091b385c5c27c4a555aad0250d3390be05bf/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbf6dcaac040b7a572b8287453101489637c626b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf6dcaac040b7a572b8287453101489637c626b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf6dcaac040b7a572b8287453101489637c626b"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "ab605b3d2cf3e679f22ff92c488434880c24f244", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=6961091b385c5c27c4a555aad0250d3390be05bf", "patch": "@@ -715,7 +715,7 @@\n   DONE;\n })\n \n-(define_expand \"vcond_mask_<mode><mode>\"\n+(define_expand \"vcond_mask_<mode><tointvec>\"\n   [(set (match_operand:V 0 \"register_operand\" \"\")\n \t(if_then_else:V\n \t (eq (match_operand:<TOINTVEC> 3 \"register_operand\" \"\")"}, {"sha": "015bc8ab473bdc687c7ffa89ca5852da8bec9362", "filename": "gcc/testsuite/gcc.target/s390/vector/vcond-mixed-double.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-double.c?ref=6961091b385c5c27c4a555aad0250d3390be05bf", "patch": "@@ -0,0 +1,41 @@\n+/* Check for vectorization of mixed conditionals.  */\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O2 -march=z14 -mzarch -ftree-vectorize -fdump-tree-vect-details\" } */\n+\n+double xd[1024];\n+double zd[1024];\n+double wd[1024];\n+\n+long xl[1024];\n+long zl[1024];\n+long wl[1024];\n+\n+void foold ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zd[i] = xl[i] ? zd[i] : wd[i];\n+}\n+\n+void foodl ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zl[i] = xd[i] ? zl[i] : wl[i];\n+}\n+\n+void foold2 ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zd[i] = (xd[i] > 0) ? zd[i] : wd[i];\n+}\n+\n+void foold3 ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zd[i] = (xd[i] > 0. & wd[i] < 0.) ? zd[i] : wd[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 4 \"vect\" } } */"}, {"sha": "ba40ffe8660e1aac709c4cf99b0473f1981dd2c4", "filename": "gcc/testsuite/gcc.target/s390/vector/vcond-mixed-float.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961091b385c5c27c4a555aad0250d3390be05bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvcond-mixed-float.c?ref=6961091b385c5c27c4a555aad0250d3390be05bf", "patch": "@@ -0,0 +1,41 @@\n+/* Check for vectorization of mixed conditionals.  */\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O2 -march=z14 -mzarch -ftree-vectorize -fdump-tree-vect-details\" } */\n+\n+float xf[1024];\n+float zf[1024];\n+float wf[1024];\n+\n+int xi[1024];\n+int zi[1024];\n+int wi[1024];\n+\n+void fooif ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zf[i] = xi[i] ? zf[i] : wf[i];\n+}\n+\n+void foofi ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zi[i] = xf[i] ? zi[i] : wi[i];\n+}\n+\n+void fooif2 ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zf[i] = (xf[i] > 0) ? zf[i] : wf[i];\n+}\n+\n+void fooif3 ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    zf[i] = (xf[i] > 0.f & wf[i] < 0.f) ? zf[i] : wf[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 4 \"vect\" } } */"}]}