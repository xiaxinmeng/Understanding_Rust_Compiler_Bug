{"sha": "47cc012b655f52985c4d8b52d1ba7732606e57c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjYzAxMmI2NTVmNTI5ODVjNGQ4YjUyZDFiYTc3MzI2MDZlNTdjOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-04T18:47:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-04T18:47:42Z"}, "message": "(dbxout_type): Handle complex integer types.\n\nFrom-SVN: r3634", "tree": {"sha": "225d6c6a14daa6c9f3df6a27ef1af496f3064f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/225d6c6a14daa6c9f3df6a27ef1af496f3064f8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47cc012b655f52985c4d8b52d1ba7732606e57c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cc012b655f52985c4d8b52d1ba7732606e57c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47cc012b655f52985c4d8b52d1ba7732606e57c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cc012b655f52985c4d8b52d1ba7732606e57c8/comments", "author": null, "committer": null, "parents": [{"sha": "122026c09fea424fc605dfe5e55261c9f7d64cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122026c09fea424fc605dfe5e55261c9f7d64cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122026c09fea424fc605dfe5e55261c9f7d64cbb"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "506701ad7d363988bc10028ab38c512464feeed9", "filename": "gcc/dbxout.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cc012b655f52985c4d8b52d1ba7732606e57c8/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cc012b655f52985c4d8b52d1ba7732606e57c8/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=47cc012b655f52985c4d8b52d1ba7732606e57c8", "patch": "@@ -1044,8 +1044,27 @@ dbxout_type (type, full, show_arg_types)\n \t\t   TYPE_SYMTAB_ADDRESS (type),\n \t\t   TREE_INT_CST_LOW (size_in_bytes (TREE_TYPE (type))));\n \t  CHARS (15);\t\t/* The number is probably incorrect here.  */\n-\t} else\n-\t  abort (); /* What to do with CSImode complex? */\n+\t}\n+      else\n+\t{\n+\t  /* Output a complex integer type as a structure,\n+\t     pending some other way to do it.  */\n+\t  fprintf (asmfile, \"s%d\", TREE_INT_CST_LOW (size_in_bytes (type)));\n+\n+\t  fprintf (asmfile, \"real:\");\n+\t  CHARS (10);\n+\t  dbxout_type (TREE_TYPE (type), 0, 0);\n+\t  fprintf (asmfile, \",%d,%d;\",\n+\t\t   0, TYPE_PRECISION (TREE_TYPE (type)));\n+\t  CHARS (8);\n+\t  fprintf (asmfile, \"imag:\");\n+\t  CHARS (5);\n+\t  dbxout_type (TREE_TYPE (type), 0, 0);\n+\t  fprintf (asmfile, \",%d,%d;;\",\n+\t\t   TYPE_PRECISION (TREE_TYPE (type)),\n+\t\t   TYPE_PRECISION (TREE_TYPE (type)));\n+\t  CHARS (9);\n+\t}\n       break;\n \n     case SET_TYPE:"}]}