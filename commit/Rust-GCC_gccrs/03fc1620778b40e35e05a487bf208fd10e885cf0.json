{"sha": "03fc1620778b40e35e05a487bf208fd10e885cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNmYzE2MjA3NzhiNDBlMzVlMDVhNDg3YmYyMDhmZDEwZTg4NWNmMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T21:19:22Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T21:19:22Z"}, "message": "(init_spec): Delete parameter.  Always initialize extra_specs.\n\n(process_command, main): Change all callers.\n\nFrom-SVN: r13737", "tree": {"sha": "5dfab998470c38a781ad26e29bf0a9b0d25264eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dfab998470c38a781ad26e29bf0a9b0d25264eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03fc1620778b40e35e05a487bf208fd10e885cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fc1620778b40e35e05a487bf208fd10e885cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fc1620778b40e35e05a487bf208fd10e885cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fc1620778b40e35e05a487bf208fd10e885cf0/comments", "author": null, "committer": null, "parents": [{"sha": "987e845a7fe19a79966f3fe63b292eb98e7b3035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/987e845a7fe19a79966f3fe63b292eb98e7b3035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/987e845a7fe19a79966f3fe63b292eb98e7b3035"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "04ab4dfd2bfdd4cee0dfcf28f04b022d4950f005", "filename": "gcc/gcc.c", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fc1620778b40e35e05a487bf208fd10e885cf0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fc1620778b40e35e05a487bf208fd10e885cf0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=03fc1620778b40e35e05a487bf208fd10e885cf0", "patch": "@@ -231,7 +231,7 @@ extern char *version_string;\n /* Forward declaration for prototypes.  */\n struct path_prefix;\n \n-static void init_spec\t\tPROTO((int));\n+static void init_spec\t\tPROTO(());\n static void set_spec\t\tPROTO((char *, char *));\n static struct compiler *lookup_compiler PROTO((char *, int, char *));\n static char *build_search_list\tPROTO((struct path_prefix *, char *, int));\n@@ -1227,8 +1227,7 @@ static struct spec_list *specs = (struct spec_list *)0;\n /* Initialize the specs lookup routines.  */\n \n static void\n-init_spec (use_extra_p)\n-     int use_extra_p;\n+init_spec ()\n {\n   struct spec_list *next = (struct spec_list *)0;\n   struct spec_list *sl   = (struct spec_list *)0;\n@@ -1238,15 +1237,14 @@ init_spec (use_extra_p)\n     return;\t\t\t/* already initialized */\n \n #ifdef EXTRA_SPECS\n-  if (use_extra_p)\n-    for (i = (sizeof (extra_specs) / sizeof (extra_specs[0])) - 1; i >= 0; i--)\n-      {\n-\tsl = &extra_specs[i];\n-\tsl->next = next;\n-\tsl->name_len = strlen (sl->name);\n-\tsl->ptr_spec = &sl->ptr;\n-\tnext = sl;\n-      }\n+  for (i = (sizeof (extra_specs) / sizeof (extra_specs[0])) - 1; i >= 0; i--)\n+    {\n+      sl = &extra_specs[i];\n+      sl->next = next;\n+      sl->name_len = strlen (sl->name);\n+      sl->ptr_spec = &sl->ptr;\n+      next = sl;\n+    }\n #endif\n \n   for (i = (sizeof (static_specs) / sizeof (static_specs[0])) - 1; i >= 0; i--)\n@@ -2345,7 +2343,7 @@ process_command (argc, argv)\n       if (! strcmp (argv[i], \"-dumpspecs\"))\n \t{\n \t  struct spec_list *sl;\n-\t  init_spec (TRUE);\n+\t  init_spec ();\n \t  for (sl = specs; sl; sl = sl->next)\n \t    printf (\"*%s:\\n%s\\n\\n\", sl->name, *(sl->ptr_spec));\n \t  exit (0);\n@@ -4240,15 +4238,11 @@ main (argc, argv)\n \t\t\t   spec_version, dir_separator_str, NULL_PTR);\n   just_machine_suffix = concat (spec_machine, dir_separator_str, NULL_PTR);\n \n+  init_spec ();\n   specs_file = find_a_file (&startfile_prefixes, \"specs\", R_OK);\n   /* Read the specs file unless it is a default one.  */\n   if (specs_file != 0 && strcmp (specs_file, \"specs\"))\n-    {\n-      init_spec (TRUE);\n-      read_specs (specs_file);\n-    }\n-  else\n-    init_spec (FALSE);\n+    read_specs (specs_file);\n \n   /* Process any user specified specs in the order given on the command\n      line.  */"}]}