{"sha": "ec3c7387ac65ab902350a08c654f4f8f4a65af47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzYzczODdhYzY1YWI5MDIzNTBhMDhjNjU0ZjRmOGY0YTY1YWY0Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:35:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:35:36Z"}, "message": "[multiple changes]\n\n2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Record_Aggregate): If\n\tWarn_On_Redundant_Constructs is enabled, report a redundant box\n\tassociation that does not cover any components, as it done for\n\tredundant others associations in case statements.\n\n2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Collect_Inherited_Class_Wide_Conditions):\n\tAnalyze the generated Check pragma for an inherited condition so\n\tthat it does not freeze the dispatching type of the primitive\n\toperation, because it is pre-analyzed at the point of the\n\tsubprogram declaration (and not in the subprogram body, as is\n\tdone during regular expansion).\n\n2016-04-18  Vincent Celier  <celier@adacore.com>\n\n\t* ali.ads: Increase the range of all _Id types to 100 millions.\n\n2016-04-18  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_warn.adb (Check_References): Change warning to suggest\n\tusing pragma Export rather than saying \"volatile has no effect\".\n\n2016-04-18  Bob Duff  <duff@adacore.com>\n\n\t* g-souinf.ads (Compilation_ISO_Date): New function to return\n\tthe current date in ISO form.\n\t* exp_intr.adb (Expand_Source_Info, Add_Source_Info): Expand\n\ta call to Compilation_ISO_Date into a string literal containing\n\tthe current date in ISO form.\n\t* exp_intr.ads (Add_Source_Info): Improve documentation.\n\t* sem_intr.adb (Check_Intrinsic_Subprogram): Recognize\n\tCompilation_ISO_Date.\n\t* snames.ads-tmpl (Name_Compilation_ISO_Date): New Name_Id.\n\nFrom-SVN: r235120", "tree": {"sha": "46674070eeb533c4c09eb2241ee5572368108be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46674070eeb533c4c09eb2241ee5572368108be3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec3c7387ac65ab902350a08c654f4f8f4a65af47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3c7387ac65ab902350a08c654f4f8f4a65af47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec3c7387ac65ab902350a08c654f4f8f4a65af47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3c7387ac65ab902350a08c654f4f8f4a65af47/comments", "author": null, "committer": null, "parents": [{"sha": "0f6251c7acd787aa24e0e527344d8ac4884a04a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f6251c7acd787aa24e0e527344d8ac4884a04a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f6251c7acd787aa24e0e527344d8ac4884a04a2"}], "stats": {"total": 159, "additions": 115, "deletions": 44}, "files": [{"sha": "cea9413d0c020f16b30598dbefb5fcbe9c12d484", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -1,3 +1,40 @@\n+2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Record_Aggregate): If\n+\tWarn_On_Redundant_Constructs is enabled, report a redundant box\n+\tassociation that does not cover any components, as it done for\n+\tredundant others associations in case statements.\n+\n+2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Collect_Inherited_Class_Wide_Conditions):\n+\tAnalyze the generated Check pragma for an inherited condition so\n+\tthat it does not freeze the dispatching type of the primitive\n+\toperation, because it is pre-analyzed at the point of the\n+\tsubprogram declaration (and not in the subprogram body, as is\n+\tdone during regular expansion).\n+\n+2016-04-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* ali.ads: Increase the range of all _Id types to 100 millions.\n+\n+2016-04-18  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_warn.adb (Check_References): Change warning to suggest\n+\tusing pragma Export rather than saying \"volatile has no effect\".\n+\n+2016-04-18  Bob Duff  <duff@adacore.com>\n+\n+\t* g-souinf.ads (Compilation_ISO_Date): New function to return\n+\tthe current date in ISO form.\n+\t* exp_intr.adb (Expand_Source_Info, Add_Source_Info): Expand\n+\ta call to Compilation_ISO_Date into a string literal containing\n+\tthe current date in ISO form.\n+\t* exp_intr.ads (Add_Source_Info): Improve documentation.\n+\t* sem_intr.adb (Check_Intrinsic_Subprogram): Recognize\n+\tCompilation_ISO_Date.\n+\t* snames.ads-tmpl (Name_Compilation_ISO_Date): New Name_Id.\n+\n 2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* layout.adb (Set_Elem_Alignment): Extend setting of alignment"}, {"sha": "eea6b461133a69f9221f0b52fed8b0812f01fac9", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -42,32 +42,28 @@ package ALI is\n    -- Id Types --\n    --------------\n \n-   --  The various entries are stored in tables with distinct subscript ranges.\n-   --  The following type definitions show the ranges used for the subscripts\n-   --  (Id values) for the various tables.\n-\n-   type ALI_Id is range 0 .. 999_999;\n+   type ALI_Id is range 0 .. 99_999_999;\n    --  Id values used for ALIs table entries\n \n-   type Unit_Id is range 1_000_000 .. 1_999_999;\n+   type Unit_Id is range 0 .. 99_999_999;\n    --  Id values used for Unit table entries\n \n-   type With_Id is range 2_000_000 .. 2_999_999;\n+   type With_Id is range 0 .. 99_999_999;\n    --  Id values used for Withs table entries\n \n-   type Arg_Id is range 3_000_000 .. 3_999_999;\n+   type Arg_Id is range 0 .. 99_999_999;\n    --  Id values used for argument table entries\n \n-   type Sdep_Id is range 4_000_000 .. 4_999_999;\n+   type Sdep_Id is range 0 .. 99_999_999;\n    --  Id values used for Sdep table entries\n \n-   type Source_Id is range 5_000_000 .. 5_999_999;\n+   type Source_Id is range 0 .. 99_999_999;\n    --  Id values used for Source table entries\n \n-   type Interrupt_State_Id is range 6_000_000 .. 6_999_999;\n+   type Interrupt_State_Id is range 0 .. 99_999_999;\n    --  Id values used for Interrupt_State table entries\n \n-   type Priority_Specific_Dispatching_Id is range 7_000_000 .. 7_999_999;\n+   type Priority_Specific_Dispatching_Id is range 0 .. 99_999_999;\n    --  Id values used for Priority_Specific_Dispatching table entries\n \n    --------------------"}, {"sha": "b8f1fe49edd7b5da2391469447cbfb9f3db72d07", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -107,14 +107,10 @@ package body Exp_Intr is\n    --  System.Address_To_Access_Conversions.\n \n    procedure Expand_Source_Info (N : Node_Id; Nam : Name_Id);\n-   --  Rewrite the node by the appropriate string or positive constant.\n-   --  Nam can be one of the following:\n-   --    Name_File                  - expand string name of source file\n-   --    Name_Line                  - expand integer line number\n-   --    Name_Source_Location       - expand string of form file:line\n-   --    Name_Enclosing_Entity      - expand string name of enclosing entity\n-   --    Name_Compilation_Date      - expand string with compilation date\n-   --    Name_Compilation_Time      - expand string with compilation time\n+   --  Rewrite the node as the appropriate string literal or positive\n+   --  constant. Nam is the name of one of the intrinsics declared in\n+   --  GNAT.Source_Info; see g-souinf.ads for documentation of these\n+   --  intrinsics.\n \n    procedure Write_Entity_Name (E : Entity_Id);\n    --  Recursive procedure to construct string for qualified name of enclosing\n@@ -165,6 +161,10 @@ package body Exp_Intr is\n \n             Write_Entity_Name (Ent);\n \n+         when Name_Compilation_ISO_Date =>\n+            Name_Buffer (1 .. 10) := Opt.Compilation_Time (1 .. 10);\n+            Name_Len := 10;\n+\n          when Name_Compilation_Date =>\n             declare\n                subtype S13 is String (1 .. 3);\n@@ -696,6 +696,7 @@ package body Exp_Intr is\n                          Name_Line,\n                          Name_Source_Location,\n                          Name_Enclosing_Entity,\n+                         Name_Compilation_ISO_Date,\n                          Name_Compilation_Date,\n                          Name_Compilation_Time)\n       then\n@@ -851,6 +852,8 @@ package body Exp_Intr is\n    ------------------------\n \n    procedure Expand_Source_Info (N : Node_Id; Nam : Name_Id) is\n+      --  ???There is duplicated code here (see Add_Source_Info)\n+\n       Loc : constant Source_Ptr := Sloc (N);\n       Ent : Entity_Id;\n \n@@ -891,6 +894,10 @@ package body Exp_Intr is\n \n                Write_Entity_Name (Ent);\n \n+            when Name_Compilation_ISO_Date =>\n+               Name_Buffer (1 .. 10) := Opt.Compilation_Time (1 .. 10);\n+               Name_Len := 10;\n+\n             when Name_Compilation_Date =>\n                declare\n                   subtype S13 is String (1 .. 3);"}, {"sha": "5ba07692c5d5221c8ec9020cf0a3cba76dda148e", "filename": "gcc/ada/exp_intr.ads", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fexp_intr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fexp_intr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.ads?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,15 +31,11 @@ with Types; use Types;\n package Exp_Intr is\n \n    procedure Add_Source_Info (Loc : Source_Ptr; Nam : Name_Id);\n-   --  Append a string to Name_Buffer depending on Nam\n-   --    Name_File                  - append name of source file\n-   --    Name_Line                  - append line number\n-   --    Name_Source_Location       - append source location (file:line)\n-   --    Name_Enclosing_Entity      - append name of enclosing entity\n-   --    Name_Compilation_Date      - append compilation date\n-   --    Name_Compilation_Time      - append compilation time\n-   --  The caller must set Name_Buffer and Name_Len before the call. Loc is\n-   --  passed to provide location information where it is needed.\n+   --  Append a string to Name_Buffer depending on Nam, which is the name of\n+   --  one of the intrinsics declared in GNAT.Source_Info; see g-souinf.ads for\n+   --  documentation of these intrinsics. The caller must set Name_Buffer and\n+   --  Name_Len before the call. Loc is passed to provide location information\n+   --  where it is needed.\n \n    procedure Expand_Intrinsic_Call (N : Node_Id; E : Entity_Id);\n    --  N is either a function call node, a procedure call statement node, or"}, {"sha": "83d23d4f6727a22b01b2622f8db8d58b748f7736", "filename": "gcc/ada/g-souinf.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fg-souinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fg-souinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-souinf.ads?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,6 +79,10 @@ package GNAT.Source_Info is\n    --  package itself. This is useful in identifying and logging information\n    --  from within generic templates.\n \n+   function Compilation_ISO_Date return String with\n+     Import, Convention => Intrinsic;\n+   --  Returns date of compilation as a static string \"yyyy-mm-dd\".\n+\n    function Compilation_Date return String with\n      Import, Convention => Intrinsic;\n    --  Returns date of compilation as a static string \"mmm dd yyyy\". This is"}, {"sha": "8e8b3988e6807e8e965ed37576bc8795e440f342", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -2972,14 +2972,20 @@ package body Sem_Aggr is\n       --\n       --  This variable is updated as a side effect of function Get_Value.\n \n+      Box_Node       : Node_Id;\n       Is_Box_Present : Boolean := False;\n-      Others_Box     : Boolean := False;\n+      Others_Box     : Integer := 0;\n+\n       --  Ada 2005 (AI-287): Variables used in case of default initialization\n       --  to provide a functionality similar to Others_Etype. Box_Present\n       --  indicates that the component takes its default initialization;\n-      --  Others_Box indicates that at least one component takes its default\n-      --  initialization. Similar to Others_Etype, they are also updated as a\n+      --  Others_Box counts the number of components of the current aggregate\n+      --  (which may be a sub-aggregate of a larger one) that are default-\n+      --  initialized. A value of One indicates that an others_box is present.\n+      --  Any larger value indicates that the others_box is not redundant.\n+      --  These variables, similar to Others_Etype, are also updated as a\n       --  side effect of function Get_Value.\n+      --  Box_Node is used to place a warning on a redundant others_box.\n \n       procedure Add_Association\n         (Component      : Entity_Id;\n@@ -3231,7 +3237,7 @@ package body Sem_Aggr is\n                      --  checks when the default includes function calls.\n \n                      if Box_Present (Assoc) then\n-                        Others_Box     := True;\n+                        Others_Box     := Others_Box + 1;\n                         Is_Box_Present := True;\n \n                         if Expander_Active then\n@@ -3704,7 +3710,8 @@ package body Sem_Aggr is\n                   --  any component.\n \n                   elsif Box_Present (Assoc) then\n-                     Others_Box := True;\n+                     Others_Box := 1;\n+                     Box_Node   := Assoc;\n                   end if;\n \n                else\n@@ -4439,7 +4446,8 @@ package body Sem_Aggr is\n \n                               Comp_Elmt := First_Elmt (Components);\n                               while Present (Comp_Elmt) loop\n-                                 if Ekind (Node (Comp_Elmt)) /= E_Discriminant\n+                                 if\n+                                   Ekind (Node (Comp_Elmt)) /= E_Discriminant\n                                  then\n                                     Process_Component (Node (Comp_Elmt));\n                                  end if;\n@@ -4585,9 +4593,14 @@ package body Sem_Aggr is\n \n                --  Ada 2005 (AI-287): others choice may have expression or box\n \n-               if No (Others_Etype) and then not Others_Box then\n+               if No (Others_Etype) and then Others_Box = 0 then\n                   Error_Msg_N\n                     (\"OTHERS must represent at least one component\", Selectr);\n+\n+               elsif Others_Box = 1 and then Warn_On_Redundant_Constructs then\n+                  Error_Msg_N (\"others choice is redundant?\", Box_Node);\n+                  Error_Msg_N (\"\\previous choices cover all components?\",\n+                     Box_Node);\n                end if;\n \n                exit Verification;"}, {"sha": "e25ebb768209573ec437c1f2ca5f22e4f4074562", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -359,6 +359,7 @@ package body Sem_Intr is\n                          Name_Line,\n                          Name_Source_Location,\n                          Name_Enclosing_Entity,\n+                         Name_Compilation_ISO_Date,\n                          Name_Compilation_Date,\n                          Name_Compilation_Time)\n       then"}, {"sha": "01971593be4ec66fcbbf565e90746d9faec8bcc0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -26762,9 +26762,10 @@ package body Sem_Prag is\n    procedure Collect_Inherited_Class_Wide_Conditions (Subp : Entity_Id) is\n       Parent_Subp : constant Entity_Id := Overridden_Operation (Subp);\n       Prags       : constant Node_Id   := Contract (Parent_Subp);\n-      Prag        : Node_Id;\n-      New_Prag    : Node_Id;\n-      Installed   : Boolean;\n+      Prag         : Node_Id;\n+      New_Prag     : Node_Id;\n+      Installed    : Boolean;\n+      In_Spec_Expr : Boolean;\n \n    begin\n       Installed := False;\n@@ -26781,24 +26782,35 @@ package body Sem_Prag is\n               and then Class_Present (Prag)\n             then\n                --  The generated pragma must be analyzed in the context of\n-               --  the subprogram, to make its formals visible.\n+               --  the subprogram, to make its formals visible. In addition,\n+               --  we must inhibit freezing and full analysis because the\n+               --  controlling type of the subprogram is not frozen yet, and\n+               --  may have further primitives.\n \n                if not Installed then\n                   Installed := True;\n                   Push_Scope (Subp);\n                   Install_Formals (Subp);\n+                  In_Spec_Expr := In_Spec_Expression;\n+                  In_Spec_Expression := True;\n                end if;\n \n                New_Prag :=\n                  Build_Pragma_Check_Equivalent (Prag, Subp, Parent_Subp);\n                Insert_After (Unit_Declaration_Node (Subp), New_Prag);\n                Preanalyze (New_Prag);\n+\n+               --  Prevent further analysis in subsequent processing of the\n+               --  current list of declarations\n+\n+               Set_Analyzed (New_Prag);\n             end if;\n \n             Prag := Next_Pragma (Prag);\n          end loop;\n \n          if Installed then\n+            In_Spec_Expression := In_Spec_Expr;\n             End_Scope;\n          end if;\n       end if;"}, {"sha": "a2fb50db7bdeb9a52f505c430aee17f9c3b53c10", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -1137,13 +1137,17 @@ package body Sem_Warn is\n                   --  A special case, if this variable is volatile and not\n                   --  imported, it is not helpful to tell the programmer\n                   --  to mark the variable as constant, since this would be\n-                  --  illegal by virtue of RM C.6(13).\n+                  --  illegal by virtue of RM C.6(13). Instead we suggest\n+                  --  using pragma Export (can't be Import because of the\n+                  --  initial value).\n \n                   if (Is_Volatile (E1) or else Has_Volatile_Components (E1))\n                     and then not Is_Imported (E1)\n                   then\n                      Error_Msg_N\n-                       (\"?k?& is not modified, volatile has no effect!\", E1);\n+                       (\"?k?& is not modified, \" &\n+                          \"consider pragma Export for volatile variable!\",\n+                        E1);\n \n                   --  Another special case, Exception_Occurrence, this catches\n                   --  the case of exception choice (and a bit more too, but not"}, {"sha": "e52a1816495212cf0ab72019982c78809beadc14", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3c7387ac65ab902350a08c654f4f8f4a65af47/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=ec3c7387ac65ab902350a08c654f4f8f4a65af47", "patch": "@@ -1204,6 +1204,7 @@ package Snames is\n    --  convention name. So is To_Address, which is a GNAT attribute.\n \n    First_Intrinsic_Name                  : constant Name_Id := N + $;\n+   Name_Compilation_ISO_Date             : constant Name_Id := N + $;\n    Name_Compilation_Date                 : constant Name_Id := N + $;\n    Name_Compilation_Time                 : constant Name_Id := N + $;\n    Name_Divide                           : constant Name_Id := N + $;"}]}