{"sha": "ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY4ZjEyOWJjMmY1N2ZkZmM4MGY1NmQ3M2I4NGE4MDk0OGQxMWQ4NA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2019-07-22T08:07:29Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2019-07-22T08:07:29Z"}, "message": "x86/AVX512: improve generated code for bit-wise negation of vectors of integers\n\nNOT on vectors of integers does not require loading a constant vector of\nall ones into a register - VPTERNLOG can be used here (and could/should\nbe further used to carry out other binary and ternary logical operations\nwhich don't have a special purpose instruction).\n\ngcc/\n2019-07-22  Jan Beulich  <jbeulich@suse.com>\n\n\t* config/i386/sse.md (ternlogsuffix): New.\n\t(one_cmpl<mode>2): Don't force CONSTM1_RTX into a register when\n\tAVX512F is in use.\n\t(<mask_codefor>one_cmpl<mode>2<mask_name>): New.\n\nFrom-SVN: r273663", "tree": {"sha": "d2b45aae47701a32eb7af6c7c4b813c5a2644a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2b45aae47701a32eb7af6c7c4b813c5a2644a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8f129bc2f57fdfc80f56d73b84a80948d11d84/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a861990d21a7f495695597e75509a834d44fdb2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a861990d21a7f495695597e75509a834d44fdb2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a861990d21a7f495695597e75509a834d44fdb2d"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "3e861effcd5c98cd357c34122030072ac8f268b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8f129bc2f57fdfc80f56d73b84a80948d11d84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8f129bc2f57fdfc80f56d73b84a80948d11d84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/i386/sse.md (ternlogsuffix): New.\n+\t(one_cmpl<mode>2): Don't force CONSTM1_RTX into a register when\n+\tAVX512F is in use.\n+\t(<mask_codefor>one_cmpl<mode>2<mask_name>): New.\n+\n 2019-07-22  Martin Liska  <mliska@suse.cz>\n \n \t* config/avr/avr.c (avr_asm_output_aligned_decl_common): Update"}, {"sha": "8abd1617b6f1ccc00511603e1369bfce2cc63f48", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8f129bc2f57fdfc80f56d73b84a80948d11d84/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8f129bc2f57fdfc80f56d73b84a80948d11d84/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "patch": "@@ -853,6 +853,13 @@\n    (V4SF \"k\") (V2DF \"q\")\n    (SF \"k\") (DF \"q\")])\n \n+;; Mapping of vector modes to VPTERNLOG suffix\n+(define_mode_attr ternlogsuffix\n+  [(V8DI \"q\") (V4DI \"q\") (V2DI \"q\")\n+   (V16SI \"d\") (V8SI \"d\") (V4SI \"d\")\n+   (V32HI \"d\") (V16HI \"d\") (V8HI \"d\")\n+   (V64QI \"d\") (V32QI \"d\") (V16QI \"d\")])\n+\n ;; Number of scalar elements in each vector type\n (define_mode_attr ssescalarnum\n   [(V64QI \"64\") (V16SI \"16\") (V8DI \"8\")\n@@ -12723,9 +12730,22 @@\n \t\t(match_dup 2)))]\n   \"TARGET_SSE\"\n {\n-  operands[2] = force_reg (<MODE>mode, CONSTM1_RTX (<MODE>mode));\n+  if (!TARGET_AVX512F)\n+    operands[2] = force_reg (<MODE>mode, CONSTM1_RTX (<MODE>mode));\n+  else\n+    operands[2] = CONSTM1_RTX (<MODE>mode);\n })\n \n+(define_insn \"<mask_codefor>one_cmpl<mode>2<mask_name>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+\t(xor:VI (match_operand:VI 1 \"nonimmediate_operand\" \"vm\")\n+\t\t(match_operand:VI 2 \"vector_all_ones_operand\" \"BC\")))]\n+  \"TARGET_AVX512F\"\n+  \"vpternlog<ternlogsuffix>\\t{$0x55, %1, %0, %0<mask_operand3>|%0<mask_operand3>, %0, %1, 0x55}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_expand \"<sse2_avx2>_andnot<mode>3\"\n   [(set (match_operand:VI_AVX2 0 \"register_operand\")\n \t(and:VI_AVX2"}]}