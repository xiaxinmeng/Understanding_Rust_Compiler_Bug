{"sha": "442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyYzhlMzFmMGM3MDQ3MzU5MmNiYjIwNWNhMmQzZWJjNWNiNjlhZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-30T18:59:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-30T18:59:18Z"}, "message": "class.c (build_base_path): Use build_address directly.\n\n        * class.c (build_base_path): Use build_address directly.\n        * typeck.c (build_unary_op): Don't lower &a.b to pointer\n        arithmetic directly.\n        * typeck2.c (store_init_value): Don't assume !TREE_CONSTANT\n        means !initializer_constant_valid_p.\n\n        * g++.dg/other/offsetof1.C: Use __builtin_offsetof.\n\nFrom-SVN: r86795", "tree": {"sha": "b8588d80580c2127c7180b14671067529060b82c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8588d80580c2127c7180b14671067529060b82c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/comments", "author": null, "committer": null, "parents": [{"sha": "5cc200fcf0b382bb7509f26eb8bd9cc6538e255d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc200fcf0b382bb7509f26eb8bd9cc6538e255d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc200fcf0b382bb7509f26eb8bd9cc6538e255d"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "97296e940a560aaa49012acfd4d00e7e0c5f66dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -1,3 +1,11 @@\n+2004-08-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* class.c (build_base_path): Use build_address directly.\n+\t* typeck.c (build_unary_op): Don't lower &a.b to pointer\n+\tarithmetic directly.\n+\t* typeck2.c (store_init_value): Don't assume !TREE_CONSTANT\n+\tmeans !initializer_constant_valid_p.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* class.c (fixed_type_or_null): Use get_base_address before"}, {"sha": "272c4d6a0ff11f98a395c9db995b1471e307a607", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -319,7 +319,7 @@ build_base_path (enum tree_code code,\n       expr = build_indirect_ref (expr, NULL);\n       expr = build_simple_base_path (expr, binfo);\n       if (want_pointer)\n-\texpr = build_unary_op (ADDR_EXPR, expr, 0);\n+\texpr = build_address (expr);\n       target_type = TREE_TYPE (expr);\n       goto out;\n     }"}, {"sha": "e62db90e0d08a9d960fa9ceff6c205b880649f58", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -3963,19 +3963,6 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \t  return arg;\n \t}\n \n-      /* For &x[y], return x+y.  But, in a template, ARG may be an\n-\t ARRAY_REF representing a non-dependent expression.  In that\n-\t case, there may be an overloaded \"operator []\" that will be\n-\t chosen at instantiation time; we must not try to optimize\n-\t here.  */\n-      if (TREE_CODE (arg) == ARRAY_REF && !processing_template_decl)\n-\t{\n-\t  if (!cxx_mark_addressable (TREE_OPERAND (arg, 0)))\n-\t    return error_mark_node;\n-\t  return cp_build_binary_op (PLUS_EXPR, TREE_OPERAND (arg, 0),\n-\t\t\t\t     TREE_OPERAND (arg, 1));\n-\t}\n-\n       /* Uninstantiated types are all functions.  Taking the\n \t address of a function is a no-op, so just return the\n \t argument.  */\n@@ -4099,20 +4086,16 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \t  }\n \telse\n \t  {\n-\t    /* Unfortunately we cannot just build an address\n-\t       expression here, because we would not handle\n-\t       address-constant-expressions or offsetof correctly.  */\n \t    tree field = TREE_OPERAND (arg, 1);\n \t    tree rval = build_unary_op (ADDR_EXPR, TREE_OPERAND (arg, 0), 0);\n \t    tree binfo = lookup_base (TREE_TYPE (TREE_TYPE (rval)),\n \t\t\t\t      decl_type_context (field),\n \t\t\t\t      ba_check, NULL);\n \t    \n \t    rval = build_base_path (PLUS_EXPR, rval, binfo, 1);\n-\t    rval = build_nop (argtype, rval);\n-\t    addr = fold (build2 (PLUS_EXPR, argtype, rval,\n-\t\t\t\t cp_convert (argtype,\n-\t\t\t\t\t     byte_position (field))));\n+\n+\t    TREE_OPERAND (arg, 0) = build_indirect_ref (rval, NULL);\n+\t    addr = build_address (arg);\n \t  }\n \n \tif (TREE_CODE (argtype) == POINTER_TYPE"}, {"sha": "0a8ac753e6c80284605663f9730286f551a68050", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -609,7 +609,7 @@ store_init_value (tree decl, tree init)\n   else if (TYPE_NEEDS_CONSTRUCTING (type))\n     return build2 (INIT_EXPR, type, decl, value);\n   else if (TREE_STATIC (decl)\n-\t   && (! TREE_CONSTANT (value)\n+\t   && (TREE_SIDE_EFFECTS (value)\n \t       || ! initializer_constant_valid_p (value, TREE_TYPE (value))))\n     return split_nonconstant_init (decl, value);\n   "}, {"sha": "a5f1a49adf200a074b200fab8ab9d5e34b047674", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -1,3 +1,7 @@\n+2004-08-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.dg/other/offsetof1.C: Use __builtin_offsetof.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* lib/fortran-torture.exp (fortran-torture-execute): Honor"}, {"sha": "39bb7836cee2ea90abe8026e4a5fb12d7a5baee4", "filename": "gcc/testsuite/g++.dg/other/offsetof1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442c8e31f0c70473592cbb205ca2d3ebc5cb69ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof1.C?ref=442c8e31f0c70473592cbb205ca2d3ebc5cb69ae", "patch": "@@ -11,4 +11,4 @@ struct F\n   char j;\n };\n \n-static int ary[((__SIZE_TYPE__)&((struct F *)0)->j)];\n+static int ary[__builtin_offsetof(F, j)];"}]}