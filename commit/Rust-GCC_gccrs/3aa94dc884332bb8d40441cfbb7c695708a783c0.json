{"sha": "3aa94dc884332bb8d40441cfbb7c695708a783c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhOTRkYzg4NDMzMmJiOGQ0MDQ0MWNmYmI3YzY5NTcwOGE3ODNjMA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-08-28T00:10:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-28T00:10:42Z"}, "message": "loop.c (check_dbra_loop): The loop ending comparison value must be an invariant or we can not reverse the...\n\n        * loop.c (check_dbra_loop): The loop ending comparison value\n        must be an invariant or we can not reverse the loop.\n\nFrom-SVN: r22045", "tree": {"sha": "1f869e9b2d08caaad6f7fa6c36b368469ed62ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f869e9b2d08caaad6f7fa6c36b368469ed62ad6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aa94dc884332bb8d40441cfbb7c695708a783c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa94dc884332bb8d40441cfbb7c695708a783c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa94dc884332bb8d40441cfbb7c695708a783c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa94dc884332bb8d40441cfbb7c695708a783c0/comments", "author": null, "committer": null, "parents": [{"sha": "78b87d18ae25299f9da51225378397abbdbb5349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b87d18ae25299f9da51225378397abbdbb5349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b87d18ae25299f9da51225378397abbdbb5349"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ae5ef3d301a239dcfbd7ec085b64827403e28f85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa94dc884332bb8d40441cfbb7c695708a783c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa94dc884332bb8d40441cfbb7c695708a783c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aa94dc884332bb8d40441cfbb7c695708a783c0", "patch": "@@ -1,5 +1,8 @@\n Thu Aug 27 20:10:46 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* loop.c (check_dbra_loop): The loop ending comparison value\n+\tmust be an invariant or we can not reverse the loop.\n+\n \t* loop.c (scan_loop): Count down from max_reg_num - 1 to\n \tFIRST_PSEUDO_REGISTER to avoid calling max_reg_num each iteration\n \tof the loop."}, {"sha": "cd257be9c352c09c31a5cea7638e44fc884fe959", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa94dc884332bb8d40441cfbb7c695708a783c0/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa94dc884332bb8d40441cfbb7c695708a783c0/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=3aa94dc884332bb8d40441cfbb7c695708a783c0", "patch": "@@ -6904,6 +6904,15 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t      comparison_sign_mask\n \t\t= (unsigned HOST_WIDE_INT)1 << (comparison_const_width - 1);\n \n+\t      /* If the comparison value is not a loop invariant, then we\n+\t\t can not reverse this loop.\n+\n+\t\t ??? If the insns which initialize the comparison value as\n+\t\t a whole compute an invariant result, then we could move\n+\t\t them out of the loop and proceed with loop reversal.  */\n+\t      if (!invariant_p (comparison_val))\n+\t\treturn 0;\n+\n \t      if (GET_CODE (comparison_value) == CONST_INT)\n \t\tcomparison_val = INTVAL (comparison_value);\n \t      initial_value = bl->initial_value;"}]}