{"sha": "47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiM2E0MDNhNWI1NDI0ZDE1ODI5ZDQ3YWJkNGNiMWE4YTg3ZTkzZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-07-07T22:01:41Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-07-07T22:01:41Z"}, "message": "re PR fortran/21594 ([4.0 only] FAIL: gfortran.dg/eoshift.f90  -O0  execution test)\n\n2005-07-07  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21594\n\t* intrinsics/eoshift0.c:  If abs(shift) > len, fill the\n\tthe whole array with the boundary value, but don't overrun it.\n\t* intrinsics/eoshift2.c:  Likewise.\n\t* m4/eoshift1.m4:  Likewise.\n\t* m4/eoshift3.m4:  Likewise.\n\t* generated/eoshift1_4.c:  Regenerated.\n\t* generated/eoshift1_8.c:  Regenerated.\n\t* generated/eoshift3_4.c:  Regenerated.\n\t* generated/eoshift3_8.c:  Regenerated.\n\n2005-07-07  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21594\n\t* gfortran.fortran-torture/execute/intrinsic_eoshift.f90:\n\tAdd test cases where the shift length is greater than the\n\tarray length.\n\nFrom-SVN: r101738", "tree": {"sha": "6e619479081b13e187d8cae04afbb290a97762a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e619479081b13e187d8cae04afbb290a97762a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/comments", "author": null, "committer": null, "parents": [{"sha": "5a29b385acaae4c85403081e38ce0876ae423524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a29b385acaae4c85403081e38ce0876ae423524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a29b385acaae4c85403081e38ce0876ae423524"}], "stats": {"total": 136, "additions": 122, "deletions": 14}, "files": [{"sha": "1804874c4de968601f9e3919dcec246a02498ed1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -1,3 +1,10 @@\n+2005-07-07  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21594\n+\t* gfortran.fortran-torture/execute/intrinsic_eoshift.f90:\n+\tAdd test cases where the shift length is greater than the\n+\tarray length.\n+\n 2005-07-07  Ziemowit Laski  <zlaski@apple.com>\n \n \t* obj-c++.dg/gnu-runtime-2.mm: Compile, do not run."}, {"sha": "c4bbcdd689c3be94bdb364c696333eec9e04d4c3", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_eoshift.f90", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -10,17 +10,30 @@ program intrinsic_eoshift\n    if (any (a .ne. reshape ((/2, 3, 99, 5, 6, 99, 8, 9, 99/), (/3, 3/)))) &\n       call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, 9999, 99, 1)\n+   if (any (a .ne. 99)) call abort\n+\n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    a = eoshift (a, -2, dim = 2)\n    if (any (a .ne. reshape ((/0, 0, 0, 0, 0, 0, 1, 2, 3/), (/3, 3/)))) &\n       call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, -9999, 99, 1)\n+   if (any (a .ne. 99)) call abort\n+\n    ! Array shift and scalar bound.\n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    a = eoshift (a, (/1, 0, -1/), 99, 1)\n    if (any (a .ne. reshape ((/2, 3, 99, 4, 5, 6, 99, 7, 8/), (/3, 3/)))) &\n       call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, (/9999, 0, -9999/), 99, 1)\n+   if (any (a .ne. reshape ((/99, 99, 99, 4, 5, 6, 99, 99, 99/), (/3, 3/)))) &\n+      call abort\n+\n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    a = eoshift (a, (/2, -2, 0/), dim = 2)\n    if (any (a .ne. reshape ((/7, 0, 3, 0, 0, 6, 0, 2, 9/), (/3, 3/)))) &\n@@ -32,6 +45,16 @@ program intrinsic_eoshift\n    if (any (a .ne. reshape ((/2, 3, 99, 5, 6, -1, 8, 9, 42/), (/3, 3/)))) &\n       call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, 9999, (/99, -1, 42/), 1)\n+   if (any (a .ne. reshape ((/99, 99, 99, -1, -1, -1, 42, 42, 42/), &\n+\t(/3, 3/)))) call abort\n+\n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, -9999, (/99, -1, 42/), 1)\n+   if (any (a .ne. reshape ((/99, 99, 99, -1, -1, -1, 42, 42, 42/), &\n+\t(/3, 3/)))) call abort\n+\n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    a = eoshift (a, -2, (/99, -1, 42/), 2)\n    if (any (a .ne. reshape ((/99, -1, 42, 99, -1, 42, 1, 2, 3/), (/3, 3/)))) &\n@@ -61,6 +84,11 @@ program intrinsic_eoshift\n    if (any (a .ne. reshape ((/ -999, -999, -999, -99, 4, 5, -9, -9, -9 /), &\n         shape(a)))) call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   a = eoshift (a, (/9999, -9999, 0/), (/99, -1, 42/), 2)\n+   if (any (a .ne. reshape ((/99, -1, 3, 99, -1, 6, 99, -1, 9/), (/3, 3/)))) &\n+      call abort\n+\n    ! Test arrays > rank 2\n    b(:, :, 1) = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    b(:, :, 2) = 10 + reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))"}, {"sha": "b1256797e6247f1c0d87439437acf5ee0b1952f8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -1,3 +1,16 @@\n+2005-07-07  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21594\n+\t* intrinsics/eoshift0.c:  If abs(shift) > len, fill the\n+\tthe whole array with the boundary value, but don't overrun it.\n+\t* intrinsics/eoshift2.c:  Likewise.\n+\t* m4/eoshift1.m4:  Likewise.\n+\t* m4/eoshift3.m4:  Likewise.\n+\t* generated/eoshift1_4.c:  Regenerated.\n+\t* generated/eoshift1_8.c:  Regenerated.\n+\t* generated/eoshift3_4.c:  Regenerated.\n+\t* generated/eoshift3_8.c:  Regenerated.\n+\n 2005-07-07  Feng Wang  <fengwang@nudt.edu.cn>\n \n \tPR fortran/16531"}, {"sha": "6012c3fe902b276346582519830a6899f3ee725d", "filename": "libgfortran/generated/eoshift1_4.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_4.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -158,7 +158,14 @@ eoshift1_4 (gfc_array_char *ret,\n     {\n       /* Do the shift for this dimension.  */\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}, {"sha": "3caf66a60900d4c78c9a401b6ee25f4563828e40", "filename": "libgfortran/generated/eoshift1_8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_8.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -158,7 +158,14 @@ eoshift1_8 (gfc_array_char *ret,\n     {\n       /* Do the shift for this dimension.  */\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}, {"sha": "1fe4e765c82eaac27b76ff7ff9a0c62e5d466e81", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -167,7 +167,14 @@ eoshift3_4 (gfc_array_char *ret, gfc_array_char *array,\n     {\n       /* Do the shift for this dimension.  */\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}, {"sha": "69ead625577f4fb16661a6dbc1c32e4ff1f4bdbc", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -167,7 +167,14 @@ eoshift3_8 (gfc_array_char *ret, gfc_array_char *array,\n     {\n       /* Do the shift for this dimension.  */\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}, {"sha": "6152e9fccbd8ab2e0943ce2960ba966302412756", "filename": "libgfortran/intrinsics/eoshift0.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fintrinsics%2Feoshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fintrinsics%2Feoshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift0.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -131,10 +131,19 @@ eoshift0 (gfc_array_char * ret, const gfc_array_char * array,\n   sstride0 = sstride[0];\n   rptr = ret->data;\n   sptr = array->data;\n-  if (shift > 0)\n-    len = len - shift;\n+\n+  if ((shift >= 0 ? shift : -shift) > len)\n+    {\n+      shift = len;\n+      len = 0;\n+    }\n   else\n-    len = len + shift;\n+    {\n+      if (shift > 0)\n+\tlen = len - shift;\n+      else\n+\tlen = len + shift;\n+    }\n \n   while (rptr)\n     {"}, {"sha": "4e2b41ba7d3fa2a9705c01781777e579b52d00e7", "filename": "libgfortran/intrinsics/eoshift2.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fintrinsics%2Feoshift2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fintrinsics%2Feoshift2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift2.c?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -139,16 +139,25 @@ eoshift2 (gfc_array_char *ret, const gfc_array_char *array,\n   bstride0 = bstride[0];\n   rptr = ret->data;\n   sptr = array->data;\n+\n+  if ((shift >= 0 ? shift : -shift ) > len)\n+    {\n+      shift = len;\n+      len = 0;\n+    }\n+  else\n+    {\n+      if (shift > 0)\n+\tlen = len - shift;\n+      else\n+\tlen = len + shift;\n+    }\n+  \n   if (bound)\n     bptr = bound->data;\n   else\n     bptr = zeros;\n \n-  if (shift > 0)\n-    len = len - shift;\n-  else\n-    len = len + shift;\n-\n   while (rptr)\n     {\n       /* Do the shift for this dimension.  */"}, {"sha": "a650f952a64897e8200902264705d1f8564b2b31", "filename": "libgfortran/m4/eoshift1.m4", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fm4%2Feoshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fm4%2Feoshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift1.m4?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -159,7 +159,14 @@ eoshift1_`'atype_kind (gfc_array_char *ret,\n     {\n `      /* Do the shift for this dimension.  */'\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}, {"sha": "1e04113e12b39f705e25ce398320dbf0f17e3d22", "filename": "libgfortran/m4/eoshift3.m4", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fm4%2Feoshift3.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b3a403a5b5424d15829d47abd4cb1a8a87e93e/libgfortran%2Fm4%2Feoshift3.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift3.m4?ref=47b3a403a5b5424d15829d47abd4cb1a8a87e93e", "patch": "@@ -168,7 +168,14 @@ eoshift3_`'atype_kind (gfc_array_char *ret, gfc_array_char *array,\n     {\n `      /* Do the shift for this dimension.  */'\n       sh = *hptr;\n-      delta = (sh >= 0) ? sh: -sh;\n+      if (( sh >= 0 ? sh : -sh ) > len)\n+\t{\n+\t  delta = len;\n+\t  sh = len;\n+\t}\n+      else\n+\tdelta = (sh >= 0) ? sh: -sh;\n+\n       if (sh > 0)\n         {\n           src = &sptr[delta * soffset];"}]}