{"sha": "5b6d595bd778d9737f12c79118ce5cc9410f421b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2ZDU5NWJkNzc4ZDk3MzdmMTJjNzkxMThjZTVjYzk0MTBmNDIxYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-22T08:58:25Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-22T08:58:25Z"}, "message": "re PR bootstrap/49794 (Solaris 10/x86 bootstrap broken by C++ build)\n\n2011-07-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tgcc:\n\tPR bootstrap/49794\n\t* configure.ac: Test AM_ICONV with CXX.\n\t* configure: Regenerate.\n\t* config/sol2-c.c (solaris_format_types): Use EXPORTED_CONST.\n\n\tgcc/ada:\n\tPR bootstrap/49794\n\t* init.c [sun && __SVR4 && !__vxworks] (__gnat_install_handler):\n\tAssign to act.sa_sigaction.\n\t* tracebak.c [USE_GENERIC_UNWINDER] (__gnat_backtrace): Cast\n\tcurrent->return_address to char * before arithmetic.\n\n\tlibcpp:\n\tPR bootstrap/49794\n\t* configure.ac: Test AM_ICONV with CXX.\n\t* configure: Regenerate.\n\t* system.h (HAVE_DESIGNATED_INITIALIZERS): Never define for C++.\n\nCo-Authored-By: Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\nFrom-SVN: r176620", "tree": {"sha": "e86bdc7a288c779fda5bb7d285129adcd52003f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e86bdc7a288c779fda5bb7d285129adcd52003f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6d595bd778d9737f12c79118ce5cc9410f421b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6d595bd778d9737f12c79118ce5cc9410f421b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6d595bd778d9737f12c79118ce5cc9410f421b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6d595bd778d9737f12c79118ce5cc9410f421b/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94017021b1c6372bd66c6aad2044a2a3d41f81f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94017021b1c6372bd66c6aad2044a2a3d41f81f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94017021b1c6372bd66c6aad2044a2a3d41f81f5"}], "stats": {"total": 453, "additions": 441, "deletions": 12}, "files": [{"sha": "dfba411ffe394a43dd429997f3960c50b91e5f9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1,3 +1,11 @@\n+2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR bootstrap/49794\n+\t* configure.ac: Test AM_ICONV with CXX.\n+\t* configure: Regenerate.\n+\t* config/sol2-c.c (solaris_format_types): Use EXPORTED_CONST.\n+\n 2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR bootstrap/49797"}, {"sha": "8ba499bfd246cc97d76942cd4e8b5a18d8a25673", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1,3 +1,11 @@\n+2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR bootstrap/49794\n+\t* init.c [sun && __SVR4 && !__vxworks] (__gnat_install_handler):\n+\tAssign to act.sa_sigaction.\n+\t* tracebak.c [USE_GENERIC_UNWINDER] (__gnat_backtrace): Cast\n+\tcurrent->return_address to char * before arithmetic.\n+\n 2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* init.c [sgi] (__gnat_error_handler): Update sigaction(2) citation."}, {"sha": "b46cafdbbc80855d6ddff1dca858359d27cf8ffa", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1046,7 +1046,7 @@ __gnat_install_handler (void)\n      exceptions.  Make sure that the handler isn't interrupted by another\n      signal that might cause a scheduling event!  */\n \n-  act.sa_handler = __gnat_error_handler;\n+  act.sa_sigaction = __gnat_error_handler;\n   act.sa_flags = SA_NODEFER | SA_RESTART | SA_SIGINFO;\n   sigemptyset (&act.sa_mask);\n "}, {"sha": "23fc5c7985863d84dbb3496d4d34767f1287b639", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -482,12 +482,12 @@ __gnat_backtrace (void **array,\n   while (cnt < size)\n     {\n       if (STOP_FRAME (current, top_stack) ||\n-\t  !VALID_STACK_FRAME((char *)(current->return_address + PC_ADJUST)))\n+\t  !VALID_STACK_FRAME(((char *) current->return_address) + PC_ADJUST))\n         break;\n \n       if (current->return_address < exclude_min\n \t  || current->return_address > exclude_max)\n-        array[cnt++] = current->return_address + PC_ADJUST;\n+        array[cnt++] = ((char *) current->return_address) + PC_ADJUST;\n \n       current = (struct layout *) ((size_t) current->next + FRAME_OFFSET (1));\n     }"}, {"sha": "0076be741ce2d5460834aef20c3b5ad6b771df1a", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1,5 +1,6 @@\n /* Solaris support needed only by C/C++ frontends.\n-   Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2009, 2010, 2011\n+   Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n This file is part of GCC.\n@@ -68,7 +69,7 @@ static const format_char_info cmn_err_char_table[] =\n   { NULL,  0, STD_C89, NOLENGTHS, NULL, NULL, NULL }\n };\n \n-const format_kind_info solaris_format_types[] = {\n+EXPORTED_CONST format_kind_info solaris_format_types[] = {\n   { \"cmn_err\",  cmn_err_length_specs,  cmn_err_char_table, \"\", NULL,\n     cmn_err_flag_specs, cmn_err_flag_pairs,\n     FMT_FLAG_ARG_CONVERT|FMT_FLAG_EMPTY_PREC_OK,"}, {"sha": "e33fc1bfd4bd0cabf7f6040ba64ce84632245b1b", "filename": "gcc/configure", "status": "modified", "additions": 175, "deletions": 2, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -9294,6 +9294,8 @@ $as_echo \"#define HAVE_WORKING_FORK 1\" >>confdefs.h\n fi\n \n \n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which exposes a different\n+# iconv() prototype.\n \n       if test \"X$prefix\" = \"XNONE\"; then\n     acl_final_prefix=\"$ac_default_prefix\"\n@@ -9835,6 +9837,175 @@ fi\n   fi\n \n \n+if test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"; then :\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+\n+\n+\n+\n+          am_save_CPPFLAGS=\"$CPPFLAGS\"\n+\n+  for element in $INCICONV; do\n+    haveit=\n+    for x in $CPPFLAGS; do\n+\n+  acl_save_prefix=\"$prefix\"\n+  prefix=\"$acl_final_prefix\"\n+  acl_save_exec_prefix=\"$exec_prefix\"\n+  exec_prefix=\"$acl_final_exec_prefix\"\n+  eval x=\\\"$x\\\"\n+  exec_prefix=\"$acl_save_exec_prefix\"\n+  prefix=\"$acl_save_prefix\"\n+\n+      if test \"X$x\" = \"X$element\"; then\n+        haveit=yes\n+        break\n+      fi\n+    done\n+    if test -z \"$haveit\"; then\n+      CPPFLAGS=\"${CPPFLAGS}${CPPFLAGS:+ }$element\"\n+    fi\n+  done\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for iconv\" >&5\n+$as_echo_n \"checking for iconv... \" >&6; }\n+if test \"${am_cv_func_iconv+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+    am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n+    am_cv_lib_iconv=no\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+#include <iconv.h>\n+int\n+main ()\n+{\n+iconv_t cd = iconv_open(\"\",\"\");\n+       iconv(cd,NULL,NULL,NULL,NULL);\n+       iconv_close(cd);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  am_cv_func_iconv=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    if test \"$am_cv_func_iconv\" != yes; then\n+      am_save_LIBS=\"$LIBS\"\n+      LIBS=\"$LIBS $LIBICONV\"\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+#include <iconv.h>\n+int\n+main ()\n+{\n+iconv_t cd = iconv_open(\"\",\"\");\n+         iconv(cd,NULL,NULL,NULL,NULL);\n+         iconv_close(cd);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  am_cv_lib_iconv=yes\n+        am_cv_func_iconv=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+      LIBS=\"$am_save_LIBS\"\n+    fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv\" >&5\n+$as_echo \"$am_cv_func_iconv\" >&6; }\n+  if test \"$am_cv_func_iconv\" = yes; then\n+\n+$as_echo \"#define HAVE_ICONV 1\" >>confdefs.h\n+\n+  fi\n+  if test \"$am_cv_lib_iconv\" = yes; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to link with libiconv\" >&5\n+$as_echo_n \"checking how to link with libiconv... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBICONV\" >&5\n+$as_echo \"$LIBICONV\" >&6; }\n+  else\n+            CPPFLAGS=\"$am_save_CPPFLAGS\"\n+    LIBICONV=\n+    LTLIBICONV=\n+  fi\n+\n+\n+\n+  if test \"$am_cv_func_iconv\" = yes; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for iconv declaration\" >&5\n+$as_echo_n \"checking for iconv declaration... \" >&6; }\n+    if test \"${am_cv_proto_iconv+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <stdlib.h>\n+#include <iconv.h>\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+#if defined(__STDC__) || defined(__cplusplus)\n+size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n+#else\n+size_t iconv();\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  am_cv_proto_iconv_arg1=\"\"\n+else\n+  am_cv_proto_iconv_arg1=\"const\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+      am_cv_proto_iconv=\"extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\"\n+fi\n+\n+    am_cv_proto_iconv=`echo \"$am_cv_proto_iconv\" | tr -s ' ' | sed -e 's/( /(/'`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${ac_t:-\n+         }$am_cv_proto_iconv\" >&5\n+$as_echo \"${ac_t:-\n+         }$am_cv_proto_iconv\" >&6; }\n+\n+cat >>confdefs.h <<_ACEOF\n+#define ICONV_CONST $am_cv_proto_iconv_arg1\n+_ACEOF\n+\n+  fi\n+\n+   ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+else\n \n \n \n@@ -9990,6 +10161,8 @@ _ACEOF\n \n   fi\n \n+fi\n+\n # Until we have in-tree GNU iconv:\n LIBICONV_DEP=\n \n@@ -17628,7 +17801,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17631 \"configure\"\n+#line 17804 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17734,7 +17907,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17737 \"configure\"\n+#line 17910 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "fb243272c79a5b2cd0940957c0039c242cd7f41b", "filename": "gcc/configure.ac", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1041,7 +1041,14 @@ case \"${host}\" in\n esac\n AC_FUNC_FORK\n \n-AM_ICONV\n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which exposes a different\n+# iconv() prototype.\n+AS_IF([test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"],\n+  [AC_LANG_PUSH([C++])\n+   AM_ICONV\n+   AC_LANG_POP([C++])],\n+  [AM_ICONV])\n+\n # Until we have in-tree GNU iconv:\n LIBICONV_DEP=\n AC_SUBST(LIBICONV_DEP)"}, {"sha": "e500332dd273643947268660ad81a604ac85f8dd", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1,3 +1,11 @@\n+2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR bootstrap/49794\n+\t* configure.ac: Test AM_ICONV with CXX.\n+\t* configure: Regenerate.\n+\t* system.h (HAVE_DESIGNATED_INITIALIZERS): Never define for C++.\n+\n 2011-07-15  Dodji Seketeli  <dodji@redhat.com>\n \n \t* directives.c (struct if_stack): Use source_location as type"}, {"sha": "b453a7b349bd6043c4525274072b50913ce6dec7", "filename": "libcpp/configure", "status": "modified", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -2104,6 +2104,52 @@ $as_echo \"$ac_res\" >&6; }\n   eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n \n } # ac_fn_c_check_decl\n+\n+# ac_fn_cxx_try_link LINENO\n+# -------------------------\n+# Try to link conftest.$ac_ext, and return whether this succeeded.\n+ac_fn_cxx_try_link ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  rm -f conftest.$ac_objext conftest$ac_exeext\n+  if { { ac_try=\"$ac_link\"\n+case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_link\") 2>conftest.err\n+  ac_status=$?\n+  if test -s conftest.err; then\n+    grep -v '^ *+' conftest.err >conftest.er1\n+    cat conftest.er1 >&5\n+    mv -f conftest.er1 conftest.err\n+  fi\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } && {\n+\t test -z \"$ac_cxx_werror_flag\" ||\n+\t test ! -s conftest.err\n+       } && test -s conftest$ac_exeext && {\n+\t test \"$cross_compiling\" = yes ||\n+\t $as_test_x conftest$ac_exeext\n+       }; then :\n+  ac_retval=0\n+else\n+  $as_echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+\tac_retval=1\n+fi\n+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n+  # interfere with the next link command; also delete a directory that is\n+  # left behind by Apple's compiler.  We do this before executing the actions.\n+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+  return $ac_retval\n+\n+} # ac_fn_cxx_try_link\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -6344,6 +6390,8 @@ $as_echo \"#define HAVE_UCHAR 1\" >>confdefs.h\n \n fi\n \n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which exposes a different\n+# iconv() prototype.\n \n       if test \"X$prefix\" = \"XNONE\"; then\n     acl_final_prefix=\"$ac_default_prefix\"\n@@ -6885,6 +6933,175 @@ fi\n   fi\n \n \n+if test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"; then :\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+\n+\n+\n+\n+          am_save_CPPFLAGS=\"$CPPFLAGS\"\n+\n+  for element in $INCICONV; do\n+    haveit=\n+    for x in $CPPFLAGS; do\n+\n+  acl_save_prefix=\"$prefix\"\n+  prefix=\"$acl_final_prefix\"\n+  acl_save_exec_prefix=\"$exec_prefix\"\n+  exec_prefix=\"$acl_final_exec_prefix\"\n+  eval x=\\\"$x\\\"\n+  exec_prefix=\"$acl_save_exec_prefix\"\n+  prefix=\"$acl_save_prefix\"\n+\n+      if test \"X$x\" = \"X$element\"; then\n+        haveit=yes\n+        break\n+      fi\n+    done\n+    if test -z \"$haveit\"; then\n+      CPPFLAGS=\"${CPPFLAGS}${CPPFLAGS:+ }$element\"\n+    fi\n+  done\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for iconv\" >&5\n+$as_echo_n \"checking for iconv... \" >&6; }\n+if test \"${am_cv_func_iconv+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+    am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n+    am_cv_lib_iconv=no\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+#include <iconv.h>\n+int\n+main ()\n+{\n+iconv_t cd = iconv_open(\"\",\"\");\n+       iconv(cd,NULL,NULL,NULL,NULL);\n+       iconv_close(cd);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  am_cv_func_iconv=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    if test \"$am_cv_func_iconv\" != yes; then\n+      am_save_LIBS=\"$LIBS\"\n+      LIBS=\"$LIBS $LIBICONV\"\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+#include <iconv.h>\n+int\n+main ()\n+{\n+iconv_t cd = iconv_open(\"\",\"\");\n+         iconv(cd,NULL,NULL,NULL,NULL);\n+         iconv_close(cd);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  am_cv_lib_iconv=yes\n+        am_cv_func_iconv=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+      LIBS=\"$am_save_LIBS\"\n+    fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv\" >&5\n+$as_echo \"$am_cv_func_iconv\" >&6; }\n+  if test \"$am_cv_func_iconv\" = yes; then\n+\n+$as_echo \"#define HAVE_ICONV 1\" >>confdefs.h\n+\n+  fi\n+  if test \"$am_cv_lib_iconv\" = yes; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to link with libiconv\" >&5\n+$as_echo_n \"checking how to link with libiconv... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBICONV\" >&5\n+$as_echo \"$LIBICONV\" >&6; }\n+  else\n+            CPPFLAGS=\"$am_save_CPPFLAGS\"\n+    LIBICONV=\n+    LTLIBICONV=\n+  fi\n+\n+\n+\n+  if test \"$am_cv_func_iconv\" = yes; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for iconv declaration\" >&5\n+$as_echo_n \"checking for iconv declaration... \" >&6; }\n+    if test \"${am_cv_proto_iconv+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <stdlib.h>\n+#include <iconv.h>\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+#if defined(__STDC__) || defined(__cplusplus)\n+size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n+#else\n+size_t iconv();\n+#endif\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  am_cv_proto_iconv_arg1=\"\"\n+else\n+  am_cv_proto_iconv_arg1=\"const\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+      am_cv_proto_iconv=\"extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\"\n+fi\n+\n+    am_cv_proto_iconv=`echo \"$am_cv_proto_iconv\" | tr -s ' ' | sed -e 's/( /(/'`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${ac_t:-\n+         }$am_cv_proto_iconv\" >&5\n+$as_echo \"${ac_t:-\n+         }$am_cv_proto_iconv\" >&6; }\n+\n+cat >>confdefs.h <<_ACEOF\n+#define ICONV_CONST $am_cv_proto_iconv_arg1\n+_ACEOF\n+\n+  fi\n+\n+   ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+else\n \n \n \n@@ -7040,6 +7257,7 @@ _ACEOF\n \n   fi\n \n+fi\n \n # More defines and substitutions.\n PACKAGE=\"$PACKAGE_TARNAME\""}, {"sha": "170932cbc9f33efb7e5fb333c0dce3da6e835022", "filename": "libcpp/configure.ac", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -102,7 +102,13 @@ if test $ac_cv_type_uchar = yes; then\n   [Define if <sys/types.h> defines \\`uchar'.])\n fi\n \n-AM_ICONV\n+# g++ on Solaris 10+ defines _XOPEN_SOURCE=600, which exposes a different\n+# iconv() prototype.\n+AS_IF([test \"$ENABLE_BUILD_WITH_CXX\" = \"yes\"],\n+  [AC_LANG_PUSH([C++])\n+   AM_ICONV\n+   AC_LANG_POP([C++])],\n+  [AM_ICONV])\n \n # More defines and substitutions.\n PACKAGE=\"$PACKAGE_TARNAME\""}, {"sha": "d1fb87ed34874ccd363fd70ab9e70a70935502ba", "filename": "libcpp/system.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6d595bd778d9737f12c79118ce5cc9410f421b/libcpp%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fsystem.h?ref=5b6d595bd778d9737f12c79118ce5cc9410f421b", "patch": "@@ -1,6 +1,6 @@\n /* Get common system includes and various definitions and declarations based\n    on autoconf macros.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -353,8 +353,8 @@ extern void abort (void);\n    compilers, including G++.  -- gdr, 2005-05-18  */\n #if !defined(HAVE_DESIGNATED_INITIALIZERS)\n #define HAVE_DESIGNATED_INITIALIZERS \\\n-  ((!defined(__cplusplus) && (GCC_VERSION >= 2007)) \\\n-   || (__STDC_VERSION__ >= 199901L))\n+  (!defined(__cplusplus) \\\n+   && ((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L)))\n #endif\n \n #ifndef offsetof"}]}