{"sha": "21dfb22920ce32fcf336eac4513fa44de28819e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkZmIyMjkyMGNlMzJmY2YzMzZlYWM0NTEzZmE0NGRlMjg4MTllMA==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-05-11T17:33:37Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-05-11T17:33:37Z"}, "message": "testsuite: Fix input operands of gcc.dg/guality/pr43077-1.c\n\nThe type of the output operands *p and *q of the extended asm statement\nof function foo is unsigned long whereas the type of the corresponding\ninput operands is int.  This results, e.g. on IBM Z, in the case that\nthe immediates 2 and 3 are written into registers in SI mode and read in\nDI mode resulting in wrong values.  Fixed by lifting the input operands\nto type long.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/guality/pr43077-1.c: Align types of output and input\n\toperands by lifting immediates to type long.", "tree": {"sha": "668818c940a27e3aa5c0575c7cdb86e267c34090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668818c940a27e3aa5c0575c7cdb86e267c34090"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21dfb22920ce32fcf336eac4513fa44de28819e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21dfb22920ce32fcf336eac4513fa44de28819e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21dfb22920ce32fcf336eac4513fa44de28819e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21dfb22920ce32fcf336eac4513fa44de28819e0/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84b384a16f388c68166b0603e50d0b477d0830a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84b384a16f388c68166b0603e50d0b477d0830a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84b384a16f388c68166b0603e50d0b477d0830a7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2d9376298d46f17ab49cbfae29c894319f78e358", "filename": "gcc/testsuite/gcc.dg/guality/pr43077-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21dfb22920ce32fcf336eac4513fa44de28819e0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21dfb22920ce32fcf336eac4513fa44de28819e0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c?ref=21dfb22920ce32fcf336eac4513fa44de28819e0", "patch": "@@ -24,7 +24,7 @@ int __attribute__((noinline))\n foo (unsigned long *p, unsigned long *q)\n {\n   int ret;\n-  asm volatile (\"\" : \"=r\" (ret), \"=r\" (*p), \"=r\" (*q) : \"0\" (1), \"1\" (2), \"2\" (3));\n+  asm volatile (\"\" : \"=r\" (ret), \"=r\" (*p), \"=r\" (*q) : \"0\" (1), \"1\" (2l), \"2\" (3l));\n   return ret;\n }\n "}]}