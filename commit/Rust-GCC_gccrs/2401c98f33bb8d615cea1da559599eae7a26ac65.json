{"sha": "2401c98f33bb8d615cea1da559599eae7a26ac65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwMWM5OGYzM2JiOGQ2MTVjZWExZGE1NTk1OTllYWU3YTI2YWM2NQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-12-11T11:10:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:10:32Z"}, "message": "[Ada] Minor reformatting\n\n2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb, exp_ch7.adb, gnat1drv.adb, sem_ch10.adb,\n\tsem_ch13.adb, sem_ch6.adb, sem_ch7.adb, sem_util.adb: Minor\n\treformatting.\n\nFrom-SVN: r266994", "tree": {"sha": "643615dc8d5c50446f56a8c3755754233341d31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/643615dc8d5c50446f56a8c3755754233341d31e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2401c98f33bb8d615cea1da559599eae7a26ac65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2401c98f33bb8d615cea1da559599eae7a26ac65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2401c98f33bb8d615cea1da559599eae7a26ac65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2401c98f33bb8d615cea1da559599eae7a26ac65/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "504775519d3199ea89400f85a599cb791f736cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/504775519d3199ea89400f85a599cb791f736cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/504775519d3199ea89400f85a599cb791f736cb7"}], "stats": {"total": 211, "additions": 119, "deletions": 92}, "files": [{"sha": "3836046d47a3d40ad8372e74531cf220abf96b64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -1,3 +1,9 @@\n+2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_aggr.adb, exp_ch7.adb, gnat1drv.adb, sem_ch10.adb,\n+\tsem_ch13.adb, sem_ch6.adb, sem_ch7.adb, sem_util.adb: Minor\n+\treformatting.\n+\n 2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fe.h (Is_Atomic_Object): Declare."}, {"sha": "1b644e1d74bfa32cd6860537cd0d9e7e93f2dabf", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -7687,6 +7687,7 @@ package body Exp_Aggr is\n    is\n       In_Obj_Decl : Boolean := False;\n       P           : Node_Id := Parent (N);\n+\n    begin\n       while Present (P) loop\n          if Nkind (P) = N_Object_Declaration then\n@@ -8524,28 +8525,27 @@ package body Exp_Aggr is\n    ----------------------------\n \n    function Static_Array_Aggregate (N : Node_Id) return Boolean is\n-\n-      function Is_Static_Component (N : Node_Id) return Boolean;\n-      --  Return True if N has a compile-time known value and can be passed as\n-      --  is to the back-end without further expansion.\n+      function Is_Static_Component (Nod : Node_Id) return Boolean;\n+      --  Return True if Nod has a compile-time known value and can be passed\n+      --  as is to the back-end without further expansion.\n \n       ---------------------------\n       --  Is_Static_Component  --\n       ---------------------------\n \n-      function Is_Static_Component (N : Node_Id) return Boolean is\n+      function Is_Static_Component (Nod : Node_Id) return Boolean is\n       begin\n-         if Nkind_In (N, N_Integer_Literal, N_Real_Literal) then\n+         if Nkind_In (Nod, N_Integer_Literal, N_Real_Literal) then\n             return True;\n \n-         elsif Is_Entity_Name (N)\n-           and then Present (Entity (N))\n-           and then Ekind (Entity (N)) = E_Enumeration_Literal\n+         elsif Is_Entity_Name (Nod)\n+           and then Present (Entity (Nod))\n+           and then Ekind (Entity (Nod)) = E_Enumeration_Literal\n          then\n             return True;\n \n-         elsif Nkind (N) = N_Aggregate\n-           and then Compile_Time_Known_Aggregate (N)\n+         elsif Nkind (Nod) = N_Aggregate\n+           and then Compile_Time_Known_Aggregate (Nod)\n          then\n             return True;\n \n@@ -8554,13 +8554,15 @@ package body Exp_Aggr is\n          end if;\n       end Is_Static_Component;\n \n-      Bounds : constant Node_Id := Aggregate_Bounds (N);\n+      --  Local variables\n+\n+      Bounds : constant Node_Id   := Aggregate_Bounds (N);\n+      Typ    : constant Entity_Id := Etype (N);\n \n-      Typ       : constant Entity_Id := Etype (N);\n-      Agg       : Node_Id;\n-      Expr      : Node_Id;\n-      Lo        : Node_Id;\n-      Hi        : Node_Id;\n+      Agg  : Node_Id;\n+      Expr : Node_Id;\n+      Lo   : Node_Id;\n+      Hi   : Node_Id;\n \n    --  Start of processing for Static_Array_Aggregate\n "}, {"sha": "4405a84381bfa1bf2cba8d475b3cac7b37fd7f3e", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -4005,14 +4005,14 @@ package body Exp_Ch7 is\n       --  may need an activation record.\n \n       function First_Local_Scope (L : List_Id) return Entity_Id;\n-      --  Find first entity in the elaboration code of the body that\n-      --  contains or represents a subprogrsam body. A body can appear\n-      --  within a block or a loop. or can appear by itself if generated\n-      --  for an object declaration that involves controlled actions.\n-      --  The first such entity encountered is used to reset the scopes\n-      --  of all entities that become local to the hew elboration procedure.\n-      --  This is needed for subsequent unnesting, which depends on the\n-      --  scope links to determine the nesting level of each subprogram.\n+      --  Find first entity in the elaboration code of the body that contains\n+      --  or represents a subprogram body. A body can appear within a block or\n+      --  a loop or can appear by itself if generated for an object declaration\n+      --  that involves controlled actions. The first such entity encountered\n+      --  is used to reset the scopes of all entities that become local to the\n+      --  new elaboration procedure. This is needed for subsequent unnesting,\n+      --  which depends on the scope links to determine the nesting level of\n+      --  each subprogram.\n \n       --------------------------\n       --  Contains_Subprogram --\n@@ -4023,7 +4023,6 @@ package body Exp_Ch7 is\n \n       begin\n          E := First_Entity (Blk);\n-\n          while Present (E) loop\n             if Is_Subprogram (E) then\n                return True;\n@@ -4055,6 +4054,7 @@ package body Exp_Ch7 is\n             case Nkind (Stat) is\n                when N_Block_Statement =>\n                   Id := Entity (Identifier (Stat));\n+\n                   if No (First_Ent) then\n                      First_Ent := Id;\n                   end if;\n@@ -4065,6 +4065,7 @@ package body Exp_Ch7 is\n \n                when N_Loop_Statement =>\n                   Id := Entity (Identifier (Stat));\n+\n                   if No (First_Ent) then\n                      First_Ent := Id;\n                   end if;\n@@ -4092,9 +4093,9 @@ package body Exp_Ch7 is\n \n                   declare\n                      Elif : Node_Id;\n+\n                   begin\n                      Elif := First (Elsif_Parts (Stat));\n-\n                      while Present (Elif) loop\n                         Scop := First_Local_Scope (Statements (Elif));\n \n@@ -4109,9 +4110,9 @@ package body Exp_Ch7 is\n                when N_Case_Statement =>\n                   declare\n                      Alt : Node_Id;\n+\n                   begin\n                      Alt := First (Alternatives (Stat));\n-\n                      while Present (Alt) loop\n                         Scop := First_Local_Scope (Statements (Alt));\n \n@@ -4125,6 +4126,7 @@ package body Exp_Ch7 is\n \n                when N_Subprogram_Body =>\n                   Id := Defining_Entity (Stat);\n+\n                   if No (First_Ent) then\n                      First_Ent := Id;\n                   end if;\n@@ -4156,8 +4158,7 @@ package body Exp_Ch7 is\n         and then Present (H_Seq)\n         and then Is_Compilation_Unit (Current_Scope)\n       then\n-         Ent :=\n-           First_Local_Scope (Statements (H_Seq));\n+         Ent := First_Local_Scope (Statements (H_Seq));\n \n          --  There msy be subprograms declared in the exception handlers\n          --  of the current body."}, {"sha": "9f428148266386810458893a912a2f4298bdb12b", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -1168,8 +1168,9 @@ begin\n          --  error message but do not print the internal 'usage' message.\n \n          if GNATprove_Mode then\n-            Write_Str (\"one of the following is not a valid switch\"\n-                       & \" or source file name: \");\n+            Write_Str\n+              (\"one of the following is not a valid switch or source file \"\n+               & \"name: \");\n             Osint.Dump_Command_Line_Source_File_Names;\n          else\n             Usage;"}, {"sha": "11e514d1b07b74b48a3e2784a6d64bbff010c75f", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -2352,8 +2352,8 @@ package body Sem_Ch10 is\n                Remove_Scope;\n             end if;\n \n-            if Nkind_In\n-                 (Unit (Lib_Spec), N_Package_Body, N_Subprogram_Body)\n+            if Nkind_In (Unit (Lib_Spec), N_Package_Body,\n+                                          N_Subprogram_Body)\n             then\n                Remove_Context (Library_Unit (Lib_Spec));\n             end if;"}, {"sha": "0ed18febe490bc5abe853c6982ef45e9243e4ecc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 40, "deletions": 33, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -5708,6 +5708,7 @@ package body Sem_Ch13 is\n                Assoc := First (Component_Associations (Expr));\n                while Present (Assoc) loop\n                   Analyze (Expression (Assoc));\n+\n                   if not Is_Entity_Name (Expression (Assoc)) then\n                      Error_Msg_N (\"value must be a function\", Assoc);\n                   end if;\n@@ -9363,7 +9364,7 @@ package body Sem_Ch13 is\n          --  The following aspect expressions may contain references to\n          --  components and discriminants of the type.\n \n-         elsif A_Id  = Aspect_Dynamic_Predicate\n+         elsif A_Id = Aspect_Dynamic_Predicate\n            or else A_Id = Aspect_Predicate\n            or else A_Id = Aspect_Priority\n          then\n@@ -9375,7 +9376,8 @@ package body Sem_Ch13 is\n             Preanalyze_Spec_Expression (End_Decl_Expr, T);\n          end if;\n \n-         Err := not Fully_Conformant_Expressions\n+         Err :=\n+           not Fully_Conformant_Expressions\n                  (End_Decl_Expr, Freeze_Expr, Report => True);\n       end if;\n \n@@ -11239,8 +11241,8 @@ package body Sem_Ch13 is\n         and then Scope (E) = Current_Scope\n       then\n          declare\n+            A_Id  : Aspect_Id;\n             Ritem : Node_Id;\n-            A_Id : Aspect_Id;\n \n          begin\n             --  Look for aspect specification entries for this entity\n@@ -11252,6 +11254,7 @@ package body Sem_Ch13 is\n                  and then Is_Delayed_Aspect (Ritem)\n                then\n                   A_Id := Get_Aspect_Id (Ritem);\n+\n                   if A_Id = Aspect_Dynamic_Predicate\n                     or else A_Id = Aspect_Predicate\n                     or else A_Id = Aspect_Priority\n@@ -11274,10 +11277,10 @@ package body Sem_Ch13 is\n \n       end if;\n \n-      --  For a record type, deal with variant parts. This has to be delayed\n-      --  to this point, because of the issue of statically predicated\n-      --  subtypes, which we have to ensure are frozen before checking\n-      --  choices, since we need to have the static choice list set.\n+      --  For a record type, deal with variant parts. This has to be delayed to\n+      --  this point, because of the issue of statically predicated subtypes,\n+      --  which we have to ensure are frozen before checking choices, since we\n+      --  need to have the static choice list set.\n \n       if Is_Record_Type (E) then\n          Check_Variant_Part : declare\n@@ -12456,15 +12459,35 @@ package body Sem_Ch13 is\n       end if;\n    end New_Stream_Subprogram;\n \n+   --------------\n+   -- Pop_Type --\n+   --------------\n+\n+   procedure Pop_Type (E : Entity_Id) is\n+   begin\n+      if Ekind (E) = E_Record_Type and then E = Current_Scope then\n+         End_Scope;\n+\n+      elsif Is_Type (E)\n+        and then Has_Discriminants (E)\n+        and then Nkind (Parent (E)) /= N_Subtype_Declaration\n+      then\n+         Uninstall_Discriminants (E);\n+         Pop_Scope;\n+      end if;\n+   end Pop_Type;\n+\n    ---------------\n    -- Push_Type --\n    ---------------\n \n    procedure Push_Type (E : Entity_Id) is\n       Comp : Entity_Id;\n+\n    begin\n       if Ekind (E) = E_Record_Type then\n          Push_Scope (E);\n+\n          Comp := First_Component (E);\n          while Present (Comp) loop\n             Install_Entity (Comp);\n@@ -12476,8 +12499,8 @@ package body Sem_Ch13 is\n          end if;\n \n       elsif Is_Type (E)\n-         and then Has_Discriminants (E)\n-         and then Nkind (Parent (E)) /= N_Subtype_Declaration\n+        and then Has_Discriminants (E)\n+        and then Nkind (Parent (E)) /= N_Subtype_Declaration\n       then\n          Push_Scope (E);\n          Install_Discriminants (E);\n@@ -12559,9 +12582,6 @@ package body Sem_Ch13 is\n       N     : Node_Id;\n       FOnly : Boolean := False) return Boolean\n    is\n-      S           : Entity_Id;\n-      Parent_Type : Entity_Id;\n-\n       function Is_Derived_Type_With_Constraint return Boolean;\n       --  Check whether T is a derived type with an explicit constraint, in\n       --  which case the constraint has frozen the type and the item is too\n@@ -12589,6 +12609,7 @@ package body Sem_Ch13 is\n \n       function Is_Derived_Type_With_Constraint return Boolean is\n          Decl : constant Node_Id := Declaration_Node (T);\n+\n       begin\n          return Is_Derived_Type (T)\n            and then Is_Frozen (Base_Type (T))\n@@ -12623,14 +12644,19 @@ package body Sem_Ch13 is\n          end if;\n       end Too_Late;\n \n+      --  Local variables\n+\n+      Parent_Type : Entity_Id;\n+      S           : Entity_Id;\n+\n    --  Start of processing for Rep_Item_Too_Late\n \n    begin\n       --  First make sure entity is not frozen (RM 13.1(9))\n \n       if (Is_Frozen (T)\n-         or else (Is_Type (T)\n-           and then Is_Derived_Type_With_Constraint))\n+           or else (Is_Type (T)\n+                     and then Is_Derived_Type_With_Constraint))\n \n         --  Exclude imported types, which may be frozen if they appear in a\n         --  representation clause for a local type.\n@@ -13679,25 +13705,6 @@ package body Sem_Ch13 is\n       end if;\n    end Uninstall_Discriminants;\n \n-   --------------\n-   -- Pop_Type --\n-   --------------\n-\n-   procedure Pop_Type (E : Entity_Id) is\n-   begin\n-      if Ekind (E) = E_Record_Type and then E = Current_Scope then\n-         End_Scope;\n-         return;\n-\n-      elsif Is_Type (E)\n-         and then Has_Discriminants (E)\n-         and then Nkind (Parent (E)) /= N_Subtype_Declaration\n-      then\n-         Uninstall_Discriminants (E);\n-         Pop_Scope;\n-      end if;\n-   end Pop_Type;\n-\n    ------------------------------\n    -- Validate_Address_Clauses --\n    ------------------------------"}, {"sha": "32c45614d42aa0b72cdbbc2bddfb689a6a29d90c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -8832,27 +8832,33 @@ package body Sem_Ch6 is\n       --  for analysis and/or expansion to make things look as though they\n       --  conform when they do not, e.g. by converting 1+2 into 3.\n \n-      Result : Boolean;\n-      function FCE (Given_E1, Given_E2 : Node_Id) return Boolean;\n-      function FCE (Given_E1, Given_E2 : Node_Id) return Boolean is\n-      begin\n-         return Fully_Conformant_Expressions (Given_E1, Given_E2, Report);\n-      end FCE;\n+      function FCE (Given_E1 : Node_Id; Given_E2 : Node_Id) return Boolean;\n+      --  ???\n \n-      function FCL (L1, L2 : List_Id) return Boolean;\n+      function FCL (L1 : List_Id; L2 : List_Id) return Boolean;\n       --  Compare elements of two lists for conformance. Elements have to be\n       --  conformant, and actuals inserted as default parameters do not match\n       --  explicit actuals with the same value.\n \n-      function FCO (Op_Node, Call_Node : Node_Id) return Boolean;\n+      function FCO (Op_Node : Node_Id; Call_Node : Node_Id) return Boolean;\n       --  Compare an operator node with a function call\n \n+      ---------\n+      -- FCE --\n+      ---------\n+\n+      function FCE (Given_E1 : Node_Id; Given_E2 : Node_Id) return Boolean is\n+      begin\n+         return Fully_Conformant_Expressions (Given_E1, Given_E2, Report);\n+      end FCE;\n+\n       ---------\n       -- FCL --\n       ---------\n \n-      function FCL (L1, L2 : List_Id) return Boolean is\n-         N1, N2 : Node_Id;\n+      function FCL (L1 : List_Id; L2 : List_Id) return Boolean is\n+         N1 : Node_Id;\n+         N2 : Node_Id;\n \n       begin\n          if L1 = No_List then\n@@ -8892,7 +8898,7 @@ package body Sem_Ch6 is\n       -- FCO --\n       ---------\n \n-      function FCO (Op_Node, Call_Node : Node_Id) return Boolean is\n+      function FCO (Op_Node : Node_Id; Call_Node : Node_Id) return Boolean is\n          Actuals : constant List_Id := Parameter_Associations (Call_Node);\n          Act     : Node_Id;\n \n@@ -8919,6 +8925,10 @@ package body Sem_Ch6 is\n          end if;\n       end FCO;\n \n+      --  Local variables\n+\n+      Result : Boolean;\n+\n    --  Start of processing for Fully_Conformant_Expressions\n \n    begin"}, {"sha": "50045170fde9edc6135d85bc956a09c50a0b029e", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -2737,10 +2737,11 @@ package body Sem_Ch7 is\n          --  to the same freeze node as their corresponding full view, if any.\n          --  But we ought not to overwrite a node already inserted in the tree.\n \n-         pragma Assert (Serious_Errors_Detected /= 0\n-           or else No (Freeze_Node (Priv))\n-           or else No (Parent (Freeze_Node (Priv)))\n-           or else Freeze_Node (Priv) = Freeze_Node (Full));\n+         pragma Assert\n+           (Serious_Errors_Detected /= 0\n+             or else No (Freeze_Node (Priv))\n+             or else No (Parent (Freeze_Node (Priv)))\n+             or else Freeze_Node (Priv) = Freeze_Node (Full));\n \n          Set_Freeze_Node (Priv, Freeze_Node (Full));\n "}, {"sha": "4f8bec38aaf306f39ebf4ff625df8479df785b87", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2401c98f33bb8d615cea1da559599eae7a26ac65/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2401c98f33bb8d615cea1da559599eae7a26ac65", "patch": "@@ -14137,11 +14137,11 @@ package body Sem_Util is\n          Deref := Expression (Deref);\n       end if;\n \n-      --  Ada 2005: If we have a component or slice of a dereference,\n-      --  something like X.all.Y (2), and the type of X is access-to-constant,\n-      --  Is_Variable will return False, because it is indeed a constant\n-      --  view. But it might be a view of a variable object, so we want the\n-      --  following condition to be True in that case.\n+      --  Ada 2005: If we have a component or slice of a dereference, something\n+      --  like X.all.Y (2) and the type of X is access-to-constant, Is_Variable\n+      --  will return False, because it is indeed a constant view. But it might\n+      --  be a view of a variable object, so we want the following condition to\n+      --  be True in that case.\n \n       if Is_Variable (Object)\n         or else Is_Variable (Deref)\n@@ -14155,9 +14155,8 @@ package body Sem_Util is\n             --  False (it could be a function selector in a prefix form call\n             --  occurring in an iterator specification).\n \n-            if not\n-              Ekind_In\n-                (Entity (Selector_Name (Object)), E_Component, E_Discriminant)\n+            if not Ekind_In (Entity (Selector_Name (Object)), E_Component,\n+                                                              E_Discriminant)\n             then\n                return False;\n             end if;\n@@ -14172,8 +14171,8 @@ package body Sem_Util is\n             P := Original_Node (Prefix (Object));\n             Prefix_Type := Etype (P);\n \n-            --  If the prefix is a qualified expression, we want to look at\n-            --  its operand.\n+            --  If the prefix is a qualified expression, we want to look at its\n+            --  operand.\n \n             if Nkind (P) = N_Qualified_Expression then\n                P := Expression (P);"}]}