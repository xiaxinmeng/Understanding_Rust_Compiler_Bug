{"sha": "d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg4NmY3Y2MzMzc2ZTVmNjFlMzllODYwNDAxYTEwZGFiNWI4ZjVkOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-03-23T13:43:22Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-03-23T13:43:22Z"}, "message": "re PR sanitizer/59009 (libsanitizer merge from upstream r191666 breaks bootstrap on powerpc64-linux and aarch64-linux)\n\n2015-03-23  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tPR sanitizer/59009\n\t* sanitizer_common/sanitizer_platform_limits_posix.cc: Cherry pick\n\tupstream r230324.\n\t* sanitizer_common/sanitizer_platform.h: Likewise.\n\t* sanitizer_common/sanitizer_common_syscalls.inc: Likewise.\n\nFrom-SVN: r221593", "tree": {"sha": "aafa1460146af840a6857be6db498c08b4098ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aafa1460146af840a6857be6db498c08b4098ff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/comments", "author": null, "committer": null, "parents": [{"sha": "89d390e57a34432f9a8f14b752eec061fcb2b64e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d390e57a34432f9a8f14b752eec061fcb2b64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d390e57a34432f9a8f14b752eec061fcb2b64e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "282afed1e3379443627be24baa0ee3c5b6ab3223", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "patch": "@@ -1,3 +1,11 @@\n+2015-03-23  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR sanitizer/59009\n+\t* sanitizer_common/sanitizer_platform_limits_posix.cc: Cherry pick\n+\tupstream r230324.\n+\t* sanitizer_common/sanitizer_platform.h: Likewise.\n+\t* sanitizer_common/sanitizer_common_syscalls.inc: Likewise.\n+\n 2015-03-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* tsan/tsan_rtl_report.cc (ScopedReport::AddThread): Cherry pick"}, {"sha": "104c27cd5d2c621a499bd67c629679e4f83a6917", "filename": "libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_syscalls.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_syscalls.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_syscalls.inc?ref=d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "patch": "@@ -1441,6 +1441,7 @@ PRE_SYSCALL(fchown)(long fd, long user, long group) {}\n \n POST_SYSCALL(fchown)(long res, long fd, long user, long group) {}\n \n+#if SANITIZER_USES_UID16_SYSCALLS\n PRE_SYSCALL(chown16)(const void *filename, long user, long group) {\n   if (filename)\n     PRE_READ(filename,\n@@ -1550,6 +1551,7 @@ POST_SYSCALL(getgid16)(long res) {}\n PRE_SYSCALL(getegid16)() {}\n \n POST_SYSCALL(getegid16)(long res) {}\n+#endif // SANITIZER_USES_UID16_SYSCALLS\n \n PRE_SYSCALL(utime)(void *filename, void *times) {}\n "}, {"sha": "55bec90b08056657446d23333f42dbad779b8399", "filename": "libsanitizer/sanitizer_common/sanitizer_platform.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform.h?ref=d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "patch": "@@ -107,6 +107,19 @@\n # endif\n #endif\n \n+// udi16 syscalls can only be used when the following conditions are\n+// met:\n+// * target is one of arm32, x86-32, sparc32, sh or m68k\n+// * libc version is libc5, glibc-2.0, glibc-2.1 or glibc-2.2 to 2.15\n+//   built against > linux-2.2 kernel headers\n+// Since we don't want to include libc headers here, we check the\n+// target only.\n+#if defined(__arm__) || SANITIZER_X32 || defined(__sparc__)\n+#define SANITIZER_USES_UID16_SYSCALLS 1\n+#else\n+#define SANITIZER_USES_UID16_SYSCALLS 0\n+#endif\n+\n #ifdef __mips__\n # define SANITIZER_POINTER_FORMAT_LENGTH FIRST_32_SECOND_64(8, 10)\n #else"}, {"sha": "4971c4075bce10aa9ecf623a652bb2c052ea2d2b", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d886f7cc3376e5f61e39e860401a10dab5b8f5d8/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cc?ref=d886f7cc3376e5f61e39e860401a10dab5b8f5d8", "patch": "@@ -1004,7 +1004,7 @@ CHECK_SIZE_AND_OFFSET(__sysctl_args, newlen);\n CHECK_TYPE_SIZE(__kernel_uid_t);\n CHECK_TYPE_SIZE(__kernel_gid_t);\n \n-#if !defined(__aarch64__)\n+#if SANITIZER_USES_UID16_SYSCALLS\n CHECK_TYPE_SIZE(__kernel_old_uid_t);\n CHECK_TYPE_SIZE(__kernel_old_gid_t);\n #endif"}]}