{"sha": "18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlYWEyYzBjZDIwMzhlZTNjNGQ4M2JmOTI1ZWMwYzY1MDkyZDNkZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-09-10T07:54:17Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-09-10T07:54:17Z"}, "message": "re PR fortran/33370 (Structure component arrays)\n\n2007-09-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33370\n\t* trans-expr.c (copyable_array_p):  Add tests that expression\n\tis a variable, that it has no subreferences and that it is a\n\tfull array.\n\t(gfc_trans_assignment): Change conditions to suit modifications\n\tto copyable_array_p.\n\n2007-09-10  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33370\n\t* gfortran.dg/array_memcpy_5.f90:  New test.\n\nFrom-SVN: r128325", "tree": {"sha": "753f6eeeb7a4e22a0d712ed3bd01762a993ce044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/753f6eeeb7a4e22a0d712ed3bd01762a993ce044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/comments", "author": null, "committer": null, "parents": [{"sha": "a5828d1e531377c4a8a279972c6c46d75da1b05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5828d1e531377c4a8a279972c6c46d75da1b05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5828d1e531377c4a8a279972c6c46d75da1b05d"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "8157e00e7cdd646343f760f074d2678ba8a6054b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "patch": "@@ -1,3 +1,12 @@\n+2007-09-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33370\n+\t* trans-expr.c (copyable_array_p):  Add tests that expression\n+\tis a variable, that it has no subreferences and that it is a\n+\tfull array.\n+\t(gfc_trans_assignment): Change conditions to suit modifications\n+\tto copyable_array_p.\n+\n 2007-09-06  Tom Tromey  <tromey@redhat.com>\n \n \t* scanner.c (get_file): Update."}, {"sha": "411109287cee2ec0f84e28ae31b20b2bcf731aa7", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "patch": "@@ -4062,13 +4062,19 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n }\n \n \n-/* Check whether EXPR, which is an EXPR_VARIABLE, is a copyable array.  */\n+/* Check whether EXPR is a copyable array.  */\n \n static bool\n copyable_array_p (gfc_expr * expr)\n {\n+  if (expr->expr_type != EXPR_VARIABLE)\n+    return false;\n+\n   /* First check it's an array.  */\n-  if (expr->rank < 1 || !expr->ref)\n+  if (expr->rank < 1 || !expr->ref || expr->ref->next)\n+    return false;\n+\n+  if (!gfc_full_array_ref_p (expr->ref))\n     return false;\n \n   /* Next check that it's of a simple enough type.  */\n@@ -4109,11 +4115,7 @@ gfc_trans_assignment (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n     }\n \n   /* Special case assigning an array to zero.  */\n-  if (expr1->expr_type == EXPR_VARIABLE\n-      && expr1->rank > 0\n-      && expr1->ref\n-      && expr1->ref->next == NULL\n-      && gfc_full_array_ref_p (expr1->ref)\n+  if (copyable_array_p (expr1)\n       && is_zero_initializer_p (expr2))\n     {\n       tmp = gfc_trans_zero_assign (expr1);\n@@ -4122,12 +4124,8 @@ gfc_trans_assignment (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n     }\n \n   /* Special case copying one array to another.  */\n-  if (expr1->expr_type == EXPR_VARIABLE\n-      && copyable_array_p (expr1)\n-      && gfc_full_array_ref_p (expr1->ref)\n-      && expr2->expr_type == EXPR_VARIABLE\n+  if (copyable_array_p (expr1)\n       && copyable_array_p (expr2)\n-      && gfc_full_array_ref_p (expr2->ref)\n       && gfc_compare_types (&expr1->ts, &expr2->ts)\n       && !gfc_check_dependency (expr1, expr2, 0))\n     {\n@@ -4137,9 +4135,7 @@ gfc_trans_assignment (gfc_expr * expr1, gfc_expr * expr2, bool init_flag)\n     }\n \n   /* Special case initializing an array from a constant array constructor.  */\n-  if (expr1->expr_type == EXPR_VARIABLE\n-      && copyable_array_p (expr1)\n-      && gfc_full_array_ref_p (expr1->ref)\n+  if (copyable_array_p (expr1)\n       && expr2->expr_type == EXPR_ARRAY\n       && gfc_compare_types (&expr1->ts, &expr2->ts))\n     {"}, {"sha": "bd7bde726a204810d13cdb7552fdd64180eaf360", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "patch": "@@ -1,3 +1,8 @@\n+2007-09-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33370\n+\t* gfortran.dg/array_memcpy_5.f90:  New test.\n+\n 2007-09-10  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.dg/tree-ssa/ssa-fre-4.c: Skip for cris-*-* and mmix-*-*."}, {"sha": "40fb6957a0dd10de5b38bfbe40e50e3ebf2cf9c6", "filename": "gcc/testsuite/gfortran.dg/array_memcpy_5.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_memcpy_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_memcpy_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_memcpy_5.f90?ref=18eaa2c0cd2038ee3c4d83bf925ec0c65092d3de", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! Tests the fix for PR33370, in which array copying, with subreferences\n+! was broken due to a regression.\n+!\n+! Reported by Thomas Koenig <tkoenig@gcc.gnu.org>\n+!\n+program main\n+  type foo\n+    integer :: i\n+     character(len=3) :: c\n+  end type foo\n+  type(foo), dimension(2) :: a = (/foo (1, \"uvw\"), foo (2, \"xyz\")/)\n+  type(foo), dimension(2) :: b = (/foo (101, \"abc\"), foo (102, \"def\")/)\n+  a%i = 0\n+  print *, a\n+  a%i = (/ 12, 2/)\n+  if (any (a%c .ne. (/\"uvw\", \"xyz\"/))) call abort ()\n+  if (any (a%i .ne. (/12, 2/))) call abort ()\n+  a%i = b%i\n+  if (any (a%c .ne. (/\"uvw\", \"xyz\"/))) call abort ()\n+  if (any (a%i .ne. (/101, 102/))) call abort ()\n+end program main"}]}