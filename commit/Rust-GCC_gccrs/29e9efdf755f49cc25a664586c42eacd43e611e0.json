{"sha": "29e9efdf755f49cc25a664586c42eacd43e611e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllOWVmZGY3NTVmNDljYzI1YTY2NDU4NmM0MmVhY2Q0M2U2MTFlMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-05T16:37:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-05T16:37:38Z"}, "message": "expr.c (store_expr): Use emit_block_move only if both source and target are MEMs.\n\n2010-08-05  Richard Guenther  <rguenther@suse.de>\n\n\t* expr.c (store_expr): Use emit_block_move only if both\n\tsource and target are MEMs.  Use store_bit_field if only\n\tthe target is a MEM.\n\nFrom-SVN: r162918", "tree": {"sha": "dfdf3d90662bbb674a86d1f0e732bbad9e8aa718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfdf3d90662bbb674a86d1f0e732bbad9e8aa718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e9efdf755f49cc25a664586c42eacd43e611e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e9efdf755f49cc25a664586c42eacd43e611e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e9efdf755f49cc25a664586c42eacd43e611e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e9efdf755f49cc25a664586c42eacd43e611e0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3576fa73ff12307297fe73ff8c92ff059669e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3576fa73ff12307297fe73ff8c92ff059669e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3576fa73ff12307297fe73ff8c92ff059669e3a"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "1397b74eb991de01c19e1422db646642b95f6aa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e9efdf755f49cc25a664586c42eacd43e611e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e9efdf755f49cc25a664586c42eacd43e611e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29e9efdf755f49cc25a664586c42eacd43e611e0", "patch": "@@ -1,3 +1,9 @@\n+2010-08-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* expr.c (store_expr): Use emit_block_move only if both\n+\tsource and target are MEMs.  Use store_bit_field if only\n+\tthe target is a MEM.\n+\n 2010-08-05  Richard Henderson  <rth@redhat.com>\n \n \tPR 45189"}, {"sha": "116c8df0f8ef81dd0f13922926e10b7531dc8a6e", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e9efdf755f49cc25a664586c42eacd43e611e0/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e9efdf755f49cc25a664586c42eacd43e611e0/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=29e9efdf755f49cc25a664586c42eacd43e611e0", "patch": "@@ -4752,11 +4752,14 @@ store_expr (tree exp, rtx target, int call_param_p, bool nontemporal)\n \t{\n \t  int unsignedp = TYPE_UNSIGNED (TREE_TYPE (exp));\n \t  if (GET_MODE (target) == BLKmode\n-\t\t   || GET_MODE (temp) == BLKmode)\n+\t      && GET_MODE (temp) == BLKmode)\n \t    emit_block_move (target, temp, expr_size (exp),\n \t\t\t     (call_param_p\n \t\t\t      ? BLOCK_OP_CALL_PARM\n \t\t\t      : BLOCK_OP_NORMAL));\n+\t  else if (GET_MODE (target) == BLKmode)\n+\t    store_bit_field (target, INTVAL (expr_size (exp)) * BITS_PER_UNIT,\n+\t\t\t     0, GET_MODE (temp), temp);\n \t  else\n \t    convert_move (target, temp, unsignedp);\n \t}"}]}