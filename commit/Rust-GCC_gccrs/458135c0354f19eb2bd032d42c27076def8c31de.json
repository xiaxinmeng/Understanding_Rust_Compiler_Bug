{"sha": "458135c0354f19eb2bd032d42c27076def8c31de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4MTM1YzAzNTRmMTllYjJiZDAzMmQ0MmMyNzA3NmRlZjhjMzFkZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-07-31T14:26:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-07-31T14:26:26Z"}, "message": "[43/46] Make free_stmt_vec_info take a stmt_vec_info\n\nThis patch makes free_stmt_vec_info take the stmt_vec_info that\nit's supposed to free and makes it free only that stmt_vec_info.\nCallers need to update the statement mapping where necessary\n(but now there are only a couple of callers).\n\nThis in turns means that we can leave ~vec_info to do the actual\nfreeing, since there's no longer a need to do it before resetting\nthe gimple_uids.\n\n2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (free_stmt_vec_info): Take a stmt_vec_info\n\trather than a gimple stmt.\n\t* tree-vect-stmts.c (free_stmt_vec_info): Likewise.  Don't free\n\tinformation for pattern statements when passed the original\n\tstatement; instead wait to be passed the pattern statement itself.\n\tDon't call set_vinfo_for_stmt here.\n\t(free_stmt_vec_infos): Update call to free_stmt_vec_info.\n\t* tree-vect-loop.c (_loop_vec_info::~loop_vec_info): Don't free\n\tstmt_vec_infos here.\n\t* tree-vect-slp.c (_bb_vec_info::~bb_vec_info): Likewise.\n\t* tree-vectorizer.c (vec_info::remove_stmt): Nullify the statement's\n\tstmt_vec_infos entry.\n\nFrom-SVN: r263158", "tree": {"sha": "dad2ef0425346eb33826305bf3ea6783adaf6409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad2ef0425346eb33826305bf3ea6783adaf6409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458135c0354f19eb2bd032d42c27076def8c31de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458135c0354f19eb2bd032d42c27076def8c31de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458135c0354f19eb2bd032d42c27076def8c31de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458135c0354f19eb2bd032d42c27076def8c31de/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d97912b85ac4a86767f4f1b6c47efa1ce0ba6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d97912b85ac4a86767f4f1b6c47efa1ce0ba6af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d97912b85ac4a86767f4f1b6c47efa1ce0ba6af"}], "stats": {"total": 77, "additions": 26, "deletions": 51}, "files": [{"sha": "8590a545baeff2b9bd0a41c9db946e42767aa451", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -1,3 +1,18 @@\n+2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (free_stmt_vec_info): Take a stmt_vec_info\n+\trather than a gimple stmt.\n+\t* tree-vect-stmts.c (free_stmt_vec_info): Likewise.  Don't free\n+\tinformation for pattern statements when passed the original\n+\tstatement; instead wait to be passed the pattern statement itself.\n+\tDon't call set_vinfo_for_stmt here.\n+\t(free_stmt_vec_infos): Update call to free_stmt_vec_info.\n+\t* tree-vect-loop.c (_loop_vec_info::~loop_vec_info): Don't free\n+\tstmt_vec_infos here.\n+\t* tree-vect-slp.c (_bb_vec_info::~bb_vec_info): Likewise.\n+\t* tree-vectorizer.c (vec_info::remove_stmt): Nullify the statement's\n+\tstmt_vec_infos entry.\n+\n 2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vectorizer.h (vec_info::replace_stmt): Declare."}, {"sha": "840b38c162ddb8abff4cb6434b8c42798e0e9525", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -894,9 +894,6 @@ _loop_vec_info::~_loop_vec_info ()\n   for (j = 0; j < nbbs; j++)\n     {\n       basic_block bb = bbs[j];\n-      for (si = gsi_start_phis (bb); !gsi_end_p (si); gsi_next (&si))\n-        free_stmt_vec_info (gsi_stmt (si));\n-\n       for (si = gsi_start_bb (bb); !gsi_end_p (si); )\n         {\n \t  gimple *stmt = gsi_stmt (si);\n@@ -936,9 +933,6 @@ _loop_vec_info::~_loop_vec_info ()\n \t\t    }\n \t\t}\n \t    }\n-\n-\t  /* Free stmt_vec_info.  */\n-\t  free_stmt_vec_info (stmt);\n           gsi_next (&si);\n         }\n     }"}, {"sha": "6b6861165b7fdb484f0e6e15e67de5521009d77d", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -2490,17 +2490,8 @@ _bb_vec_info::~_bb_vec_info ()\n {\n   for (gimple_stmt_iterator si = region_begin;\n        gsi_stmt (si) != gsi_stmt (region_end); gsi_next (&si))\n-    {\n-      gimple *stmt = gsi_stmt (si);\n-      stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n-\n-      if (stmt_info)\n-        /* Free stmt_vec_info.  */\n-        free_stmt_vec_info (stmt);\n-\n-      /* Reset region marker.  */\n-      gimple_set_uid (stmt, -1);\n-    }\n+    /* Reset region marker.  */\n+    gimple_set_uid (gsi_stmt (si), -1);\n \n   bb->aux = NULL;\n }"}, {"sha": "12f1cac9ab2b8e19b9257480978ff93ac73bd5e6", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 33, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -9918,7 +9918,7 @@ free_stmt_vec_infos (vec<stmt_vec_info> *v)\n   stmt_vec_info info;\n   FOR_EACH_VEC_ELT (*v, i, info)\n     if (info != NULL_STMT_VEC_INFO)\n-      free_stmt_vec_info (STMT_VINFO_STMT (info));\n+      free_stmt_vec_info (info);\n   if (v == stmt_vec_info_vec)\n     stmt_vec_info_vec = NULL;\n   v->release ();\n@@ -9928,44 +9928,18 @@ free_stmt_vec_infos (vec<stmt_vec_info> *v)\n /* Free stmt vectorization related info.  */\n \n void\n-free_stmt_vec_info (gimple *stmt)\n+free_stmt_vec_info (stmt_vec_info stmt_info)\n {\n-  stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n-\n-  if (!stmt_info)\n-    return;\n-\n-  /* Check if this statement has a related \"pattern stmt\"\n-     (introduced by the vectorizer during the pattern recognition\n-     pass).  Free pattern's stmt_vec_info and def stmt's stmt_vec_info\n-     too.  */\n-  if (STMT_VINFO_IN_PATTERN_P (stmt_info))\n+  if (stmt_info->pattern_stmt_p)\n     {\n-      if (gimple_seq seq = STMT_VINFO_PATTERN_DEF_SEQ (stmt_info))\n-\tfor (gimple_stmt_iterator si = gsi_start (seq);\n-\t     !gsi_end_p (si); gsi_next (&si))\n-\t  {\n-\t    gimple *seq_stmt = gsi_stmt (si);\n-\t    gimple_set_bb (seq_stmt, NULL);\n-\t    tree lhs = gimple_get_lhs (seq_stmt);\n-\t    if (lhs && TREE_CODE (lhs) == SSA_NAME)\n-\t      release_ssa_name (lhs);\n-\t    free_stmt_vec_info (seq_stmt);\n-\t  }\n-      stmt_vec_info patt_stmt_info = STMT_VINFO_RELATED_STMT (stmt_info);\n-      if (patt_stmt_info)\n-\t{\n-\t  gimple_set_bb (patt_stmt_info->stmt, NULL);\n-\t  tree lhs = gimple_get_lhs (patt_stmt_info->stmt);\n-\t  if (lhs && TREE_CODE (lhs) == SSA_NAME)\n-\t    release_ssa_name (lhs);\n-\t  free_stmt_vec_info (patt_stmt_info);\n-\t}\n+      gimple_set_bb (stmt_info->stmt, NULL);\n+      tree lhs = gimple_get_lhs (stmt_info->stmt);\n+      if (lhs && TREE_CODE (lhs) == SSA_NAME)\n+\trelease_ssa_name (lhs);\n     }\n \n   STMT_VINFO_SAME_ALIGN_REFS (stmt_info).release ();\n   STMT_VINFO_SIMD_CLONE_INFO (stmt_info).release ();\n-  set_vinfo_for_stmt (stmt, NULL);\n   free (stmt_info);\n }\n "}, {"sha": "bb6a154fab5ddf5876d97ac7aa5f16947dd5493b", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -595,6 +595,7 @@ void\n vec_info::remove_stmt (stmt_vec_info stmt_info)\n {\n   gcc_assert (!stmt_info->pattern_stmt_p);\n+  set_vinfo_for_stmt (stmt_info->stmt, NULL);\n   gimple_stmt_iterator si = gsi_for_stmt (stmt_info->stmt);\n   unlink_stmt_vdef (stmt_info->stmt);\n   gsi_remove (&si, true);"}, {"sha": "b9aa9c454b5f32b81cfe437286baa889e09baab4", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458135c0354f19eb2bd032d42c27076def8c31de/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=458135c0354f19eb2bd032d42c27076def8c31de", "patch": "@@ -1503,7 +1503,7 @@ extern bool supportable_narrowing_operation (enum tree_code, tree, tree,\n \t\t\t\t\t     enum tree_code *,\n \t\t\t\t\t     int *, vec<tree> *);\n extern stmt_vec_info new_stmt_vec_info (gimple *stmt, vec_info *);\n-extern void free_stmt_vec_info (gimple *stmt);\n+extern void free_stmt_vec_info (stmt_vec_info);\n extern unsigned record_stmt_cost (stmt_vector_for_cost *, int,\n \t\t\t\t  enum vect_cost_for_stmt, stmt_vec_info,\n \t\t\t\t  int, enum vect_cost_model_location);"}]}