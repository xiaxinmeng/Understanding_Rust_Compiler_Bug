{"sha": "0bbb7f4d247de49a2a322c384acddd11337b2e71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJiYjdmNGQyNDdkZTQ5YTJhMzIyYzM4NGFjZGRkMTEzMzdiMmU3MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-13T17:26:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-13T17:26:24Z"}, "message": "(expand_binop): Convert op1 of shift libcall to word_mode.\n\nFrom-SVN: r2117", "tree": {"sha": "ee3164c60acc9b22c7d1df2dbb15e6a220878a72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee3164c60acc9b22c7d1df2dbb15e6a220878a72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bbb7f4d247de49a2a322c384acddd11337b2e71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbb7f4d247de49a2a322c384acddd11337b2e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bbb7f4d247de49a2a322c384acddd11337b2e71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbb7f4d247de49a2a322c384acddd11337b2e71/comments", "author": null, "committer": null, "parents": [{"sha": "304f705fef2dbd7ae4dec1b31f0543ec926acb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304f705fef2dbd7ae4dec1b31f0543ec926acb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304f705fef2dbd7ae4dec1b31f0543ec926acb94"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "5466892cd0ea173805b7360441a6b58f9043e0a8", "filename": "gcc/optabs.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bbb7f4d247de49a2a322c384acddd11337b2e71/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bbb7f4d247de49a2a322c384acddd11337b2e71/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0bbb7f4d247de49a2a322c384acddd11337b2e71", "patch": "@@ -1059,14 +1059,23 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n     {\n       rtx insns;\n       rtx funexp = binoptab->handlers[(int) mode].libfunc;\n+      rtx op1x = op1;\n+      enum machine_mode op1_mode = mode;\n \n       start_sequence ();\n \n+      if (shift_op)\n+\t{\n+\t  op1_mode = word_mode;\n+\t  /* Specify unsigned here,\n+\t     since negative shift counts are meaningless.  */\n+\t  op1x = convert_to_mode (word_mode, op1, 1);\n+\t}\n+\n       /* Pass 1 for NO_QUEUE so we don't lose any increments\n \t if the libcall is cse'd or moved.  */\n       emit_library_call (binoptab->handlers[(int) mode].libfunc,\n-\t\t\t 1, mode, 2, op0, mode, op1,\n-\t\t\t (shift_op ? word_mode : mode));\n+\t\t\t 1, mode, 2, op0, mode, op1x, op1_mode);\n \n       insns = get_insns ();\n       end_sequence ();"}]}