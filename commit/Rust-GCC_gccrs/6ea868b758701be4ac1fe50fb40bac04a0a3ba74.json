{"sha": "6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhODY4Yjc1ODcwMWJlNGFjMWZlNTBmYjQwYmFjMDRhMGEzYmE3NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-02-20T04:09:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-20T04:09:05Z"}, "message": "ABI change: Mangle `void (A::*)() const' as M1AKFvvE, not MK1AFvvE.\n\n\tABI change: Mangle `void (A::*)() const' as\n\tM1AKFvvE, not MK1AFvvE.\n\t* mangle.c (write_function_type): Write cv-quals for member\n\tfunction type here.\n\t(write_pointer_to_member_type): Not here.\n\nFrom-SVN: r49887", "tree": {"sha": "23c362ccc96375e3c6ef8f73a903f6de8302e802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c362ccc96375e3c6ef8f73a903f6de8302e802"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4e35417f9086711be36ab2e4bcdd2a2ab8bbc60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4e35417f9086711be36ab2e4bcdd2a2ab8bbc60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4e35417f9086711be36ab2e4bcdd2a2ab8bbc60"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "3f4016330dd32b0372982cfa8c6ae684525a1eb0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "patch": "@@ -1,3 +1,11 @@\n+2002-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tABI change: Mangle `void (A::*)() const' as \n+\tM1AKFvvE, not MK1AFvvE.\n+\t* mangle.c (write_function_type): Write cv-quals for member\n+\tfunction type here.\n+\t(write_pointer_to_member_type): Not here.\n+\n 2002-02-18  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (do_type_instantiation): Don't pedwarn if in_system_header."}, {"sha": "360e1fc759db456c941453b1588e2ed98aff626f", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "patch": "@@ -1595,6 +1595,17 @@ write_function_type (type)\n {\n   MANGLE_TRACE_TREE (\"function-type\", type);\n \n+  /* For a pointer to member function, the function type may have\n+     cv-qualifiers, indicating the quals for the artificial 'this'\n+     parameter.  */\n+  if (TREE_CODE (type) == METHOD_TYPE)\n+    {\n+      /* The first parameter must be a POINTER_TYPE pointing to the\n+\t `this' parameter.  */\n+      tree this_type = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (type)));\n+      write_CV_qualifiers_for_type (this_type);\n+    }\n+\n   write_char ('F');\n   /* We don't track whether or not a type is `extern \"C\"'.  Note that\n      you can have an `extern \"C\"' function that does not have\n@@ -2021,24 +2032,7 @@ write_pointer_to_member_type (type)\n      tree type;\n {\n   write_char ('M');\n-  /* For a pointer-to-function member, the class type may be\n-     cv-qualified, but that won't be reflected in\n-     TYPE_PTRMEM_CLASS_TYPE.  So, we go fishing around in\n-     TYPE_PTRMEM_POINTED_TO_TYPE instead.  */\n-  if (TYPE_PTRMEMFUNC_P (type))\n-    {\n-      tree fn_type;\n-      tree this_type;\n-\n-      fn_type = TYPE_PTRMEM_POINTED_TO_TYPE (type);\n-      /* The first parameter must be a POINTER_TYPE pointing to the\n-\t `this' parameter.  */\n-      this_type = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (fn_type)));\n-      write_type (this_type);\n-    }\n-  /* For a pointer-to-data member, things are simpler.  */\n-  else\n-    write_type (TYPE_PTRMEM_CLASS_TYPE (type));\n+  write_type (TYPE_PTRMEM_CLASS_TYPE (type));\n   write_type (TYPE_PTRMEM_POINTED_TO_TYPE (type));\n }\n "}, {"sha": "99a08730fbaab627e5791b068825ab900663b3cb", "filename": "gcc/testsuite/g++.dg/abi/mangle5.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea868b758701be4ac1fe50fb40bac04a0a3ba74/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle5.C?ref=6ea868b758701be4ac1fe50fb40bac04a0a3ba74", "patch": "@@ -0,0 +1,6 @@\n+// Test mangling of pointers to cv-qualified member functions\n+\n+struct A;\n+void f (void (A::*)() const) {}\n+\n+// { dg-final { scan-assembler \"\\n_?_Z1fM1AKFvvE\\[: \\t\\n\\]\" } }"}]}