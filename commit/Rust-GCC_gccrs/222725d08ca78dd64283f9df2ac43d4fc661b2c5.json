{"sha": "222725d08ca78dd64283f9df2ac43d4fc661b2c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyNzI1ZDA4Y2E3OGRkNjQyODNmOWRmMmFjNDNkNGZjNjYxYjJjNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-03-10T19:35:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2007-03-10T19:35:03Z"}, "message": "re PR target/20924 (inline float divide does not set correct fpu status flags)\n\n\tPR c++/20924\n\t* tree.c (walk_type_fields): Recurse into the element type of\n\tARRAY_TYPEs if there is a pointer set.\n\n\tPR c++/20924\n\t* g++.dg/template/array18.C: New test.\n\nFrom-SVN: r122801", "tree": {"sha": "f6e878e3b43babf76962c20ef1fc4e81865839f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6e878e3b43babf76962c20ef1fc4e81865839f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/222725d08ca78dd64283f9df2ac43d4fc661b2c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222725d08ca78dd64283f9df2ac43d4fc661b2c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/222725d08ca78dd64283f9df2ac43d4fc661b2c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222725d08ca78dd64283f9df2ac43d4fc661b2c5/comments", "author": null, "committer": null, "parents": [{"sha": "89132ebc4c9e2bd960520dbbd8469d956794a7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89132ebc4c9e2bd960520dbbd8469d956794a7dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89132ebc4c9e2bd960520dbbd8469d956794a7dd"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "3b1184b9d0e058d1cd2ae780bf95fbc1830d0ebc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=222725d08ca78dd64283f9df2ac43d4fc661b2c5", "patch": "@@ -1,3 +1,9 @@\n+2007-03-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/20924\n+\t* tree.c (walk_type_fields): Recurse into the element type of\n+\tARRAY_TYPEs if there is a pointer set.\n+\n 2007-03-10  Dirk Mueller  <dmueller@suse.de>\n \n \t* c-common.c (warn_logical_operator): Fix condition."}, {"sha": "cd7f311e3f6308f8fb7f6203026a42c6028330f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=222725d08ca78dd64283f9df2ac43d4fc661b2c5", "patch": "@@ -1,3 +1,8 @@\n+2007-03-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/20924\n+\t* g++.dg/template/array18.C: New test.\n+\n 2007-03-10  Dirk Mueller  <dmueller@suse.de>\n \n \tPR c++/17946"}, {"sha": "8987bce305f8e889c73825d996aecbbb42af17d3", "filename": "gcc/testsuite/g++.dg/template/array18.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray18.C?ref=222725d08ca78dd64283f9df2ac43d4fc661b2c5", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/20924\n+\n+template<typename T>\n+struct x {};\n+\n+template<typename T, unsigned N>\n+struct x<T*[N]> {};\n+\n+int main() {\n+  x<int> a;\n+  x<int*[10]> b;\n+  return 0;\n+}"}, {"sha": "53cec8f864741a71e0e2840a2c75011a9c44b5d6", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222725d08ca78dd64283f9df2ac43d4fc661b2c5/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=222725d08ca78dd64283f9df2ac43d4fc661b2c5", "patch": "@@ -7942,10 +7942,12 @@ walk_type_fields (tree type, walk_tree_fn func, void *data,\n       break;\n \n     case ARRAY_TYPE:\n-      /* Don't follow this nodes's type if a pointer for fear that we'll\n-\t have infinite recursion.  Those types are uninteresting anyway.  */\n-      if (!POINTER_TYPE_P (TREE_TYPE (type))\n-\t  && TREE_CODE (TREE_TYPE (type)) != OFFSET_TYPE)\n+      /* Don't follow this nodes's type if a pointer for fear that\n+\t we'll have infinite recursion.  If we have a PSET, then we\n+\t need not fear.  */\n+      if (pset\n+\t  || (!POINTER_TYPE_P (TREE_TYPE (type))\n+\t      && TREE_CODE (TREE_TYPE (type)) != OFFSET_TYPE))\n \tWALK_SUBTREE (TREE_TYPE (type));\n       WALK_SUBTREE (TYPE_DOMAIN (type));\n       break;"}]}