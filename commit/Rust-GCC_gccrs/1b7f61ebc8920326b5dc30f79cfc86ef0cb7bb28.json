{"sha": "1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3ZjYxZWJjODkyMDMyNmI1ZGMzMGY3OWNmYzg2ZWYwY2I3YmIyOA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-06-08T11:53:27Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-06-08T11:53:27Z"}, "message": "Fix try_transform_to_exit_first_loop_alt\n\n2015-06-08  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/66442\n\t* gimple-iterator.h (gimple_seq_nondebug_singleton_p): Add function.\n\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): Return false\n\tif the loop latch is not a singleton.  Use\n\tgimple_seq_nondebug_singleton_p instead of gimple_seq_singleton_p.\n\nFrom-SVN: r224218", "tree": {"sha": "05a269611c4afd372c2778b7d951d8232bea1c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05a269611c4afd372c2778b7d951d8232bea1c84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/comments", "author": null, "committer": null, "parents": [{"sha": "aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4e0c43bc9db9ae1411e4957720b887fe5e1edf"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "e33780fe9428e7bfb1922476eaa5502a8f323907", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "patch": "@@ -1,3 +1,11 @@\n+2015-06-08  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/66442\n+\t* gimple-iterator.h (gimple_seq_nondebug_singleton_p): Add function.\n+\t* tree-parloops.c (try_transform_to_exit_first_loop_alt): Return false\n+\tif the loop latch is not a singleton.  Use\n+\tgimple_seq_nondebug_singleton_p instead of gimple_seq_singleton_p.\n+\n 2015-06-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/66452"}, {"sha": "d08245e56baa24aa4fa9670a2985a5aa9c51311c", "filename": "gcc/gimple-iterator.h", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2Fgimple-iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2Fgimple-iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.h?ref=1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "patch": "@@ -345,4 +345,39 @@ gsi_seq (gimple_stmt_iterator i)\n   return *i.seq;\n }\n \n+/* Determine whether SEQ is a nondebug singleton.  */\n+\n+static inline bool\n+gimple_seq_nondebug_singleton_p (gimple_seq seq)\n+{\n+  gimple_stmt_iterator gsi;\n+  gsi.ptr = gimple_seq_first (seq);\n+  gsi.seq = &seq;\n+  gsi.bb = NULL;\n+\n+  /* Not a singleton if the sequence is empty.  */\n+  if (gsi_end_p (gsi))\n+    return false;\n+\n+  /* Find a nondebug gimple.  */\n+  while (!gsi_end_p (gsi)\n+\t && is_gimple_debug (gsi_stmt (gsi)))\n+    gsi_next (&gsi);\n+\n+  /* Not a nondebug singleton if there's no nondebug gimple.  */\n+  if (is_gimple_debug (gsi_stmt (gsi)))\n+    return false;\n+\n+  /* Find the next nondebug gimple.  */\n+  while (!gsi_end_p (gsi)\n+\t && is_gimple_debug (gsi_stmt (gsi)))\n+    gsi_next (&gsi);\n+\n+  /* If there's a next nondebug gimple, it's not a nondebug singleton.  */\n+  if (!gsi_end_p (gsi))\n+    return false;\n+\n+  return true;\n+}\n+\n #endif /* GCC_GIMPLE_ITERATOR_H */"}, {"sha": "c4b83fe9635b9e5e05e2a0827b1b7376946981cd", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "patch": "@@ -1769,8 +1769,8 @@ try_transform_to_exit_first_loop_alt (struct loop *loop,\n \t\t\t\t      tree nit)\n {\n   /* Check whether the latch contains a single statement.  */\n-  if (!gimple_seq_singleton_p (bb_seq (loop->latch)))\n-    return true;\n+  if (!gimple_seq_nondebug_singleton_p (bb_seq (loop->latch)))\n+    return false;\n \n   /* Check whether the latch contains the loop iv increment.  */\n   edge back = single_succ_edge (loop->latch);"}]}