{"sha": "69bd00e68103821a2729b05613509bfb04231693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjliZDAwZTY4MTAzODIxYTI3MjliMDU2MTM1MDliZmIwNDIzMTY5Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-02T02:38:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-02T02:38:02Z"}, "message": "real.c (real_to_decimal): Crop trailing zeros for DIGITS < 0.\n\n        * real.c (real_to_decimal): Crop trailing zeros for DIGITS < 0.\n        (real_to_hexadecimal): Likewise.\n        * print-rtl.c (print_rtx): If we are linked with real.c, don't\n        dump the XWINT fields of a floating point CONST_DOUBLE.\n\nFrom-SVN: r57719", "tree": {"sha": "0d5a4dfe098881e5af5eb6426ef98c6dd45f8b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d5a4dfe098881e5af5eb6426ef98c6dd45f8b3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69bd00e68103821a2729b05613509bfb04231693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bd00e68103821a2729b05613509bfb04231693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69bd00e68103821a2729b05613509bfb04231693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bd00e68103821a2729b05613509bfb04231693/comments", "author": null, "committer": null, "parents": [{"sha": "ebc4cdc1358433015a3acdbacda4880b8968804e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc4cdc1358433015a3acdbacda4880b8968804e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc4cdc1358433015a3acdbacda4880b8968804e"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "b50421956edd880c81ae157db05edb42426de6c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bd00e68103821a2729b05613509bfb04231693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bd00e68103821a2729b05613509bfb04231693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69bd00e68103821a2729b05613509bfb04231693", "patch": "@@ -1,3 +1,10 @@\n+2002-10-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (real_to_decimal): Crop trailing zeros for DIGITS < 0.\n+\t(real_to_hexadecimal): Likewise.\n+\t* print-rtl.c (print_rtx): If we are linked with real.c, don't\n+\tdump the XWINT fields of a floating point CONST_DOUBLE.\n+\n 2002-10-01  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/vax/elf.h (FUNCTION_PROFILER): Fix __mcount call."}, {"sha": "ebebf8586720a7a6ff29f274b706a7eb68941d2d", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bd00e68103821a2729b05613509bfb04231693/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bd00e68103821a2729b05613509bfb04231693/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=69bd00e68103821a2729b05613509bfb04231693", "patch": "@@ -195,6 +195,11 @@ print_rtx (in_rtx)\n \t}\n     }\n \n+#ifndef GENERATOR_FILE\n+  if (GET_CODE (in_rtx) == CONST_DOUBLE && FLOAT_MODE_P (GET_MODE (in_rtx)))\n+    i = 5;\n+#endif\n+\n   /* Get the format string and skip the first elements if we have handled\n      them already.  */\n   format_ptr = GET_RTX_FORMAT (GET_CODE (in_rtx)) + i;\n@@ -517,11 +522,12 @@ print_rtx (in_rtx)\n     case CONST_DOUBLE:\n       if (FLOAT_MODE_P (GET_MODE (in_rtx)))\n \t{\n-\t  REAL_VALUE_TYPE val;\n \t  char s[30];\n \n-\t  REAL_VALUE_FROM_CONST_DOUBLE (val, in_rtx);\n-\t  REAL_VALUE_TO_DECIMAL (val, s, -1);\n+\t  real_to_decimal (s, CONST_DOUBLE_REAL_VALUE (in_rtx), -1);\n+\t  fprintf (outfile, \" %s\", s);\n+\n+\t  real_to_hexadecimal (s, CONST_DOUBLE_REAL_VALUE (in_rtx), -1);\n \t  fprintf (outfile, \" [%s]\", s);\n \t}\n       break;"}, {"sha": "4ce60d9ad163983cd404487a7485d9bf5b36f195", "filename": "gcc/real.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bd00e68103821a2729b05613509bfb04231693/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bd00e68103821a2729b05613509bfb04231693/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=69bd00e68103821a2729b05613509bfb04231693", "patch": "@@ -1388,9 +1388,9 @@ real_to_integer2 (plow, phigh, r)\n   *phigh = high;\n }\n \n-/* Render R as a decimal floating point constant.  Emit DIGITS\n-   significant digits in the result.  If DIGITS <= 0, choose the\n-   maximum for the representation.  */\n+/* Render R as a decimal floating point constant.  Emit DIGITS significant\n+   digits in the result.  If DIGITS <= 0, choose the maximum for the\n+   representation.  If DIGITS < 0, strip trailing zeros.  */\n \n #define M_LOG10_2\t0.30102999566398119521\n \n@@ -1405,6 +1405,7 @@ real_to_decimal (str, r_orig, digits)\n   int dec_exp, max_digits, d, cmp_half;\n   char *p, *first, *last;\n   bool sign;\n+  bool crop_trailing_zeros;\n \n   r = *r_orig;\n   switch (r.class)\n@@ -1426,6 +1427,7 @@ real_to_decimal (str, r_orig, digits)\n     }\n \n   max_digits = SIGNIFICAND_BITS * M_LOG10_2;\n+  crop_trailing_zeros = digits < 0;\n   if (digits <= 0 || digits > max_digits)\n     digits = max_digits;\n \n@@ -1514,12 +1516,16 @@ real_to_decimal (str, r_orig, digits)\n   first[0] = first[1];\n   first[1] = '.';\n \n+  if (crop_trailing_zeros)\n+    while (last > first + 3 && last[-1] == '0')\n+      last--;\n+\n   sprintf (last, \"e%+d\", dec_exp);\n }\n \n /* Render R as a hexadecimal floating point constant.  Emit DIGITS\n    significant digits in the result.  If DIGITS <= 0, choose the maximum\n-   for the representation.  */\n+   for the representation.  If DIGITS < 0, strip trailing zeros.  */\n \n void\n real_to_hexadecimal (str, r, digits)\n@@ -1528,7 +1534,8 @@ real_to_hexadecimal (str, r, digits)\n      int digits;\n {\n   int i, j, exp = r->exp;\n-  char *p;\n+  char *p, *first;\n+  bool crop_trailing_zeros;\n \n   switch (r->class)\n     {\n@@ -1548,6 +1555,7 @@ real_to_hexadecimal (str, r, digits)\n       abort ();\n     }\n \n+  crop_trailing_zeros = digits < 0;\n   if (digits <= 0)\n     digits = SIGNIFICAND_BITS / 4;\n \n@@ -1558,6 +1566,7 @@ real_to_hexadecimal (str, r, digits)\n   *p++ = 'x';\n   *p++ = '0';\n   *p++ = '.';\n+  first = p;\n \n   for (i = SIGSZ - 1; i >= 0; --i)\n     for (j = HOST_BITS_PER_LONG - 4; j >= 0; j -= 4)\n@@ -1566,7 +1575,12 @@ real_to_hexadecimal (str, r, digits)\n \tif (--digits == 0)\n \t  goto out;\n       }\n+\n  out:\n+  if (crop_trailing_zeros)\n+    while (p > first + 2 && p[-1] == '0')\n+      p--;\n+\n   sprintf (p, \"p%+d\", exp);\n }\n "}]}