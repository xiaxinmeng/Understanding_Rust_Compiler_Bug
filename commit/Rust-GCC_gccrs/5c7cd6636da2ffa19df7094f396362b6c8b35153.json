{"sha": "5c7cd6636da2ffa19df7094f396362b6c8b35153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3Y2Q2NjM2ZGEyZmZhMTlkZjcwOTRmMzk2MzYyYjZjOGIzNTE1Mw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2002-11-05T14:32:24Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2002-11-05T14:32:24Z"}, "message": "fold-const.c (fold): Don't transform (a0 op compound(a1,a2)) to (compound(a1,a0 op a2)) if...\n\n2002-11-05  Andrew Haley  <aph@redhat.com>\n\n        * fold-const.c (fold): Don't transform (a0 op compound(a1,a2))\n        to (compound(a1,a0 op a2)) if a0 or a1 have side effects.\n\nFrom-SVN: r58822", "tree": {"sha": "186141225e3e26e2247c4d66e3760aa63e53a38c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/186141225e3e26e2247c4d66e3760aa63e53a38c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c7cd6636da2ffa19df7094f396362b6c8b35153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7cd6636da2ffa19df7094f396362b6c8b35153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7cd6636da2ffa19df7094f396362b6c8b35153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7cd6636da2ffa19df7094f396362b6c8b35153/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97ab11755d8d6d19e35bbf0b50e25a543722d8f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ab11755d8d6d19e35bbf0b50e25a543722d8f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ab11755d8d6d19e35bbf0b50e25a543722d8f4"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "31010abd3db0f7bebfe06e8fe5b844354d0b8b89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7cd6636da2ffa19df7094f396362b6c8b35153/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7cd6636da2ffa19df7094f396362b6c8b35153/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c7cd6636da2ffa19df7094f396362b6c8b35153", "patch": "@@ -1,3 +1,8 @@\n+2002-11-05  Andrew Haley  <aph@redhat.com>\n+\n+\t* fold-const.c (fold): Don't transform (a0 op compound(a1,a2))\n+\tto (compound(a1,a0 op a2)) if a0 or a1 have side effects.\n+\n 2002-11-05  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.h (CANNOT_CHANGE_MODE_CLASS): Move comment to..."}, {"sha": "c4095e4dd32ac45e0528095a7fe2dfd482999de8", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7cd6636da2ffa19df7094f396362b6c8b35153/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7cd6636da2ffa19df7094f396362b6c8b35153/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=5c7cd6636da2ffa19df7094f396362b6c8b35153", "patch": "@@ -4783,7 +4783,9 @@ fold (expr)\n   else if (TREE_CODE_CLASS (code) == '2'\n \t   || TREE_CODE_CLASS (code) == '<')\n     {\n-      if (TREE_CODE (arg1) == COMPOUND_EXPR)\n+      if (TREE_CODE (arg1) == COMPOUND_EXPR\n+\t  && ! TREE_SIDE_EFFECTS (TREE_OPERAND (arg1, 0))\n+\t  && ! TREE_SIDE_EFFECTS (arg0))\n \treturn build (COMPOUND_EXPR, type, TREE_OPERAND (arg1, 0),\n \t\t      fold (build (code, type,\n \t\t\t\t   arg0, TREE_OPERAND (arg1, 1))));"}]}