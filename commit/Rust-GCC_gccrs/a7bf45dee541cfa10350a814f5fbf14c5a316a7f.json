{"sha": "a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdiZjQ1ZGVlNTQxY2ZhMTAzNTBhODE0ZjVmYmYxNGM1YTMxNmE3Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-01-14T07:38:15Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-01-14T07:38:15Z"}, "message": "re PR tree-optimization/42732 ([graphite] ICE: verify_ssa failed)\n\nFix PR42732.\n\n2010-01-14  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/42732\n\t* graphite-clast-to-gimple.c (gloog): Call scev_reset_htab and\n\trename_nb_iterations.\n\t* sese.c (rename_variables_in_operand): New.\n\t(rename_variables_in_expr): New.\n\t(rename_nb_iterations): New.\n\t(sese_adjust_liveout_phis): Update the rename_map.\n\t* sese.h (rename_nb_iterations): Declared.\n\t* tree-scalar-evolution.c (scev_reset_htab): New.\n\t(scev_reset): Call scev_reset_htab.\n\t* tree-scalar-evolution.h (scev_reset_htab): Declared.\n\n\t* testsuite/gfortran.dg/graphite/pr42732.f: New.\n\nFrom-SVN: r155881", "tree": {"sha": "e7d4749d1d7087c6a71839b545d5d0b794c4ca4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d4749d1d7087c6a71839b545d5d0b794c4ca4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "453897b4dde0964a55d4b3ebbdbb2bfaabec748a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/453897b4dde0964a55d4b3ebbdbb2bfaabec748a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/453897b4dde0964a55d4b3ebbdbb2bfaabec748a"}], "stats": {"total": 136, "additions": 128, "deletions": 8}, "files": [{"sha": "fe3598cdf3fdaa87da5b0745cc99889a32606494", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -1,3 +1,19 @@\n+2010-01-14  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/42732\n+\t* graphite-clast-to-gimple.c (gloog): Call scev_reset_htab and\n+\trename_nb_iterations.\n+\t* sese.c (rename_variables_in_operand): New.\n+\t(rename_variables_in_expr): New.\n+\t(rename_nb_iterations): New.\n+\t(sese_adjust_liveout_phis): Update the rename_map.\n+\t* sese.h (rename_nb_iterations): Declared.\n+\t* tree-scalar-evolution.c (scev_reset_htab): New.\n+\t(scev_reset): Call scev_reset_htab.\n+\t* tree-scalar-evolution.h (scev_reset_htab): Declared.\n+\n+\t* testsuite/gfortran.dg/graphite/pr42732.f: New.\n+\n 2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42393"}, {"sha": "be16807872cad9f465d83c1b0a7e789c0835c103", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -1400,8 +1400,8 @@ debug_generated_program (scop_p scop)\n   print_generated_program (stderr, scop);\n }\n \n-/* Add CLooG names to parameter index.  The index is used to translate back from\n- * CLooG names to GCC trees.  */\n+/* Add CLooG names to parameter index.  The index is used to translate\n+   back from CLooG names to GCC trees.  */\n \n static void\n create_params_index (htab_t index_table, CloogProgram *prog) {\n@@ -1471,6 +1471,8 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n \t\t\t    if_region->region->exit->src,\n \t\t\t    if_region->false_region->exit,\n \t\t\t    if_region->true_region->exit);\n+  scev_reset_htab ();\n+  rename_nb_iterations (rename_map);\n   recompute_all_dominators ();\n   graphite_verify ();\n "}, {"sha": "1c4686de3a264031e5dc3208983bd940dc5df66b", "filename": "gcc/sese.c", "status": "modified", "additions": 66, "deletions": 3, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -486,7 +486,7 @@ sese_adjust_vphi (sese region, gimple phi, edge true_e)\n       }\n }\n \n-/* Returns the name associated to OLD_NAME in MAP.  */\n+/* Returns the expression associated to OLD_NAME in MAP.  */\n \n static tree\n get_rename (htab_t map, tree old_name)\n@@ -503,7 +503,7 @@ get_rename (htab_t map, tree old_name)\n   return old_name;\n }\n \n-/* Register in MAP the rename tuple (old_name, expr).  */\n+/* Register in MAP the rename tuple (OLD_NAME, EXPR).  */\n \n void\n set_rename (htab_t map, tree old_name, tree expr)\n@@ -526,6 +526,67 @@ set_rename (htab_t map, tree old_name, tree expr)\n   *slot = new_rename_map_elt (old_name, expr);\n }\n \n+static void rename_variables_in_expr (htab_t, tree);\n+\n+/* Renames the operand OP of expression T following the tuples\n+   (OLD_NAME, EXPR) in RENAME_MAP.  */\n+\n+static void\n+rename_variables_in_operand (htab_t rename_map, tree t, int op)\n+{\n+  tree operand = TREE_OPERAND (t, op);\n+\n+  if (TREE_CODE (operand) == SSA_NAME)\n+    {\n+      tree new_name = get_rename (rename_map, operand);\n+\n+      if (new_name != operand)\n+\tTREE_OPERAND (t, op) = new_name;\n+    }\n+  else\n+    rename_variables_in_expr (rename_map, operand);\n+}\n+\n+/* Renames the expression T following the tuples (OLD_NAME, EXPR) in\n+   RENAME_MAP.  */\n+\n+static void\n+rename_variables_in_expr (htab_t rename_map, tree t)\n+{\n+  if (!t)\n+    return;\n+\n+  switch (TREE_CODE_LENGTH (TREE_CODE (t)))\n+    {\n+    case 3:\n+      rename_variables_in_operand (rename_map, t, 2);\n+\n+    case 2:\n+      rename_variables_in_operand (rename_map, t, 1);\n+\n+    case 1:\n+      rename_variables_in_operand (rename_map, t, 0);\n+\n+    default:\n+      return;\n+    }\n+}\n+\n+/* Renames all the loop->nb_iterations expressions following the\n+   tuples (OLD_NAME, EXPR) in RENAME_MAP.  */\n+\n+void\n+rename_nb_iterations (htab_t rename_map)\n+{\n+  loop_iterator li;\n+  struct loop *loop;\n+\n+  FOR_EACH_LOOP (li, loop, 0)\n+    {\n+      rename_variables_in_expr (rename_map, loop->nb_iterations);\n+    }\n+}\n+\n /* Adjusts the phi nodes in the block BB for variables defined in\n    SCOP_REGION and used outside the SCOP_REGION.  The code generation\n    moves SCOP_REGION in the else clause of an \"if (1)\" and generates\n@@ -550,8 +611,9 @@ sese_adjust_liveout_phis (sese region, htab_t rename_map, basic_block bb,\n       unsigned i;\n       unsigned false_i = 0;\n       gimple phi = gsi_stmt (si);\n+      tree res = gimple_phi_result (phi);\n \n-      if (!is_gimple_reg (PHI_RESULT (phi)))\n+      if (!is_gimple_reg (res))\n \t{\n \t  sese_adjust_vphi (region, phi, true_e);\n \t  continue;\n@@ -585,6 +647,7 @@ sese_adjust_liveout_phis (sese region, htab_t rename_map, basic_block bb,\n \t      }\n \n \t    SET_PHI_ARG_DEF (phi, i, expr);\n+\t    set_rename (rename_map, old_name, res);\n \t  }\n     }\n }"}, {"sha": "350ae48241e7f06777db7b1c3a98138406becbad", "filename": "gcc/sese.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -262,6 +262,7 @@ extern void debug_rename_map (htab_t);\n extern hashval_t rename_map_elt_info (const void *);\n extern int eq_rename_map_elts (const void *, const void *);\n extern void set_rename (htab_t, tree, tree);\n+extern void rename_nb_iterations (htab_t);\n \n /* Constructs a new SCEV_INFO_STR structure for VAR and INSTANTIATED_BELOW.  */\n "}, {"sha": "95c115076a938046a209e6ecd6a04dcfd1d6c133", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42732.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42732.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42732.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42732.f?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -0,0 +1,23 @@\n+! { dg-options \"-O2 -fgraphite-identity\" }\n+\n+      parameter(in =           128+5\n+     &        , jn =           128+5\n+     &        , kn =           128+5)\n+      real*8   d (in,jn,kn)\n+       real*8 dcopy(in,jn,kn)\n+       call pdv (is, dcopy)\n+       do k=ks,ke\n+         do j=je+1,je+2\n+           do i=is-2,ie+2\n+             dcopy(i,j,k) = d(i,j,k)\n+           enddo\n+         enddo\n+       enddo\n+       do k=ks,ke\n+         do j=js,je\n+           do i=is-2,is-1\n+             dcopy(i,j,k) = d(i,j,k)\n+           enddo\n+         enddo\n+       enddo\n+       end"}, {"sha": "4d8f85e50476afed72639513aad32e7357d1e1eb", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -3033,18 +3033,32 @@ scev_initialize (void)\n     }\n }\n \n-/* Cleans up the information cached by the scalar evolutions analysis.  */\n+/* Cleans up the information cached by the scalar evolutions analysis\n+   in the hash table.  */\n+\n+void\n+scev_reset_htab (void)\n+{\n+  if (!scalar_evolution_info)\n+    return;\n+\n+  htab_empty (scalar_evolution_info);\n+}\n+\n+/* Cleans up the information cached by the scalar evolutions analysis\n+   in the hash table and in the loop->nb_iterations.  */\n \n void\n scev_reset (void)\n {\n   loop_iterator li;\n   struct loop *loop;\n \n-  if (!scalar_evolution_info || !current_loops)\n+  scev_reset_htab ();\n+\n+  if (!current_loops)\n     return;\n \n-  htab_empty (scalar_evolution_info);\n   FOR_EACH_LOOP (li, loop, 0)\n     {\n       loop->nb_iterations = NULL_TREE;"}, {"sha": "e09e19ae5f59d742be41d2e31c3d9ba6955ff12e", "filename": "gcc/tree-scalar-evolution.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftree-scalar-evolution.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7bf45dee541cfa10350a814f5fbf14c5a316a7f/gcc%2Ftree-scalar-evolution.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.h?ref=a7bf45dee541cfa10350a814f5fbf14c5a316a7f", "patch": "@@ -27,6 +27,7 @@ extern gimple get_loop_exit_condition (const struct loop *);\n \n extern void scev_initialize (void);\n extern void scev_reset (void);\n+extern void scev_reset_htab (void);\n extern void scev_finalize (void);\n extern tree analyze_scalar_evolution (struct loop *, tree);\n extern tree instantiate_scev (basic_block, struct loop *, tree);"}]}