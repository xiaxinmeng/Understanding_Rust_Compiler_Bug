{"sha": "c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlZjZkMzQ5MmU2ODQxODc1NDg1ZjI5MjNlZTgxMGY3YzdhZTViOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-07-28T05:34:04Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-07-28T05:34:04Z"}, "message": "builtins.def [...]: Require an explicit ATTRS argument.\n\n\n\t* builtins.def [DEF_GCC_BUILTIN]: Require an explicit ATTRS\n\targument.  Mark BUILT_IN_RETURN, BUILT_IN_EH_RETURN,\n\tBUILT_IN_LONGJMP and BUILT_IN_TRAP as noreturn, the ISO C99\n\tfloating point unordered comparisons (e.g. __builtin_isgreater)\n\tas const, and leave the remaining GCC_BUILTINs unchanged.\n\n\t* c-decl.c (builtin_function): No need to explicitly mark\n\tBUILT_IN_RETURN and BUILT_IN_EH_RETURN as noreturn.\n\n\t* cp/decl.c (builtin_function_1): No need to explicitly mark\n\tBUILT_IN_RETURN and BUILT_IN_EH_RETURN as noreturn.\n\nFrom-SVN: r55805", "tree": {"sha": "850b5f5119ae8b60afcf7ed0d5c22ef3359f5ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/850b5f5119ae8b60afcf7ed0d5c22ef3359f5ac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/comments", "author": null, "committer": null, "parents": [{"sha": "52bfebf09121f90fb62f448ccb817ce9208d8f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bfebf09121f90fb62f448ccb817ce9208d8f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52bfebf09121f90fb62f448ccb817ce9208d8f24"}], "stats": {"total": 130, "additions": 86, "deletions": 44}, "files": [{"sha": "22d5237c12511235e920d67588a44e1eae874155", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "patch": "@@ -1,3 +1,14 @@\n+2002-07-27  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.def [DEF_GCC_BUILTIN]: Require an explicit ATTRS\n+\targument.  Mark BUILT_IN_RETURN, BUILT_IN_EH_RETURN,\n+\tBUILT_IN_LONGJMP and BUILT_IN_TRAP as noreturn, the ISO C99\n+\tfloating point unordered comparisons (e.g. __builtin_isgreater)\n+\tas const, and leave the remaining GCC_BUILTINs unchanged.\n+\n+\t* c-decl.c (builtin_function): No need to explicitly mark\n+\tBUILT_IN_RETURN and BUILT_IN_EH_RETURN as noreturn.\n+\n 2002-07-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* Makefile.in: rtlanal.o now depends upon real.h."}, {"sha": "7be8fe14eb652a76b10883fc2d1c1fd64cf9143c", "filename": "gcc/builtins.def", "status": "modified", "additions": 70, "deletions": 36, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "patch": "@@ -59,9 +59,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    compiler, but does not correspond to a function in the standard\n    library.  */\n #undef DEF_GCC_BUILTIN\n-#define DEF_GCC_BUILTIN(ENUM, NAME, TYPE)\t\t\t\\\n+#define DEF_GCC_BUILTIN(ENUM, NAME, TYPE, ATTRS)\t\t\\\n   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,\t\\\n-               false, false, false, ATTR_NULL)\n+               false, false, false, ATTRS)\n \n \n /* A fallback builtin is a builtin (like __builtin_puts) that falls\n@@ -364,49 +364,64 @@ DEF_UNUSED_BUILTIN(BUILT_IN_GETMAN)\n \n DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,\n \t\t\"__builtin_saveregs\",\n-\t\tBT_FN_PTR_VAR)\n+\t\tBT_FN_PTR_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_CLASSIFY_TYPE,\n \t\t\"__builtin_classify_type\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_NEXT_ARG,\n \t\t\"__builtin_next_arg\",\n-\t\tBT_FN_PTR_VAR)\n+\t\tBT_FN_PTR_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_ARGS_INFO,\n \t\t\"__builtin_args_info\",\n-\t\tBT_FN_INT_INT)\n+\t\tBT_FN_INT_INT,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_CONSTANT_P, \n \t\t\"__builtin_constant_p\", \n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_FRAME_ADDRESS,\n \t\t\"__builtin_frame_address\",\n-\t\tBT_FN_PTR_UNSIGNED)\n+\t\tBT_FN_PTR_UNSIGNED,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_RETURN_ADDRESS, \n \t\t\"__builtin_return_address\",\n-\t\tBT_FN_PTR_UNSIGNED)\n+\t\tBT_FN_PTR_UNSIGNED,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_AGGREGATE_INCOMING_ADDRESS,\n \t\t\"__builtin_aggregate_incoming_address\",\n-\t\tBT_FN_PTR_VAR)\n+\t\tBT_FN_PTR_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_APPLY_ARGS,\n \t\t\"__builtin_apply_args\",\n-\t\tBT_FN_PTR_VAR)\n+\t\tBT_FN_PTR_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_APPLY,\n \t\t\"__builtin_apply\",\n-\t\tBT_FN_PTR_PTR_FN_VOID_VAR_PTR_SIZE)\n+\t\tBT_FN_PTR_PTR_FN_VOID_VAR_PTR_SIZE,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_RETURN,\n \t\t\"__builtin_return\",\n-\t\tBT_FN_VOID_PTR)\n+\t\tBT_FN_VOID_PTR,\n+\t\tATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_SETJMP,\n \t\t\"__builtin_setjmp\",\n-\t\tBT_FN_INT_PTR)\n+\t\tBT_FN_INT_PTR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_LONGJMP,\n \t\t\"__builtin_longjmp\",\n-\t\tBT_FN_VOID_PTR_INT)\n+\t\tBT_FN_VOID_PTR_INT,\n+\t\tATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_TRAP,\n \t\t\"__builtin_trap\",\n-\t\tBT_FN_VOID)\n+\t\tBT_FN_VOID,\n+\t\tATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,\n \t\t\"__builtin_prefetch\",\n-\t\tBT_FN_VOID_CONST_PTR_VAR)\n+\t\tBT_FN_VOID_CONST_PTR_VAR,\n+\t\tATTR_NULL)\n \n /* Stdio builtins.  */\n DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,\n@@ -480,66 +495,85 @@ DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,\n   /* ISO C99 floating point unordered comparisons.  */\n DEF_GCC_BUILTIN(BUILT_IN_ISGREATER, \n \t\t\"__builtin_isgreater\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_ISGREATEREQUAL,\n \t\t\"__builtin_isgreaterequal\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_ISLESS,\n \t\t\"__builtin_isless\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_ISLESSEQUAL,\n \t\t\"__builtin_islessequal\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_ISLESSGREATER,\n \t\t\"__builtin_islessgreater\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_ISUNORDERED,\n \t\t\"__builtin_isunordered\",\n-\t\tBT_FN_INT_VAR)\n+\t\tBT_FN_INT_VAR,\n+\t\tATTR_CONST_NOTHROW_LIST)\n \n /* Various hooks for the DWARF 2 __throw routine.  */\n DEF_GCC_BUILTIN(BUILT_IN_UNWIND_INIT,\n \t\t\"__builtin_unwind_init\",\n-\t\tBT_FN_VOID)\n+\t\tBT_FN_VOID,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_DWARF_CFA,\n \t\t\"__builtin_dwarf_cfa\",\n-\t\tBT_FN_PTR)\n+\t\tBT_FN_PTR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_DWARF_FP_REGNUM,\n \t\t\"__builtin_dwarf_fp_regnum\",\n-\t\tBT_FN_UNSIGNED)\n+\t\tBT_FN_UNSIGNED,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_INIT_DWARF_REG_SIZES,\n \t\t\"__builtin_init_dwarf_reg_size_table\",\n-\t\tBT_FN_VOID_PTR)\n+\t\tBT_FN_VOID_PTR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_FROB_RETURN_ADDR,\n \t\t\"__builtin_frob_return_addr\",\n-\t\tBT_FN_PTR_PTR)\n+\t\tBT_FN_PTR_PTR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_EXTRACT_RETURN_ADDR,\n \t\t\"__builtin_extract_return_addr\",\n-\t\tBT_FN_PTR_PTR)\n+\t\tBT_FN_PTR_PTR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN,\n \t\t\"__builtin_eh_return\",\n-\t\tBT_FN_VOID_PTRMODE_PTR)\n+\t\tBT_FN_VOID_PTRMODE_PTR,\n+\t\tATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN_DATA_REGNO,\n \t\t\"__builtin_eh_return_data_regno\",\n-\t\tBT_FN_INT_INT)\n+\t\tBT_FN_INT_INT,\n+\t\tATTR_NULL)\n \n /* Variable argument list (stdarg.h) support */\n DEF_GCC_BUILTIN(BUILT_IN_VA_START,\n \t\t\"__builtin_va_start\",\n-\t\tBT_FN_VOID_VALIST_REF_VAR)\n+\t\tBT_FN_VOID_VALIST_REF_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_STDARG_START,\t\t/* backward compat */\n \t\t\"__builtin_stdarg_start\",\n-\t\tBT_FN_VOID_VALIST_REF_VAR)\n+\t\tBT_FN_VOID_VALIST_REF_VAR,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_VA_END,\n \t\t\"__builtin_va_end\",\n-\t\tBT_FN_VOID_VALIST_REF)\n+\t\tBT_FN_VOID_VALIST_REF,\n+\t\tATTR_NULL)\n DEF_GCC_BUILTIN(BUILT_IN_VA_COPY,\n \t\t\"__builtin_va_copy\",\n-\t\tBT_FN_VOID_VALIST_REF_VALIST_ARG)\n+\t\tBT_FN_VOID_VALIST_REF_VALIST_ARG,\n+\t\tATTR_NULL)\n \n DEF_GCC_BUILTIN(BUILT_IN_EXPECT,\n \t\t\"__builtin_expect\",\n-\t\tBT_FN_LONG_LONG_LONG)\n+\t\tBT_FN_LONG_LONG_LONG,\n+\t\tATTR_NULL)\n \n /* C++ extensions */\n DEF_UNUSED_BUILTIN(BUILT_IN_NEW)"}, {"sha": "61cafffdeef895f0f8acd9486370feea72b877d6", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "patch": "@@ -2966,10 +2966,6 @@ builtin_function (name, type, function_code, class, library_name, attrs)\n   DECL_BUILT_IN_CLASS (decl) = class;\n   DECL_FUNCTION_CODE (decl) = function_code;\n \n-  /* The return builtins leave the current function.  */\n-  if (function_code == BUILT_IN_RETURN || function_code == BUILT_IN_EH_RETURN)\n-    TREE_THIS_VOLATILE (decl) = 1;\n-\n   /* Warn if a function in the namespace for users\n      is used without an occasion to consider it declared.  */\n   if (name[0] != '_' || name[1] != '_')"}, {"sha": "1415aed531ee8a59d3f0bd45eb3416929c9bff53", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "patch": "@@ -1,3 +1,8 @@\n+2002-07-27  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* decl.c (builtin_function_1): No need to explicitly mark\n+\tBUILT_IN_RETURN and BUILT_IN_EH_RETURN as noreturn.\n+\n 2002-07-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* decl2.c (cxx_decode_option): Support -fno-builtin-foo."}, {"sha": "d9f338aacc0672d8b4f160b86ab2897f5255a260", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ef6d3492e6841875485f2923ee810f7c7ae5b8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c2ef6d3492e6841875485f2923ee810f7c7ae5b8", "patch": "@@ -6755,10 +6755,6 @@ builtin_function_1 (name, type, context, code, class, libname, attrs)\n   DECL_FUNCTION_CODE (decl) = code;\n   DECL_CONTEXT (decl) = context;\n \n-  /* The return builtins leave the current function.  */\n-  if (code == BUILT_IN_RETURN || code == BUILT_IN_EH_RETURN)\n-    TREE_THIS_VOLATILE (decl) = 1;\n-\n   pushdecl (decl);\n \n   /* Since `pushdecl' relies on DECL_ASSEMBLER_NAME instead of DECL_NAME,"}]}