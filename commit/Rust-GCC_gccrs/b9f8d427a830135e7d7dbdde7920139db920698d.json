{"sha": "b9f8d427a830135e7d7dbdde7920139db920698d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmOGQ0MjdhODMwMTM1ZTdkN2RiZGRlNzkyMDEzOWRiOTIwNjk4ZA==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2002-02-24T19:59:46Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2002-02-24T19:59:46Z"}, "message": "jar -C fix\n\nFrom-SVN: r50009", "tree": {"sha": "dfb66a963ca4a0fc1af4563dacda4ac72a52c4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfb66a963ca4a0fc1af4563dacda4ac72a52c4bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9f8d427a830135e7d7dbdde7920139db920698d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f8d427a830135e7d7dbdde7920139db920698d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f8d427a830135e7d7dbdde7920139db920698d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f8d427a830135e7d7dbdde7920139db920698d/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3387d36e96b4de9fa1a14eda0a569a8cf5067877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3387d36e96b4de9fa1a14eda0a569a8cf5067877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3387d36e96b4de9fa1a14eda0a569a8cf5067877"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "ea908d416484c132904b58fcd9fd9da2d556049e", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f8d427a830135e7d7dbdde7920139db920698d/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f8d427a830135e7d7dbdde7920139db920698d/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=b9f8d427a830135e7d7dbdde7920139db920698d", "patch": "@@ -1,3 +1,7 @@\n+2002-02-23  Anthony Green  <green@redhat.com>\n+\n+\t* jartool.c (main): Fix handling of -C.\n+\n 2002-01-30  Tom Tromey  <tromey@redhat.com>\n \n \t* jartool.c (main): NULL-terminate new_argv.  Pass 0 as argument"}, {"sha": "bd5d1fc43a337c84ffcc9cfb2e7284dcc4b79835", "filename": "fastjar/jartool.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f8d427a830135e7d7dbdde7920139db920698d/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f8d427a830135e7d7dbdde7920139db920698d/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=b9f8d427a830135e7d7dbdde7920139db920698d", "patch": "@@ -303,8 +303,8 @@ int number_of_entries; /* number of entries in the linked list */\n \n #define OPT_HELP     LONG_OPT (0)\n \n-/* This holds all options except `-C', which is handled specially.  */\n-#define OPTION_STRING \"-ctxuvVf:m:0ME@\"\n+/* This holds all options.  */\n+#define OPTION_STRING \"-ctxuvVf:m:C:0ME@\"\n \n static const struct option options[] =\n {\n@@ -348,9 +348,11 @@ int main(int argc, char **argv){\n   while ((opt = getopt_long (argc, argv, OPTION_STRING,\n \t\t\t     options, NULL)) != -1) {\n     switch(opt){\n+    case 'C':\n+      new_argv[new_argc++] = (char *) \"-C\";\n+      /* ... fall through ... */\n     case 1:\n-      /* File name or unparsed option, due to RETURN_IN_ORDER.  In\n-\t particular `-C' is handled here and not elsewhere.  */\n+      /* File name or unparsed option, due to RETURN_IN_ORDER.  */\n       new_argv[new_argc++] = optarg;\n       break;\n     case 'c':"}]}