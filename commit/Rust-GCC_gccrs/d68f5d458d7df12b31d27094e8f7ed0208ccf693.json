{"sha": "d68f5d458d7df12b31d27094e8f7ed0208ccf693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY4ZjVkNDU4ZDdkZjEyYjMxZDI3MDk0ZThmN2VkMDIwOGNjZjY5Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-12-10T02:02:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-12-10T02:02:38Z"}, "message": "Replace label_text ctor with \"borrow\" and \"take\"\n\nlibcpp's label_text class wraps a text buffer, along with a flag to\ndetermine if it \"owns\" the buffer.\n\nThe existing ctor exposed this directly, but I found it difficult\nto remember the sense of flag, so this patch hides the ctor, in\nfavor of static member functions \"borrow\" and \"take\", to make\nthe effect on ownership explicit in the name.\n\ngcc/c-family/ChangeLog:\n\t* c-format.c (range_label_for_format_type_mismatch::get_text):\n\tReplace label_text ctor called with true with label_text::take.\n\ngcc/c/ChangeLog:\n\t* c-objc-common.c (range_label_for_type_mismatch::get_text):\n\tReplace label_text ctor calls.\n\ngcc/cp/ChangeLog:\n\t* error.c (range_label_for_type_mismatch::get_text): Replace\n\tlabel_text ctor calls with label_text::borrow.\n\ngcc/ChangeLog:\n\t* gcc-rich-location.c\n\t(maybe_range_label_for_tree_type_mismatch::get_text): Replace\n\tlabel_text ctor call with label_text::borrow.\n\t* gcc-rich-location.h (text_range_label::get_text): Replace\n\tlabel_text ctor called with false with label_text::borrow.\n\nlibcpp/ChangeLog:\n\t* include/line-map.h (label_text::label_text): Make private.\n\t(label_text::borrow): New.\n\t(label_text::take): New.\n\t(label_text::take_or_copy): New.\n\nFrom-SVN: r279153", "tree": {"sha": "c30d686a52fa2b8eecdade9221ca87d28f6f4909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c30d686a52fa2b8eecdade9221ca87d28f6f4909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d68f5d458d7df12b31d27094e8f7ed0208ccf693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68f5d458d7df12b31d27094e8f7ed0208ccf693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68f5d458d7df12b31d27094e8f7ed0208ccf693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68f5d458d7df12b31d27094e8f7ed0208ccf693/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3e28653fa2cd9ad8d5c6acb4bd182bd473c0995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e28653fa2cd9ad8d5c6acb4bd182bd473c0995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e28653fa2cd9ad8d5c6acb4bd182bd473c0995"}], "stats": {"total": 75, "additions": 64, "deletions": 11}, "files": [{"sha": "42ae999103b7690a956e5a8d970dd8bc5c330679", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1,3 +1,11 @@\n+2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc-rich-location.c\n+\t(maybe_range_label_for_tree_type_mismatch::get_text): Replace\n+\tlabel_text ctor call with label_text::borrow.\n+\t* gcc-rich-location.h (text_range_label::get_text): Replace\n+\tlabel_text ctor called with false with label_text::borrow.\n+\n 2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-show-locus.c (diagnostic_show_locus): Remove initial"}, {"sha": "9d488555c42726f667d5c7cbabaf5b06dc052dda", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1,3 +1,8 @@\n+2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-format.c (range_label_for_format_type_mismatch::get_text):\n+\tReplace label_text ctor called with true with label_text::take.\n+\n 2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-format.c (selftest::test_type_mismatch_range_labels): Remove"}, {"sha": "c5fefd5707f1f5191c078a1583572d5deee572bd", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -4629,7 +4629,7 @@ class range_label_for_format_type_mismatch\n \n     char *result = concat (text.m_buffer, p, NULL);\n     text.maybe_free ();\n-    return label_text (result, true);\n+    return label_text::take (result);\n   }\n \n  private:"}, {"sha": "5371e9cc1863a5f4af9a24c9caa70c639c9008ea", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1,3 +1,8 @@\n+2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-objc-common.c (range_label_for_type_mismatch::get_text):\n+\tReplace label_text ctor calls.\n+\n 2019-12-04  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/36941"}, {"sha": "665c7a67eb22c4f93b4a82a6b5a5a1c143b6debd", "filename": "gcc/c/c-objc-common.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.c?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -340,12 +340,12 @@ label_text\n range_label_for_type_mismatch::get_text (unsigned /*range_idx*/) const\n {\n   if (m_labelled_type == NULL_TREE)\n-    return label_text (NULL, false);\n+    return label_text::borrow (NULL);\n \n   c_pretty_printer cpp;\n   bool quoted = false;\n   print_type (&cpp, m_labelled_type, &quoted);\n-  return label_text (xstrdup (pp_formatted_text (&cpp)), true);\n+  return label_text::take (xstrdup (pp_formatted_text (&cpp)));\n }\n \n "}, {"sha": "51407878bbaa16163b1957999db6b6ff79c2cfe4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1,3 +1,8 @@\n+2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* error.c (range_label_for_type_mismatch::get_text): Replace\n+\tlabel_text ctor calls with label_text::borrow.\n+\n 2019-12-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* typeck.c (check_for_casting_away_constness): Add location_t"}, {"sha": "7c46c17c1e18d30b000526cd9c699c525262f891", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -4528,7 +4528,7 @@ label_text\n range_label_for_type_mismatch::get_text (unsigned /*range_idx*/) const\n {\n   if (m_labelled_type == NULL_TREE)\n-    return label_text (NULL, false);\n+    return label_text::borrow (NULL);\n \n   const bool verbose = false;\n   const bool show_color = false;\n@@ -4543,5 +4543,5 @@ range_label_for_type_mismatch::get_text (unsigned /*range_idx*/) const\n \n   /* Both of the above return GC-allocated buffers, so the caller mustn't\n      free them.  */\n-  return label_text (const_cast <char *> (result), false);\n+  return label_text::borrow (result);\n }"}, {"sha": "071463ee513b12304fa21dc7062bea9bac739fe7", "filename": "gcc/gcc-rich-location.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fgcc-rich-location.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fgcc-rich-location.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.c?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -196,7 +196,7 @@ maybe_range_label_for_tree_type_mismatch::get_text (unsigned range_idx) const\n {\n   if (m_expr == NULL_TREE\n       || !EXPR_P (m_expr))\n-    return label_text (NULL, false);\n+    return label_text::borrow (NULL);\n   tree expr_type = TREE_TYPE (m_expr);\n \n   tree other_type = NULL_TREE;"}, {"sha": "71f4f3d4207730f74552fee175246ae68da9d7a3", "filename": "gcc/gcc-rich-location.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fgcc-rich-location.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/gcc%2Fgcc-rich-location.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-rich-location.h?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -111,7 +111,7 @@ class text_range_label : public range_label\n \n   label_text get_text (unsigned /*range_idx*/) const FINAL OVERRIDE\n   {\n-    return label_text (const_cast <char *> (m_text), false);\n+    return label_text::borrow (m_text);\n   }\n \n  private:"}, {"sha": "2090bd72103c16de6bc266130a9812bce0045063", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1,3 +1,10 @@\n+2019-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* include/line-map.h (label_text::label_text): Make private.\n+\t(label_text::borrow): New.\n+\t(label_text::take): New.\n+\t(label_text::take_or_copy): New.\n+\n 2019-12-09  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/49973"}, {"sha": "e78249fa93069a19bf1dcef48a67621fc995cba8", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68f5d458d7df12b31d27094e8f7ed0208ccf693/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68f5d458d7df12b31d27094e8f7ed0208ccf693/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=d68f5d458d7df12b31d27094e8f7ed0208ccf693", "patch": "@@ -1764,18 +1764,41 @@ class label_text\n   : m_buffer (NULL), m_caller_owned (false)\n   {}\n \n-  label_text (char *buffer, bool caller_owned)\n-  : m_buffer (buffer), m_caller_owned (caller_owned)\n-  {}\n-\n   void maybe_free ()\n   {\n     if (m_caller_owned)\n       free (m_buffer);\n   }\n \n+  /* Create a label_text instance that borrows BUFFER from a\n+     longer-lived owner.  */\n+  static label_text borrow (const char *buffer)\n+  {\n+    return label_text (const_cast <char *> (buffer), false);\n+  }\n+\n+  /* Create a label_text instance that takes ownership of BUFFER.  */\n+  static label_text take (char *buffer)\n+  {\n+    return label_text (buffer, true);\n+  }\n+\n+  /* Take ownership of the buffer, copying if necessary.  */\n+  char *take_or_copy ()\n+  {\n+    if (m_caller_owned)\n+      return m_buffer;\n+    else\n+      return xstrdup (m_buffer);\n+  }\n+\n   char *m_buffer;\n   bool m_caller_owned;\n+\n+private:\n+  label_text (char *buffer, bool owned)\n+  : m_buffer (buffer), m_caller_owned (owned)\n+  {}\n };\n \n /* Abstract base class for labelling a range within a rich_location"}]}