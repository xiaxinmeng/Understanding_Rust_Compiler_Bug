{"sha": "4e7d02606ea8b0dac11887b1f759ea61d5394d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU3ZDAyNjA2ZWE4YjBkYWMxMTg4N2IxZjc1OWVhNjFkNTM5NGQ4Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-11T15:33:51Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-11T15:33:51Z"}, "message": "[PATCH] DECL_ASSEMBLER_NAME and friends\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00582.html\n\t* tree.h (DECL_ASSEMBLER_NAME_RAW): New.\n\t(SET_DECL_ASSEMBLER_NAME): Use it.\n\t(DECL_ASSEMBLER_NAME_SET_P): Likewise.\n\t(COPY_DECL_ASSEMBLER_NAME): Likewise.\n\t* tree.c (decl_assembler_name): Use DECL_ASSEMBLER_NAME_RAW.\n\n\tlto/\n\t* lto.c (mentions_vars_p_decl_with_vis): Use\n\tDECL_ASSEMBLER_NAME_RAW.\n\t(lto_fixup_prevailing_decls): Likewise.\n\n\tcp\n\t* decl2.c (struct mangled_decl_hash): Use DECL_ASSEMBLER_NAME_RAW.\n\t(record_mangling): Likewise.\n\nFrom-SVN: r253647", "tree": {"sha": "d02ed206b4fdcfc4796f611f2578941e141fa903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d02ed206b4fdcfc4796f611f2578941e141fa903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e7d02606ea8b0dac11887b1f759ea61d5394d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7d02606ea8b0dac11887b1f759ea61d5394d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7d02606ea8b0dac11887b1f759ea61d5394d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7d02606ea8b0dac11887b1f759ea61d5394d86/comments", "author": null, "committer": null, "parents": [{"sha": "64766e8dc78b92fc906e21429b1befd2b248f96e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64766e8dc78b92fc906e21429b1befd2b248f96e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64766e8dc78b92fc906e21429b1befd2b248f96e"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "273f561fd8720f8c499de4d93fb29895015a0f6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -1,3 +1,11 @@\n+2017-10-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree.h (DECL_ASSEMBLER_NAME_RAW): New.\n+\t(SET_DECL_ASSEMBLER_NAME): Use it.\n+\t(DECL_ASSEMBLER_NAME_SET_P): Likewise.\n+\t(COPY_DECL_ASSEMBLER_NAME): Likewise.\n+\t* tree.c (decl_assembler_name): Use DECL_ASSEMBLER_NAME_RAW.\n+\n 2017-10-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* config.gcc (i386, x86_64): Add extra objects.\n@@ -221,8 +229,9 @@\n \n 2017-10-10  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* x86-tune.def (X86_TUNE_AVOID_FALSE_DEP_FOR_BMI, X86_TUNE_ADJUST_UNROLL,\n-\tX86_TUNE_ONE_IF_CONV_INSN): Move to right spot in the file.\n+\t* x86-tune.def (X86_TUNE_AVOID_FALSE_DEP_FOR_BMI,\n+\tX86_TUNE_ADJUST_UNROLL, X86_TUNE_ONE_IF_CONV_INSN): Move to right\n+\tspot in the file.\n \n 2017-10-10  Richard Sandiford  <richard.sandiford@linaro.org>\n "}, {"sha": "611742da83bab644c287fdcd20b8b0a805b103b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -1,3 +1,8 @@\n+2017-10-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl2.c (struct mangled_decl_hash): Use DECL_ASSEMBLER_NAME_RAW.\n+\t(record_mangling): Likewise.\n+\n 2017-10-10  Nathan Sidwell  <nathan@acm.org>\n \n \t* name-lookup.c (extern_c_fns): Rename to ..."}, {"sha": "bc509623b36508317567449b60a0b68d79585391", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -103,7 +103,7 @@ static GTY(()) vec<tree, va_gc> *no_linkage_decls;\n static GTY(()) vec<tree, va_gc> *mangling_aliases;\n \n /* hash traits for declarations.  Hashes single decls via\n-   DECL_ASSEMBLER_NAME.  */\n+   DECL_ASSEMBLER_NAME_RAW.  */\n \n struct mangled_decl_hash : ggc_remove <tree>\n {\n@@ -112,11 +112,11 @@ struct mangled_decl_hash : ggc_remove <tree>\n \n   static hashval_t hash (const value_type decl)\n   {\n-    return IDENTIFIER_HASH_VALUE (DECL_ASSEMBLER_NAME (decl));\n+    return IDENTIFIER_HASH_VALUE (DECL_ASSEMBLER_NAME_RAW (decl));\n   }\n   static bool equal (const value_type existing, compare_type candidate)\n   {\n-    tree name = DECL_ASSEMBLER_NAME (existing);\n+    tree name = DECL_ASSEMBLER_NAME_RAW (existing);\n     return candidate == name;\n   }\n \n@@ -4399,7 +4399,7 @@ record_mangling (tree decl, bool need_warning)\n     mangled_decls = hash_table<mangled_decl_hash>::create_ggc (499);\n \n   gcc_checking_assert (DECL_ASSEMBLER_NAME_SET_P (decl));\n-  tree id = DECL_ASSEMBLER_NAME (decl);\n+  tree id = DECL_ASSEMBLER_NAME_RAW (decl);\n   tree *slot\n     = mangled_decls->find_slot_with_hash (id, IDENTIFIER_HASH_VALUE (id),\n \t\t\t\t\t  INSERT);"}, {"sha": "3e6b00bc487091bdeaf0f196382faebfcb1b06c0", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -1,3 +1,9 @@\n+2017-10-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lto.c (mentions_vars_p_decl_with_vis): Use\n+\tDECL_ASSEMBLER_NAME_RAW.\n+\t(lto_fixup_prevailing_decls): Likewise.\n+\n 2017-10-10  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* lto.c (compare_tree_sccs_1): Use wi::to_wide when"}, {"sha": "63ba73c0dbf2fce9798c99d360ecabb5b614a8f6", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -591,7 +591,7 @@ mentions_vars_p_decl_with_vis (tree t)\n     return true;\n \n   /* Accessor macro has side-effects, use field-name here. */\n-  CHECK_NO_VAR (t->decl_with_vis.assembler_name);\n+  CHECK_NO_VAR (DECL_ASSEMBLER_NAME_RAW (t));\n   return false;\n }\n \n@@ -2557,7 +2557,7 @@ lto_fixup_prevailing_decls (tree t)\n \t}\n       if (CODE_CONTAINS_STRUCT (code, TS_DECL_WITH_VIS))\n \t{\n-\t  LTO_NO_PREVAIL (t->decl_with_vis.assembler_name);\n+\t  LTO_NO_PREVAIL (DECL_ASSEMBLER_NAME_RAW (t));\n \t}\n       if (CODE_CONTAINS_STRUCT (code, TS_DECL_NON_COMMON))\n \t{"}, {"sha": "8acbdf70f4e21caefd508d3ff7601b73b1da931a", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -671,7 +671,7 @@ decl_assembler_name (tree decl)\n {\n   if (!DECL_ASSEMBLER_NAME_SET_P (decl))\n     lang_hooks.set_decl_assembler_name (decl);\n-  return DECL_WITH_VIS_CHECK (decl)->decl_with_vis.assembler_name;\n+  return DECL_ASSEMBLER_NAME_RAW (decl);\n }\n \n /* When the target supports COMDAT groups, this indicates which group the"}, {"sha": "b542f5181f5d3c798705bc403dbd081dacb9f1f0", "filename": "gcc/tree.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d02606ea8b0dac11887b1f759ea61d5394d86/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4e7d02606ea8b0dac11887b1f759ea61d5394d86", "patch": "@@ -2721,6 +2721,10 @@ extern void decl_value_expr_insert (tree, tree);\n    LTO compilation and C++.  */\n #define DECL_ASSEMBLER_NAME(NODE) decl_assembler_name (NODE)\n \n+/* Raw accessor for DECL_ASSEMBLE_NAME.  */\n+#define DECL_ASSEMBLER_NAME_RAW(NODE) \\\n+  (DECL_WITH_VIS_CHECK (NODE)->decl_with_vis.assembler_name)\n+\n /* Return true if NODE is a NODE that can contain a DECL_ASSEMBLER_NAME.\n    This is true of all DECL nodes except FIELD_DECL.  */\n #define HAS_DECL_ASSEMBLER_NAME_P(NODE) \\\n@@ -2731,11 +2735,11 @@ extern void decl_value_expr_insert (tree, tree);\n    yet.  */\n #define DECL_ASSEMBLER_NAME_SET_P(NODE) \\\n   (HAS_DECL_ASSEMBLER_NAME_P (NODE) \\\n-   && DECL_WITH_VIS_CHECK (NODE)->decl_with_vis.assembler_name != NULL_TREE)\n+   && DECL_ASSEMBLER_NAME_RAW (NODE) != NULL_TREE)\n \n /* Set the DECL_ASSEMBLER_NAME for NODE to NAME.  */\n #define SET_DECL_ASSEMBLER_NAME(NODE, NAME) \\\n-  (DECL_WITH_VIS_CHECK (NODE)->decl_with_vis.assembler_name = (NAME))\n+  (DECL_ASSEMBLER_NAME_RAW (NODE) = (NAME))\n \n /* Copy the DECL_ASSEMBLER_NAME from DECL1 to DECL2.  Note that if DECL1's\n    DECL_ASSEMBLER_NAME has not yet been set, using this macro will not cause\n@@ -2747,10 +2751,7 @@ extern void decl_value_expr_insert (tree, tree);\n    which will try to set the DECL_ASSEMBLER_NAME for DECL1.  */\n \n #define COPY_DECL_ASSEMBLER_NAME(DECL1, DECL2)\t\t\t\t\\\n-  (DECL_ASSEMBLER_NAME_SET_P (DECL1)\t\t\t\t\t\\\n-   ? (void) SET_DECL_ASSEMBLER_NAME (DECL2,\t\t\t\t\\\n-\t\t\t\t     DECL_ASSEMBLER_NAME (DECL1))\t\\\n-   : (void) 0)\n+  SET_DECL_ASSEMBLER_NAME (DECL2, DECL_ASSEMBLER_NAME_RAW (DECL1))\n \n /* Records the section name in a section attribute.  Used to pass\n    the name from decl_attributes to make_function_rtl and make_decl_rtl.  */"}]}