{"sha": "92d0307de0b768b1f7e904c3e109b98164462cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkMDMwN2RlMGI3NjhiMWY3ZTkwNGMzZTEwOWI5ODE2NDQ2MmNmYw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2014-10-16T20:50:18Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-10-16T20:50:18Z"}, "message": "rs6000-c.c (rid_int128): New.\n\n* config/rs6000/rs6000-c.c (rid_int128): New.\n(rs6000_macro_to_expand): Use instead of RID_INT128.\n\nFrom-SVN: r216348", "tree": {"sha": "38bbcd370df4a0c6b2105fcbe7283cf258c5b2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38bbcd370df4a0c6b2105fcbe7283cf258c5b2b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92d0307de0b768b1f7e904c3e109b98164462cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d0307de0b768b1f7e904c3e109b98164462cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d0307de0b768b1f7e904c3e109b98164462cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d0307de0b768b1f7e904c3e109b98164462cfc/comments", "author": null, "committer": null, "parents": [{"sha": "299874d5226450fc4f7277b45e40bcfc961385dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299874d5226450fc4f7277b45e40bcfc961385dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299874d5226450fc4f7277b45e40bcfc961385dd"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "cf31da6958bfea36d637f0d57ccb3553d55605de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d0307de0b768b1f7e904c3e109b98164462cfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d0307de0b768b1f7e904c3e109b98164462cfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92d0307de0b768b1f7e904c3e109b98164462cfc", "patch": "@@ -1,3 +1,8 @@\n+2014-10-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rs6000/rs6000-c.c (rid_int128): New.\n+\t(rs6000_macro_to_expand): Use instead of RID_INT128.\n+\n 2014-10-16  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* function.h: Flatten file.  Remove includes, adjust prototypes to "}, {"sha": "18a2688dba79797de0e967a8a4a7099c15902645", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d0307de0b768b1f7e904c3e109b98164462cfc/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d0307de0b768b1f7e904c3e109b98164462cfc/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=92d0307de0b768b1f7e904c3e109b98164462cfc", "patch": "@@ -160,6 +160,23 @@ init_vector_keywords (void)\n     }\n }\n \n+/* Helper function to find out which RID_INT_N_* code is the one for\n+   __int128, if any.  Returns RID_MAX+1 if none apply, which is safe\n+   (for our purposes, since we always expect to have __int128) to\n+   compare against.  */\n+static int\n+rid_int128(void)\n+{\n+  int i;\n+\n+  for (i = 0; i < NUM_INT_N_ENTS; i ++)\n+    if (int_n_enabled_p[i]\n+\t&& int_n_data[i].bitsize == 128)\n+      return RID_INT_N_0 + i;\n+\n+  return RID_MAX + 1;\n+}\n+\n /* Called to decide whether a conditional macro should be expanded.\n    Since we have exactly one such macro (i.e, 'vector'), we do not\n    need to examine the 'tok' parameter.  */\n@@ -234,7 +251,7 @@ rs6000_macro_to_expand (cpp_reader *pfile, const cpp_token *tok)\n \t      || rid_code == RID_INT || rid_code == RID_CHAR\n \t      || rid_code == RID_FLOAT\n \t      || (rid_code == RID_DOUBLE && TARGET_VSX)\n-\t      || (rid_code == RID_INT128 && TARGET_VADDUQM))\n+\t      || (rid_code == rid_int128 () && TARGET_VADDUQM))\n \t    {\n \t      expand_this = C_CPP_HASHNODE (__vector_keyword);\n \t      /* If the next keyword is bool or pixel, it"}]}