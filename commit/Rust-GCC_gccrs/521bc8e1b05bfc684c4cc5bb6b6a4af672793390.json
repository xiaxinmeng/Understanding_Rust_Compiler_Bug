{"sha": "521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxYmM4ZTFiMDViZmM2ODRjNGNjNWJiNmI2YTRhZjY3Mjc5MzM5MA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-27T00:16:18Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-27T00:16:18Z"}, "message": "Daily bump.", "tree": {"sha": "a4a2c83a3c03c82e585b495cb95b19783ee083a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4a2c83a3c03c82e585b495cb95b19783ee083a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/comments", "author": null, "committer": null, "parents": [{"sha": "6037ebeff1cd76385e88dd9cbcaf68ada85316fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6037ebeff1cd76385e88dd9cbcaf68ada85316fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6037ebeff1cd76385e88dd9cbcaf68ada85316fb"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "b7f012f6fdec0ab8056e66b242642444f98e52a4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "patch": "@@ -1 +1 @@\n-20201226\n+20201227"}, {"sha": "c10f28737be29c909d6b8dde6adda5d9b1126f51", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "patch": "@@ -1,3 +1,24 @@\n+2020-12-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/98022\n+\t* data.c (gfc_assign_data_value): Throw an error for inquiry\n+\treferences. Follow with corrected code that would provide the\n+\texpected result and provides clean error recovery.\n+\n+2020-12-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/83118\n+\t* trans-array.c (gfc_alloc_allocatable_for_assignment): Make\n+\tsure that class expressions are captured for dummy arguments by\n+\tuse of gfc_get_class_from_gfc_expr otherwise the wrong vptr is\n+\tused.\n+\t* trans-expr.c (gfc_get_class_from_gfc_expr): New function.\n+\t(gfc_get_class_from_expr): If a constant expression is\n+\tencountered, return NULL_TREE;\n+\t(gfc_trans_assignment_1): Deallocate rhs allocatable components\n+\tafter passing derived type function results to class lhs.\n+\t* trans.h : Add prototype for gfc_get_class_from_gfc_expr.\n+\n 2020-12-25  Harald Anlauf  <anlauf@gmx.de>\n \n \t* data.c (gfc_assign_data_value): Restrict use of"}, {"sha": "3d36d6419814bc099d5e74c84c0ddac4dae39269", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "patch": "@@ -1,3 +1,18 @@\n+2020-12-26  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/96045\n+\t* obj-c++.dg/property/property-neg-6.mm: Adjust EOF\n+\tdiagnostic location.\n+\t* obj-c++.dg/syntax-error-10.mm: Likewise.\n+\t* obj-c++.dg/syntax-error-8.mm: Likewise.\n+\t* obj-c++.dg/syntax-error-9.mm: Likewise.\n+\n+2020-12-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/98022\n+\t* gfortran.dg/data_inquiry_ref.f90: Change to dg-compile and\n+\tadd errors for inquiry references.\n+\n 2020-12-25  Harald Anlauf  <anlauf@gmx.de>\n \n \t* gfortran.dg/pr93685_1.f90: New test."}, {"sha": "dfc97005e050336ef623943896017d8fb5bfda35", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521bc8e1b05bfc684c4cc5bb6b6a4af672793390/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=521bc8e1b05bfc684c4cc5bb6b6a4af672793390", "patch": "@@ -1,3 +1,9 @@\n+2020-12-26  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/xml/manual/abi.xml: Update link to Intel's compatibility\n+\twith GNU compilers document.\n+\t* doc/html/manual/abi.html: Regenerate.\n+\n 2020-12-25  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/messages.xml: Update link to Java docs."}]}