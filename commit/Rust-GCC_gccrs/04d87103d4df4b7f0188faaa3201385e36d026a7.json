{"sha": "04d87103d4df4b7f0188faaa3201385e36d026a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRkODcxMDNkNGRmNGI3ZjAxODhmYWFhMzIwMTM4NWUzNmQwMjZhNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-30T09:23:52Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-30T09:23:52Z"}, "message": "Warning fixes:\n\n        * sta.c (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n        Const-ify a char*.\n        * sta.h (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n        Likewise.\n        * stb.c (ffestb_local_u_): Likewise.\n        (ffestb_do, ffestb_dowhile, ffestb_else, ffestb_elsexyz,\n        ffestb_else3_, ffestb_endxyz, ffestb_goto, ffestb_let,\n        ffestb_type, ffestb_type1_, ffestb_varlist, ffestb_R423B,\n        ffestb_R522, ffestb_R528, ffestb_R542, ffestb_R834, ffestb_R835,\n        ffestb_R838, ffestb_R841, ffestb_R1102, ffestb_blockdata,\n        ffestb_R1212, ffestb_R1228, ffestb_V009, ffestb_module,\n        ffestb_R809, ffestb_R810, ffestb_R10014_, ffestb_R10015_,\n        ffestb_R10018_, ffestb_R1107, ffestb_R1202, ffestb_R12026_,\n        ffestb_S3P4, ffestb_V012, ffestb_V014, ffestb_V025, ffestb_V0255_,\n        ffestb_V020, ffestb_dimlist, ffestb_dummy, ffestb_R524,\n        ffestb_R547, ffestb_decl_chartype, ffestb_decl_dbltype,\n        ffestb_decl_gentype, ffestb_decl_recursive, ffestb_decl_entsp_2_,\n        ffestb_decl_func_, ffestb_V003, ffestb_V016, ffestb_V027,\n        ffestb_decl_R539): Likewise.\n        * stb.h (_ffestb_args_): Likewise.\n        * stc.c (ffestc_subr_binsrch_, ffestc_subr_is_present_,\n        ffestc_subr_speccmp_, ffestc_R904, ffestc_R907): Likewise.\n        * std.c (ffestd_R1001dump_1005_1_, ffestd_R1001dump_1005_2_,\n        ffestd_R1001dump_1005_3_, ffestd_R1001dump_1005_4_,\n        ffestd_R1001dump_1005_5_, ffestd_R1001dump_1010_1_,\n        ffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n        ffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_): Likewise.\n        * ste.c (ffeste_begin_iterdo_, ffeste_subr_file_): Likewise.\n        * sts.c (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n        * sts.h (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n        * stt.c (ffestt_exprlist_drive, ffestt_implist_drive,\n        ffestt_tokenlist_drive): Add prototype arguments.\n        * stt.h (ffestt_exprlist_drive, ffestt_implist_drive,\n        ffestt_tokenlist_drive): Likewise.\n        * stu.c (ffestu_dummies_transition_): Likewise.\n        (ffestu_sym_end_transition): Const-ify a char*.\n        * stw.c (ffestw_display_state, ffestw_new, ffestw_pop): Add\n        prototype arguments.\n        * stw.h (ffestw_display_state, ffestw_new, ffestw_pop): Likewise.\n        * version.c (ffe_version_string): Const-ify a char*.\n        * version.h (ffe_version_string): Likewise.\n\nFrom-SVN: r26064", "tree": {"sha": "39af70d0081635653b976aafd72dfd931f983836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39af70d0081635653b976aafd72dfd931f983836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04d87103d4df4b7f0188faaa3201385e36d026a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d87103d4df4b7f0188faaa3201385e36d026a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04d87103d4df4b7f0188faaa3201385e36d026a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d87103d4df4b7f0188faaa3201385e36d026a7/comments", "author": null, "committer": null, "parents": [{"sha": "24f98470c26dce91ecad035bde8fc0afd0358757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f98470c26dce91ecad035bde8fc0afd0358757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f98470c26dce91ecad035bde8fc0afd0358757"}], "stats": {"total": 349, "additions": 205, "deletions": 144}, "files": [{"sha": "45394a32e9b8ae2038275c92e9ca1254634bbf58", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -1,3 +1,64 @@\n+Tue Mar 30 12:04:11 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * sta.c (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n+        Const-ify a char*.\n+\n+        * sta.h (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n+        Likewise.\n+\n+        * stb.c (ffestb_local_u_): Likewise.\n+        (ffestb_do, ffestb_dowhile, ffestb_else, ffestb_elsexyz,\n+        ffestb_else3_, ffestb_endxyz, ffestb_goto, ffestb_let,\n+        ffestb_type, ffestb_type1_, ffestb_varlist, ffestb_R423B,\n+        ffestb_R522, ffestb_R528, ffestb_R542, ffestb_R834, ffestb_R835,\n+        ffestb_R838, ffestb_R841, ffestb_R1102, ffestb_blockdata,\n+        ffestb_R1212, ffestb_R1228, ffestb_V009, ffestb_module,\n+        ffestb_R809, ffestb_R810, ffestb_R10014_, ffestb_R10015_,\n+        ffestb_R10018_, ffestb_R1107, ffestb_R1202, ffestb_R12026_,\n+        ffestb_S3P4, ffestb_V012, ffestb_V014, ffestb_V025, ffestb_V0255_,\n+        ffestb_V020, ffestb_dimlist, ffestb_dummy, ffestb_R524,\n+        ffestb_R547, ffestb_decl_chartype, ffestb_decl_dbltype,\n+        ffestb_decl_gentype, ffestb_decl_recursive, ffestb_decl_entsp_2_,\n+        ffestb_decl_func_, ffestb_V003, ffestb_V016, ffestb_V027,\n+        ffestb_decl_R539): Likewise.\n+\n+        * stb.h (_ffestb_args_): Likewise.\n+\n+        * stc.c (ffestc_subr_binsrch_, ffestc_subr_is_present_,\n+        ffestc_subr_speccmp_, ffestc_R904, ffestc_R907): Likewise.\n+\n+        * std.c (ffestd_R1001dump_1005_1_, ffestd_R1001dump_1005_2_,\n+        ffestd_R1001dump_1005_3_, ffestd_R1001dump_1005_4_,\n+        ffestd_R1001dump_1005_5_, ffestd_R1001dump_1010_1_,\n+        ffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n+        ffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_): Likewise.\n+\n+        * ste.c (ffeste_begin_iterdo_, ffeste_subr_file_): Likewise.\n+\n+        * sts.c (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n+        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n+\n+        * sts.h (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n+        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n+\n+        * stt.c (ffestt_exprlist_drive, ffestt_implist_drive,\n+        ffestt_tokenlist_drive): Add prototype arguments.\n+\n+        * stt.h (ffestt_exprlist_drive, ffestt_implist_drive,\n+        ffestt_tokenlist_drive): Likewise.\n+\n+        * stu.c (ffestu_dummies_transition_): Likewise.\n+        (ffestu_sym_end_transition): Const-ify a char*.\n+\n+        * stw.c (ffestw_display_state, ffestw_new, ffestw_pop): Add\n+        prototype arguments.\n+\n+        * stw.h (ffestw_display_state, ffestw_new, ffestw_pop): Likewise.\n+\n+        * version.c (ffe_version_string): Const-ify a char*.\n+\n+        * version.h (ffe_version_string): Likewise.\n+\n Sat Mar 27 13:00:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* bad.c (_ffebad_message_, ffebad_string_, ffebad_message_,"}, {"sha": "52cb37b2aaedcea4494ea90c897ee7c211b18508", "filename": "gcc/f/sta.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsta.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -1701,7 +1701,7 @@ ffesta_ffebad_1p (ffebad errnum, ffelexToken names_token, ffeTokenLength index,\n }\n \n void\n-ffesta_ffebad_1sp (ffebad errnum, char *s, ffelexToken names_token,\n+ffesta_ffebad_1sp (ffebad errnum, const char *s, ffelexToken names_token,\n \t\t   ffeTokenLength index, ffelexToken next_token)\n {\n   ffewhereLine line;\n@@ -1735,7 +1735,7 @@ ffesta_ffebad_1sp (ffebad errnum, char *s, ffelexToken names_token,\n }\n \n void\n-ffesta_ffebad_1st (ffebad errnum, char *s, ffelexToken t)\n+ffesta_ffebad_1st (ffebad errnum, const char *s, ffelexToken t)\n {\n   if (ffesta_ffebad_start (errnum))\n     {\n@@ -1764,7 +1764,7 @@ ffesta_ffebad_1t (ffebad errnum, ffelexToken t)\n }\n \n void\n-ffesta_ffebad_2st (ffebad errnum, char *s, ffelexToken t1, ffelexToken t2)\n+ffesta_ffebad_2st (ffebad errnum, const char *s, ffelexToken t1, ffelexToken t2)\n {\n   if (ffesta_ffebad_start (errnum))\n     {"}, {"sha": "64e16079815a197608606c41539d91627ade9446", "filename": "gcc/f/sta.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsta.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -90,11 +90,11 @@ ffesymbol ffesta_sym_end_transition (ffesymbol s);\n ffesymbol ffesta_sym_exec_transition (ffesymbol s);\n void ffesta_ffebad_1p (ffebad msg, ffelexToken names_token,\n \t\t       ffeTokenLength index, ffelexToken next_token);\n-void ffesta_ffebad_1sp (ffebad msg, char *s, ffelexToken names_token,\n+void ffesta_ffebad_1sp (ffebad msg, const char *s, ffelexToken names_token,\n \t\t\tffeTokenLength index, ffelexToken next_token);\n-void ffesta_ffebad_1st (ffebad msg, char *s, ffelexToken t);\n+void ffesta_ffebad_1st (ffebad msg, const char *s, ffelexToken t);\n void ffesta_ffebad_1t (ffebad msg, ffelexToken t);\n-void ffesta_ffebad_2st (ffebad msg, char *s, ffelexToken t1, ffelexToken t2);\n+void ffesta_ffebad_2st (ffebad msg, const char *s, ffelexToken t1, ffelexToken t2);\n void ffesta_ffebad_2t (ffebad msg, ffelexToken t1, ffelexToken t2);\n ffelexHandler ffesta_zero (ffelexToken t);\n ffelexHandler ffesta_two (ffelexToken first, ffelexToken second);"}, {"sha": "59655e2cac704c54a74b0da9432598d24c8660af", "filename": "gcc/f/stb.c", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstb.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -404,7 +404,7 @@ union ffestb_local_u_\n     dimlist;\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffestrFirst first_kw;\n \tbool is_subr;\n       }\n@@ -421,7 +421,7 @@ union ffestb_local_u_\n \tffesttTokenList toklist;/* For ambiguity resolution. */\n \tffesttImpList imps;\t/* List of IMPLICIT letters. */\n \tffelexHandler imp_handler;\t/* Call if paren list wasn't letters. */\n-\tchar *badname;\n+\tconst char *badname;\n \tffestrOther kw;\t\t/* INTENT(IN/OUT/INOUT). */\n \tffestpType type;\n \tbool parameter;\t\t/* If PARAMETER attribute seen (governs =expr\n@@ -1859,7 +1859,7 @@ ffelexHandler\n ffestb_do (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexHandler next;\n   ffelexToken nt;\n   ffestrSecond kw;\n@@ -2033,7 +2033,7 @@ ffelexHandler\n ffestb_dowhile (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexHandler next;\n   ffelexToken nt;\n \n@@ -2507,7 +2507,7 @@ ffelexHandler\n ffestb_else (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -2600,7 +2600,7 @@ ffelexHandler\n ffestb_elsexyz (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -2787,7 +2787,7 @@ static ffelexHandler\n ffestb_else3_ (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   ffelex_set_names (FALSE);\n \n@@ -3013,7 +3013,7 @@ ffelexHandler\n ffestb_endxyz (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -3319,7 +3319,7 @@ ffelexHandler\n ffestb_goto (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexHandler next;\n   ffelexToken nt;\n \n@@ -4152,7 +4152,7 @@ ffestb_let (ffelexToken t)\n   ffelexHandler next;\n   bool vxtparam;\t\t/* TRUE if it might really be a VXT PARAMETER\n \t\t\t\t   stmt. */\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -4292,7 +4292,7 @@ ffelexHandler\n ffestb_type (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -4376,7 +4376,7 @@ static ffelexHandler\n ffestb_type1_ (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   ffelex_set_names (FALSE);\n \n@@ -4537,7 +4537,7 @@ ffelexHandler\n ffestb_varlist (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -5215,7 +5215,7 @@ ffestb_varlist6_ (ffelexToken t)\n ffelexHandler\n ffestb_R423B (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -5284,7 +5284,7 @@ ffelexHandler\n ffestb_R522 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -5528,7 +5528,7 @@ ffestb_R5224_ (ffelexToken t)\n ffelexHandler\n ffestb_R528 (ffelexToken t)\n {\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffeTokenLength i;\n   ffelexToken nt;\n   ffelexHandler next;\n@@ -6005,7 +6005,7 @@ ffestb_R5373_ (ffelexToken t)\n ffelexHandler\n ffestb_R542 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -6419,7 +6419,7 @@ ffelexHandler\n ffestb_R834 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -6534,7 +6534,7 @@ ffelexHandler\n ffestb_R835 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -6648,7 +6648,7 @@ ffestb_R8351_ (ffelexToken t)\n ffelexHandler\n ffestb_R838 (ffelexToken t)\n {\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffeTokenLength i;\n   ffelexHandler next;\n   ffelexToken et;\t\t/* First token in target. */\n@@ -7073,7 +7073,7 @@ ffestb_R8407_ (ffelexToken t)\n ffelexHandler\n ffestb_R841 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -7141,7 +7141,7 @@ ffelexHandler\n ffestb_R1102 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -7293,7 +7293,7 @@ ffelexHandler\n ffestb_blockdata (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -7436,7 +7436,7 @@ ffelexHandler\n ffestb_R1212 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexHandler next;\n   ffelexToken nt;\n \n@@ -7675,7 +7675,7 @@ ffestb_R12271_ (ffelexToken ft, ffebld expr, ffelexToken t)\n ffelexHandler\n ffestb_R1228 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -7744,7 +7744,7 @@ ffestb_R1228 (ffelexToken t)\n ffelexHandler\n ffestb_V009 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -8156,7 +8156,7 @@ ffelexHandler\n ffestb_module (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexToken nt;\n   ffelexToken mt;\t\t/* Name in MODULE PROCEDUREname, i.e.\n \t\t\t\t   includes \"PROCEDURE\". */\n@@ -8429,7 +8429,7 @@ ffelexHandler\n ffestb_R809 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -8630,7 +8630,7 @@ ffelexHandler\n ffestb_R810 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -9185,7 +9185,7 @@ ffestb_R10014_ (ffelexToken t)\n {\n   ffesttFormatList f;\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffestrFormat kw;\n \n   ffelex_set_expecting_hollerith (0, '\\0',\n@@ -9814,7 +9814,7 @@ ffestb_R10015_ (ffelexToken t)\n   bool split_pea;\t\t/* New NAMES requires splitting kP from new\n \t\t\t\t   edit desc. */\n   ffestrFormat kw;\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (t))\n@@ -10191,7 +10191,7 @@ static ffelexHandler\n ffestb_R10018_ (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (t))\n     {\n@@ -10985,7 +10985,7 @@ ffelexHandler\n ffestb_R1107 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -11431,7 +11431,7 @@ ffelexHandler\n ffestb_R1202 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -11822,7 +11822,7 @@ ffestb_R12025_ (ffelexToken t)\n static ffelexHandler\n ffestb_R12026_ (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (t))\n     {\n@@ -11965,7 +11965,7 @@ ffelexHandler\n ffestb_S3P4 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexHandler next;\n   ffelexToken nt;\n   ffelexToken ut;\n@@ -12097,7 +12097,7 @@ ffestb_S3P41_ (ffelexToken ft, ffebld expr, ffelexToken t)\n ffelexHandler\n ffestb_V012 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -12166,7 +12166,7 @@ ffelexHandler\n ffestb_V014 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -12400,7 +12400,7 @@ ffelexHandler\n ffestb_V025 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -12596,7 +12596,7 @@ ffestb_V0254_ (ffelexToken ft, ffebld expr, ffelexToken t)\n static ffelexHandler\n ffestb_V0255_ (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n \n   switch (ffelex_token_type (t))\n     {\n@@ -17910,7 +17910,7 @@ ffelexHandler\n ffestb_V020 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexHandler next;\n   ffestpTypeIx ix;\n \n@@ -18846,7 +18846,7 @@ ffelexHandler\n ffestb_dimlist (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -19400,7 +19400,7 @@ ffelexHandler\n ffestb_dummy (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n     {\n@@ -19619,7 +19619,7 @@ ffelexHandler\n ffestb_R524 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -19848,7 +19848,7 @@ ffelexHandler\n ffestb_R547 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -20486,7 +20486,7 @@ ffelexHandler\n ffestb_decl_chartype (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   ffestb_local_.decl.type = FFESTP_typeCHARACTER;\n   ffestb_local_.decl.recursive = NULL;\n@@ -20673,7 +20673,7 @@ ffelexHandler\n ffestb_decl_dbltype (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   ffestb_local_.decl.type = ffestb_args.decl.type;\n   ffestb_local_.decl.recursive = NULL;\n@@ -20864,7 +20864,7 @@ ffelexHandler\n ffestb_decl_gentype (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n \n   ffestb_local_.decl.type = ffestb_args.decl.type;\n   ffestb_local_.decl.recursive = NULL;\n@@ -21010,7 +21010,7 @@ ffelexHandler\n ffestb_decl_recursive (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexToken nt;\n   ffelexToken ot;\n   ffelexHandler next;\n@@ -22668,7 +22668,7 @@ ffestb_decl_entsp_2_ (ffelexToken t)\n {\n   ffelexToken nt;\n   bool asterisk_ok;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (t))\n@@ -23095,7 +23095,7 @@ ffestb_decl_entsp_8_ (ffelexToken t)\n static ffelexHandler\n ffestb_decl_func_ (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   ffelex_set_names (FALSE);\n@@ -23573,7 +23573,7 @@ ffelexHandler\n ffestb_V003 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  char *p;\n+  const char *p;\n   ffelexToken nt;\n   ffelexHandler next;\n \n@@ -23889,7 +23889,7 @@ ffestb_V0036_ (ffelexToken t)\n ffelexHandler\n ffestb_V016 (ffelexToken t)\n {\n-  char *p;\n+  const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -24157,7 +24157,7 @@ ffestb_V0166_ (ffelexToken t)\n ffelexHandler\n ffestb_V027 (ffelexToken t)\n {\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffeTokenLength i;\n \n   switch (ffelex_token_type (ffesta_tokens[0]))\n@@ -24337,7 +24337,7 @@ ffelexHandler\n ffestb_decl_R539 (ffelexToken t)\n {\n   ffeTokenLength i;\n-  unsigned char *p;\n+  unsigned const char *p;\n   ffelexToken nt;\n   ffestrSecond kw;\n "}, {"sha": "6ee761d588cf7f607fbd08d9eedd75567eadea63", "filename": "gcc/f/stb.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstb.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -50,15 +50,15 @@ struct _ffestb_args_\n   {\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of \"ENTRY/FUNCTION/SUBROUTINE\". */\n \tbool is_subr;\t\t/* TRUE if SUBROUTINE or if ENTRY within\n \t\t\t\t   SUBROUTINE. */\n       }\n     dummy;\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of\n \t\t\t\t   \"BACKSPACE/ENDFILE/REWIND/UNLOCK\". */\n       }\n@@ -82,15 +82,15 @@ struct _ffestb_args_\n #if FFESTR_F90\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of \"ALLOCATE/DEALLOCATE\". */\n \tffeexprContext ctx;\t/* Either ALLOCATE or DEALLOCATE. */\n       }\n     heap;\n #endif\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of\n \t\t\t\t   \"EXTERNAL/INTENT/INTRINSIC/OPTIONAL/PUBLIC/\n \t\t\t\t   PRIVATE\". */\n@@ -99,22 +99,22 @@ struct _ffestb_args_\n #if FFESTR_VXT\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of \"ENCODE/DECODE\". */\n       }\n     vxtcode;\n #endif\n #if FFESTR_F90\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of \"ALLOCATABLE/POINTER/TARGET\". */\n       }\n     dimlist;\n #endif\n     struct\n       {\n-\tchar *badname;\n+\tconst char *badname;\n \tffeTokenLength len;\t/* Length of \"DIMENSION/VIRTUAL\". */\n       }\n     R524;"}, {"sha": "1a74301e33c6b2d01939fd6168a6bf59dd9a86bf", "filename": "gcc/f/stc.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstc.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -339,14 +339,14 @@ static void ffestc_shriek_where_ (bool ok);\n #if FFESTR_F90\n static void ffestc_shriek_wherethen_ (bool ok);\n #endif\n-static int ffestc_subr_binsrch_ (char **list, int size, ffestpFile *spec,\n-\t\t\t\t char *whine);\n+static int ffestc_subr_binsrch_ (const char **list, int size, ffestpFile *spec,\n+\t\t\t\t const char *whine);\n static ffestvFormat ffestc_subr_format_ (ffestpFile *spec);\n static bool ffestc_subr_is_branch_ (ffestpFile *spec);\n static bool ffestc_subr_is_format_ (ffestpFile *spec);\n-static bool ffestc_subr_is_present_ (char *name, ffestpFile *spec);\n-static int ffestc_subr_speccmp_ (char *string, ffestpFile *spec,\n-\t\t\t\t char **target, int *length);\n+static bool ffestc_subr_is_present_ (const char *name, ffestpFile *spec);\n+static int ffestc_subr_speccmp_ (const char *string, ffestpFile *spec,\n+\t\t\t\t const char **target, int *length);\n static ffestvUnit ffestc_subr_unit_ (ffestpFile *spec);\n static void ffestc_try_shriek_do_ (void);\n \n@@ -5044,14 +5044,14 @@ ffestc_shriek_wherethen_ (bool ok)\n    using \"etc\" as the pick-one-of-these string.\t */\n \n static int\n-ffestc_subr_binsrch_ (char **list, int size, ffestpFile *spec, char *whine)\n+ffestc_subr_binsrch_ (const char **list, int size, ffestpFile *spec, const char *whine)\n {\n   int lowest_tested;\n   int highest_tested;\n   int halfway;\n   int offset;\n   int c;\n-  char *str;\n+  const char *str;\n   int len;\n \n   if (size == 0)\n@@ -5186,7 +5186,7 @@ ffestc_subr_is_format_ (ffestpFile *spec)\n    ffestc_subr_is_present_(\"SPECIFIER\",&specifier);  */\n \n static bool\n-ffestc_subr_is_present_ (char *name, ffestpFile *spec)\n+ffestc_subr_is_present_ (const char *name, ffestpFile *spec)\n {\n   if (spec->kw_or_val_present)\n     {\n@@ -5219,7 +5219,7 @@ ffestc_subr_is_present_ (char *name, ffestpFile *spec)\n    0 if 2 is returned, the length of the constant string value otherwise.  */\n \n static int\n-ffestc_subr_speccmp_ (char *string, ffestpFile *spec, char **target,\n+ffestc_subr_speccmp_ (const char *string, ffestpFile *spec, const char **target,\n \t\t      int *length)\n {\n   ffebldConstant c;\n@@ -10198,7 +10198,7 @@ ffestc_R904 ()\n {\n   int i;\n   int expect_file;\n-  char *status_strs[]\n+  const char *status_strs[]\n   =\n   {\n     \"New\",\n@@ -10207,28 +10207,28 @@ ffestc_R904 ()\n     \"Scratch\",\n     \"Unknown\"\n   };\n-  char *access_strs[]\n+  const char *access_strs[]\n   =\n   {\n     \"Append\",\n     \"Direct\",\n     \"Keyed\",\n     \"Sequential\"\n   };\n-  char *blank_strs[]\n+  const char *blank_strs[]\n   =\n   {\n     \"Null\",\n     \"Zero\"\n   };\n-  char *carriagecontrol_strs[]\n+  const char *carriagecontrol_strs[]\n   =\n   {\n     \"Fortran\",\n     \"List\",\n     \"None\"\n   };\n-  char *dispose_strs[]\n+  const char *dispose_strs[]\n   =\n   {\n     \"Delete\",\n@@ -10239,41 +10239,41 @@ ffestc_R904 ()\n     \"Submit\",\n     \"Submit/Delete\"\n   };\n-  char *form_strs[]\n+  const char *form_strs[]\n   =\n   {\n     \"Formatted\",\n     \"Unformatted\"\n   };\n-  char *organization_strs[]\n+  const char *organization_strs[]\n   =\n   {\n     \"Indexed\",\n     \"Relative\",\n     \"Sequential\"\n   };\n-  char *position_strs[]\n+  const char *position_strs[]\n   =\n   {\n     \"Append\",\n     \"AsIs\",\n     \"Rewind\"\n   };\n-  char *action_strs[]\n+  const char *action_strs[]\n   =\n   {\n     \"Read\",\n     \"ReadWrite\",\n     \"Write\"\n   };\n-  char *delim_strs[]\n+  const char *delim_strs[]\n   =\n   {\n     \"Apostrophe\",\n     \"None\",\n     \"Quote\"\n   };\n-  char *recordtype_strs[]\n+  const char *recordtype_strs[]\n   =\n   {\n     \"Fixed\",\n@@ -10283,7 +10283,7 @@ ffestc_R904 ()\n     \"Stream_LF\",\n     \"Variable\"\n   };\n-  char *pad_strs[]\n+  const char *pad_strs[]\n   =\n   {\n     \"No\",\n@@ -10453,7 +10453,7 @@ ffestc_R904 ()\n void\n ffestc_R907 ()\n {\n-  char *status_strs[]\n+  const char *status_strs[]\n   =\n   {\n     \"Delete\","}, {"sha": "965c465586fcf66006619e0857616daf070496f3", "filename": "gcc/f/std.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstd.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -526,25 +526,25 @@ static void ffestd_subr_f90_ (void);\n static void ffestd_subr_labels_ (bool unexpected);\n static void ffestd_R1001dump_ (ffests s, ffesttFormatList list);\n static void ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1005_2_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1005_3_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1005_4_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1005_5_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1010_1_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1010_2_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1010_3_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001dump_1010_5_ (ffests s, ffesttFormatList f,\n-\t\t\t\t      char *string);\n+\t\t\t\t      const char *string);\n static void ffestd_R1001error_ (ffesttFormatList f);\n static void ffestd_R1001rtexpr_ (ffests s, ffesttFormatList f, ffebld expr);\n \n@@ -4487,7 +4487,7 @@ ffestd_R1001dump_ (ffests s, ffesttFormatList list)\n    The format is dumped with form [r]X[w].  */\n \n static void\n-ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (!f->u.R1005.R1007_or_R1008.present);\n   assert (!f->u.R1005.R1009.present);\n@@ -4519,7 +4519,7 @@ ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form [r]Xw.  */\n \n static void\n-ffestd_R1001dump_1005_2_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1005_2_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (!f->u.R1005.R1007_or_R1008.present);\n   assert (!f->u.R1005.R1009.present);\n@@ -4549,7 +4549,7 @@ ffestd_R1001dump_1005_2_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form [r]Xw[.m].  */\n \n static void\n-ffestd_R1001dump_1005_3_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1005_3_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (!f->u.R1005.R1009.present);\n   assert (f->u.R1005.R1006.present);\n@@ -4588,7 +4588,7 @@ ffestd_R1001dump_1005_3_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form [r]Xw.d.  */\n \n static void\n-ffestd_R1001dump_1005_4_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1005_4_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (!f->u.R1005.R1009.present);\n   assert (f->u.R1005.R1007_or_R1008.present);\n@@ -4624,7 +4624,7 @@ ffestd_R1001dump_1005_4_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form [r]Xw.d[Ee].\t*/\n \n static void\n-ffestd_R1001dump_1005_5_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1005_5_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (f->u.R1005.R1007_or_R1008.present);\n   assert (f->u.R1005.R1006.present);\n@@ -4668,7 +4668,7 @@ ffestd_R1001dump_1005_5_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form X.  */\n \n static void\n-ffestd_R1001dump_1010_1_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1010_1_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (!f->u.R1010.val.present);\n \n@@ -4683,7 +4683,7 @@ ffestd_R1001dump_1010_1_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form [r]X.\t */\n \n static void\n-ffestd_R1001dump_1010_2_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1010_2_ (ffests s, ffesttFormatList f, const char *string)\n {\n   if (f->u.R1010.val.present)\n     {\n@@ -4704,7 +4704,7 @@ ffestd_R1001dump_1010_2_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form nX.  */\n \n static void\n-ffestd_R1001dump_1010_3_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1010_3_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (f->u.R1010.val.present);\n \n@@ -4724,7 +4724,7 @@ ffestd_R1001dump_1010_3_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form kX.  Note that k is signed.  */\n \n static void\n-ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (f->u.R1010.val.present);\n \n@@ -4744,7 +4744,7 @@ ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f, char *string)\n    The format is dumped with form Xn.  */\n \n static void\n-ffestd_R1001dump_1010_5_ (ffests s, ffesttFormatList f, char *string)\n+ffestd_R1001dump_1010_5_ (ffests s, ffesttFormatList f, const char *string)\n {\n   assert (f->u.R1010.val.present);\n "}, {"sha": "d6741399fcabaf39476734a7307bda6d0732a461", "filename": "gcc/f/ste.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -113,7 +113,7 @@ static void ffeste_begin_iterdo_ (ffestw block, tree *tvar, tree *tincr,\n \t\t\t\t  ffebld start, ffelexToken start_token,\n \t\t\t\t  ffebld end, ffelexToken end_token,\n \t\t\t\t  ffebld incr, ffelexToken incr_token,\n-\t\t\t\t  char *msg);\n+\t\t\t\t  const char *msg);\n static void ffeste_end_iterdo_ (tree tvar, tree tincr, tree itersvar);\n static void ffeste_io_call_ (tree call, bool do_check);\n static tree ffeste_io_dofio_ (ffebld expr);\n@@ -141,7 +141,7 @@ static tree ffeste_io_olist_ (bool have_err, ffebld unit_expr,\n \t\t\t      ffestpFile *blank_spec);\n static void ffeste_subr_beru_ (ffestpBeruStmt *info, ffecomGfrt rt);\n #elif FFECOM_targetCURRENT == FFECOM_targetFFE\n-static void ffeste_subr_file_ (char *kw, ffestpFile *spec);\n+static void ffeste_subr_file_ (const char *kw, ffestpFile *spec);\n #else\n #error\n #endif\n@@ -302,7 +302,7 @@ ffeste_begin_iterdo_ (ffestw block, tree *xtvar, tree *xtincr,\n \t\t      ffebld start, ffelexToken start_token,\n \t\t      ffebld end, ffelexToken end_token,\n \t\t      ffebld incr, ffelexToken incr_token,\n-\t\t      char *msg)\n+\t\t      const char *msg)\n {\n   tree tvar;\n   tree expr;\n@@ -1942,7 +1942,7 @@ ffeste_io_olist_ (bool have_err,\n \n #if FFECOM_targetCURRENT == FFECOM_targetFFE\n static void\n-ffeste_subr_file_ (char *kw, ffestpFile *spec)\n+ffeste_subr_file_ (const char *kw, ffestpFile *spec)\n {\n   if (!spec->kw_or_val_present)\n     return;"}, {"sha": "143f55050f1a854a5ba2a5bae59349f91a103268", "filename": "gcc/f/sts.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsts.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -104,7 +104,7 @@ ffests_new (ffests s, mallocPool pool, ffestsLength size)\n    Like printf, but into a string.  */\n \n void\n-ffests_printf_1D (ffests s, char *ctl, long arg1)\n+ffests_printf_1D (ffests s, const char *ctl, long arg1)\n {\n   char quickbuf[40];\n   char *buff;\n@@ -133,7 +133,7 @@ ffests_printf_1D (ffests s, char *ctl, long arg1)\n    Like printf, but into a string.  */\n \n void\n-ffests_printf_1U (ffests s, char *ctl, unsigned long arg1)\n+ffests_printf_1U (ffests s, const char *ctl, unsigned long arg1)\n {\n   char quickbuf[40];\n   char *buff;\n@@ -162,7 +162,7 @@ ffests_printf_1U (ffests s, char *ctl, unsigned long arg1)\n    Like printf, but into a string.  */\n \n void\n-ffests_printf_1s (ffests s, char *ctl, char *arg1)\n+ffests_printf_1s (ffests s, const char *ctl, const char *arg1)\n {\n   char quickbuf[40];\n   char *buff;\n@@ -190,7 +190,7 @@ ffests_printf_1s (ffests s, char *ctl, char *arg1)\n    Like printf, but into a string.  */\n \n void\n-ffests_printf_2Us (ffests s, char *ctl, unsigned long arg1, char *arg2)\n+ffests_printf_2Us (ffests s, const char *ctl, unsigned long arg1, const char *arg2)\n {\n   char quickbuf[60];\n   char *buff;\n@@ -228,7 +228,7 @@ ffests_putc (ffests s, char c)\n    ffests_puts(s,\"append me\");\t*/\n \n void\n-ffests_puts (ffests s, char *string)\n+ffests_puts (ffests s, const char *string)\n {\n   ffests_puttext (s, string, strlen (string));\n }\n@@ -242,7 +242,7 @@ ffests_puts (ffests s, char *string)\n    and may be 0.  */\n \n void\n-ffests_puttext (ffests s, char *text, ffestsLength length)\n+ffests_puttext (ffests s, const char *text, ffestsLength length)\n {\n   ffestsLength newlen;\n   ffestsLength newmax;"}, {"sha": "1432d41fd88643b15466b612e7fce12f7d6d6d5a", "filename": "gcc/f/sts.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fsts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsts.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -60,14 +60,14 @@ struct _ffests_\n \n void ffests_kill (ffests s);\n void ffests_new (ffests s, mallocPool pool, ffestsLength size);\n-void ffests_printf_1D (ffests s, char *ctl, long arg1);\n-void ffests_printf_1U (ffests s, char *ctl, unsigned long arg1);\n-void ffests_printf_1s (ffests s, char *ctl, char *arg1);\n-void ffests_printf_2Us (ffests s, char *ctl, unsigned long arg1,\n-\t\t\tchar *arg2);\n+void ffests_printf_1D (ffests s, const char *ctl, long arg1);\n+void ffests_printf_1U (ffests s, const char *ctl, unsigned long arg1);\n+void ffests_printf_1s (ffests s, const char *ctl, const char *arg1);\n+void ffests_printf_2Us (ffests s, const char *ctl, unsigned long arg1,\n+\t\t\tconst char *arg2);\n void ffests_putc (ffests s, char c);\n-void ffests_puts (ffests s, char *string);\n-void ffests_puttext (ffests s, char *text, ffestsLength length);\n+void ffests_puts (ffests s, const char *string);\n+void ffests_puttext (ffests s, const char *text, ffestsLength length);\n \n /* Define macros. */\n "}, {"sha": "4b008e257cebf8a8892436086c82b36a19406dfe", "filename": "gcc/f/stt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstt.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -598,7 +598,7 @@ ffestt_exprlist_create ()\n    at a time.  */\n \n void\n-ffestt_exprlist_drive (ffesttExprList list, void (*fn) ())\n+ffestt_exprlist_drive (ffesttExprList list, void (*fn) (ffebld, ffelexToken))\n {\n   ffesttExprList next;\n \n@@ -837,7 +837,7 @@ ffestt_implist_create ()\n    The token pairs in the list are passed to the function one pair at a time.  */\n \n void\n-ffestt_implist_drive (ffesttImpList list, void (*fn) ())\n+ffestt_implist_drive (ffesttImpList list, void (*fn) (ffelexToken, ffelexToken))\n {\n   ffesttImpList next;\n \n@@ -951,7 +951,7 @@ ffestt_tokenlist_create ()\n    The tokens in the list are passed to the given function.  */\n \n void\n-ffestt_tokenlist_drive (ffesttTokenList tl, void (*fn) ())\n+ffestt_tokenlist_drive (ffesttTokenList tl, void (*fn) (ffelexToken))\n {\n   ffesttTokenItem ti;\n "}, {"sha": "341daa7a41d498d1bef9e2912031894519376532", "filename": "gcc/f/stt.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstt.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -181,7 +181,7 @@ void ffestt_dimlist_kill (ffesttDimList list);\n ffestpDimtype ffestt_dimlist_type (ffesttDimList dims, bool is_ugly_assumed);\n void ffestt_exprlist_append (ffesttExprList list, ffebld expr, ffelexToken t);\n ffesttExprList ffestt_exprlist_create (void);\n-void ffestt_exprlist_drive (ffesttExprList list, void (*fn) ());\n+void ffestt_exprlist_drive (ffesttExprList list, void (*fn) (ffebld, ffelexToken));\n #if FFECOM_targetCURRENT == FFECOM_targetFFE\n void ffestt_exprlist_dump (ffesttExprList list);\n #endif\n@@ -196,14 +196,14 @@ void ffestt_formatlist_kill (ffesttFormatList list);\n void ffestt_implist_append (ffesttImpList list, ffelexToken first,\n \t\t\t    ffelexToken last);\n ffesttImpList ffestt_implist_create (void);\n-void ffestt_implist_drive (ffesttImpList list, void (*fn) ());\n+void ffestt_implist_drive (ffesttImpList list, void (*fn) (ffelexToken, ffelexToken));\n #if FFECOM_targetCURRENT == FFECOM_targetFFE\n void ffestt_implist_dump (ffesttImpList list);\n #endif\n void ffestt_implist_kill (ffesttImpList list);\n void ffestt_tokenlist_append (ffesttTokenList list, ffelexToken t);\n ffesttTokenList ffestt_tokenlist_create (void);\n-void ffestt_tokenlist_drive (ffesttTokenList list, void (*fn) ());\n+void ffestt_tokenlist_drive (ffesttTokenList list, void (*fn) (ffelexToken));\n #if FFECOM_targetCURRENT == FFECOM_targetFFE\n void ffestt_tokenlist_dump (ffesttTokenList list);\n #endif"}, {"sha": "cc1d95c7681537d52d518c1dc816d46fa56a2906", "filename": "gcc/f/stu.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstu.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -60,7 +60,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n static void ffestu_list_exec_transition_ (ffebld list);\n static bool ffestu_symter_end_transition_ (ffebld expr);\n static bool ffestu_symter_exec_transition_ (ffebld expr);\n-static bool ffestu_dummies_transition_ (ffesymbol (*symfunc) (),\n+static bool ffestu_dummies_transition_ (ffesymbol (*symfunc) (ffesymbol),\n \t\t\t\t\tffebld list);\n \n /* Internal macros. */\n@@ -122,7 +122,7 @@ ffestu_sym_end_transition (ffesymbol s)\n \t  ffeinfoBasictype bt;\n \t  ffeinfoKindtype kt;\n \t  bool array;\n-\t  char *name = NULL;\n+\t  const char *name = NULL;\n \n \t  ffestu_dummies_transition_ (ffecom_sym_end_transition,\n \t\t\t\t      ffesymbol_dummyargs (s));\n@@ -1114,7 +1114,7 @@ ffestu_symter_exec_transition_ (ffebld expr)\n    Make sure we don't get called recursively ourselves!\t */\n \n static bool\n-ffestu_dummies_transition_ (ffesymbol (*symfunc) (), ffebld list)\n+ffestu_dummies_transition_ (ffesymbol (*symfunc) (ffesymbol), ffebld list)\n {\n   static bool in_progress = FALSE;\n   ffebld item;"}, {"sha": "058b1eb952afd31ec37b7d5dd7d449e2e33204c2", "filename": "gcc/f/stw.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstw.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -74,7 +74,7 @@ ffestw ffestw_stack_top_ = NULL;\n    ffestw_display_state();  */\n \n void\n-ffestw_display_state ()\n+ffestw_display_state (void)\n {\n   assert (ffestw_stack_top_ != NULL);\n \n@@ -320,7 +320,7 @@ ffestw_kill (ffestw b)\n    b = ffestw_new();  */\n \n ffestw\n-ffestw_new ()\n+ffestw_new (void)\n {\n   ffestw b;\n \n@@ -335,7 +335,7 @@ ffestw_new ()\n    ffestw_pop();  */\n \n ffestw\n-ffestw_pop ()\n+ffestw_pop (void)\n {\n   ffestw b;\n   ffestw oldb = ffestw_stack_top_;"}, {"sha": "7a81d9b28a784f9eca918cedd2b147cff407753a", "filename": "gcc/f/stw.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstw.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fstw.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstw.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -118,11 +118,11 @@ extern ffestw ffestw_stack_top_;\n \n /* Declare functions with prototypes. */\n \n-void ffestw_display_state ();\n+void ffestw_display_state (void);\n void ffestw_kill (ffestw block);\n void ffestw_init_0 (void);\n-ffestw ffestw_new ();\n-ffestw ffestw_pop ();\n+ffestw ffestw_new (void);\n+ffestw ffestw_pop (void);\n ffestw ffestw_push (ffestw block);\n ffestw ffestw_update (ffestw block);\n ffestw ffestw_use (ffestw block);"}, {"sha": "83cb30cbbe5a75801b81cb59661cad8bcdf0ac3c", "filename": "gcc/f/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.c?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -1 +1 @@\n-char *ffe_version_string = \"0.5.24-19990313\";\n+const char *ffe_version_string = \"0.5.24-19990313\";"}, {"sha": "62f941d25d322311b9e5095843546bc582b8f8d2", "filename": "gcc/f/version.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d87103d4df4b7f0188faaa3201385e36d026a7/gcc%2Ff%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.h?ref=04d87103d4df4b7f0188faaa3201385e36d026a7", "patch": "@@ -1,6 +1,6 @@\n #ifndef _H_f_version\n #define _H_f_version\n \n-extern char *ffe_version_string;\n+extern const char *ffe_version_string;\n \n #endif"}]}