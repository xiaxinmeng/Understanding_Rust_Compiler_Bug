{"sha": "b7fa8414c43a7b5f2971753473f550af94481ff3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdmYTg0MTRjNDNhN2I1ZjI5NzE3NTM0NzNmNTUwYWY5NDQ4MWZmMw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-07T20:54:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-07T20:54:42Z"}, "message": "rs6000: Do swdiv at expand time\n\nWe transform floating point divide instructions to a faster series of\nsimple instructions, \"swdiv\".  Currently we do not do that until the\nfirst splitter pass, which is much too late for most optimisations\nthat can happen on those new instructions, e.g. the constant loads\nare not CSEd inside an unrolled loop.  This patch changes things so\nthose divide instructions are expanded during expand already.\n\n\n\t* config/rs6000/rs6000.md (div<mode>3): Expand using rs6000_emit_swdiv\n\tif appropriate.\n\t* config/rs6000/vector.md (div<mode>3): Ditto.\n\nFrom-SVN: r241935", "tree": {"sha": "48bef69e7dcc992247d74c22ce95378ddfe0acd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48bef69e7dcc992247d74c22ce95378ddfe0acd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7fa8414c43a7b5f2971753473f550af94481ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fa8414c43a7b5f2971753473f550af94481ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7fa8414c43a7b5f2971753473f550af94481ff3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fa8414c43a7b5f2971753473f550af94481ff3/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fda2d61208385823f6b75f637eed60a9e77256c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda2d61208385823f6b75f637eed60a9e77256c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda2d61208385823f6b75f637eed60a9e77256c1"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "8e6646b2715feab4a950a08ab5a7f6e49d8bc344", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7fa8414c43a7b5f2971753473f550af94481ff3", "patch": "@@ -1,3 +1,9 @@\n+2016-11-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (div<mode>3): Expand using rs6000_emit_swdiv\n+\tif appropriate.\n+\t* config/rs6000/vector.md (div<mode>3): Ditto.\n+\n 2016-11-06  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* configure.ac (.hidden): Change to conftest_s string. Provide string"}, {"sha": "d40954989810093b58ae0fbf7eb66a3b1cb50612", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b7fa8414c43a7b5f2971753473f550af94481ff3", "patch": "@@ -4460,7 +4460,15 @@\n \t(div:SFDF (match_operand:SFDF 1 \"gpc_reg_operand\" \"\")\n \t\t  (match_operand:SFDF 2 \"gpc_reg_operand\" \"\")))]\n   \"TARGET_<MODE>_INSN && !TARGET_SIMPLE_FPU\"\n-  \"\")\n+{\n+  if (RS6000_RECIP_AUTO_RE_P (<MODE>mode)\n+      && can_create_pseudo_p () && flag_finite_math_only\n+      && !flag_trapping_math && flag_reciprocal_math)\n+    {\n+      rs6000_emit_swdiv (operands[0], operands[1], operands[2], true);\n+      DONE;\n+    }\n+})\n \n (define_insn \"*div<mode>3_fpr\"\n   [(set (match_operand:SFDF 0 \"gpc_reg_operand\" \"=<Ff>,<Fv2>\")"}, {"sha": "05f3bdbee56a236549525a38567390cc57c29bea", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7fa8414c43a7b5f2971753473f550af94481ff3/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=b7fa8414c43a7b5f2971753473f550af94481ff3", "patch": "@@ -248,7 +248,15 @@\n \t(div:VEC_F (match_operand:VEC_F 1 \"vfloat_operand\" \"\")\n \t\t   (match_operand:VEC_F 2 \"vfloat_operand\" \"\")))]\n   \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n-  \"\")\n+{\n+  if (RS6000_RECIP_AUTO_RE_P (<MODE>mode)\n+      && can_create_pseudo_p () && flag_finite_math_only\n+      && !flag_trapping_math && flag_reciprocal_math)\n+    {\n+      rs6000_emit_swdiv (operands[0], operands[1], operands[2], true);\n+      DONE;\n+    }\n+})\n \n (define_expand \"neg<mode>2\"\n   [(set (match_operand:VEC_F 0 \"vfloat_operand\" \"\")"}]}