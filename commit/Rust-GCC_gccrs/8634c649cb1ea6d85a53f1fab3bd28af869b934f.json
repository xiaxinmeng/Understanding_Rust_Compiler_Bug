{"sha": "8634c649cb1ea6d85a53f1fab3bd28af869b934f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzNGM2NDljYjFlYTZkODVhNTNmMWZhYjNiZDI4YWY4NjliOTM0Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-04-24T22:06:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-04-24T22:06:37Z"}, "message": "re PR middle-end/20991 (ICE in cgraph_mark_reachable_node)\n\n\tPR middle-end/20991\n\t* cgraph.h (cgraph_local_info): Add vtable_method field.\n\t* varasm.c (mark_decl_referenced): If cgraph_global_info_ready\n\tand node is vtable_method, finalized and not reachable, don't do\n\tanything.\n\n\t* class.c: Include cgraph.h.\n\t(cp_fold_obj_type_ref): Set node->local.vtable_method.\n\t* Make-lang.in (cgraph.o): Depend on $(CGRAPH_H).\n\n\t* g++.dg/opt/pr20991.C: New test.\n\nFrom-SVN: r98674", "tree": {"sha": "ceb41f874d3b1e3d612a3d2785020f503973c21a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceb41f874d3b1e3d612a3d2785020f503973c21a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8634c649cb1ea6d85a53f1fab3bd28af869b934f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8634c649cb1ea6d85a53f1fab3bd28af869b934f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8634c649cb1ea6d85a53f1fab3bd28af869b934f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8634c649cb1ea6d85a53f1fab3bd28af869b934f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49fc196e8edd206d1cd275cd015238e429056db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49fc196e8edd206d1cd275cd015238e429056db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49fc196e8edd206d1cd275cd015238e429056db7"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "b392d668df39dd69f5da5eca492eda09c75f1d47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -1,3 +1,11 @@\n+2005-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/20991\n+\t* cgraph.h (cgraph_local_info): Add vtable_method field.\n+\t* varasm.c (mark_decl_referenced): If cgraph_global_info_ready\n+\tand node is vtable_method, finalized and not reachable, don't do\n+\tanything.\n+\n 2005-04-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-ssa-copy.c (copy_prop_visit_cond_stmt): Use"}, {"sha": "fc0fa7858e563d1b0828b4475ebb31d1371cdafd", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -51,6 +51,10 @@ struct cgraph_local_info GTY(())\n   /* True if statics_read_for_function and\n      statics_written_for_function contain valid data.  */\n   bool for_functions_valid;\n+\n+  /* True if the function is going to be emitted in some other translation\n+     unit, referenced from vtable.  */\n+  bool vtable_method;\n };\n \n /* Information about the function that needs to be computed globally"}, {"sha": "07f7daa5f5b2a040448b7e4fd0b0692ab45eefa1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -1,3 +1,10 @@\n+2005-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/20991\n+\t* class.c: Include cgraph.h.\n+\t(cp_fold_obj_type_ref): Set node->local.vtable_method.\n+\t* Make-lang.in (cgraph.o): Depend on $(CGRAPH_H).\n+\n 2005-04-12  Markus F.X.J. Oberhumer  <markus@oberhumer.com>\n \n \t* mangle.c (write_builtin_type): Handle integer types which are"}, {"sha": "eeb41290892ba2847eaee5e3bb71ffa469f975f7", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -243,7 +243,8 @@ cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h output.h $(TM_\n    diagnostic.h gt-cp-typeck2.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) $(EXPR_H) toplev.h \\\n    diagnostic.h convert.h c-common.h\n-cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) $(TARGET_H) convert.h\n+cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) $(TARGET_H) \\\n+   convert.h $(CGRAPH_H)\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) $(EXPR_H) \\\n      diagnostic.h intl.h gt-cp-call.h convert.h target.h\n cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) toplev.h $(EXPR_H)"}, {"sha": "5052aaaf6b03de85ec9b00e756bc522232a04fe2", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"convert.h\"\n+#include \"cgraph.h\"\n \n /* The number of nested classes being processed.  If we are not in the\n    scope of any class, this is zero.  */\n@@ -7719,6 +7720,8 @@ cp_fold_obj_type_ref (tree ref, tree known_type)\n \t\t\t\t  DECL_VINDEX (fndecl)));\n #endif\n \n+  cgraph_node (fndecl)->local.vtable_method = true;\n+\n   return build_address (fndecl);\n }\n "}, {"sha": "f58b43c1ac77320200581c0a5041decfe5b44e72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -1,5 +1,8 @@\n 2005-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/20991\n+\t* g++.dg/opt/pr20991.C: New test.\n+\n \t* gcc.dg/compat/struct-layout-1_generate.c: In arrays avoid types\n \twhere sizeof (type) < __alignof__ (type).\n \t* gcc.dg/compat/struct-layout-1.h: Likewise."}, {"sha": "32b3d05c351b711d43daf18cc505bd6de3736c1f", "filename": "gcc/testsuite/g++.dg/opt/pr20991.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20991.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20991.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20991.C?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -0,0 +1,34 @@\n+// PR middle-end/20991\n+// { dg-options \"-O2\" }\n+// { dg-do compile }\n+\n+struct S\n+{\n+  virtual inline int foo () const;\n+  virtual inline bool bar () const;\n+  virtual int baz (int) const;\n+};\n+\n+inline int S::foo () const\n+{\n+  return 1;\n+}\n+\n+inline bool S::bar () const\n+{\n+  return foo () == 0;\n+}\n+\n+void A ()\n+{\n+  S s;\n+  if (s.bar ())\n+    s.foo ();\n+}\n+\n+void B ()\n+{\n+  S s;\n+  if (s.bar ())\n+    s.foo ();\n+}"}, {"sha": "bab9437ec0a8d65af8408e6aa1829ee5305a0a4a", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8634c649cb1ea6d85a53f1fab3bd28af869b934f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8634c649cb1ea6d85a53f1fab3bd28af869b934f", "patch": "@@ -1955,9 +1955,15 @@ mark_decl_referenced (tree decl)\n {\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     {\n-      /* Extern inline functions don't become needed when referenced.  */\n-      if (!DECL_EXTERNAL (decl))\n-        cgraph_mark_needed_node (cgraph_node (decl));\n+      /* Extern inline functions don't become needed when referenced.\n+\t If we know a method will be emitted in other TU and no new\n+\t functions can be marked reachable, just use the external\n+\t definition.  */\n+      struct cgraph_node *node = cgraph_node (decl);\n+      if (!DECL_EXTERNAL (decl)\n+\t  && (!node->local.vtable_method || !cgraph_global_info_ready\n+\t      || !node->local.finalized))\n+\tcgraph_mark_needed_node (node);\n     }\n   else if (TREE_CODE (decl) == VAR_DECL)\n     {"}]}