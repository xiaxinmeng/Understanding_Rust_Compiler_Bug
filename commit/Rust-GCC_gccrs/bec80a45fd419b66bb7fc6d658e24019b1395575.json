{"sha": "bec80a45fd419b66bb7fc6d658e24019b1395575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjODBhNDVmZDQxOWI2NmJiN2ZjNmQ2NThlMjQwMTliMTM5NTU3NQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-11-02T01:03:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-11-02T01:03:03Z"}, "message": "re PR c++/8391 (infinite loop in cp/decl2.c(finish_file))\n\n\tPR c++/8391\n\t* toplev.c (rest_of_compilation): Do not refuse to output code for\n\tan inline function in a local class.\n\n\tPR c++/8391\n\t* g++.dg/opt/local1.C: New test.\n\nFrom-SVN: r58734", "tree": {"sha": "78f9248491b1a67f82cf93b6069e4237f4bcdc6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78f9248491b1a67f82cf93b6069e4237f4bcdc6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec80a45fd419b66bb7fc6d658e24019b1395575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec80a45fd419b66bb7fc6d658e24019b1395575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec80a45fd419b66bb7fc6d658e24019b1395575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec80a45fd419b66bb7fc6d658e24019b1395575/comments", "author": null, "committer": null, "parents": [{"sha": "a70b59e1dbb2e78812f73edbd960f3fc1f9620d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70b59e1dbb2e78812f73edbd960f3fc1f9620d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70b59e1dbb2e78812f73edbd960f3fc1f9620d6"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "1d4a1ff71dbc81ee0ac16c3dddf8f57e6f0d0aaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bec80a45fd419b66bb7fc6d658e24019b1395575", "patch": "@@ -1,3 +1,9 @@\n+2002-11-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8391\n+\t* toplev.c (rest_of_compilation): Do not refuse to output code for\n+\tan inline function in a local class.\n+\n 2002-11-01  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/sparc/freebsd.h (CPP_CPU64_DEFAULT_SPEC): Define __arch64__."}, {"sha": "90877e84ac1d5350e9839318b052008dec5a1330", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bec80a45fd419b66bb7fc6d658e24019b1395575", "patch": "@@ -1,3 +1,8 @@\n+2002-11-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8391\n+\t* g++.dg/opt/local1.C: New test.\n+\n 2002-10-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/8160"}, {"sha": "9cecaee6f2ad4b52de1c90bcfac99fb957074b30", "filename": "gcc/testsuite/g++.dg/opt/local1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flocal1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flocal1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flocal1.C?ref=bec80a45fd419b66bb7fc6d658e24019b1395575", "patch": "@@ -0,0 +1,20 @@\n+// { dg-options \"-O\" }\n+\n+struct Outer {\n+  struct Inner { virtual bool f() = 0; };\n+  void g(Inner &) const;\n+};\n+ \n+inline void h(const Outer &o)\n+{\n+  struct Local : public Outer::Inner {\n+    virtual bool f() {};\n+  };\n+  Local l;\n+  o.g(l);\n+}\n+ \n+void f(Outer &req) {\n+  h (req);\n+}\n+ "}, {"sha": "9e57576ebabeaa3c71603bdeed13063ac6db65ba", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec80a45fd419b66bb7fc6d658e24019b1395575/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bec80a45fd419b66bb7fc6d658e24019b1395575", "patch": "@@ -2429,6 +2429,9 @@ rest_of_compilation (decl)\n \t    DECL_INITIAL (decl) = 0;\n \t    goto exit_rest_of_compilation;\n \t  }\n+\telse if (TYPE_P (parent))\n+\t  /* A function in a local class should be treated normally.  */\n+\t  break;\n \n       /* If requested, consider whether to make this function inline.  */\n       if ((DECL_INLINE (decl) && !flag_no_inline)"}]}