{"sha": "bd622b6454b89d73f3330733ff47da406ff7c042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ2MjJiNjQ1NGI4OWQ3M2YzMzMwNzMzZmY0N2RhNDA2ZmY3YzA0Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T12:40:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T12:40:25Z"}, "message": "[multiple changes]\n\n2010-10-08  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch3.adb: Minor reformatting.\n\n2010-10-08  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_DT): Do not generate dispatch tables for CIL/Java\n\ttypes.\n\n2010-10-08  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch8.adb (P_Use_Type_Clause): Recognize ALL keyword in Ada 2012\n\tmode.\n\t* sinfo.adb (Use_Type_Clause): Add All_Present flag.\n\t* sinfo.ads (Use_Type_Clause): Add All_Present flag.\n\t* s-rident.ads: Add entry for No_Allocators_After_Elaboration,\n\tNo_Anonymous_Allocators.\n\n2010-10-08  Vincent Celier  <celier@adacore.com>\n\n\t* bindgen.adb (Gen_Restrictions_Ada): No new line after last\n\trestriction, so that the last comma is always replaced with a left\n\tparenthesis.\n\n2010-10-08  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Add specific check on the type of the\n\tfirst formal of delegates.\n\nFrom-SVN: r165169", "tree": {"sha": "e6822a354998f958f9429dbfd7485c85936e5cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6822a354998f958f9429dbfd7485c85936e5cb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd622b6454b89d73f3330733ff47da406ff7c042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd622b6454b89d73f3330733ff47da406ff7c042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd622b6454b89d73f3330733ff47da406ff7c042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd622b6454b89d73f3330733ff47da406ff7c042/comments", "author": null, "committer": null, "parents": [{"sha": "3786bbd19bb747859aac3bea0c1048b674e71727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3786bbd19bb747859aac3bea0c1048b674e71727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3786bbd19bb747859aac3bea0c1048b674e71727"}], "stats": {"total": 122, "additions": 98, "deletions": 24}, "files": [{"sha": "87ee729f41c19e6c449f186b37422bee55d1c1ad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -1,3 +1,32 @@\n+2010-10-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch3.adb: Minor reformatting.\n+\n+2010-10-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT): Do not generate dispatch tables for CIL/Java\n+\ttypes.\n+\n+2010-10-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch8.adb (P_Use_Type_Clause): Recognize ALL keyword in Ada 2012\n+\tmode.\n+\t* sinfo.adb (Use_Type_Clause): Add All_Present flag.\n+\t* sinfo.ads (Use_Type_Clause): Add All_Present flag.\n+\t* s-rident.ads: Add entry for No_Allocators_After_Elaboration,\n+\tNo_Anonymous_Allocators.\n+\n+2010-10-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* bindgen.adb (Gen_Restrictions_Ada): No new line after last\n+\trestriction, so that the last comma is always replaced with a left\n+\tparenthesis.\n+\n+2010-10-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Add specific check on the type of the\n+\tfirst formal of delegates.\n+\n 2010-10-08  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb: Minor reformatting."}, {"sha": "ff2498cc768f14d9b79aec0c2ae6f4c55b22ba8f", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -479,9 +479,9 @@ package body Bindgen is\n                Set_String (\", \"\"\");\n                Get_Name_String (U.Uname);\n \n-               --  In the case of JGNAT we need to emit an Import name\n-               --  that includes the class name (using '$' separators\n-               --  in the case of a child unit name).\n+               --  In the case of JGNAT we need to emit an Import name that\n+               --  includes the class name (using '$' separators in the case\n+               --  of a child unit name).\n \n                if VM_Target /= No_VM then\n                   for J in 1 .. Name_Len - 2 loop\n@@ -2818,7 +2818,7 @@ package body Bindgen is\n          Set_String (\", \");\n          Count := Count + 1;\n \n-         if Count = 8 then\n+         if J /= Cumulative_Restrictions.Set'Last and then Count = 8 then\n             Write_Statement_Buffer;\n             Set_String (\"           \");\n             Count := 0;\n@@ -2845,7 +2845,7 @@ package body Bindgen is\n          Set_String (\", \");\n          Count := Count + 1;\n \n-         if Count = 8 then\n+         if J /= Cumulative_Restrictions.Set'Last and then Count = 8 then\n             Write_Statement_Buffer;\n             Set_String (\"           \");\n             Count := 0;"}, {"sha": "d783cda519ee294523f256295e4773ab3a4b68ff", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -4316,6 +4316,8 @@ package body Exp_Disp is\n       if Has_Dispatch_Table (Typ)\n         or else No (Access_Disp_Table (Typ))\n         or else Is_CPP_Class (Typ)\n+        or else Convention (Typ) = Convention_CIL\n+        or else Convention (Typ) = Convention_Java\n       then\n          return Result;\n "}, {"sha": "ec1f33a67f1ed066977df79bcc10f931a1ddd8b0", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -3677,10 +3677,11 @@ package body Ch3 is\n                   --     when (A in 1 .. 10 | 12) =>\n                   --     when (A in 1 .. 10) | 12 =>\n \n-                  --  To solve this, in Ada 2012 mode, we disallow\n-                  --  the use of membership operations in expressions in\n-                  --  choices. Technically in the grammar, the expression\n-                  --  must match the grammar for restricted expression.\n+                  --  To solve this, in Ada 2012 mode, we disallow the use of\n+                  --  membership operations in expressions in choices.\n+\n+                  --  Technically in the grammar, the expression must match the\n+                  --  grammar for restricted expression.\n \n                   if Ada_Version >= Ada_12 then\n                      Check_Restricted_Expression (Expr_Node);"}, {"sha": "99c2624dcab52f94a9fd453003b0f2ca691b48ee", "filename": "gcc/ada/par-ch8.adb", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fpar-ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fpar-ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch8.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,9 +51,8 @@ package body Ch8 is\n    begin\n       Scan; -- past USE\n \n-      if Token = Tok_Type then\n+      if Token = Tok_Type or else Token = Tok_All then\n          return P_Use_Type_Clause;\n-\n       else\n          return P_Use_Package_Clause;\n       end if;\n@@ -95,18 +94,35 @@ package body Ch8 is\n    -- 8.4  Use Type Clause --\n    --------------------------\n \n-   --  USE_TYPE_CLAUSE ::= use type SUBTYPE_MARK {, SUBTYPE_MARK};\n+   --  USE_TYPE_CLAUSE ::= use [ALL] type SUBTYPE_MARK {, SUBTYPE_MARK};\n \n    --  The caller has checked that the initial token is USE, scanned it out\n-   --  and that the current token is TYPE.\n+   --  and that the current token is either ALL or TYPE.\n+\n+   --  Note: Use of ALL is an Ada 2012 feature\n \n    --  Error recovery: cannot raise Error_Resync\n \n    function P_Use_Type_Clause return Node_Id is\n-      Use_Node : Node_Id;\n+      Use_Node    : Node_Id;\n+      All_Present : Boolean;\n \n    begin\n+      if Token = Tok_All then\n+         if Ada_Version < Ada_12 then\n+            Error_Msg_SC (\"|`USE ALL TYPE` is an Ada 2012 feature\");\n+            Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n+         end if;\n+\n+         All_Present := True;\n+         Scan; -- past ALL\n+\n+      else\n+         All_Present := False;\n+      end if;\n+\n       Use_Node := New_Node (N_Use_Type_Clause, Prev_Token_Ptr);\n+      Set_All_Present (Use_Node, All_Present);\n       Set_Subtype_Marks (Use_Node, New_List);\n \n       if Ada_Version = Ada_83 then"}, {"sha": "972a3e83845031f8e53c3f284fb8b00f23359a61", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,6 +62,7 @@ package System.Rident is\n       No_Abort_Statements,                     -- (RM D.7(5), H.4(3))\n       No_Access_Subprograms,                   -- (RM H.4(17))\n       No_Allocators,                           -- (RM H.4(7))\n+      No_Anonymous_Allocators,                 -- Ada 2012\n       No_Asynchronous_Control,                 -- (RM D.7(10))\n       No_Calendar,                             -- GNAT\n       No_Delay,                                -- (RM H.4(21))\n@@ -70,6 +71,7 @@ package System.Rident is\n       No_Dispatching_Calls,                    -- GNAT\n       No_Dynamic_Attachment,                   -- GNAT\n       No_Dynamic_Priorities,                   -- (RM D.9(9))\n+      No_Allocators_After_Elaboration,         -- Ada 2012\n       No_Enumeration_Maps,                     -- GNAT\n       No_Entry_Calls_In_Elaboration_Code,      -- GNAT\n       No_Entry_Queue,                          -- GNAT (Ravenscar)"}, {"sha": "3a9a48289c2a8d448f8fd03f70e207411156f22c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -9009,16 +9009,35 @@ package body Sem_Prag is\n                        (\"first formal of % function must be named `this`\",\n                         Parent (First_Formal (Def_Id)));\n \n+                  elsif not Is_Access_Type (Etype (First_Formal (Def_Id))) then\n+                     Error_Msg_Name_1 := Pname;\n+                     Error_Msg_N\n+                       (\"first formal of % function must be an access type\",\n+                        Parameter_Type (Parent (First_Formal (Def_Id))));\n+\n+                  --  For delegates the type of the first formal must be a\n+                  --  named access-to-subprogram type (see previous example)\n+\n+                  elsif Ekind (Etype (Def_Id)) = E_Access_Subprogram_Type\n+                    and then Ekind (Etype (First_Formal (Def_Id)))\n+                               /= E_Access_Subprogram_Type\n+                  then\n+                     Error_Msg_Name_1 := Pname;\n+                     Error_Msg_N\n+                       (\"first formal of % function must be a named access\" &\n+                        \" to subprogram type\",\n+                        Parameter_Type (Parent (First_Formal (Def_Id))));\n+\n                   --  Warning: We should reject anonymous access types because\n                   --  the constructor must not be handled as a primitive of the\n                   --  tagged type. We temporarily allow it because this profile\n                   --  is currently generated by cil2ada???\n \n-                  elsif not Is_Access_Type (Etype (First_Formal (Def_Id)))\n-                    or else not Ekind_In (Etype (First_Formal (Def_Id)),\n-                                  E_Access_Type,\n-                                  E_General_Access_Type,\n-                                  E_Anonymous_Access_Type) --  ???\n+                  elsif Ekind (Etype (Def_Id)) /= E_Access_Subprogram_Type\n+                    and then not Ekind_In (Etype (First_Formal (Def_Id)),\n+                                   E_Access_Type,\n+                                   E_General_Access_Type,\n+                                   E_Anonymous_Access_Type)\n                   then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_N"}, {"sha": "cac6e7341b528a9ff256f240b169b636f89696db", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -223,7 +223,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Access_Definition\n-        or else NT (N).Nkind = N_Access_To_Object_Definition);\n+        or else NT (N).Nkind = N_Access_To_Object_Definition\n+        or else NT (N).Nkind = N_Use_Type_Clause);\n       return Flag15 (N);\n    end All_Present;\n \n@@ -3137,7 +3138,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Access_Definition\n-        or else NT (N).Nkind = N_Access_To_Object_Definition);\n+        or else NT (N).Nkind = N_Access_To_Object_Definition\n+        or else NT (N).Nkind = N_Use_Type_Clause);\n       Set_Flag15 (N, Val);\n    end Set_All_Present;\n "}, {"sha": "df4abd268e98026debf0104605ef091ba299f94a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd622b6454b89d73f3330733ff47da406ff7c042/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=bd622b6454b89d73f3330733ff47da406ff7c042", "patch": "@@ -4730,15 +4730,18 @@ package Sinfo is\n       -- 8.4  Use Type Clause --\n       --------------------------\n \n-      --  USE_TYPE_CLAUSE ::= use type SUBTYPE_MARK {, SUBTYPE_MARK};\n+      --  USE_TYPE_CLAUSE ::= use [ALL] type SUBTYPE_MARK {, SUBTYPE_MARK};\n \n       --  Note: use type clause is not permitted in Ada 83 mode\n \n+      --  Note: the ALL keyword can appear only in Ada 2012 mode\n+\n       --  N_Use_Type_Clause\n       --  Sloc points to USE\n       --  Subtype_Marks (List2)\n       --  Next_Use_Clause (Node3-Sem)\n       --  Hidden_By_Use_Clause (Elist4-Sem)\n+      --  All_Present (Flag15)\n \n       -------------------------------\n       -- 8.5  Renaming Declaration --"}]}