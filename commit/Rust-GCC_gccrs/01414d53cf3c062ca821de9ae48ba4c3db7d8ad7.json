{"sha": "01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0MTRkNTNjZjNjMDYyY2E4MjFkZTlhZTQ4YmE0YzNkYjdkOGFkNw==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2018-09-26T21:06:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-09-26T21:06:01Z"}, "message": "RISC-V: Add missing negate patterns.\n\n\tgcc/\n\t* config/riscv/riscv.md (subsi3_extended2): Add J constraint.\n\t(negdi2, negsi2, negsi2_extended, negsi2_extended2): New.\n\nFrom-SVN: r264655", "tree": {"sha": "3b673a581949377bb289082ef0a4ffbe325ff363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b673a581949377bb289082ef0a4ffbe325ff363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7/comments", "author": null, "committer": null, "parents": [{"sha": "d89fde46d7368b070e9cde3ca6a88f67b5643af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89fde46d7368b070e9cde3ca6a88f67b5643af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89fde46d7368b070e9cde3ca6a88f67b5643af9"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "b13aaa8de6f791c60dfb20e7b1f8b26dc7081383", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "patch": "@@ -1,3 +1,8 @@\n+2018-09-26  Jim Wilson  <jimw@sifive.com>\n+\n+\t* config/riscv/riscv.md (subsi3_extended2): Add J constraint.\n+\t(negdi2, negsi2, negsi2_extended, negsi2_extended2): New.\n+\n 2018-09-26  Martin Sebor  <msebor@redhat.com>\n \n \t* tree.c (zerop): Change return type to bool."}, {"sha": "4162dc578e8a606436154e165b934247276d0cd9", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01414d53cf3c062ca821de9ae48ba4c3db7d8ad7/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=01414d53cf3c062ca821de9ae48ba4c3db7d8ad7", "patch": "@@ -514,16 +514,51 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*subsi3_extended2\"\n-  [(set (match_operand:DI                        0 \"register_operand\" \"=r\")\n+  [(set (match_operand:DI                        0 \"register_operand\" \"= r\")\n \t(sign_extend:DI\n-\t  (subreg:SI (minus:DI (match_operand:DI 1 \"reg_or_0_operand\" \" r\")\n-\t\t\t       (match_operand:DI 2 \"register_operand\" \" r\"))\n+\t  (subreg:SI (minus:DI (match_operand:DI 1 \"reg_or_0_operand\" \" rJ\")\n+\t\t\t       (match_operand:DI 2 \"register_operand\" \"  r\"))\n \t\t     0)))]\n   \"TARGET_64BIT\"\n   \"subw\\t%0,%z1,%2\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n+(define_insn \"negdi2\"\n+  [(set (match_operand:DI         0 \"register_operand\" \"=r\")\n+\t(neg:DI (match_operand:DI 1 \"register_operand\" \" r\")))]\n+  \"TARGET_64BIT\"\n+  \"neg\\t%0,%1\"\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn \"negsi2\"\n+  [(set (match_operand:SI         0 \"register_operand\" \"=r\")\n+\t(neg:SI (match_operand:SI 1 \"register_operand\" \" r\")))]\n+  \"\"\n+  { return TARGET_64BIT ? \"negw\\t%0,%1\" : \"neg\\t%0,%1\"; }\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_insn \"*negsi2_extended\"\n+  [(set (match_operand:DI          0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t (neg:SI (match_operand:SI 1 \"register_operand\" \" r\"))))]\n+  \"TARGET_64BIT\"\n+  \"negw\\t%0,%1\"\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_insn \"*negsi2_extended2\"\n+  [(set (match_operand:DI                     0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t (subreg:SI (neg:DI (match_operand:DI 1 \"register_operand\" \" r\"))\n+\t \t    0)))]\n+  \"TARGET_64BIT\"\n+  \"negw\\t%0,%1\"\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"SI\")])\n+\n ;;\n ;;  ....................\n ;;"}]}