{"sha": "1842a04ce06a470b731bc9a29bfec17e6e147c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg0MmEwNGNlMDZhNDcwYjczMWJjOWEyOWJmZWMxN2U2ZTE0N2MzZg==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2015-09-09T16:34:59Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2015-09-09T16:34:59Z"}, "message": "Fix sanitizer/67258 by cherry picking upstream patch\n\n\tPR sanitizer/67258\n\t* ubsan/ubsan_type_hash.cc: Cherry pick upstream r244101.\n\nUpstraem patch:\ncommit 1d2477faafda9ad2cc19927b3c31efd22747f013\nAuthor: Alexey Samsonov <vonosmas@gmail.com>\nDate:   Wed Aug 5 19:35:46 2015 +0000\n\n    [UBSan] Fix UBSan-vptr false positive.\n\n    Offset from vptr to the start of most-derived object can actually\n    be positive in some virtual base class vtables.\n\n    Patch by Stephan Bergmann!\n\n    git-svn-id: https://llvm.org/svn/llvm-project/compiler-rt/trunk@244101 91177308-0d34-0410-b5e6-96231b3b80d8\n\nFrom-SVN: r227591", "tree": {"sha": "d7242b5c767c60e428b06eec2e0a7d94bbbb6465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7242b5c767c60e428b06eec2e0a7d94bbbb6465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1842a04ce06a470b731bc9a29bfec17e6e147c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1842a04ce06a470b731bc9a29bfec17e6e147c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1842a04ce06a470b731bc9a29bfec17e6e147c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1842a04ce06a470b731bc9a29bfec17e6e147c3f/comments", "author": null, "committer": null, "parents": [{"sha": "34bc1d225c5041a789f3fc9386a43148f24c0446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bc1d225c5041a789f3fc9386a43148f24c0446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34bc1d225c5041a789f3fc9386a43148f24c0446"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "e05c33b90bab8b404af53c778ef09e8b2cd13a85", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-10.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1842a04ce06a470b731bc9a29bfec17e6e147c3f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1842a04ce06a470b731bc9a29bfec17e6e147c3f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-10.C?ref=1842a04ce06a470b731bc9a29bfec17e6e147c3f", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do run }\n+// { dg-options \"-fsanitize=vptr -fno-sanitize-recover=vptr\" }\n+\n+struct A\n+{\n+    virtual ~A() {}\n+};\n+struct B : virtual A {};\n+struct C : virtual A {};\n+struct D : B, virtual C {};\n+\n+int main()\n+{\n+    D d;\n+}"}, {"sha": "ba4c423950941648361f9f6ebc17a899d1fea414", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1842a04ce06a470b731bc9a29bfec17e6e147c3f/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1842a04ce06a470b731bc9a29bfec17e6e147c3f/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=1842a04ce06a470b731bc9a29bfec17e6e147c3f", "patch": "@@ -1,3 +1,8 @@\n+2015-09-09  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR sanitizer/67258\n+\t* ubsan/ubsan_type_hash.cc: Cherry pick upstream r244101.\n+\n 2015-07-29  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR sanitizer/63927"}, {"sha": "5eab1f561f27be8721e115b4ab913f760697114c", "filename": "libsanitizer/ubsan/ubsan_type_hash.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1842a04ce06a470b731bc9a29bfec17e6e147c3f/libsanitizer%2Fubsan%2Fubsan_type_hash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1842a04ce06a470b731bc9a29bfec17e6e147c3f/libsanitizer%2Fubsan%2Fubsan_type_hash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2Fubsan_type_hash.cc?ref=1842a04ce06a470b731bc9a29bfec17e6e147c3f", "patch": "@@ -186,8 +186,8 @@ namespace {\n \n struct VtablePrefix {\n   /// The offset from the vptr to the start of the most-derived object.\n-  /// This should never be greater than zero, and will usually be exactly\n-  /// zero.\n+  /// This will only be greater than zero in some virtual base class vtables\n+  /// used during object con-/destruction, and will usually be exactly zero.\n   sptr Offset;\n   /// The type_info object describing the most-derived class type.\n   std::type_info *TypeInfo;\n@@ -197,7 +197,7 @@ VtablePrefix *getVtablePrefix(void *Object) {\n   if (!*VptrPtr)\n     return 0;\n   VtablePrefix *Prefix = *VptrPtr - 1;\n-  if (Prefix->Offset > 0 || !Prefix->TypeInfo)\n+  if (!Prefix->TypeInfo)\n     // This can't possibly be a valid vtable.\n     return 0;\n   return Prefix;"}]}