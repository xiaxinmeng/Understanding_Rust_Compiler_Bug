{"sha": "8ee911651552dc302c766d34a7a73be1dcfcd7a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlOTExNjUxNTUyZGMzMDJjNzY2ZDM0YTdhNzNiZTFkY2ZjZDdhNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-18T09:24:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-18T09:24:59Z"}, "message": "sse.md (pbroadcast_evex_isa): New mode attr.\n\n\t* config/i386/sse.md (pbroadcast_evex_isa): New mode attr.\n\t(avx2_pbroadcast<mode>): Add another alternative with v instead\n\tof x constraints in it, using <pbroadcast_evex_isa> isa.\n\t(avx2_pbroadcast<mode>_1): Similarly, add two such alternatives.\n\n\t* gcc.target/i386/avx512bw-vpbroadcast-1.c: New test.\n\t* gcc.target/i386/avx512bw-vpbroadcast-2.c: New test.\n\t* gcc.target/i386/avx512bw-vpbroadcast-3.c: New test.\n\t* gcc.target/i386/avx512vl-vpbroadcast-1.c: New test.\n\t* gcc.target/i386/avx512vl-vpbroadcast-2.c: New test.\n\t* gcc.target/i386/avx512vl-vpbroadcast-3.c: New test.\n\nFrom-SVN: r236369", "tree": {"sha": "d2da88103d7b577e0237aa2079652a80808105ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2da88103d7b577e0237aa2079652a80808105ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee911651552dc302c766d34a7a73be1dcfcd7a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee911651552dc302c766d34a7a73be1dcfcd7a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee911651552dc302c766d34a7a73be1dcfcd7a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee911651552dc302c766d34a7a73be1dcfcd7a7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf4d516a507431bf8a42bf9aa2502b8a1ee34bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4d516a507431bf8a42bf9aa2502b8a1ee34bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4d516a507431bf8a42bf9aa2502b8a1ee34bc7"}], "stats": {"total": 496, "additions": 489, "deletions": 7}, "files": [{"sha": "f3f6d38b9cfcb94aad3726482473915c50ee4e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -1,5 +1,10 @@\n 2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (pbroadcast_evex_isa): New mode attr.\n+\t(avx2_pbroadcast<mode>): Add another alternative with v instead\n+\tof x constraints in it, using <pbroadcast_evex_isa> isa.\n+\t(avx2_pbroadcast<mode>_1): Similarly, add two such alternatives.\n+\n \t* config/i386/sse.md (<ssse3_avx2>_palignr<mode>): Use\n \tconstraint x instead of v in second alternative, add avx512bw\n \talternative."}, {"sha": "0bb217dcb35cbecdfdf480a4f888655fe31b5bc5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -16737,30 +16737,40 @@\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"mode\" \"OI\")])\n \n+(define_mode_attr pbroadcast_evex_isa\n+  [(V64QI \"avx512bw\") (V32QI \"avx512bw\") (V16QI \"avx512bw\")\n+   (V32HI \"avx512bw\") (V16HI \"avx512bw\") (V8HI \"avx512bw\")\n+   (V16SI \"avx512f\") (V8SI \"avx512f\") (V4SI \"avx512f\")\n+   (V8DI \"avx512f\") (V4DI \"avx512f\") (V2DI \"avx512f\")])\n+\n (define_insn \"avx2_pbroadcast<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:VI 0 \"register_operand\" \"=x,v\")\n \t(vec_duplicate:VI\n \t  (vec_select:<ssescalarmode>\n-\t    (match_operand:<ssexmmmode> 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:<ssexmmmode> 1 \"nonimmediate_operand\" \"xm,vm\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX2\"\n   \"vpbroadcast<ssemodesuffix>\\t{%1, %0|%0, %<iptr>1}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  [(set_attr \"isa\" \"*,<pbroadcast_evex_isa>\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"vex,evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"avx2_pbroadcast<mode>_1\"\n-  [(set (match_operand:VI_256 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:VI_256 0 \"register_operand\" \"=x,x,v,v\")\n \t(vec_duplicate:VI_256\n \t  (vec_select:<ssescalarmode>\n-\t    (match_operand:VI_256 1 \"nonimmediate_operand\" \"m,x\")\n+\t    (match_operand:VI_256 1 \"nonimmediate_operand\" \"m,x,m,v\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX2\"\n   \"@\n+   vpbroadcast<ssemodesuffix>\\t{%1, %0|%0, %<iptr>1}\n+   vpbroadcast<ssemodesuffix>\\t{%x1, %0|%0, %x1}\n    vpbroadcast<ssemodesuffix>\\t{%1, %0|%0, %<iptr>1}\n    vpbroadcast<ssemodesuffix>\\t{%x1, %0|%0, %x1}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  [(set_attr \"isa\" \"*,*,<pbroadcast_evex_isa>,<pbroadcast_evex_isa>\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])"}, {"sha": "3df77a060679ac7ea19847e02cd5c23f41ef7122", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -1,5 +1,12 @@\n 2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.target/i386/avx512bw-vpbroadcast-1.c: New test.\n+\t* gcc.target/i386/avx512bw-vpbroadcast-2.c: New test.\n+\t* gcc.target/i386/avx512bw-vpbroadcast-3.c: New test.\n+\t* gcc.target/i386/avx512vl-vpbroadcast-1.c: New test.\n+\t* gcc.target/i386/avx512vl-vpbroadcast-2.c: New test.\n+\t* gcc.target/i386/avx512vl-vpbroadcast-3.c: New test.\n+\n \t* gcc.target/i386/avx512vl-vpalignr-3.c: New test.\n \t* gcc.target/i386/avx512bw-vpalignr-3.c: New test.\n "}, {"sha": "da6dba59d95573187d83cc42091e90f2893f0602", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpbroadcast-1.c", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-1.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,104 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastb_epi8 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastw_epi16 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f3 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastd_epi32 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f4 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastq_epi64 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastq\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastb_epi8 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */\n+\n+void\n+f6 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastw_epi16 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */\n+\n+void\n+f7 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastd_epi32 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */\n+\n+void\n+f8 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastq_epi64 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastq\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */"}, {"sha": "2d623c6edf3efaa896eb17fb5510657e82e32f43", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpbroadcast-2.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-2.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw\" } */\n+\n+typedef char V1 __attribute__((vector_size (16)));\n+typedef short V2 __attribute__((vector_size (16)));\n+typedef char V5 __attribute__((vector_size (32)));\n+typedef short V6 __attribute__((vector_size (32)));\n+typedef int V7 __attribute__((vector_size (32)));\n+\n+void\n+f1 (V1 x)\n+{\n+  register V1 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V1) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (V2 x)\n+{\n+  register V2 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V2) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (V5 x)\n+{\n+  register V5 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V5) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*(xmm16\\[^\\n\\r]*ymm16|ymm16\\[^\\n\\r]*xmm16)\" } } */\n+\n+void\n+f6 (V6 x)\n+{\n+  register V6 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V6) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*(xmm16\\[^\\n\\r]*ymm16|ymm16\\[^\\n\\r]*xmm16)\" } } */\n+\n+void\n+f7 (V7 x)\n+{\n+  register V7 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V7) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*(xmm16\\[^\\n\\r]*ymm16|ymm16\\[^\\n\\r]*xmm16)\" } } */"}, {"sha": "ff3d27580dd2c59f1c02b4ffd2d1c21ce6b381b9", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpbroadcast-3.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpbroadcast-3.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,58 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw\" } */\n+\n+typedef char V1 __attribute__((vector_size (16)));\n+typedef short V2 __attribute__((vector_size (16)));\n+typedef char V5 __attribute__((vector_size (32)));\n+typedef short V6 __attribute__((vector_size (32)));\n+typedef int V7 __attribute__((vector_size (32)));\n+\n+void\n+f1 (V1 *x)\n+{\n+  register V1 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V1) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (V2 *x)\n+{\n+  register V2 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V2) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (V5 *x)\n+{\n+  register V5 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V5) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastb\\[^\\n\\r]*ymm16\" } } */\n+\n+void\n+f6 (V6 *x)\n+{\n+  register V6 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V6) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastw\\[^\\n\\r]*ymm16\" } } */\n+\n+void\n+f7 (V7 *x)\n+{\n+  register V7 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V7) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*ymm16\" } } */"}, {"sha": "45458096ba3414c55925127e980aa566cab3ceb2", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpbroadcast-1.c", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-1.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,104 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastb_epi8 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastw_epi16 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f3 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastd_epi32 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f4 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_broadcastq_epi64 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastq\\[^\\n\\r]*xmm16\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastb_epi8 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*\\[xy]mm1\\[67]\" } } */\n+\n+void\n+f6 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastw_epi16 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*\\[xy]mm1\\[67]\" } } */\n+\n+void\n+f7 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastd_epi32 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */\n+\n+void\n+f8 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  register __m256i b __asm (\"xmm17\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  b = _mm256_broadcastq_epi64 (a);\n+  asm volatile (\"\" : \"+v\" (b));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastq\\[^\\n\\r]*(xmm1\\[67]\\[^\\n\\r]*ymm1\\[67]|ymm1\\[67]\\[^\\n\\r]*xmm1\\[67])\" } } */"}, {"sha": "aed9914b597e6ecc3d9e619909dfcdd19bd7fbf1", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpbroadcast-2.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-2.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw\" } */\n+\n+typedef char V1 __attribute__((vector_size (16)));\n+typedef short V2 __attribute__((vector_size (16)));\n+typedef char V5 __attribute__((vector_size (32)));\n+typedef short V6 __attribute__((vector_size (32)));\n+typedef int V7 __attribute__((vector_size (32)));\n+\n+void\n+f1 (V1 x)\n+{\n+  register V1 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V1) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (V2 x)\n+{\n+  register V2 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V2) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (V5 x)\n+{\n+  register V5 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V5) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*\\[xy]mm16\" } } */\n+\n+void\n+f6 (V6 x)\n+{\n+  register V6 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V6) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*\\[xy]mm16\" } } */\n+\n+void\n+f7 (V7 x)\n+{\n+  register V7 a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = __builtin_shuffle (a, (V7) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*(xmm16\\[^\\n\\r]*ymm16|ymm16\\[^\\n\\r]*xmm16)\" } } */"}, {"sha": "b93bd362ed36d0856259c9977cabef0aeeeb4997", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpbroadcast-3.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee911651552dc302c766d34a7a73be1dcfcd7a7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpbroadcast-3.c?ref=8ee911651552dc302c766d34a7a73be1dcfcd7a7", "patch": "@@ -0,0 +1,58 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw\" } */\n+\n+typedef char V1 __attribute__((vector_size (16)));\n+typedef short V2 __attribute__((vector_size (16)));\n+typedef char V5 __attribute__((vector_size (32)));\n+typedef short V6 __attribute__((vector_size (32)));\n+typedef int V7 __attribute__((vector_size (32)));\n+\n+void\n+f1 (V1 *x)\n+{\n+  register V1 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V1) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f2 (V2 *x)\n+{\n+  register V2 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V2) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*xmm16\" } } */\n+\n+void\n+f5 (V5 *x)\n+{\n+  register V5 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V5) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastb\\[^\\n\\r]*ymm16\" } } */\n+\n+void\n+f6 (V6 *x)\n+{\n+  register V6 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V6) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler-not \"vpbroadcastw\\[^\\n\\r]*ymm16\" } } */\n+\n+void\n+f7 (V7 *x)\n+{\n+  register V7 a __asm (\"xmm16\");\n+  a = __builtin_shuffle (*x, (V7) { 0 });\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpbroadcastd\\[^\\n\\r]*ymm16\" } } */"}]}