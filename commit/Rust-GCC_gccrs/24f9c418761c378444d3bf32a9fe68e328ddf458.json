{"sha": "24f9c418761c378444d3bf32a9fe68e328ddf458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRmOWM0MTg3NjFjMzc4NDQ0ZDNiZjMyYTlmZTY4ZTMyOGRkZjQ1OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-08-01T00:31:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-01T00:31:46Z"}, "message": "darwin.h (MAIN_STACK_BOUNDARY): Define to 128.\n\n2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/darwin.h (MAIN_STACK_BOUNDARY): Define to 128.\n\nFrom-SVN: r138446", "tree": {"sha": "758e416d4c0bd1644fe36c7322e42f9c77c54095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/758e416d4c0bd1644fe36c7322e42f9c77c54095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24f9c418761c378444d3bf32a9fe68e328ddf458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f9c418761c378444d3bf32a9fe68e328ddf458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f9c418761c378444d3bf32a9fe68e328ddf458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f9c418761c378444d3bf32a9fe68e328ddf458/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff0402543bc43b887ce1f5c73d04f35fd276d761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0402543bc43b887ce1f5c73d04f35fd276d761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff0402543bc43b887ce1f5c73d04f35fd276d761"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c8674e59ddaee792aa7ccbe17a1230a052eda885", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f9c418761c378444d3bf32a9fe68e328ddf458/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f9c418761c378444d3bf32a9fe68e328ddf458/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24f9c418761c378444d3bf32a9fe68e328ddf458", "patch": "@@ -1,3 +1,7 @@\n+2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/darwin.h (MAIN_STACK_BOUNDARY): Define to 128.\n+\n 2008-07-31  Steve Ellcey  <sje@cup.hp.com>\n \n \t* expr.c (expand_assignment): Check for complete type."}, {"sha": "a1defcf9bc6ed6f8f03be9b4c6561c8bb962a6d1", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f9c418761c378444d3bf32a9fe68e328ddf458/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f9c418761c378444d3bf32a9fe68e328ddf458/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=24f9c418761c378444d3bf32a9fe68e328ddf458", "patch": "@@ -75,6 +75,9 @@ along with GCC; see the file COPYING3.  If not see\n #undef STACK_BOUNDARY\n #define STACK_BOUNDARY 128\n \n+#undef MAIN_STACK_BOUNDARY\n+#define MAIN_STACK_BOUNDARY 128\n+\n /* Since we'll never want a stack boundary less aligned than 128 bits\n    we need the extra work here otherwise bits of gcc get very grumpy\n    when we ask for lower alignment.  We could just reject values less"}]}