{"sha": "1d1df0df43b306fef358d1d3f1378b593a75d5a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxZGYwZGY0M2IzMDZmZWYzNThkMWQzZjEzNzhiNTkzYTc1ZDVhOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-09-11T19:54:21Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-09-11T19:54:21Z"}, "message": "i386.h (MODE_NEEDED): Calls need UNINITIALIZED mode; add comment.\n\n\t* i386.h (MODE_NEEDED): Calls need UNINITIALIZED mode; add comment.\n\t(EMIT_MODE_SET): UNINITIALIZED mode needs no set.\n\t* i386.md (i387_cw): Add 'uninitialized' mode.\n\nFrom-SVN: r87365", "tree": {"sha": "e19d43ece2ec358a73d960388cac15834180e0cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19d43ece2ec358a73d960388cac15834180e0cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d1df0df43b306fef358d1d3f1378b593a75d5a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1df0df43b306fef358d1d3f1378b593a75d5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1df0df43b306fef358d1d3f1378b593a75d5a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1df0df43b306fef358d1d3f1378b593a75d5a9/comments", "author": null, "committer": null, "parents": [{"sha": "f43329a5ae7245add8191783724d9bb99006f3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f43329a5ae7245add8191783724d9bb99006f3b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f43329a5ae7245add8191783724d9bb99006f3b3"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "e0c197a9cd7fd1dd990299c6e4c0b73029ed9fc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d1df0df43b306fef358d1d3f1378b593a75d5a9", "patch": "@@ -1,5 +1,9 @@\n 2004-09-11  Jan Hubicka  <jh@suse.cz>\n \n+\t* i386.h (MODE_NEEDED): Calls need UNINITIALIZED mode; add comment.\n+\t(EMIT_MODE_SET): UNINITIALIZED mode needs no set.\n+\t* i386.md (i387_cw): Add 'uninitialized' mode.\n+\n \t* profile.c (BB_TO_GCOV_INDEX): move more to the front.\n \t(output_location): Break out from ....\n \t(branch_prob): ... here; handle gcov output on trees."}, {"sha": "e32684885c4d3d18b48f07bee8e7d0523e2b49f6", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1d1df0df43b306fef358d1d3f1378b593a75d5a9", "patch": "@@ -2960,13 +2960,18 @@ extern rtx ix86_compare_op1;\t/* operand 1 for comparisons */\n    `OPTIMIZE_MODE_SWITCHING' is defined, you must define this macro to\n    return an integer value not larger than the corresponding element\n    in `NUM_MODES_FOR_MODE_SWITCHING', to denote the mode that ENTITY\n-   must be switched into prior to the execution of INSN.  */\n+   must be switched into prior to the execution of INSN. \n+   \n+   The mode UNINITIALIZED is used to force re-load of possibly previously\n+   stored control word after function call.  The mode ANY specify that\n+   function has no requirements on the control word and make no changes\n+   in the bits we are interested in.  */\n \n #define MODE_NEEDED(ENTITY, I)\t\t\t\t\t\t\\\n   (GET_CODE (I) == CALL_INSN\t\t\t\t\t\t\\\n    || (GET_CODE (I) == INSN && (asm_noperands (PATTERN (I)) >= 0 \t\\\n \t\t\t\t|| GET_CODE (PATTERN (I)) == ASM_INPUT))\\\n-   ? I387_CW_ANY \t\t\t\t\t\t\t\\\n+   ? I387_CW_UNINITIALIZED\t\t\t\t\t\t\\\n    : recog_memoized (I) < 0\t\t\t\t\t\t\\\n    ? I387_CW_ANY \t\t\t\t\t\t\t\\\n    : get_attr_i387_cw (I))\n@@ -2981,7 +2986,7 @@ extern rtx ix86_compare_op1;\t/* operand 1 for comparisons */\n    are to be inserted.  */\n \n #define EMIT_MODE_SET(ENTITY, MODE, HARD_REGS_LIVE) \t\t\t\\\n-  ((MODE) != I387_CW_ANY\t\t\t\t\t\t\\\n+  ((MODE) != I387_CW_ANY && (MODE) != I387_CW_UNINITIALIZED\t\t\\\n    ? emit_i387_cw_initialization (assign_386_stack_local (HImode, 1),\t\\\n \t\t\t\t  assign_386_stack_local (HImode, 2),   \\\n \t\t\t\t  MODE), 0\t\t\t\t\\"}, {"sha": "8ec7719b660735571d3a91a0e8a1041c3585b717", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1df0df43b306fef358d1d3f1378b593a75d5a9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1d1df0df43b306fef358d1d3f1378b593a75d5a9", "patch": "@@ -431,7 +431,7 @@\n \n ;; Defines rounding mode of an FP operation.\n \n-(define_attr \"i387_cw\" \"floor,ceil,trunc,mask_pm,any\"\n+(define_attr \"i387_cw\" \"floor,ceil,trunc,mask_pm,uninitialized,any\"\n   (const_string \"any\"))\n \n ;; Describe a user's asm statement."}]}