{"sha": "810f316dd62806d46ae7f242ba006b74d7b78446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwZjMxNmRkNjI4MDZkNDZhZTdmMjQyYmEwMDZiNzRkN2I3ODQ0Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-01T07:51:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-01T07:51:46Z"}, "message": "configure.ac: Remove GCC_HEADER_STDINT(gstdint.h).\n\n\t* configure.ac: Remove GCC_HEADER_STDINT(gstdint.h).\n\t* libgomp.h: Include <stdint.h> instead of \"gstdint.h\".\n\t* oacc-parallel.c: Don't include \"libgomp_g.h\".\n\t* plugin/plugin-hsa.c: Include <stdint.h> instead of \"gstdint.h\".\n\t* plugin/plugin-nvptx.c: Don't include \"gstdint.h\".\n\t* aclocal.m4: Regenerated.\n\t* config.h.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r276389", "tree": {"sha": "d83be06dd728713cee27f330a419609d999ea562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d83be06dd728713cee27f330a419609d999ea562"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810f316dd62806d46ae7f242ba006b74d7b78446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810f316dd62806d46ae7f242ba006b74d7b78446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810f316dd62806d46ae7f242ba006b74d7b78446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810f316dd62806d46ae7f242ba006b74d7b78446/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba8fa8daf52c560fce0e4d35556137ca5b8217d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba8fa8daf52c560fce0e4d35556137ca5b8217d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba8fa8daf52c560fce0e4d35556137ca5b8217d0"}], "stats": {"total": 830, "additions": 14, "deletions": 816}, "files": [{"sha": "dbb95e424de552eae79b7ffe41182c57acb45dde", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -1,3 +1,15 @@\n+2019-10-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Remove GCC_HEADER_STDINT(gstdint.h).\n+\t* libgomp.h: Include <stdint.h> instead of \"gstdint.h\".\n+\t* oacc-parallel.c: Don't include \"libgomp_g.h\".\n+\t* plugin/plugin-hsa.c: Include <stdint.h> instead of \"gstdint.h\".\n+\t* plugin/plugin-nvptx.c: Don't include \"gstdint.h\".\n+\t* aclocal.m4: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2019-09-30  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* libgomp_g.h: Include stdint.h instead of gstdint.h."}, {"sha": "3bd84dc9e13a9d9e6336f02ed2d48127d3f21797", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -132,7 +132,6 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n-\t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "121259964250eae520d0c20426b8c69d21bf28f0", "filename": "libgomp/aclocal.m4", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Faclocal.m4?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -1176,7 +1176,6 @@ m4_include([../config/lead-dot.m4])\n m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n-m4_include([../config/stdint.m4])\n m4_include([../config/tls.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "ceb062fcb4c64a43e570ac1ab521810b13edfaff", "filename": "libgomp/config.h.in", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -183,21 +183,6 @@\n /* Define if all infrastructure, needed for plugins, is supported. */\n #undef PLUGIN_SUPPORT\n \n-/* The size of `char', as computed by sizeof. */\n-#undef SIZEOF_CHAR\n-\n-/* The size of `int', as computed by sizeof. */\n-#undef SIZEOF_INT\n-\n-/* The size of `long', as computed by sizeof. */\n-#undef SIZEOF_LONG\n-\n-/* The size of `short', as computed by sizeof. */\n-#undef SIZEOF_SHORT\n-\n-/* The size of `void *', as computed by sizeof. */\n-#undef SIZEOF_VOID_P\n-\n /* Define to 1 if you have the ANSI C header files. */\n #undef STDC_HEADERS\n "}, {"sha": "1221c44c64be8f5afa8cd188028472bfe4ee8893", "filename": "libgomp/configure", "status": "modified", "additions": 0, "deletions": 793, "changes": 793, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -14916,408 +14916,6 @@ fi\n done\n \n \n-\n-\n-inttype_headers=`echo inttypes.h sys/inttypes.h  | sed -e 's/,/ /g'`\n-\n-acx_cv_header_stdint=stddef.h\n-acx_cv_header_stdint_kind=\"(already complete)\"\n-for i in stdint.h $inttype_headers; do\n-  unset ac_cv_type_uintptr_t\n-  unset ac_cv_type_uintmax_t\n-  unset ac_cv_type_int_least32_t\n-  unset ac_cv_type_int_fast32_t\n-  unset ac_cv_type_uint64_t\n-  $as_echo_n \"looking for a compliant stdint.h in $i, \" >&6\n-  ac_fn_c_check_type \"$LINENO\" \"uintmax_t\" \"ac_cv_type_uintmax_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintmax_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"int_least32_t\" \"ac_cv_type_int_least32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_int_least32_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"int_fast32_t\" \"ac_cv_type_int_fast32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_int_fast32_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(mostly complete)\"\n-fi\n-\n-  ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint64_t\" = xyes; then :\n-\n-else\n-  acx_cv_header_stdint_kind=\"(lacks uint64_t)\"\n-fi\n-\n-  break\n-done\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(lacks uintmax_t)\"\n-  for i in stdint.h $inttype_headers; do\n-    unset ac_cv_type_uintptr_t\n-    unset ac_cv_type_uint32_t\n-    unset ac_cv_type_uint64_t\n-    $as_echo_n \"looking for an incomplete stdint.h in $i, \" >&6\n-    ac_fn_c_check_type \"$LINENO\" \"uint32_t\" \"ac_cv_type_uint32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint32_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"uint64_t\" \"ac_cv_type_uint64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uint64_t\" = xyes; then :\n-\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"uintptr_t\" \"ac_cv_type_uintptr_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_uintptr_t\" = xyes; then :\n-\n-fi\n-\n-    break\n-  done\n-fi\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(u_intXX_t style)\"\n-  for i in sys/types.h $inttype_headers; do\n-    unset ac_cv_type_u_int32_t\n-    unset ac_cv_type_u_int64_t\n-    $as_echo_n \"looking for u_intXX_t types in $i, \" >&6\n-    ac_fn_c_check_type \"$LINENO\" \"u_int32_t\" \"ac_cv_type_u_int32_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_u_int32_t\" = xyes; then :\n-  acx_cv_header_stdint=$i\n-else\n-  continue\n-fi\n-\n-    ac_fn_c_check_type \"$LINENO\" \"u_int64_t\" \"ac_cv_type_u_int64_t\" \"#include <sys/types.h>\n-#include <$i>\n-\"\n-if test \"x$ac_cv_type_u_int64_t\" = xyes; then :\n-\n-fi\n-\n-    break\n-  done\n-fi\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  acx_cv_header_stdint_kind=\"(using manual detection)\"\n-fi\n-\n-test -z \"$ac_cv_type_uintptr_t\" && ac_cv_type_uintptr_t=no\n-test -z \"$ac_cv_type_uint64_t\" && ac_cv_type_uint64_t=no\n-test -z \"$ac_cv_type_u_int64_t\" && ac_cv_type_u_int64_t=no\n-test -z \"$ac_cv_type_int_least32_t\" && ac_cv_type_int_least32_t=no\n-test -z \"$ac_cv_type_int_fast32_t\" && ac_cv_type_int_fast32_t=no\n-\n-# ----------------- Summarize what we found so far\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking what to include in gstdint.h\" >&5\n-$as_echo_n \"checking what to include in gstdint.h... \" >&6; }\n-\n-case `$as_basename -- gstdint.h ||\n-$as_expr X/gstdint.h : '.*/\\([^/][^/]*\\)/*$' \\| \\\n-\t Xgstdint.h : 'X\\(//\\)$' \\| \\\n-\t Xgstdint.h : 'X\\(/\\)' \\| . 2>/dev/null ||\n-$as_echo X/gstdint.h |\n-    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  /^X\\/\\(\\/\\/\\)$/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  /^X\\/\\(\\/\\).*/{\n-\t    s//\\1/\n-\t    q\n-\t  }\n-\t  s/.*/./; q'` in\n-  stdint.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n-$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n-  inttypes.h) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?\" >&5\n-$as_echo \"$as_me: WARNING: are you sure you want it there?\" >&2;} ;;\n-  *) ;;\n-esac\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&5\n-$as_echo \"$acx_cv_header_stdint $acx_cv_header_stdint_kind\" >&6; }\n-\n-# ----------------- done included file, check C basic types --------\n-\n-# Lacking an uintptr_t?  Test size of void *\n-case \"$acx_cv_header_stdint:$ac_cv_type_uintptr_t\" in\n-  stddef.h:* | *:no) # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of void *\" >&5\n-$as_echo_n \"checking size of void *... \" >&6; }\n-if ${ac_cv_sizeof_void_p+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (void *))\" \"ac_cv_sizeof_void_p\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_void_p\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (void *)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_void_p=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p\" >&5\n-$as_echo \"$ac_cv_sizeof_void_p\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n-_ACEOF\n-\n- ;;\n-esac\n-\n-# Lacking an uint64_t?  Test size of long\n-case \"$acx_cv_header_stdint:$ac_cv_type_uint64_t:$ac_cv_type_u_int64_t\" in\n-  stddef.h:*:* | *:no:no) # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of long\" >&5\n-$as_echo_n \"checking size of long... \" >&6; }\n-if ${ac_cv_sizeof_long+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (long))\" \"ac_cv_sizeof_long\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_long\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (long)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_long=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long\" >&5\n-$as_echo \"$ac_cv_sizeof_long\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_LONG $ac_cv_sizeof_long\n-_ACEOF\n-\n- ;;\n-esac\n-\n-if test $acx_cv_header_stdint = stddef.h; then\n-  # Lacking a good header?  Test size of everything and deduce all types.\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of int\" >&5\n-$as_echo_n \"checking size of int... \" >&6; }\n-if ${ac_cv_sizeof_int+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (int))\" \"ac_cv_sizeof_int\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_int\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (int)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_int=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_int\" >&5\n-$as_echo \"$ac_cv_sizeof_int\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_INT $ac_cv_sizeof_int\n-_ACEOF\n-\n-\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of short\" >&5\n-$as_echo_n \"checking size of short... \" >&6; }\n-if ${ac_cv_sizeof_short+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (short))\" \"ac_cv_sizeof_short\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_short\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (short)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_short=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_short\" >&5\n-$as_echo \"$ac_cv_sizeof_short\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_SHORT $ac_cv_sizeof_short\n-_ACEOF\n-\n-\n-  # The cast to long int works around a bug in the HP C Compiler\n-# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n-# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n-# This bug is HP SR number 8606223364.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of char\" >&5\n-$as_echo_n \"checking size of char... \" >&6; }\n-if ${ac_cv_sizeof_char+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (char))\" \"ac_cv_sizeof_char\"        \"$ac_includes_default\"; then :\n-\n-else\n-  if test \"$ac_cv_type_char\" = yes; then\n-     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n-$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error 77 \"cannot compute sizeof (char)\n-See \\`config.log' for more details\" \"$LINENO\" 5; }\n-   else\n-     ac_cv_sizeof_char=0\n-   fi\n-fi\n-\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_char\" >&5\n-$as_echo \"$ac_cv_sizeof_char\" >&6; }\n-\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define SIZEOF_CHAR $ac_cv_sizeof_char\n-_ACEOF\n-\n-\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int8_t\" >&5\n-$as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n-  case \"$ac_cv_sizeof_char\" in\n-    1) acx_cv_type_int8_t=char ;;\n-    *) as_fn_error $? \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n-$as_echo \"$acx_cv_type_int8_t\" >&6; }\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int16_t\" >&5\n-$as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n-  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n-    2:*) acx_cv_type_int16_t=int ;;\n-    *:2) acx_cv_type_int16_t=short ;;\n-    *) as_fn_error $? \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n-$as_echo \"$acx_cv_type_int16_t\" >&6; }\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int32_t\" >&5\n-$as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n-  case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n-    4:*) acx_cv_type_int32_t=int ;;\n-    *:4) acx_cv_type_int32_t=long ;;\n-    *) as_fn_error $? \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n-$as_echo \"$acx_cv_type_int32_t\" >&6; }\n-fi\n-\n-# These tests are here to make the output prettier\n-\n-if test \"$ac_cv_type_uint64_t\" != yes && test \"$ac_cv_type_u_int64_t\" != yes; then\n-  case \"$ac_cv_sizeof_long\" in\n-    8) acx_cv_type_int64_t=long ;;\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to int64_t\" >&5\n-$as_echo_n \"checking for type equivalent to int64_t... \" >&6; }\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&5\n-$as_echo \"${acx_cv_type_int64_t-'using preprocessor symbols'}\" >&6; }\n-fi\n-\n-# Now we can use the above types\n-\n-if test \"$ac_cv_type_uintptr_t\" != yes; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for type equivalent to intptr_t\" >&5\n-$as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n-  case $ac_cv_sizeof_void_p in\n-    2) acx_cv_type_intptr_t=int16_t ;;\n-    4) acx_cv_type_intptr_t=int32_t ;;\n-    8) acx_cv_type_intptr_t=int64_t ;;\n-    *) as_fn_error $? \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n-  esac\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n-$as_echo \"$acx_cv_type_intptr_t\" >&6; }\n-fi\n-\n-# ----------------- done all checks, emit header -------------\n-ac_config_commands=\"$ac_config_commands gstdint.h\"\n-\n-\n-\n-\n XPCFLAGS=\"\"\n case \"$host\" in\n   *-*-rtems*)\n@@ -18500,24 +18098,6 @@ fi\n \n \n \n-GCC=\"$GCC\"\n-CC=\"$CC\"\n-acx_cv_header_stdint=\"$acx_cv_header_stdint\"\n-acx_cv_type_int8_t=\"$acx_cv_type_int8_t\"\n-acx_cv_type_int16_t=\"$acx_cv_type_int16_t\"\n-acx_cv_type_int32_t=\"$acx_cv_type_int32_t\"\n-acx_cv_type_int64_t=\"$acx_cv_type_int64_t\"\n-acx_cv_type_intptr_t=\"$acx_cv_type_intptr_t\"\n-ac_cv_type_uintmax_t=\"$ac_cv_type_uintmax_t\"\n-ac_cv_type_uintptr_t=\"$ac_cv_type_uintptr_t\"\n-ac_cv_type_uint64_t=\"$ac_cv_type_uint64_t\"\n-ac_cv_type_u_int64_t=\"$ac_cv_type_u_int64_t\"\n-ac_cv_type_u_int32_t=\"$ac_cv_type_u_int32_t\"\n-ac_cv_type_int_least32_t=\"$ac_cv_type_int_least32_t\"\n-ac_cv_type_int_fast32_t=\"$ac_cv_type_int_fast32_t\"\n-ac_cv_sizeof_void_p=\"$ac_cv_sizeof_void_p\"\n-\n-\n _ACEOF\n \n cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n@@ -18530,7 +18110,6 @@ do\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n-    \"gstdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gstdint.h\" ;;\n     \"omp.h\") CONFIG_FILES=\"$CONFIG_FILES omp.h\" ;;\n     \"omp_lib.h\") CONFIG_FILES=\"$CONFIG_FILES omp_lib.h\" ;;\n     \"omp_lib.f90\") CONFIG_FILES=\"$CONFIG_FILES omp_lib.f90\" ;;\n@@ -20044,378 +19623,6 @@ compiler_lib_search_path=$lt_compiler_lib_search_path_FC\n # ### END LIBTOOL TAG CONFIG: FC\n _LT_EOF\n \n- ;;\n-    \"gstdint.h\":C)\n-if test \"$GCC\" = yes; then\n-  echo \"/* generated for \" `$CC --version | sed 1q` \"*/\" > tmp-stdint.h\n-else\n-  echo \"/* generated for $CC */\" > tmp-stdint.h\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-  #ifndef GCC_GENERATED_STDINT_H\n-  #define GCC_GENERATED_STDINT_H 1\n-\n-  #include <sys/types.h>\n-EOF\n-\n-if test \"$acx_cv_header_stdint\" != stdint.h; then\n-  echo \"#include <stddef.h>\" >> tmp-stdint.h\n-fi\n-if test \"$acx_cv_header_stdint\" != stddef.h; then\n-  echo \"#include <$acx_cv_header_stdint>\" >> tmp-stdint.h\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-  /* glibc uses these symbols as guards to prevent redefinitions.  */\n-  #ifdef __int8_t_defined\n-  #define _INT8_T\n-  #define _INT16_T\n-  #define _INT32_T\n-  #endif\n-  #ifdef __uint32_t_defined\n-  #define _UINT32_T\n-  #endif\n-\n-EOF\n-\n-# ----------------- done header, emit basic int types -------------\n-if test \"$acx_cv_header_stdint\" = stddef.h; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #ifndef __uint8_t_defined\n-    #define __uint8_t_defined\n-    #ifndef uint8_t\n-    typedef unsigned $acx_cv_type_int8_t uint8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #ifndef __uint16_t_defined\n-    #define __uint16_t_defined\n-    #ifndef uint16_t\n-    typedef unsigned $acx_cv_type_int16_t uint16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #ifndef __uint32_t_defined\n-    #define __uint32_t_defined\n-    #ifndef uint32_t\n-    typedef unsigned $acx_cv_type_int32_t uint32_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #ifndef __int8_t_defined\n-    #define __int8_t_defined\n-    #ifndef int8_t\n-    typedef $acx_cv_type_int8_t int8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #ifndef __int16_t_defined\n-    #define __int16_t_defined\n-    #ifndef int16_t\n-    typedef $acx_cv_type_int16_t int16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #ifndef __int32_t_defined\n-    #define __int32_t_defined\n-    #ifndef int32_t\n-    typedef $acx_cv_type_int32_t int32_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-elif test \"$ac_cv_type_u_int32_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* int8_t int16_t int32_t defined by inet code, we do the u_intXX types */\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #endif\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #endif\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #endif\n-\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #ifndef __uint8_t_defined\n-    #define __uint8_t_defined\n-    #ifndef uint8_t\n-    typedef u_int8_t uint8_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #ifndef __uint16_t_defined\n-    #define __uint16_t_defined\n-    #ifndef uint16_t\n-    typedef u_int16_t uint16_t;\n-    #endif\n-    #endif\n-    #endif\n-\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #ifndef __uint32_t_defined\n-    #define __uint32_t_defined\n-    #ifndef uint32_t\n-    typedef u_int32_t uint32_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-else\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Some systems have guard macros to prevent redefinitions, define them.  */\n-    #ifndef _INT8_T\n-    #define _INT8_T\n-    #endif\n-    #ifndef _INT16_T\n-    #define _INT16_T\n-    #endif\n-    #ifndef _INT32_T\n-    #define _INT32_T\n-    #endif\n-    #ifndef _UINT8_T\n-    #define _UINT8_T\n-    #endif\n-    #ifndef _UINT16_T\n-    #define _UINT16_T\n-    #endif\n-    #ifndef _UINT32_T\n-    #define _UINT32_T\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done basic int types, emit int64_t types ------------\n-if test \"$ac_cv_type_uint64_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* system headers have good uint64_t and int64_t */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #endif\n-EOF\n-elif test \"$ac_cv_type_u_int64_t\" = yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* system headers have an u_int64_t (and int64_t) */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef __uint64_t_defined\n-    #define __uint64_t_defined\n-    #ifndef uint64_t\n-    typedef u_int64_t uint64_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-elif test -n \"$acx_cv_type_int64_t\"; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #ifndef int64_t\n-    typedef $acx_cv_type_int64_t int64_t;\n-    #endif\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef __uint64_t_defined\n-    #define __uint64_t_defined\n-    #ifndef uint64_t\n-    typedef unsigned $acx_cv_type_int64_t uint64_t;\n-    #endif\n-    #endif\n-    #endif\n-EOF\n-else\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* some common heuristics for int64_t, using compiler-specific tests */\n-    #if defined __STDC_VERSION__ && (__STDC_VERSION__-0) >= 199901L\n-    #ifndef _INT64_T\n-    #define _INT64_T\n-    #ifndef __int64_t_defined\n-    #ifndef int64_t\n-    typedef long long int64_t;\n-    #endif\n-    #endif\n-    #endif\n-    #ifndef _UINT64_T\n-    #define _UINT64_T\n-    #ifndef uint64_t\n-    typedef unsigned long long uint64_t;\n-    #endif\n-    #endif\n-\n-    #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n-    /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n-       does not implement __extension__.  But that compiler doesn't define\n-       __GNUC_MINOR__.  */\n-    # if __GNUC__ < 2 || (__NeXT__ && !__GNUC_MINOR__)\n-    # define __extension__\n-    # endif\n-\n-    # ifndef _INT64_T\n-    # define _INT64_T\n-    # ifndef int64_t\n-    __extension__ typedef long long int64_t;\n-    # endif\n-    # endif\n-    # ifndef _UINT64_T\n-    # define _UINT64_T\n-    # ifndef uint64_t\n-    __extension__ typedef unsigned long long uint64_t;\n-    # endif\n-    # endif\n-\n-    #elif !defined __STRICT_ANSI__\n-    # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n-\n-    #  ifndef _INT64_T\n-    #  define _INT64_T\n-    #  ifndef int64_t\n-    typedef __int64 int64_t;\n-    #  endif\n-    #  endif\n-    #  ifndef _UINT64_T\n-    #  define _UINT64_T\n-    #  ifndef uint64_t\n-    typedef unsigned __int64 uint64_t;\n-    #  endif\n-    #  endif\n-    # endif /* compiler */\n-\n-    #endif /* ANSI version */\n-EOF\n-fi\n-\n-# ------------- done int64_t types, emit intptr types ------------\n-if test \"$ac_cv_type_uintptr_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n-    #ifndef __uintptr_t_defined\n-    #ifndef uintptr_t\n-    typedef u$acx_cv_type_intptr_t uintptr_t;\n-    #endif\n-    #endif\n-    #ifndef __intptr_t_defined\n-    #ifndef intptr_t\n-    typedef $acx_cv_type_intptr_t  intptr_t;\n-    #endif\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done intptr types, emit int_least types ------------\n-if test \"$ac_cv_type_int_least32_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define int_least types */\n-    typedef int8_t     int_least8_t;\n-    typedef int16_t    int_least16_t;\n-    typedef int32_t    int_least32_t;\n-    #ifdef _INT64_T\n-    typedef int64_t    int_least64_t;\n-    #endif\n-\n-    typedef uint8_t    uint_least8_t;\n-    typedef uint16_t   uint_least16_t;\n-    typedef uint32_t   uint_least32_t;\n-    #ifdef _UINT64_T\n-    typedef uint64_t   uint_least64_t;\n-    #endif\n-EOF\n-fi\n-\n-# ------------- done intptr types, emit int_fast types ------------\n-if test \"$ac_cv_type_int_fast32_t\" != yes; then\n-      sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define int_fast types.  short is often slow */\n-    typedef int8_t       int_fast8_t;\n-    typedef int          int_fast16_t;\n-    typedef int32_t      int_fast32_t;\n-    #ifdef _INT64_T\n-    typedef int64_t      int_fast64_t;\n-    #endif\n-\n-    typedef uint8_t      uint_fast8_t;\n-    typedef unsigned int uint_fast16_t;\n-    typedef uint32_t     uint_fast32_t;\n-    #ifdef _UINT64_T\n-    typedef uint64_t     uint_fast64_t;\n-    #endif\n-EOF\n-fi\n-\n-if test \"$ac_cv_type_uintmax_t\" != yes; then\n-  sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-    /* Define intmax based on what we found */\n-    #ifndef intmax_t\n-    #ifdef _INT64_T\n-    typedef int64_t       intmax_t;\n-    #else\n-    typedef long          intmax_t;\n-    #endif\n-    #endif\n-    #ifndef uintmax_t\n-    #ifdef _UINT64_T\n-    typedef uint64_t      uintmax_t;\n-    #else\n-    typedef unsigned long uintmax_t;\n-    #endif\n-    #endif\n-EOF\n-fi\n-\n-sed 's/^ *//' >> tmp-stdint.h <<EOF\n-\n-  #endif /* GCC_GENERATED_STDINT_H */\n-EOF\n-\n-if test -r gstdint.h && cmp -s tmp-stdint.h gstdint.h; then\n-  rm -f tmp-stdint.h\n-else\n-  mv -f tmp-stdint.h gstdint.h\n-fi\n-\n  ;;\n \n   esac"}, {"sha": "0f9e821c00730b7377f897364cbd230eb326de9d", "filename": "libgomp/configure.ac", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -171,8 +171,6 @@ AC_HEADER_TIME\n ACX_HEADER_STRING\n AC_CHECK_HEADERS(pthread.h unistd.h semaphore.h sys/loadavg.h sys/sysctl.h sys/time.h)\n \n-GCC_HEADER_STDINT(gstdint.h)\n-\n XPCFLAGS=\"\"\n case \"$host\" in\n   *-*-rtems*)"}, {"sha": "abb5c2263c45700d99f8828e5b91572449f88356", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -42,7 +42,7 @@\n #endif\n \n #include \"config.h\"\n-#include \"gstdint.h\"\n+#include <stdint.h>\n #include \"libgomp-plugin.h\"\n #include \"gomp-constants.h\"\n "}, {"sha": "68a60de24faeb910e15cd112c39794346949224b", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -28,7 +28,6 @@\n \n #include \"openacc.h\"\n #include \"libgomp.h\"\n-#include \"libgomp_g.h\"\n #include \"gomp-constants.h\"\n #include \"oacc-int.h\"\n #ifdef HAVE_INTTYPES_H"}, {"sha": "409e138aaca39a0f6cd8e4ec3b3f7abcd9d41842", "filename": "libgomp/plugin/plugin-hsa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fplugin%2Fplugin-hsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fplugin%2Fplugin-hsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-hsa.c?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -28,7 +28,7 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n-#include \"gstdint.h\"\n+#include <stdint.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>"}, {"sha": "9e088612b44286d1428489a890d6d38c5e833acb", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810f316dd62806d46ae7f242ba006b74d7b78446/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=810f316dd62806d46ae7f242ba006b74d7b78446", "patch": "@@ -34,7 +34,6 @@\n #define _GNU_SOURCE\n #include \"openacc.h\"\n #include \"config.h\"\n-#include \"gstdint.h\"\n #include \"libgomp-plugin.h\"\n #include \"oacc-plugin.h\"\n #include \"gomp-constants.h\""}]}