{"sha": "4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU3ZDdiM2Q1ZDVjZWZkNWUxOWE3MzZhODNjMzA3N2Y3Yzk1YmFhZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-03T09:17:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-03T09:17:44Z"}, "message": "re PR c/19449 (__builtin_constant_p cannot resolve to const when optimizing)\n\n\tPR c/19449\n\t* tree.h (force_folding_builtin_constant_p): New decl.\n\t* builtins.c (force_folding_builtin_constant_p): New variable.\n\t(fold_builtin_constant_p): Fold immediately also if\n\tforce_folding_builtin_constant_p.\n\n\t* c-parser.c (c_parser_get_builtin_args): Add choose_expr_p\n\targument.  If set, or it temporarily for parsing of the first\n\targument into force_folding_builtin_constant_p.\n\t(c_parser_postfix_expression): Adjust callers.\n\n\t* gcc.c-torture/execute/pr19449.c: New test.\n\nFrom-SVN: r197393", "tree": {"sha": "ee1f834718a018ae1e4059bf0a7d4d879d20def1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee1f834718a018ae1e4059bf0a7d4d879d20def1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6c9d234044bae3de1941cb7d654dc9d3425fd1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c9d234044bae3de1941cb7d654dc9d3425fd1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c9d234044bae3de1941cb7d654dc9d3425fd1b"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "1d14dd478e697fe061ddbbfe6583fc502f8308af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -1,3 +1,11 @@\n+2013-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/19449\n+\t* tree.h (force_folding_builtin_constant_p): New decl.\n+\t* builtins.c (force_folding_builtin_constant_p): New variable.\n+\t(fold_builtin_constant_p): Fold immediately also if\n+\tforce_folding_builtin_constant_p.\n+\n 2013-04-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56812"}, {"sha": "efab82e968d6a438ace9930e77592954bce1ff5c", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -75,6 +75,9 @@ const char * built_in_names[(int) END_BUILTINS] =\n    initialized to NULL_TREE.  */\n builtin_info_type builtin_info;\n \n+/* Non-zero if __builtin_constant_p should be folded right away.  */\n+bool force_folding_builtin_constant_p;\n+\n static const char *c_getstr (tree);\n static rtx c_readstr (const char *, enum machine_mode);\n static int target_char_cast (tree, char *);\n@@ -6974,7 +6977,8 @@ fold_builtin_constant_p (tree arg)\n       || AGGREGATE_TYPE_P (TREE_TYPE (arg))\n       || POINTER_TYPE_P (TREE_TYPE (arg))\n       || cfun == 0\n-      || folding_initializer)\n+      || folding_initializer\n+      || force_folding_builtin_constant_p)\n     return integer_zero_node;\n \n   return NULL_TREE;"}, {"sha": "771a55742b8c5b7ddb98546e44459ea0b435a0d3", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -1,3 +1,11 @@\n+2013-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/19449\n+\t* c-parser.c (c_parser_get_builtin_args): Add choose_expr_p\n+\targument.  If set, or it temporarily for parsing of the first\n+\targument into force_folding_builtin_constant_p.\n+\t(c_parser_postfix_expression): Adjust callers.\n+\n 2013-03-21  Richard Biener  <rguenther@suse.de>\n \n \t* c-objc-common.c (c_tree_printer): Use DECL_HAS_DEBUG_EXPR_P"}, {"sha": "f60f1414eb4b4e4a645ca28455ccf03286f9d49a", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -6114,11 +6114,13 @@ c_parser_alignof_expression (c_parser *parser)\n    stores the arguments in CEXPR_LIST.  */\n static bool\n c_parser_get_builtin_args (c_parser *parser, const char *bname,\n-\t\t\t   vec<c_expr_t, va_gc> **ret_cexpr_list)\n+\t\t\t   vec<c_expr_t, va_gc> **ret_cexpr_list,\n+\t\t\t   bool choose_expr_p)\n {\n   location_t loc = c_parser_peek_token (parser)->location;\n   vec<c_expr_t, va_gc> *cexpr_list;\n   c_expr_t expr;\n+  bool saved_force_folding_builtin_constant_p;\n \n   *ret_cexpr_list = NULL;\n   if (c_parser_next_token_is_not (parser, CPP_OPEN_PAREN))\n@@ -6135,7 +6137,12 @@ c_parser_get_builtin_args (c_parser *parser, const char *bname,\n       return true;\n     }\n \n+  saved_force_folding_builtin_constant_p\n+    = force_folding_builtin_constant_p;\n+  force_folding_builtin_constant_p |= choose_expr_p;\n   expr = c_parser_expr_no_commas (parser, NULL);\n+  force_folding_builtin_constant_p\n+    = saved_force_folding_builtin_constant_p;\n   vec_alloc (cexpr_list, 1);\n   C_EXPR_APPEND (cexpr_list, expr);\n   while (c_parser_next_token_is (parser, CPP_COMMA))\n@@ -6509,7 +6516,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t    c_parser_consume_token (parser);\n \t    if (!c_parser_get_builtin_args (parser,\n \t\t\t\t\t    \"__builtin_choose_expr\",\n-\t\t\t\t\t    &cexpr_list))\n+\t\t\t\t\t    &cexpr_list, true))\n \t      {\n \t\texpr.value = error_mark_node;\n \t\tbreak;\n@@ -6591,7 +6598,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t    c_parser_consume_token (parser);\n \t    if (!c_parser_get_builtin_args (parser,\n \t\t\t\t\t    \"__builtin_complex\",\n-\t\t\t\t\t    &cexpr_list))\n+\t\t\t\t\t    &cexpr_list, false))\n \t      {\n \t\texpr.value = error_mark_node;\n \t\tbreak;\n@@ -6653,7 +6660,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t    c_parser_consume_token (parser);\n \t    if (!c_parser_get_builtin_args (parser,\n \t\t\t\t\t    \"__builtin_shuffle\",\n-\t\t\t\t\t    &cexpr_list))\n+\t\t\t\t\t    &cexpr_list, false))\n \t      {\n \t\texpr.value = error_mark_node;\n \t\tbreak;"}, {"sha": "c7265259070b91b4c06c33a39d52972351989a5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -1,3 +1,8 @@\n+2013-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/19449\n+\t* gcc.c-torture/execute/pr19449.c: New test.\n+\n 2013-04-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56812"}, {"sha": "63cc2e74e190ee73c847b7750864d5182d5feb5c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr19449.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19449.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19449.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19449.c?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -0,0 +1,20 @@\n+/* PR c/19449 */\n+\n+extern void abort (void);\n+\n+int y;\n+int z = __builtin_choose_expr (!__builtin_constant_p (y), 3, 4);\n+\n+int\n+foo (int x)\n+{\n+  return __builtin_choose_expr (!__builtin_constant_p (x), 3, y++);\n+}\n+\n+int\n+main ()\n+{\n+  if (y || z != 3 || foo (4) != 3)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f9114597e250304f2114052876b4dbf166f94c68", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4e7d7b3d5d5cefd5e19a736a83c3077f7c95baad", "patch": "@@ -5855,6 +5855,10 @@ fold_build_pointer_plus_hwi_loc (location_t loc, tree ptr, HOST_WIDE_INT off)\n \tfold_build_pointer_plus_hwi_loc (UNKNOWN_LOCATION, p, o)\n \n /* In builtins.c */\n+\n+/* Non-zero if __builtin_constant_p should be folded right away.  */\n+extern bool force_folding_builtin_constant_p;\n+\n extern bool avoid_folding_inline_builtin (tree);\n extern tree fold_call_expr (location_t, tree, bool);\n extern tree fold_builtin_fputs (location_t, tree, tree, bool, bool, tree);"}]}