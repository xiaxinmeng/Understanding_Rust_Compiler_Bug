{"sha": "d158303227fdca143db5decf983978f635be2ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE1ODMwMzIyN2ZkY2ExNDNkYjVkZWNmOTgzOTc4ZjYzNWJlMmJhOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-09-03T21:00:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-09-03T21:00:05Z"}, "message": "options.texi (SeparateAlias): Document.\n\n\t* doc/options.texi (SeparateAlias): Document.\n\t* opt-functions.awk (switch_flags): Handle SeparateAlias.\n\t* opth-gen.awk: Generate enumeration names for options marked\n\tSeparateAlias, but not for those marked Ignore.\n\t* opts-common.c (generate_canonical_option): Don't output separate\n\targument for options marked CL_SEPARATE_ALIAS.\n\t(decode_cmdline_option): Handle CL_SEPARATE_ALIAS.\n\t* opts.h (CL_SEPARATE_ALIAS): New.\n\t(CL_PARAMS, CL_WARNING, CL_OPTIMIZATION, CL_DRIVER, CL_TARGET,\n\tCL_COMMON): Adjust definitions.\n\t* config/i386/darwin.opt, config/mips/sde.opt: New.\n\t* common.opt (fdump-final-insns): New.\n\t* config.gcc (i[34567]86-*-darwin*, x86_64-*-darwin*): Add\n\ti386/darwin.opt.\n\t(mips*-sde-elf*): Add mips/sde.opt.\n\t* config/mips/sde.h (DRIVER_SELF_SPECS): Don't handle\n\t-mno-data-in-code and -mcode-xonly here.\n\t* defaults.h (DEFAULT_SWITCH_TAKES_ARG): Add 'd'.\n\t* gcc.c (option_map): Add \"j\" to --dump entry.\n\t(translate_options): Don't translate -d to -foutput-class-dir=\n\there.\n\njava:\n\t* lang.opt (d): New.\n\ntestsuite:\n\t* gcc.dg/opts-4.c: New test.\n\nFrom-SVN: r163844", "tree": {"sha": "4c595a910219a400780aabf660892ec4ce06400f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c595a910219a400780aabf660892ec4ce06400f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d158303227fdca143db5decf983978f635be2ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d158303227fdca143db5decf983978f635be2ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d158303227fdca143db5decf983978f635be2ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d158303227fdca143db5decf983978f635be2ba9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6bc4de90d944db687e20de1ac5fbebe32c9642d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6bc4de90d944db687e20de1ac5fbebe32c9642d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6bc4de90d944db687e20de1ac5fbebe32c9642d"}], "stats": {"total": 160, "additions": 131, "deletions": 29}, "files": [{"sha": "6e30c005c6d9632e230a620ff5a0065b0b92a128", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1,3 +1,27 @@\n+2010-09-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/options.texi (SeparateAlias): Document.\n+\t* opt-functions.awk (switch_flags): Handle SeparateAlias.\n+\t* opth-gen.awk: Generate enumeration names for options marked\n+\tSeparateAlias, but not for those marked Ignore.\n+\t* opts-common.c (generate_canonical_option): Don't output separate\n+\targument for options marked CL_SEPARATE_ALIAS.\n+\t(decode_cmdline_option): Handle CL_SEPARATE_ALIAS.\n+\t* opts.h (CL_SEPARATE_ALIAS): New.\n+\t(CL_PARAMS, CL_WARNING, CL_OPTIMIZATION, CL_DRIVER, CL_TARGET,\n+\tCL_COMMON): Adjust definitions.\n+\t* config/i386/darwin.opt, config/mips/sde.opt: New.\n+\t* common.opt (fdump-final-insns): New.\n+\t* config.gcc (i[34567]86-*-darwin*, x86_64-*-darwin*): Add\n+\ti386/darwin.opt.\n+\t(mips*-sde-elf*): Add mips/sde.opt.\n+\t* config/mips/sde.h (DRIVER_SELF_SPECS): Don't handle\n+\t-mno-data-in-code and -mcode-xonly here.\n+\t* defaults.h (DEFAULT_SWITCH_TAKES_ARG): Add 'd'.\n+\t* gcc.c (option_map): Add \"j\" to --dump entry.\n+\t(translate_options): Don't translate -d to -foutput-class-dir=\n+\there.\n+\n 2010-09-03  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-data-ref.c (dr_may_alias_p): Replace !DR_IS_READ with"}, {"sha": "e915ee366ccd9e6254a5f7d2fc419f22e9a6a57d", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -543,6 +543,9 @@ fdump-\n Common Joined RejectNegative\n -fdump-<type>\tDump various compiler internals to a file\n \n+fdump-final-insns\n+Driver RejectNegative\n+\n fdump-final-insns=\n Common RejectNegative Joined Var(flag_dump_final_insns)\n -fdump-final-insns=filename\tDump to filename the insns at the end of translation"}, {"sha": "d33d1c6832b3adb0a38eac84e9885f6684197bce", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1135,12 +1135,14 @@ i[34567]86-*-darwin*)\n \t# support.\n \twith_cpu=${with_cpu:-generic}\n \ttmake_file=\"${tmake_file} t-slibgcc-darwin i386/t-crtpc i386/t-crtfm\"\n+\textra_options=\"${extra_options} i386/darwin.opt\"\n \tlto_binary_reader=lto-macho\n \t;;\n x86_64-*-darwin*)\n \twith_cpu=${with_cpu:-generic}\n \ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin64 t-slibgcc-darwin i386/t-crtpc i386/t-crtfm\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n+\textra_options=\"${extra_options} i386/darwin.opt\"\n \tlto_binary_reader=lto-macho\n \t;;\n i[34567]86-*-elf*)\n@@ -1811,6 +1813,7 @@ mips*-*-openbsd*)\n mips*-sde-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/sde.h\"\n \ttmake_file=\"mips/t-sde mips/t-libgcc-mips16\"\n+\textra_options=\"${extra_options} mips/sde.opt\"\n \tcase \"${with_newlib}\" in\n \t  yes)\n \t    # newlib / libgloss."}, {"sha": "89726d8f506150ea82a12c04c7faaf9a886c8ce3", "filename": "gcc/config/i386/darwin.opt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fi386%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fi386%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.opt?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -0,0 +1,22 @@\n+; Darwin options for IA32 port.\n+;\n+; Copyright (C) 2010 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+mdynamic-no-pic\n+Target RejectNegative Ignore"}, {"sha": "29eaccc87242345bdeb2e8a0dc2fdbb3e24e0a86", "filename": "gcc/config/mips/sde.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fmips%2Fsde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fmips%2Fsde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsde.h?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    MIPS SDE version.\n-   Copyright (C) 2003, 2004, 2007, 2008, 2009\n+   Copyright (C) 2003, 2004, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -42,13 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n      things like LINK_SPEC easier to write.  */\t\t\t\t\\\n   \"%{!EB:%{!EL:%(endian_spec)}}\",\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  /* -mcode-xonly is a traditional alias for -mcode-readable=pcrel and\t\\\n-     -mno-data-in-code is a traditional alias for -mcode-readable=no.\t\\\n-     The latter trumps the former.  */\t\t\t\t\t\\\n-  \"%{mno-data-in-code: -mcode-readable=no}\",\t\t\t\t\\\n-  \"%{!mcode-readable=no: %{mcode-xonly: -mcode-readable=pcrel}}\",\t\\\n-  \"%<mno-data-in-code %<mcode-xonly\",\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n   /* Configuration-independent MIPS rules.  */\t\t\t\t\\\n   BASE_DRIVER_SELF_SPECS\t\t\t\t\n "}, {"sha": "61b0ebedd138337d1a116bc515af52037b33aa2c", "filename": "gcc/config/mips/sde.opt", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fmips%2Fsde.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fconfig%2Fmips%2Fsde.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsde.opt?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -0,0 +1,28 @@\n+; MIPS SDE options.\n+;\n+; Copyright (C) 2010 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+; -mcode-xonly is a traditional alias for -mcode-readable=pcrel and\n+; -mno-data-in-code is a traditional alias for -mcode-readable=no.\n+\n+mno-data-in-code\n+Target RejectNegative Alias(mcode-readable=, no)\n+\n+mcode-xonly\n+Target RejectNegative Alias(mcode-readable=, pcrel)"}, {"sha": "e30ec17f26b2b176ac240659e3b085c3e916f04a", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -39,7 +39,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n    || (CHAR) == 'I' || (CHAR) == 'J' || (CHAR) == 'm' \\\n    || (CHAR) == 'x' || (CHAR) == 'L' || (CHAR) == 'A' \\\n-   || (CHAR) == 'B' )\n+   || (CHAR) == 'B' || (CHAR) == 'd')\n \n /* This defines which multi-letter switches take arguments.  */\n "}, {"sha": "c224bbdd039e4ff6936135398105806cc3a6821c", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -278,6 +278,13 @@ This option is ignored apart from printing any warning specified using\n @code{Warn}.  The option will not be seen by specs and no @samp{OPT_}\n enumeration value is defined for it.\n \n+@item SeparateAlias\n+For an option marked with @code{Joined}, @code{Separate} and\n+@code{Alias}, the option only acts as an alias when passed a separate\n+argument; with a joined argument it acts as a normal option, with an\n+@samp{OPT_} enumeration value.  This is for compatibility with the\n+Java @option{-d} option and should not be used for new options.\n+\n @item Warn(@var{message})\n If this option is used, output the warning @var{message}.\n @var{message} is a format string, either taking a single operand with"}, {"sha": "479d7daf2ffecd0257f7ed65f7cc00c44dfaf53f", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1085,7 +1085,7 @@ static const struct option_map option_map[] =\n    {\"--debug\", \"-g\", \"oj\"},\n    {\"--define-macro\", \"-D\", \"aj\"},\n    {\"--dependencies\", \"-M\", 0},\n-   {\"--dump\", \"-d\", \"a\"},\n+   {\"--dump\", \"-d\", \"aj\"},\n    {\"--dumpbase\", \"-dumpbase\", \"a\"},\n    {\"--dumpdir\", \"-dumpdir\", \"a\"},\n    {\"--encoding\", \"-fencoding=\", \"aj\"},\n@@ -1368,16 +1368,6 @@ translate_options (int *argcp, const char *const **argvp)\n \t  if (nskip + i > argc)\n \t    nskip = argc - i;\n \n-\t  /* Convert -d with a separate argument to\n-\t     -foutput-class-dir= for Java.  */\n-\t  if (c == 'd' && p[1] == 0 && argv[i + 1] != NULL)\n-\t    {\n-\t      newv[newindex++] = concat (\"-foutput-class-dir=\", argv[i + 1],\n-\t\t\t\t\t NULL);\n-\t      nskip = 0;\n-\t      i += 2;\n-\t    }\n-\n \t  while (nskip > 0)\n \t    {\n \t      newv[newindex++] = argv[i++];"}, {"sha": "2866cf949d1f868e794b60b69fcb79ed5b972842", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1,3 +1,7 @@\n+2010-09-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lang.opt (d): New.\n+\n 2010-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR java/45504"}, {"sha": "7350ccbe08cee312fa7274475f84d056e55ef841", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -93,6 +93,10 @@ Java Separate Alias(fbootclasspath=)\n classpath\n Java Separate Alias(fclasspath=)\n \n+d\n+Java Separate SeparateAlias Alias(foutput-class-dir=)\n+; Different from language-independent -d with joined argument.\n+\n encoding\n Java Separate Alias(fencoding=)\n "}, {"sha": "ed65d930f3408da58325b6a4d161150556c74793", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -81,6 +81,7 @@ function switch_flags (flags)\n \t  test_flag(\"Driver\", flags, \" | CL_DRIVER\") \\\n \t  test_flag(\"RejectDriver\", flags, \" | CL_REJECT_DRIVER\") \\\n \t  test_flag(\"NoDriverArg\", flags, \" | CL_NO_DRIVER_ARG\") \\\n+\t  test_flag(\"SeparateAlias\", flags, \" | CL_SEPARATE_ALIAS\") \\\n \t  test_flag(\"Save\", flags, \" | CL_SAVE\") \\\n \t  test_flag(\"Joined\", flags, \" | CL_JOINED\") \\\n \t  test_flag(\"JoinedOrMissing\", flags, \" | CL_JOINED | CL_MISSING_OK\") \\"}, {"sha": "0d1d0df375af7cc1942d0208396fcb466b8bf533", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -334,7 +334,9 @@ for (i = 0; i < n_opts; i++) {\n \tenum_string = enum \" = \" enum_value \",\"\n \n \t# Aliases do not get enumeration names.\n-\tif (flag_set_p(\"Alias.*\", flags[i])) {\n+\tif ((flag_set_p(\"Alias.*\", flags[i]) \\\n+\t     && !flag_set_p(\"SeparateAlias\", flags[i])) \\\n+\t    || flag_set_p(\"Ignore\", flags[i])) {\n \t\tenum_string = \"/* \" enum_string \" */\"\n \t}\n "}, {"sha": "8299edd4ab96ec3d59706fc057d134dae6017ccd", "filename": "gcc/opts-common.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -174,7 +174,8 @@ generate_canonical_option (size_t opt_index, const char *arg, int value,\n \n   if (arg)\n     {\n-      if (option->flags & CL_SEPARATE)\n+      if ((option->flags & CL_SEPARATE)\n+\t  && !(option->flags & CL_SEPARATE_ALIAS))\n \t{\n \t  decoded->canonical_option[0] = opt_text;\n \t  decoded->canonical_option[1] = arg;\n@@ -217,6 +218,7 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n   const char *warn_message = NULL;\n   bool separate_arg_flag;\n   bool joined_arg_flag;\n+  bool have_separate_arg = false;\n \n   opt = argv[0];\n \n@@ -286,6 +288,8 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n \t      result = 2;\n \t      if (arg == NULL)\n \t\tresult = 1;\n+\t      else\n+\t\thave_separate_arg = true;\n \t    }\n \t  else\n \t    /* Missing argument.  */\n@@ -298,14 +302,17 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n       result = 2;\n       if (arg == NULL)\n \tresult = 1;\n+      else\n+\thave_separate_arg = true;\n     }\n \n   if (arg == NULL && (separate_arg_flag || joined_arg_flag))\n     errors |= CL_ERR_MISSING_ARG;\n \n   /* Is this option an alias (or an ignored option, marked as an alias\n      of OPT_SPECIAL_ignore)?  */\n-  if (option->alias_target != N_OPTS)\n+  if (option->alias_target != N_OPTS\n+      && (!(option->flags & CL_SEPARATE_ALIAS) || have_separate_arg))\n     {\n       size_t new_opt_index = option->alias_target;\n "}, {"sha": "ed175e5de4a6f1309852acf9858d0e7f75d735ab", "filename": "gcc/opts.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -71,12 +71,12 @@ extern const unsigned int cl_options_count;\n extern const char *const lang_names[];\n extern const unsigned int cl_lang_count;\n \n-#define CL_PARAMS               (1 << 14) /* Fake entry.  Used to display --param info with --help.  */\n-#define CL_WARNING\t\t(1 << 15) /* Enables an (optional) warning message.  */\n-#define CL_OPTIMIZATION\t\t(1 << 16) /* Enables an (optional) optimization.  */\n-#define CL_DRIVER\t\t(1 << 17) /* Driver option.  */\n-#define CL_TARGET\t\t(1 << 18) /* Target-specific option.  */\n-#define CL_COMMON\t\t(1 << 19) /* Language-independent.  */\n+#define CL_PARAMS               (1 << 13) /* Fake entry.  Used to display --param info with --help.  */\n+#define CL_WARNING\t\t(1 << 14) /* Enables an (optional) warning message.  */\n+#define CL_OPTIMIZATION\t\t(1 << 15) /* Enables an (optional) optimization.  */\n+#define CL_DRIVER\t\t(1 << 16) /* Driver option.  */\n+#define CL_TARGET\t\t(1 << 17) /* Target-specific option.  */\n+#define CL_COMMON\t\t(1 << 18) /* Language-independent.  */\n \n #define CL_MIN_OPTION_CLASS\tCL_PARAMS\n #define CL_MAX_OPTION_CLASS\tCL_COMMON\n@@ -86,6 +86,7 @@ extern const unsigned int cl_lang_count;\n    This distinction is important because --help will not list options\n    which only have these higher bits set.  */\n \n+#define CL_SEPARATE_ALIAS\t(1 << 19) /* Option is an alias when used with separate argument.  */\n #define CL_NO_DRIVER_ARG\t(1 << 20) /* Option takes no argument in the driver.  */\n #define CL_REJECT_DRIVER\t(1 << 21) /* Reject this option in the driver.  */\n #define CL_SAVE\t\t\t(1 << 22) /* Target-specific option for attribute.  */"}, {"sha": "9834ddd02f85f8064ecffe0909b4e7af9faaa58b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -1,3 +1,7 @@\n+2010-09-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/opts-4.c: New test.\n+\n 2010-09-03  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/vect/vect-peel-3.c: XFAIL if vect_no_align."}, {"sha": "11bfbed8a6a3a0e0cd9dc023e83f0218e94e5621", "filename": "gcc/testsuite/gcc.dg/opts-4.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d158303227fdca143db5decf983978f635be2ba9/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d158303227fdca143db5decf983978f635be2ba9/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fopts-4.c?ref=d158303227fdca143db5decf983978f635be2ba9", "patch": "@@ -0,0 +1,9 @@\n+/* --dump= should translate to -d with joined operand.  */\n+/* { dg-do compile } */\n+/* { dg-options \"--dump=a\" } */\n+\n+void f (void)\n+{\n+}\n+\n+/* { dg-final { cleanup-rtl-dump \"*\" } } */"}]}