{"sha": "9a54d96aabdc4501573aa0cd2f5201a206963f69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1NGQ5NmFhYmRjNDUwMTU3M2FhMGNkMmY1MjAxYTIwNjk2M2Y2OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-16T10:02:11Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-16T10:02:11Z"}, "message": "re PR c++/56582 (ICE on negative array index in C++11 constant expression evaluation)\n\n/cp\n2013-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56582\n\t* semantics.c (cxx_eval_array_reference): Check for negative index.\n\n/testsuite\n2013-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56582\n\t* g++.dg/cpp0x/constexpr-array5.C: New.\n\nFrom-SVN: r196701", "tree": {"sha": "59a32bada7f76cd8102c15b035d47d35fc111bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59a32bada7f76cd8102c15b035d47d35fc111bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a54d96aabdc4501573aa0cd2f5201a206963f69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a54d96aabdc4501573aa0cd2f5201a206963f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a54d96aabdc4501573aa0cd2f5201a206963f69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a54d96aabdc4501573aa0cd2f5201a206963f69/comments", "author": null, "committer": null, "parents": [{"sha": "179c5970e6e4ed3e1ca9f8ba6e9c07c3510d4114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179c5970e6e4ed3e1ca9f8ba6e9c07c3510d4114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179c5970e6e4ed3e1ca9f8ba6e9c07c3510d4114"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "3f05f291ea603ba44a566141378a781f5a7adfc3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a54d96aabdc4501573aa0cd2f5201a206963f69", "patch": "@@ -1,3 +1,8 @@\n+2013-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56582\n+\t* semantics.c (cxx_eval_array_reference): Check for negative index.\n+\n 2013-03-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/56614"}, {"sha": "3c76bad5a3d59ced69bbb8293fc6860da27de1ae", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9a54d96aabdc4501573aa0cd2f5201a206963f69", "patch": "@@ -7007,6 +7007,13 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n       *non_constant_p = true;\n       return t;\n     }\n+  else if (tree_int_cst_lt (index, integer_zero_node))\n+    {\n+      if (!allow_non_constant)\n+\terror (\"negative array subscript\");\n+      *non_constant_p = true;\n+      return t;\n+    }\n   i = tree_low_cst (index, 0);\n   if (TREE_CODE (ary) == CONSTRUCTOR)\n     return (*CONSTRUCTOR_ELTS (ary))[i].value;"}, {"sha": "f9fb7f63e6aad16d5907cf9458c70fa7dbf6a095", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a54d96aabdc4501573aa0cd2f5201a206963f69", "patch": "@@ -1,7 +1,12 @@\n+2013-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56582\n+\t* g++.dg/cpp0x/constexpr-array5.C: New.\n+\n 2013-03-15  Tobias Burnus  <burnus@net-b.de>\n \n-\tPR fortran/56615                                                                                                                \n-\t* gfortran.dg/transfer_intrinsic_5.f90: New.                                                                                    \n+\tPR fortran/56615\n+\t* gfortran.dg/transfer_intrinsic_5.f90: New.\n \n 2013-03-15  Kai Tietz  <ktietz@redhat.com>\n "}, {"sha": "4605b4be902b247a135a1cfc7ed80016b7606975", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array5.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a54d96aabdc4501573aa0cd2f5201a206963f69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array5.C?ref=9a54d96aabdc4501573aa0cd2f5201a206963f69", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/56582\n+// { dg-do compile { target c++11 } }\n+\n+// Reliable ICE\n+constexpr int n[3] = {};\n+constexpr int k = n[-1];            // { dg-error \"negative\" }\n+\n+// Some random byte\n+constexpr char c = \"foo\"[-1000];    // { dg-error \"negative\" }"}]}