{"sha": "b87520cd051656e14f59112793d66c259ffd4f52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3NTIwY2QwNTE2NTZlMTRmNTkxMTI3OTNkNjZjMjU5ZmZkNGY1Mg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-07-04T13:26:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:26:18Z"}, "message": "mlib-tgt-tru64.adb, [...] (Build_Dynamic_Library): Remove all auto-initialization code...\n\n2005-07-04  Vincent Celier  <celier@adacore.com>\n\n\t* mlib-tgt-tru64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb,\n\tmlib-tgt-hpux.adb, mlib-tgt-linux.adb, mlib-tgt-solaris.adb,\n\tmlib-tgt-mingw.adb, mlib-tgt-darwin.adb (Build_Dynamic_Library):\n\tRemove all auto-initialization code, as this is now done through the\n\tconstructor mechanism.\n\n\t* adaint.h, adaint.c (__gnat_binder_supports_auto_init,\n\t__gnat_sals_init_using_constructors): New functions.\n\n\t* bindgen.adb (Gen_Output_File_Ada): Generate pragmas\n\tLinker_Constructor and Linker_Destructor when switch -a is used.\n\n\t* bindusg.adb: Add line for new switch -a\n\n\t* gnatbind.adb (Gnatbind_Supports_Auto_Init): New Boolean function\n\t(Gnatbind): When switch -a is used, check if it is allowed\n\n\t* switch-b.adb (Scan_Binder_Switches): Process new switch -a\n\nFrom-SVN: r101573", "tree": {"sha": "d05fc3ff905800886f21e31cfce3310be6ebf1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05fc3ff905800886f21e31cfce3310be6ebf1a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b87520cd051656e14f59112793d66c259ffd4f52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87520cd051656e14f59112793d66c259ffd4f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87520cd051656e14f59112793d66c259ffd4f52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87520cd051656e14f59112793d66c259ffd4f52/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0556b702920f8de9acfdff66e27c2e0155c41365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0556b702920f8de9acfdff66e27c2e0155c41365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0556b702920f8de9acfdff66e27c2e0155c41365"}], "stats": {"total": 457, "additions": 120, "deletions": 337}, "files": [{"sha": "e1453f7e4404a761d33e9f37b6286771454fb791", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -2028,14 +2028,19 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n char *\n __gnat_locate_exec (char *exec_name, char *path_val)\n {\n+  char *ptr;\n   if (!strstr (exec_name, HOST_EXECUTABLE_SUFFIX))\n     {\n       char *full_exec_name\n         = alloca (strlen (exec_name) + strlen (HOST_EXECUTABLE_SUFFIX) + 1);\n \n       strcpy (full_exec_name, exec_name);\n       strcat (full_exec_name, HOST_EXECUTABLE_SUFFIX);\n-      return __gnat_locate_regular_file (full_exec_name, path_val);\n+      ptr = __gnat_locate_regular_file (full_exec_name, path_val);\n+\n+      if (ptr == 0)\n+         return __gnat_locate_regular_file (exec_name, path_val);\n+      return ptr;\n     }\n   else\n     return __gnat_locate_regular_file (exec_name, path_val);\n@@ -2668,3 +2673,27 @@ __gnat_set_close_on_exec (int fd ATTRIBUTE_UNUSED,\n      as by default handles are *not* inherited. */\n #endif\n }\n+\n+/* Indicates if platforms supports automatic initialization through the\n+   constructor mechanism */\n+int\n+__gnat_binder_supports_auto_init ()\n+{\n+#ifdef VMS\n+   return 0;\n+#else\n+   return 1;\n+#endif\n+}\n+\n+/* Indicates that Stand-Alone Libraries are automatically initialized through\n+   the constructor mechanism */\n+int\n+__gnat_sals_init_using_constructors ()\n+{\n+#if defined (__vxworks) || defined (__Lynx__) || defined (VMS)\n+   return 0;\n+#else\n+   return 1;\n+#endif\n+}"}, {"sha": "af83407e01192d186668a54d58d49aecc46a2a15", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -167,4 +167,7 @@ extern int get_gcc_version\t\t     (void);\n /* This function offers a hook for libgnarl to set the\n    locking subprograms for libgcc_eh. */\n extern void __gnatlib_install_locks\t     (void (*) (void),\n-\t\t\t\t\t      void (*) (void));\n+                                          void (*) (void));\n+\n+extern int __gnat_binder_supports_auto_init (void);\n+extern int __gnat_sals_init_using_constructors (void);"}, {"sha": "e37a386a9be2c3903b5e2ec1ede3093a093d2299", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -2351,11 +2351,19 @@ package body Bindgen is\n       WBI (\"   pragma Export (C, \" & Ada_Final_Name.all & \", \"\"\" &\n            Ada_Final_Name.all & \"\"\");\");\n \n+      if Use_Pragma_Linker_Constructor then\n+         WBI (\"   pragma Linker_Destructor (\" & Ada_Final_Name.all & \");\");\n+      end if;\n+\n       WBI (\"\");\n       WBI (\"   procedure \" & Ada_Init_Name.all & \";\");\n       WBI (\"   pragma Export (C, \" & Ada_Init_Name.all & \", \"\"\" &\n            Ada_Init_Name.all & \"\"\");\");\n \n+      if Use_Pragma_Linker_Constructor then\n+         WBI (\"   pragma Linker_Constructor (\" & Ada_Init_Name.all & \");\");\n+      end if;\n+\n       if Bind_Main_Program then\n \n          --  If we have the standard library, then Break_Start is defined"}, {"sha": "60deb26b37471c3befbfb9f15797bc0c7c3b52ba", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -51,6 +51,11 @@ begin\n    Write_Str (\"  -aIdir    Specify source files search path\");\n    Write_Eol;\n \n+   --  Line for a switch\n+\n+   Write_Str (\"  -a        Automatically initialize elaboration procedure\");\n+   Write_Eol;\n+\n    --  Line for A switch\n \n    Write_Str (\"  -A        Generate binder program in Ada (default)\");"}, {"sha": "cbd3ceabf6edd853e645ee3725f98c09d8b7fc00", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -75,6 +75,10 @@ procedure Gnatbind is\n \n    Mapping_File : String_Ptr := null;\n \n+   function Gnatbind_Supports_Auto_Init return Boolean;\n+   --  Indicates if automatic initialization of elaboration procedure\n+   --  through the constructor mechanism is possible on the platform.\n+\n    procedure List_Applicable_Restrictions;\n    --  List restrictions that apply to this partition if option taken\n \n@@ -83,6 +87,18 @@ procedure Gnatbind is\n    --  All the one character arguments are still handled by Switch. This\n    --  routine handles -aO -aI and -I-.\n \n+   ---------------------------------\n+   -- Gnatbind_Supports_Auto_Init --\n+   ---------------------------------\n+\n+   function Gnatbind_Supports_Auto_Init return Boolean is\n+      function gnat_binder_supports_auto_init return Integer;\n+      pragma Import (C, gnat_binder_supports_auto_init,\n+                     \"__gnat_binder_supports_auto_init\");\n+   begin\n+      return gnat_binder_supports_auto_init /= 0;\n+   end Gnatbind_Supports_Auto_Init;\n+\n    ----------------------------------\n    -- List_Applicable_Restrictions --\n    ----------------------------------\n@@ -393,6 +409,19 @@ begin\n       Next_Arg := Next_Arg + 1;\n    end loop Scan_Args;\n \n+   if Use_Pragma_Linker_Constructor then\n+      if Bind_Main_Program then\n+         Fail (\"switch -a must be used in conjunction with -n or -Lxxx\");\n+\n+      elsif not Ada_Bind_File then\n+         Fail (\"switch -a cannot be used when C code is generated\");\n+\n+      elsif not Gnatbind_Supports_Auto_Init then\n+         Fail (\"automatic initialisation of elaboration \" &\n+               \"not supported on this platform\");\n+      end if;\n+   end if;\n+\n    --  Test for trailing -o switch\n \n    if Opt.Output_File_Name_Present"}, {"sha": "80b3a4b7d645cfced3dd062ea25a31e16811eb24", "filename": "gcc/ada/mlib-tgt-aix.adb", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-aix.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -47,12 +47,6 @@ package body MLib.Tgt is\n    No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n    Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n \n-   Wl_Initfini_String  : constant String := \"-Wl,-binitfini:\";\n-\n-   Init_Fini_List      :  constant Argument_List_Access :=\n-                            new Argument_List'(1 => null);\n-   --  Used to put switch for automatic elaboration/finalization\n-\n    Bexpall : aliased String := \"-Wl,-bexpall\";\n    Bexpall_Option : constant String_Access := Bexpall'Access;\n    --  The switch to export all symbols\n@@ -142,16 +136,13 @@ package body MLib.Tgt is\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Lib_Version);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n                    MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n       --  The file name of the library\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-      --  The switch for automatic initialization of Stand-Alone Libraries.\n-      --  Changed to a real switch when Auto_Init is True.\n-\n       Thread_Opts : Argument_List_Access := Empty_Argument_List;\n       --  Set to Thread_Options if -lgnarl is found in the Options\n \n@@ -161,15 +152,6 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (1) :=\n-           new String'(Wl_Initfini_String & Lib_Filename & \"init:\" &\n-                       Lib_Filename & \"final\");\n-      end if;\n-\n       --  Look for -lgnarl in Options. If found, set the thread options.\n \n       for J in Options'Range loop\n@@ -223,7 +205,7 @@ package body MLib.Tgt is\n       MLib.Utl.Gcc\n         (Output_File => Lib_File,\n          Objects     => Ofiles,\n-         Options     => Options & Bexpall_Option & Init_Fini.all,\n+         Options     => Options & Bexpall_Option,\n          Driver_Name => Driver_Name,\n          Options_2   => Options_2 & Thread_Opts.all);\n    end Build_Dynamic_Library;"}, {"sha": "a152ed322a87187677684f77b1a60ee7d9ba4370", "filename": "gcc/ada/mlib-tgt-darwin.adb", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-darwin.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -43,19 +43,6 @@ package body MLib.Tgt is\n    use GNAT;\n    use MLib;\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : aliased String         := \"-Wl,-init\";\n-   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => Wl_Init,\n-                                          2 => null);\n-   --  Used to put switches for automatic elaboration. Note that there is no\n-   --  linking option on Darwin for automatic finalization of a shared\n-   --  library.\n-\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -123,6 +110,7 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -131,8 +119,6 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n@@ -141,16 +127,11 @@ package body MLib.Tgt is\n \n       --  If specified, add automatic elaboration/finalization\n \n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (2) := new String'(\"-Wl,_\" & Lib_Filename & \"init\");\n-      end if;\n-\n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options & Init_Fini.all,\n+            Options     => Options,\n             Driver_Name => Driver_Name,\n             Options_2   => Options_2);\n \n@@ -165,7 +146,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -174,7 +155,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed :="}, {"sha": "62172c79eaeb173cd1a4a4d789171d8e47e281a7", "filename": "gcc/ada/mlib-tgt-hpux.adb", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-hpux.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -40,20 +40,6 @@ with System;\n \n package body MLib.Tgt is\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : aliased String         := \"-Wl,+init\";\n-   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n-   Wl_Fini_String : aliased String         := \"-Wl,+fini\";\n-   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => Wl_Init,\n-                                          2 => null,\n-                                          3 => Wl_Fini,\n-                                          4 => null);\n-   --  Used to put switches for automatic elaboration/finalization\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -121,6 +107,7 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -129,8 +116,6 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n       Common_Options : constant Argument_List :=\n                          Options & new String'(PIC_Option);\n       --  Common set of options to the gcc command performing the link.\n@@ -144,19 +129,11 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n-         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n-      end if;\n-\n       if Lib_Version = \"\" then\n          MLib.Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Common_Options & Init_Fini.all,\n+            Options     => Common_Options,\n             Options_2   => Options_2,\n             Driver_Name => Driver_Name);\n \n@@ -167,7 +144,7 @@ package body MLib.Tgt is\n             MLib.Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Common_Options & Version_Arg & Init_Fini.all,\n+               Options     => Common_Options & Version_Arg,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -176,7 +153,7 @@ package body MLib.Tgt is\n             MLib.Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Common_Options & Version_Arg & Init_Fini.all,\n+               Options     => Common_Options & Version_Arg,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed :="}, {"sha": "7a77bff749377716086f2b3f8cd2f07d36695f7f", "filename": "gcc/ada/mlib-tgt-irix.adb", "status": "modified", "additions": 4, "deletions": 29, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-irix.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -40,21 +40,6 @@ with System;\n \n package body MLib.Tgt is\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : aliased String         := \"-Wl,-init\";\n-   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n-   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n-   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => Wl_Init,\n-                                          2 => null,\n-                                          3 => Wl_Fini,\n-                                          4 => null);\n-   --  Used to put switches for automatic elaboration/finalization\n-\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -122,6 +107,7 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -130,8 +116,6 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n       N_Options    : Argument_List := Options;\n       Options_Last : Natural := N_Options'Last;\n       --  After moving -lxxx to Options_2, N_Options up to index Options_Last\n@@ -148,14 +132,6 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n-         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n-      end if;\n-\n       --  Move all -lxxx to Options_2\n \n       declare\n@@ -192,8 +168,7 @@ package body MLib.Tgt is\n          MLib.Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => N_Options (N_Options'First .. Options_Last) &\n-                           Init_Fini.all,\n+            Options     => N_Options (N_Options'First .. Options_Last),\n             Driver_Name => Driver_Name,\n             Options_2   => Real_Options_2 (1 .. Real_Options_2_Last));\n \n@@ -205,7 +180,7 @@ package body MLib.Tgt is\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n                Options     => N_Options (N_Options'First .. Options_Last) &\n-                              Version_Arg & Init_Fini.all,\n+                              Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Real_Options_2 (1 .. Real_Options_2_Last));\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -215,7 +190,7 @@ package body MLib.Tgt is\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n                Options     => N_Options (N_Options'First .. Options_Last) &\n-                              Version_Arg & Init_Fini.all,\n+                              Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Real_Options_2 (1 .. Real_Options_2_Last));\n             Symbolic_Link_Needed :="}, {"sha": "70fde48500c7ecbfbddf2bd4323b5b0dfde51fdd", "filename": "gcc/ada/mlib-tgt-linux.adb", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-linux.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -43,21 +43,6 @@ package body MLib.Tgt is\n    use GNAT;\n    use MLib;\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : aliased String         := \"-Wl,-init\";\n-   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n-   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n-   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => Wl_Init,\n-                                          2 => null,\n-                                          3 => Wl_Fini,\n-                                          4 => null);\n-   --  Used to put switches for automatic elaboration/finalization\n-\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -125,6 +110,8 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n+      --  Initialization is done through the contructor mechanism\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -133,27 +120,17 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n          Write_Line (Lib_File);\n       end if;\n \n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n-         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n-      end if;\n-\n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options & Init_Fini.all,\n+            Options     => Options,\n             Driver_Name => Driver_Name,\n             Options_2   => Options_2);\n \n@@ -164,7 +141,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -173,7 +150,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Driver_Name => Driver_Name,\n                Options_2   => Options_2);\n             Symbolic_Link_Needed :="}, {"sha": "98a5de88012f851003ffa18e14b8a7f66ac1ef12", "filename": "gcc/ada/mlib-tgt-mingw.adb", "status": "modified", "additions": 10, "deletions": 145, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-mingw.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -31,8 +31,6 @@\n --  This is the Windows version of the body. Works only with GCC versions\n --  supporting the \"-shared\" option.\n \n-with Ada.Characters.Handling; use Ada.Characters.Handling;\n-with Ada.Text_IO;             use Ada; use Ada.Text_IO;\n with GNAT.OS_Lib;             use GNAT.OS_Lib;\n \n with Namet;  use Namet;\n@@ -48,6 +46,9 @@ package body MLib.Tgt is\n    package Files renames MLib.Fil;\n    package Tools renames MLib.Utl;\n \n+   No_Argument_List : constant String_List := (1 .. 0 => null);\n+   --  Used as value of parameter Options or Options2 in calls to Gcc\n+\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -116,6 +117,7 @@ package body MLib.Tgt is\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Lib_Version);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator &\n@@ -129,149 +131,12 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      --  Generate auto-init routine if in Auto_Init mode\n-\n-      if Auto_Init then\n-         declare\n-            Compile_Only  : aliased String := \"-c\";\n-            GCC           : constant String_Access :=\n-                              Locate_Exec_On_Path (\"gcc.exe\");\n-            Filename      : constant String := To_Lower (Lib_Filename);\n-            Autoinit_Spec : constant String := Filename & \"_autoinit.ads\";\n-            Autoinit_Body : aliased String  := Filename & \"_autoinit.adb\";\n-            Autoinit_Obj  : aliased String  := Filename & \"_autoinit.o\";\n-            Autoinit_Ali  : constant String := Filename & \"_autoinit.ali\";\n-            Init_Proc     : constant String := Lib_Filename & \"init\";\n-            Final_Proc    : constant String := Lib_Filename & \"final\";\n-            Autoinit_Opt  : constant Argument_List :=\n-                              (1 => Autoinit_Obj'Unchecked_Access);\n-            Arguments     : constant Argument_List (1 .. 2) :=\n-                              (Compile_Only'Unchecked_Access,\n-                               Autoinit_Body'Unchecked_Access);\n-            File          : Text_IO.File_Type;\n-            Success       : Boolean;\n-\n-         begin\n-            if Opt.Verbose_Mode then\n-               Write_Str (\"Creating auto-init Ada file \"\"\");\n-               Write_Str (Autoinit_Spec);\n-               Write_Str (\"\"\" and \"\"\");\n-               Write_Str (Autoinit_Body);\n-               Write_Line (\"\"\"\");\n-            end if;\n-\n-            --  Create the spec\n-\n-            Create (File, Out_File, Autoinit_Spec);\n-\n-            Put_Line (File, \"package \" & Lib_Filename & \"_autoinit is\");\n-            New_Line (File);\n-            Put_Line (File, \"   type HINSTANCE is new Integer;\");\n-            Put_Line (File, \"   type DWORD     is new Integer;\");\n-            Put_Line (File, \"   type LPVOID    is new Integer;\");\n-            Put_Line (File, \"   type BOOL      is new Integer;\");\n-            New_Line (File);\n-            Put_Line (File, \"   function DllMain\");\n-            Put_Line (File, \"     (hinstdll    : HINSTANCE;\");\n-            Put_Line (File, \"      fdwreason   : DWORD;\");\n-            Put_Line (File, \"      lpvreserved : LPVOID)\");\n-            Put_Line (File, \"      return BOOL;\");\n-            Put_Line\n-              (File, \"   pragma Export (Stdcall, DllMain, \"\"DllMain\"\");\");\n-            New_Line (File);\n-            Put_Line (File, \"end \" & Lib_Filename & \"_autoinit;\");\n-\n-            Close (File);\n-\n-            --  Create the body\n-\n-            Create (File, Out_File, Autoinit_Body);\n-\n-            Put_Line (File, \"package body \" & Lib_Filename & \"_autoinit is\");\n-            New_Line (File);\n-            Put_Line (File, \"   DLL_PROCESS_DETACH : constant := 0;\");\n-            Put_Line (File, \"   DLL_PROCESS_ATTACH : constant := 1;\");\n-            Put_Line (File, \"   DLL_THREAD_ATTACH  : constant := 2;\");\n-            Put_Line (File, \"   DLL_THREAD_DETACH  : constant := 3;\");\n-            New_Line (File);\n-            Put_Line (File, \"   procedure \" & Init_Proc & \";\");\n-            Put      (File, \"   pragma Import (C, \" & Init_Proc);\n-            Put_Line (File, \", \"\"\" & Init_Proc & \"\"\");\");\n-            New_Line (File);\n-            Put_Line (File, \"   procedure \" & Final_Proc & \";\");\n-            Put      (File, \"   pragma Import (C, \" & Final_Proc);\n-            Put_Line (File, \", \"\"\" & Final_Proc & \"\"\");\");\n-            New_Line (File);\n-            Put_Line (File, \"   function DllMain\");\n-            Put_Line (File, \"     (hinstdll    : HINSTANCE;\");\n-            Put_Line (File, \"      fdwreason   : DWORD;\");\n-            Put_Line (File, \"      lpvreserved : LPVOID)\");\n-            Put_Line (File, \"      return BOOL\");\n-            Put_Line (File, \"   is\");\n-            Put_Line (File, \"      pragma Unreferenced (hinstDLL);\");\n-            Put_Line (File, \"      pragma Unreferenced (lpvReserved);\");\n-            Put_Line (File, \"   begin\");\n-            Put_Line (File, \"      case fdwReason is\");\n-            Put_Line (File, \"         when DLL_PROCESS_ATTACH =>\");\n-            Put_Line (File, \"            \" & Init_Proc & \";\");\n-            Put_Line (File, \"         when DLL_PROCESS_DETACH =>\");\n-            Put_Line (File, \"            \" & Final_Proc & \";\");\n-            Put_Line (File, \"         when DLL_THREAD_ATTACH =>\");\n-            Put_Line (File, \"            null;\");\n-            Put_Line (File, \"         when DLL_THREAD_DETACH =>\");\n-            Put_Line (File, \"            null;\");\n-            Put_Line (File, \"         when others =>\");\n-            Put_Line (File, \"            null;\");\n-            Put_Line (File, \"      end case;\");\n-            Put_Line (File, \"      return 1;\");\n-            Put_Line (File, \"   exception\");\n-            Put_Line (File, \"      when others =>\");\n-            Put_Line (File, \"         return 0;\");\n-            Put_Line (File, \"   end DllMain;\");\n-            New_Line (File);\n-            Put_Line (File, \"end \" & Lib_Filename & \"_autoinit;\");\n-\n-            Close (File);\n-\n-            --  Compile the auto-init file\n-\n-            Spawn (GCC.all, Arguments, Success);\n-\n-            if not Success then\n-               Fail (\"unable to compile the auto-init unit for library \"\"\",\n-                     Lib_Filename, \"\"\"\");\n-            end if;\n-\n-            --  Build the SAL library\n-\n-            Tools.Gcc\n-              (Output_File => Lib_File,\n-               Objects     => Ofiles,\n-               Options     => Tools.No_Argument_List,\n-               Options_2   => Options & Options_2 & Autoinit_Opt,\n-               Driver_Name => Driver_Name);\n-\n-            --  Remove generated files\n-\n-            if Opt.Verbose_Mode then\n-               Write_Str (\"deleting auto-init generated files\");\n-               Write_Eol;\n-            end if;\n-\n-            Delete_File (Autoinit_Spec, Success);\n-            Delete_File (Autoinit_Body, Success);\n-            Delete_File (Autoinit_Obj, Success);\n-            Delete_File (Autoinit_Ali, Success);\n-         end;\n-\n-      else\n-         Tools.Gcc\n-           (Output_File => Lib_File,\n-            Objects     => Ofiles,\n-            Options     => Tools.No_Argument_List,\n-            Options_2   => Options & Options_2,\n-            Driver_Name => Driver_Name);\n-      end if;\n+      Tools.Gcc\n+        (Output_File => Lib_File,\n+         Objects     => Ofiles,\n+         Options     => No_Argument_List,\n+         Options_2   => Options & Options_2,\n+         Driver_Name => Driver_Name);\n    end Build_Dynamic_Library;\n \n    -------------"}, {"sha": "40d918edd137777268f757c75419912692d89fc0", "filename": "gcc/ada/mlib-tgt-solaris.adb", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-solaris.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -40,18 +40,6 @@ with System;\n \n package body MLib.Tgt is\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : constant String         := \"-Wl,-zinitarray=\";\n-   Wl_Fini_String : constant String         := \"-Wl,-zfiniarray=\";\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => null,\n-                                          2 => null);\n-\n-   --  Used to put switches for automatic elaboration/finalization\n-\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -119,6 +107,7 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -127,29 +116,17 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n          Write_Line (Lib_File);\n       end if;\n \n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (1) :=\n-           new String'(Wl_Init_String & Lib_Filename & \"init\");\n-         Init_Fini (2) :=\n-           new String'(Wl_Fini_String & Lib_Filename & \"final\");\n-      end if;\n-\n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options & Init_Fini.all,\n+            Options     => Options,\n             Options_2   => Options_2,\n             Driver_Name => Driver_Name);\n \n@@ -160,7 +137,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -169,7 +146,7 @@ package body MLib.Tgt is\n             Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg & Init_Fini.all,\n+               Options     => Options & Version_Arg,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed :="}, {"sha": "b6d954902df236b6c3358591917aa36fc2663a21", "filename": "gcc/ada/mlib-tgt-tru64.adb", "status": "modified", "additions": 5, "deletions": 35, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fmlib-tgt-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-tru64.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -45,21 +45,6 @@ package body MLib.Tgt is\n \n    Expect_Unresolved : aliased String := \"-Wl,-expect_unresolved,*\";\n \n-   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n-   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n-\n-   Wl_Init_String : aliased String         := \"-Wl,-init\";\n-   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n-   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n-   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n-\n-   Init_Fini_List :  constant Argument_List_Access :=\n-                       new Argument_List'(1 => Wl_Init,\n-                                          2 => null,\n-                                          3 => Wl_Fini,\n-                                          4 => null);\n-   --  Used to put switches for automatic elaboration/finalization\n-\n    ---------------------\n    -- Archive_Builder --\n    ---------------------\n@@ -127,6 +112,8 @@ package body MLib.Tgt is\n       pragma Unreferenced (Afiles);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Auto_Init);\n+      --  Initialization is done through the contructor mechanism\n \n       Lib_File : constant String :=\n                    Lib_Dir & Directory_Separator & \"lib\" &\n@@ -135,8 +122,6 @@ package body MLib.Tgt is\n       Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n-      Init_Fini : Argument_List_Access := Empty_Argument_List;\n-\n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n@@ -145,20 +130,11 @@ package body MLib.Tgt is\n \n       --  If specified, add automatic elaboration/finalization\n \n-      if Auto_Init then\n-         Init_Fini := Init_Fini_List;\n-         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n-         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n-      end if;\n-\n       if Lib_Version = \"\" then\n          Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     =>\n-              Options &\n-              Expect_Unresolved'Access &\n-              Init_Fini.all,\n+            Options     => Options & Expect_Unresolved'Access,\n             Options_2   => Options_2,\n             Driver_Name => Driver_Name);\n \n@@ -170,10 +146,7 @@ package body MLib.Tgt is\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n                Options     =>\n-                 Options &\n-                 Version_Arg &\n-                 Expect_Unresolved'Access &\n-                 Init_Fini.all,\n+                 Options & Version_Arg & Expect_Unresolved'Access,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n@@ -183,10 +156,7 @@ package body MLib.Tgt is\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n                Options     =>\n-                 Options &\n-                 Version_Arg &\n-                 Expect_Unresolved'Access &\n-                 Init_Fini.all,\n+                 Options & Version_Arg & Expect_Unresolved'Access,\n                Options_2   => Options_2,\n                Driver_Name => Driver_Name);\n             Symbolic_Link_Needed :="}, {"sha": "1bc271d572c85994c5a34c7eb2ca3f68e770e5bc", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87520cd051656e14f59112793d66c259ffd4f52/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=b87520cd051656e14f59112793d66c259ffd4f52", "patch": "@@ -67,11 +67,16 @@ package body Switch.B is\n \n          case C is\n \n+         --  Processing for a switch\n+\n+         when 'a' =>\n+            Ptr := Ptr + 1;\n+            Use_Pragma_Linker_Constructor := True;\n+\n          --  Processing for A switch\n \n          when 'A' =>\n             Ptr := Ptr + 1;\n-\n             Ada_Bind_File := True;\n \n          --  Processing for b switch"}]}