{"sha": "08434b02e2903c60517f64f3bc3070992001d3b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0MzRiMDJlMjkwM2M2MDUxN2Y2NGYzYmMzMDcwOTkyMDAxZDNiNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-11T18:05:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-11T18:50:57Z"}, "message": "c++: Remove LOOKUP_EXPLICIT_TMPL_ARGS.\n\nThis flag is redundant with the explicit_targs field in the overload\ncandidate information.\n\ngcc/cp/ChangeLog\n2020-05-11  Jason Merrill  <jason@redhat.com>\n\n\t* cp-tree.h (LOOKUP_EXPLICIT_TMPL_ARGS): Remove.\n\t* call.c (build_new_function_call): Don't set it.\n\t(build_new_method_call_1): Likewise.\n\t(build_over_call): Check cand->explicit_targs instead.", "tree": {"sha": "fd027f55d388b7abe95663a72853492f9a68fbd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd027f55d388b7abe95663a72853492f9a68fbd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08434b02e2903c60517f64f3bc3070992001d3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08434b02e2903c60517f64f3bc3070992001d3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08434b02e2903c60517f64f3bc3070992001d3b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08434b02e2903c60517f64f3bc3070992001d3b5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f315d1477d5164cb8ec1a004ce368dd52d47092a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f315d1477d5164cb8ec1a004ce368dd52d47092a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f315d1477d5164cb8ec1a004ce368dd52d47092a"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "f92c6416ee6dfba7f51828513d955d073ac637e9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08434b02e2903c60517f64f3bc3070992001d3b5", "patch": "@@ -1,3 +1,10 @@\n+2020-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (LOOKUP_EXPLICIT_TMPL_ARGS): Remove.\n+\t* call.c (build_new_function_call): Don't set it.\n+\t(build_new_method_call_1): Likewise.\n+\t(build_over_call): Check cand->explicit_targs instead.\n+\n 2020-05-11  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (compute_array_index_type_loc): Stabilize before building"}, {"sha": "aca12c74c25b3cdbd2e5b449f21f7fbb83980b3d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=08434b02e2903c60517f64f3bc3070992001d3b5", "patch": "@@ -4600,15 +4600,7 @@ build_new_function_call (tree fn, vec<tree, va_gc> **args,\n     }\n   else\n     {\n-      int flags = LOOKUP_NORMAL;\n-      /* If fn is template_id_expr, the call has explicit template arguments\n-         (e.g. func<int>(5)), communicate this info to build_over_call\n-         through flags so that later we can use it to decide whether to warn\n-         about peculiar null pointer conversion.  */\n-      if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n-        flags |= LOOKUP_EXPLICIT_TMPL_ARGS;\n-\n-      result = build_over_call (cand, flags, complain);\n+      result = build_over_call (cand, LOOKUP_NORMAL, complain);\n     }\n \n   if (flag_coroutines\n@@ -8773,7 +8765,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n       if (null_node_p (arg)\n           && DECL_TEMPLATE_INFO (fn)\n           && cand->template_decl\n-          && !(flags & LOOKUP_EXPLICIT_TMPL_ARGS))\n+\t  && !cand->explicit_targs)\n         conversion_warning = false;\n \n       /* Set user_conv_p on the argument conversions, so rvalue/base handling\n@@ -10345,8 +10337,6 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n \n \t  if (call != error_mark_node)\n \t    {\n-              if (explicit_targs)\n-                flags |= LOOKUP_EXPLICIT_TMPL_ARGS;\n \t      /* Now we know what function is being called.  */\n \t      if (fn_p)\n \t\t*fn_p = fn;"}, {"sha": "f7c11bcf83802a95eeb77a5b3da7adfd61c5e605", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08434b02e2903c60517f64f3bc3070992001d3b5/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=08434b02e2903c60517f64f3bc3070992001d3b5", "patch": "@@ -5603,10 +5603,8 @@ enum overload_flags { NO_SPECIAL = 0, DTOR_FLAG, TYPENAME_FLAG };\n /* Used in calls to store_init_value to suppress its usual call to\n    digest_init.  */\n #define LOOKUP_ALREADY_DIGESTED (LOOKUP_DEFAULTED << 1)\n-/* An instantiation with explicit template arguments.  */\n-#define LOOKUP_EXPLICIT_TMPL_ARGS (LOOKUP_ALREADY_DIGESTED << 1)\n /* Like LOOKUP_NO_TEMP_BIND, but also prevent binding to xvalues.  */\n-#define LOOKUP_NO_RVAL_BIND (LOOKUP_EXPLICIT_TMPL_ARGS << 1)\n+#define LOOKUP_NO_RVAL_BIND (LOOKUP_ALREADY_DIGESTED << 1)\n /* Used by case_conversion to disregard non-integral conversions.  */\n #define LOOKUP_NO_NON_INTEGRAL (LOOKUP_NO_RVAL_BIND << 1)\n /* Used for delegating constructors in order to diagnose self-delegation.  */"}]}