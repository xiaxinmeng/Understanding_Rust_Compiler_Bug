{"sha": "bd127a751553d5b4a97784a2e6d903415366bcdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQxMjdhNzUxNTUzZDViNGE5Nzc4NGEyZTZkOTAzNDE1MzY2YmNkZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2005-06-07T07:42:22Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-06-07T07:42:22Z"}, "message": "btest-gcc.sh: Add support for option --add-passes-despite-regression.\n\n\t* btest-gcc.sh: Add support for option\n\t--add-passes-despite-regression.\n\nFrom-SVN: r100699", "tree": {"sha": "d748b7319e4eede14dc8b5c4a919bc710da7aad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d748b7319e4eede14dc8b5c4a919bc710da7aad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd127a751553d5b4a97784a2e6d903415366bcdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd127a751553d5b4a97784a2e6d903415366bcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd127a751553d5b4a97784a2e6d903415366bcdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd127a751553d5b4a97784a2e6d903415366bcdd/comments", "author": null, "committer": null, "parents": [{"sha": "ce677da7bc5dc6d1f475cbd4b013d1418d7c4e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce677da7bc5dc6d1f475cbd4b013d1418d7c4e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce677da7bc5dc6d1f475cbd4b013d1418d7c4e49"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "ae577173200599605d610f3dd93ce06e6f449f11", "filename": "contrib/regression/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd127a751553d5b4a97784a2e6d903415366bcdd/contrib%2Fregression%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd127a751553d5b4a97784a2e6d903415366bcdd/contrib%2Fregression%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2FChangeLog?ref=bd127a751553d5b4a97784a2e6d903415366bcdd", "patch": "@@ -1,3 +1,8 @@\n+2005-06-07  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* btest-gcc.sh: Add support for option\n+\t--add-passes-despite-regression.\n+\n 2005-06-06  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* btest-gcc.sh <Build>: Don't pass --with-newlib when target is"}, {"sha": "2e9ea1e52d70c700b5160b3e5a9c452c330befc5", "filename": "contrib/regression/btest-gcc.sh", "status": "modified", "additions": 42, "deletions": 8, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd127a751553d5b4a97784a2e6d903415366bcdd/contrib%2Fregression%2Fbtest-gcc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd127a751553d5b4a97784a2e6d903415366bcdd/contrib%2Fregression%2Fbtest-gcc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2Fbtest-gcc.sh?ref=bd127a751553d5b4a97784a2e6d903415366bcdd", "patch": "@@ -18,7 +18,20 @@\n #  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n \n # INPUT:\n-# btest <target> <source> <prefix> <state> <build>\n+# btest <options> <target> <source> <prefix> <state> <build>\n+\n+add_passes_despite_regression=0\n+\n+# <options> can be\n+# --add-passes-despite-regression:\n+#  Add new \"PASSes\" despite there being some regressions.\n+\n+case \"$1\" in\n+ --add-passes-despite-regression)\n+  add_passes_despite_regression=1; shift;;\n+ --*) echo \"Invalid option: $1\"; exit 2;;\n+esac\n+\n # TARGET is the target triplet.  It should be the same one as used in\n # constructing PREFIX.  Or it can be the keyword 'native', indicating\n # a target of whatever platform the script is running on.\n@@ -178,17 +191,38 @@ for LOG in $TESTLOGS ; do\n done | sort | uniq > $FAILED || exit 1\n comm -12 $FAILED $PASSES >> $REGRESS || exit 1\n NUMREGRESS=`wc -l < $REGRESS | tr -d ' '`\n+\n+if [ $NUMREGRESS -eq 0 ] || [ $add_passes_despite_regression -ne 0 ] ; then\n+  # Update the state.\n+  for LOG in $TESTLOGS ; do\n+    L=`basename $LOG`\n+    awk '/^PASS: / { print \"'$L'\",$2; }' $LOG || exit 1\n+  done | sort | uniq | comm -23 - $FAILED > ${PASSES}~ || exit 1\n+  [ -s ${PASSES}~ ] || exit 1\n+  if [ $NUMREGRESS -ne 0 ] ; then\n+    # The way we keep track of new PASSes when in \"regress-N\" for\n+    # --add-passes-despite-regression, is to *add* them to previous\n+    # PASSes.  Just as without this option, we don't forget *any* PASS\n+    # lines, because besides the ones in $REGRESS that we definitely\n+    # don't want to lose, their removal or rename may have been a\n+    # mistake (as in, the cause of the \"regress-N\" state).  If they\n+    # come back, we then know they're regressions.\n+    cat ${PASSES}~ ${PASSES} | sort -u > ${PASSES}~~\n+    mv ${PASSES}~~ ${PASSES} || exit 1\n+    rm ${PASSES}~ || exit 1\n+  else\n+    # In contrast to the merging for \"regress-N\", we just overwrite\n+    # the known PASSes when in the \"pass\" state, so we get rid of\n+    # stale PASS lines for removed, moved or otherwise changed tests\n+    # which may be added back with a different meaning later on.\n+    mv ${PASSES}~ ${PASSES} || exit 1\n+  fi\n+fi\n+\n if [ $NUMREGRESS -ne 0 ] ; then\n   echo regress-$NUMREGRESS > $RESULT\n   exit 1\n fi\n \n-# It passed.  Update the state.\n-for LOG in $TESTLOGS ; do\n-  L=`basename $LOG`\n-  awk '/^PASS: / { print \"'$L'\",$2; }' $LOG || exit 1\n-done | sort | uniq | comm -23 - $FAILED > ${PASSES}~ || exit 1\n-[ -s ${PASSES}~ ] || exit 1\n-mv ${PASSES}~ ${PASSES} || exit 1\n echo pass > $RESULT\n exit 0"}]}