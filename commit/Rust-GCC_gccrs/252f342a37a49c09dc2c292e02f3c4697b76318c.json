{"sha": "252f342a37a49c09dc2c292e02f3c4697b76318c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUyZjM0MmEzN2E0OWMwOWRjMmMyOTJlMDJmM2M0Njk3Yjc2MzE4Yw==", "commit": {"author": {"name": "Michael Hayes", "email": "michaelh@ongaonga.chch.cri.nz", "date": "1998-08-19T12:49:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-19T12:49:17Z"}, "message": "regclass.c: Changed register set documentation to be consistent with GCC behaviour.\n\n        * regclass.c: Changed register set documentation to be consistent\n        with GCC behaviour.\n        * final.c (final_start_function) Removed redundant test for\n        call_fixed_regs.\n\nFrom-SVN: r21847", "tree": {"sha": "085d8dd273e87ba7b2b283349e0e05c7148ad427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085d8dd273e87ba7b2b283349e0e05c7148ad427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/252f342a37a49c09dc2c292e02f3c4697b76318c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252f342a37a49c09dc2c292e02f3c4697b76318c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252f342a37a49c09dc2c292e02f3c4697b76318c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252f342a37a49c09dc2c292e02f3c4697b76318c/comments", "author": null, "committer": null, "parents": [{"sha": "bdd6b6020c56612cc139e2e02d204e43d23921e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd6b6020c56612cc139e2e02d204e43d23921e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd6b6020c56612cc139e2e02d204e43d23921e1"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "ef587f68cdb6bf7ca1b9f4799c4020239c2c8d43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=252f342a37a49c09dc2c292e02f3c4697b76318c", "patch": "@@ -1,3 +1,11 @@\n+1998-08-19  Michael Hayes  <michaelh@ongaonga.chch.cri.nz>\n+\n+\t* regclass.c: Changed register set documentation to be consistent\n+\twith GCC behaviour.\n+\n+\t* final.c (final_start_function) Removed redundant test for\n+\tcall_fixed_regs.\n+\n Wed Aug 19 13:28:41 1998  Mark Mitchell  <mark@markmitchell.com>\n \n \t* rtl.h (rtx_function): New type."}, {"sha": "621f61f60ce5943afe917e76cd7c4c67d15e4263", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=252f342a37a49c09dc2c292e02f3c4697b76318c", "patch": "@@ -1597,7 +1597,7 @@ final_start_function (first, file, optimize)\n       int i;\n \n       for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\tif (!call_used_regs[i] && !call_fixed_regs[i])\n+\tif (!call_used_regs[i])\n \t  regs_ever_live[i] = 1;\n     }\n #endif"}, {"sha": "293b7c3c39c2373b03f6e901f825923076c7d3ad", "filename": "gcc/regclass.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252f342a37a49c09dc2c292e02f3c4697b76318c/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=252f342a37a49c09dc2c292e02f3c4697b76318c", "patch": "@@ -56,7 +56,7 @@ Boston, MA 02111-1307, USA.  */\n /* Indexed by hard register number, contains 1 for registers\n    that are fixed use (stack pointer, pc, frame pointer, etc.).\n    These are the registers that cannot be used to allocate\n-   a pseudo reg whose life does not cross calls.  */\n+   a pseudo reg for general use.  */\n \n char fixed_regs[FIRST_PSEUDO_REGISTER];\n \n@@ -71,7 +71,8 @@ static char initial_fixed_regs[] = FIXED_REGISTERS;\n /* Indexed by hard register number, contains 1 for registers\n    that are fixed use or are clobbered by function calls.\n    These are the registers that cannot be used to allocate\n-   a pseudo reg whose life crosses calls.  */\n+   a pseudo reg whose life crosses calls unless we are able\n+   to save/restore them across the calls.  */\n \n char call_used_regs[FIRST_PSEUDO_REGISTER];\n \n@@ -87,10 +88,9 @@ HARD_REG_SET losing_caller_save_reg_set;\n static char initial_call_used_regs[] = CALL_USED_REGISTERS;\n   \n /* Indexed by hard register number, contains 1 for registers that are\n-   fixed use -- i.e. in fixed_regs -- or a function value return register\n-   or STRUCT_VALUE_REGNUM or STATIC_CHAIN_REGNUM.  These are the\n-   registers that cannot hold quantities across calls even if we are\n-   willing to save and restore them.  */\n+   fixed use or call used registers that cannot hold quantities across\n+   calls even if we are willing to save and restore them.  call fixed\n+   registers are a subset of call used registers.  */\n \n char call_fixed_regs[FIRST_PSEUDO_REGISTER];\n "}]}