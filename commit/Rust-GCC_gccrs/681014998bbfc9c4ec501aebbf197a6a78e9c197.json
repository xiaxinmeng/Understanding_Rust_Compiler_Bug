{"sha": "681014998bbfc9c4ec501aebbf197a6a78e9c197", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxMDE0OTk4YmJmYzljNGVjNTAxYWViYmYxOTdhNmE3OGU5YzE5Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-04-19T13:02:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-19T13:02:27Z"}, "message": "sem_ch6.adb (Possible_Freeze): If the type is an incomplete CW type...\n\n2016-04-19  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch6.adb (Possible_Freeze): If the type is an incomplete\n\tCW type, then the subprogram must have a delayed freeze. This\n\tensures that the backend can properly recover the full view when\n\telaborating the access subprogram declaration.\n\nFrom-SVN: r235195", "tree": {"sha": "8701952199f69542435b4be28bd054cb5f69fb9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8701952199f69542435b4be28bd054cb5f69fb9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/681014998bbfc9c4ec501aebbf197a6a78e9c197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681014998bbfc9c4ec501aebbf197a6a78e9c197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681014998bbfc9c4ec501aebbf197a6a78e9c197", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681014998bbfc9c4ec501aebbf197a6a78e9c197/comments", "author": null, "committer": null, "parents": [{"sha": "16e764a7f44bbc29254f041fe0f3064cce65b994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e764a7f44bbc29254f041fe0f3064cce65b994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e764a7f44bbc29254f041fe0f3064cce65b994"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "ca023c20eea963289fa661947c30fe3b6bae4cba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681014998bbfc9c4ec501aebbf197a6a78e9c197/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681014998bbfc9c4ec501aebbf197a6a78e9c197/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=681014998bbfc9c4ec501aebbf197a6a78e9c197", "patch": "@@ -1,3 +1,10 @@\n+2016-04-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch6.adb (Possible_Freeze): If the type is an incomplete\n+\tCW type, then the subprogram must have a delayed freeze. This\n+\tensures that the backend can properly recover the full view when\n+\telaborating the access subprogram declaration.\n+\n 2016-04-19  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb (Resolve_Attribute, case 'Access): Freeze"}, {"sha": "2fec97c49c0eb9ae9e7c27178548a4e54a5a778e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681014998bbfc9c4ec501aebbf197a6a78e9c197/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681014998bbfc9c4ec501aebbf197a6a78e9c197/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=681014998bbfc9c4ec501aebbf197a6a78e9c197", "patch": "@@ -5251,8 +5251,9 @@ package body Sem_Ch6 is\n       --  T is the type of either a formal parameter or of the return type.\n       --  If T is not yet frozen and needs a delayed freeze, then the\n       --  subprogram itself must be delayed. If T is the limited view of an\n-      --  incomplete type the subprogram must be frozen as well, because\n-      --  T may depend on local types that have not been frozen yet.\n+      --  incomplete type (or of a CW type thereof) the subprogram must be\n+      --  frozen as well, because T may depend on local types that have not\n+      --  been frozen yet.\n \n       ---------------------\n       -- Possible_Freeze --\n@@ -5269,7 +5270,8 @@ package body Sem_Ch6 is\n          then\n             Set_Has_Delayed_Freeze (Designator);\n \n-         elsif Ekind (T) = E_Incomplete_Type\n+         elsif (Ekind (T) = E_Incomplete_Type\n+                 or else Ekind (T) = E_Class_Wide_Type)\n            and then From_Limited_With (T)\n          then\n             Set_Has_Delayed_Freeze (Designator);"}]}