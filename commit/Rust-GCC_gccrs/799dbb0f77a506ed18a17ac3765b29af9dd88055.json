{"sha": "799dbb0f77a506ed18a17ac3765b29af9dd88055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk5ZGJiMGY3N2E1MDZlZDE4YTE3YWMzNzY1YjI5YWY5ZGQ4ODA1NQ==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2009-06-17T21:51:28Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2009-06-17T21:51:28Z"}, "message": "Create new constraint \"d\" for PowerPC FPRs with 64-bit values.\n\nReplace uses of \"f\" constraint with \"d\" as needed.\n\nFrom-SVN: r148630", "tree": {"sha": "d7230e2a2b8120f546ed6ccf48cf9d0726dde762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7230e2a2b8120f546ed6ccf48cf9d0726dde762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/799dbb0f77a506ed18a17ac3765b29af9dd88055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/799dbb0f77a506ed18a17ac3765b29af9dd88055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/799dbb0f77a506ed18a17ac3765b29af9dd88055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/799dbb0f77a506ed18a17ac3765b29af9dd88055/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1469de3ce4519b53656ad8e40ef0ab4c7f2e6cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1469de3ce4519b53656ad8e40ef0ab4c7f2e6cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1469de3ce4519b53656ad8e40ef0ab4c7f2e6cee"}], "stats": {"total": 492, "additions": 264, "deletions": 228}, "files": [{"sha": "21a7483e7610c87fcca2981bac5cc30fb9ed77fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -1,3 +1,32 @@\n+2009-06-17  Michael Eager  <eager@eagercon.com>\n+\n+\t* config/rs6000/constraints.md: register_constraint \"d\": New.\n+\t* config/rs6000/dfp.md: movsd_store, extendsddd2, extendsdtd2,\n+\ttruncddsd2, *negdd2_fpr, *absdd2_fpr, *nabsdd2_fpr, *movdd_hardfloat32,\n+\t*movdd_hardfloat64_mfpgpr, *movdd_hardfloat64, *negtd2_fp,\n+\t*abstd2_fpr, *nabstd2_fpr, *movtd_internal, extendddtd2, trunctddd2,\n+\tadddd3, addtd3, subdd3, subtd3, muldd3, multd3, divdd3, divtd3,\n+\tinternal1, *cmptd_internal1, floatditd2, ftruncdd2, fixdddi2,\n+\tftrunctd2, fixtddi2: replace 'f' constraint with 'd'\n+\t* config/rs6000/ppu_intrinsics.h: __mffs, __mtfsf, __mtfsfi, __fabs,\n+\t__fnabs, __fmadd, __fmsub, __fnmadd, __fnmsub, __fsel, __frsqrte,\n+\t__fsqrt, __fmul, __fmuls, __frsp, __fcfid, __fctid, __fctidz, __fctiw,\n+\t__fctiwz: Same.\n+\t* config/rs6000/rs6000.md: *extendsfdf2_fpr, *truncdfsf2_fpr,\n+\t*fseldfsf4, *negdf2_fpr, *absdf2_fpr, *nabsdf2_fpr, *adddf3_fpr,\n+\t*subdf3_fpr, *muldf3_fpr, *divdf3_fpr, recipdf3, fred, sqrtdf2,\n+\t*fseldfdf4, *fselsfdf4, *floatsidf2_internal, *floatunssidf2_internal,\n+\t*fix_truncdfsi2_internal, fix_truncdfsi2_internal_gfxopt, fix_truncdfsi2_mfpgpr,\n+\tfctiwz, btruncdf2, ceildf2, floordf2, rounddf2, stfiwx, floatdidf2,\n+\tfix_truncdfdi2, floatdisf2_internal1, *movdf_hardfloat32,\n+\t*movdf_hardfloat64_mfpgpr, *movdf_hardfloat64, *movtf_internal,\n+\t*extenddftf2_internal, trunctfdf2_internal1, trunctfdf2_internal2,\n+\ttrunctfsf2_fprs, fix_trunc_helper, *fix_trunctfsi2_internal,\n+\tnegtf2_internal, *movdi_internal32, *movdi_mfpgpr, *movdi_internal64,\n+\t*movdf_update1, *movdf_update2, *cmpdf_internal1, *cmptf_internal1,\n+\t*cmptf_internal2: Same.\n+\t* doc/md.texi: Describe PowerPC 'd' constraint, update 'f' constraint.\n+\n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n \n \t* profile.c (total_num_never_executed): Don't define."}, {"sha": "e817a6646016b669e26afbc7a387ae6c7333951f", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -23,6 +23,10 @@\n \t\t\t \t ? FLOAT_REGS : NO_REGS\"\n   \"@internal\")\n \n+(define_register_constraint \"d\" \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\n+\t\t\t \t ? FLOAT_REGS : NO_REGS\"\n+  \"@internal\")\n+\n (define_register_constraint \"b\" \"BASE_REGS\"\n   \"@internal\")\n "}, {"sha": "96da57c319c3dad3e1bcd7cb0a5eff78e0f92c8a", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -105,7 +105,7 @@\n \n (define_insn \"movsd_store\"\n   [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=m\")\n-\t(unspec:DD [(match_operand:SD 1 \"input_operand\" \"f\")]\n+\t(unspec:DD [(match_operand:SD 1 \"input_operand\" \"d\")]\n \t\t   UNSPEC_MOVSD_STORE))]\n   \"(gpc_reg_operand (operands[0], DDmode)\n    || gpc_reg_operand (operands[1], SDmode))\n@@ -128,15 +128,15 @@\n ;; Hardware support for decimal floating point operations.\n \n (define_insn \"extendsddd2\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n \t(float_extend:DD (match_operand:SD 1 \"gpc_reg_operand\" \"f\")))]\n   \"TARGET_DFP\"\n   \"dctdp %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_expand \"extendsdtd2\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_extend:TD (match_operand:SD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(float_extend:TD (match_operand:SD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n {\n   rtx tmp = gen_reg_rtx (DDmode);\n@@ -147,7 +147,7 @@\n \n (define_insn \"truncddsd2\"\n   [(set (match_operand:SD 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_truncate:SD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+\t(float_truncate:SD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"drsp %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -159,8 +159,8 @@\n   \"\")\n \n (define_insn \"*negdd2_fpr\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fneg %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -172,15 +172,15 @@\n   \"\")\n \n (define_insn \"*absdd2_fpr\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*nabsdd2_fpr\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DD (abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DD (abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fnabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -281,8 +281,8 @@\n ;; The \"??\" is a kludge until we can figure out a more reasonable way\n ;; of handling these non-offsettable values.\n (define_insn \"*movdd_hardfloat32\"\n-  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=!r,??r,m,f,f,m,!r,!r,!r\")\n-\t(match_operand:DD 1 \"input_operand\" \"r,m,r,f,m,f,G,H,F\"))]\n+  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=!r,??r,m,d,d,m,!r,!r,!r\")\n+\t(match_operand:DD 1 \"input_operand\" \"r,m,r,d,m,d,G,H,F\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], DDmode)\n        || gpc_reg_operand (operands[1], DDmode))\"\n@@ -417,8 +417,8 @@\n ; ld/std require word-aligned displacements -> 'Y' constraint.\n ; List Y->r and r->Y before r->r for reload.\n (define_insn \"*movdd_hardfloat64_mfpgpr\"\n-  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r,r,f\")\n-\t(match_operand:DD 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F,f,r\"))]\n+  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,d,d,m,*c*l,!r,*h,!r,!r,!r,r,d\")\n+\t(match_operand:DD 1 \"input_operand\" \"r,Y,r,d,m,d,r,h,0,G,H,F,d,r\"))]\n   \"TARGET_POWERPC64 && TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], DDmode)\n        || gpc_reg_operand (operands[1], DDmode))\"\n@@ -443,8 +443,8 @@\n ; ld/std require word-aligned displacements -> 'Y' constraint.\n ; List Y->r and r->Y before r->r for reload.\n (define_insn \"*movdd_hardfloat64\"\n-  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r\")\n-\t(match_operand:DD 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F\"))]\n+  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,d,d,m,*c*l,!r,*h,!r,!r,!r\")\n+\t(match_operand:DD 1 \"input_operand\" \"r,Y,r,d,m,d,r,h,0,G,H,F\"))]\n   \"TARGET_POWERPC64 && !TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], DDmode)\n        || gpc_reg_operand (operands[1], DDmode))\"\n@@ -490,8 +490,8 @@\n   \"\")\n \n (define_insn \"*negtd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fneg %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -503,15 +503,15 @@\n   \"\")\n \n (define_insn \"*abstd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*nabstd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:TD (abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:TD (abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n   \"fnabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -526,8 +526,8 @@\n ; otherwise reload, given m->f, will try to pick f->f and reload it,\n ; which doesn't make progress.  Likewise r->Y must be before r->r.\n (define_insn_and_split \"*movtd_internal\"\n-  [(set (match_operand:TD 0 \"nonimmediate_operand\" \"=o,f,f,r,Y,r\")\n-\t(match_operand:TD 1 \"input_operand\"         \"f,o,f,YGHF,r,r\"))]\n+  [(set (match_operand:TD 0 \"nonimmediate_operand\" \"=o,d,d,r,Y,r\")\n+\t(match_operand:TD 1 \"input_operand\"         \"d,o,d,YGHF,r,r\"))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], TDmode)\n        || gpc_reg_operand (operands[1], TDmode))\"\n@@ -540,8 +540,8 @@\n ;; Hardware support for decimal floating point operations.\n \n (define_insn \"extendddtd2\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_extend:TD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(float_extend:TD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dctqpq %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -552,96 +552,96 @@\n ;; that the result is the first of the pair receiving the result of drdpq.\n \n (define_insn \"trunctddd2\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_truncate:DD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_scratch:TD 2 \"=f\"))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(float_truncate:DD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_scratch:TD 2 \"=d\"))]\n   \"TARGET_DFP\"\n   \"drdpq %2,%1\\;fmr %0,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"adddd3\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(plus:DD (match_operand:DD 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:DD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(plus:DD (match_operand:DD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:DD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dadd %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"addtd3\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(plus:TD (match_operand:TD 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:TD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(plus:TD (match_operand:TD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:TD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"daddq %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"subdd3\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")\n-\t\t  (match_operand:DD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")\n+\t\t  (match_operand:DD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dsub %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"subtd3\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")\n-\t\t  (match_operand:TD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")\n+\t\t  (match_operand:TD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dsubq %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"muldd3\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(mult:DD (match_operand:DD 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:DD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(mult:DD (match_operand:DD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:DD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dmul %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"multd3\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(mult:TD (match_operand:TD 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:TD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(mult:TD (match_operand:TD 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:TD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dmulq %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"divdd3\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(div:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")\n-\t\t(match_operand:DD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(div:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")\n+\t\t(match_operand:DD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"ddiv %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"divtd3\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(div:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")\n-\t\t(match_operand:TD 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(div:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")\n+\t\t(match_operand:TD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"ddivq %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*cmpdd_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:DD 1 \"gpc_reg_operand\" \"f\")\n-\t\t      (match_operand:DD 2 \"gpc_reg_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:DD 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:DD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dcmpu %0,%1,%2\"\n   [(set_attr \"type\" \"fpcompare\")])\n \n (define_insn \"*cmptd_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:TD 1 \"gpc_reg_operand\" \"f\")\n-\t\t      (match_operand:TD 2 \"gpc_reg_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:TD 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:TD 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dcmpuq %0,%1,%2\"\n   [(set_attr \"type\" \"fpcompare\")])\n \n (define_insn \"floatditd2\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(float:TD (match_operand:DI 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(float:TD (match_operand:DI 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dcffixq %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -650,8 +650,8 @@\n ;; This is the first stage of converting it to an integer type.\n \n (define_insn \"ftruncdd2\"\n-  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n-\t(fix:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=d\")\n+\t(fix:DD (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"drintn. 0,%0,%1,1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -660,8 +660,8 @@\n ;; This is the second stage of converting decimal float to integer type.\n \n (define_insn \"fixdddi2\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=f\")\n-\t(fix:DI (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")\n+\t(fix:DI (match_operand:DD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dctfix %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -670,8 +670,8 @@\n ;; This is the first stage of converting it to an integer type.\n \n (define_insn \"ftrunctd2\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n-\t(fix:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n+\t(fix:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"drintnq. 0,%0,%1,1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -680,8 +680,8 @@\n ;; This is the second stage of converting decimal float to integer type.\n \n (define_insn \"fixtddi2\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=f\")\n-\t(fix:DI (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")\n+\t(fix:DI (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_DFP\"\n   \"dctfixq %0,%1\"\n   [(set_attr \"type\" \"fp\")])"}, {"sha": "0950f33aa55504015e12dbf0c59a01113692bb30", "filename": "gcc/config/rs6000/ppu_intrinsics.h", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -385,11 +385,11 @@ typedef int __V4SI __attribute__((vector_size(16)));\n \n #define __mffs() __extension__\t\t\t\\\n   ({double result;\t\t\t\t\\\n-  __asm__ volatile (\"mffs %0\" : \"=f\" (result)); \\\n+  __asm__ volatile (\"mffs %0\" : \"=d\" (result)); \\\n   result; })\n \n #define __mtfsf(mask,value) \\\n-  __asm__ volatile (\"mtfsf %0,%1\" : : \"n\" (mask), \"f\" ((double) (value)))\n+  __asm__ volatile (\"mtfsf %0,%1\" : : \"n\" (mask), \"d\" ((double) (value)))\n   \n #define __mtfsfi(bits,field) \\\n   __asm__ volatile (\"mtfsfi %0,%1\" : : \"n\" (bits), \"n\" (field))\n@@ -400,8 +400,8 @@ typedef int __V4SI __attribute__((vector_size(16)));\n #define __setflm(v) __extension__\t      \\\n   ({double result;\t\t\t      \\\n   __asm__ volatile (\"mffs %0\\n\\tmtfsf 255,%1\" \\\n-\t\t    : \"=&f\" (result)\t      \\\n-\t\t    : \"f\" ((double) (v)));    \\\n+\t\t    : \"=&d\" (result)\t      \\\n+\t\t    : \"d\" ((double) (v)));    \\\n   result; })\n \n /* __builtin_fabs may perform unnecessary rounding.  */\n@@ -416,7 +416,7 @@ static __inline__ double\n __fabs(double x)\n {\n   double r;\n-  __asm__(\"fabs %0,%1\" : \"=f\"(r) : \"f\"(x));\n+  __asm__(\"fabs %0,%1\" : \"=d\"(r) : \"d\"(x));\n   return r;\n }\n \n@@ -434,7 +434,7 @@ static __inline__ double\n __fnabs(double x)\n {\n   double r;\n-  __asm__(\"fnabs %0,%1\" : \"=f\"(r) : \"f\"(x));\n+  __asm__(\"fnabs %0,%1\" : \"=d\"(r) : \"d\"(x));\n   return r;\n }\n \n@@ -453,7 +453,7 @@ static __inline__ double\n __fmadd(double x, double y, double z)\n {\n   double r;\n-  __asm__(\"fmadd %0,%1,%2,%3\" : \"=f\"(r) : \"f\"(x),\"f\"(y),\"f\"(z));\n+  __asm__(\"fmadd %0,%1,%2,%3\" : \"=d\"(r) : \"d\"(x),\"d\"(y),\"d\"(z));\n   return r;\n }\n \n@@ -463,7 +463,7 @@ static __inline__ double\n __fmsub(double x, double y, double z)\n {\n   double r;\n-  __asm__(\"fmsub %0,%1,%2,%3\" : \"=f\"(r) : \"f\"(x),\"f\"(y),\"f\"(z));\n+  __asm__(\"fmsub %0,%1,%2,%3\" : \"=d\"(r) : \"d\"(x),\"d\"(y),\"d\"(z));\n   return r;\n }\n \n@@ -473,7 +473,7 @@ static __inline__ double\n __fnmadd(double x, double y, double z)\n {\n   double r;\n-  __asm__(\"fnmadd %0,%1,%2,%3\" : \"=f\"(r) : \"f\"(x),\"f\"(y),\"f\"(z));\n+  __asm__(\"fnmadd %0,%1,%2,%3\" : \"=d\"(r) : \"d\"(x),\"d\"(y),\"d\"(z));\n   return r;\n }\n \n@@ -483,7 +483,7 @@ static __inline__ double\n __fnmsub(double x, double y, double z)\n {\n   double r;\n-  __asm__(\"fnmsub %0,%1,%2,%3\" : \"=f\"(r) : \"f\"(x),\"f\"(y),\"f\"(z));\n+  __asm__(\"fnmsub %0,%1,%2,%3\" : \"=d\"(r) : \"d\"(x),\"d\"(y),\"d\"(z));\n   return r;\n }\n \n@@ -533,7 +533,7 @@ static __inline__ double\n __fsel(double x, double y, double z)\n {\n   double r;\n-  __asm__(\"fsel %0,%1,%2,%3\" : \"=f\"(r) : \"f\"(x),\"f\"(y),\"f\"(z));\n+  __asm__(\"fsel %0,%1,%2,%3\" : \"=d\"(r) : \"d\"(x),\"d\"(y),\"d\"(z));\n   return r;\n }\n \n@@ -552,7 +552,7 @@ static __inline__ double\n __frsqrte(double x)\n {\n   double r;\n-  __asm__(\"frsqrte %0,%1\" : \"=f\" (r) : \"f\" (x));\n+  __asm__(\"frsqrte %0,%1\" : \"=d\" (r) : \"d\" (x));\n   return r;\n }\n \n@@ -570,7 +570,7 @@ static __inline__ double\n __fsqrt(double x)\n {\n   double r;\n-  __asm__(\"fsqrt %0,%1\" : \"=f\"(r) : \"f\"(x));\n+  __asm__(\"fsqrt %0,%1\" : \"=d\"(r) : \"d\"(x));\n   return r;\n }\n \n@@ -588,7 +588,7 @@ static __inline__ double\n __fmul(double a, double b)\n {\n   double d;\n-  __asm__ (\"fmul %0,%1,%2\" : \"=f\" (d) : \"f\" (a), \"f\" (b));\n+  __asm__ (\"fmul %0,%1,%2\" : \"=d\" (d) : \"d\" (a), \"d\" (b));\n   return d;\n }\n \n@@ -597,7 +597,7 @@ static __inline__ float\n __fmuls (float a, float b)\n {\n   float d;\n-  __asm__ (\"fmuls %0,%1,%2\" : \"=f\" (d) : \"f\" (a), \"f\" (b));\n+  __asm__ (\"fmuls %0,%1,%2\" : \"=d\" (d) : \"f\" (a), \"f\" (b));\n   return d;\n }\n \n@@ -606,7 +606,7 @@ static __inline__ float\n __frsp (float a)\n {\n   float d;\n-  __asm__ (\"frsp %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"frsp %0,%1\" : \"=d\" (d) : \"f\" (a));\n   return d;\n }\n \n@@ -615,7 +615,7 @@ static __inline__ double\n __fcfid (long long a)\n {\n   double d;\n-  __asm__ (\"fcfid %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"fcfid %0,%1\" : \"=d\" (d) : \"d\" (a));\n   return d;\n }\n \n@@ -624,7 +624,7 @@ static __inline__ long long\n __fctid (double a)\n {\n   long long d;\n-  __asm__ (\"fctid %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"fctid %0,%1\" : \"=d\" (d) : \"d\" (a));\n   return d;\n }\n \n@@ -633,7 +633,7 @@ static __inline__ long long\n __fctidz (double a)\n {\n   long long d;\n-  __asm__ (\"fctidz %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"fctidz %0,%1\" : \"=d\" (d) : \"d\" (a));\n   return d;\n }\n \n@@ -642,7 +642,7 @@ static __inline__ int\n __fctiw (double a)\n {\n   unsigned long long d;\n-  __asm__ (\"fctiw %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"fctiw %0,%1\" : \"=d\" (d) : \"d\" (a));\n   return (int) d;\n }\n \n@@ -651,7 +651,7 @@ static __inline__ int\n __fctiwz (double a)\n {\n   long long d;\n-  __asm__ (\"fctiwz %0,%1\" : \"=f\" (d) : \"f\" (a));\n+  __asm__ (\"fctiwz %0,%1\" : \"=d\" (d) : \"d\" (a));\n   return (int) d;\n }\n "}, {"sha": "cc6478ec847bd41b8e49c9dbcf2e54a342d40731", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 138, "deletions": 138, "changes": 276, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -5119,7 +5119,7 @@\n   \"\")\n \n (define_insn_and_split \"*extendsfdf2_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f,?f,f\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,?d,d\")\n \t(float_extend:DF (match_operand:SF 1 \"reg_or_mem_operand\" \"0,f,m\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"@\n@@ -5142,7 +5142,7 @@\n \n (define_insn \"*truncdfsf2_fpr\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n+\t(float_truncate:SF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"frsp %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -5616,7 +5616,7 @@\n \n (define_insn \"*fseldfsf4\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n-\t(if_then_else:SF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n+\t(if_then_else:SF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n \t\t\t     (match_operand:DF 4 \"zero_fp_constant\" \"F\"))\n \t\t\t (match_operand:SF 2 \"gpc_reg_operand\" \"f\")\n \t\t\t (match_operand:SF 3 \"gpc_reg_operand\" \"f\")))]\n@@ -5631,8 +5631,8 @@\n   \"\")\n \n (define_insn \"*negdf2_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"fneg %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -5644,15 +5644,15 @@\n   \"\")\n \n (define_insn \"*absdf2_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(abs:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"fabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*nabsdf2_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DF (abs:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DF (abs:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"fnabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -5665,9 +5665,9 @@\n   \"\")\n \n (define_insn \"*adddf3_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(plus:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"{fa|fadd} %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")\n@@ -5681,9 +5681,9 @@\n   \"\")\n \n (define_insn \"*subdf3_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n+\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"{fs|fsub} %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")\n@@ -5697,9 +5697,9 @@\n   \"\")\n \n (define_insn \"*muldf3_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"{fm|fmul} %0,%1,%2\"\n   [(set_attr \"type\" \"dmul\")\n@@ -5715,17 +5715,17 @@\n   \"\")\n \n (define_insn \"*divdf3_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(div:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n+\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && !TARGET_SIMPLE_FPU\"\n   \"{fd|fdiv} %0,%1,%2\"\n   [(set_attr \"type\" \"ddiv\")])\n \n (define_expand \"recipdf3\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"gpc_reg_operand\" \"f\")]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n+\t\t    (match_operand:DF 2 \"gpc_reg_operand\" \"d\")]\n \t\t   UNSPEC_FRES))]\n   \"TARGET_RECIP && TARGET_HARD_FLOAT && TARGET_POPCNTB && !optimize_size\n    && flag_finite_math_only && !flag_trapping_math\"\n@@ -5735,79 +5735,79 @@\n })\n \n (define_insn \"fred\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")] UNSPEC_FRES))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")] UNSPEC_FRES))]\n   \"TARGET_POPCNTB && flag_finite_math_only\"\n   \"fre %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(plus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))\n-\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(plus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))\n+\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\"\n   \"{fma|fmadd} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))\n-\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))\n+\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\"\n   \"{fms|fmsub} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DF (plus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))\n-\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DF (plus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t\t\t  (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\n    && HONOR_SIGNED_ZEROS (DFmode)\"\n   \"{fnma|fnmadd} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:DF (mult:DF (neg:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\"))\n-\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))\n-\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DF (mult:DF (neg:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\"))\n+\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))\n+\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\n    && ! HONOR_SIGNED_ZEROS (DFmode)\"\n   \"{fnma|fnmadd} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:DF (minus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))\n-\t\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:DF (minus:DF (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))\n+\t\t\t  (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\n    && HONOR_SIGNED_ZEROS (DFmode)\"\n   \"{fnms|fnmsub} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 3 \"gpc_reg_operand\" \"f\")\n-\t          (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%f\")\n-\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"f\"))))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(minus:DF (match_operand:DF 3 \"gpc_reg_operand\" \"d\")\n+\t          (mult:DF (match_operand:DF 1 \"gpc_reg_operand\" \"%d\")\n+\t\t\t   (match_operand:DF 2 \"gpc_reg_operand\" \"d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD && TARGET_DOUBLE_FLOAT\n    && ! HONOR_SIGNED_ZEROS (DFmode)\"\n   \"{fnms|fnmsub} %0,%1,%2,%3\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"fp_type\" \"fp_maddsub_d\")])\n \n (define_insn \"sqrtdf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(sqrt:DF (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(sqrt:DF (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))]\n   \"(TARGET_PPC_GPOPT || TARGET_POWER2) && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT\"\n   \"fsqrt %0,%1\"\n@@ -5865,21 +5865,21 @@\n }\")\n \n (define_insn \"*fseldfdf4\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(if_then_else:DF (ge (match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n \t\t\t     (match_operand:DF 4 \"zero_fp_constant\" \"F\"))\n-\t\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n+\t\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"d\")\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"fsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*fselsfdf4\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n \t(if_then_else:DF (ge (match_operand:SF 1 \"gpc_reg_operand\" \"f\")\n \t\t\t     (match_operand:SF 4 \"zero_fp_constant\" \"F\"))\n-\t\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"f\")\n-\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\")))]\n+\t\t\t (match_operand:DF 2 \"gpc_reg_operand\" \"d\")\n+\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_PPC_GFXOPT && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_SINGLE_FLOAT\"\n   \"fsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"fp\")])\n@@ -5935,12 +5935,12 @@\n }\")\n \n (define_insn_and_split \"*floatsidf2_internal\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&d\")\n \t(float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))\n+   (use (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))\n    (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"=o\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"=&f\"))\n+   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"=&d\"))\n    (clobber (match_operand:SI 6 \"gpc_reg_operand\" \"=&r\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"#\"\n@@ -6003,12 +6003,12 @@\n }\")\n \n (define_insn_and_split \"*floatunssidf2_internal\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=&d\")\n \t(unsigned_float:DF (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n    (use (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n-   (use (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))\n+   (use (match_operand:DF 3 \"gpc_reg_operand\" \"d\"))\n    (clobber (match_operand:DF 4 \"offsettable_mem_operand\" \"=o\"))\n-   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"=&f\"))]\n+   (clobber (match_operand:DF 5 \"gpc_reg_operand\" \"=&d\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"#\"\n   \"&& (can_create_pseudo_p () || offsettable_nonstrict_memref_p (operands[4]))\"\n@@ -6072,8 +6072,8 @@\n \n (define_insn_and_split \"*fix_truncdfsi2_internal\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=f\"))\n+\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=d\"))\n    (clobber (match_operand:DI 3 \"offsettable_mem_operand\" \"=o\"))]\n   \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT\"\n@@ -6095,8 +6095,8 @@\n \n (define_insn_and_split \"fix_truncdfsi2_internal_gfxopt\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=Z\")\n-\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=f\"))]\n+\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=d\"))]\n   \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT \n    && TARGET_PPC_GFXOPT\"\n@@ -6113,8 +6113,8 @@\n \n (define_insn_and_split \"fix_truncdfsi2_mfpgpr\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=f\"))\n+\t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=d\"))\n    (clobber (match_operand:DI 3 \"gpc_reg_operand\" \"=r\"))]\n   \"TARGET_POWERPC64 && TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT\"\n@@ -6131,17 +6131,17 @@\n ; because the first makes it clear that operand 0 is not live\n ; before the instruction.\n (define_insn \"fctiwz\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DI [(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\"))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DI [(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"d\"))]\n \t\t   UNSPEC_FCTIWZ))]\n   \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT\"\n   \"{fcirz|fctiwz} %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"btruncdf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")] UNSPEC_FRIZ))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")] UNSPEC_FRIZ))]\n   \"TARGET_FPRND && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"friz %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -6154,8 +6154,8 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"ceildf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")] UNSPEC_FRIP))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")] UNSPEC_FRIP))]\n   \"TARGET_FPRND && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"frip %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -6168,8 +6168,8 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"floordf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")] UNSPEC_FRIM))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")] UNSPEC_FRIM))]\n   \"TARGET_FPRND && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"frim %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -6182,8 +6182,8 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"rounddf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"f\")] UNSPEC_FRIN))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")] UNSPEC_FRIN))]\n   \"TARGET_FPRND && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"frin %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -6198,7 +6198,7 @@\n ; An UNSPEC is used so we don't have to support SImode in FP registers.\n (define_insn \"stfiwx\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=Z\")\n-\t(unspec:SI [(match_operand:DI 1 \"gpc_reg_operand\" \"f\")]\n+\t(unspec:SI [(match_operand:DI 1 \"gpc_reg_operand\" \"d\")]\n \t\t   UNSPEC_STFIWX))]\n   \"TARGET_PPC_GFXOPT\"\n   \"stfiwx %1,%y0\"\n@@ -6211,15 +6211,15 @@\n   \"\")\n \n (define_insn \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(float:DF (match_operand:DI 1 \"gpc_reg_operand\" \"!f#r\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(float:DF (match_operand:DI 1 \"gpc_reg_operand\" \"!d#r\")))]\n   \"(TARGET_POWERPC64 || TARGET_XILINX_FPU) && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FPRS\"\n   \"fcfid %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"fix_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=!f#r\")\n-\t(fix:DI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=!d#r\")\n+\t(fix:DI (match_operand:DF 1 \"gpc_reg_operand\" \"d\")))]\n   \"(TARGET_POWERPC64 || TARGET_XILINX_FPU) && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FPRS\"\n   \"fctidz %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n@@ -6247,8 +6247,8 @@\n ;; from double rounding.\n (define_insn_and_split \"floatdisf2_internal1\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n-        (float:SF (match_operand:DI 1 \"gpc_reg_operand\" \"!f#r\")))\n-   (clobber (match_scratch:DF 2 \"=f\"))]\n+        (float:SF (match_operand:DI 1 \"gpc_reg_operand\" \"!d#r\")))\n+   (clobber (match_scratch:DF 2 \"=d\"))]\n   \"TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_SINGLE_FLOAT\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -8497,8 +8497,8 @@\n ;; The \"??\" is a kludge until we can figure out a more reasonable way\n ;; of handling these non-offsettable values.\n (define_insn \"*movdf_hardfloat32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=!r,??r,m,f,f,m,!r,!r,!r\")\n-\t(match_operand:DF 1 \"input_operand\" \"r,m,r,f,m,f,G,H,F\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=!r,??r,m,d,d,m,!r,!r,!r\")\n+\t(match_operand:DF 1 \"input_operand\" \"r,m,r,d,m,d,G,H,F\"))]\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT \n    && (gpc_reg_operand (operands[0], DFmode)\n        || gpc_reg_operand (operands[1], DFmode))\"\n@@ -8637,8 +8637,8 @@\n ; ld/std require word-aligned displacements -> 'Y' constraint.\n ; List Y->r and r->Y before r->r for reload.\n (define_insn \"*movdf_hardfloat64_mfpgpr\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r,r,f\")\n-\t(match_operand:DF 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F,f,r\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y,r,!r,d,d,m,*c*l,!r,*h,!r,!r,!r,r,d\")\n+\t(match_operand:DF 1 \"input_operand\" \"r,Y,r,d,m,d,r,h,0,G,H,F,d,r\"))]\n   \"TARGET_POWERPC64 && TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT \n    && (gpc_reg_operand (operands[0], DFmode)\n@@ -8664,8 +8664,8 @@\n ; ld/std require word-aligned displacements -> 'Y' constraint.\n ; List Y->r and r->Y before r->r for reload.\n (define_insn \"*movdf_hardfloat64\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r\")\n-\t(match_operand:DF 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y,r,!r,d,d,m,*c*l,!r,*h,!r,!r,!r\")\n+\t(match_operand:DF 1 \"input_operand\" \"r,Y,r,d,m,d,r,h,0,G,H,F\"))]\n   \"TARGET_POWERPC64 && !TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS \n    && TARGET_DOUBLE_FLOAT \n    && (gpc_reg_operand (operands[0], DFmode)\n@@ -8715,8 +8715,8 @@\n ; otherwise reload, given m->f, will try to pick f->f and reload it,\n ; which doesn't make progress.  Likewise r->Y must be before r->r.\n (define_insn_and_split \"*movtf_internal\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,f,f,r,Y,r\")\n-\t(match_operand:TF 1 \"input_operand\"         \"f,o,f,YGHF,r,r\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,d,d,r,Y,r\")\n+\t(match_operand:TF 1 \"input_operand\"         \"d,o,d,YGHF,r,r\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\n    && (gpc_reg_operand (operands[0], TFmode)\n@@ -8770,9 +8770,9 @@\n })\n \n (define_insn_and_split \"*extenddftf2_internal\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,f,&f,r\")\n-       (float_extend:TF (match_operand:DF 1 \"input_operand\" \"fr,mf,mf,rmGHF\")))\n-   (use (match_operand:DF 2 \"zero_reg_mem_operand\" \"rf,m,f,n\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=o,d,&d,r\")\n+       (float_extend:TF (match_operand:DF 1 \"input_operand\" \"dr,md,md,rmGHF\")))\n+   (use (match_operand:DF 2 \"zero_reg_mem_operand\" \"rd,m,d,n\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT \n    && TARGET_LONG_DOUBLE_128\"\n@@ -8813,8 +8813,8 @@\n   \"\")\n \n (define_insn_and_split \"trunctfdf2_internal1\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f,?f\")\n-\t(float_truncate:DF (match_operand:TF 1 \"gpc_reg_operand\" \"0,f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,?d\")\n+\t(float_truncate:DF (match_operand:TF 1 \"gpc_reg_operand\" \"0,d\")))]\n   \"!TARGET_IEEEQUAD && !TARGET_XL_COMPAT\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n   \"@\n@@ -8829,8 +8829,8 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"trunctfdf2_internal2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_truncate:DF (match_operand:TF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(float_truncate:DF (match_operand:TF 1 \"gpc_reg_operand\" \"d\")))]\n   \"!TARGET_IEEEQUAD && TARGET_XL_COMPAT\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT \n    && TARGET_LONG_DOUBLE_128\"\n@@ -8855,8 +8855,8 @@\n \n (define_insn_and_split \"trunctfsf2_fprs\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:TF 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_scratch:DF 2 \"=f\"))]\n+\t(float_truncate:SF (match_operand:TF 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_scratch:DF 2 \"=d\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_SINGLE_FLOAT \n    && TARGET_LONG_DOUBLE_128\"\n@@ -8885,10 +8885,10 @@\n ; fadd, but rounding towards zero.\n ; This is probably not the optimal code sequence.\n (define_insn \"fix_trunc_helper\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:TF 1 \"gpc_reg_operand\" \"f\")]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:DF [(match_operand:TF 1 \"gpc_reg_operand\" \"d\")]\n \t\t   UNSPEC_FIX_TRUNC_TF))\n-   (clobber (match_operand:DF 2 \"gpc_reg_operand\" \"=&f\"))]\n+   (clobber (match_operand:DF 2 \"gpc_reg_operand\" \"=&d\"))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"mffs %2\\n\\tmtfsb1 31\\n\\tmtfsb0 30\\n\\tfadd %0,%1,%L1\\n\\tmtfsf 1,%2\"\n   [(set_attr \"type\" \"fp\")\n@@ -8929,10 +8929,10 @@\n \n (define_insn_and_split \"*fix_trunctfsi2_internal\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-        (fix:SI (match_operand:TF 1 \"gpc_reg_operand\" \"f\")))\n-   (clobber (match_operand:DF 2 \"gpc_reg_operand\" \"=f\"))\n-   (clobber (match_operand:DF 3 \"gpc_reg_operand\" \"=&f\"))\n-   (clobber (match_operand:DI 4 \"gpc_reg_operand\" \"=f\"))\n+        (fix:SI (match_operand:TF 1 \"gpc_reg_operand\" \"d\")))\n+   (clobber (match_operand:DF 2 \"gpc_reg_operand\" \"=d\"))\n+   (clobber (match_operand:DF 3 \"gpc_reg_operand\" \"=&d\"))\n+   (clobber (match_operand:DI 4 \"gpc_reg_operand\" \"=d\"))\n    (clobber (match_operand:DI 5 \"offsettable_mem_operand\" \"=o\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n@@ -8962,8 +8962,8 @@\n   \"\")\n \n (define_insn \"negtf2_internal\"\n-  [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=f\")\n-\t(neg:TF (match_operand:TF 1 \"gpc_reg_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=d\")\n+\t(neg:TF (match_operand:TF 1 \"gpc_reg_operand\" \"d\")))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\"\n   \"*\n@@ -9028,8 +9028,8 @@\n ; List r->r after r->\"o<>\", otherwise reload will try to reload a\n ; non-offsettable address by using r->r which won't make progress.\n (define_insn \"*movdi_internal32\"\n-  [(set (match_operand:DI 0 \"rs6000_nonimmediate_operand\" \"=o<>,r,r,*f,*f,m,r\")\n-\t(match_operand:DI 1 \"input_operand\" \"r,r,m,f,m,f,IJKnGHF\"))]\n+  [(set (match_operand:DI 0 \"rs6000_nonimmediate_operand\" \"=o<>,r,r,*d,*d,m,r\")\n+\t(match_operand:DI 1 \"input_operand\" \"r,r,m,d,m,d,IJKnGHF\"))]\n   \"! TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -9073,8 +9073,8 @@\n { rs6000_split_multireg_move (operands[0], operands[1]); DONE; })\n \n (define_insn \"*movdi_mfpgpr\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,*f,*f,m,r,*h,*h,r,*f\")\n-\t(match_operand:DI 1 \"input_operand\" \"r,m,r,I,L,nF,R,f,m,f,*h,r,0,*f,r\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,*d,*d,m,r,*h,*h,r,*d\")\n+\t(match_operand:DI 1 \"input_operand\" \"r,m,r,I,L,nF,R,d,m,d,*h,r,0,*d,r\"))]\n   \"TARGET_POWERPC64 && TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -9098,8 +9098,8 @@\n    (set_attr \"length\" \"4,4,4,4,4,20,4,4,4,4,4,4,4,4,4\")])\n \n (define_insn \"*movdi_internal64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,*f,*f,m,r,*h,*h\")\n-\t(match_operand:DI 1 \"input_operand\" \"r,m,r,I,L,nF,R,f,m,f,*h,r,0\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,*d,*d,m,r,*h,*h\")\n+\t(match_operand:DI 1 \"input_operand\" \"r,m,r,I,L,nF,R,d,m,d,*h,r,0\"))]\n   \"TARGET_POWERPC64 && (!TARGET_MFPGPR || !TARGET_HARD_FLOAT || !TARGET_FPRS)\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -10293,7 +10293,7 @@\n   [(set_attr \"type\" \"store_ux,store_u\")])\n \n (define_insn \"*movdf_update1\"\n-  [(set (match_operand:DF 3 \"gpc_reg_operand\" \"=f,f\")\n+  [(set (match_operand:DF 3 \"gpc_reg_operand\" \"=d,d\")\n \t(mem:DF (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=b,b\")\n@@ -10309,7 +10309,7 @@\n (define_insn \"*movdf_update2\"\n   [(set (mem:DF (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"0,0\")\n \t\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\")))\n-\t(match_operand:DF 3 \"gpc_reg_operand\" \"f,f\"))\n+\t(match_operand:DF 3 \"gpc_reg_operand\" \"d,d\"))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=b,b\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_UPDATE\n@@ -12186,17 +12186,17 @@\n \n (define_insn \"*cmpdf_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"f\")\n-\t\t      (match_operand:DF 2 \"gpc_reg_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:DF 2 \"gpc_reg_operand\" \"d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n   \"fcmpu %0,%1,%2\"\n   [(set_attr \"type\" \"fpcompare\")])\n \n ;; Only need to compare second words if first words equal\n (define_insn \"*cmptf_internal1\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:TF 1 \"gpc_reg_operand\" \"f\")\n-\t\t      (match_operand:TF 2 \"gpc_reg_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:TF 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:TF 2 \"gpc_reg_operand\" \"d\")))]\n   \"!TARGET_IEEEQUAD && !TARGET_XL_COMPAT\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_LONG_DOUBLE_128\"\n   \"fcmpu %0,%1,%2\\;bne %0,$+8\\;fcmpu %0,%L1,%L2\"\n@@ -12205,16 +12205,16 @@\n \n (define_insn_and_split \"*cmptf_internal2\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n-\t(compare:CCFP (match_operand:TF 1 \"gpc_reg_operand\" \"f\")\n-\t\t      (match_operand:TF 2 \"gpc_reg_operand\" \"f\")))\n-    (clobber (match_scratch:DF 3 \"=f\"))\n-    (clobber (match_scratch:DF 4 \"=f\"))\n-    (clobber (match_scratch:DF 5 \"=f\"))\n-    (clobber (match_scratch:DF 6 \"=f\"))\n-    (clobber (match_scratch:DF 7 \"=f\"))\n-    (clobber (match_scratch:DF 8 \"=f\"))\n-    (clobber (match_scratch:DF 9 \"=f\"))\n-    (clobber (match_scratch:DF 10 \"=f\"))]\n+\t(compare:CCFP (match_operand:TF 1 \"gpc_reg_operand\" \"d\")\n+\t\t      (match_operand:TF 2 \"gpc_reg_operand\" \"d\")))\n+    (clobber (match_scratch:DF 3 \"=d\"))\n+    (clobber (match_scratch:DF 4 \"=d\"))\n+    (clobber (match_scratch:DF 5 \"=d\"))\n+    (clobber (match_scratch:DF 6 \"=d\"))\n+    (clobber (match_scratch:DF 7 \"=d\"))\n+    (clobber (match_scratch:DF 8 \"=d\"))\n+    (clobber (match_scratch:DF 9 \"=d\"))\n+    (clobber (match_scratch:DF 10 \"=d\"))]\n   \"!TARGET_IEEEQUAD && TARGET_XL_COMPAT\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_LONG_DOUBLE_128\"\n   \"#\"\n@@ -14689,7 +14689,7 @@\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n \t\t    (set (match_operand:DF 3 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:DF 4 \"gpc_reg_operand\" \"f\"))])]\n+\t\t\t (match_operand:DF 4 \"gpc_reg_operand\" \"d\"))])]\n   \"\"\n   \"bl %z1\"\n   [(set_attr \"type\" \"branch\")\n@@ -14809,7 +14809,7 @@\n \t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n                    (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n-\t\t   (set (match_operand:DF 4 \"gpc_reg_operand\" \"=f\")\n+\t\t   (set (match_operand:DF 4 \"gpc_reg_operand\" \"=d\")\n \t\t\t(match_operand:DF 5 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %z2\""}, {"sha": "5c6790009ec2267d2171be1b1f9e178da240a591", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/799dbb0f77a506ed18a17ac3765b29af9dd88055/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=799dbb0f77a506ed18a17ac3765b29af9dd88055", "patch": "@@ -1909,8 +1909,11 @@ Any constant whose absolute value is no greater than 4-bits.\n @item b\n Address base register\n \n+@item d\n+Floating point register (containing 64-bit value)\n+\n @item f\n-Floating point register\n+Floating point register (containing 32-bit value)\n \n @item v\n Vector register"}]}