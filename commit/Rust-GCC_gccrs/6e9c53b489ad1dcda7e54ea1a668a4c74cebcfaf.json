{"sha": "6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU5YzUzYjQ4OWFkMWRjZGE3ZTU0ZWExYTY2OGE0Yzc0Y2ViY2ZhZg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-08-29T17:57:47Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-08-29T17:57:47Z"}, "message": "pa.c (move_operand): Cast GET_MODE_SIZE results to HOST_WIDE_INT for comparison with rtx INTVAL.\n\n\t* pa.c (move_operand): Cast GET_MODE_SIZE results to HOST_WIDE_INT for\n\tcomparison with rtx INTVAL.\n\t(pa_output_function_prologue): Don't mix signed and unsigned in `?'\n\texpression.\n\t* pa.h (FUNCTION_ARG_SIZE): Likewise.\n\nFrom-SVN: r45271", "tree": {"sha": "50f09a1cc68243106c5b3d3cae9420b829f363e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f09a1cc68243106c5b3d3cae9420b829f363e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/comments", "author": null, "committer": null, "parents": [{"sha": "53251a557518980db1280fb19db3c0e672126ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53251a557518980db1280fb19db3c0e672126ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53251a557518980db1280fb19db3c0e672126ea9"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "2d5043f201c9c330c76f0e6a7bc99ceb1ebd797c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "patch": "@@ -1,3 +1,11 @@\n+2001-08-29  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.c (move_operand): Cast GET_MODE_SIZE results to HOST_WIDE_INT for\n+\tcomparison with rtx INTVAL.\n+\t(pa_output_function_prologue): Don't mix signed and unsigned in `?'\n+\texpression.\n+\t* pa.h (FUNCTION_ARG_SIZE): Likewise.\n+\n 2001-08-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/lib1funcs.asm: Update the copyright.  Fix"}, {"sha": "0bc2c8fa6515e3e5dfa8849879ea58f3a5fc124e", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "patch": "@@ -377,12 +377,14 @@ move_operand (op, mode)\n       && ((GET_CODE (XEXP (op, 0)) == MULT\n \t   && GET_CODE (XEXP (XEXP (op, 0), 0)) == REG\n \t   && GET_CODE (XEXP (XEXP (op, 0), 1)) == CONST_INT\n-\t   && INTVAL (XEXP (XEXP (op, 0), 1)) == GET_MODE_SIZE (mode)\n+\t   && INTVAL (XEXP (XEXP (op, 0), 1))\n+\t      == (HOST_WIDE_INT) GET_MODE_SIZE (mode)\n \t   && GET_CODE (XEXP (op, 1)) == REG)\n \t  || (GET_CODE (XEXP (op, 1)) == MULT\n \t      &&GET_CODE (XEXP (XEXP (op, 1), 0)) == REG\n \t      && GET_CODE (XEXP (XEXP (op, 1), 1)) == CONST_INT\n-\t      && INTVAL (XEXP (XEXP (op, 1), 1)) == GET_MODE_SIZE (mode)\n+\t      && INTVAL (XEXP (XEXP (op, 1), 1))\n+\t\t == (HOST_WIDE_INT) GET_MODE_SIZE (mode)\n \t      && GET_CODE (XEXP (op, 0)) == REG)))\n     return 1;\n \n@@ -2938,7 +2940,8 @@ pa_output_function_prologue (file, size)\n       total_code_bytes += FUNCTION_BOUNDARY / BITS_PER_UNIT;\n \n       /* Be prepared to handle overflows.  */\n-      total_code_bytes = old_total > total_code_bytes ? -1 : total_code_bytes;\n+      if (old_total > total_code_bytes)\n+\ttotal_code_bytes = -1;\n     }\n   else\n     total_code_bytes = -1;"}, {"sha": "24f6b41e3117d9159adb5a01761b0f0d5ad27427", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=6e9c53b489ad1dcda7e54ea1a668a4c74cebcfaf", "patch": "@@ -744,7 +744,7 @@ struct hppa_args {int words, nargs_prototype, indirect; };\n \n #define FUNCTION_ARG_SIZE(MODE, TYPE)\t\\\n   ((((MODE) != BLKmode \\\n-     ? GET_MODE_SIZE (MODE) \\\n+     ? (HOST_WIDE_INT) GET_MODE_SIZE (MODE) \\\n      : int_size_in_bytes (TYPE)) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n /* Update the data in CUM to advance over an argument"}]}