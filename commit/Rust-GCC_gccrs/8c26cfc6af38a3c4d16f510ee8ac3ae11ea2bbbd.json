{"sha": "8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyNmNmYzZhZjM4YTNjNGQxNmY1MTBlZThhYzNhZTExZWEyYmJiZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-09T11:15:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-10-09T11:18:47Z"}, "message": "Fixup gcc.dg/vect/pr65947-3.c when masked loads are available\n\nThe following adds a effective target to properly allow\nthe gcc.dg/vect/pr65947-3.c expected vectorization to be adjusted\nwhen run with, say, -march=cascadelake.\n\n2020-10-09  Richard Biener  <rguenther@suse.de>\n\ngcc/\n\t* doc/sourcebuild.texi (vect_masked_load): Document.\n\ngcc/testsuite\n\t* lib/target-supports.exp (check_effective_target_vect_masked_load):\n\tNew effective target.\n\t* gcc.dg/vect/pr65947-3.c: Update.", "tree": {"sha": "24541aacf36c0b812d28e4e081a3c67d547c2ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24541aacf36c0b812d28e4e081a3c67d547c2ef6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16760e5bf7028dfa36b39af305d05cdf2c15b3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16760e5bf7028dfa36b39af305d05cdf2c15b3a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16760e5bf7028dfa36b39af305d05cdf2c15b3a9"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "49316a5d0ff97e9f369ae2a3244da14f68baed10", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "patch": "@@ -1527,6 +1527,9 @@ optabs on vectors.\n Target supports fully-masked (also known as fully-predicated) loops,\n so that vector loops can handle partial as well as full vectors.\n \n+@item vect_masked_load\n+Target supports vector masked loads.\n+\n @item vect_masked_store\n Target supports vector masked stores.\n "}, {"sha": "f1bfad65c22cc7a191cbb2fe55a4b9687a5ce6c2", "filename": "gcc/testsuite/gcc.dg/vect/pr65947-3.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr65947-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr65947-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr65947-3.c?ref=8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "patch": "@@ -51,9 +51,10 @@ main (void)\n   return 0;\n }\n \n-/* XFAILed because of the fix for PR97307 which sinks the load of a[i], preventing\n-   if-conversion to happen.  */\n-/* { dg-final { scan-tree-dump-times \"LOOP VECTORIZED\" 2 \"vect\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"LOOP VECTORIZED\" 1 \"vect\" } } */\n+/* Since the fix for PR97307 which sinks the load of a[i], preventing\n+   if-conversion to happen, targets that cannot do masked loads only\n+   vectorize the inline copy.  */\n+/* { dg-final { scan-tree-dump-times \"LOOP VECTORIZED\" 2 \"vect\" { target vect_masked_load } } } */\n+/* { dg-final { scan-tree-dump-times \"LOOP VECTORIZED\" 1 \"vect\" { target { ! vect_masked_load } } } } */\n /* { dg-final { scan-tree-dump-times \"optimizing condition reduction with FOLD_EXTRACT_LAST\" 2 \"vect\" { target vect_fold_extract_last } } } */\n /* { dg-final { scan-tree-dump-not \"condition expression based on integer induction.\" \"vect\" } } */"}, {"sha": "ecf8be3e567c0bfb77c81ec3881ce8a542650f43", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd", "patch": "@@ -7194,6 +7194,14 @@ proc check_effective_target_vect_load_lanes { } {\n \t     || [istarget aarch64*-*-*] }}]\n }\n \n+# Return 1 if the target supports vector masked loads.\n+\n+proc check_effective_target_vect_masked_load { } {\n+    return [expr { [check_avx_available]\n+\t\t   || [check_effective_target_aarch64_sve]\n+\t\t   || [istarget amdgcn*-*-*] } ]\n+}\n+\n # Return 1 if the target supports vector masked stores.\n \n proc check_effective_target_vect_masked_store { } {"}]}