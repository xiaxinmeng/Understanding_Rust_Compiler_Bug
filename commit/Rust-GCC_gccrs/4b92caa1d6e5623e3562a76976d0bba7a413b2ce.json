{"sha": "4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5MmNhYTFkNmU1NjIzZTM1NjJhNzY5NzZkMGJiYTdhNDEzYjJjZQ==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2014-07-24T14:43:15Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-07-24T14:43:15Z"}, "message": "[AArch64] Optimize epilogue when there is no frame pointer.\n\nFrom-SVN: r213000", "tree": {"sha": "ba08a8e49e7ef1bb33c5d39add2e264b8636f409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba08a8e49e7ef1bb33c5d39add2e264b8636f409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/comments", "author": null, "committer": null, "parents": [{"sha": "c5e1f66e59f66083d9bc4229721aaae8d320c8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e1f66e59f66083d9bc4229721aaae8d320c8dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e1f66e59f66083d9bc4229721aaae8d320c8dc"}], "stats": {"total": 85, "additions": 75, "deletions": 10}, "files": [{"sha": "1e827b573e3815abfa3ba51ce77a7a2aea27bff1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -1,3 +1,8 @@\n+2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_popwb_single_reg): New function.\n+\t(aarch64_expand_epilogue): Optimize epilogue when !frame_pointer_needed.\n+\n 2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_pushwb_single_reg): New function."}, {"sha": "ed80269d55fafab40e08f658a03241391ba85f3e", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 45, "deletions": 10, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -1946,6 +1946,23 @@ aarch64_pushwb_single_reg (enum machine_mode mode, unsigned regno,\n   RTX_FRAME_RELATED_P (insn) = 1;\n }\n \n+static void\n+aarch64_popwb_single_reg (enum machine_mode mode, unsigned regno,\n+\t\t\t  HOST_WIDE_INT adjustment)\n+{\n+  rtx base_rtx = stack_pointer_rtx;\n+  rtx insn, reg, mem;\n+\n+  reg = gen_rtx_REG (mode, regno);\n+  mem = gen_rtx_POST_MODIFY (Pmode, base_rtx,\n+\t\t\t     plus_constant (Pmode, base_rtx, adjustment));\n+  mem = gen_rtx_MEM (mode, mem);\n+\n+  insn = emit_move_insn (reg, mem);\n+  add_reg_note (insn, REG_CFA_RESTORE, reg);\n+  RTX_FRAME_RELATED_P (insn) = 1;\n+}\n+\n static rtx\n aarch64_gen_storewb_pair (enum machine_mode mode, rtx base, rtx reg, rtx reg2,\n \t\t\t  HOST_WIDE_INT adjustment)\n@@ -2384,7 +2401,6 @@ aarch64_expand_epilogue (bool for_sibcall)\n   HOST_WIDE_INT fp_offset;\n   rtx insn;\n   rtx cfa_reg;\n-  bool skip_wb = false;\n \n   aarch64_layout_frame ();\n \n@@ -2432,22 +2448,41 @@ aarch64_expand_epilogue (bool for_sibcall)\n       cfa_reg = stack_pointer_rtx;\n     }\n \n-  aarch64_restore_callee_saves (DFmode, frame_pointer_needed ? 0 : fp_offset,\n-\t\t\t\tV0_REGNUM, V31_REGNUM, skip_wb);\n-\n   if (offset > 0)\n     {\n+      unsigned reg1 = cfun->machine->frame.wb_candidate1;\n+      unsigned reg2 = cfun->machine->frame.wb_candidate2;\n+      bool skip_wb = true;\n+\n       if (frame_pointer_needed)\n+\tfp_offset = 0;\n+      else if (fp_offset\n+\t       || reg1 == FIRST_PSEUDO_REGISTER\n+\t       || (reg2 == FIRST_PSEUDO_REGISTER\n+\t\t   && offset >= 256))\n+\tskip_wb = false;\n+\n+      aarch64_restore_callee_saves (DImode, fp_offset, R0_REGNUM, R30_REGNUM,\n+\t\t\t\t    skip_wb);\n+      aarch64_restore_callee_saves (DFmode, fp_offset, V0_REGNUM, V31_REGNUM,\n+\t\t\t\t    skip_wb);\n+\n+      if (skip_wb)\n \t{\n-\t  aarch64_restore_callee_saves (DImode, 0, R0_REGNUM, R28_REGNUM,\n-\t\t\t\t\tskip_wb);\n-\t  aarch64_popwb_pair_reg (DImode, R29_REGNUM, R30_REGNUM, offset,\n-\t\t\t\t  cfa_reg);\n+\t  enum machine_mode mode1 = (reg1 <= R30_REGNUM) ? DImode : DFmode;\n+\n+\t  if (reg2 == FIRST_PSEUDO_REGISTER)\n+\t    aarch64_popwb_single_reg (mode1, reg1, offset);\n+\t  else\n+\t    {\n+\t      if (reg1 != HARD_FRAME_POINTER_REGNUM)\n+\t\tcfa_reg = NULL;\n+\n+\t      aarch64_popwb_pair_reg (mode1, reg1, reg2, offset, cfa_reg);\n+\t    }\n \t}\n       else\n \t{\n-\t  aarch64_restore_callee_saves (DImode, fp_offset, R0_REGNUM,\n-\t\t\t\t\tR30_REGNUM, skip_wb);\n \t  insn = emit_insn (gen_add2_insn (stack_pointer_rtx,\n \t\t\t\t\t   GEN_INT (offset)));\n \t  RTX_FRAME_RELATED_P (insn) = 1;"}, {"sha": "1aeb7abd353e9ffb56cc10ac785123f152ab5885", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -1,3 +1,14 @@\n+2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* gcc.target/aarch64/test_frame_1.c: Match optimized instruction\n+\tsequences.\n+\t* gcc.target/aarch64/test_frame_2.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_4.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_6.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_7.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_8.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_10.c: Likewise.\n+\n 2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* gcc.target/aarch64/test_frame_1.c: Match optimized instruction"}, {"sha": "5b3c0ab32f700dfb27d2058143145e1b51b16352", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_1.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -14,4 +14,6 @@ t_frame_pattern (test1, 200, )\n t_frame_run (test1)\n \n /* { dg-final { scan-assembler-times \"str\\tx30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 3 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "525b49e3868435e4e9b7aaeb8d2b764ef97005d9", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_10.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -16,4 +16,6 @@ t_frame_pattern_outgoing (test10, 480, \"x19\", 24, a[8], a[9], a[10])\n t_frame_run (test10)\n \n /* { dg-final { scan-assembler-times \"stp\\tx19, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ldp\\tx19, x30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 1 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "6ec4088da03c85e0e98ae58dbcbe3f3894d68f2e", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_2.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -15,4 +15,6 @@ t_frame_run (test2)\n \n \n /* { dg-final { scan-assembler-times \"stp\\tx19, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ldp\\tx19, x30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 2 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "ebfb290ef1229684b48d968b2d28d50211486c08", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_4.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -14,4 +14,6 @@ t_frame_pattern (test4, 400, \"x19\")\n t_frame_run (test4)\n \n /* { dg-final { scan-assembler-times \"stp\\tx19, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ldp\\tx19, x30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 2 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "b5ea7ee08ce09e864be89a2ebf059af12c0f000c", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_6.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -15,4 +15,6 @@ t_frame_pattern (test6, 700, )\n t_frame_run (test6)\n \n /* { dg-final { scan-assembler-times \"str\\tx30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 2 } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 3 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "daa1f422e169d933a9c32cc9588628dc327750c0", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_7.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_7.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -15,4 +15,6 @@ t_frame_pattern (test7, 700, \"x19\")\n t_frame_run (test7)\n \n /* { dg-final { scan-assembler-times \"stp\\tx19, x30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ldp\\tx19, x30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 2 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "4ce630ce0fec2d977ec6765c33b2fca7994414d4", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92caa1d6e5623e3562a76976d0bba7a413b2ce/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_8.c?ref=4b92caa1d6e5623e3562a76976d0bba7a413b2ce", "patch": "@@ -13,4 +13,6 @@ t_frame_pattern_outgoing (test8, 700, , 8, a[8])\n t_frame_run (test8)\n \n /* { dg-final { scan-assembler-times \"str\\tx30, \\\\\\[sp, -\\[0-9\\]+\\\\\\]!\" 3 } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx30, \\\\\\[sp\\\\\\], \\[0-9\\]+\" 3 } } */\n+\n /* { dg-final { cleanup-saved-temps } } */"}]}