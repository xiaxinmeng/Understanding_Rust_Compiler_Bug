{"sha": "eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwZGJkYzcyM2JlZTQxNjcyZGJiZmUyYzczNGE2NWY0NGZjMjhjMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-18T15:31:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-18T15:31:24Z"}, "message": "class.c (build_if_in_charge): Split out from build_base_path.\n\n\t* class.c (build_if_in_charge): Split out from build_base_path.\n\n\t* init.c (expand_virtual_init, expand_default_init): Use it.\n\t* call.c (build_special_member_call): Use it.\n\nFrom-SVN: r234333", "tree": {"sha": "a6776f848e985be17168c1d3c0305638ecefce5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6776f848e985be17168c1d3c0305638ecefce5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07c10d8f2e8454b623cb8b30c093caa97299de6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c10d8f2e8454b623cb8b30c093caa97299de6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c10d8f2e8454b623cb8b30c093caa97299de6b"}], "stats": {"total": 53, "additions": 31, "deletions": 22}, "files": [{"sha": "adecb92f39d383796c09aaf71e2a77f518aa7fb0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "patch": "@@ -1,3 +1,9 @@\n+2016-03-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.c (build_if_in_charge): Split out from build_base_path.\n+\t* init.c (expand_virtual_init, expand_default_init): Use it.\n+\t* call.c (build_special_member_call): Use it.\n+\n 2016-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70267"}, {"sha": "65739e4ea7f0894e14479d286041fcf22bb43f30", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "patch": "@@ -8004,11 +8004,7 @@ build_special_member_call (tree instance, tree name, vec<tree, va_gc> **args,\n       vtt = decay_conversion (vtt, complain);\n       if (vtt == error_mark_node)\n \treturn error_mark_node;\n-      vtt = build3 (COND_EXPR, TREE_TYPE (vtt),\n-\t\t    build2 (EQ_EXPR, boolean_type_node,\n-\t\t\t    current_in_charge_parm, integer_zero_node),\n-\t\t    current_vtt_parm,\n-\t\t    vtt);\n+      vtt = build_if_in_charge (vtt, current_vtt_parm);\n       if (BINFO_SUBVTT_INDEX (binfo))\n \tsub_vtt = fold_build_pointer_plus (vtt, BINFO_SUBVTT_INDEX (binfo));\n       else"}, {"sha": "33e46e0fc733f24914666890899f04ff5d5d3a83", "filename": "gcc/cp/class.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "patch": "@@ -225,6 +225,24 @@ int n_convert_harshness = 0;\n int n_compute_conversion_costs = 0;\n int n_inner_fields_searched = 0;\n \n+/* Return a COND_EXPR that executes TRUE_STMT if this execution of the\n+   'structor is in charge of 'structing virtual bases, or FALSE_STMT\n+   otherwise.  */\n+\n+tree\n+build_if_in_charge (tree true_stmt, tree false_stmt)\n+{\n+  gcc_assert (DECL_HAS_IN_CHARGE_PARM_P (current_function_decl));\n+  tree cmp = build2 (NE_EXPR, boolean_type_node,\n+\t\t     current_in_charge_parm, integer_zero_node);\n+  tree type = unlowered_expr_type (true_stmt);\n+  if (VOID_TYPE_P (type))\n+    type = unlowered_expr_type (false_stmt);\n+  tree cond = build3 (COND_EXPR, type,\n+\t\t      cmp, true_stmt, false_stmt);\n+  return cond;\n+}\n+\n /* Convert to or from a base subobject.  EXPR is an expression of type\n    `A' or `A*', an expression of type `B' or `B*' is returned.  To\n    convert A to a base B, CODE is PLUS_EXPR and BINFO is the binfo for\n@@ -470,12 +488,9 @@ build_base_path (enum tree_code code,\n \t/* Negative fixed_type_p means this is a constructor or destructor;\n \t   virtual base layout is fixed in in-charge [cd]tors, but not in\n \t   base [cd]tors.  */\n-\toffset = build3 (COND_EXPR, ptrdiff_type_node,\n-\t\t\t build2 (EQ_EXPR, boolean_type_node,\n-\t\t\t\t current_in_charge_parm, integer_zero_node),\n-\t\t\t v_offset,\n-\t\t\t convert_to_integer (ptrdiff_type_node,\n-\t\t\t\t\t     BINFO_OFFSET (binfo)));\n+\toffset = build_if_in_charge\n+\t  (convert_to_integer (ptrdiff_type_node, BINFO_OFFSET (binfo)),\n+\t   v_offset);\n       else\n \toffset = v_offset;\n     }"}, {"sha": "85d64057c32faf1ee4c17af333c5ad2bace33e63", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "patch": "@@ -5638,6 +5638,7 @@ extern tree get_function_version_dispatcher\t(tree);\n \n /* in class.c */\n extern tree build_vfield_ref\t\t\t(tree, tree);\n+extern tree build_if_in_charge\t\t\t(tree true_stmt, tree false_stmt = void_node);\n extern tree build_base_path\t\t\t(enum tree_code, tree,\n \t\t\t\t\t\t tree, int, tsubst_flags_t);\n extern tree convert_to_base\t\t\t(tree, tree, bool, bool,"}, {"sha": "aee3b8416e4b05d44058ea178861f31057aed349", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0dbdc723bee41672dbbfe2c734a65f44fc28c0/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=eb0dbdc723bee41672dbbfe2c734a65f44fc28c0", "patch": "@@ -1243,12 +1243,7 @@ expand_virtual_init (tree binfo, tree decl)\n       /* The actual initializer is the VTT value only in the subobject\n \t constructor.  In maybe_clone_body we'll substitute NULL for\n \t the vtt_parm in the case of the non-subobject constructor.  */\n-      vtbl = build3 (COND_EXPR,\n-\t\t     TREE_TYPE (vtbl),\n-\t\t     build2 (EQ_EXPR, boolean_type_node,\n-\t\t\t     current_in_charge_parm, integer_zero_node),\n-\t\t     vtbl2,\n-\t\t     vtbl);\n+      vtbl = build_if_in_charge (vtbl, vtbl2);\n     }\n \n   /* Compute the location of the vtpr.  */\n@@ -1741,11 +1736,7 @@ expand_default_init (tree binfo, tree true_exp, tree exp, tree init, int flags,\n \t\t\t\t\t&parms, binfo, flags,\n \t\t\t\t\tcomplain);\n       base = fold_build_cleanup_point_expr (void_type_node, base);\n-      rval = build3 (COND_EXPR, void_type_node,\n-\t\t     build2 (EQ_EXPR, boolean_type_node,\n-\t\t\t     current_in_charge_parm, integer_zero_node),\n-\t\t     base,\n-\t\t     complete);\n+      rval = build_if_in_charge (complete, base);\n     }\n    else\n     {"}]}