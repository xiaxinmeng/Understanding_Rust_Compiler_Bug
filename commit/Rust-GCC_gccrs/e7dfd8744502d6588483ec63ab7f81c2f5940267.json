{"sha": "e7dfd8744502d6588483ec63ab7f81c2f5940267", "node_id": "C_kwDOANBUbNoAKGU3ZGZkODc0NDUwMmQ2NTg4NDgzZWM2M2FiN2Y4MWMyZjU5NDAyNjc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-21T00:16:34Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-21T00:16:34Z"}, "message": "Daily bump.", "tree": {"sha": "0d5293c0b2e72b78dccf77d983ce7e7b62aa861a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d5293c0b2e72b78dccf77d983ce7e7b62aa861a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7dfd8744502d6588483ec63ab7f81c2f5940267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7dfd8744502d6588483ec63ab7f81c2f5940267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7dfd8744502d6588483ec63ab7f81c2f5940267", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7dfd8744502d6588483ec63ab7f81c2f5940267/comments", "author": null, "committer": null, "parents": [{"sha": "87a9bfe86d8a87d09de5d60e430d14bfa6c816f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87a9bfe86d8a87d09de5d60e430d14bfa6c816f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87a9bfe86d8a87d09de5d60e430d14bfa6c816f0"}], "stats": {"total": 136, "additions": 135, "deletions": 1}, "files": [{"sha": "9a8bfd0f2e1aeaf6f05e5f387caedfcbbd57f0fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1,3 +1,43 @@\n+2022-07-20  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR rtl-optimization/101347\n+\t* builtins.cc (expand_builtin) [BUILT_IN_SETJMP_SETUP]: Move\n+\tpopulation of nonlocal_goto_handler_labels from here ...\n+\t(expand_builtin) [BUILT_IN_SETJMP_RECEIVER]: ... to here.\n+\t* rtlanal.cc (remove_node_from_insn_list): Verify that a\n+\tduplicate is not present in the remainder of the list.\n+\n+2022-07-20  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* rtl.h (remove_node_from_expr_list): Remove declaration.\n+\t* rtlanal.cc (remove_node_from_expr_list): Remove (no uses).\n+\n+2022-07-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.cc (bump_vector_ptr): Return an\n+\tinvariant updated address when the input was invariant.\n+\n+2022-07-20  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* passes.def: (Split pass_cse_sincos to pass_expand_powcabs\n+\tand pass_cse_sincos, and move pass_cse_sincos after vectorizer).\n+\t* timevar.def (TV_TREE_POWCABS): New timevar.\n+\t* tree-pass.h (make_pass_expand_powcabs): Split from pass_cse_sincos.\n+\t* tree-ssa-math-opts.cc (gimple_expand_builtin_cabs): Ditto.\n+\t(class pass_expand_powcabs): Ditto.\n+\t(pass_expand_powcabs::execute): Ditto.\n+\t(make_pass_expand_powcabs): Ditto.\n+\t(pass_cse_sincos::execute): Remove pow/cabs expand part.\n+\t(make_pass_cse_sincos): Ditto.\n+\n+2022-07-20  Richard Biener  <richard.guenther@gmail.com>\n+\t    Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\tPR tree-optimization/106010\n+\t* tree-complex.cc (init_dont_simulate_again): Lower complex\n+\ttype move.\n+\t(expand_complex_move): Also expand COMPLEX_CST for rhs.\n+\n 2022-07-19  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gimple-range-cache.cc (ranger_cache::range_from_dom): Check"}, {"sha": "ace4919765e58c1cb5566560324beca102362c4a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1 +1 @@\n-20220720\n+20220721"}, {"sha": "a94593ee67fa31e4b47b99e59d6faffbb1c7c8f7", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1,3 +1,17 @@\n+2022-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106373\n+\t* sm-taint.cc (taint_state_machine::on_condition): Potentially\n+\tupdate the state of the RHS as well as the LHS.\n+\n+2022-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106359\n+\t* region.h (string_region::tracked_p): New.\n+\t* store.cc (binding_cluster::binding_cluster): Move here from\n+\tstore.h.  Add assertion that base_region is tracked_p.\n+\t* store.h (binding_cluster::binding_cluster): Move to store.cc.\n+\n 2022-07-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106321"}, {"sha": "1109cd20e8c9583d75a9ea13500b38156d211dbc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1,3 +1,9 @@\n+2022-07-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/101330\n+\t* openmp.cc (gfc_match_iterator): Remove left-over code from\n+\tdevelopment that could lead to a crash on invalid input.\n+\n 2022-07-19  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/103590"}, {"sha": "44d6ee280156f1edc85d483efc05c442263ac44d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1,3 +1,49 @@\n+2022-07-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106373\n+\t* gcc.dg/analyzer/torture/taint-read-index-3.c: New test.\n+\n+2022-07-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/101330\n+\t* gfortran.dg/gomp/affinity-clause-7.f90: New test.\n+\n+2022-07-20  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.dg/pow-sqrt-synth-1.c: Adjust testcase.\n+\n+2022-07-20  Richard Biener  <richard.guenther@gmail.com>\n+\t    Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr106010-1a.c: New test.\n+\t* gcc.target/i386/pr106010-1b.c: New test.\n+\t* gcc.target/i386/pr106010-1c.c: New test.\n+\t* gcc.target/i386/pr106010-2a.c: New test.\n+\t* gcc.target/i386/pr106010-2b.c: New test.\n+\t* gcc.target/i386/pr106010-2c.c: New test.\n+\t* gcc.target/i386/pr106010-3a.c: New test.\n+\t* gcc.target/i386/pr106010-3b.c: New test.\n+\t* gcc.target/i386/pr106010-3c.c: New test.\n+\t* gcc.target/i386/pr106010-4a.c: New test.\n+\t* gcc.target/i386/pr106010-4b.c: New test.\n+\t* gcc.target/i386/pr106010-4c.c: New test.\n+\t* gcc.target/i386/pr106010-5a.c: New test.\n+\t* gcc.target/i386/pr106010-5b.c: New test.\n+\t* gcc.target/i386/pr106010-5c.c: New test.\n+\t* gcc.target/i386/pr106010-6a.c: New test.\n+\t* gcc.target/i386/pr106010-6b.c: New test.\n+\t* gcc.target/i386/pr106010-6c.c: New test.\n+\t* gcc.target/i386/pr106010-7a.c: New test.\n+\t* gcc.target/i386/pr106010-7b.c: New test.\n+\t* gcc.target/i386/pr106010-7c.c: New test.\n+\t* gcc.target/i386/pr106010-8a.c: New test.\n+\t* gcc.target/i386/pr106010-8b.c: New test.\n+\t* gcc.target/i386/pr106010-8c.c: New test.\n+\t* gcc.target/i386/pr106010-9a.c: New test.\n+\t* gcc.target/i386/pr106010-9b.c: New test.\n+\t* gcc.target/i386/pr106010-9c.c: New test.\n+\t* gcc.target/i386/pr106010-9d.c: New test.\n+\n 2022-07-19  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/103590"}, {"sha": "8186d9938e3ed94ab71034ce344bfece2c686ced", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7dfd8744502d6588483ec63ab7f81c2f5940267/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7dfd8744502d6588483ec63ab7f81c2f5940267/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e7dfd8744502d6588483ec63ab7f81c2f5940267", "patch": "@@ -1,3 +1,31 @@\n+2022-07-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100823\n+\t* include/bits/stl_iterator.h (common_iterator): Define\n+\tdestructor, copy constructor and move constructor as trivial\n+\twhen the underlying types allow.\n+\t* testsuite/24_iterators/common_iterator/100823.cc: Check\n+\ttriviality of special members.\n+\n+2022-07-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100823\n+\t* include/bits/stl_iterator.h (common_iterator): Define move\n+\tconstructor and move assignment operator.\n+\t(common_iterator::_M_assign): New function implementing\n+\tassignment.\n+\t(common_iterator::operator=): Use _M_assign.\n+\t(common_iterator::_S_valueless): New constant.\n+\t* testsuite/24_iterators/common_iterator/100823.cc: New test.\n+\n+2022-07-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator.h (common_iterator): Fix incorrect\n+\tuses of is_nothrow_assignable_v. Fix inconsistent constraints on\n+\tfriend declaration. Do not move argument in copy constructor.\n+\t* testsuite/24_iterators/common_iterator/1.cc: Check for\n+\tnoexcept constructibnle/assignable.\n+\n 2022-07-19  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/debug.h [_GLIBCXX_DEBUG](__glibcxx_requires_string): Define"}]}