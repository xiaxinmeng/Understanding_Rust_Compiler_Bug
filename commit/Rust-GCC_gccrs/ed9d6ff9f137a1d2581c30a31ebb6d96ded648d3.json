{"sha": "ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ5ZDZmZjlmMTM3YTFkMjU4MWMzMGEzMWViYjZkOTZkZWQ2NDhkMw==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-04-30T19:47:38Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-04-30T19:47:38Z"}, "message": "config.gcc (hppa1.1-*-pro*, [...]): Define xmake_file.\n\n\t* config.gcc (hppa1.1-*-pro*, hppa1.1-*-osf*, hppa1.1-*-rtems*,\n\thppa1.0-*-osf*, hppa1.1-*-bsd*, hppa1.1-*-hpux10*, hppa2*-*-hpux10*,\n\thppa1.0-*-hpux10*, hppa*64*-*-hpux11*, hppa1.1-*-hpux11*,\n\thppa2*-*-hpux11*, hppa1.0-*-hpux11*, hppa*-*-lites*): Define xmake_file.\n\t* pa/t-linux, pa/t-pa, pa/t-pa64, t-pro (T_ADAFLAGS): Delete.\n\t* pa/x-ada: New file.  Define ADA_CFLAGS.\n\nFrom-SVN: r52969", "tree": {"sha": "91722b360f116ed83296e3d7164980b140ce359f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91722b360f116ed83296e3d7164980b140ce359f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/comments", "author": null, "committer": null, "parents": [{"sha": "1f2641b6d2390c03ac4ffa2e9a554bf100574e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2641b6d2390c03ac4ffa2e9a554bf100574e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2641b6d2390c03ac4ffa2e9a554bf100574e54"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "b7daa5c1151421c3c699e6d0303f3c4714b8c3b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -1,3 +1,12 @@\n+2002-04-30  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* config.gcc (hppa1.1-*-pro*, hppa1.1-*-osf*, hppa1.1-*-rtems*,\n+\thppa1.0-*-osf*, hppa1.1-*-bsd*, hppa1.1-*-hpux10*, hppa2*-*-hpux10*,\n+\thppa1.0-*-hpux10*, hppa*64*-*-hpux11*, hppa1.1-*-hpux11*,\n+\thppa2*-*-hpux11*, hppa1.0-*-hpux11*, hppa*-*-lites*): Define xmake_file.\n+\t* pa/t-linux, pa/t-pa, pa/t-pa64, t-pro (T_ADAFLAGS): Delete.\n+\t* pa/x-ada: New file.  Define ADA_CFLAGS.\n+\n 2002-04-30  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.h (MMIX_LAST_STACK_REGISTER_REGNUM): Renamed"}, {"sha": "4cc97854f314c98544a8f78ebaf82945dce24731", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -890,33 +890,39 @@ hppa1.1-*-pro*)\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pro\"\n+\txmake_file=\"pa/x-ada\"\n \t;;\n hppa1.1-*-osf*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h pa/pa-osf.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n+\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-rtems*)\n \txm_defines=POSIX\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h pa/rtems.h rtems.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pro\"\n+\txmake_file=\"pa/x-ada\"\n \t;;\n hppa1.0-*-osf*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h pa/pa-osf.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n+\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-bsd*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h\"\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n+\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.0-*-bsd*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/som.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n+\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.0-*-hpux7*)\n@@ -970,6 +976,7 @@ hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n \tfloat_format=i128\n \txm_defines=POSIX\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n \t    enable_threads=$have_pthread_h\n \tfi\n@@ -986,6 +993,7 @@ hppa1.0-*-hpux10*)\n \tfloat_format=i128\n \txm_defines=POSIX\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n \t    enable_threads=$have_pthread_h\n \tfi\n@@ -1002,6 +1010,7 @@ hppa*64*-*-hpux11*)\n \ttm_file=\"pa/pa64-start.h ${tm_file} pa/pa64-regs.h pa/long_double.h pa/elf.h pa/pa-hpux.h pa/pa-hpux11.h pa/pa-64.h pa/pa64-hpux.h\"\n \tfloat_format=i128\n \ttmake_file=\"pa/t-pa64 pa/t-pa-hpux\"\n+\txmake_file=\"pa/x-ada\"\n \ttarget_cpu_default=\"(MASK_PA_11|MASK_PA_20|MASK_GAS)\"\n \n #\tif [ x$enable_threads = x ]; then\n@@ -1020,6 +1029,7 @@ hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n \tfloat_format=i128\n \txm_defines=POSIX\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\txmake_file=\"pa/x-ada\"\n #\tif test x$enable_threads = x; then\n #\t    enable_threads=$have_pthread_h\n #\tfi\n@@ -1035,6 +1045,7 @@ hppa1.0-*-hpux11*)\n \tfloat_format=i128\n \txm_defines=POSIX\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\txmake_file=\"pa/x-ada\"\n #\tif test x$enable_threads = x; then\n #\t    enable_threads=$have_pthread_h\n #\tfi\n@@ -1079,6 +1090,7 @@ hppa*-*-lites*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h\"\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n+\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa*-*-mpeix*)"}, {"sha": "9a338c284592d2184a5a05a6567062ef0975f34c", "filename": "gcc/config/pa/t-linux", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-linux?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -10,5 +10,3 @@ CRTSTUFF_T_CFLAGS_S = -fPIC\n \n # Compile libgcc2.a as PIC.\n TARGET_LIBGCC2_CFLAGS = -fPIC -DELF=1 -DLINUX=1\n-\n-T_ADAFLAGS=-mdisable-indexing"}, {"sha": "87d828454d0a9b527eaa0009950ea274934d48a5", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -1,4 +1,3 @@\n-T_ADAFLAGS=-mdisable-indexing\n LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c\n \n lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm"}, {"sha": "9323a250ed22491ad17109f5cf2a99f80725fe20", "filename": "gcc/config/pa/t-pa64", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pa64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pa64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa64?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -1,6 +1,5 @@\n TARGET_LIBGCC2_CFLAGS = -fPIC -Dpa64=1 -DELF=1\n \n-T_ADAFLAGS=-mdisable-indexing\n LIB2FUNCS_EXTRA=quadlib.c\n \n # We'll need this once .init sections are enabled on PA64."}, {"sha": "c619b405d0fe319ddf9906dd427e9f27060f5016", "filename": "gcc/config/pa/t-pro", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pro", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Ft-pro", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pro?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -1,5 +1,3 @@\n-T_ADAFLAGS=-mdisable-indexing\n-\n LIB2FUNCS_EXTRA=lib2funcs.asm \n \n # We want fine grained libraries, so use the new code to build the"}, {"sha": "88c39e27f4e5c463ef0adab041a7f162220653c5", "filename": "gcc/config/pa/x-ada", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Fx-ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3/gcc%2Fconfig%2Fpa%2Fx-ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-ada?ref=ed9d6ff9f137a1d2581c30a31ebb6d96ded648d3", "patch": "@@ -0,0 +1,4 @@\n+# The ada virtual array implementation requires that indexing be disabled on\n+# hosts such as hpux that use a segmented memory architecture.  Both the c\n+# and ada files need to be compiled with this option for correct operation.\n+ADA_CFLAGS=-mdisable-indexing"}]}