{"sha": "254b22cc79c594756343f645cbcf7163e39cf5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0YjIyY2M3OWM1OTQ3NTYzNDNmNjQ1Y2JjZjcxNjNlMzljZjViNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-28T10:01:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-28T10:01:23Z"}, "message": "re PR middle-end/68067 (Wrong constant folding)\n\n2015-10-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/68067\n\t* fold-const.c (negate_expr_p): We cannot negate plus or minus\n\tif overflow is not wrapping.  Likewise multiplication unless\n\tone operand is constant and not power of two.\n\t(fold_negate_expr): Adjust accordingly.\n\n\t* gcc.dg/torture/pr68067-1.c: New testcase.\n\t* gcc.dg/torture/pr68067-2.c: Likewise.\n\nFrom-SVN: r229479", "tree": {"sha": "7ab6a96e8d54ebc23cadb2b7c7cab37e3c07e38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ab6a96e8d54ebc23cadb2b7c7cab37e3c07e38a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254b22cc79c594756343f645cbcf7163e39cf5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254b22cc79c594756343f645cbcf7163e39cf5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254b22cc79c594756343f645cbcf7163e39cf5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254b22cc79c594756343f645cbcf7163e39cf5b4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af7ff91b2425e201c00333f0343fd7e28297d8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7ff91b2425e201c00333f0343fd7e28297d8dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7ff91b2425e201c00333f0343fd7e28297d8dc"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "af9963f9688fce6a1d776ab8bc989198abd97620", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=254b22cc79c594756343f645cbcf7163e39cf5b4", "patch": "@@ -1,3 +1,11 @@\n+2015-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68067\n+\t* fold-const.c (negate_expr_p): We cannot negate plus or minus\n+\tif overflow is not wrapping.  Likewise multiplication unless\n+\tone operand is constant and not power of two.\n+\t(fold_negate_expr): Adjust accordingly.\n+\n 2015-10-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* omp-low.c (struct omp_context): Remove gwv_below, gwv_this"}, {"sha": "61801cbefee5ac0823733fc673d01b4c3609e515", "filename": "gcc/fold-const.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=254b22cc79c594756343f645cbcf7163e39cf5b4", "patch": "@@ -443,7 +443,9 @@ negate_expr_p (tree t)\n \n     case PLUS_EXPR:\n       if (HONOR_SIGN_DEPENDENT_ROUNDING (element_mode (type))\n-\t  || HONOR_SIGNED_ZEROS (element_mode (type)))\n+\t  || HONOR_SIGNED_ZEROS (element_mode (type))\n+\t  || (INTEGRAL_TYPE_P (type)\n+\t      && ! TYPE_OVERFLOW_WRAPS (type)))\n \treturn false;\n       /* -(A + B) -> (-B) - A.  */\n       if (negate_expr_p (TREE_OPERAND (t, 1))\n@@ -457,12 +459,23 @@ negate_expr_p (tree t)\n       /* We can't turn -(A-B) into B-A when we honor signed zeros.  */\n       return !HONOR_SIGN_DEPENDENT_ROUNDING (element_mode (type))\n \t     && !HONOR_SIGNED_ZEROS (element_mode (type))\n+\t     && (! INTEGRAL_TYPE_P (type)\n+\t\t || TYPE_OVERFLOW_WRAPS (type))\n \t     && reorder_operands_p (TREE_OPERAND (t, 0),\n \t\t\t\t    TREE_OPERAND (t, 1));\n \n     case MULT_EXPR:\n-      if (TYPE_UNSIGNED (TREE_TYPE (t)))\n-        break;\n+      if (TYPE_UNSIGNED (type))\n+\tbreak;\n+      /* INT_MIN/n * n doesn't overflow while negating one operand it does\n+         if n is a power of two.  */\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (t))\n+\t  && ! TYPE_OVERFLOW_WRAPS (TREE_TYPE (t))\n+\t  && ! ((TREE_CODE (TREE_OPERAND (t, 0)) == INTEGER_CST\n+\t\t && ! integer_pow2p (TREE_OPERAND (t, 0)))\n+\t\t|| (TREE_CODE (TREE_OPERAND (t, 1)) == INTEGER_CST\n+\t\t    && ! integer_pow2p (TREE_OPERAND (t, 1)))))\n+\tbreak;\n \n       /* Fall through.  */\n "}, {"sha": "9d7a47c6b3b9bbdf123ff4e4e50677310918c6b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=254b22cc79c594756343f645cbcf7163e39cf5b4", "patch": "@@ -1,3 +1,9 @@\n+2015-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68067\n+\t* gcc.dg/torture/pr68067-1.c: New testcase.\n+\t* gcc.dg/torture/pr68067-2.c: Likewise.\n+\n 2015-10-28  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/p8vector-builtin-8.c: Add \"target int128\"."}, {"sha": "a7b6aa041d906876bccc40ef887e6d6103681b96", "filename": "gcc/testsuite/gcc.dg/torture/pr68067-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-1.c?ref=254b22cc79c594756343f645cbcf7163e39cf5b4", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do run } */\n+\n+int main()\n+{\n+  int a = -1;\n+  static int b = -2147483647 - 1;\n+  static int c = 0;\n+  int t = a - (b - c);\n+  if (t != 2147483647)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "38a459bf7f153d4dd11376723315b7b0b9afb575", "filename": "gcc/testsuite/gcc.dg/torture/pr68067-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254b22cc79c594756343f645cbcf7163e39cf5b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68067-2.c?ref=254b22cc79c594756343f645cbcf7163e39cf5b4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+\n+int main()\n+{\n+  int a = -1;\n+  static int b = -2147483647 - 1;\n+  static int c = 0;\n+  int t = a - (b + c*-2);\n+  if (t != 2147483647)\n+    __builtin_abort();\n+  return 0;\n+}\n+"}]}