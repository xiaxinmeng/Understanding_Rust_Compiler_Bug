{"sha": "12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlNGU4MWVhNWZmZDE2MDZkYTlmNjZiNGI3NjY0ZGE5ZjIwNWNmMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:02:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:02:20Z"}, "message": "[multiple changes]\n\n2014-07-30  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sinfo.ads, einfo.ads, checks.ads: Minor typo fix and reformatting.\n\n2014-07-30  Vincent Celier  <celier@adacore.com>\n\n\t* prj-proc.adb (Imported_Or_Extended_Project_From): New Boolean\n\tparameter No_Extending, defaulted to False. When No_Extending\n\tis True, do not look for an extending project.\n\t(Expression): For a variable reference that is not for the current\n\tproject, get its Id calling Imported_Or_Extended_Project_From\n\twith No_Extending set to True.\n\t* prj-strt.adb (Parse_Variable_Reference): If a referenced\n\tvariable is not found in the current project, check if it is\n\tdefined in one of the projects it extends.\n\nFrom-SVN: r213237", "tree": {"sha": "6de5d233a9fd49a361954351cf988c5482205b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de5d233a9fd49a361954351cf988c5482205b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/comments", "author": null, "committer": null, "parents": [{"sha": "79185f5fb057480ec96ead78d386c582c579396a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79185f5fb057480ec96ead78d386c582c579396a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79185f5fb057480ec96ead78d386c582c579396a"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "2da7f522ea66d14745f77238de6c23bcca973c39", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -1,3 +1,19 @@\n+2014-07-30  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sinfo.ads, einfo.ads, checks.ads: Minor typo fix and reformatting.\n+\n+2014-07-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-proc.adb (Imported_Or_Extended_Project_From): New Boolean\n+\tparameter No_Extending, defaulted to False. When No_Extending\n+\tis True, do not look for an extending project.\n+\t(Expression): For a variable reference that is not for the current\n+\tproject, get its Id calling Imported_Or_Extended_Project_From\n+\twith No_Extending set to True.\n+\t* prj-strt.adb (Parse_Variable_Reference): If a referenced\n+\tvariable is not found in the current project, check if it is\n+\tdefined in one of the projects it extends.\n+\n 2014-07-30  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.adb (Predicate_Tests_On_Arguments): Omit tests for"}, {"sha": "3f4f3872a1446c7b92a166588ae530dddf72a579", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -666,12 +666,12 @@ package Checks is\n    --  we generate the actual range check, then we make sure the flag is off,\n    --  since the code we generate takes complete care of the check.\n    --\n-   --  Historical note: We used to just pass ono the Do_Range_Check flag to the\n-   --  back end to generate the check, but now in code generation mode we never\n+   --  Historical note: We used to just pass on the Do_Range_Check flag to the\n+   --  back end to generate the check, but now in code-generation mode we never\n    --  have this flag set, since the front end takes care of the check. The\n    --  normal processing flow now is that the analyzer typically turns on the\n    --  Do_Range_Check flag, and if it is set, this routine is called, which\n-   --  turns the flag off in code generation mode.\n+   --  turns the flag off in code-generation mode.\n \n    procedure Generate_Index_Checks (N : Node_Id);\n    --  This procedure is called to generate index checks on the subscripts for"}, {"sha": "c20e96454d1f324316888f88a0d61c6b11ff1ec0", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -1910,7 +1910,7 @@ package Einfo is\n --    Has_Static_Predicate (Flag269)\n --       Defined in all types and subtypes. Set if the type (which must be a\n --       scalar type) has a predicate whose expression is predicate-static.\n---       This can result from use of any of a Predicate, Static_Predicate, or\n+--       This can result from the use of any Predicate, Static_Predicate, or\n --       Dynamic_Predicate aspect. We can distinguish these cases by testing\n --       Has_Static_Predicate_Aspect and Has_Dynamic_Predicate_Aspect. See\n --       description of the latter flag for further information on dynamic"}, {"sha": "17e1ec41638beafb9a0f534579cae39beae39d9b", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -118,8 +118,9 @@ package body Prj.Proc is\n    --  of an expression and return it as a Variable_Value.\n \n    function Imported_Or_Extended_Project_From\n-     (Project   : Project_Id;\n-      With_Name : Name_Id) return Project_Id;\n+     (Project      : Project_Id;\n+      With_Name    : Name_Id;\n+      No_Extending : Boolean := False) return Project_Id;\n    --  Find an imported or extended project of Project whose name is With_Name\n \n    function Package_From\n@@ -705,8 +706,9 @@ package body Prj.Proc is\n                      The_Name :=\n                        Name_Of (Term_Project, From_Project_Node_Tree);\n                      The_Project := Imported_Or_Extended_Project_From\n-                                      (Project   => Project,\n-                                       With_Name => The_Name);\n+                                      (Project      => Project,\n+                                       With_Name    => The_Name,\n+                                       No_Extending => True);\n                   end if;\n \n                   if Present (Term_Package) then\n@@ -1261,8 +1263,9 @@ package body Prj.Proc is\n    ---------------------------------------\n \n    function Imported_Or_Extended_Project_From\n-     (Project   : Project_Id;\n-      With_Name : Name_Id) return Project_Id\n+     (Project      : Project_Id;\n+      With_Name    : Name_Id;\n+      No_Extending : Boolean := False) return Project_Id\n    is\n       List        : Project_List;\n       Result      : Project_Id;\n@@ -1304,7 +1307,12 @@ package body Prj.Proc is\n             Proj := Result.Extends;\n             while Proj /= No_Project loop\n                if Proj.Name = With_Name then\n-                  Temp_Result := Result;\n+                  if No_Extending then\n+                     Temp_Result := Proj;\n+                  else\n+                     Temp_Result := Result;\n+                  end if;\n+\n                   exit;\n                end if;\n "}, {"sha": "1ae9647efeeb312c367a8ce72a1e7ad66efd106d", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1162,7 +1162,7 @@ package body Prj.Strt is\n \n             --  If we have not found the variable in the package, check if the\n             --  variable has been declared in the project, or in any of its\n-            --  ancestors.\n+            --  ancestors, or in any of the project it extends.\n \n             if No (Current_Variable) then\n                declare\n@@ -1182,7 +1182,14 @@ package body Prj.Strt is\n \n                      exit when Present (Current_Variable);\n \n-                     Proj := Parent_Project_Of (Proj, In_Tree);\n+                     if No (Parent_Project_Of (Proj, In_Tree)) then\n+                        Proj :=\n+                          Extended_Project_Of\n+                            (Project_Declaration_Of (Proj, In_Tree), In_Tree);\n+\n+                     else\n+                        Proj := Parent_Project_Of (Proj, In_Tree);\n+                     end if;\n \n                      Set_Project_Node_Of (Variable, In_Tree, To => Proj);\n "}, {"sha": "f51f9c5bd76aed402c020d3c2957f2ecfc8ddfb8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4e81ea5ffd1606da9f66b4b7664da9f205cf2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=12e4e81ea5ffd1606da9f66b4b7664da9f205cf2", "patch": "@@ -1625,7 +1625,7 @@ package Sinfo is\n    --    when Raises_Constraint_Error is also set. In practice almost all cases\n    --    where a static expression is required do not allow an expression which\n    --    raises Constraint_Error, so almost always, callers should call the\n-   --    Is_Ok_Static_Exprression routine instead of testing this flag. See\n+   --    Is_Ok_Static_Expression routine instead of testing this flag. See\n    --    spec of package Sem_Eval for full details on the use of this flag.\n \n    --  Is_Subprogram_Descriptor (Flag16-Sem)"}]}