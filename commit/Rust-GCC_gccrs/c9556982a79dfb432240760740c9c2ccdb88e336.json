{"sha": "c9556982a79dfb432240760740c9c2ccdb88e336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1NTY5ODJhNzlkZmI0MzIyNDA3NjA3NDBjOWMyY2NkYjg4ZTMzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T14:33:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T14:33:39Z"}, "message": "[multiple changes]\n\n2011-12-12  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taprop-mingw.adb: Minor reformatting.\n\n2011-12-12  Nicolas Roche  <roche@adacore.com>\n\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\tAdd gnattools4 target when building tools in canadian mode\n\n2011-12-12  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_VM_TSD): Complete previous\n\tpatch.\n\n2011-12-12  Bob Duff  <duff@adacore.com>\n\n\t* s-tpobop.adb: Use named notation.\n\t* g-bytswa.ads, s-taprop.ads: Minor comment fix.\n\n2011-12-12  Arnaud Charlet  <charlet@adacore.com>\n\n\t* make.adb: Minor comment update.\n\nFrom-SVN: r182242", "tree": {"sha": "81d5fd310a93d1f73af0055d67f9e7dd6e158065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81d5fd310a93d1f73af0055d67f9e7dd6e158065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9556982a79dfb432240760740c9c2ccdb88e336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9556982a79dfb432240760740c9c2ccdb88e336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9556982a79dfb432240760740c9c2ccdb88e336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9556982a79dfb432240760740c9c2ccdb88e336/comments", "author": null, "committer": null, "parents": [{"sha": "cf7bb903f43f72bd5c585665fe471d08f485d430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7bb903f43f72bd5c585665fe471d08f485d430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7bb903f43f72bd5c585665fe471d08f485d430"}], "stats": {"total": 76, "additions": 61, "deletions": 15}, "files": [{"sha": "2a9e3f45be452fc115c201c6abf54f4409c60526", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -1,3 +1,26 @@\n+2011-12-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taprop-mingw.adb: Minor reformatting.\n+\n+2011-12-12  Nicolas Roche  <roche@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\tAdd gnattools4 target when building tools in canadian mode\n+\n+2011-12-12  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_VM_TSD): Complete previous\n+\tpatch.\n+\n+2011-12-12  Bob Duff  <duff@adacore.com>\n+\n+\t* s-tpobop.adb: Use named notation.\n+\t* g-bytswa.ads, s-taprop.ads: Minor comment fix.\n+\n+2011-12-12  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* make.adb: Minor comment update.\n+\n 2011-12-12  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb, s-taprop-mingw.adb, exp_disp.adb, sem_ch13.adb: Minor"}, {"sha": "2ba315085c68d420c385cc1dbaec305802537f49", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -6511,10 +6511,20 @@ package body Exp_Disp is\n \n       --  Alignment\n \n-      Append_To (TSD_Aggr_List,\n-        Make_Attribute_Reference (Loc,\n-          Prefix         => New_Reference_To (Typ, Loc),\n-          Attribute_Name => Name_Alignment));\n+      --  For CPP types we cannot rely on the value of 'Alignment provided\n+      --  by the backend to initialize this TSD field.\n+\n+      if Convention (Typ) = Convention_CPP\n+        or else Is_CPP_Class (Root_Type (Typ))\n+      then\n+         Append_To (TSD_Aggr_List,\n+           Make_Integer_Literal (Loc, 0));\n+      else\n+         Append_To (TSD_Aggr_List,\n+           Make_Attribute_Reference (Loc,\n+             Prefix         => New_Reference_To (Typ, Loc),\n+             Attribute_Name => Name_Alignment));\n+      end if;\n \n       --  HT_Link\n "}, {"sha": "7e0dd8fc46def9647a58b67b8da1ed6ef143a33d", "filename": "gcc/ada/g-bytswa.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fg-bytswa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fg-bytswa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bytswa.ads?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2006-2010, AdaCore                     --\n+--                     Copyright (C) 2006-2011, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,6 +64,7 @@\n --        subtype String4 is String (1 .. 4);\n --        function Swapped is new Byte_Swapping.Swapped4 (String4);\n --        S : String4 := \"ABCD\";\n+--        for S'Alignment use 4;\n --     begin\n --        Put_Line (S);\n --        S := Swapped (S);\n@@ -74,6 +75,7 @@\n \n --     declare\n --        type Mask is array (0 .. 15) of Boolean;\n+--        for Mask'Alignment use 2;\n --        for Mask'Component_Size use Boolean'Size;\n --        X : Mask := (0 .. 7 => True, others => False);\n --        function Swapped is new Byte_Swapping.Swapped2 (Mask);"}, {"sha": "35cddf751428f80b6a506c88ee353777e54fb678", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -567,6 +567,7 @@ cross-gnattools: force\n canadian-gnattools: force\n \t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools1-re\n \t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools4\n \n gnatlib gnatlib-sjlj gnatlib-zcx gnatlib-shared: force\n \t$(MAKE) -C ada $(COMMON_FLAGS_TO_PASS)  \\\n@@ -4669,8 +4670,9 @@ ada/sem_type.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n    ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n    ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/treepr.ads ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/widechar.ads \n \n ada/sem_util.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "0f79af3a8665f58b8ace6c755453e078d61861bd", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -7842,7 +7842,12 @@ package body Make is\n             Operating_Mode           := Check_Semantics;\n             Check_Object_Consistency := False;\n \n-            --  Comment needed here, what is going on???\n+            --  Except in CodePeer mode, where we do want to call bind/link\n+            --  in CodePeer mode (-P switch).\n+\n+            --  This is testing for -gnatcC, what is that??? Also why do we\n+            --  want to call bind/link in the codepeer case with -gnatc\n+            --  specified, seems odd.\n \n             if Argv'Last >= 7 and then Argv (7) = 'C' then\n                CodePeer_Mode := True;"}, {"sha": "0a1a3c13003cd2c579f6a25549e2a9b6e425aecb", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -707,8 +707,11 @@ package body System.Task_Primitives.Operations is\n       --  Count attribute. So we decided to remove this processing and just\n       --  call SwitchToThread unconditionally (leaving Do_Yield unreferenced).\n \n-      --  This means that CXD8002 does not pass on Windows, but we cannot\n-      --  guarantee full Annex D compliance on Windows in any case.\n+      --  Moreover, CXD8002 appears to pass on Windows (although we do not\n+      --  guarantee full Annex D compliance on Windows in any case).\n+\n+      --  What is not clear is why we now call SwitchToThread in the False\n+      --  case. Other versions don't do that, is it necessary???\n \n       SwitchToThread;\n    end Yield;"}, {"sha": "6f15ce7f55e93302317107d89e90d76029409daf", "filename": "gcc/ada/s-taprop.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-taprop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-taprop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop.ads?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -313,10 +313,11 @@ package System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True);\n    pragma Inline (Yield);\n-   --  Yield the processor. Add the calling task to the tail of the ready\n-   --  queue for its active_priority. The Do_Yield argument is only used in\n-   --  some very rare cases very a yield should have an effect on a specific\n-   --  target and not on regular ones.\n+   --  Yield the processor. Add the calling task to the tail of the ready queue\n+   --  for its active_priority. On most platforms, Yield is a no-op if Do_Yield\n+   --  is False. But on some platforms (notably VxWorks), Do_Yield is ignored.\n+   --  This is only used in some very rare cases where a Yield should have an\n+   --  effect on a specific target and not on regular ones.\n \n    procedure Set_Priority\n      (T : ST.Task_Id;"}, {"sha": "0ed75a8c392df5c3f777edf6a71bf5ba20d1ffca", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9556982a79dfb432240760740c9c2ccdb88e336/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=c9556982a79dfb432240760740c9c2ccdb88e336", "patch": "@@ -740,7 +740,7 @@ package body System.Tasking.Protected_Objects.Operations is\n             --  OS (e.g VxWorks) to give higher priority tasks a chance to run\n             --  (see CXD6002).\n \n-            STPO.Yield (False);\n+            STPO.Yield (Do_Yield => False);\n \n             if Entry_Call.With_Abort\n               and then Entry_Call.Cancellation_Attempted"}]}