{"sha": "a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1NjlhMGUxNWZkNmUwM2E1ZDUyZGEwOWNkYWNkMjNjZWUwYmMxMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-21T09:13:06Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-21T09:13:06Z"}, "message": "mips.c (mips_rtx_costs): Only recognize reciprocals if ISA_HAS_FP4.\n\ngcc/\n\t* config/mips/mips.c (mips_rtx_costs): Only recognize reciprocals\n\tif ISA_HAS_FP4.\n\nFrom-SVN: r129524", "tree": {"sha": "cf9485218276786f934bc068e85df2fc721986af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9485218276786f934bc068e85df2fc721986af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11/comments", "author": null, "committer": null, "parents": [{"sha": "f457938f7f42894d3b0571b9d092f0706e192fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f457938f7f42894d3b0571b9d092f0706e192fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f457938f7f42894d3b0571b9d092f0706e192fae"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "154bcc84e25976a1856202bfc702b22fbc831f5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "patch": "@@ -1,3 +1,8 @@\n+2007-10-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (mips_rtx_costs): Only recognize reciprocals\n+\tif ISA_HAS_FP4.\n+\n 2007-10-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.h (ISA_HAS_LDC1_SDC1): New macro."}, {"sha": "2ddb778462af590000891ea977b79abe54042c10", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1569a0e15fd6e03a5d52da09cdacd23cee0bc11/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a1569a0e15fd6e03a5d52da09cdacd23cee0bc11", "patch": "@@ -3305,22 +3305,18 @@ mips_rtx_costs (rtx x, int code, int outer_code, int *total)\n \n     case DIV:\n       /* Check for a reciprocal.  */\n-      if (float_mode_p && XEXP (x, 0) == CONST1_RTX (mode))\n+      if (float_mode_p\n+\t  && ISA_HAS_FP4\n+\t  && flag_unsafe_math_optimizations\n+\t  && XEXP (x, 0) == CONST1_RTX (mode))\n \t{\n-\t  if (ISA_HAS_FP4\n-\t      && flag_unsafe_math_optimizations\n-\t      && (outer_code == SQRT || GET_CODE (XEXP (x, 1)) == SQRT))\n-\t    {\n-\t      /* An rsqrt<mode>a or rsqrt<mode>b pattern.  Count the\n-\t\t division as being free.  */\n-\t      *total = rtx_cost (XEXP (x, 1), 0);\n-\t      return true;\n-\t    }\n-\t  if (!ISA_MIPS1)\n-\t    {\n-\t      *total = mips_fp_div_cost (mode) + rtx_cost (XEXP (x, 1), 0);\n-\t      return true;\n-\t    }\n+\t  if (outer_code == SQRT || GET_CODE (XEXP (x, 1)) == SQRT)\n+\t    /* An rsqrt<mode>a or rsqrt<mode>b pattern.  Count the\n+\t       division as being free.  */\n+\t    *total = rtx_cost (XEXP (x, 1), 0);\n+\t  else\n+\t    *total = mips_fp_div_cost (mode) + rtx_cost (XEXP (x, 1), 0);\n+\t  return true;\n \t}\n       /* Fall through.  */\n "}]}