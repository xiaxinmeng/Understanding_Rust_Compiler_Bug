{"sha": "3954270ee7fa782b64bc2f020056b7f6b58195b0", "node_id": "C_kwDOANBUbNoAKDM5NTQyNzBlZTdmYTc4MmI2NGJjMmYwMjAwNTZiN2Y2YjU4MTk1YjA", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-21T09:17:25Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:32Z"}, "message": "libproc_macro: Implement FromStr for TokenStream\n\nImplement FromStr for TokenStream rust interface type.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/token_stream.rs: Add FromStr\n\timplementation on internal type.\n\t* librust/proc_macro/rust/lib.rs: Implement FromStr.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "074dfb3c6c70fe9578d737828166d063ece70a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/074dfb3c6c70fe9578d737828166d063ece70a95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3954270ee7fa782b64bc2f020056b7f6b58195b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3954270ee7fa782b64bc2f020056b7f6b58195b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3954270ee7fa782b64bc2f020056b7f6b58195b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3954270ee7fa782b64bc2f020056b7f6b58195b0/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeda932733ec3841abdfe185af52b2ecd88d98e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeda932733ec3841abdfe185af52b2ecd88d98e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeda932733ec3841abdfe185af52b2ecd88d98e4"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "c33806f6527009baa4ca89a39e9c5ba92928c81a", "filename": "librust/proc_macro/rust/bridge/token_stream.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3954270ee7fa782b64bc2f020056b7f6b58195b0/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3954270ee7fa782b64bc2f020056b7f6b58195b0/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs?ref=3954270ee7fa782b64bc2f020056b7f6b58195b0", "patch": "@@ -1,11 +1,21 @@\n use bridge::{group::Group, ident::Ident, literal::Literal, punct::Punct};\n use std::convert::TryInto;\n+use std::ffi::c_uchar;\n use std::fmt;\n use std::slice;\n+use std::str::FromStr;\n+use LexError;\n \n type ExternalTokenTree = crate::TokenTree;\n type ExternalTokenStream = crate::TokenStream;\n \n+extern \"C\" {\n+    fn TokenStream__new() -> TokenStream;\n+    fn TokenStream__with_capacity(capacity: u64) -> TokenStream;\n+    fn TokenStream__push(stream: *mut TokenStream, tree: TokenTree);\n+    fn TokenStream__from_string(str: *const c_uchar, ts: *mut TokenStream) -> bool;\n+}\n+\n // TODO: There surely is a better way to achieve this. I don't like this\n // \"duplication\" of the TokenTree enumeration. But I cannot use the public\n // one since it's underlying types (public Group, Ident...) are not ffi safe.\n@@ -41,12 +51,6 @@ impl From<ExternalTokenTree> for TokenTree {\n     }\n }\n \n-extern \"C\" {\n-    fn TokenStream__new() -> TokenStream;\n-    fn TokenStream__with_capacity(capacity: u64) -> TokenStream;\n-    fn TokenStream__push(stream: *mut TokenStream, tree: TokenTree);\n-}\n-\n #[repr(C)]\n #[derive(Debug, Clone)]\n pub struct TokenStream {\n@@ -129,3 +133,15 @@ impl fmt::Display for TokenStream {\n         Ok(())\n     }\n }\n+\n+impl FromStr for TokenStream {\n+    type Err = LexError;\n+    fn from_str(string: &str) -> Result<Self, LexError> {\n+        let mut ts = TokenStream::new();\n+        if unsafe { TokenStream__from_string(string.as_ptr(), &mut ts as *mut TokenStream) } {\n+            Err(LexError)\n+        } else {\n+            Ok(ts)\n+        }\n+    }\n+}"}, {"sha": "a1be0ac57e7ae7467bf531506f92093378ab6e4f", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3954270ee7fa782b64bc2f020056b7f6b58195b0/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3954270ee7fa782b64bc2f020056b7f6b58195b0/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=3954270ee7fa782b64bc2f020056b7f6b58195b0", "patch": "@@ -168,8 +168,8 @@ impl fmt::Debug for TokenStream {\n impl FromStr for TokenStream {\n     type Err = LexError;\n \n-    fn from_str(_src: &str) -> Result<Self, LexError> {\n-        todo!(\"Implement this function\")\n+    fn from_str(src: &str) -> Result<Self, LexError> {\n+        bridge::token_stream::TokenStream::from_str(src).map(TokenStream)\n     }\n }\n "}]}