{"sha": "81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5NzZmOTNmZTMyODBiMTUxNGFkNTVmNTgyZmQ2YTZjZDMzZjllMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-11-04T17:25:07Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-11-04T17:25:07Z"}, "message": "configure: Rebuilt.\n\n\t* configure: Rebuilt.\n\t* configure.in: Removed qt threads case.\n\t* dyn_load.c: Don't mention QUICK_THREADS.\n\t* os_dep.c: Don't mention QUICK_THREADS.\n\t* misc.c: Don't mention QUICK_THREADS.\n\t* gcconfig.h: Don't mention QUICK_THREADS.\n\t* gc_priv.h: Removed QUICK_THREADS code.\n\t* quick_threads.c: Removed.\n\nFrom-SVN: r30394", "tree": {"sha": "1b99b98a7a9709b5c03687d197bd5b4a8e943dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b99b98a7a9709b5c03687d197bd5b4a8e943dcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/comments", "author": null, "committer": null, "parents": [{"sha": "7f80fbe501cd0e4d8f63078f5308f30d3eabd460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f80fbe501cd0e4d8f63078f5308f30d3eabd460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f80fbe501cd0e4d8f63078f5308f30d3eabd460"}], "stats": {"total": 98, "additions": 15, "deletions": 83}, "files": [{"sha": "18726e8d107b1b39457c602ffa11b0e814a45e43", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -1,3 +1,14 @@\n+1999-11-04  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.in: Removed qt threads case.\n+\t* dyn_load.c: Don't mention QUICK_THREADS.\n+\t* os_dep.c: Don't mention QUICK_THREADS.\n+\t* misc.c: Don't mention QUICK_THREADS.\n+\t* gcconfig.h: Don't mention QUICK_THREADS.\n+\t* gc_priv.h: Removed QUICK_THREADS code.\n+\t* quick_threads.c: Removed.\n+\n 1999-11-03  Tom Tromey  <tromey@cygnus.com>\n \n \t* gcconfig.h: Merged in local changes from old config.h."}, {"sha": "1f7f3fc379ddbb65ee19495b8a93f242c706f8b5", "filename": "boehm-gc/configure", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -2113,14 +2113,6 @@ EOF\n     esac\n     THREADLIB=-lpthread\n     ;;\n- qt)\n-    cat >> confdefs.h <<\\EOF\n-#define QUICK_THREADS 1\n-EOF\n-\n-    INCLUDES=\"-I${boehm_gc_basedir}/../qthreads\"\n-    THREADLIB=../qthreads/libgcjcoop.la\n-    ;;\n  decosf1 | irix | mach | os2 | solaris | win32 | dce | vxworks)\n     { echo \"configure: error: thread package $THREADS not yet supported\" 1>&2; exit 1; }\n     ;;"}, {"sha": "f3e875ac3d9d0b1423731669ce84c36aeeb49ca9", "filename": "boehm-gc/configure.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.in?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -84,11 +84,6 @@ case \"$THREADS\" in\n     esac\n     THREADLIB=-lpthread\n     ;;\n- qt)\n-    AC_DEFINE(QUICK_THREADS)\n-    INCLUDES=\"-I${boehm_gc_basedir}/../qthreads\"\n-    THREADLIB=../qthreads/libgcjcoop.la\n-    ;;\n  decosf1 | irix | mach | os2 | solaris | win32 | dce | vxworks)\n     AC_MSG_ERROR(thread package $THREADS not yet supported)\n     ;;"}, {"sha": "8c3ec4186c40c6c7b37338b2f88c57f68c348a08", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -161,8 +161,7 @@ static ptr_t GC_first_common()\n \n # if defined(SUNOS4) || defined(SUNOS5DL)\n /* Add dynamic library data sections to the root set.\t\t*/\n-# if !defined(PCR) && !defined(SOLARIS_THREADS) \\\n-\t&& !defined(QUICK_THREADS) && defined(THREADS)\n+# if !defined(PCR) && !defined(SOLARIS_THREADS) && defined(THREADS)\n #   ifndef SRC_M3\n \t--> fix mutual exclusion with dlopen\n #   endif  /* We assume M3 programs don't call dlopen for now */"}, {"sha": "23977d3b37eb9882de6a39e71a3928da933697fa", "filename": "boehm-gc/gc_priv.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fgc_priv.h?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -594,10 +594,6 @@ addr)\n #    define LOCK() EnterCriticalSection(&GC_allocate_ml);\n #    define UNLOCK() LeaveCriticalSection(&GC_allocate_ml);\n #  endif\n-#  ifdef QUICK_THREADS\n-#    define LOCK()\n-#    define UNLOCK()\n-#  endif\n #  ifndef SET_LOCK_HOLDER\n #      define SET_LOCK_HOLDER()\n #      define UNSET_LOCK_HOLDER()"}, {"sha": "899b8d3da3d715f9b1d9685d6366e6ed840c11e6", "filename": "boehm-gc/gcconfig.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fgcconfig.h?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -1186,8 +1186,7 @@\n # if defined(PCR) || defined(SRC_M3) || \\\n \tdefined(SOLARIS_THREADS) || defined(WIN32_THREADS) || \\\n \tdefined(IRIX_THREADS) || defined(LINUX_THREADS) || \\\n-\tdefined(IRIX_JDK_THREADS) || defined(HPUX_THREADS) || \\\n- \tdefined(QUICK_THREADS)\n+\tdefined(IRIX_JDK_THREADS) || defined(HPUX_THREADS)\n #   define THREADS\n # endif\n "}, {"sha": "5bbaafa87fadad6979dfdceeb20611d211adbf2b", "filename": "boehm-gc/misc.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fmisc.c?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -49,11 +49,7 @@\n #\t        if defined(HPUX_THREADS)\n \t\t  pthread_mutex_t GC_allocate_ml = PTHREAD_MUTEX_INITIALIZER;\n #\t\telse \n-#                 if defined(QUICK_THREADS)\n-\t\t\t\t/* Nothing */\n-#                 else\n \t          --> declare allocator lock here\n-#                 endif\n #\t\tendif\n #\t      endif\n #\t   endif\n@@ -469,7 +465,7 @@ void GC_init_inner()\n #   endif\n #   if !defined(THREADS) || defined(SOLARIS_THREADS) || defined(WIN32_THREADS) \\\n        || defined(IRIX_THREADS) || defined(LINUX_THREADS) \\\n-       || defined(HPUX_THREADS) || defined(QUICK_THREADS)\n+       || defined(HPUX_THREADS)\n       if (GC_stackbottom == 0) {\n \t  GC_stackbottom = GC_get_stack_base();\n       }"}, {"sha": "4f697b492aa259ce85b2b6355161cce49075d7a3", "filename": "boehm-gc/os_dep.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fos_dep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81976f93fe3280b1514ad55f582fd6a6cd33f9e3/boehm-gc%2Fos_dep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fos_dep.c?ref=81976f93fe3280b1514ad55f582fd6a6cd33f9e3", "patch": "@@ -1536,8 +1536,7 @@ void GC_default_push_other_roots()\n \n # if defined(SOLARIS_THREADS) || defined(WIN32_THREADS) \\\n      || defined(IRIX_THREADS) || defined(LINUX_THREADS) \\\n-     || defined(IRIX_JDK_THREADS) || defined(HPUX_THREADS) \\\n-     || defined(QUICK_THREADS)\n+     || defined(IRIX_JDK_THREADS) || defined(HPUX_THREADS)\n \n extern void GC_push_all_stacks();\n "}, {"sha": "be2e56466a132e2943dca5f7b518cce9919bae38", "filename": "boehm-gc/quick_threads.c", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f80fbe501cd0e4d8f63078f5308f30d3eabd460/boehm-gc%2Fquick_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f80fbe501cd0e4d8f63078f5308f30d3eabd460/boehm-gc%2Fquick_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fquick_threads.c?ref=7f80fbe501cd0e4d8f63078f5308f30d3eabd460", "patch": "@@ -1,55 +0,0 @@\n-/*\n- * Support code for cooperative coop/quick threads.\n- * Copyright (c) 1998, 1999 Cygnus Solutions.\n- */\n-\n-#include \"gcconfig.h\"\n-\n-#ifdef QUICK_THREADS\n-\n-#include \"gc_priv.h\"\n-\n-#include \"coop.h\"\n-\n-void GC_push_all_stacks (void)\n-{\n-  coop_t *t;\n-  ptr_t lo, hi;\n-\n-  t = coop_first_thread ();\n-\n-  if (t == NULL)\n-    {\n-      /* Threads haven't started, so mark the real stack.  */\n-#ifdef STACK_GROWS_DOWN\n-      GC_push_all_stack( GC_approx_sp(), GC_stackbottom );\n-#else\n-      GC_push_all_stack( GC_stackbottom, GC_approx_sp() );\n-#endif\n-    }\n-  else\n-    {\n-      for ( ; t != NULL; t = coop_next_thread (t))\n-\t{\n-\t  if (t == coop_global_curr)\n-\t    lo = GC_approx_sp ();\n-\t  else\n-\t    {\n-\t      lo = t->top;\n-\t      /* LO can be NULL when the new thread has not yet been\n-\t\t used.  */\n-\t      if (! lo)\n-\t\tcontinue;\n-\t    }\n-\t  hi = t->base;\n-\n-#ifdef STACK_GROWS_DOWN\n-\t  GC_push_all_stack (lo, hi);\n-#else\n-\t  GC_push_all_stack (hi, lo);\n-#endif\n-\t}\n-    }\n-}\n-\n-#endif /* QUICK_THREADS */"}]}