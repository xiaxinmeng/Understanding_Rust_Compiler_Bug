{"sha": "29eabd788fd921611c5800e2d173f097bdabd117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllYWJkNzg4ZmQ5MjE2MTFjNTgwMGUyZDE3M2YwOTdiZGFiZDExNw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2011-05-15T12:50:57Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2011-05-15T12:50:57Z"}, "message": "re PR middle-end/46500 (target.h includes tm.h)\n\n\tPR middle-end/46500\ngcc/fortran:\n\t* trans-types.c: Include \"tm.h\".\n\t[0] (c_size_t_size): Remove.\n\nFrom-SVN: r173771", "tree": {"sha": "8a7aea9671cfd3db12866cdac5ed9f95de3cc0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a7aea9671cfd3db12866cdac5ed9f95de3cc0ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29eabd788fd921611c5800e2d173f097bdabd117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29eabd788fd921611c5800e2d173f097bdabd117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29eabd788fd921611c5800e2d173f097bdabd117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29eabd788fd921611c5800e2d173f097bdabd117/comments", "author": null, "committer": null, "parents": [{"sha": "817f24d98ed7db2fc3f7265a68eeb3e28a85502e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817f24d98ed7db2fc3f7265a68eeb3e28a85502e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817f24d98ed7db2fc3f7265a68eeb3e28a85502e"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "bd9cdcbb8c67557b2ec5374d8bc8c4273fdbfb95", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29eabd788fd921611c5800e2d173f097bdabd117/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29eabd788fd921611c5800e2d173f097bdabd117/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=29eabd788fd921611c5800e2d173f097bdabd117", "patch": "@@ -1,3 +1,9 @@\n+2011-05-15  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR middle-end/46500\n+\t* trans-types.c: Include \"tm.h\".\n+\t[0] (c_size_t_size): Remove.\n+\n 2011-05-15  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/48915"}, {"sha": "9874d1625e89076f448f91105db4070f511bc0d2", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29eabd788fd921611c5800e2d173f097bdabd117/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29eabd788fd921611c5800e2d173f097bdabd117/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=29eabd788fd921611c5800e2d173f097bdabd117", "patch": "@@ -26,6 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"tm.h\"\t\t/* For INTMAX_TYPE, INT8_TYPE, INT16_TYPE, INT32_TYPE,\n+\t\t\t   INT64_TYPE, INT_LEAST8_TYPE, INT_LEAST16_TYPE,\n+\t\t\t   INT_LEAST32_TYPE, INT_LEAST64_TYPE, INT_FAST8_TYPE,\n+\t\t\t   INT_FAST16_TYPE, INT_FAST32_TYPE, INT_FAST64_TYPE,\n+\t\t\t   BOOL_TYPE_SIZE, BITS_PER_UNIT, POINTER_SIZE,\n+\t\t\t   INT_TYPE_SIZE, CHAR_TYPE_SIZE, SHORT_TYPE_SIZE,\n+\t\t\t   LONG_TYPE_SIZE, LONG_LONG_TYPE_SIZE,\n+\t\t\t   FLOAT_TYPE_SIZE, DOUBLE_TYPE_SIZE,\n+\t\t\t   LONG_DOUBLE_TYPE_SIZE and LIBGCC2_HAS_TF_MODE.  */\n #include \"tree.h\"\n #include \"langhooks.h\"\t/* For iso-c-bindings.def.  */\n #include \"target.h\"\n@@ -785,26 +794,6 @@ gfc_build_logical_type (gfc_logical_info *info)\n }\n \n \n-#if 0\n-/* Return the bit size of the C \"size_t\".  */\n-\n-static unsigned int\n-c_size_t_size (void)\n-{\n-#ifdef SIZE_TYPE  \n-  if (strcmp (SIZE_TYPE, \"unsigned int\") == 0)\n-    return INT_TYPE_SIZE;\n-  if (strcmp (SIZE_TYPE, \"long unsigned int\") == 0)\n-    return LONG_TYPE_SIZE;\n-  if (strcmp (SIZE_TYPE, \"short unsigned int\") == 0)\n-    return SHORT_TYPE_SIZE;\n-  gcc_unreachable ();\n-#else\n-  return LONG_TYPE_SIZE;\n-#endif\n-}\n-#endif\n-\n /* Create the backend type nodes. We map them to their\n    equivalent C type, at least for now.  We also give\n    names to the types here, and we push them in the"}]}