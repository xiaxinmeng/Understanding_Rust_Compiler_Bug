{"sha": "50ce6f88fd0db1a949f2e963f9898b323daf72e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBjZTZmODhmZDBkYjFhOTQ5ZjJlOTYzZjk4OThiMzIzZGFmNzJlOQ==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@caviumnetworks.com", "date": "2013-03-21T07:08:59Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2013-03-21T07:08:59Z"}, "message": "aarch64-elf.h (REGISTER_PREFIX): Remove.\n\n2013-03-21   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n\n\t* config/aarch64/aarch64-elf.h (REGISTER_PREFIX): Remove.\n\t* config/aarch64/aarch64.c (aarch64_print_operand): Remove all\n\toccurrence of REGISTER_PREFIX as its empty string.\n\nFrom-SVN: r196856", "tree": {"sha": "95654fed923adf0248968654eff59be05b7ba2ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95654fed923adf0248968654eff59be05b7ba2ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50ce6f88fd0db1a949f2e963f9898b323daf72e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ce6f88fd0db1a949f2e963f9898b323daf72e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ce6f88fd0db1a949f2e963f9898b323daf72e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ce6f88fd0db1a949f2e963f9898b323daf72e9/comments", "author": null, "committer": null, "parents": [{"sha": "4f1f78b9dce2a046e82012d2f3f44f77351838d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1f78b9dce2a046e82012d2f3f44f77351838d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f1f78b9dce2a046e82012d2f3f44f77351838d2"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "a9843ca593722a99eb109aff639951e6c5058598", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50ce6f88fd0db1a949f2e963f9898b323daf72e9", "patch": "@@ -1,3 +1,9 @@\n+2013-03-21   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+\n+\t* config/aarch64/aarch64-elf.h (REGISTER_PREFIX): Remove.\n+\t* config/aarch64/aarch64.c (aarch64_print_operand): Remove all\n+\toccurrence of REGISTER_PREFIX as its empty string.\n+\n 2013-03-20  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (record_equivalences_from_incoming_edge): Record"}, {"sha": "3f3ae526a2aadf21896c869b39f9a7f64ab98499", "filename": "gcc/config/aarch64/aarch64-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h?ref=50ce6f88fd0db1a949f2e963f9898b323daf72e9", "patch": "@@ -106,7 +106,6 @@\n \n #define ASM_COMMENT_START \"//\"\n \n-#define REGISTER_PREFIX\t\t\"\"\n #define LOCAL_LABEL_PREFIX\t\".\"\n #define USER_LABEL_PREFIX\t\"\"\n "}, {"sha": "43af6a4508d094cf18251febfa51cbd508fe6cc0", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ce6f88fd0db1a949f2e963f9898b323daf72e9/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=50ce6f88fd0db1a949f2e963f9898b323daf72e9", "patch": "@@ -3348,7 +3348,7 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n \t  output_operand_lossage (\"incompatible floating point / vector register operand for '%%%c'\", code);\n \t  return;\n \t}\n-      asm_fprintf (f, \"%s%c%d\", REGISTER_PREFIX, code, REGNO (x) - V0_REGNUM);\n+      asm_fprintf (f, \"%c%d\", code, REGNO (x) - V0_REGNUM);\n       break;\n \n     case 'S':\n@@ -3361,8 +3361,7 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n \t  output_operand_lossage (\"incompatible floating point / vector register operand for '%%%c'\", code);\n \t  return;\n \t}\n-      asm_fprintf (f, \"%sv%d\", REGISTER_PREFIX,\n-\t\t\t       REGNO (x) - V0_REGNUM + (code - 'S'));\n+      asm_fprintf (f, \"v%d\", REGNO (x) - V0_REGNUM + (code - 'S'));\n       break;\n \n     case 'w':\n@@ -3372,20 +3371,19 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n       if (x == const0_rtx\n \t  || (CONST_DOUBLE_P (x) && aarch64_float_const_zero_rtx_p (x)))\n \t{\n-\t  asm_fprintf (f, \"%s%czr\", REGISTER_PREFIX, code);\n+\t  asm_fprintf (f, \"%czr\", code);\n \t  break;\n \t}\n \n       if (REG_P (x) && GP_REGNUM_P (REGNO (x)))\n \t{\n-\t  asm_fprintf (f, \"%s%c%d\", REGISTER_PREFIX, code,\n-\t\t       REGNO (x) - R0_REGNUM);\n+\t  asm_fprintf (f, \"%c%d\", code, REGNO (x) - R0_REGNUM);\n \t  break;\n \t}\n \n       if (REG_P (x) && REGNO (x) == SP_REGNUM)\n \t{\n-\t  asm_fprintf (f, \"%s%ssp\", REGISTER_PREFIX, code == 'w' ? \"w\" : \"\");\n+\t  asm_fprintf (f, \"%ssp\", code == 'w' ? \"w\" : \"\");\n \t  break;\n \t}\n "}]}