{"sha": "464636c08a188adcbea2cec142235dd69241a681", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY0NjM2YzA4YTE4OGFkY2JlYTJjZWMxNDIyMzVkZDY5MjQxYTY4MQ==", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2016-11-29T22:22:13Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gcc.gnu.org", "date": "2016-11-29T22:22:13Z"}, "message": "xtensa: Fix PR target/78603\n\n2016-11-29  Max Filippov  <jcmvbkbc@gmail.com>\ngcc/\n\t* config/xtensa/xtensa.c (hwloop_optimize): Don't emit zero\n\toverhead loop start between a call and its CALL_ARG_LOCATION\n\tnote.\n\nFrom-SVN: r242979", "tree": {"sha": "6d167b8877654e9941f57643472ea6499d5dfd54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d167b8877654e9941f57643472ea6499d5dfd54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/464636c08a188adcbea2cec142235dd69241a681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464636c08a188adcbea2cec142235dd69241a681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/464636c08a188adcbea2cec142235dd69241a681", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464636c08a188adcbea2cec142235dd69241a681/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "576b067cc8b761ae9e489e9f85691483ef7744e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576b067cc8b761ae9e489e9f85691483ef7744e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576b067cc8b761ae9e489e9f85691483ef7744e8"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "fb3b4136dad630b7760e226bacd7119ac04b0979", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464636c08a188adcbea2cec142235dd69241a681/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464636c08a188adcbea2cec142235dd69241a681/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=464636c08a188adcbea2cec142235dd69241a681", "patch": "@@ -1,3 +1,10 @@\n+2016-11-29  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/78603\n+\t* config/xtensa/xtensa.c (hwloop_optimize): Don't emit zero\n+\toverhead loop start between a call and its CALL_ARG_LOCATION\n+\tnote.\n+\n 2016-11-29  Waldemar Brodkorb  <wbx@openadk.org>\n \n \t* config/bfin/linux.h (CPP_SPEC): Define."}, {"sha": "25ed7db4cd88840ae5cedf9d9f2b2655503c3c78", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464636c08a188adcbea2cec142235dd69241a681/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464636c08a188adcbea2cec142235dd69241a681/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=464636c08a188adcbea2cec142235dd69241a681", "patch": "@@ -4167,7 +4167,10 @@ hwloop_optimize (hwloop_info loop)\n       entry_after = BB_END (entry_bb);\n       while (DEBUG_INSN_P (entry_after)\n              || (NOTE_P (entry_after)\n-                 && NOTE_KIND (entry_after) != NOTE_INSN_BASIC_BLOCK))\n+                 && NOTE_KIND (entry_after) != NOTE_INSN_BASIC_BLOCK\n+\t\t /* Make sure we don't split a call and its corresponding\n+\t\t    CALL_ARG_LOCATION note.  */\n+                 && NOTE_KIND (entry_after) != NOTE_INSN_CALL_ARG_LOCATION))\n         entry_after = PREV_INSN (entry_after);\n \n       emit_insn_after (seq, entry_after);"}]}