{"sha": "78a438f161f869b2ac34c9904b0a2a0cad12127c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhNDM4ZjE2MWY4NjliMmFjMzRjOTkwNGIwYTJhMGNhZDEyMTI3Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-14T09:51:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-14T09:51:32Z"}, "message": "ostream.tcc (operator<<(basic_ostream<>&, const char*)): Fix thinko in change for libstdc++/28277, avoid memory leaks.\n\n2006-10-14  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/ostream.tcc (operator<<(basic_ostream<>&,\n\tconst char*)): Fix thinko in change for libstdc++/28277,\n\tavoid memory leaks.\n\nFrom-SVN: r117729", "tree": {"sha": "3fde7073366376d3c67f4d33fbc0f044357fdba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fde7073366376d3c67f4d33fbc0f044357fdba6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a438f161f869b2ac34c9904b0a2a0cad12127c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a438f161f869b2ac34c9904b0a2a0cad12127c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a438f161f869b2ac34c9904b0a2a0cad12127c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a438f161f869b2ac34c9904b0a2a0cad12127c/comments", "author": null, "committer": null, "parents": [{"sha": "14ba83a988ed858bab0dfe631f24ed87e0d9cbf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ba83a988ed858bab0dfe631f24ed87e0d9cbf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ba83a988ed858bab0dfe631f24ed87e0d9cbf5"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "f286f680be42fcc047c4bdde1706f290862ab4b4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a438f161f869b2ac34c9904b0a2a0cad12127c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a438f161f869b2ac34c9904b0a2a0cad12127c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=78a438f161f869b2ac34c9904b0a2a0cad12127c", "patch": "@@ -1,3 +1,9 @@\n+2006-10-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/ostream.tcc (operator<<(basic_ostream<>&,\n+\tconst char*)): Fix thinko in change for libstdc++/28277,\n+\tavoid memory leaks.\n+\n 2006-10-13  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/istream.tcc (operator>>(__istream_type&"}, {"sha": "125e0fe4cb8e45cf770eb8f9fab6581acb1c59ba", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a438f161f869b2ac34c9904b0a2a0cad12127c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a438f161f869b2ac34c9904b0a2a0cad12127c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=78a438f161f869b2ac34c9904b0a2a0cad12127c", "patch": "@@ -320,19 +320,30 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t__out.setstate(ios_base::badbit);\n       else\n \t{\n+\t  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t  // 167.  Improper use of traits_type::length()\n+\t  const size_t __clen = char_traits<char>::length(__s);      \n+\t  _CharT* __ws = 0;\n+\t  try\n+\t    { __ws = new _CharT[__clen]; }\n+\t  catch(...)\n+\t    {\n+\t      __out._M_setstate(ios_base::badbit);\n+\t      return __out;\n+\t    }\n+\n \t  try\n \t    {\n-\t      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-\t      // 167.  Improper use of traits_type::length()\n-\t      const size_t __clen = char_traits<char>::length(__s);      \n-\t      _CharT* __ws = new _CharT[__clen];\n \t      for (size_t  __i = 0; __i < __clen; ++__i)\n \t\t__ws[__i] = __out.widen(__s[__i]);\n \t      __out._M_insert(__ws, __clen);\n \t      delete [] __ws;\n \t    }\n \t  catch(...)\n-\t    { __out._M_setstate(ios_base::badbit); }\n+\t    {\n+\t      delete [] __ws;\n+\t      __throw_exception_again;\n+\t    }\n \t}\n       return __out;\n     }"}]}