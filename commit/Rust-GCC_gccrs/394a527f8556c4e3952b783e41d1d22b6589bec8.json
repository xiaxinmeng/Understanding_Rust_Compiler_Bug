{"sha": "394a527f8556c4e3952b783e41d1d22b6589bec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk0YTUyN2Y4NTU2YzRlMzk1MmI3ODNlNDFkMWQyMmI2NTg5YmVjOA==", "commit": {"author": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-06-17T03:14:53Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-06-17T03:14:53Z"}, "message": "altivec.md (define_mode_attr VF_sxddp): Move to vsx.md.\n\ngcc/ChangeLog:\n\n2017-06-16  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/altivec.md (define_mode_attr VF_sxddp): Move to vsx.md.\n\t* config/rs6000/vsx.md (define_mode_attr VF_sxddp\n\tdefine_expand \"floate<mode>\",\n\tdefine_expand \"floato<mode>\"): Add VF_sxddp definition, replace\n\tundefined VFC_inst with VF_sxddp definition\n\nFrom-SVN: r249337", "tree": {"sha": "44673e2dfac3eb421af45706cbd6c26c4d31d768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44673e2dfac3eb421af45706cbd6c26c4d31d768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/394a527f8556c4e3952b783e41d1d22b6589bec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/394a527f8556c4e3952b783e41d1d22b6589bec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/394a527f8556c4e3952b783e41d1d22b6589bec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/394a527f8556c4e3952b783e41d1d22b6589bec8/comments", "author": null, "committer": null, "parents": [{"sha": "b36a612c99166cee8222ce257b62fcc0895d41b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36a612c99166cee8222ce257b62fcc0895d41b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36a612c99166cee8222ce257b62fcc0895d41b7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "25b2768b0f32a839f1c715a918c30a207cf88473", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/394a527f8556c4e3952b783e41d1d22b6589bec8/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/394a527f8556c4e3952b783e41d1d22b6589bec8/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=394a527f8556c4e3952b783e41d1d22b6589bec8", "patch": "@@ -207,9 +207,6 @@\n ;; versus floating point\n (define_mode_attr VS_sxwsp [(V4SI \"sxw\") (V4SF \"sp\")])\n \n-;; Mode attribute for vector floate and floato conversions\n-(define_mode_attr VF_sxddp [(V2DI \"sxd\") (V2DF \"dp\")])\n-\n ;; Specific iterator for parity which does not have a byte/half-word form, but\n ;; does have a quad word form\n (define_mode_iterator VParity [V4SI"}, {"sha": "7aa6d32e8210e503c3d6c454085e1f5c00f04fc2", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/394a527f8556c4e3952b783e41d1d22b6589bec8/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/394a527f8556c4e3952b783e41d1d22b6589bec8/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=394a527f8556c4e3952b783e41d1d22b6589bec8", "patch": "@@ -21,6 +21,9 @@\n ;; Iterator for comparison types\n (define_code_iterator CMP_TEST [eq lt gt unordered])\n \n+;; Mode attribute for vector floate and floato conversions\n+(define_mode_attr VF_sxddp [(V2DI \"sxd\") (V2DF \"dp\")])\n+\n ;; Iterator for both scalar and vector floating point types supported by VSX\n (define_mode_iterator VSX_B [DF V4SF V2DF])\n \n@@ -2056,7 +2059,7 @@\n \t\t rtx_tmp, rtx_tmp, rtx_val));\n     }\n   else\n-    emit_insn (gen_vsx_xvcv<VFC_inst>sp (operands[0], operands[1]));\n+    emit_insn (gen_vsx_xvcv<VF_sxddp>sp (operands[0], operands[1]));\n \n   DONE;\n })\n@@ -2095,15 +2098,15 @@\n   \"VECTOR_UNIT_VSX_P (V4SFmode)\"\n {\n   if (VECTOR_ELT_ORDER_BIG)\n-    emit_insn (gen_vsx_xvcv<VFC_inst>sp (operands[0], operands[1]));\n+    emit_insn (gen_vsx_xvcv<VF_sxddp>sp (operands[0], operands[1]));\n   else\n     {\n       /* Shift left one word to put odd word correct location */\n       rtx rtx_tmp;\n       rtx rtx_val = GEN_INT (4);\n \n       rtx_tmp = gen_reg_rtx (V4SFmode);\n-      emit_insn (gen_vsx_xvcv<VFC_inst>sp (rtx_tmp, operands[1]));\n+      emit_insn (gen_vsx_xvcv<VF_sxddp>sp (rtx_tmp, operands[1]));\n       emit_insn (gen_altivec_vsldoi_v4sf (operands[0],\n \t\t rtx_tmp, rtx_tmp, rtx_val));\n     }"}]}