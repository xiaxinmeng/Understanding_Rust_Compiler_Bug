{"sha": "ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI0MGFkMmI2YWQ1NzY5YzhiY2I0NzQxYzQ3YjkzNjIyZDFhOGEwOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-22T02:02:28Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-22T02:02:28Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1231", "tree": {"sha": "bf1819d4928a2b99055cc89e9dae5efea06297fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf1819d4928a2b99055cc89e9dae5efea06297fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09/comments", "author": null, "committer": null, "parents": [{"sha": "4d06f14570ebec47f666a03bd7f67b832d1e7f0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06f14570ebec47f666a03bd7f67b832d1e7f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d06f14570ebec47f666a03bd7f67b832d1e7f0f"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "527d67f9f7ed936e85c5c5f669f0884f9660b357", "filename": "gcc/global.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "patch": "@@ -262,9 +262,12 @@ static void set_preference ();\n \f\n /* Perform allocation of pseudo-registers not allocated by local_alloc.\n    FILE is a file to output debugging information on,\n-   or zero if such output is not desired.  */\n+   or zero if such output is not desired.\n \n-void\n+   Return value is nonzero if reload failed\n+   and we must not do any more for this function.  */\n+\n+int\n global_alloc (file)\n      FILE *file;\n {\n@@ -543,7 +546,7 @@ global_alloc (file)\n \t for the sake of debugging information.  */\n   if (n_basic_blocks > 0)\n #endif\n-    reload (get_insns (), 1, file);\n+    return reload (get_insns (), 1, file);\n }\n \n /* Sort predicate for ordering the allocnos."}, {"sha": "a4da7954634f7eb7d16396c800a8d04ebfeadea3", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ab40ad2b6ad5769c8bcb4741c47b93622d1a8a09", "patch": "@@ -1977,6 +1977,7 @@ rest_of_compilation (decl)\n      to be restored after we finish compiling the function\n      (for use when compiling inline calls to this function).  */\n   tree saved_block_tree = 0;\n+  int failure = 0;\n \n   /* If we are reconsidering an inline function\n      at the end of compilation, skip the stuff for making it inline.  */\n@@ -2343,10 +2344,10 @@ rest_of_compilation (decl)\n   TIMEVAR (global_alloc_time,\n \t   {\n \t     if (!obey_regdecls)\n-\t       global_alloc (global_reg_dump ? global_reg_dump_file : 0);\n+\t       failure = global_alloc (global_reg_dump ? global_reg_dump_file : 0);\n \t     else\n-\t       reload (insns, 0,\n-\t\t       global_reg_dump ? global_reg_dump_file : 0);\n+\t       failure = reload (insns, 0,\n+\t\t\t\t global_reg_dump ? global_reg_dump_file : 0);\n \t   });\n \n   if (global_reg_dump)\n@@ -2357,6 +2358,9 @@ rest_of_compilation (decl)\n \t       fflush (global_reg_dump_file);\n \t     });\n \n+  if (failure)\n+    goto exit_rest_of_compilation;\n+\n   reload_completed = 1;\n \n   if (optimize > 0 && flag_schedule_insns_after_reload)\n@@ -2386,7 +2390,7 @@ rest_of_compilation (decl)\n #ifdef LEAF_REGISTERS\n   leaf_function = 0;\n   if (optimize > 0 && only_leaf_regs_used () && leaf_function_p ())\n-      leaf_function = 1;\n+    leaf_function = 1;\n #endif\n \n   /* One more attempt to remove jumps to .+1"}]}