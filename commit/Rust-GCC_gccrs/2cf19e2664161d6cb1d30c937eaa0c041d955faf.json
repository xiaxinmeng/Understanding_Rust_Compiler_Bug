{"sha": "2cf19e2664161d6cb1d30c937eaa0c041d955faf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNmMTllMjY2NDE2MWQ2Y2IxZDMwYzkzN2VhYTBjMDQxZDk1NWZhZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-08T08:44:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-08T08:44:02Z"}, "message": "re PR tree-optimization/59038 (r204398 causes 186.crafty init.c to be miscompiled)\n\n2013-11-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59038\n\tPR tree-optimization/58955\n\t* tree-loop-distribution.c (pg_add_dependence_edges): Revert\n\tprevious change.  Handle known dependences correctly.\n\n\t* gcc.dg/torture/pr59038.c: New testcase.\n\nFrom-SVN: r204561", "tree": {"sha": "ae49cc21a76ed1db9146f92f699d9da06def4d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae49cc21a76ed1db9146f92f699d9da06def4d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cf19e2664161d6cb1d30c937eaa0c041d955faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf19e2664161d6cb1d30c937eaa0c041d955faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf19e2664161d6cb1d30c937eaa0c041d955faf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf19e2664161d6cb1d30c937eaa0c041d955faf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d6c5039bb1030e01a66a8cf4525abff4b825276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6c5039bb1030e01a66a8cf4525abff4b825276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6c5039bb1030e01a66a8cf4525abff4b825276"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "171032f7a722f471677d612a8e951f28085af5ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cf19e2664161d6cb1d30c937eaa0c041d955faf", "patch": "@@ -1,3 +1,10 @@\n+2013-11-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59038\n+\tPR tree-optimization/58955\n+\t* tree-loop-distribution.c (pg_add_dependence_edges): Revert\n+\tprevious change.  Handle known dependences correctly.\n+\n 2013-11-08  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/rs6000/t-xilinx: Remove duplicate contents."}, {"sha": "1694eca4300a09dc7883618321c4029e04b29a3a", "filename": "gcc/testsuite/gcc.dg/torture/pr59038.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59038.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59038.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59038.c?ref=2cf19e2664161d6cb1d30c937eaa0c041d955faf", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+unsigned char first_ones_8bit[256];\n+unsigned char connected_passed[256];\n+\n+int\n+main ()\n+{\n+  int i, j;\n+  for (i=0;i<256;i++){\n+      connected_passed[i]=0;\n+      first_ones_8bit[i]=0;\n+      for (j=7;j>0;j--){\n+\t  if ((i & (3<<(7-j))) == (3<<(7-j))){\n+\t      connected_passed[i]=j;\n+\t      break;\n+\t  }\n+      }\n+  }\n+  if (connected_passed[3] != 7)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "45efad3f110c014675f5afdf45d487e173c390b5", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf19e2664161d6cb1d30c937eaa0c041d955faf/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=2cf19e2664161d6cb1d30c937eaa0c041d955faf", "patch": "@@ -1324,7 +1324,7 @@ pg_add_dependence_edges (struct graph *rdg, vec<loop_p> loops, int dir,\n   for (int ii = 0; drs1.iterate (ii, &dr1); ++ii)\n     for (int jj = 0; drs2.iterate (jj, &dr2); ++jj)\n       {\n-\tint this_dir = -1;\n+\tint this_dir = 1;\n \tddr_p ddr;\n \t/* Re-shuffle data-refs to be in dominator order.  */\n \tif (rdg_vertex_for_stmt (rdg, DR_STMT (dr1))\n@@ -1350,8 +1350,17 @@ pg_add_dependence_edges (struct graph *rdg, vec<loop_p> loops, int dir,\n \t      }\n \t    /* Known dependences can still be unordered througout the\n \t       iteration space, see gcc.dg/tree-ssa/ldist-16.c.  */\n-\t    if (DDR_NUM_DIST_VECTS (ddr) == 0)\n+\t    if (DDR_NUM_DIST_VECTS (ddr) != 1)\n \t      this_dir = 2;\n+\t    /* If the overlap is exact preserve stmt order.  */\n+\t    else if (lambda_vector_zerop (DDR_DIST_VECT (ddr, 0), 1))\n+\t      ;\n+\t    else\n+\t      {\n+\t\t/* Else as the distance vector is lexicographic positive\n+\t\t   swap the dependence direction.  */\n+\t\tthis_dir = -this_dir;\n+\t      }\n \t  }\n \telse\n \t  this_dir = 0;"}]}