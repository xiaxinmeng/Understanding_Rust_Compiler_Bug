{"sha": "0189a68ad39868ba382c19b7e59d218bdfac373f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4OWE2OGFkMzk4NjhiYTM4MmMxOWI3ZTU5ZDIxOGJkZmFjMzczZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-20T13:08:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-20T13:08:55Z"}, "message": "Fix formatting.\n\nFrom-SVN: r12540", "tree": {"sha": "b4bd8c59727383e0953a790d8f3fe18704f9944b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4bd8c59727383e0953a790d8f3fe18704f9944b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0189a68ad39868ba382c19b7e59d218bdfac373f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0189a68ad39868ba382c19b7e59d218bdfac373f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0189a68ad39868ba382c19b7e59d218bdfac373f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0189a68ad39868ba382c19b7e59d218bdfac373f/comments", "author": null, "committer": null, "parents": [{"sha": "5f3c8996f55151acfc94f4507ade5115719b1ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3c8996f55151acfc94f4507ade5115719b1ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3c8996f55151acfc94f4507ade5115719b1ae2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3878e8b893ee71110183267e7b969202044ccc0c", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0189a68ad39868ba382c19b7e59d218bdfac373f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0189a68ad39868ba382c19b7e59d218bdfac373f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0189a68ad39868ba382c19b7e59d218bdfac373f", "patch": "@@ -1227,7 +1227,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n \n       /* This is better than explicit arithmetic, since it avoids overflow.  */\n       size_tree = size_binop (CEIL_DIV_EXPR,\n-\t\t\t  DECL_SIZE (decl), size_int (BITS_PER_UNIT));\n+\t\t\t      DECL_SIZE (decl), size_int (BITS_PER_UNIT));\n \n       if (TREE_INT_CST_HIGH (size_tree) != 0)\n \t{"}]}