{"sha": "c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0YjQzNGY0NmFhYmZmNzkxZjU5YTQ1ZWM3NGM4YjlhM2NmMzJmMg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2009-11-30T10:38:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:38:23Z"}, "message": "socket.c: Add more accessor functions for struct servent (need setters as well as getters).\n\n2009-11-30  Bob Duff  <duff@adacore.com>\n\n\t* socket.c: Add more accessor functions for struct servent (need\n\tsetters as well as getters).\n\t* g-sothco.ads (Servent): Declare interfaces to C setter functions for\n\tstruct servent.\n\t* g-sttsne-locking.adb (Copy_Service_Entry): Use setter functions for\n\tstruct servent.\n\nFrom-SVN: r154777", "tree": {"sha": "8b0a240aa8ed5792f527be14bd43e2be09bd2b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b0a240aa8ed5792f527be14bd43e2be09bd2b77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e68c7b43067cf63f3783238073193ea2ab2fe525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68c7b43067cf63f3783238073193ea2ab2fe525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68c7b43067cf63f3783238073193ea2ab2fe525"}], "stats": {"total": 93, "additions": 81, "deletions": 12}, "files": [{"sha": "ef5245bed8b8a0557921f42ca2cfa3504601197e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "patch": "@@ -1,3 +1,12 @@\n+2009-11-30  Bob Duff  <duff@adacore.com>\n+\n+\t* socket.c: Add more accessor functions for struct servent (need\n+\tsetters as well as getters).\n+\t* g-sothco.ads (Servent): Declare interfaces to C setter functions for\n+\tstruct servent.\n+\t* g-sttsne-locking.adb (Copy_Service_Entry): Use setter functions for\n+\tstruct servent.\n+\n 2009-11-30  Robert Dewar  <dewar@adacore.com>\n \n \t* s-stchop-vxworks.adb: Add comment."}, {"sha": "82003e2ffd5c186bf3b5557f0ff9c5ebbed04189", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "patch": "@@ -225,13 +225,32 @@ package GNAT.Sockets.Thin_Common is\n \n    function Servent_S_Name\n      (E : Servent_Access) return C.Strings.chars_ptr;\n+\n    function Servent_S_Aliases\n      (E : Servent_Access) return Chars_Ptr_Pointers.Pointer;\n+\n    function Servent_S_Port\n      (E : Servent_Access) return C.int;\n+\n    function Servent_S_Proto\n      (E : Servent_Access) return C.Strings.chars_ptr;\n \n+   procedure Servent_Set_S_Name\n+     (E      : Servent_Access;\n+      S_Name : C.Strings.chars_ptr);\n+\n+   procedure Servent_Set_S_Aliases\n+     (E         : Servent_Access;\n+      S_Aliases : Chars_Ptr_Pointers.Pointer);\n+\n+   procedure Servent_Set_S_Port\n+     (E      : Servent_Access;\n+      S_Port : C.int);\n+\n+   procedure Servent_Set_S_Proto\n+     (E       : Servent_Access;\n+      S_Proto : C.Strings.chars_ptr);\n+\n    ------------------\n    -- Host entries --\n    ------------------\n@@ -347,4 +366,8 @@ private\n    pragma Import (C, Servent_S_Aliases, \"__gnat_servent_s_aliases\");\n    pragma Import (C, Servent_S_Port, \"__gnat_servent_s_port\");\n    pragma Import (C, Servent_S_Proto, \"__gnat_servent_s_proto\");\n+   pragma Import (C, Servent_Set_S_Name, \"__gnat_servent_set_s_name\");\n+   pragma Import (C, Servent_Set_S_Aliases, \"__gnat_servent_set_s_aliases\");\n+   pragma Import (C, Servent_Set_S_Port, \"__gnat_servent_set_s_port\");\n+   pragma Import (C, Servent_Set_S_Proto, \"__gnat_servent_set_s_proto\");\n end GNAT.Sockets.Thin_Common;"}, {"sha": "543281d77fc0ee3f1436d9254200254bd0b7c5e1", "filename": "gcc/ada/g-sttsne-locking.adb", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fg-sttsne-locking.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fg-sttsne-locking.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-locking.adb?ref=c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2007, AdaCore                          --\n+--                   Copyright (C) 2007-2009, AdaCore                       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -206,14 +206,15 @@ package body GNAT.Sockets.Thin.Task_Safe_NetDB is\n \n       Source_Aliases : Chars_Ptr_Array\n         renames Chars_Ptr_Pointers.Value\n-          (Source_Servent.S_Aliases, Terminator => C.Strings.Null_Ptr);\n+          (Servent_S_Aliases (Source_Servent),\n+           Terminator => C.Strings.Null_Ptr);\n       --  Null-terminated list of aliases (last element of this array is\n       --  Null_Ptr).\n \n    begin\n       Result := -1;\n-      Names_Length := C.Strings.Strlen (Source_Servent.S_Name) + 1\n-                    + C.Strings.Strlen (Source_Servent.S_Proto) + 1;\n+      Names_Length := C.Strings.Strlen (Servent_S_Name (Source_Servent)) + 1 +\n+                      C.Strings.Strlen (Servent_S_Proto (Source_Servent)) + 1;\n \n       for J in Source_Aliases'Range loop\n          if Source_Aliases (J) /= C.Strings.Null_Ptr then\n@@ -235,6 +236,8 @@ package body GNAT.Sockets.Thin.Task_Safe_NetDB is\n          Names_Index : size_t := Netdb_Data.Names'First;\n          --  Index of first available location in Netdb_Data.Names\n \n+         Stored_Name : C.Strings.chars_ptr;\n+\n       begin\n          if Netdb_Data'Size / 8 > Target_Buffer_Length then\n             return;\n@@ -243,26 +246,29 @@ package body GNAT.Sockets.Thin.Task_Safe_NetDB is\n          --  Copy service name\n \n          Store_Name\n-           (C.Strings.Value (Source_Servent.S_Name),\n+           (C.Strings.Value (Servent_S_Name (Source_Servent)),\n             Netdb_Data.Names, Names_Index,\n-            Target_Servent.S_Name);\n+            Stored_Name);\n+         Servent_Set_S_Name (Target_Servent, Stored_Name);\n \n          --  Copy aliases (null-terminated string pointer array)\n \n-         Target_Servent.S_Aliases :=\n-           Netdb_Data.Aliases_List\n-             (Netdb_Data.Aliases_List'First)'Unchecked_Access;\n+         Servent_Set_S_Aliases\n+           (Target_Servent,\n+            Netdb_Data.Aliases_List\n+              (Netdb_Data.Aliases_List'First)'Unchecked_Access);\n \n          --  Copy port number\n \n-         Target_Servent.S_Port := Source_Servent.S_Port;\n+         Servent_Set_S_Port (Target_Servent, Servent_S_Port (Source_Servent));\n \n          --  Copy protocol name\n \n          Store_Name\n-           (C.Strings.Value (Source_Servent.S_Proto),\n+           (C.Strings.Value (Servent_S_Proto (Source_Servent)),\n             Netdb_Data.Names, Names_Index,\n-            Target_Servent.S_Proto);\n+            Stored_Name);\n+         Servent_Set_S_Proto (Target_Servent, Stored_Name);\n \n          for J in Netdb_Data.Aliases_List'Range loop\n             if J = Netdb_Data.Aliases_List'Last then"}, {"sha": "7675564316189dbcb1d150c4d0f2623f4ad01433", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84b434f46aabff791f59a45ec74c8b9a3cf32f2/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "patch": "@@ -91,6 +91,10 @@ extern char * __gnat_servent_s_name (struct servent *);\n extern char ** __gnat_servent_s_aliases (struct servent *);\n extern int __gnat_servent_s_port (struct servent *);\n extern char * __gnat_servent_s_proto (struct servent *);\n+extern void __gnat_servent_set_s_name (struct servent *, char *);\n+extern void __gnat_servent_set_s_aliases (struct servent *, char **);\n+extern void __gnat_servent_set_s_port (struct servent *, int);\n+extern void __gnat_servent_set_s_proto (struct servent *, char *);\n #if defined (__vxworks) || defined (_WIN32)\n extern int  __gnat_inet_pton (int, const char *, void *);\n #endif\n@@ -535,6 +539,8 @@ __gnat_inet_pton (int af, const char *src, void *dst) {\n  *   };\n  */\n \n+/* Getters */\n+\n char *\n __gnat_servent_s_name (struct servent * s)\n {\n@@ -559,6 +565,31 @@ __gnat_servent_s_proto (struct servent * s)\n   return s->s_proto;\n }\n \n+/* Setters */\n+\n+void\n+__gnat_servent_set_s_name (struct servent * s, char * s_name)\n+{\n+  s->s_name = s_name;\n+}\n+\n+void\n+__gnat_servent_set_s_aliases (struct servent * s, char ** s_aliases)\n+{\n+  s->s_aliases = s_aliases;\n+}\n+\n+void\n+__gnat_servent_set_s_port (struct servent * s, int s_port)\n+{\n+  s->s_port = s_port;\n+}\n+\n+void\n+__gnat_servent_set_s_proto (struct servent * s, char * s_proto)\n+{\n+  s->s_proto = s_proto;\n+}\n \n #else\n # warning Sockets are not supported on this platform"}]}