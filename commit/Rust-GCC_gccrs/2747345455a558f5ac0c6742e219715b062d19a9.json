{"sha": "2747345455a558f5ac0c6742e219715b062d19a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0NzM0NTQ1NWE1NThmNWFjMGM2NzQyZTIxOTcxNWIwNjJkMTlhOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-11-01T11:01:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-11-01T11:01:40Z"}, "message": "re PR libstdc++/24595 (std::tr1::get_deleter not declared)\n\n2005-11-01  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/24595\n\t* include/tr1/boost_shared_ptr.h (shared_ptr<>::get_deleter):\n\tMove out of shared_ptr.\n\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/misc/24595.cc:\n\tNew.\n\nFrom-SVN: r106321", "tree": {"sha": "6fb9e49a4dceeb72792aa0c00efb38fd59a2f439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb9e49a4dceeb72792aa0c00efb38fd59a2f439"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2747345455a558f5ac0c6742e219715b062d19a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2747345455a558f5ac0c6742e219715b062d19a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2747345455a558f5ac0c6742e219715b062d19a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2747345455a558f5ac0c6742e219715b062d19a9/comments", "author": null, "committer": null, "parents": [{"sha": "53096259e6fb2000ca4bfd279e3f6b190d531090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53096259e6fb2000ca4bfd279e3f6b190d531090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53096259e6fb2000ca4bfd279e3f6b190d531090"}], "stats": {"total": 74, "additions": 60, "deletions": 14}, "files": [{"sha": "8b9d310ad37866d95e84403d3e60741869503a81", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2747345455a558f5ac0c6742e219715b062d19a9", "patch": "@@ -1,3 +1,11 @@\n+2005-11-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/24595\n+\t* include/tr1/boost_shared_ptr.h (shared_ptr<>::get_deleter):\n+\tMove out of shared_ptr.\n+\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/misc/24595.cc:\n+\tNew.\n+\n 2005-10-30  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/20213"}, {"sha": "01250aa107c71c97c1701fae08f6b3e850629e93", "filename": "libstdc++-v3/include/tr1/boost_shared_ptr.h", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h?ref=2747345455a558f5ac0c6742e219715b062d19a9", "patch": "@@ -674,27 +674,20 @@ template <typename _Tp>\n       _M_refcount.swap(__other._M_refcount);\n     }\n \n+    void*\n+    _M_get_deleter(const std::type_info& __ti) const\n+    { return _M_refcount.get_deleter(__ti); }\n+\n   private:\n     template <typename _Tp1>\n       bool\n       _M_less(const shared_ptr<_Tp1>& __rhs) const\n       { return _M_refcount < __rhs._M_refcount; }\n \n-    void*\n-    _M_get_deleter(const std::type_info& __ti) const\n-    { return _M_refcount.get_deleter(__ti); }\n-\n     template <typename _Tp1> friend class shared_ptr;\n     template <typename _Tp1> friend class weak_ptr;\n \n     // friends injected into enclosing namespace and found by ADL:\n-\n-    // get_deleter (experimental)\n-    template <typename _Del>\n-      friend inline _Del*\n-      get_deleter(const shared_ptr& __p)\n-      { return static_cast<_Del*>(__p._M_get_deleter(typeid(_Del))); }\n-\n     template <typename _Tp1>\n       friend inline bool\n       operator==(const shared_ptr& __a, const shared_ptr<_Tp1>& __b)\n@@ -752,15 +745,21 @@ template <typename _Tp, typename _Tp1>\n     return shared_ptr<_Tp>(__r, __dynamic_cast_tag());\n   }\n \n-// operator<<\n+// 2.2.3.7 shared_ptr I/O\n template <typename _Ch, typename _Tr, typename _Tp>\n-  std::basic_ostream<_Ch,_Tr>&\n-  operator<<(std::basic_ostream<_Ch,_Tr>& __os, const shared_ptr<_Tp>& __p)\n+  std::basic_ostream<_Ch, _Tr>&\n+  operator<<(std::basic_ostream<_Ch, _Tr>& __os, const shared_ptr<_Tp>& __p)\n   {\n     __os << __p.get();\n     return __os;\n   }\n \n+// 2.2.3.10 shared_ptr get_deleter (experimental)\n+template <typename _Del, typename _Tp>\n+  inline _Del*\n+  get_deleter(const shared_ptr<_Tp>& __p)\n+  { return static_cast<_Del*>(__p._M_get_deleter(typeid(_Del))); }\n+\n \n template <typename _Tp>\n   class weak_ptr"}, {"sha": "71cbd0b41a1dd7cb8a37b292e2116c3c56cd76b5", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/memory/shared_ptr/misc/24595.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fmisc%2F24595.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2747345455a558f5ac0c6742e219715b062d19a9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fmisc%2F24595.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fmisc%2F24595.cc?ref=2747345455a558f5ac0c6742e219715b062d19a9", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2005 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// TR1 2.2.2 Template class shared_ptr [tr.util.smartptr.shared]\n+\n+#include <tr1/memory>\n+#include <testsuite_hooks.h>\n+\n+using std::tr1::get_deleter;\n+\n+// libstdc++/24595\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::tr1::shared_ptr<int> sp;\n+  VERIFY( !get_deleter<void(*)(int*)>(sp) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}