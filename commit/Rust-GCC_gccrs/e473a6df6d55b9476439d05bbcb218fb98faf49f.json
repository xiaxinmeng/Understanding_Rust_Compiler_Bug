{"sha": "e473a6df6d55b9476439d05bbcb218fb98faf49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ3M2E2ZGY2ZDU1Yjk0NzY0MzlkMDViYmNiMjE4ZmI5OGZhZjQ5Zg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-05-07T23:28:58Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-05-07T23:28:58Z"}, "message": "rs6000: Tests for setbc\n\n2020-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* gcc.target/powerpc/setbc.h: New.\n\t* gcc.target/powerpc/setbceq.c: New.\n\t* gcc.target/powerpc/setbcge.c: New.\n\t* gcc.target/powerpc/setbcgt.c: New.\n\t* gcc.target/powerpc/setbcle.c: New.\n\t* gcc.target/powerpc/setbclt.c: New.\n\t* gcc.target/powerpc/setbcne.c: New.", "tree": {"sha": "89461b333129cdd4543ffe48778415291ba5c4c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89461b333129cdd4543ffe48778415291ba5c4c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e473a6df6d55b9476439d05bbcb218fb98faf49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e473a6df6d55b9476439d05bbcb218fb98faf49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e473a6df6d55b9476439d05bbcb218fb98faf49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e473a6df6d55b9476439d05bbcb218fb98faf49f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98329e3f5b85acc50d08c3f0680a30f6e728c033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98329e3f5b85acc50d08c3f0680a30f6e728c033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98329e3f5b85acc50d08c3f0680a30f6e728c033"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "541f38f943d7a6d826fb93f273ab71770a586c49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -1,3 +1,13 @@\n+2020-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/setbc.h: New.\n+\t* gcc.target/powerpc/setbceq.c: New.\n+\t* gcc.target/powerpc/setbcge.c: New.\n+\t* gcc.target/powerpc/setbcgt.c: New.\n+\t* gcc.target/powerpc/setbcle.c: New.\n+\t* gcc.target/powerpc/setbclt.c: New.\n+\t* gcc.target/powerpc/setbcne.c: New.\n+\n 2020-05-07  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/94817"}, {"sha": "51334246eca74db3043a9ab8dace781fa592a12d", "filename": "gcc/testsuite/gcc.target/powerpc/setbc.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbc.h?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,27 @@\n+#define XSTR(a,b) a ## b\n+#define T(a,b) XSTR(a,b)\n+\n+int  T(NAME,ii)(int a, int b)   { return a CODE b; }\n+int  T(NAME,il)(long a, long b) { return a CODE b; }\n+long T(NAME,li)(int a, int b)   { return a CODE b; }\n+long T(NAME,ll)(long a, long b) { return a CODE b; }\n+\n+int  T(NAME,iin0)(int a)  { return a CODE 0; }\n+int  T(NAME,iln0)(long a) { return a CODE 0; }\n+long T(NAME,lin0)(int a)  { return a CODE 0; }\n+long T(NAME,lln0)(long a) { return a CODE 0; }\n+\n+int  T(NAME,iin1)(int a)  { return a CODE 1; }\n+int  T(NAME,iln1)(long a) { return a CODE 1; }\n+long T(NAME,lin1)(int a)  { return a CODE 1; }\n+long T(NAME,lln1)(long a) { return a CODE 1; }\n+\n+int  T(NAME,iinm1)(int a)  { return a CODE -1; }\n+int  T(NAME,ilnm1)(long a) { return a CODE -1; }\n+long T(NAME,linm1)(int a)  { return a CODE -1; }\n+long T(NAME,llnm1)(long a) { return a CODE -1; }\n+\n+int  T(NAME,iin42)(int a)  { return a CODE 42; }\n+int  T(NAME,iln42)(long a) { return a CODE 42; }\n+long T(NAME,lin42)(int a)  { return a CODE 42; }\n+long T(NAME,lln42)(long a) { return a CODE 42; }"}, {"sha": "ee3cbffa6f537884c0bff1b1ca8fe4dbd24faed0", "filename": "gcc/testsuite/gcc.target/powerpc/setbceq.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbceq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbceq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbceq.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME eq\n+#define CODE ==\n+\n+#include \"setbc.h\"\n+\n+/* { dg-final { scan-assembler-times {\\msetbc\\M} 20 } } */"}, {"sha": "06d5815976863f762e616d65b9f78df1ac559af0", "filename": "gcc/testsuite/gcc.target/powerpc/setbcge.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcge.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME ge\n+#define CODE >=\n+\n+#include \"setbc.h\"\n+\n+/* \"x >= 0\" is done without setbc.\n+   The generic code sometimes transforms \"x >= A\" to \"x > A-1\"; we allow\n+   either here.  */\n+/* { dg-final { scan-assembler-times {\\msetbcr?\\M} 16 } } */"}, {"sha": "864ae3a7e44df53f0213f9b4cba20aea38f5b33a", "filename": "gcc/testsuite/gcc.target/powerpc/setbcgt.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcgt.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME gt\n+#define CODE >\n+\n+#include \"setbc.h\"\n+\n+/* \"x > -1\" is done without setbc.  */\n+/* { dg-final { scan-assembler-times {\\msetbc\\M} 16 } } */"}, {"sha": "05df4075b1c540520545853be9a51e69b308926d", "filename": "gcc/testsuite/gcc.target/powerpc/setbcle.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcle.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME le\n+#define CODE <=\n+\n+#include \"setbc.h\"\n+\n+/* \"x <= -1\" is done without setbc.  */\n+/* { dg-final { scan-assembler-times {\\msetbcr\\M} 16 } } */"}, {"sha": "52ffb1fd7e16e9cf7e1a27c14ac46021c622eddb", "filename": "gcc/testsuite/gcc.target/powerpc/setbclt.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbclt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbclt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbclt.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME lt\n+#define CODE <\n+\n+#include \"setbc.h\"\n+\n+/* \"x < 0\" is done without setbc.\n+   The generic code sometimes transforms \"x < A\" to \"x <= A-1\"; we allow\n+   either here.  */\n+/* { dg-final { scan-assembler-times {\\msetbcr?\\M} 16 } } */"}, {"sha": "841448ab5e58dbdd89a2c5ee163e6507449e9e4b", "filename": "gcc/testsuite/gcc.target/powerpc/setbcne.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e473a6df6d55b9476439d05bbcb218fb98faf49f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetbcne.c?ref=e473a6df6d55b9476439d05bbcb218fb98faf49f", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME ne\n+#define CODE !=\n+\n+#include \"setbc.h\"\n+\n+/* { dg-final { scan-assembler-times {\\msetbcr\\M} 20 } } */"}]}