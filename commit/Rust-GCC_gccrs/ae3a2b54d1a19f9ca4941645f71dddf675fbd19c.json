{"sha": "ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzYTJiNTRkMWExOWY5Y2E0OTQxNjQ1ZjcxZGRkZjY3NWZiZDE5Yw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-08-14T09:52:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:52:06Z"}, "message": "[Ada] Strengthen Locked flag\n\nThis patch strengthens the Locked flag, by Asserting that it is False on\noperations that might cause reallocation.\n\nNo change in behavior (except in the presence of compiler bugs), so no\ntest.\n\n2019-08-14  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* table.adb: Assert that the table is not locked when increasing\n\tLast, even if it doesn't cause reallocation.  In other words,\n\tassert that on operations that MIGHT cause reallocation.\n\t* table.ads: Fix comment accordingly.\n\nFrom-SVN: r274463", "tree": {"sha": "a554b76fa2c23e4a5845dcbc2356eb24d1d1e554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a554b76fa2c23e4a5845dcbc2356eb24d1d1e554"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27af94e7b9a4702ea93348f917fd2ad82adb6853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27af94e7b9a4702ea93348f917fd2ad82adb6853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27af94e7b9a4702ea93348f917fd2ad82adb6853"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "7c09cc0c32f067341e7b7056e001334813d3985d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "patch": "@@ -1,3 +1,10 @@\n+2019-08-14  Bob Duff  <duff@adacore.com>\n+\n+\t* table.adb: Assert that the table is not locked when increasing\n+\tLast, even if it doesn't cause reallocation.  In other words,\n+\tassert that on operations that MIGHT cause reallocation.\n+\t* table.ads: Fix comment accordingly.\n+\n 2019-08-14  Arnaud Charlet  <charlet@adacore.com>\n \n \t* doc/gnat_ugn/gnat_and_program_execution.rst: Remove"}, {"sha": "97940475bf109adc9f775ec778f36b410d25d07d", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "patch": "@@ -80,6 +80,7 @@ package body Table is\n \n       procedure Append (New_Val : Table_Component_Type) is\n       begin\n+         pragma Assert (not Locked);\n          Set_Item (Table_Index_Type (Last_Val + 1), New_Val);\n       end Append;\n \n@@ -120,6 +121,7 @@ package body Table is\n \n       procedure Increment_Last is\n       begin\n+         pragma Assert (not Locked);\n          Last_Val := Last_Val + 1;\n \n          if Last_Val > Max then\n@@ -384,6 +386,8 @@ package body Table is\n \n       procedure Set_Last (New_Val : Table_Index_Type) is\n       begin\n+         pragma Assert (Int (New_Val) <= Last_Val or else not Locked);\n+\n          if Int (New_Val) < Last_Val then\n             Last_Val := Int (New_Val);\n "}, {"sha": "5f03cf3ca1939157610775a6451be0b1e22f3cc1", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3a2b54d1a19f9ca4941645f71dddf675fbd19c/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=ae3a2b54d1a19f9ca4941645f71dddf675fbd19c", "patch": "@@ -130,14 +130,15 @@ package Table is\n       --  First .. Last.\n \n       Locked : Boolean := False;\n-      --  Table expansion is permitted only if this switch is set to False. A\n-      --  client may set Locked to True, in which case any attempt to expand\n-      --  the table will cause an assertion failure. Note that while a table\n-      --  is locked, its address in memory remains fixed and unchanging. This\n-      --  feature is used to control table expansion during Gigi processing.\n-      --  Gigi assumes that tables other than the Uint and Ureal tables do\n-      --  not move during processing, which means that they cannot be expanded.\n-      --  The Locked flag is used to enforce this restriction.\n+      --  Increasing the value of Last is permitted only if this switch is set\n+      --  to False. A client may set Locked to True, in which case any attempt\n+      --  to increase the value of Last (which might expand the table) will\n+      --  cause an assertion failure. Note that while a table is locked, its\n+      --  address in memory remains fixed and unchanging. This feature is used\n+      --  to control table expansion during Gigi processing.  Gigi assumes that\n+      --  tables other than the Uint and Ureal tables do not move during\n+      --  processing, which means that they cannot be expanded.  The Locked\n+      --  flag is used to enforce this restriction.\n \n       procedure Init;\n       --  This procedure allocates a new table of size Initial (freeing any"}]}