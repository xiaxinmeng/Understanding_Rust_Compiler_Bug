{"sha": "04771106cda8dca2c8b975fd4648933679455b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3NzExMDZjZGE4ZGNhMmM4Yjk3NWZkNDY0ODkzMzY3OTQ1NWI4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-03T05:07:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-03T05:54:03Z"}, "message": "c++: NRV in lambda in template [PR91217]\n\ntsubst_lambda_expr was producing a function with two blocks that claimed to\nbe the outermost block in the function body, one from the call to\nstart_lambda_function in tsubst_lambda_expr, and one from tsubsting the\nblock added by start_lambda_function when we first parsed the lambda.  This\nmessed with the named return value optimization, which only works for\nvariables in the outermost block.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/91217\n\t* pt.c (tsubst_lambda_expr): Skip the body block from\n\tDECL_SAVED_TREE.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/91217\n\t* g++.dg/opt/nrv20.C: New test.", "tree": {"sha": "e7f647a1c2791495e4c14eb76e60b1dea5bfdb65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7f647a1c2791495e4c14eb76e60b1dea5bfdb65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04771106cda8dca2c8b975fd4648933679455b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04771106cda8dca2c8b975fd4648933679455b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04771106cda8dca2c8b975fd4648933679455b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04771106cda8dca2c8b975fd4648933679455b8f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c3ba2145ceddb0fd7f85fbf27f8db81896527d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3ba2145ceddb0fd7f85fbf27f8db81896527d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3ba2145ceddb0fd7f85fbf27f8db81896527d1"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "2763aa15f1f85bc56072537e8513f05f90c835d2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04771106cda8dca2c8b975fd4648933679455b8f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04771106cda8dca2c8b975fd4648933679455b8f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=04771106cda8dca2c8b975fd4648933679455b8f", "patch": "@@ -19433,8 +19433,13 @@ tsubst_lambda_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t the purposes of template argument deduction. */\n       complain = tf_warning_or_error;\n \n-      tsubst_expr (DECL_SAVED_TREE (oldfn), args, complain, r,\n-\t\t   /*constexpr*/false);\n+      tree saved = DECL_SAVED_TREE (oldfn);\n+      if (TREE_CODE (saved) == BIND_EXPR && BIND_EXPR_BODY_BLOCK (saved))\n+\t/* We already have a body block from start_lambda_function, we don't\n+\t   need another to confuse NRV (91217).  */\n+\tsaved = BIND_EXPR_BODY (saved);\n+\n+      tsubst_expr (saved, args, complain, r, /*constexpr*/false);\n \n       finish_lambda_function (body);\n "}, {"sha": "ade0c28824a71d0d693b64797370e4f5fe76b4f7", "filename": "gcc/testsuite/g++.dg/opt/nrv20.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04771106cda8dca2c8b975fd4648933679455b8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04771106cda8dca2c8b975fd4648933679455b8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv20.C?ref=04771106cda8dca2c8b975fd4648933679455b8f", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/91217\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options -fdump-tree-gimple }\n+// { dg-final { scan-tree-dump-not \"<retval> = a\" \"gimple\" } }\n+\n+struct A\n+{\n+  int ar[42];\n+};\n+\n+template <class T>\n+A f()\n+{\n+  return [] { A a; return a; }();\n+}\n+\n+int main()\n+{\n+  f<int>();\n+}"}]}