{"sha": "4b7052212dacd2d5da62583549085f5b8b5334d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI3MDUyMjEyZGFjZDJkNWRhNjI1ODM1NDkwODVmNWI4YjUzMzRkNg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2012-08-16T01:01:30Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2012-08-16T01:01:30Z"}, "message": "rs6000.h (RS6000_BTM_ALWAYS): New.\n\n2012-08-15  Segher Boessenkool <segher@kernel.crashing.org>\n\ngcc/\n        * config/rs6000/rs6000.h (RS6000_BTM_ALWAYS): New.\n\nFrom-SVN: r190429", "tree": {"sha": "9a65fe4702b60b3fdaefcf44b5abdcb6107f37b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a65fe4702b60b3fdaefcf44b5abdcb6107f37b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b7052212dacd2d5da62583549085f5b8b5334d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7052212dacd2d5da62583549085f5b8b5334d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7052212dacd2d5da62583549085f5b8b5334d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7052212dacd2d5da62583549085f5b8b5334d6/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "687e9f1f2b232fa96c4aa5fa057cc9b4f080f3f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687e9f1f2b232fa96c4aa5fa057cc9b4f080f3f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687e9f1f2b232fa96c4aa5fa057cc9b4f080f3f7"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "62c0718903260be3b70154c8235ed40be385fc58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7052212dacd2d5da62583549085f5b8b5334d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7052212dacd2d5da62583549085f5b8b5334d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b7052212dacd2d5da62583549085f5b8b5334d6", "patch": "@@ -1,3 +1,7 @@\n+2012-08-15  Segher Boessenkool <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.h (RS6000_BTM_ALWAYS): New.\n+\n 2012-08-15  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/aix52.h (ASM_CPU_SPEC): Fix typo."}, {"sha": "5c53f8577cc8ab27bdefbdf50b0f3bc0b3200765", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7052212dacd2d5da62583549085f5b8b5334d6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7052212dacd2d5da62583549085f5b8b5334d6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=4b7052212dacd2d5da62583549085f5b8b5334d6", "patch": "@@ -2302,6 +2302,7 @@ extern int frame_pointer_needed;\n /* Builtin targets.  For now, we reuse the masks for those options that are in\n    target flags, and pick two random bits for SPE and paired which aren't in\n    target_flags.  */\n+#define RS6000_BTM_ALWAYS\t0\t\t/* Always enabled.  */\n #define RS6000_BTM_ALTIVEC\tMASK_ALTIVEC\t/* VMX/altivec vectors.  */\n #define RS6000_BTM_VSX\t\tMASK_VSX\t/* VSX (vector/scalar).  */\n #define RS6000_BTM_SPE\t\tMASK_STRING\t/* E500 */"}]}