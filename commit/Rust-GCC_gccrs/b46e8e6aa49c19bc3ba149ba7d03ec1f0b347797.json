{"sha": "b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ2ZThlNmFhNDljMTliYzNiYTE0OWJhN2QwM2VjMWYwYjM0Nzc5Nw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-26T10:44:31Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-26T10:44:31Z"}, "message": "add [cd]tors to scc_info\n\ngcc/ChangeLog:\n\n2016-07-26  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree-ssa-structalias.c (struct scc_info): Change types of\n\tmembers to auto_sbitmap and auto_vec.\n\t(scc_info::scc_info): New constructor.\n\t(scc_info::~scc_info): New destructor.\n\t(init_scc_info): Remove.\n\t(free_scc_info): Remove.\n\t(find_indirect_cycles): Adjust.\n\t(perform_var_substitution): Likewise.\n\t(free_var_substitution_info): Likewise.\n\nFrom-SVN: r238751", "tree": {"sha": "eedfe44357a952b1432c15bb7f0ac04c16e4c925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eedfe44357a952b1432c15bb7f0ac04c16e4c925"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797/comments", "author": null, "committer": null, "parents": [{"sha": "61801db927998bb09c0c5c267869d3bf895d551a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61801db927998bb09c0c5c267869d3bf895d551a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61801db927998bb09c0c5c267869d3bf895d551a"}], "stats": {"total": 69, "additions": 34, "deletions": 35}, "files": [{"sha": "beed54d295d405a68e57f45062fad26cfc2347c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "patch": "@@ -1,3 +1,15 @@\n+2016-07-26  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree-ssa-structalias.c (struct scc_info): Change types of\n+\tmembers to auto_sbitmap and auto_vec.\n+\t(scc_info::scc_info): New constructor.\n+\t(scc_info::~scc_info): New destructor.\n+\t(init_scc_info): Remove.\n+\t(free_scc_info): Remove.\n+\t(find_indirect_cycles): Adjust.\n+\t(perform_var_substitution): Likewise.\n+\t(free_var_substitution_info): Likewise.\n+\n 2016-07-26  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* tree-outof-ssa.c (struct elim_graph): Change type of members"}, {"sha": "fd96c3ab7971d00f38de95f9be75ee36324392eb", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 22, "deletions": 35, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=b46e8e6aa49c19bc3ba149ba7d03ec1f0b347797", "patch": "@@ -1379,12 +1379,15 @@ static bitmap changed;\n \n struct scc_info\n {\n-  sbitmap visited;\n-  sbitmap deleted;\n+  scc_info (size_t size);\n+  ~scc_info ();\n+\n+  auto_sbitmap visited;\n+  auto_sbitmap deleted;\n   unsigned int *dfs;\n   unsigned int *node_mapping;\n   int current_index;\n-  vec<unsigned> scc_stack;\n+  auto_vec<unsigned> scc_stack;\n };\n \n \n@@ -1824,38 +1827,24 @@ do_complex_constraint (constraint_graph_t graph, constraint_t c, bitmap delta,\n \n /* Initialize and return a new SCC info structure.  */\n \n-static struct scc_info *\n-init_scc_info (size_t size)\n+scc_info::scc_info (size_t size) :\n+  visited (size), deleted (size), current_index (0), scc_stack (1)\n {\n-  struct scc_info *si = XNEW (struct scc_info);\n-  size_t i;\n-\n-  si->current_index = 0;\n-  si->visited = sbitmap_alloc (size);\n-  bitmap_clear (si->visited);\n-  si->deleted = sbitmap_alloc (size);\n-  bitmap_clear (si->deleted);\n-  si->node_mapping = XNEWVEC (unsigned int, size);\n-  si->dfs = XCNEWVEC (unsigned int, size);\n+  bitmap_clear (visited);\n+  bitmap_clear (deleted);\n+  node_mapping = XNEWVEC (unsigned int, size);\n+  dfs = XCNEWVEC (unsigned int, size);\n \n-  for (i = 0; i < size; i++)\n-    si->node_mapping[i] = i;\n-\n-  si->scc_stack.create (1);\n-  return si;\n+  for (size_t i = 0; i < size; i++)\n+    node_mapping[i] = i;\n }\n \n /* Free an SCC info structure pointed to by SI */\n \n-static void\n-free_scc_info (struct scc_info *si)\n+scc_info::~scc_info ()\n {\n-  sbitmap_free (si->visited);\n-  sbitmap_free (si->deleted);\n-  free (si->node_mapping);\n-  free (si->dfs);\n-  si->scc_stack.release ();\n-  free (si);\n+  free (node_mapping);\n+  free (dfs);\n }\n \n \n@@ -1871,13 +1860,11 @@ find_indirect_cycles (constraint_graph_t graph)\n {\n   unsigned int i;\n   unsigned int size = graph->size;\n-  struct scc_info *si = init_scc_info (size);\n+  scc_info si (size);\n \n   for (i = 0; i < MIN (LAST_REF_NODE, size); i ++ )\n-    if (!bitmap_bit_p (si->visited, i) && find (i) == i)\n-      scc_visit (graph, si, i);\n-\n-  free_scc_info (si);\n+    if (!bitmap_bit_p (si.visited, i) && find (i) == i)\n+      scc_visit (graph, &si, i);\n }\n \n /* Compute a topological ordering for GRAPH, and store the result in the\n@@ -2291,7 +2278,7 @@ perform_var_substitution (constraint_graph_t graph)\n {\n   unsigned int i;\n   unsigned int size = graph->size;\n-  struct scc_info *si = init_scc_info (size);\n+  scc_info *si = new scc_info (size);\n \n   bitmap_obstack_initialize (&iteration_obstack);\n   pointer_equiv_class_table = new hash_table<equiv_class_hasher> (511);\n@@ -2422,7 +2409,7 @@ perform_var_substitution (constraint_graph_t graph)\n static void\n free_var_substitution_info (struct scc_info *si)\n {\n-  free_scc_info (si);\n+  delete si;\n   free (graph->pointer_label);\n   free (graph->loc_label);\n   free (graph->pointed_by);"}]}