{"sha": "48d534390f43b216715d3d1b4c39c998b1d0bced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkNTM0MzkwZjQzYjIxNjcxNWQzZDFiNGMzOWM5OThiMWQwYmNlZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-07T15:26:41Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-07T15:26:41Z"}, "message": "re PR target/58115 (testcase gcc.target/i386/intrinsics_4.c failure)\n\ngcc/\n\tPR target/58115\n\t* target-globals.c (save_target_globals): Remove this_fn_optab\n\thandling.\n\t* toplev.c: Include optabs.h.\n\t(target_reinit): Temporarily restore the global options if another\n\tset of options are in force.\n\ngcc/testsuite/\n\t* gcc.target/i386/intrinsics_4.c (bar): New function.\n\nFrom-SVN: r206394", "tree": {"sha": "ae0eeb8d5f106c50db965c409b749196672c49cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0eeb8d5f106c50db965c409b749196672c49cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48d534390f43b216715d3d1b4c39c998b1d0bced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d534390f43b216715d3d1b4c39c998b1d0bced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d534390f43b216715d3d1b4c39c998b1d0bced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d534390f43b216715d3d1b4c39c998b1d0bced/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14c12d0de08c37cd2a5c89d6f8904da5515bb434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c12d0de08c37cd2a5c89d6f8904da5515bb434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c12d0de08c37cd2a5c89d6f8904da5515bb434"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "ba166cc31ce59750e97ea5dcb6f72aa740073817", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48d534390f43b216715d3d1b4c39c998b1d0bced", "patch": "@@ -1,3 +1,12 @@\n+2014-01-07  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR target/58115\n+\t* target-globals.c (save_target_globals): Remove this_fn_optab\n+\thandling.\n+\t* toplev.c: Include optabs.h.\n+\t(target_reinit): Temporarily restore the global options if another\n+\tset of options are in force.\n+\n 2014-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/58668"}, {"sha": "f2281ddba04a73e09de801f40e518c28b6c53e53", "filename": "gcc/target-globals.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftarget-globals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftarget-globals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.c?ref=48d534390f43b216715d3d1b4c39c998b1d0bced", "patch": "@@ -68,7 +68,6 @@ struct target_globals *\n save_target_globals (void)\n {\n   struct target_globals *g;\n-  struct target_optabs *saved_this_fn_optabs = this_fn_optabs;\n \n   g = ggc_alloc_target_globals ();\n   g->flag_state = XCNEW (struct target_flag_state);\n@@ -88,10 +87,8 @@ save_target_globals (void)\n   g->bb_reorder = XCNEW (struct target_bb_reorder);\n   g->lower_subreg = XCNEW (struct target_lower_subreg);\n   restore_target_globals (g);\n-  this_fn_optabs = this_target_optabs;\n   init_reg_sets ();\n   target_reinit ();\n-  this_fn_optabs = saved_this_fn_optabs;\n   return g;\n }\n "}, {"sha": "1e30242aed62eda38e7ea070d694835b16b910dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48d534390f43b216715d3d1b4c39c998b1d0bced", "patch": "@@ -1,3 +1,7 @@\n+2014-01-07  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.target/i386/intrinsics_4.c (bar): New function.\n+\n 2014-01-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/ext/is_base_of_incomplete-2.C: New."}, {"sha": "e7c074b31cb3076bc21fbd97b333d0a97c0f0074", "filename": "gcc/testsuite/gcc.target/i386/intrinsics_4.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_4.c?ref=48d534390f43b216715d3d1b4c39c998b1d0bced", "patch": "@@ -12,3 +12,10 @@ foo (void)\n {\n   a[0] = _mm256_and_ps (b[0], c[0]);\n }\n+\n+/* Try again with a combination of target and optimization attributes.  */\n+void __attribute__((target (\"avx\"), optimize(3)))\n+bar (void)\n+{\n+  a[0] = _mm256_and_ps (b[0], c[0]);\n+}"}, {"sha": "c652522a3613a635b0492fb84b94543a0bbaf6fc", "filename": "gcc/toplev.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d534390f43b216715d3d1b4c39c998b1d0bced/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=48d534390f43b216715d3d1b4c39c998b1d0bced", "patch": "@@ -78,6 +78,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-color.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n+#include \"optabs.h\"\n \n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n@@ -1752,6 +1753,23 @@ target_reinit (void)\n {\n   struct rtl_data saved_x_rtl;\n   rtx *saved_regno_reg_rtx;\n+  tree saved_optimization_current_node;\n+  struct target_optabs *saved_this_fn_optabs;\n+\n+  /* Temporarily switch to the default optimization node, so that\n+     *this_target_optabs is set to the default, not reflecting\n+     whatever a previous function used for the optimize\n+     attribute.  */\n+  saved_optimization_current_node = optimization_current_node;\n+  saved_this_fn_optabs = this_fn_optabs;\n+  if (saved_optimization_current_node != optimization_default_node)\n+    {\n+      optimization_current_node = optimization_default_node;\n+      cl_optimization_restore\n+\t(&global_options,\n+\t TREE_OPTIMIZATION (optimization_default_node));\n+    }\n+  this_fn_optabs = this_target_optabs;\n \n   /* Save *crtl and regno_reg_rtx around the reinitialization\n      to allow target_reinit being called even after prepare_function_start.  */\n@@ -1769,7 +1787,16 @@ target_reinit (void)\n   /* Reinitialize lang-dependent parts.  */\n   lang_dependent_init_target ();\n \n-  /* And restore it at the end, as free_after_compilation from\n+  /* Restore the original optimization node.  */\n+  if (saved_optimization_current_node != optimization_default_node)\n+    {\n+      optimization_current_node = saved_optimization_current_node;\n+      cl_optimization_restore (&global_options,\n+\t\t\t       TREE_OPTIMIZATION (optimization_current_node));\n+    }\n+  this_fn_optabs = saved_this_fn_optabs;\n+\n+  /* Restore regno_reg_rtx at the end, as free_after_compilation from\n      expand_dummy_function_end clears it.  */\n   if (saved_regno_reg_rtx)\n     {"}]}