{"sha": "d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "node_id": "C_kwDOANBUbNoAKGQzZjUwZjc1YWEzZTUwNTRiMjgwNzRjMDI5ZDM2YzFjYmNlMmQwY2I", "commit": {"author": {"name": "Ronan Desplanques", "email": "desplanques@adacore.com", "date": "2022-12-07T16:37:21Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-03T09:29:53Z"}, "message": "ada: Fix format string parsing in GNAT.Formatted_String\n\nBefore this patch, format strings ending with \"%%\" (two consecutive\npercent signs) caused GNAT.Formatted_String.\"-\" to give the wrong\noutput, and cause the various GNAT.Formatted_String.\"&\" to raise\nexceptions with misleading error messages.\n\nAlso before this patch, a bug in GNAT.Formatted_String.\"-\" caused\ncharacters from the format string to be dropped. Calling\nGNAT.Formatted_String.\"-\" on an instance of\nGNAT.Formatted_String.Formatted_String caused subsequent uses of\nthat instance to return wrong results.\n\nIn addition to fixing the parsing of format strings, this patch\ncentralizes the detection of format specifiers in a unique\nprocedure.\n\ngcc/ada/\n\n\t* libgnat/g-forstr.adb\n\t(Advance_And_Accumulate_Until_Next_Specifier): New procedure.\n\t(\"-\"): Replace inline code with call to\n\tAdvance_And_Accumulate_Until_Next_Specifier.\n\t(Next_Format): likewise.", "tree": {"sha": "b6e65bbf1239805f5f77bb9b8a5393423ef2ecee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6e65bbf1239805f5f77bb9b8a5393423ef2ecee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb/comments", "author": {"login": "ronan-d", "id": 14870758, "node_id": "MDQ6VXNlcjE0ODcwNzU4", "avatar_url": "https://avatars.githubusercontent.com/u/14870758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronan-d", "html_url": "https://github.com/ronan-d", "followers_url": "https://api.github.com/users/ronan-d/followers", "following_url": "https://api.github.com/users/ronan-d/following{/other_user}", "gists_url": "https://api.github.com/users/ronan-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronan-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronan-d/subscriptions", "organizations_url": "https://api.github.com/users/ronan-d/orgs", "repos_url": "https://api.github.com/users/ronan-d/repos", "events_url": "https://api.github.com/users/ronan-d/events{/privacy}", "received_events_url": "https://api.github.com/users/ronan-d/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32841e7e8480cb16d34f60feda226e4f582c3186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32841e7e8480cb16d34f60feda226e4f582c3186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32841e7e8480cb16d34f60feda226e4f582c3186"}], "stats": {"total": 67, "additions": 36, "deletions": 31}, "files": [{"sha": "8353e2c4ad864773cc52ccaf95324654a4b1f3bd", "filename": "gcc/ada/libgnat/g-forstr.adb", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f50f75aa3e5054b28074c029d36c1cbce2d0cb/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-forstr.adb?ref=d3f50f75aa3e5054b28074c029d36c1cbce2d0cb", "patch": "@@ -77,6 +77,12 @@ package body GNAT.Formatted_String is\n       Value_Needed : Natural range 0 .. 2 := 0;\n    end record;\n \n+   procedure Advance_And_Accumulate_Until_Next_Specifier\n+     (Format : Formatted_String);\n+   --  Advance Format.D.Index until either the next format specifier is\n+   --  encountered, or the end of Format.D.Format is reached. The characters\n+   --  advanced over are appended to Format.D.Result.\n+\n    procedure Next_Format\n      (Format : Formatted_String;\n       F_Spec : out F_Data;\n@@ -139,29 +145,13 @@ package body GNAT.Formatted_String is\n    ---------\n \n    function \"-\" (Format : Formatted_String) return String is\n-      F : String renames Format.D.Format;\n-      J : Natural renames Format.D.Index;\n-      R : Unbounded_String := Format.D.Result;\n-\n    begin\n       --  Make sure we get the remaining character up to the next unhandled\n       --  format specifier.\n \n-      while (J <= F'Length and then F (J) /= '%')\n-        or else (J < F'Length - 1 and then F (J + 1) = '%')\n-      loop\n-         Append (R, F (J));\n-\n-         --  If we have two consecutive %, skip the second one\n-\n-         if F (J) = '%' and then J < F'Length - 1 and then F (J + 1) = '%' then\n-            J := J + 1;\n-         end if;\n-\n-         J := J + 1;\n-      end loop;\n+      Advance_And_Accumulate_Until_Next_Specifier (Format);\n \n-      return To_String (R);\n+      return To_String (Format.D.Result);\n    end \"-\";\n \n    ---------\n@@ -318,6 +308,33 @@ package body GNAT.Formatted_String is\n       F.D.Ref_Count := F.D.Ref_Count + 1;\n    end Adjust;\n \n+   -------------------------------------------------\n+   -- Advance_And_Accumulate_Until_Next_Specifier --\n+   -------------------------------------------------\n+\n+   procedure Advance_And_Accumulate_Until_Next_Specifier\n+     (Format : Formatted_String)\n+   is\n+   begin\n+      loop\n+         if Format.D.Index > Format.D.Format'Last then\n+            exit;\n+         end if;\n+\n+         if Format.D.Format (Format.D.Index) /= '%' then\n+            Append (Format.D.Result, Format.D.Format (Format.D.Index));\n+            Format.D.Index := Format.D.Index + 1;\n+         elsif Format.D.Index + 1 <= Format.D.Format'Last\n+           and then Format.D.Format (Format.D.Index + 1) = '%'\n+         then\n+            Append (Format.D.Result, '%');\n+            Format.D.Index := Format.D.Index + 2;\n+         else\n+            exit;\n+         end if;\n+      end loop;\n+   end Advance_And_Accumulate_Until_Next_Specifier;\n+\n    --------------------\n    -- Decimal_Format --\n    --------------------\n@@ -505,19 +522,7 @@ package body GNAT.Formatted_String is\n \n       --  Got to next %\n \n-      while (J <= F'Last and then F (J) /= '%')\n-        or else (J < F'Last - 1 and then F (J + 1) = '%')\n-      loop\n-         Append (Format.D.Result, F (J));\n-\n-         --  If we have two consecutive %, skip the second one\n-\n-         if F (J) = '%' and then J < F'Last - 1 and then F (J + 1) = '%' then\n-            J := J + 1;\n-         end if;\n-\n-         J := J + 1;\n-      end loop;\n+      Advance_And_Accumulate_Until_Next_Specifier (Format);\n \n       if J >= F'Last or else F (J) /= '%'  then\n          raise Format_Error with \"no format specifier found for parameter\""}]}