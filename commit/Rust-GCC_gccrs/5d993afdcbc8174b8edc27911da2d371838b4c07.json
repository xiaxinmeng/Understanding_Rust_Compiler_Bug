{"sha": "5d993afdcbc8174b8edc27911da2d371838b4c07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5OTNhZmRjYmM4MTc0YjhlZGMyNzkxMWRhMmQzNzE4MzhiNGMwNw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2010-06-14T09:22:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T09:22:35Z"}, "message": "gnatbind.adb: Call Scan_ALI with Directly_Scanned set to True for all the ALI files on the...\n\n2010-06-14  Vincent Celier  <celier@adacore.com>\n\n\t* gnatbind.adb: Call Scan_ALI with Directly_Scanned set to True for all\n\tthe ALI files on the command line.\n\n\t* ali.adb (Scan_ALI): Set component Directly_Scanned of the unit(s) to\n\tthe same value as the parameter of the same name.\n\t* ali.ads (Scan_ALI): New Boolean parameter Directly_Scanned, defaulted\n\tto False.\n\t* bindgen.adb (Gen_Versions_Ada): Never emit version symbols for\n\tStand-Alone Library interfaces. When binding Stand-Alone Libraries,\n\temit version symbols only for the units of the library.\n\t(Gen_Versions_C): Ditto.\n\nFrom-SVN: r160715", "tree": {"sha": "67bd26981d944dcf47ffdd97d64395c9921ade20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67bd26981d944dcf47ffdd97d64395c9921ade20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d993afdcbc8174b8edc27911da2d371838b4c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d993afdcbc8174b8edc27911da2d371838b4c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d993afdcbc8174b8edc27911da2d371838b4c07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d993afdcbc8174b8edc27911da2d371838b4c07/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49d140bba45474cb8153c4fdc56db0387261d3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d140bba45474cb8153c4fdc56db0387261d3b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d140bba45474cb8153c4fdc56db0387261d3b1"}], "stats": {"total": 187, "additions": 96, "deletions": 91}, "files": [{"sha": "5971f4f21a2f2c79a264a13fb484e4923bfce748", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5d993afdcbc8174b8edc27911da2d371838b4c07", "patch": "@@ -1,3 +1,17 @@\n+2010-06-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatbind.adb: Call Scan_ALI with Directly_Scanned set to True for all\n+\tthe ALI files on the command line.\n+\n+\t* ali.adb (Scan_ALI): Set component Directly_Scanned of the unit(s) to\n+\tthe same value as the parameter of the same name.\n+\t* ali.ads (Scan_ALI): New Boolean parameter Directly_Scanned, defaulted\n+\tto False.\n+\t* bindgen.adb (Gen_Versions_Ada): Never emit version symbols for\n+\tStand-Alone Library interfaces. When binding Stand-Alone Libraries,\n+\temit version symbols only for the units of the library.\n+\t(Gen_Versions_C): Ditto.\n+\n 2010-06-14  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch4.adb: Fix typo."}, {"sha": "7655dcce05349d6ac77a8f27a2ac0c916764f03e", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=5d993afdcbc8174b8edc27911da2d371838b4c07", "patch": "@@ -119,14 +119,15 @@ package body ALI is\n    --------------\n \n    function Scan_ALI\n-     (F             : File_Name_Type;\n-      T             : Text_Buffer_Ptr;\n-      Ignore_ED     : Boolean;\n-      Err           : Boolean;\n-      Read_Xref     : Boolean := False;\n-      Read_Lines    : String  := \"\";\n-      Ignore_Lines  : String  := \"X\";\n-      Ignore_Errors : Boolean := False) return ALI_Id\n+     (F                : File_Name_Type;\n+      T                : Text_Buffer_Ptr;\n+      Ignore_ED        : Boolean;\n+      Err              : Boolean;\n+      Read_Xref        : Boolean := False;\n+      Read_Lines       : String  := \"\";\n+      Ignore_Lines     : String  := \"X\";\n+      Ignore_Errors    : Boolean := False;\n+      Directly_Scanned : Boolean := False) return ALI_Id\n    is\n       P         : Text_Ptr := T'First;\n       Line      : Logical_Line_Number := 1;\n@@ -1415,6 +1416,7 @@ package body ALI is\n             UL.First_Arg                := First_Arg;\n             UL.Elab_Position            := 0;\n             UL.SAL_Interface            := ALIs.Table (Id).SAL_Interface;\n+            UL.Directly_Scanned         := Directly_Scanned;\n             UL.Body_Needed_For_SAL      := False;\n             UL.Elaborate_Body_Desirable := False;\n             UL.Optimize_Alignment       := 'O';"}, {"sha": "94f76471429ac0d139561bca9b711d24a280a14e", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=5d993afdcbc8174b8edc27911da2d371838b4c07", "patch": "@@ -342,6 +342,9 @@ package ALI is\n       SAL_Interface : Boolean;\n       --  Set True when this is an interface to a standalone library\n \n+      Directly_Scanned : Boolean;\n+      --  True iff it is a unit from an ALI file specified to gnatbind\n+\n       Body_Needed_For_SAL : Boolean;\n       --  Indicates that the source for the body of the unit (subprogram,\n       --  package, or generic unit) must be included in a standalone library.\n@@ -933,14 +936,15 @@ package ALI is\n    --  Initialize the ALI tables. Also resets all switch values to defaults\n \n    function Scan_ALI\n-     (F             : File_Name_Type;\n-      T             : Text_Buffer_Ptr;\n-      Ignore_ED     : Boolean;\n-      Err           : Boolean;\n-      Read_Xref     : Boolean := False;\n-      Read_Lines    : String  := \"\";\n-      Ignore_Lines  : String  := \"X\";\n-      Ignore_Errors : Boolean := False) return ALI_Id;\n+     (F                : File_Name_Type;\n+      T                : Text_Buffer_Ptr;\n+      Ignore_ED        : Boolean;\n+      Err              : Boolean;\n+      Read_Xref        : Boolean := False;\n+      Read_Lines       : String  := \"\";\n+      Ignore_Lines     : String  := \"X\";\n+      Ignore_Errors    : Boolean := False;\n+      Directly_Scanned : Boolean := False) return ALI_Id;\n    --  Given the text, T, of an ALI file, F, scan and store the information\n    --  from the file, and return the Id of the resulting entry in the ALI\n    --  table. Switch settings may be modified as described above in the\n@@ -986,5 +990,11 @@ package ALI is\n    --    Scan_ALI was completely unable to process the file (e.g. it did not\n    --    look like an ALI file at all). Ignore_Errors is intended to improve\n    --    the downward compatibility of new compilers with old tools.\n+   --\n+   --    Directly_Scanned is normally False. If it is set to True, then the\n+   --    units (spec and/or body) corresponding to the ALI file are marked as\n+   --    such. It is used to decide for what units gnatbind should generate\n+   --    the symbols corresponding to 'Version or 'Body_Version in\n+   --    Stand-Alone Libraries.\n \n end ALI;"}, {"sha": "49179f19fff7b1604d29b674aead9c2d165df67b", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 48, "deletions": 70, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=5d993afdcbc8174b8edc27911da2d371838b4c07", "patch": "@@ -2969,12 +2969,9 @@ package body Bindgen is\n    -- Gen_Versions_Ada --\n    ----------------------\n \n-   --  This routine generates two sets of lines. The first set has the form:\n+   --  This routine generates lines such as:\n \n    --    unnnnn : constant Integer := 16#hhhhhhhh#;\n-\n-   --  The second set has the form\n-\n    --    pragma Export (C, unnnnn, unam);\n \n    --  for each unit, where unam is the unit name suffixed by either B or\n@@ -2999,57 +2996,44 @@ package body Bindgen is\n    --  Start of processing for Gen_Versions_Ada\n \n    begin\n-      if Bind_For_Library then\n-\n-         --  When building libraries, the version number of each unit can\n-         --  not be computed, since the binder does not know the full list\n-         --  of units. Therefore, the 'Version and 'Body_Version\n-         --  attributes cannot supported in this case.\n-\n-         return;\n-      end if;\n-\n       WBI (\"\");\n \n       WBI (\"   type Version_32 is mod 2 ** 32;\");\n       for U in Units.First .. Units.Last loop\n-         Increment_Ubuf;\n-         WBI (\"   \" & Ubuf & \" : constant Version_32 := 16#\" &\n-              Units.Table (U).Version & \"#;\");\n-      end loop;\n-\n-      WBI (\"\");\n-      Ubuf := \"u00000\";\n+         if not Units.Table (U).SAL_Interface and then\n+           ((not Bind_For_Library) or else Units.Table (U).Directly_Scanned)\n+         then\n+            Increment_Ubuf;\n+            WBI (\"   \" & Ubuf & \" : constant Version_32 := 16#\" &\n+                 Units.Table (U).Version & \"#;\");\n+            Set_String (\"   pragma Export (C, \");\n+            Set_String (Ubuf);\n+            Set_String (\", \"\"\");\n \n-      for U in Units.First .. Units.Last loop\n-         Increment_Ubuf;\n-         Set_String (\"   pragma Export (C, \");\n-         Set_String (Ubuf);\n-         Set_String (\", \"\"\");\n+            Get_Name_String (Units.Table (U).Uname);\n \n-         Get_Name_String (Units.Table (U).Uname);\n+            for K in 1 .. Name_Len loop\n+               if Name_Buffer (K) = '.' then\n+                  Set_Char ('_');\n+                  Set_Char ('_');\n \n-         for K in 1 .. Name_Len loop\n-            if Name_Buffer (K) = '.' then\n-               Set_Char ('_');\n-               Set_Char ('_');\n+               elsif Name_Buffer (K) = '%' then\n+                  exit;\n \n-            elsif Name_Buffer (K) = '%' then\n-               exit;\n+               else\n+                  Set_Char (Name_Buffer (K));\n+               end if;\n+            end loop;\n \n+            if Name_Buffer (Name_Len) = 's' then\n+               Set_Char ('S');\n             else\n-               Set_Char (Name_Buffer (K));\n+               Set_Char ('B');\n             end if;\n-         end loop;\n \n-         if Name_Buffer (Name_Len) = 's' then\n-            Set_Char ('S');\n-         else\n-            Set_Char ('B');\n+            Set_String (\"\"\");\");\n+            Write_Statement_Buffer;\n          end if;\n-\n-         Set_String (\"\"\");\");\n-         Write_Statement_Buffer;\n       end loop;\n \n    end Gen_Versions_Ada;\n@@ -3067,43 +3051,37 @@ package body Bindgen is\n \n    procedure Gen_Versions_C is\n    begin\n-      if Bind_For_Library then\n-\n-         --  When building libraries, the version number of each unit can\n-         --  not be computed, since the binder does not know the full list\n-         --  of units. Therefore, the 'Version and 'Body_Version\n-         --  attributes cannot supported.\n-\n-         return;\n-      end if;\n-\n       for U in Units.First .. Units.Last loop\n-         Set_String (\"unsigned \");\n+         if not Units.Table (U).SAL_Interface and then\n+           ((not Bind_For_Library) or else Units.Table (U).Directly_Scanned)\n+         then\n+            Set_String (\"unsigned \");\n \n-         Get_Name_String (Units.Table (U).Uname);\n+            Get_Name_String (Units.Table (U).Uname);\n \n-         for K in 1 .. Name_Len loop\n-            if Name_Buffer (K) = '.' then\n-               Set_String (\"__\");\n+            for K in 1 .. Name_Len loop\n+               if Name_Buffer (K) = '.' then\n+                  Set_String (\"__\");\n \n-            elsif Name_Buffer (K) = '%' then\n-               exit;\n+               elsif Name_Buffer (K) = '%' then\n+                  exit;\n \n+               else\n+                  Set_Char (Name_Buffer (K));\n+               end if;\n+            end loop;\n+\n+            if Name_Buffer (Name_Len) = 's' then\n+               Set_Char ('S');\n             else\n-               Set_Char (Name_Buffer (K));\n+               Set_Char ('B');\n             end if;\n-         end loop;\n \n-         if Name_Buffer (Name_Len) = 's' then\n-            Set_Char ('S');\n-         else\n-            Set_Char ('B');\n+            Set_String (\" = 0x\");\n+            Set_String (Units.Table (U).Version);\n+            Set_Char   (';');\n+            Write_Statement_Buffer;\n          end if;\n-\n-         Set_String (\" = 0x\");\n-         Set_String (Units.Table (U).Version);\n-         Set_Char   (';');\n-         Write_Statement_Buffer;\n       end loop;\n \n    end Gen_Versions_C;"}, {"sha": "11dd9a8b62c56a4ab5d2c21ebe5d655e517753f3", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d993afdcbc8174b8edc27911da2d371838b4c07/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=5d993afdcbc8174b8edc27911da2d371838b4c07", "patch": "@@ -671,11 +671,12 @@ begin\n \n          begin\n             Id := Scan_ALI\n-                    (F             => Main_Lib_File,\n-                     T             => Text,\n-                     Ignore_ED     => False,\n-                     Err           => False,\n-                     Ignore_Errors => Debug_Flag_I);\n+                    (F                => Main_Lib_File,\n+                     T                => Text,\n+                     Ignore_ED        => False,\n+                     Err              => False,\n+                     Ignore_Errors    => Debug_Flag_I,\n+                     Directly_Scanned => True);\n          end;\n \n          Free (Text);"}]}