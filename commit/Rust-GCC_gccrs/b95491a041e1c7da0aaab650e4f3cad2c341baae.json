{"sha": "b95491a041e1c7da0aaab650e4f3cad2c341baae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk1NDkxYTA0MWUxYzdkYTBhYWFiNjUwZTRmM2NhZDJjMzQxYmFhZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-09-30T20:54:27Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-09-30T20:54:27Z"}, "message": "m32c.c (cris_memory_move_cost): New.\n\n\t* config/cris/m32c.c (cris_memory_move_cost): New.\n\t(cris_register_move_cost): Make static. Change arguments type from\n\tenum reg_class to reg_class_t.\n\t(TARGET_REGISTER_MOVE_COST, TARGET_MEMORY_MOVE_COST): Define.\n\t* config/cris/cris.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n\t* config/cris/cris-protos.h (cris_register_move_cost): Remove.\n\nFrom-SVN: r164768", "tree": {"sha": "8f837f5547c3d25944e6a589f132018d2a45b0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f837f5547c3d25944e6a589f132018d2a45b0df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b95491a041e1c7da0aaab650e4f3cad2c341baae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b95491a041e1c7da0aaab650e4f3cad2c341baae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b95491a041e1c7da0aaab650e4f3cad2c341baae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b95491a041e1c7da0aaab650e4f3cad2c341baae/comments", "author": null, "committer": null, "parents": [{"sha": "45c13d4cec5c33c3971a42d673503e93c2fbb424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c13d4cec5c33c3971a42d673503e93c2fbb424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c13d4cec5c33c3971a42d673503e93c2fbb424"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "0409d96d21d6a467c6f1bd60795860d9abbc1672", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b95491a041e1c7da0aaab650e4f3cad2c341baae", "patch": "@@ -1,3 +1,12 @@\n+2010-09-30  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/cris/m32c.c (cris_memory_move_cost): New.\n+\t(cris_register_move_cost): Make static. Change arguments type from\n+\tenum reg_class to reg_class_t.\n+\t(TARGET_REGISTER_MOVE_COST, TARGET_MEMORY_MOVE_COST): Define.\n+\t* config/cris/cris.h (REGISTER_MOVE_COST, MEMORY_MOVE_COST): Remove.\n+\t* config/cris/cris-protos.h (cris_register_move_cost): Remove.\n+\n 2010-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/45843"}, {"sha": "16acb52c4edc42dad08b889b609bd3e655715903", "filename": "gcc/config/cris/cris-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris-protos.h?ref=b95491a041e1c7da0aaab650e4f3cad2c341baae", "patch": "@@ -31,8 +31,6 @@ extern bool cris_simple_epilogue (void);\n extern const char *cris_op_str (rtx);\n extern void cris_notice_update_cc (rtx, rtx);\n extern bool cris_reload_address_legitimized (rtx, enum machine_mode, int, int, int);\n-extern int cris_register_move_cost (enum machine_mode, enum reg_class,\n-\t\t\t\t    enum reg_class);\n extern int cris_side_effect_mode_ok (enum rtx_code, rtx *, int, int,\n                                      int, int, int);\n extern bool cris_cc0_user_requires_cmp (rtx);"}, {"sha": "3163022b661225cbb87f65df6d11e705b8ec7b23", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=b95491a041e1c7da0aaab650e4f3cad2c341baae", "patch": "@@ -121,6 +121,8 @@ static void cris_asm_output_mi_thunk\n static void cris_file_start (void);\n static void cris_init_libfuncs (void);\n \n+static int cris_register_move_cost (enum machine_mode, reg_class_t, reg_class_t);\n+static int cris_memory_move_cost (enum machine_mode, reg_class_t, bool);\n static bool cris_rtx_costs (rtx, int, int, int *, bool);\n static int cris_address_cost (rtx, bool);\n static bool cris_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -185,6 +187,10 @@ int cris_cpu_version = CRIS_DEFAULT_CPU_VERSION;\n #undef TARGET_INIT_LIBFUNCS\n #define TARGET_INIT_LIBFUNCS cris_init_libfuncs\n \n+#undef TARGET_REGISTER_MOVE_COST\n+#define TARGET_REGISTER_MOVE_COST cris_register_move_cost\n+#undef TARGET_MEMORY_MOVE_COST\n+#define TARGET_MEMORY_MOVE_COST cris_memory_move_cost\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS cris_rtx_costs\n #undef TARGET_ADDRESS_COST\n@@ -1378,11 +1384,11 @@ cris_reload_address_legitimized (rtx x,\n   return false;\n }\n \n-/* Worker function for REGISTER_MOVE_COST.  */\n+/* Worker function for TARGET_REGISTER_MOVE_COST.  */\n \n-int\n+static int\n cris_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t enum reg_class from, enum reg_class to) \n+\t\t\t reg_class_t from, reg_class_t to)\n {\n   if (!TARGET_V32)\n     {\n@@ -1424,6 +1430,23 @@ cris_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n   return 2;\n }\n \n+/* Worker function for TARGET_MEMORY_MOVE_COST.\n+\n+   This isn't strictly correct for v0..3 in buswidth-8bit mode, but should\n+   suffice.  */\n+\n+static int\n+cris_memory_move_cost (enum machine_mode mode,\n+                       reg_class_t rclass ATTRIBUTE_UNUSED,\n+                       bool in ATTRIBUTE_UNUSED)\n+{\n+  if (mode == QImode\n+      || mode == HImode)\n+    return 4;\n+  else\n+    return 6;\n+}\n+\n /* Worker for cris_notice_update_cc; handles the \"normal\" cases.\n    FIXME: this code is historical; its functionality should be\n    refactored to look at insn attributes and moved to"}, {"sha": "090bcd120848d57fb78f8b06057c56d00e85c48b", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b95491a041e1c7da0aaab650e4f3cad2c341baae/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=b95491a041e1c7da0aaab650e4f3cad2c341baae", "patch": "@@ -1073,14 +1073,6 @@ struct cum_args {int regs;};\n \n /* Node: Costs */\n \n-#define REGISTER_MOVE_COST(MODE, FROM, TO)\t\\\n-  cris_register_move_cost (MODE, FROM, TO)\n-\n-/* This isn't strictly correct for v0..3 in buswidth-8bit mode, but\n-   should suffice.  */\n-#define MEMORY_MOVE_COST(M, CLASS, IN) \\\n- (((M) == QImode) ? 4 : ((M) == HImode) ? 4 : 6)\n-\n /* Regardless of the presence of delay slots, the default value of 1 for\n    BRANCH_COST is the best in the range (1, 2, 3), tested with gcc-2.7.2\n    with testcases ipps and gcc, giving smallest and fastest code.  */"}]}