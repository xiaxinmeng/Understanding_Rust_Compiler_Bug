{"sha": "bb753cad995b2a0f98a566cc710feef45e1b46b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI3NTNjYWQ5OTViMmEwZjk4YTU2NmNjNzEwZmVlZjQ1ZTFiNDZiMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-09-12T06:50:34Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-09-12T06:50:34Z"}, "message": "* gimple-ssa-warn-alloca.c\n\t(alloca_type_and_limit::alloca_type_and_limit): Initialize limit\n\tfield for ALLOCA_BOUND_*_LARGE.\n\nFrom-SVN: r264227", "tree": {"sha": "6fafa45e2ef5412aecfdf9961573a47a5a8a28fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fafa45e2ef5412aecfdf9961573a47a5a8a28fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb753cad995b2a0f98a566cc710feef45e1b46b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb753cad995b2a0f98a566cc710feef45e1b46b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb753cad995b2a0f98a566cc710feef45e1b46b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb753cad995b2a0f98a566cc710feef45e1b46b3/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be673084415f916ef541b89d4d7c10c66879ae29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be673084415f916ef541b89d4d7c10c66879ae29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be673084415f916ef541b89d4d7c10c66879ae29"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "f5468ca65c1a816ba8ec95e68ce21c727db7c66e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb753cad995b2a0f98a566cc710feef45e1b46b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb753cad995b2a0f98a566cc710feef45e1b46b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb753cad995b2a0f98a566cc710feef45e1b46b3", "patch": "@@ -1,3 +1,9 @@\n+2018-09-12  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-ssa-warn-alloca.c\n+\t(alloca_type_and_limit::alloca_type_and_limit): Initialize limit\n+\tfield for ALLOCA_BOUND_*_LARGE.\n+\n 2018-09-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.c (load_specs, execute, run_attempt): Use %qs not '%s'."}, {"sha": "d1b1de4a2d5b51c98f16f621559737c152a05422", "filename": "gcc/gimple-ssa-warn-alloca.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb753cad995b2a0f98a566cc710feef45e1b46b3/gcc%2Fgimple-ssa-warn-alloca.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb753cad995b2a0f98a566cc710feef45e1b46b3/gcc%2Fgimple-ssa-warn-alloca.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-alloca.c?ref=bb753cad995b2a0f98a566cc710feef45e1b46b3", "patch": "@@ -128,7 +128,11 @@ struct alloca_type_and_limit {\n   alloca_type_and_limit ();\n   alloca_type_and_limit (enum alloca_type type,\n \t\t\t wide_int i) : type(type), limit(i) { }\n-  alloca_type_and_limit (enum alloca_type type) : type(type) { }\n+  alloca_type_and_limit (enum alloca_type type) : type(type)\n+  { if (type == ALLOCA_BOUND_MAYBE_LARGE\n+\t|| type == ALLOCA_BOUND_DEFINITELY_LARGE)\n+      limit = wi::to_wide (integer_zero_node);\n+  }\n };\n \n /* Return the value of the argument N to -Walloca-larger-than= or"}]}