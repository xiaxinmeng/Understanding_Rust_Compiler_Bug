{"sha": "234c071be0fe675afced8c8f30b363fee206a06c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0YzA3MWJlMGZlNjc1YWZjZWQ4YzhmMzBiMzYzZmVlMjA2YTA2Yw==", "commit": {"author": {"name": "Kevin Buettner", "email": "kevinb@redhat.com", "date": "2003-03-04T05:58:54Z"}, "committer": {"name": "Kevin Buettner", "email": "kevinb@gcc.gnu.org", "date": "2003-03-04T05:58:54Z"}, "message": "dwarf2out.c (rtl_for_decl_location): Don't return NULL_RTX for global register variables.\n\n\t* dwarf2out.c (rtl_for_decl_location): Don't return NULL_RTX for\n\tglobal register variables.\n\nFrom-SVN: r63768", "tree": {"sha": "86145e572f35b5c00c95c9d06ea5c876d108b55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86145e572f35b5c00c95c9d06ea5c876d108b55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234c071be0fe675afced8c8f30b363fee206a06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234c071be0fe675afced8c8f30b363fee206a06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234c071be0fe675afced8c8f30b363fee206a06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234c071be0fe675afced8c8f30b363fee206a06c/comments", "author": {"login": "KevinBuettner", "id": 65747518, "node_id": "MDQ6VXNlcjY1NzQ3NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinBuettner", "html_url": "https://github.com/KevinBuettner", "followers_url": "https://api.github.com/users/KevinBuettner/followers", "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}", "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions", "organizations_url": "https://api.github.com/users/KevinBuettner/orgs", "repos_url": "https://api.github.com/users/KevinBuettner/repos", "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinBuettner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01952d37e3c7bfeacfb3186ddc8ab7cb59c65c3e"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "c80364005d1ac03d8c87f4e709059563639756dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c071be0fe675afced8c8f30b363fee206a06c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c071be0fe675afced8c8f30b363fee206a06c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=234c071be0fe675afced8c8f30b363fee206a06c", "patch": "@@ -1,3 +1,8 @@\n+2003-03-04  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* dwarf2out.c (rtl_for_decl_location): Don't return NULL_RTX for\n+\tglobal register variables.\n+\n 2003-03-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* reload.c (reload_adjust_reg_for_mode): New function."}, {"sha": "b75481c2411fb8409c8d4d5e582c06e6e34a408d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234c071be0fe675afced8c8f30b363fee206a06c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234c071be0fe675afced8c8f30b363fee206a06c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=234c071be0fe675afced8c8f30b363fee206a06c", "patch": "@@ -9370,13 +9370,17 @@ rtl_for_decl_location (decl)\n   rtl = DECL_RTL_IF_SET (decl);\n \n   /* When generating abstract instances, ignore everything except\n-     constants and symbols living in memory.  */\n+     constants, symbols living in memory, and symbols living in\n+     fixed registers.  */\n   if (! reload_completed)\n     {\n       if (rtl\n \t  && (CONSTANT_P (rtl)\n \t      || (GET_CODE (rtl) == MEM\n-\t\t  && CONSTANT_P (XEXP (rtl, 0)))))\n+\t          && CONSTANT_P (XEXP (rtl, 0)))\n+\t      || (GET_CODE (rtl) == REG\n+\t          && TREE_CODE (decl) == VAR_DECL\n+\t\t  && TREE_STATIC (decl))))\n \t{\n \t  rtl = (*targetm.delegitimize_address) (rtl);\n \t  return rtl;"}]}