{"sha": "224694090c01069cec258efe72c5115b7ef2a879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI0Njk0MDkwYzAxMDY5Y2VjMjU4ZWZlNzJjNTExNWI3ZWYyYTg3OQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2005-08-08T19:47:59Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2005-08-08T19:47:59Z"}, "message": "* expr.c (write_complex_part): Return after handling MEM.\n\nFrom-SVN: r102878", "tree": {"sha": "5bca466c1540daf8b2d84c021728fcd419c8a72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bca466c1540daf8b2d84c021728fcd419c8a72f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/224694090c01069cec258efe72c5115b7ef2a879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224694090c01069cec258efe72c5115b7ef2a879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224694090c01069cec258efe72c5115b7ef2a879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224694090c01069cec258efe72c5115b7ef2a879/comments", "author": null, "committer": null, "parents": [{"sha": "2d88fcc27deb188430c8192197b69e2e1af54631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d88fcc27deb188430c8192197b69e2e1af54631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d88fcc27deb188430c8192197b69e2e1af54631"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "492631db73a892a47d34ef7a4bd4fe1756c8add4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/224694090c01069cec258efe72c5115b7ef2a879/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/224694090c01069cec258efe72c5115b7ef2a879/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=224694090c01069cec258efe72c5115b7ef2a879", "patch": "@@ -1,3 +1,7 @@\n+2005-08-08  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* expr.c (write_complex_part): Return after handling MEM.\n+\n 2005-08-08  Josh Conner  <jconner@apple.com>\n \n \tPR rtl-optimization/23241"}, {"sha": "5961e27c6c43eb0b448bb72311ac4b11cd4258d4", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/224694090c01069cec258efe72c5115b7ef2a879/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/224694090c01069cec258efe72c5115b7ef2a879/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=224694090c01069cec258efe72c5115b7ef2a879", "patch": "@@ -2669,9 +2669,12 @@ write_complex_part (rtx cplx, rtx val, bool imag_p)\n      adjust_address_nv.  Instead of preparing fallback support for an\n      invalid address, we call adjust_address_nv directly.  */\n   if (MEM_P (cplx))\n-    emit_move_insn (adjust_address_nv (cplx, imode,\n-\t\t\t\t       imag_p ? GET_MODE_SIZE (imode) : 0),\n-\t\t    val);\n+    {\n+      emit_move_insn (adjust_address_nv (cplx, imode,\n+\t\t\t\t\t imag_p ? GET_MODE_SIZE (imode) : 0),\n+\t\t      val);\n+      return;\n+    }\n \n   /* If the sub-object is at least word sized, then we know that subregging\n      will work.  This special case is important, since store_bit_field"}]}