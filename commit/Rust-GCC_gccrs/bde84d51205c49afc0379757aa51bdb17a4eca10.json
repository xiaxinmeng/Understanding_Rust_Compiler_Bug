{"sha": "bde84d51205c49afc0379757aa51bdb17a4eca10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlODRkNTEyMDVjNDlhZmMwMzc5NzU3YWE1MWJkYjE3YTRlY2ExMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-26T07:21:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-04-26T07:21:42Z"}, "message": "re PR middle-end/85450 (ICE: invalid types in nop conversion during GIMPLE pass: ompexp)\n\n2018-04-26  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/85450\n\t* tree-cfg.c (verify_gimple_assign_unary): Restore proper\n\tchecking of integer<->pointer conversions.\n\t* omp-expand.c (expand_omp_for_static_nochunk): Avoid\n\tsign-/zero-extending pointer types.\n\t(expand_omp_for_static_chunk): Likewise.\n\nFrom-SVN: r259667", "tree": {"sha": "7dd9eb7318a103cdc57fba805851ed79c737c064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dd9eb7318a103cdc57fba805851ed79c737c064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bde84d51205c49afc0379757aa51bdb17a4eca10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde84d51205c49afc0379757aa51bdb17a4eca10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde84d51205c49afc0379757aa51bdb17a4eca10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde84d51205c49afc0379757aa51bdb17a4eca10/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e92306590ef0c4e51a0fc0053469a28ed60b1c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92306590ef0c4e51a0fc0053469a28ed60b1c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92306590ef0c4e51a0fc0053469a28ed60b1c1c"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "d3834b074f6410870a5455086d12b66173eb341c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bde84d51205c49afc0379757aa51bdb17a4eca10", "patch": "@@ -1,3 +1,12 @@\n+2018-04-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/85450\n+\t* tree-cfg.c (verify_gimple_assign_unary): Restore proper\n+\tchecking of integer<->pointer conversions.\n+\t* omp-expand.c (expand_omp_for_static_nochunk): Avoid\n+\tsign-/zero-extending pointer types.\n+\t(expand_omp_for_static_chunk): Likewise.\n+\n 2018-03-22  Hans-Peter Nilsson  <hp@axis.com>\n \t    Jean Lee  <xiaoyur347@gmail.com>\n "}, {"sha": "d2a77c067c6c306382704c33a1e7285c8a3ef9ad", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=bde84d51205c49afc0379757aa51bdb17a4eca10", "patch": "@@ -3501,7 +3501,12 @@ expand_omp_for_static_nochunk (struct omp_region *region,\n   t = fold_convert (itype, s0);\n   t = fold_build2 (MULT_EXPR, itype, t, step);\n   if (POINTER_TYPE_P (type))\n-    t = fold_build_pointer_plus (n1, t);\n+    {\n+      t = fold_build_pointer_plus (n1, t);\n+      if (!POINTER_TYPE_P (TREE_TYPE (startvar))\n+\t  && TYPE_PRECISION (TREE_TYPE (startvar)) > TYPE_PRECISION (type))\n+\tt = fold_convert (signed_type_for (type), t);\n+    }\n   else\n     t = fold_build2 (PLUS_EXPR, type, t, n1);\n   t = fold_convert (TREE_TYPE (startvar), t);\n@@ -3515,7 +3520,12 @@ expand_omp_for_static_nochunk (struct omp_region *region,\n   t = fold_convert (itype, e0);\n   t = fold_build2 (MULT_EXPR, itype, t, step);\n   if (POINTER_TYPE_P (type))\n-    t = fold_build_pointer_plus (n1, t);\n+    {\n+      t = fold_build_pointer_plus (n1, t);\n+      if (!POINTER_TYPE_P (TREE_TYPE (startvar))\n+\t  && TYPE_PRECISION (TREE_TYPE (startvar)) > TYPE_PRECISION (type))\n+\tt = fold_convert (signed_type_for (type), t);\n+    }\n   else\n     t = fold_build2 (PLUS_EXPR, type, t, n1);\n   t = fold_convert (TREE_TYPE (startvar), t);\n@@ -4000,7 +4010,12 @@ expand_omp_for_static_chunk (struct omp_region *region,\n   t = fold_convert (itype, s0);\n   t = fold_build2 (MULT_EXPR, itype, t, step);\n   if (POINTER_TYPE_P (type))\n-    t = fold_build_pointer_plus (n1, t);\n+    {\n+      t = fold_build_pointer_plus (n1, t);\n+      if (!POINTER_TYPE_P (TREE_TYPE (startvar))\n+\t  && TYPE_PRECISION (TREE_TYPE (startvar)) > TYPE_PRECISION (type))\n+\tt = fold_convert (signed_type_for (type), t);\n+    }\n   else\n     t = fold_build2 (PLUS_EXPR, type, t, n1);\n   t = fold_convert (TREE_TYPE (startvar), t);\n@@ -4014,7 +4029,12 @@ expand_omp_for_static_chunk (struct omp_region *region,\n   t = fold_convert (itype, e0);\n   t = fold_build2 (MULT_EXPR, itype, t, step);\n   if (POINTER_TYPE_P (type))\n-    t = fold_build_pointer_plus (n1, t);\n+    {\n+      t = fold_build_pointer_plus (n1, t);\n+      if (!POINTER_TYPE_P (TREE_TYPE (startvar))\n+\t  && TYPE_PRECISION (TREE_TYPE (startvar)) > TYPE_PRECISION (type))\n+\tt = fold_convert (signed_type_for (type), t);\n+    }\n   else\n     t = fold_build2 (PLUS_EXPR, type, t, n1);\n   t = fold_convert (TREE_TYPE (startvar), t);"}, {"sha": "c4767a3abd2a3ae6101f3510ba2c599c63429ded", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde84d51205c49afc0379757aa51bdb17a4eca10/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=bde84d51205c49afc0379757aa51bdb17a4eca10", "patch": "@@ -3842,7 +3842,7 @@ verify_gimple_assign_unary (gassign *stmt)\n \t    || (POINTER_TYPE_P (rhs1_type)\n \t\t&& INTEGRAL_TYPE_P (lhs_type)\n \t\t&& (TYPE_PRECISION (rhs1_type) >= TYPE_PRECISION (lhs_type)\n-\t\t    || ptrofftype_p (sizetype))))\n+\t\t    || ptrofftype_p (lhs_type))))\n \t  return false;\n \n \t/* Allow conversion from integral to offset type and vice versa.  */"}]}