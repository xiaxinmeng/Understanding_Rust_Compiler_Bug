{"sha": "e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhNWM1ZWIwYWMyMGRmYjlhMGRmMzA3MjhmMmJjZDgyZmMxN2YzMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-21T06:12:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-21T06:12:24Z"}, "message": "(emit_insns_after): New function.\n\nFrom-SVN: r1922", "tree": {"sha": "38e1bf2159d24dbd8d399aa5a70487ea4888c149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38e1bf2159d24dbd8d399aa5a70487ea4888c149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31/comments", "author": null, "committer": null, "parents": [{"sha": "edc7c4ec3b1ea05e7340860781702daddf34f024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc7c4ec3b1ea05e7340860781702daddf34f024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc7c4ec3b1ea05e7340860781702daddf34f024"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "82e87ceb56796cd20d47209f861ef3657516b4cd", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=e0a5c5eb0ac20dfb9a0df30728f2bcd82fc17f31", "patch": "@@ -2185,6 +2185,37 @@ emit_insns_before (insn, before)\n   return last;\n }\n \n+/* Emit the insns in a chain starting with FIRST and place them in back of\n+   the insn AFTER.  Return the last insn emitted.  */\n+\n+rtx\n+emit_insns_after (first, after)\n+     register rtx first;\n+     register rtx after;\n+{\n+  register rtx last;\n+  register rtx after_after;\n+\n+  if (!after)\n+    abort ();\n+\n+  if (!first)\n+    return first;\n+\n+  for (last = first; NEXT_INSN (last); last = NEXT_INSN (last))\n+    continue;\n+\n+  after_after = NEXT_INSN (after);\n+\n+  NEXT_INSN (after) = first;\n+  PREV_INSN (first) = after;\n+  NEXT_INSN (last) = after_after;\n+  if (after_after)\n+    PREV_INSN (after_after) = last;\n+\n+  return last;\n+}\n+\n /* Make an insn of code JUMP_INSN with pattern PATTERN\n    and add it to the end of the doubly-linked list.  */\n "}]}