{"sha": "c2ce8cdc82051800c389c16725365e91986f89c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJjZThjZGM4MjA1MTgwMGMzODljMTY3MjUzNjVlOTE5ODZmODljNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-02T19:10:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-02T19:10:40Z"}, "message": "stor-layout.c (layout_type): Make sure that an array of zero-sized element is zero-sized regardless of its...\n\n\t* stor-layout.c (layout_type) <ARRAY_TYPE>: Make sure that an array\n\tof zero-sized element is zero-sized regardless of its extent.\n\nFrom-SVN: r152415", "tree": {"sha": "63e22ba3f204afbed0e53ba188e4962beac2933a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63e22ba3f204afbed0e53ba188e4962beac2933a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ce8cdc82051800c389c16725365e91986f89c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ce8cdc82051800c389c16725365e91986f89c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ce8cdc82051800c389c16725365e91986f89c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ce8cdc82051800c389c16725365e91986f89c5/comments", "author": null, "committer": null, "parents": [{"sha": "7d45fb9420c0d23774e3e34730cd6d847d78a90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d45fb9420c0d23774e3e34730cd6d847d78a90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d45fb9420c0d23774e3e34730cd6d847d78a90a"}], "stats": {"total": 61, "additions": 51, "deletions": 10}, "files": [{"sha": "a118f8cb636b8a1d9bf1e6a6e4571f6dfca5ef96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2ce8cdc82051800c389c16725365e91986f89c5", "patch": "@@ -1,3 +1,8 @@\n+2009-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* stor-layout.c (layout_type) <ARRAY_TYPE>: Make sure that an array\n+\tof zero-sized element is zero-sized regardless of its extent.\n+\n 2009-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/40521"}, {"sha": "5967fb5770f124d90920ede03f5ad535618eb51d", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=c2ce8cdc82051800c389c16725365e91986f89c5", "patch": "@@ -1959,14 +1959,21 @@ layout_type (tree type)\n \t    tree element_size = TYPE_SIZE (element);\n \t    tree length;\n \n+\t    /* Make sure that an array of zero-sized element is zero-sized\n+\t       regardless of its extent.  */\n+\t    if (integer_zerop (element_size))\n+\t      length = size_zero_node;\n+\n \t    /* The initial subtraction should happen in the original type so\n \t       that (possible) negative values are handled appropriately.  */\n-\t    length = size_binop (PLUS_EXPR, size_one_node,\n-\t\t\t\t fold_convert (sizetype,\n-\t\t\t\t\t       fold_build2_loc (input_location,\n-\t\t\t\t\t\t\t    MINUS_EXPR,\n-\t\t\t\t\t\t\t    TREE_TYPE (lb),\n-\t\t\t\t\t\t\t    ub, lb)));\n+\t    else\n+\t      length\n+\t\t= size_binop (PLUS_EXPR, size_one_node,\n+\t\t\t      fold_convert (sizetype,\n+\t\t\t\t\t    fold_build2_loc (input_location,\n+\t\t\t\t\t\t\t     MINUS_EXPR,\n+\t\t\t\t\t\t\t     TREE_TYPE (lb),\n+\t\t\t\t\t\t\t     ub, lb)));\n \n \t    TYPE_SIZE (type) = size_binop (MULT_EXPR, element_size,\n \t\t\t\t\t   fold_convert (bitsizetype,"}, {"sha": "9245417051060d808eadedf7caa39bdfcf02147d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2ce8cdc82051800c389c16725365e91986f89c5", "patch": "@@ -1,3 +1,8 @@\n+2009-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/array10.adb: New test.\n+\t* gnat.dg/object_overflow.adb: Tweak.\n+\n 2009-10-02  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n         * gcc.dg/guality/guality.exp: Disable on darwin."}, {"sha": "37ee8ffb43b0b1ff08337d257cfda466e90391bc", "filename": "gcc/testsuite/gnat.dg/array10.adb", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2Fgnat.dg%2Farray10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2Fgnat.dg%2Farray10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray10.adb?ref=c2ce8cdc82051800c389c16725365e91986f89c5", "patch": "@@ -0,0 +1,25 @@\n+-- { dg-do run }\n+-- Verify that an array of non-aliased zero-sized element is zero-sized\n+\n+procedure Array10 is\n+\n+  type Rec is null record;\n+\n+  type Arr1 is array (1..8) of Rec;\n+  type Arr2 is array (Long_Integer) of Rec;\n+\n+  R : Rec;\n+  A1 : Arr1;\n+  A2 : Arr2;\n+\n+begin\n+  if Rec'Size /= 0 then\n+    raise Program_Error;\n+  end if;\n+  if Arr1'Size /= 0 then\n+    raise Program_Error;\n+  end if;\n+  if Arr2'Size /= 0 then\n+    raise Program_Error;\n+  end if;\n+end;"}, {"sha": "597b7964585d4e4e0305c1d83aa63e2bf4d6f966", "filename": "gcc/testsuite/gnat.dg/object_overflow.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2Fgnat.dg%2Fobject_overflow.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ce8cdc82051800c389c16725365e91986f89c5/gcc%2Ftestsuite%2Fgnat.dg%2Fobject_overflow.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fobject_overflow.adb?ref=c2ce8cdc82051800c389c16725365e91986f89c5", "patch": "@@ -2,13 +2,12 @@\n \n procedure Object_Overflow is\n \n-  type Rec is null record;\n+  procedure Proc (x : Boolean) is begin null; end;\n \n-  procedure Proc (x : Rec) is begin null; end;\n-\n-  type Arr is array(Long_Integer) of Rec;\n+  type Arr is array(Long_Integer) of Boolean;\n   Obj : Arr; -- { dg-warning \"Storage_Error will be raised\" }\n \n begin\n+  Obj(1) := True;\n   Proc (Obj(1));\n end;"}]}