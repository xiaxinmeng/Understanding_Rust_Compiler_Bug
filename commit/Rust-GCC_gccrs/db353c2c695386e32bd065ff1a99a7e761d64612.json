{"sha": "db353c2c695386e32bd065ff1a99a7e761d64612", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzNTNjMmM2OTUzODZlMzJiZDA2NWZmMWE5OWE3ZTc2MWQ2NDYxMg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2001-01-25T04:09:22Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-01-25T04:09:22Z"}, "message": "*.cc: Remove explicit reference to 'testsuite/' in testcases.\n\n       * testsuite/27_io/*.cc: Remove explicit reference to 'testsuite/'\n       in testcases.  Prepare for the DejaGnu based framework.\n       * mkcheck.in: Adjust call to tests_flags.  Don't mmkdir testsuite\n       directory -- it is now mkcheck working directory.\n       * tests_flags.in: Remove reference to $(top_srcdir).  Use\n       ${SRC_DIR} instead.\n       * Makefile.am (check, check-install): Change mkcheck invocation\n       logic.\n       * Makefile.in: Regenerate.\n\nFrom-SVN: r39255", "tree": {"sha": "7d88af4123c93afacac6a7306051c13edc4cb5b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d88af4123c93afacac6a7306051c13edc4cb5b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db353c2c695386e32bd065ff1a99a7e761d64612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db353c2c695386e32bd065ff1a99a7e761d64612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db353c2c695386e32bd065ff1a99a7e761d64612", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db353c2c695386e32bd065ff1a99a7e761d64612/comments", "author": null, "committer": null, "parents": [{"sha": "91239b939c222c178e872bbe673c7d37f62969f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91239b939c222c178e872bbe673c7d37f62969f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91239b939c222c178e872bbe673c7d37f62969f0"}], "stats": {"total": 135, "additions": 85, "deletions": 50}, "files": [{"sha": "cdd518c4e462e988c95612171832d8ec328f02fe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -1,3 +1,15 @@\n+2001-01-25  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* testsuite/27_io/*.cc: Remove explicit reference to 'testsuite/'\n+\tin testcases.  Prepare for the DejaGnu based framework.\n+\t* mkcheck.in: Adjust call to tests_flags.  Don't mmkdir testsuite\n+\tdirectory -- it is now mkcheck working directory.\n+\t* tests_flags.in: Remove reference to $(top_srcdir).  Use\n+\t${SRC_DIR} instead.\n+\t* Makefile.am (check, check-install): Change mkcheck invocation\n+\tlogic. \n+\t* Makefile.in: Regenerate.\n+\n 2001-01-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/os/aix/bits/atomicity.h (__compare_and_swap): Remove."}, {"sha": "aab3dc155b3f0a368cacbced2880251c0cd87d33", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -26,17 +26,21 @@ MAINT_CHARSET = latin1\n \n SUBDIRS = libio libmath libsupc++ src\n \n-\n-# Use $(blddir) instead of $(top_builddir) for arguments to \"mkcheck\"\n+# Use $${builddir} instead of $(top_builddir) for arguments to \"mkcheck\"\n # because then the paths will be full pathnames, not relative\n # pathnames. (-Wl,--rpath seems to like this better.)\n-check:  $(top_builddir)/mkcheck\n-\tchmod +x  $(top_builddir)/mkcheck\n-\t$(top_builddir)/mkcheck 0 `pwd` $(top_srcdir)\n+check: $(top_builddir)/mkcheck\n+\t-(chmod + $(top_builddir)/mkcheck; \\\n+\t  srcdir=`cd $(top_srcdir); pwd`; builddir=`pwd`; \\\n+\t  test -d testsuite || (mkdir testsuite; chmod u+w testsuite); \\\n+\t  cd testsuite; $${builddir}/mkcheck 0 $${builddir} $${srcdir})\n \n check-install: $(top_builddir)/mkcheck\n-\tchmod +x  $(top_builddir)/mkcheck\n-\t$(top_builddir)/mkcheck 1 `pwd` $(top_srcdir) $(prefix)\n+\t-(chmod + $(top_builddir)/mkcheck; \\\n+\t  srcdir=`cd $(top_srcdir); pwd`; builddir=`pwd`; \\\n+\t  test -d testsuite || (mkdir testsuite; chmod u+w testsuite); \\\n+\t  cd testsuite; \\\n+\t  $${builddir}/mkcheck 1 $${builddir} $${srcdir} $(prefix))\n \n # Multilib support.\n MAKEOVERRIDES="}, {"sha": "9a45cacc882ef43128761d3efefd7e85c0568a88", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -410,16 +410,21 @@ distclean-generic clean-generic maintainer-clean-generic clean \\\n mostlyclean distclean maintainer-clean\n \n \n-# Use $(blddir) instead of $(top_builddir) for arguments to \"mkcheck\"\n+# Use $${builddir} instead of $(top_builddir) for arguments to \"mkcheck\"\n # because then the paths will be full pathnames, not relative\n # pathnames. (-Wl,--rpath seems to like this better.)\n-check:  $(top_builddir)/mkcheck\n-\tchmod +x  $(top_builddir)/mkcheck\n-\t$(top_builddir)/mkcheck 0 `pwd` $(top_srcdir)\n+check: $(top_builddir)/mkcheck\n+\t-(chmod + $(top_builddir)/mkcheck; \\\n+\t  srcdir=`cd $(top_srcdir); pwd`; builddir=`pwd`; \\\n+\t  test -d testsuite || (mkdir testsuite; chmod u+w testsuite); \\\n+\t  cd testsuite; $${builddir}/mkcheck 0 $${builddir} $${srcdir})\n \n check-install: $(top_builddir)/mkcheck\n-\tchmod +x  $(top_builddir)/mkcheck\n-\t$(top_builddir)/mkcheck 1 `pwd` $(top_srcdir) $(prefix)\n+\t-(chmod + $(top_builddir)/mkcheck; \\\n+\t  srcdir=`cd $(top_srcdir); pwd`; builddir=`pwd`; \\\n+\t  test -d testsuite || (mkdir testsuite; chmod u+w testsuite); \\\n+\t  cd testsuite; \\\n+\t  $${builddir}/mkcheck 1 $${builddir} $${srcdir} $(prefix))\n \n # Multilib Makefile bits.\n .PHONY: all-multi mostlyclean-multi clean-multi distclean-multi \\"}, {"sha": "7eb30e014c8d1c7bde0d3b7ed44865075d325a5b", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -52,7 +52,7 @@ esac\n # Compute the flags necessary to run the testsuite.\n saved_ifs=$IFS\n IFS=':'\n-set `./tests_flags ${query} $*` || exit 1\n+set `../tests_flags ${query} $*` || exit 1\n BUILD_DIR=$1; SRC_DIR=$2; PREFIX_DIR=$3; CXX=$4; CXXFLAGS=$5; INCLUDES=$6; LIBS=$7;\n IFS=$saved_ifs\n \n@@ -74,12 +74,10 @@ ST_FLAG=\"-static\"\n \n # Set up the testing directory, which should be in a directory called\n # \"testsuite\" in the root level of the build directory.\n-TEST_DIR=\"`pwd`/testsuite\"\n-if [ ! -d \"$TEST_DIR\" ]; then\n-    echo \"making directory $TEST_DIR\"\n-    mkdir $TEST_DIR\n-    mkdir $TEST_DIR/.libs    # help libtool keep quiet\n-    chmod u+w $TEST_DIR\n+TEST_DIR='.'\n+# help libtool keep quiet\n+if [ ! -d ${TEST_DIR}/.libs ]; then\n+    mkdir $TEST_DIR/.libs    \n fi\n \n # the name of the file that will collect and hold all this useful data:"}, {"sha": "c012cbb097fd4efc060ffad365b4374114a47126", "filename": "libstdc++-v3/tests_flags.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftests_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftests_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftests_flags.in?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -98,7 +98,6 @@ esac\n \n # Compute include paths\n # INCLUDES == include path to new headers for use on gcc command-line\n-top_srcdir=@top_srcdir@\n C_DIR=\"`basename  @C_INCLUDE_DIR@`\"\n case ${query} in\n     --installed-library)\n@@ -121,7 +120,7 @@ case ${query} in\n esac\n \n # For built or installed libraries, we need to get right OS-specific bits.\n-. ${top_srcdir}/configure.target\n+. ${SRC_DIR}/configure.target\n \n # LIB_PATH == where to find the build libraries for libtool's use\n # CXX == the full pathname of the compiler"}, {"sha": "4cfd9277b57467ab2a31a1afd35541e37fe5c778", "filename": "libstdc++-v3/testsuite/27_io/filebuf.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -22,14 +22,17 @@\n // buffer_size length of 8092, so that overflow/underflow can be\n // simulated a bit more readily.\n \n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %*.txt\n+\n #include <fstream>\n #include <debug_assert.h>\n \n const char carray_01[] = \"santa cruz or sandiego?\";\n const char carray_02[] = \"memphis, new orleans, and savanah\";\n-const char name_01[] = \"testsuite/filebuf-1.txt\"; // file with data in it\n-const char name_02[] = \"testsuite/filebuf-2.txt\"; // empty file, need to create\n-const char name_03[] = \"testsuite/filebuf-3.txt\"; // empty file, need to create\n+const char name_01[] = \"filebuf-1.txt\"; // file with data in it\n+const char name_02[] = \"filebuf-2.txt\"; // empty file, need to create\n+const char name_03[] = \"filebuf-3.txt\"; // empty file, need to create\n \n class derived_filebuf: public std::filebuf\n {"}, {"sha": "3b028a5221a2825f84b8400ad579d490c89f0ee4", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -17,6 +17,8 @@\n // USA.\n \n // 27.8.1.3 filebuf member functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n \n // various tests for filebuf::open() and filebuf::close() including\n // the non-portable functionality in the libstdc++-v3 IO library\n@@ -37,8 +39,8 @@\n // thanks to \"George T. Talbot\" <george@moberg.com> for uncovering\n // this bug/situation. \n \n-const char name_01[] = \"testsuite/filebuf_members-1.tst\";\n-const char name_02[] = \"testsuite/filebuf_members-1.txt\";\n+const char name_01[] = \"filebuf_members-1.tst\";\n+const char name_02[] = \"filebuf_members-1.txt\";\n \n int\n test_01()"}, {"sha": "3fb7a6d1156abc3832b87fe02278556904c32b00", "filename": "libstdc++-v3/testsuite/27_io/ifstream_members.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -17,13 +17,15 @@\n // USA.\n \n // 27.8.1.7 ifstream member functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n \n #include <istream>\n #include <fstream>\n #include <debug_assert.h>\n \n-const char name_01[] = \"testsuite/ifstream_members-1.tst\";\n-const char name_02[] = \"testsuite/ifstream_members-1.txt\";\n+const char name_01[] = \"ifstream_members-1.tst\";\n+const char name_02[] = \"ifstream_members-1.txt\";\n \n // http://gcc.gnu.org/ml/libstdc++/2000-06/msg00136.html\n bool test00()"}, {"sha": "08043449bdcddbc88b8d3579f8e9371e3cad93e4", "filename": "libstdc++-v3/testsuite/27_io/ios_base_members_static.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -21,6 +21,8 @@\n // USA.\n \n // 27.4.2.4 ios_base static members\n+// @require@ %-*.tst\n+// @diff@ %-*.tst %-*.txt\n \n #include <cstdio>\n #include <sstream>\n@@ -58,7 +60,7 @@ test02()\n {\n   std::ios_base::sync_with_stdio();\n  \n-  std::freopen(\"testsuite/ios_base_members_static-1.txt\", \"w\", stdout);\n+  std::freopen(\"ios_base_members_static-1.txt\", \"w\", stdout);\n  \n   for (int i = 0; i < 2; i++)\n     {"}, {"sha": "2bd878fabce7598278520066293f501a4d8a7547", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_other.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -19,6 +19,8 @@\n // USA.\n \n // 27.6.1.2.3 basic_istream::operator>>\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n \n #include <istream>\n #include <sstream>\n@@ -154,8 +156,8 @@ bool test02() {\n \n   bool test = true;\n   typedef std::ios::traits_type ctraits_type;\n-  const char name_01[] = \"testsuite/istream_extractor_other-1.txt\"; //read \n-  const char name_02[] = \"testsuite/istream_extractor_other-2.txt\"; //write\n+  const char name_01[] = \"istream_extractor_other-1.txt\"; //read \n+  const char name_02[] = \"istream_extractor_other-2.txt\"; //write\n \n   std::filebuf fbin, fbout;\n   fbin.open(name_01, std::ios_base::in);"}, {"sha": "d5fad458af032b845491cb4d977e8b6ad782d01c", "filename": "libstdc++-v3/testsuite/27_io/istream_seeks.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -33,7 +33,7 @@ bool test01()\n   typedef ios::pos_type pos_type;\n \n   bool test = true;\n-  const char str_lit01[] = \"testsuite/istream_unformatted-1.tst\";\n+  const char str_lit01[] = \"istream_unformatted-1.tst\";\n \n   // in\n   // test default ctors leave things in the same positions...\n@@ -68,8 +68,8 @@ void test04(void)\n   bool test = true;\n   std::istream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n   std::ios_base::iostate state01, state02;\n-  const char str_lit01[] = \"testsuite/istream_unformatted-1.txt\";\n-  const char str_lit02[] = \"testsuite/istream_unformatted-2.txt\";\n+  const char str_lit01[] = \"istream_unformatted-1.txt\";\n+  const char str_lit02[] = \"istream_unformatted-2.txt\";\n   std::ifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n   std::ifstream if02(str_lit01, std::ios_base::in);\n   std::ifstream if03(str_lit02, std::ios_base::out | std::ios_base::trunc); \n@@ -174,7 +174,7 @@ void test05(void)\n   bool test = true;\n   std::istream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n   std::ios_base::iostate state01, state02;\n-  const char str_lit01[] = \"testsuite/istream_unformatted-1.tst\";\n+  const char str_lit01[] = \"istream_unformatted-1.tst\";\n   std::ifstream if01(str_lit01);\n   std::ifstream if02(str_lit01);\n   std::ifstream if03(str_lit01);"}, {"sha": "77560a5909532a8debbab391369b38c1de69a275", "filename": "libstdc++-v3/testsuite/27_io/istream_unformatted.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -19,6 +19,8 @@\n // USA.\n \n // 27.6.1.3 unformatted input functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n \n #include <cstring> // for strncmp,...\n #include <istream>\n@@ -459,7 +461,7 @@ int\n test07()\n {\n   bool test = true;\n-  const char* tfn = \"testsuite/istream_unformatted-3.txt\";\n+  const char* tfn = \"istream_unformatted-3.txt\";\n   std::ifstream infile;\n   infile.open(tfn);\n   VERIFY( !(!infile) );"}, {"sha": "d965b3efbfc83bcc5345021da3be789292e5d372", "filename": "libstdc++-v3/testsuite/27_io/ofstream_members.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -17,13 +17,15 @@\n // USA.\n \n // 27.8.1.10 ofstream member functions\n+// @require@ %-*.tst\n+// @diff@ %-*.tst %-*.txt\n \n #include <ostream>\n #include <fstream>\n #include <debug_assert.h>\n \n-const char name_01[] = \"testsuite/ofstream_members-1.tst\";\n-const char name_02[] = \"testsuite/ofstream_members-1.txt\";\n+const char name_01[] = \"ofstream_members-1.tst\";\n+const char name_02[] = \"ofstream_members-1.txt\";\n \n // http://gcc.gnu.org/ml/libstdc++/2000-06/msg00136.html\n bool test00()"}, {"sha": "0c7f18915fc5a52a7963022ba6edb6c806f090ca", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -32,7 +32,7 @@ bool test01()\n   bool test = true;\n   std::string str01;\n   const int size = 1000;\n-  const char name_02[] = \"testsuite/ostream_inserter_char-1.txt\";\n+  const char name_02[] = \"ostream_inserter_char-1.txt\";\n \n   // initialize string\n   for(int i=0 ; i < size; i++) {"}, {"sha": "ec3a028e82f6552f7303aa250bdcab114274bf57", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_other.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -20,17 +20,19 @@\n // USA.\n \n // 27.6.2.5.4 basic_ostream character inserters\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n \n #include <ostream>\n #include <sstream>\n #include <fstream>\n #include <debug_assert.h>\n \n const int size = 1000;\n-const char name_01[] = \"testsuite/ostream_inserter_other-1.tst\";\n-const char name_02[] = \"testsuite/ostream_inserter_other-1.txt\";\n-const char name_03[] = \"testsuite/ostream_inserter_other-2.tst\";\n-const char name_04[] = \"testsuite/ostream_inserter_other-2.txt\";\n+const char name_01[] = \"ostream_inserter_other-1.tst\";\n+const char name_02[] = \"ostream_inserter_other-1.txt\";\n+const char name_03[] = \"ostream_inserter_other-2.tst\";\n+const char name_04[] = \"ostream_inserter_other-2.txt\";\n \n \n // stringstream\n@@ -101,8 +103,8 @@ test03(void)\n \n   typedef ios::pos_type \tpos_type;\n \n-  const char* TEST_IN = \"testsuite/ostream_inserter_other_in\";\n-  const char* TEST_OUT = \"testsuite/ostream_inserter_other_out\";\n+  const char* TEST_IN = \"ostream_inserter_other_in\";\n+  const char* TEST_OUT = \"ostream_inserter_other_out\";\n   pos_type i_read, i_wrote, rs, ws;\n   double tf_size = BUFSIZ * 2.5;\n   ofstream testfile(TEST_IN);"}, {"sha": "df927562a2ba1f47fee293bf0a2ccb9c6372e71d", "filename": "libstdc++-v3/testsuite/27_io/ostream_seeks.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db353c2c695386e32bd065ff1a99a7e761d64612/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc?ref=db353c2c695386e32bd065ff1a99a7e761d64612", "patch": "@@ -32,7 +32,7 @@ bool test01()\n   typedef ios::pos_type pos_type;\n \n   bool test = true;\n-  const char str_lit01[] = \"testsuite/ostream_seeks-1.txt\";\n+  const char str_lit01[] = \"ostream_seeks-1.txt\";\n \n   // out\n   // test default ctors leave things in the same positions...\n@@ -72,8 +72,8 @@ void test04(void)\n   bool test = true;\n   std::istream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n   std::ios_base::iostate state01, state02;\n-  const char str_lit01[] = \"testsuite/istream_unformatted-1.txt\";\n-  const char str_lit02[] = \"testsuite/istream_unformatted-2.txt\";\n+  const char str_lit01[] = \"istream_unformatted-1.txt\";\n+  const char str_lit02[] = \"istream_unformatted-2.txt\";\n   std::ifstream if01(str_lit01, std::ios_base::in | std::ios_base::out);\n   std::ifstream if02(str_lit01, std::ios_base::in);\n   std::ifstream if03(str_lit02, std::ios_base::out | std::ios_base::trunc); \n@@ -178,7 +178,7 @@ void test05(void)\n   bool test = true;\n   std::istream::pos_type pos01, pos02, pos03, pos04, pos05, pos06;\n   std::ios_base::iostate state01, state02;\n-  const char str_lit01[] = \"testsuite/istream_unformatted-1.tst\";\n+  const char str_lit01[] = \"istream_unformatted-1.tst\";\n   std::ifstream if01(str_lit01);\n   std::ifstream if02(str_lit01);\n   std::ifstream if03(str_lit01);"}]}