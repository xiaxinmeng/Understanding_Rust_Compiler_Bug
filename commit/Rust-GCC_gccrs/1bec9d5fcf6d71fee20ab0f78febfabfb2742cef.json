{"sha": "1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlYzlkNWZjZjZkNzFmZWUyMGFiMGY3OGZlYmZhYmZiMjc0MmNlZg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-10-22T16:36:22Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-10-22T16:36:22Z"}, "message": "c1x --> c11.\n\nFrom-SVN: r203927", "tree": {"sha": "0beac7589588e1af641fafb6930c53aecfd7d54b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0beac7589588e1af641fafb6930c53aecfd7d54b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/comments", "author": null, "committer": null, "parents": [{"sha": "574733d33500dd8e9e14a93507ccacb00dee63ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574733d33500dd8e9e14a93507ccacb00dee63ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/574733d33500dd8e9e14a93507ccacb00dee63ce"}], "stats": {"total": 108, "additions": 54, "deletions": 54}, "files": [{"sha": "e0058c3800760dbdcbbc9dcf78799f66f230634b", "filename": "gcc/testsuite/gcc.dg/c1x-align-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X alignment support.  Test valid code.  */\n+/* Test C11 alignment support.  Test valid code.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n #include <stddef.h>\n "}, {"sha": "a1750ac547a14bcb0951e7d56a1f79017d46e057", "filename": "gcc/testsuite/gcc.dg/c1x-align-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-2.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X alignment support.  Test valid code using stdalign.h.  */\n+/* Test C11 alignment support.  Test valid code using stdalign.h.  */\n /* { dg-do run } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n #include <stdalign.h>\n #include <stddef.h>"}, {"sha": "39b81ef6f57511666e7111b0aee2a42d0cfb06c9", "filename": "gcc/testsuite/gcc.dg/c1x-align-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-3.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X alignment support.  Test invalid code.  */\n+/* Test C11 alignment support.  Test invalid code.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n int a = _Alignof (void (void)); /* { dg-error \"function\" } */\n struct s;"}, {"sha": "6377db6edf3190333b542b0c9ca6e4e658d72e69", "filename": "gcc/testsuite/gcc.dg/c1x-align-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-4.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,7 +1,7 @@\n-/* Test C1X alignment support.  Test reducing alignment (assumes there\n+/* Test C11 alignment support.  Test reducing alignment (assumes there\n    are at least some alignment constraints).  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n /* { dg-skip-if \"no alignment constraints\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n \n #include <stddef.h>"}, {"sha": "c8e475120f8506d4b689a18c0f01c633502dfeff", "filename": "gcc/testsuite/gcc.dg/c1x-align-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-align-5.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X alignment support.  Test invalid code.  */\n+/* Test C11 alignment support.  Test invalid code.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n void foo (int []);\n void bar1 (int [_Alignas (double) 10]); /* { dg-error \"expected expression before\" } */"}, {"sha": "779ae66b7e1c743ca8381be37acc320b7d76dd93", "filename": "gcc/testsuite/gcc.dg/c1x-anon-struct-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test for anonymous structures and unions in C1X.  */\n+/* Test for anonymous structures and unions in C11.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n #include <stddef.h>\n "}, {"sha": "d954b4b12703b6f0985627c192ee05bea1d746b5", "filename": "gcc/testsuite/gcc.dg/c1x-anon-struct-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-2.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,7 +1,7 @@\n-/* Test for anonymous structures and unions in C1X.  Test for invalid\n+/* Test for anonymous structures and unions in C11.  Test for invalid\n    cases.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n typedef struct s0\n {"}, {"sha": "05cc3660cb8b2fd1feddd437296b81df040d35f6", "filename": "gcc/testsuite/gcc.dg/c1x-anon-struct-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,7 +1,7 @@\n-/* Test for anonymous structures and unions in C1X.  Test for invalid\n+/* Test for anonymous structures and unions in C11.  Test for invalid\n    cases: typedefs disallowed by N1549.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n typedef struct\n {"}, {"sha": "376c44d3e781845bd9a6346e1d458765d6d4d947", "filename": "gcc/testsuite/gcc.dg/c1x-float-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-float-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,9 +1,9 @@\n-/* Test for <float.h> C1X macros.  */\n+/* Test for <float.h> C11 macros.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n-/* This test checks that the C1X macros are defined;\n+/* This test checks that the C11 macros are defined;\n    it does not check the correctness of their values.  */\n \n #include <float.h>"}, {"sha": "e92c5ae0456c0ac9665715183942f416b9d146f1", "filename": "gcc/testsuite/gcc.dg/c1x-noreturn-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X _Noreturn.  Test valid code.  */\n+/* Test C11 _Noreturn.  Test valid code.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n _Noreturn void exit (int);\n "}, {"sha": "951d028f7ae7b576946c31e9e0d295aff7e4820c", "filename": "gcc/testsuite/gcc.dg/c1x-noreturn-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-2.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X _Noreturn.  Test valid code using stdnoreturn.h.  */\n+/* Test C11 _Noreturn.  Test valid code using stdnoreturn.h.  */\n /* { dg-do run } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n #include <stdnoreturn.h>\n "}, {"sha": "168d012a3f00aa7044ba3e60bcce2e9a7ba042aa", "filename": "gcc/testsuite/gcc.dg/c1x-noreturn-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-3.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X _Noreturn.  Test _Noreturn on main, hosted.  */\n+/* Test C11 _Noreturn.  Test _Noreturn on main, hosted.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors -fhosted\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors -fhosted\" } */\n \n _Noreturn void exit (int);\n "}, {"sha": "a92a1140f676c0edd846d0e5da44a9c8bf29cb1b", "filename": "gcc/testsuite/gcc.dg/c1x-noreturn-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-4.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X _Noreturn.  Test _Noreturn on main, freestanding.  */\n+/* Test C11 _Noreturn.  Test _Noreturn on main, freestanding.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors -ffreestanding\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors -ffreestanding\" } */\n \n _Noreturn void exit (int);\n "}, {"sha": "d1c0949f32ba0e1ffbea39fff010c64d5ff2ea93", "filename": "gcc/testsuite/gcc.dg/c1x-noreturn-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-noreturn-5.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X _Noreturn.  Test invalid uses.  */\n+/* Test C11 _Noreturn.  Test invalid uses.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n _Noreturn struct s; /* { dg-error \"empty declaration\" } */\n "}, {"sha": "8c24165877771db579ff47551cd4c28028c76668", "filename": "gcc/testsuite/gcc.dg/c1x-pointer-float-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-pointer-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-pointer-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-pointer-float-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X constraint against pointer / floating-point casts.  */\n+/* Test C11 constraint against pointer / floating-point casts.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n void *p;\n float f;"}, {"sha": "9209a7a4076dbd5f99b09e1efd928de34fa0bcd5", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X static assertions.  Valid assertions.  */\n+/* Test C11 static assertions.  Valid assertions.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n _Static_assert (1, \"foo\");\n "}, {"sha": "de2f573cb8c9c698a268fed7b166277b01048487", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-2.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X static assertions.  Failed assertions.  */\n+/* Test C11 static assertions.  Failed assertions.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n _Static_assert (0, \"assert1\"); /* { dg-error \"static assertion failed: \\\"assert1\\\"\" } */\n "}, {"sha": "79448a533e539f02b36f7d91066651cbeef36896", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-3.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X static assertions.  Invalid assertions.  */\n+/* Test C11 static assertions.  Invalid assertions.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n _Static_assert (__INT_MAX__ * 2, \"overflow\"); /* { dg-warning \"integer overflow in expression\" } */\n /* { dg-error \"overflow in constant expression\" \"error\" { target *-*-* } 5 } */"}, {"sha": "ddab440ff48c9fb8a154b13c76e1d1ba271bfe6f", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-4.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test C1X static assertions.  More invalid assertions.  */\n+/* Test C11 static assertions.  More invalid assertions.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n /* Static assertions not valid in old-style parameter declarations\n    because declarations there must have declarators.  */"}, {"sha": "e88b8167a198161327012a4b709fd1cfd921c842", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-5.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,5 +1,5 @@\n-/* Test C1X static assertions.  Non-constant-expression without -pedantic.  */\n+/* Test C11 static assertions.  Non-constant-expression without -pedantic.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x\" } */\n+/* { dg-options \"-std=c11\" } */\n \n _Static_assert ((int)(1.0 + 1.0), \"non-constant-expression\");"}, {"sha": "ac7e14114dbe5f1de026e703a82e681284203a45", "filename": "gcc/testsuite/gcc.dg/c1x-static-assert-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-static-assert-6.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,5 +1,5 @@\n-/* Test C1X static assertions.  Non-constant-expression with -pedantic.  */\n+/* Test C11 static assertions.  Non-constant-expression with -pedantic.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic\" } */\n+/* { dg-options \"-std=c11 -pedantic\" } */\n \n _Static_assert ((int)(1.0 + 1.0), \"non-constant-expression\"); /* { dg-warning \"not an integer constant expression\" } */"}, {"sha": "3224ba5a418ebffd9d548dfcb739c42964d106af", "filename": "gcc/testsuite/gcc.dg/c1x-typedef-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-typedef-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-typedef-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-typedef-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,8 +1,8 @@\n-/* Test typedef redeclaration in C1X.  */\n+/* Test typedef redeclaration in C11.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n-/* C1X permits typedefs to be redeclared to the same type, but not to\n+/* C11 permits typedefs to be redeclared to the same type, but not to\n    different-but-compatible types, and not when the type is variably\n    modified.  */\n "}, {"sha": "9f86bea826b75ca6dac55ddecea5b22aa231c58c", "filename": "gcc/testsuite/gcc.dg/c1x-uni-string-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,10 +1,10 @@\n-/* Test Unicode strings in C1X.  Test valid code.  */\n+/* Test Unicode strings in C11.  Test valid code.  */\n /* { dg-do run } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n /* More thorough tests are in c-c++-common/raw-string-*.c; this test\n    verifies the particular subset (Unicode but not raw strings) that\n-   is in C1X.  */\n+   is in C11.  */\n \n typedef __CHAR16_TYPE__ char16_t;\n typedef __CHAR32_TYPE__ char32_t;"}, {"sha": "583c38a87e2955ed47f2cbe3e1f4f703db197367", "filename": "gcc/testsuite/gcc.dg/c1x-uni-string-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-uni-string-2.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n-/* Test Unicode strings in C1X.  Test constraint.  */\n+/* Test Unicode strings in C11.  Test constraint.  */\n /* { dg-do compile } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n \n const void *p1 = L\"a\" u8\"b\"; /* { dg-error \"concatenation\" } */\n const void *p2 = L\"a\" \"b\" u8\"c\"; /* { dg-error \"concatenation\" } */"}, {"sha": "649cddfa071eb46988f82d031ed84c3e2bed585a", "filename": "gcc/testsuite/gcc.dg/c90-float-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-float-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -3,7 +3,7 @@\n /* { dg-do preprocess } */\n /* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n \n-/* This test checks that the C90 macros (but not the C99 or C1X ones)\n+/* This test checks that the C90 macros (but not the C99 or C11 ones)\n    are defined; it does not check the correctness of their values.  */\n \n #include <float.h>"}, {"sha": "7ee87a564a46fe3129da10618630a4b23b5184c5", "filename": "gcc/testsuite/gcc.dg/c99-float-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-float-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -3,7 +3,7 @@\n /* { dg-do preprocess } */\n /* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n \n-/* This test checks that the C99 macros (but not the C1X ones) are defined;\n+/* This test checks that the C99 macros (but not the C11 ones) are defined;\n    it does not check the correctness of their values.  */\n \n #include <float.h>"}, {"sha": "0d26c9cc707dc3a9acfcfee3963986372e893a75", "filename": "gcc/testsuite/gcc.dg/torture/builtin-complex-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-complex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bec9d5fcf6d71fee20ab0f78febfabfb2742cef/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-complex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-complex-1.c?ref=1bec9d5fcf6d71fee20ab0f78febfabfb2742cef", "patch": "@@ -1,6 +1,6 @@\n /* Test __builtin_complex semantics.  */\n /* { dg-do run } */\n-/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n /* { dg-add-options ieee } */\n \n extern void exit (int);"}]}