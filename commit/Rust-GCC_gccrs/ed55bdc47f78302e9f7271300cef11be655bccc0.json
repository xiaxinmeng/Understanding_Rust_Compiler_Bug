{"sha": "ed55bdc47f78302e9f7271300cef11be655bccc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ1NWJkYzQ3Zjc4MzAyZTlmNzI3MTMwMGNlZjExYmU2NTViY2NjMA==", "commit": {"author": {"name": "Warren Levy", "email": "warrenl@redhat.com", "date": "2000-12-28T05:55:56Z"}, "committer": {"name": "Warren Levy", "email": "warrenl@gcc.gnu.org", "date": "2000-12-28T05:55:56Z"}, "message": "re PR libgcj/1358 (java.util.Date.toString() doesn't seem to behave properly.)\n\n\tFix for PR libgcj/1358:\n\t* java/lang/System.java: Update Copyright date properly.\n\t* java/util/Calendar.java: Fix typo in comment.\n\t(set): Set 24-hour clock hour instead of 12-hour clock hour.\n\t* java/util/GregorianCalendar.java (GregorianCalendar): Properly\n\tinitialize times.  Spec says to set H:M:S values to zero only if\n\ta date is given.\n\t* java/util/TimeZone.java (getDefaultDisplayName): Casts to char\n\tneeded for evaluating numbers '0' to '9' in printouts of GMT offsets.\n\t* java/util/natGregorianCalendar.cc (computeTime): Properly handle\n\ttimezones and GMT offsets, being careful to account for units of\n\tmilliseconds vs. seconds.\n\nFrom-SVN: r38508", "tree": {"sha": "4527372c96022ef87de67514404688cc3687737d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4527372c96022ef87de67514404688cc3687737d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed55bdc47f78302e9f7271300cef11be655bccc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed55bdc47f78302e9f7271300cef11be655bccc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed55bdc47f78302e9f7271300cef11be655bccc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed55bdc47f78302e9f7271300cef11be655bccc0/comments", "author": null, "committer": null, "parents": [{"sha": "5da1e2c4897295fb32739724224a86c866dff1d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da1e2c4897295fb32739724224a86c866dff1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da1e2c4897295fb32739724224a86c866dff1d5"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "abe880dd8a8b076ca343a378ca6f87d5b63c7598", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -1,3 +1,18 @@\n+2000-12-27  Warren Levy  <warrenl@redhat.com>\n+\n+\tFix for PR libgcj/1358:\n+\t* java/lang/System.java: Update Copyright date properly.\n+\t* java/util/Calendar.java: Fix typo in comment.\n+\t(set): Set 24-hour clock hour instead of 12-hour clock hour.\n+\t* java/util/GregorianCalendar.java (GregorianCalendar): Properly\n+\tinitialize times.  Spec says to set H:M:S values to zero only if\n+\ta date is given.\n+\t* java/util/TimeZone.java (getDefaultDisplayName): Casts to char\n+\tneeded for evaluating numbers '0' to '9' in printouts of GMT offsets.\n+\t* java/util/natGregorianCalendar.cc (computeTime): Properly handle\n+\ttimezones and GMT offsets, being careful to account for units of\n+\tmilliseconds vs. seconds.\n+\n 2000-12-28  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/lang/natClass.cc (_Jv_IsAssignableFrom): Primitive TYPEs can"}, {"sha": "ab1ca99d90bd057168458705e302bb7c6d447201", "filename": "libjava/java/lang/System.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Flang%2FSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Flang%2FSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSystem.java?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -1,6 +1,6 @@\n // System.java - System-specific info.\n \n-/* Copyright (C) 1998, 1999  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n "}, {"sha": "05c3f633eb1530283e0b2ee8b3a2ac05f33d1970", "filename": "libjava/java/util/Calendar.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FCalendar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FCalendar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCalendar.java?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -257,7 +257,7 @@ public abstract class Calendar implements Serializable, Cloneable\n    */\n   public static final int DECEMBER = 11;\n   /**\n-   * Constant representing Undecimber. This is an artifical name useful\n+   * Constant representing Undecimber. This is an artificial name useful\n    * for lunar calendars.\n    */\n   public static final int UNDECIMBER = 12;\n@@ -581,9 +581,9 @@ public final void set(int year, int month, int date)\n   public final void set(int year, int month, int date, int hour, int minute)\n   {\n     set(year, month, date);\n-    fields[HOUR] = hour;\n+    fields[HOUR_OF_DAY] = hour;\n     fields[MINUTE] = minute;\n-    isSet[HOUR] = isSet[MINUTE] = true;\n+    isSet[HOUR_OF_DAY] = isSet[MINUTE] = true;\n   }\n \n   /**"}, {"sha": "cc06c2919d2a0caa1c63edb4a7cea1eeed67d19d", "filename": "libjava/java/util/GregorianCalendar.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FGregorianCalendar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FGregorianCalendar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FGregorianCalendar.java?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -115,23 +115,20 @@ public GregorianCalendar (TimeZone zone, Locale locale)\n   public GregorianCalendar (int year, int month, int date)\n   {\n     this();\n-    setDefaultTime ();\n-    set (year, month, date);\n+    set (year, month, date, 0, 0, 0);\n   }\n \n   public GregorianCalendar (int year, int month, int date,\n \t\t\t    int hour, int minute)\n   {\n     this();\n-    setDefaultTime ();\n-    set (year, month, date, hour, minute);\n+    set (year, month, date, hour, minute, 0);\n   }\n \n   public GregorianCalendar (int year, int month, int date,\n \t\t\t    int hour, int minute, int second)\n   {\n     this();\n-    setDefaultTime ();\n     set (year, month, date, hour, minute, second);\n   }\n "}, {"sha": "0b9ea06bcea9b0d8482981bb3bc0d714d0530eab", "filename": "libjava/java/util/TimeZone.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTimeZone.java?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -896,8 +896,9 @@ private String getDefaultDisplayName(boolean dst)\n     int hours = offset / 60;\n     int minutes = offset % 60;\n \n-    sb.append('0' + hours / 10).append('0' + hours % 10).append(':');\n-    sb.append('0' + minutes / 10).append('0' + minutes % 10);\n+    sb.append((char) ('0' + hours / 10)).append((char) ('0' + hours % 10));\n+    sb.append(':');\n+    sb.append((char) ('0' + minutes / 10)).append((char) ('0' + minutes % 10));\n     return sb.toString();\n   }\n "}, {"sha": "58ee46339541a0209de3378cdeb626a056ccb5b0", "filename": "libjava/java/util/natGregorianCalendar.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed55bdc47f78302e9f7271300cef11be655bccc0/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc?ref=ed55bdc47f78302e9f7271300cef11be655bccc0", "patch": "@@ -39,16 +39,17 @@ java::util::GregorianCalendar::computeTime ()\n   // Adjust for local timezone (introduced by mktime) and our\n   // timezone.\n #if defined (STRUCT_TM_HAS_GMTOFF)\n-  t += tim.tm_gmtoff;\n+  t -= tim.tm_gmtoff;\n #elif defined (HAVE_TIMEZONE)\n-  t -= timezone;\n+  t += timezone;\n #endif\n-  java::util::TimeZone *zone = getTimeZone ();\n-  t += zone->getRawOffset();\n-\n   // Adjust for milliseconds.\n   time = t * (jlong) 1000 + elements(fields)[MILLISECOND];\n \n+  // Now adjust for the real timezone, i.e. our timezone, which is in millis.\n+  java::util::TimeZone *zone = getTimeZone ();\n+  time += zone->getRawOffset();\n+\n   isTimeSet = true;\n }\n "}]}