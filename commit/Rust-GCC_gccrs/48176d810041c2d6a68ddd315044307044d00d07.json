{"sha": "48176d810041c2d6a68ddd315044307044d00d07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgxNzZkODEwMDQxYzJkNmE2OGRkZDMxNTA0NDMwNzA0NGQwMGQwNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-04T11:08:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-04T11:08:54Z"}, "message": "re PR middle-end/45176 (restrict qualifier is not used in a manually unrolled loop)\n\n2010-08-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/45176\n\t* expr.c (expand_expr_real_1): Also preserve TARGET_MEM_REF\n\tpoints-to set for original MEM_REF.\n\nFrom-SVN: r162862", "tree": {"sha": "4d833e374091660110b548adb01b088d67e3b7a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d833e374091660110b548adb01b088d67e3b7a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48176d810041c2d6a68ddd315044307044d00d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48176d810041c2d6a68ddd315044307044d00d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48176d810041c2d6a68ddd315044307044d00d07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48176d810041c2d6a68ddd315044307044d00d07/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84d77ca61a12ab677c9b63d8cb78b07094f0cd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d77ca61a12ab677c9b63d8cb78b07094f0cd93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d77ca61a12ab677c9b63d8cb78b07094f0cd93"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "c9b88a9f0586828c517115ad66ff20262d196af5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48176d810041c2d6a68ddd315044307044d00d07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48176d810041c2d6a68ddd315044307044d00d07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48176d810041c2d6a68ddd315044307044d00d07", "patch": "@@ -1,3 +1,9 @@\n+2010-08-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/45176\n+\t* expr.c (expand_expr_real_1): Also preserve TARGET_MEM_REF\n+\tpoints-to set for original MEM_REF.\n+\n 2010-08-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-ccp.c (get_constant_value): New function."}, {"sha": "9134d6215b2ced5578f94170e691c9fbf83128fd", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48176d810041c2d6a68ddd315044307044d00d07/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48176d810041c2d6a68ddd315044307044d00d07/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=48176d810041c2d6a68ddd315044307044d00d07", "patch": "@@ -8665,7 +8665,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \tset_mem_addr_space (temp, as);\n \tbase = get_base_address (TMR_ORIGINAL (exp));\n \tif (base\n-\t    && INDIRECT_REF_P (base)\n+\t    && (INDIRECT_REF_P (base) || TREE_CODE (base) == MEM_REF)\n \t    && TMR_BASE (exp)\n \t    && TREE_CODE (TMR_BASE (exp)) == SSA_NAME\n \t    && POINTER_TYPE_P (TREE_TYPE (TMR_BASE (exp))))"}]}