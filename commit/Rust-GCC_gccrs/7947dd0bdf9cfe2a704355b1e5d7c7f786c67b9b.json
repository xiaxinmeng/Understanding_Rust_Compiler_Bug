{"sha": "7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk0N2RkMGJkZjljZmUyYTcwNDM1NWIxZTVkN2M3Zjc4NmM2N2I5Yg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-05-13T08:29:14Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-05-13T08:29:14Z"}, "message": "re PR target/65103 ([i386] GOTOFF relocation is not propagated into address expression)\n\ngcc/\n\n\tPR target/65103\n\t* config/i386/i386.c (ix86_rtx_costs): We want to propagate\n\tlink time constants into adress expressions and therefore set\n\ttheir cost to 0.\n\ngcc/testsuite/\n\n\tPR target/65103\n\t* gcc.target/i386/pr65103-3.c: New.\n\nFrom-SVN: r223119", "tree": {"sha": "b20f108b8c558f2565a2e59340297658b4211432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b20f108b8c558f2565a2e59340297658b4211432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f27127ceddb656b988c21da5f3ef9fa8a7f44afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27127ceddb656b988c21da5f3ef9fa8a7f44afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27127ceddb656b988c21da5f3ef9fa8a7f44afe"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "2bb07a570233ea219646633440afb31683ce0795", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "patch": "@@ -1,3 +1,10 @@\n+2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/65103\n+\t* config/i386/i386.c (ix86_rtx_costs): We want to propagate\n+\tlink time constants into adress expressions and therefore set\n+\ttheir cost to 0.\n+\n 2015-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/66112"}, {"sha": "de333d88a880cdfb9885e2fc2fe07535c1f7ac8e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "patch": "@@ -42006,7 +42006,9 @@ ix86_rtx_costs (rtx x, int code_i, int outer_code_i, int opno, int *total,\n \t       && !(TARGET_64BIT\n \t\t    && (GET_CODE (x) == LABEL_REF\n \t\t\t|| (GET_CODE (x) == SYMBOL_REF\n-\t\t\t    && SYMBOL_REF_LOCAL_P (x)))))\n+\t\t\t    && SYMBOL_REF_LOCAL_P (x))))\n+\t       /* Use 0 cost for CONST to improve its propagation.  */\n+\t       && (TARGET_64BIT || GET_CODE (x) != CONST))\n \t*total = 1;\n       else\n \t*total = 0;"}, {"sha": "b5f96f3693ad6f057987c04535968d52c01d1535", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "patch": "@@ -1,3 +1,8 @@\n+2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/65103\n+\t* gcc.target/i386/pr65103-3.c: New.\n+\n 2015-05-13  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/ipa/pr65557.C: Remove unnecessary dump flag."}, {"sha": "eddf20bc04be3d6410799eff15435a246d6f539a", "filename": "gcc/testsuite/gcc.target/i386/pr65103-3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65103-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65103-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65103-3.c?ref=7947dd0bdf9cfe2a704355b1e5d7c7f786c67b9b", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-require-effective-target pie } */\n+/* { dg-options \"-O2 -fPIE\" } */\n+/* { dg-final { scan-assembler-not \"GOTOFF,\" } } */\n+\n+static int *data[100];\n+\n+void test (long a, long b)\n+{\n+  do\n+    {\n+      if( a < b )\n+        {\n+\t  data[a] = data[b];\n+\t  a++;\n+        }\n+    }\n+  while (a <= b);\n+}"}]}