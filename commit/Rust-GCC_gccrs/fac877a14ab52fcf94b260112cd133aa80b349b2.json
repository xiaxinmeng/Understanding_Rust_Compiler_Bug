{"sha": "fac877a14ab52fcf94b260112cd133aa80b349b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjODc3YTE0YWI1MmZjZjk0YjI2MDExMmNkMTMzYWE4MGIzNDliMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2017-06-29T16:01:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-29T16:01:38Z"}, "message": "Makefile.am (MOSTLYCLEANFILES): Remove testing files and logs.\n\n\t* Makefile.am (MOSTLYCLEANFILES): Remove testing files and logs.\n\t(mostlyclean-local): Remove check-runtime-dir, cgo-test-dir,\n\tcarchive-test-dir.\n\t(ECHO_ENV): Define.\n\t(check-go-tool): Depend on cgo.  Write command to testlog.\n\t(check-runtime): New target.\n\t(check-cgo-test): New target.\n\t(check-carchive-test): New target.\n\t(check): Depend on check-runtime, check-cgo-test,\n\tcheck-carchive-test.  Add @ to prettify output.\n\t(.PHONY): Add check-runtime, check-cgo-test, check-carchive-test.\n\t* Makefile.in: Rebuild.\n\nFrom-SVN: r249799", "tree": {"sha": "efb34ee072bd28fe87601c63560dec0edab90481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efb34ee072bd28fe87601c63560dec0edab90481"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac877a14ab52fcf94b260112cd133aa80b349b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac877a14ab52fcf94b260112cd133aa80b349b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac877a14ab52fcf94b260112cd133aa80b349b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac877a14ab52fcf94b260112cd133aa80b349b2/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5898daf4cd10d161d6f768cd31fb26e1dd60051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5898daf4cd10d161d6f768cd31fb26e1dd60051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5898daf4cd10d161d6f768cd31fb26e1dd60051"}], "stats": {"total": 210, "additions": 173, "deletions": 37}, "files": [{"sha": "76028962dc6a5b1f4129f887f9f3c5f7ae2bffdb", "filename": "gotools/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FChangeLog?ref=fac877a14ab52fcf94b260112cd133aa80b349b2", "patch": "@@ -1,3 +1,18 @@\n+2017-06-29  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* Makefile.am (MOSTLYCLEANFILES): Remove testing files and logs.\n+\t(mostlyclean-local): Remove check-runtime-dir, cgo-test-dir,\n+\tcarchive-test-dir.\n+\t(ECHO_ENV): Define.\n+\t(check-go-tool): Depend on cgo.  Write command to testlog.\n+\t(check-runtime): New target.\n+\t(check-cgo-test): New target.\n+\t(check-carchive-test): New target.\n+\t(check): Depend on check-runtime, check-cgo-test,\n+\tcheck-carchive-test.  Add @ to prettify output.\n+\t(.PHONY): Add check-runtime, check-cgo-test, check-carchive-test.\n+\t* Makefile.in: Rebuild.\n+\n 2017-06-26  Ian Lance Taylor  <iant@golang.org>\n \n \t* Makefile.am (s-zdefaultcc): Don't record $(bindir) for defaultCC"}, {"sha": "787a3c3d09483648ec5aecbd81086c588768955f", "filename": "gotools/Makefile.am", "status": "modified", "additions": 78, "deletions": 18, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.am?ref=fac877a14ab52fcf94b260112cd133aa80b349b2", "patch": "@@ -44,6 +44,7 @@ GOLINK = $(GOCOMPILER) $(GOCFLAGS) $(AM_GOCFLAGS) $(LDFLAGS) $(AM_LDFLAGS) -o $@\n \n libgosrcdir = $(srcdir)/../libgo/go\n cmdsrcdir = $(libgosrcdir)/cmd\n+libgomiscdir = $(srcdir)/../libgo/misc\n \n go_cmd_go_files = \\\n \t$(cmdsrcdir)/go/alldocs.go \\\n@@ -106,7 +107,12 @@ s-zdefaultcc: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change zdefaultcc.go.tmp zdefaultcc.go\n \t$(STAMP) $@ \n \n-MOSTLYCLEANFILES = zdefaultcc.go s-zdefaultcc\n+MOSTLYCLEANFILES = \\\n+\tzdefaultcc.go s-zdefaultcc \\\n+\tcheck-gccgo gotools.head *-testlog gotools.sum gotools.log\n+\n+mostlyclean-local:\n+\trm -rf check-go-dir check-runtime-dir cgo-test-dir carchive-test-dir\n \n if NATIVE\n \n@@ -156,6 +162,7 @@ check-gccgo: Makefile\n \tchmod +x $@\n \n # CHECK_ENV sets up the environment to run the newly built go tool.\n+# If you change this, change ECHO_ENV, below.\n CHECK_ENV = \\\n \tPATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n \texport PATH; \\\n@@ -169,25 +176,81 @@ CHECK_ENV = \\\n \tLD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n \texport LD_LIBRARY_PATH;\n \n+# ECHO_ENV is a variant of CHECK_ENV to put into a testlog file.\n+# It assumes that abs_libgodir is set.\n+ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`\n+\n # check-go-tools runs `go test cmd/go` in our environment.\n-check-go-tool: go$(EXEEXT) check-head check-gccgo\n-\trm -rf check-go-dir\n+check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+\trm -rf check-go-dir cmd_go-testlog\n \t$(MKDIR_P) check-go-dir/src/cmd/go\n \tcp $(cmdsrcdir)/go/*.go check-go-dir/src/cmd/go/\n \tcp $(libgodir)/zstdpkglist.go check-go-dir/src/cmd/go/\n \tcp zdefaultcc.go check-go-dir/src/cmd/go/\n \tcp -r $(cmdsrcdir)/go/testdata check-go-dir/src/cmd/go/\n+\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+\tabs_checkdir=`cd check-go-dir && $(PWD_COMMAND)`; \\\n+\techo \"cd check-go-dir/src/cmd/go && $(ECHO_ENV) GOPATH=$${abs_checkdir} $(abs_builddir)/go$(EXEEXT) test -test.short -test.v\" > cmd_go-testlog\n \t$(CHECK_ENV) \\\n \tGOPATH=`cd check-go-dir && $(PWD_COMMAND)`; \\\n \texport GOPATH; \\\n \t(cd check-go-dir/src/cmd/go && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) > cmd_go-testlog 2>&1 || true\n \tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n \n+# check-runtime runs `go test runtime` in our environment.\n+# The runtime package is also tested as part of libgo,\n+# but the runtime tests use the go tool heavily, so testing\n+# here too will catch more problems.\n+check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+\trm -rf check-runtime-dir runtime-testlog\n+\t$(MKDIR_P) check-runtime-dir\n+\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+\tLD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n+\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n+\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n+\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' -test.v\" > runtime-testlog\n+\t$(CHECK_ENV) \\\n+\tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n+\texport GC; \\\n+\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n+\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n+\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" -test.v >> runtime-testlog 2>&1 || true\n+\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n+# check-cgo-test runs `go test misc/cgo/test` in our environment.\n+check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+\trm -rf cgo-test-dir cgo-testlog\n+\t$(MKDIR_P) cgo-test-dir/misc/cgo\n+\tcp -r $(libgomiscdir)/cgo/test cgo-test-dir/misc/cgo/\n+\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+\techo \"cd cgo-test-dir/misc/cgo/test && $(ECHO_ENV) GOTRACEBACK=2 $(abs_builddir)/go$(EXEEXT) test -test.short -test.v\" > cgo-testlog\n+\t$(CHECK_ENV) \\\n+\tGOTRACEBACK=2; \\\n+\texport GOTRACEBACK; \\\n+\t(cd cgo-test-dir/misc/cgo/test && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cgo-testlog 2>&1 || true\n+\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n+# check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n+# in our environment.\n+check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+\trm -rf carchive-test-dir carchive-testlog\n+\t$(MKDIR_P) carchive-test-dir/misc/cgo\n+\tcp -r $(libgomiscdir)/cgo/testcarchive carchive-test-dir/misc/cgo/\n+\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+\techo \"cd carchive-test-dir/misc/cgo/testcarchive && $(ECHO_ENV) LIBRARY_PATH=`echo $${abs_libgodir}/.libs` $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go\" > carchive-testlog\n+\t$(CHECK_ENV) \\\n+\tLIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n+\texport LIBRARY_PATH; \\\n+\t(cd carchive-test-dir/misc/cgo/testcarchive && $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go) >> carchive-testlog 2>&1 || true\n+\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n # The check targets runs the tests and assembles the output files.\n-check: check-head check-go-tool\n-\tmv gotools.head gotools.sum\n-\tcp gotools.sum gotools.log\n-\tfor file in cmd_go-testlog; do \\\n+check: check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n+\t@mv gotools.head gotools.sum\n+\t@cp gotools.sum gotools.log\n+\t@for file in cmd_go-testlog runtime-testlog cgo-testlog carchive-testlog; do \\\n \t  testname=`echo $${file} | sed -e 's/-testlog//' -e 's|_|/|'`; \\\n \t  echo \"Running $${testname}\" >> gotools.sum; \\\n \t  echo \"Running $${testname}\" >> gotools.log; \\\n@@ -196,24 +259,24 @@ check: check-head check-go-tool\n \tdone\n \t@echo >> gotools.sum\n \t@echo \"\t\t=== gotools Summary ===\" >> gotools.sum\n-\tpass=`grep -c '^PASS' gotools.sum`; \\\n+\t@pass=`grep -c '^PASS' gotools.sum`; \\\n \tif test \"$${pass}\" -ne \"0\"; then \\\n \t  echo \"# of expected passes\t\t$${pass}\" >> gotools.sum; \\\n \tfi\n-\tfail=`grep -c '^FAIL' gotools.sum`; \\\n+\t@fail=`grep -c '^FAIL' gotools.sum`; \\\n \tif test \"$${fail}\" -ne \"0\"; then \\\n \t  echo \"# of unexpected failures\t$${fail}\" >> gotools.sum; \\\n \tfi\n-\tuntested=`grep -c '^UNTESTED' gotools.sum`; \\\n+\t@untested=`grep -c '^UNTESTED' gotools.sum`; \\\n \tif test \"$${untested}\" -ne \"0\"; then \\\n \t  echo \"# of untested testcases\t\t$${untested}\" >> gotools.sum; \\\n \tfi\n-\techo `echo $(GOC_FOR_TARGET) | sed -e 's/ .*//'`  `$(GOC_FOR_TARGET) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> gotools.sum\n-\techo >> gotools.log\n-\techo \"runtest completed at `date`\" >> gotools.log\n-\tif grep '^FAIL' gotools.sum >/dev/null 2>&1; then exit 1; fi\n+\t@echo `echo $(GOC_FOR_TARGET) | sed -e 's/ .*//'`  `$(GOC_FOR_TARGET) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> gotools.sum\n+\t@echo >> gotools.log\n+\t@echo \"runtest completed at `date`\" >> gotools.log\n+\t@if grep '^FAIL' gotools.sum >/dev/null 2>&1; then exit 1; fi\n \n-.PHONY: check check-head check-go-tool\n+.PHONY: check check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n \n else\n \n@@ -224,6 +287,3 @@ else\n # the go/build package.  Figure this out later.\n \n endif\n-\n-mostlyclean-local:\n-\trm -rf check-go-dir"}, {"sha": "8f4eefabda43ac2ea0541e42c26caceaa568e9ec", "filename": "gotools/Makefile.in", "status": "modified", "additions": 80, "deletions": 19, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac877a14ab52fcf94b260112cd133aa80b349b2/gotools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.in?ref=fac877a14ab52fcf94b260112cd133aa80b349b2", "patch": "@@ -263,6 +263,7 @@ AM_LDFLAGS = -L $(libgodir) -L $(libgodir)/.libs\n GOLINK = $(GOCOMPILER) $(GOCFLAGS) $(AM_GOCFLAGS) $(LDFLAGS) $(AM_LDFLAGS) -o $@\n libgosrcdir = $(srcdir)/../libgo/go\n cmdsrcdir = $(libgosrcdir)/cmd\n+libgomiscdir = $(srcdir)/../libgo/misc\n go_cmd_go_files = \\\n \t$(cmdsrcdir)/go/alldocs.go \\\n \t$(cmdsrcdir)/go/bug.go \\\n@@ -313,7 +314,10 @@ go_cmd_cgo_files = \\\n GCCGO_INSTALL_NAME := $(shell echo gccgo|sed '$(program_transform_name)')\n GCC_INSTALL_NAME := $(shell echo gcc|sed '$(program_transform_name)')\n GXX_INSTALL_NAME := $(shell echo g++|sed '$(program_transform_name)')\n-MOSTLYCLEANFILES = zdefaultcc.go s-zdefaultcc\n+MOSTLYCLEANFILES = \\\n+\tzdefaultcc.go s-zdefaultcc \\\n+\tcheck-gccgo gotools.head *-testlog gotools.sum gotools.log\n+\n \n # For a native build we build the programs using the newly built libgo\n # and install them as regular programs.\n@@ -322,6 +326,7 @@ MOSTLYCLEANFILES = zdefaultcc.go s-zdefaultcc\n @NATIVE_TRUE@man_MANS = go.1 gofmt.1\n \n # CHECK_ENV sets up the environment to run the newly built go tool.\n+# If you change this, change ECHO_ENV, below.\n @NATIVE_TRUE@CHECK_ENV = \\\n @NATIVE_TRUE@\tPATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n @NATIVE_TRUE@\texport PATH; \\\n@@ -335,6 +340,10 @@ MOSTLYCLEANFILES = zdefaultcc.go s-zdefaultcc\n @NATIVE_TRUE@\tLD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n @NATIVE_TRUE@\texport LD_LIBRARY_PATH;\n \n+\n+# ECHO_ENV is a variant of CHECK_ENV to put into a testlog file.\n+# It assumes that abs_libgodir is set.\n+@NATIVE_TRUE@ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`\n all: all-am\n \n .SUFFIXES:\n@@ -582,8 +591,8 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n-@NATIVE_FALSE@install-exec-local:\n @NATIVE_FALSE@uninstall-local:\n+@NATIVE_FALSE@install-exec-local:\n clean: clean-am\n \n clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \\\n@@ -688,6 +697,9 @@ s-zdefaultcc: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change zdefaultcc.go.tmp zdefaultcc.go\n \t$(STAMP) $@ \n \n+mostlyclean-local:\n+\trm -rf check-go-dir check-runtime-dir cgo-test-dir carchive-test-dir\n+\n @NATIVE_TRUE@go$(EXEEXT): $(go_cmd_go_files) zdefaultcc.go $(LIBGODEP)\n @NATIVE_TRUE@\t$(GOLINK) $(go_cmd_go_files) zdefaultcc.go $(LIBS) $(NET_LIBS)\n @NATIVE_TRUE@gofmt$(EXEEXT): $(go_cmd_gofmt_files) $(LIBGODEP)\n@@ -727,24 +739,76 @@ s-zdefaultcc: Makefile\n @NATIVE_TRUE@\tchmod +x $@\n \n # check-go-tools runs `go test cmd/go` in our environment.\n-@NATIVE_TRUE@check-go-tool: go$(EXEEXT) check-head check-gccgo\n-@NATIVE_TRUE@\trm -rf check-go-dir\n+@NATIVE_TRUE@check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@\trm -rf check-go-dir cmd_go-testlog\n @NATIVE_TRUE@\t$(MKDIR_P) check-go-dir/src/cmd/go\n @NATIVE_TRUE@\tcp $(cmdsrcdir)/go/*.go check-go-dir/src/cmd/go/\n @NATIVE_TRUE@\tcp $(libgodir)/zstdpkglist.go check-go-dir/src/cmd/go/\n @NATIVE_TRUE@\tcp zdefaultcc.go check-go-dir/src/cmd/go/\n @NATIVE_TRUE@\tcp -r $(cmdsrcdir)/go/testdata check-go-dir/src/cmd/go/\n+@NATIVE_TRUE@\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\tabs_checkdir=`cd check-go-dir && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\techo \"cd check-go-dir/src/cmd/go && $(ECHO_ENV) GOPATH=$${abs_checkdir} $(abs_builddir)/go$(EXEEXT) test -test.short -test.v\" > cmd_go-testlog\n @NATIVE_TRUE@\t$(CHECK_ENV) \\\n @NATIVE_TRUE@\tGOPATH=`cd check-go-dir && $(PWD_COMMAND)`; \\\n @NATIVE_TRUE@\texport GOPATH; \\\n @NATIVE_TRUE@\t(cd check-go-dir/src/cmd/go && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) > cmd_go-testlog 2>&1 || true\n @NATIVE_TRUE@\tgrep '^--- ' cmd_go-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n \n+# check-runtime runs `go test runtime` in our environment.\n+# The runtime package is also tested as part of libgo,\n+# but the runtime tests use the go tool heavily, so testing\n+# here too will catch more problems.\n+@NATIVE_TRUE@check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@\trm -rf check-runtime-dir runtime-testlog\n+@NATIVE_TRUE@\t$(MKDIR_P) check-runtime-dir\n+@NATIVE_TRUE@\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\tLD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n+@NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n+@NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n+@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+@NATIVE_TRUE@\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' -test.v\" > runtime-testlog\n+@NATIVE_TRUE@\t$(CHECK_ENV) \\\n+@NATIVE_TRUE@\tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n+@NATIVE_TRUE@\texport GC; \\\n+@NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n+@NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n+@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+@NATIVE_TRUE@\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" -test.v >> runtime-testlog 2>&1 || true\n+@NATIVE_TRUE@\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n+# check-cgo-test runs `go test misc/cgo/test` in our environment.\n+@NATIVE_TRUE@check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@\trm -rf cgo-test-dir cgo-testlog\n+@NATIVE_TRUE@\t$(MKDIR_P) cgo-test-dir/misc/cgo\n+@NATIVE_TRUE@\tcp -r $(libgomiscdir)/cgo/test cgo-test-dir/misc/cgo/\n+@NATIVE_TRUE@\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\techo \"cd cgo-test-dir/misc/cgo/test && $(ECHO_ENV) GOTRACEBACK=2 $(abs_builddir)/go$(EXEEXT) test -test.short -test.v\" > cgo-testlog\n+@NATIVE_TRUE@\t$(CHECK_ENV) \\\n+@NATIVE_TRUE@\tGOTRACEBACK=2; \\\n+@NATIVE_TRUE@\texport GOTRACEBACK; \\\n+@NATIVE_TRUE@\t(cd cgo-test-dir/misc/cgo/test && $(abs_builddir)/go$(EXEEXT) test -test.short -test.v) >> cgo-testlog 2>&1 || true\n+@NATIVE_TRUE@\tgrep '^--- ' cgo-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n+# check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n+# in our environment.\n+@NATIVE_TRUE@check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@\trm -rf carchive-test-dir carchive-testlog\n+@NATIVE_TRUE@\t$(MKDIR_P) carchive-test-dir/misc/cgo\n+@NATIVE_TRUE@\tcp -r $(libgomiscdir)/cgo/testcarchive carchive-test-dir/misc/cgo/\n+@NATIVE_TRUE@\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\techo \"cd carchive-test-dir/misc/cgo/testcarchive && $(ECHO_ENV) LIBRARY_PATH=`echo $${abs_libgodir}/.libs` $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go\" > carchive-testlog\n+@NATIVE_TRUE@\t$(CHECK_ENV) \\\n+@NATIVE_TRUE@\tLIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; \\\n+@NATIVE_TRUE@\texport LIBRARY_PATH; \\\n+@NATIVE_TRUE@\t(cd carchive-test-dir/misc/cgo/testcarchive && $(abs_builddir)/go$(EXEEXT) test -test.v carchive_test.go) >> carchive-testlog 2>&1 || true\n+@NATIVE_TRUE@\tgrep '^--- ' carchive-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n+\n # The check targets runs the tests and assembles the output files.\n-@NATIVE_TRUE@check: check-head check-go-tool\n-@NATIVE_TRUE@\tmv gotools.head gotools.sum\n-@NATIVE_TRUE@\tcp gotools.sum gotools.log\n-@NATIVE_TRUE@\tfor file in cmd_go-testlog; do \\\n+@NATIVE_TRUE@check: check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n+@NATIVE_TRUE@\t@mv gotools.head gotools.sum\n+@NATIVE_TRUE@\t@cp gotools.sum gotools.log\n+@NATIVE_TRUE@\t@for file in cmd_go-testlog runtime-testlog cgo-testlog carchive-testlog; do \\\n @NATIVE_TRUE@\t  testname=`echo $${file} | sed -e 's/-testlog//' -e 's|_|/|'`; \\\n @NATIVE_TRUE@\t  echo \"Running $${testname}\" >> gotools.sum; \\\n @NATIVE_TRUE@\t  echo \"Running $${testname}\" >> gotools.log; \\\n@@ -753,34 +817,31 @@ s-zdefaultcc: Makefile\n @NATIVE_TRUE@\tdone\n @NATIVE_TRUE@\t@echo >> gotools.sum\n @NATIVE_TRUE@\t@echo \"\t\t=== gotools Summary ===\" >> gotools.sum\n-@NATIVE_TRUE@\tpass=`grep -c '^PASS' gotools.sum`; \\\n+@NATIVE_TRUE@\t@pass=`grep -c '^PASS' gotools.sum`; \\\n @NATIVE_TRUE@\tif test \"$${pass}\" -ne \"0\"; then \\\n @NATIVE_TRUE@\t  echo \"# of expected passes\t\t$${pass}\" >> gotools.sum; \\\n @NATIVE_TRUE@\tfi\n-@NATIVE_TRUE@\tfail=`grep -c '^FAIL' gotools.sum`; \\\n+@NATIVE_TRUE@\t@fail=`grep -c '^FAIL' gotools.sum`; \\\n @NATIVE_TRUE@\tif test \"$${fail}\" -ne \"0\"; then \\\n @NATIVE_TRUE@\t  echo \"# of unexpected failures\t$${fail}\" >> gotools.sum; \\\n @NATIVE_TRUE@\tfi\n-@NATIVE_TRUE@\tuntested=`grep -c '^UNTESTED' gotools.sum`; \\\n+@NATIVE_TRUE@\t@untested=`grep -c '^UNTESTED' gotools.sum`; \\\n @NATIVE_TRUE@\tif test \"$${untested}\" -ne \"0\"; then \\\n @NATIVE_TRUE@\t  echo \"# of untested testcases\t\t$${untested}\" >> gotools.sum; \\\n @NATIVE_TRUE@\tfi\n-@NATIVE_TRUE@\techo `echo $(GOC_FOR_TARGET) | sed -e 's/ .*//'`  `$(GOC_FOR_TARGET) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> gotools.sum\n-@NATIVE_TRUE@\techo >> gotools.log\n-@NATIVE_TRUE@\techo \"runtest completed at `date`\" >> gotools.log\n-@NATIVE_TRUE@\tif grep '^FAIL' gotools.sum >/dev/null 2>&1; then exit 1; fi\n+@NATIVE_TRUE@\t@echo `echo $(GOC_FOR_TARGET) | sed -e 's/ .*//'`  `$(GOC_FOR_TARGET) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> gotools.sum\n+@NATIVE_TRUE@\t@echo >> gotools.log\n+@NATIVE_TRUE@\t@echo \"runtest completed at `date`\" >> gotools.log\n+@NATIVE_TRUE@\t@if grep '^FAIL' gotools.sum >/dev/null 2>&1; then exit 1; fi\n \n-@NATIVE_TRUE@.PHONY: check check-head check-go-tool\n+@NATIVE_TRUE@.PHONY: check check-head check-go-tool check-runtime check-cgo-test check-carchive-test\n \n # For a non-native build we have to build the programs using a\n # previously built host (or build -> host) Go compiler.  We should\n # only do this if such a compiler is available.  We also need to get\n # the right values for GOARCH and GOOS in the default build context in\n # the go/build package.  Figure this out later.\n \n-mostlyclean-local:\n-\trm -rf check-go-dir\n-\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}]}