{"sha": "173864e8f143d138c2805c03699d8d58b2c970c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczODY0ZThmMTQzZDEzOGMyODA1YzAzNjk5ZDhkNThiMmM5NzBjOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-07-30T08:31:59Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-07-30T08:31:59Z"}, "message": "c-common.c (warn_tautological_cmp): Bail for float types.\n\n\t* c-common.c (warn_tautological_cmp): Bail for float types.\n\n\t* c-c++-common/Wtautological-compare-3.c: New test.\n\nFrom-SVN: r226388", "tree": {"sha": "6d585d350099dc5419318d05edf0701334efd02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d585d350099dc5419318d05edf0701334efd02c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/173864e8f143d138c2805c03699d8d58b2c970c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173864e8f143d138c2805c03699d8d58b2c970c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173864e8f143d138c2805c03699d8d58b2c970c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173864e8f143d138c2805c03699d8d58b2c970c8/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53a19317f40159b3fd96391a87182c8e0c7072c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a19317f40159b3fd96391a87182c8e0c7072c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53a19317f40159b3fd96391a87182c8e0c7072c4"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "d8953942a0a9b83d319e2d0ba41021c069c7287a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=173864e8f143d138c2805c03699d8d58b2c970c8", "patch": "@@ -1,3 +1,7 @@\n+2015-07-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-common.c (warn_tautological_cmp): Bail for float types.\n+\n 2015-07-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR bootstrap/67030"}, {"sha": "a8e5353749c2bd58dcc60541c6326f4daf6fff0f", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=173864e8f143d138c2805c03699d8d58b2c970c8", "patch": "@@ -1910,6 +1910,12 @@ warn_tautological_cmp (location_t loc, enum tree_code code, tree lhs, tree rhs)\n       || (CONVERT_EXPR_P (rhs) || TREE_CODE (rhs) == NON_LVALUE_EXPR))\n     return;\n \n+  /* Don't warn if either LHS or RHS has an IEEE floating-point type.\n+     It could be a NaN, and NaN never compares equal to anything, even\n+     itself.  */\n+  if (FLOAT_TYPE_P (TREE_TYPE (lhs)) || FLOAT_TYPE_P (TREE_TYPE (rhs)))\n+    return;\n+\n   if (operand_equal_p (lhs, rhs, 0))\n     {\n       /* Don't warn about array references with constant indices;"}, {"sha": "08ea0c8dccc5f2ec09f101e750df57073eba5655", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=173864e8f143d138c2805c03699d8d58b2c970c8", "patch": "@@ -1,3 +1,7 @@\n+2015-07-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wtautological-compare-3.c: New test.\n+\n 2015-07-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/vld1_lane.c (main): Remove unused test data."}, {"sha": "64807b01d594f1fc2dea29ebb8d420d48e6584fd", "filename": "gcc/testsuite/c-c++-common/Wtautological-compare-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173864e8f143d138c2805c03699d8d58b2c970c8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-3.c?ref=173864e8f143d138c2805c03699d8d58b2c970c8", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtautological-compare\" } */\n+/* Test we don't warn for floats.  */\n+\n+struct S { double d; float f; };\n+\n+void\n+fn1 (int i, float f, double d, struct S *s, float *fp)\n+{\n+  if (f == f);\n+  if (f != f);\n+  if (d == d);\n+  if (d != d);\n+  if (fp[i] == fp[i]);\n+  if (fp[i] != fp[i]);\n+  if (s->f == s->f);\n+  if (s->f != s->f);\n+  if (s->d == s->d);\n+  if (s->d != s->d);\n+}"}]}