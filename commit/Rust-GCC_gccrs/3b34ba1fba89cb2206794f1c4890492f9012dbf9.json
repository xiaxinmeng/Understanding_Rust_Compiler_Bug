{"sha": "3b34ba1fba89cb2206794f1c4890492f9012dbf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzNGJhMWZiYTg5Y2IyMjA2Nzk0ZjFjNDg5MDQ5MmY5MDEyZGJmOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-01-22T04:42:42Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-05-09T00:57:38Z"}, "message": "cris: Remove from gcc/config/cris: t-linux, linux.h, linux.opt\n\nPart of the removal of crisv32-* and cris-*-linux* (cris-elf remains).\n\ngcc:\n\t* config/cris/t-linux, config/cris/linux.h, config/cris/linux.opt:\n\tRemove.", "tree": {"sha": "08b018eed0d41c43e6ddedd2da0804e0e02b6690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08b018eed0d41c43e6ddedd2da0804e0e02b6690"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b34ba1fba89cb2206794f1c4890492f9012dbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b34ba1fba89cb2206794f1c4890492f9012dbf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b34ba1fba89cb2206794f1c4890492f9012dbf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b34ba1fba89cb2206794f1c4890492f9012dbf9/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b36e4dc813af8b2572be7d145e6b98457ded962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b36e4dc813af8b2572be7d145e6b98457ded962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b36e4dc813af8b2572be7d145e6b98457ded962"}], "stats": {"total": 190, "additions": 2, "deletions": 188}, "files": [{"sha": "229ebfc8231694717b5c2937d25064f640479dda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b34ba1fba89cb2206794f1c4890492f9012dbf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b34ba1fba89cb2206794f1c4890492f9012dbf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b34ba1fba89cb2206794f1c4890492f9012dbf9", "patch": "@@ -4,6 +4,8 @@\n \tfrom end_of_function_needs.\n \n \t* config.gcc: Remove support for crisv32-*-* and cris-*-linux*.\n+\t* config/cris/t-linux, config/cris/linux.h, config/cris/linux.opt:\n+\tRemove.\n \n 2020-05-08  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "3bb6f68a13d82d47b79120d5491af18c9604cd29", "filename": "gcc/config/cris/linux.h", "status": "removed", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=2b36e4dc813af8b2572be7d145e6b98457ded962", "patch": "@@ -1,150 +0,0 @@\n-/* Definitions for GCC.  Part of the machine description for CRIS.\n-   Copyright (C) 2001-2020 Free Software Foundation, Inc.\n-   Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-\n-/* After the first \"Node:\" comment comes all preprocessor directives and\n-   attached declarations described in the info files, the \"Using and\n-   Porting GCC\" manual (uapgcc), in the same order as found in the \"Target\n-   macros\" section in the gcc-2.9x CVS edition of 2000-03-17.  FIXME: Not\n-   really, but needs an update anyway.\n-\n-   There is no generic copy-of-uapgcc comment, you'll have to see uapgcc\n-   for that.  If applicable, there is a CRIS-specific comment.  The order\n-   of macro definitions follow the order in the manual.  Every section in\n-   the manual (node in the info pages) has an introductory `Node:\n-   <subchapter>' comment.  If no macros are defined for a section, only\n-   the section-comment is present.  */\n-\n-/* This file defines the macros for cris-axis-linux-gnu that are not\n-   covered by cris.h, elfos.h and (config/)linux.h.  */\n-\n-/* Make sure we have a valid TARGET_CPU_DEFAULT, so we can assume it\n-   and take shortcuts below.  */\n-#ifndef TARGET_CPU_DEFAULT\n-#error \"TARGET_CPU_DEFAULT not defined\"\n-#elif (TARGET_CPU_DEFAULT+0) != 10 && (TARGET_CPU_DEFAULT+0) != 32\n-#error \"TARGET_CPU_DEFAULT must be 10 or 32, or this file be updated\"\n-#endif\n-\n-/* Node: Instruction Output */\n-\n-#undef USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"\"\n-\n-/* Node: Driver */\n-/* These macros are CRIS-specific, but used in target driver macros.  */\n-\n-#undef CRIS_CPP_SUBTARGET_SPEC\n-#if TARGET_CPU_DEFAULT == 32\n-# define CRIS_CPP_SUBTARGET_SPEC \\\n-  \"%{pthread:-D_REENTRANT}\\\n-   %{!march=*:%{!mcpu=*:-D__arch_v32 -D__CRIS_arch_version=32}}\"\n-#else\n-# define CRIS_CPP_SUBTARGET_SPEC \\\n-  \"%{pthread:-D_REENTRANT}\\\n-   %{!march=*:%{!mcpu=*:-D__arch_v10 -D__CRIS_arch_version=10}}\"\n-#endif\n-\n-#undef CRIS_CC1_SUBTARGET_SPEC\n-#if TARGET_CPU_DEFAULT == 32\n-# define CRIS_CC1_SUBTARGET_SPEC \\\n- \"%{!march=*:%{!mcpu=*:-march=v32}}\"\n-#define CRIS_SUBTARGET_DEFAULT_ARCH MASK_AVOID_GOTPLT\n-#else\n-# define CRIS_CC1_SUBTARGET_SPEC \\\n- \"%{!march=*:%{!mcpu=*:-march=v10}}\"\n-#define CRIS_SUBTARGET_DEFAULT_ARCH 0\n-#endif\n-\n-#undef CRIS_ASM_SUBTARGET_SPEC\n-#if TARGET_CPU_DEFAULT == 32\n-# define CRIS_ASM_SUBTARGET_SPEC \\\n- \"--em=criself \\\n-  %{!march=*:%{!mcpu=*:--march=v32}} \\\n-  %{!fleading-underscore:--no-underscore}\\\n-  %{\" FPIE_OR_FPIC_SPEC \": --pic}\"\n-#else\n-# define CRIS_ASM_SUBTARGET_SPEC \\\n- \"--em=criself \\\n-  %{!march=*:%{!mcpu=*:--march=v10}} \\\n-  %{!fleading-underscore:--no-underscore}\\\n-  %{\" FPIE_OR_FPIC_SPEC \": --pic}\"\n-#endif\n-\n-/* Previously controlled by target_flags.  */\n-#undef TARGET_LINUX\n-#define TARGET_LINUX 1\n-\n-#undef CRIS_SUBTARGET_DEFAULT\n-#define CRIS_SUBTARGET_DEFAULT\t\t\t\\\n-  (MASK_SVINTO\t\t\t\t\t\\\n-   + MASK_ETRAX4_ADD\t\t\t\t\\\n-   + MASK_ALIGN_BY_32\t\t\t\t\\\n-   + CRIS_SUBTARGET_DEFAULT_ARCH)\n-\n-#undef CRIS_DEFAULT_CPU_VERSION\n-#define CRIS_DEFAULT_CPU_VERSION CRIS_CPU_NG\n-\n-#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n-\n-#undef CRIS_LINK_SUBTARGET_SPEC\n-#define CRIS_LINK_SUBTARGET_SPEC \\\n- \"-mcrislinux\\\n-  %{shared} %{static}\\\n-  %{symbolic:-Bdynamic} %{static:-Bstatic}\\\n-  %{!shared:%{!static:\\\n-              %{rdynamic:-export-dynamic}\\\n-              -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"}}\\\n-  %{!r:%{O2|O3: --gc-sections}}\"\n-\n-\n-/* Node: Run-time Target */\n-\n-/* For the cris-*-linux* subtarget.  */\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n-      if (flag_leading_underscore <= 0)\t\t\\\n-\tbuiltin_define (\"__NO_UNDERSCORES__\");\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Node: Type Layout */\n-     \n-#undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-\n-/* Node: Sections */\n-\n-/* GNU/Linux has crti and crtn and does not need the\n-   CRT_CALL_STATIC_FUNCTION trick in cris.h.  */\n-#undef CRT_CALL_STATIC_FUNCTION\n-\n-/*\n- * Local variables:\n- * eval: (c-set-style \"gnu\")\n- * indent-tabs-mode: t\n- * End:\n- */"}, {"sha": "766c4de395760d05ca1d340f6c5e36c8b806c554", "filename": "gcc/config/cris/linux.opt", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.opt?ref=2b36e4dc813af8b2572be7d145e6b98457ded962", "patch": "@@ -1,33 +0,0 @@\n-; GNU/Linux-specific options for the CRIS port of the compiler.\n-\n-; Copyright (C) 2005-2020 Free Software Foundation, Inc.\n-;\n-; This file is part of GCC.\n-;\n-; GCC is free software; you can redistribute it and/or modify it under\n-; the terms of the GNU General Public License as published by the Free\n-; Software Foundation; either version 3, or (at your option) any later\n-; version.\n-;\n-; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-; for more details.\n-;\n-; You should have received a copy of the GNU General Public License\n-; along with GCC; see the file COPYING3.  If not see\n-; <http://www.gnu.org/licenses/>.\n-\n-; Provide a legacy -mlinux option.\n-mlinux\n-Target Report RejectNegative Undocumented\n-\n-mno-gotplt\n-Target Report RejectNegative Mask(AVOID_GOTPLT)\n-Together with -fpic and -fPIC, do not use GOTPLT references.\n-\n-; There's a small added setup cost with using GOTPLT references\n-; for the first (resolving) call, but should in total be a win\n-; both in code-size and execution-time.\n-mgotplt\n-Target Report RejectNegative InverseMask(AVOID_GOTPLT) Undocumented"}, {"sha": "71a964936dbf9586794683982c66d6c9acfc1f37", "filename": "gcc/config/cris/t-linux", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b36e4dc813af8b2572be7d145e6b98457ded962/gcc%2Fconfig%2Fcris%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Ft-linux?ref=2b36e4dc813af8b2572be7d145e6b98457ded962", "patch": "@@ -1,5 +0,0 @@\n-# We *know* we have a limits.h in the glibc library, with extra\n-# definitions needed for e.g. libgfortran.\n-ifneq ($(inhibit_libc),true)\n-LIMITS_H_TEST = :\n-endif"}]}