{"sha": "6f772d22974d1985f0de002437938480f60f01d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3NzJkMjI5NzRkMTk4NWYwZGUwMDI0Mzc5Mzg0ODBmNjBmMDFkNw==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-22T15:56:28Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:15Z"}, "message": "need access to the fields in AssignmentExpr and ReturnExpr", "tree": {"sha": "5aeac38a7526abb20ebd84ac7f9b63113ba6fa88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aeac38a7526abb20ebd84ac7f9b63113ba6fa88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f772d22974d1985f0de002437938480f60f01d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f772d22974d1985f0de002437938480f60f01d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f772d22974d1985f0de002437938480f60f01d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f772d22974d1985f0de002437938480f60f01d7/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24bacfe4c4a70da9105a37b5005fa6c11d0c7af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24bacfe4c4a70da9105a37b5005fa6c11d0c7af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24bacfe4c4a70da9105a37b5005fa6c11d0c7af"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "06ac06e9429523c49b8dba615bbcb9f6976c8ae0", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f772d22974d1985f0de002437938480f60f01d7/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f772d22974d1985f0de002437938480f60f01d7/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=6f772d22974d1985f0de002437938480f60f01d7", "patch": "@@ -947,6 +947,8 @@ class AssignmentExpr : public OperatorExpr\n \n   void visit_rhs (ASTVisitor &vis) { right_expr->accept_vis (vis); }\n \n+  Expr *get_lhs () { return main_or_left_expr.get (); }\n+\n protected:\n   // Use covariance to implement clone function as returning this object rather\n   // than base\n@@ -3618,13 +3620,13 @@ class RangeToInclExpr : public RangeExpr\n // Return expression AST node representation\n class ReturnExpr : public ExprWithoutBlock\n {\n+public:\n   // bool has_return_expr;\n   // Expr* return_expr;\n   ::std::unique_ptr<Expr> return_expr;\n \n   Location locus;\n \n-public:\n   /*~ReturnExpr() {\n       if (has_return_expr) {\n \t  delete return_expr;"}]}