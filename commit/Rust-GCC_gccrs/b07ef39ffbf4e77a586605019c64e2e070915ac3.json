{"sha": "b07ef39ffbf4e77a586605019c64e2e070915ac3", "node_id": "C_kwDOANBUbNoAKGIwN2VmMzlmZmJmNGU3N2E1ODY2MDUwMTljNjRlMmUwNzA5MTVhYzM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-11-28T17:22:34Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:08Z"}, "message": "gccrs: Add fatal_error when experimental flag is not present\n\nThis commits ports over the flag/env variable checking from #1540 which only\nallows compilation using gccrs if a certain flag is specified\n\n\tgcc/rust/\n\t* lang.opt (-frust-incomplete-and-experimental-compiler-do-not-use):\n\tNew.\n\t* rust-session-manager.cc (Session::compile_crate): Check it.\n\t* Make-lang.in (RUST_SELFTEST_FLAGS): Add it.\n\tgcc/testsuite/\n\t* lib/rust.exp (rust_init): Add\n\t'-frust-incomplete-and-experimental-compiler-do-not-use'.", "tree": {"sha": "ca0b82d92b43078d877edcd8e39a0146a1c6899d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca0b82d92b43078d877edcd8e39a0146a1c6899d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b07ef39ffbf4e77a586605019c64e2e070915ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07ef39ffbf4e77a586605019c64e2e070915ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07ef39ffbf4e77a586605019c64e2e070915ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07ef39ffbf4e77a586605019c64e2e070915ac3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88415d33bb34c087da29938ef270788f155bb584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88415d33bb34c087da29938ef270788f155bb584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88415d33bb34c087da29938ef270788f155bb584"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "681ac7b3feed0a91862451138b3b17d31c7694e4", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=b07ef39ffbf4e77a586605019c64e2e070915ac3", "patch": "@@ -267,7 +267,7 @@ rust.uninstall:\n # Enable selftests for the rust frontend\n selftest-rust: s-selftest-rust\n \n-RUST_SELFTEST_FLAGS = -xrust $(SELFTEST_FLAGS)\n+RUST_SELFTEST_FLAGS = -xrust -frust-incomplete-and-experimental-compiler-do-not-use $(SELFTEST_FLAGS)\n RUST_SELFTEST_DEPS = rust1$(exeext) $(SELFTEST_DEPS)\n \n # Run the rust selftests"}, {"sha": "63732a636a3d8ad97b60093314bfd99aac8f80f0", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=b07ef39ffbf4e77a586605019c64e2e070915ac3", "patch": "@@ -66,6 +66,10 @@ frust-dump-\n Rust Joined RejectNegative\n -frust-dump-<type>\tDump Rust frontend internal information.\n \n+frust-incomplete-and-experimental-compiler-do-not-use\n+Rust Var(flag_rust_experimental)\n+Enable experimental compilation of Rust files at your own risk\n+\n frust-max-recursion-depth=\n Rust RejectNegative Type(int) Var(rust_max_recursion_depth) Init(64)\n -frust-max-recursion-depth=integer"}, {"sha": "264fb5051b7f031b669bde8e0af780e188722d67", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=b07ef39ffbf4e77a586605019c64e2e070915ac3", "patch": "@@ -417,6 +417,28 @@ Session::handle_crate_name (const AST::Crate &parsed_crate)\n void\n Session::compile_crate (const char *filename)\n {\n+  if (!flag_rust_experimental\n+      && !std::getenv (\"GCCRS_INCOMPLETE_AND_EXPERIMENTAL_COMPILER_DO_NOT_USE\"))\n+    rust_fatal_error (\n+      Location (), \"%s\",\n+      \"gccrs is not yet able to compile Rust code \"\n+      \"properly. Most of the errors produced will be gccrs' fault and not the \"\n+      \"crate you are trying to compile. Because of this, please reports issues \"\n+      \"to us directly instead of opening issues on said crate's \"\n+      \"repository.\\n\\nOur github repository: \"\n+      \"https://github.com/rust-gcc/gccrs\\nOur bugzilla tracker: \"\n+      \"https://gcc.gnu.org/bugzilla/\"\n+      \"buglist.cgi?bug_status=__open__&component=rust&product=gcc\\n\\n\"\n+      \"If you understand this, and understand that the binaries produced might \"\n+      \"not behave accordingly, you may attempt to use gccrs in an experimental \"\n+      \"manner by passing the following flag:\\n\\n\"\n+      \"`-frust-incomplete-and-experimental-compiler-do-not-use`\\n\\nor by \"\n+      \"defining the following environment variable (any value will \"\n+      \"do)\\n\\nGCCRS_INCOMPLETE_AND_EXPERIMENTAL_COMPILER_DO_NOT_USE\\n\\nFor\"\n+      \"cargo-gccrs, this means passing\\n\\n\"\n+      \"GCCRS_EXTRA_FLAGS=\\\"-frust-incomplete-and-experimental-compiler-do-not-\"\n+      \"use\\\"\\n\\nas an environment variable.\");\n+\n   RAIIFile file_wrap (filename);\n   if (!file_wrap.ok ())\n     {"}, {"sha": "287905bd544c9ec126ae08de63e1ebf4930e9868", "filename": "gcc/testsuite/lib/rust.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Ftestsuite%2Flib%2Frust.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07ef39ffbf4e77a586605019c64e2e070915ac3/gcc%2Ftestsuite%2Flib%2Frust.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust.exp?ref=b07ef39ffbf4e77a586605019c64e2e070915ac3", "patch": "@@ -149,6 +149,8 @@ proc rust_init { args } {\n \tlappend ALWAYS_RUSTFLAGS \"additional_flags=$TOOL_OPTIONS\"\n     }\n \n+\tlappend ALWAYS_RUSTFLAGS \"additional_flags=-frust-incomplete-and-experimental-compiler-do-not-use\"\t\n+\t\n     verbose -log \"ALWAYS_RUSTFLAGS set to $ALWAYS_RUSTFLAGS\"\n \n     set gcc_warning_prefix \"warning:\""}]}