{"sha": "21f8b410511d1ee9a46b7a902a368762f6256ea0", "node_id": "C_kwDOANBUbNoAKDIxZjhiNDEwNTExZDFlZTlhNDZiN2E5MDJhMzY4NzYyZjYyNTZlYTA", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-03-08T23:21:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:04Z"}, "message": "[Ada] Revise Storage_Model_Support operations to do checks and take objects and types\n\nThe functions in subpackage Storage_Model_Support (apart from the\nHas_*_Aspect functions) are revised to have assertions that will fail\nwhen passed a parameter that doesn't specify the appropriate aspect\n(either aspect Storage_Model_Type or Designated_Storage_Model), instead\nof returning Empty for bad arguments. Also, various of the functions now\nallow either a type with aspect Storage_Model_Type or an object of such\na type.\n\ngcc/ada/\n\n\t* sem_util.ads (Storage_Model_Support): Revise comments on most\n\toperations within this nested package to reflect that they can\n\tnow be passed either a type that has aspect Storage_Model_Type\n\tor an object of such a type.  Change the names of the relevant\n\tformals to SM_Obj_Or_Type. Also, add more precise semantic\n\tdescriptions in some cases, and declare the subprograms in a\n\tmore logical order.\n\t* sem_util.adb (Storage_Model_Support.Storage_Model_Object): Add\n\tan assertion that the type must specify aspect\n\tDesignated_Storage_Model, rather than returning Empty when it\n\tdoesn't specify that aspect.\n\t(Storage_Model_Support.Storage_Model_Type): Add an assertion\n\tthat formal must be an object whose type specifies aspect\n\tStorage_Model_Type, rather than returning Empty for when it\n\tdoesn't have such a type (and test Has_Storage_Model_Type_Aspect\n\trather than Find_Value_Of_Aspect).\n\t(Storage_Model_Support.Get_Storage_Model_Type_Entity): Allow\n\tboth objects and types, and add an assertion that the type (or\n\tthe type of the object) has a value for aspect\n\tStorage_Model_Type.", "tree": {"sha": "02d1a1c310fd0467e88c1ca9cb1735d09e0674bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d1a1c310fd0467e88c1ca9cb1735d09e0674bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21f8b410511d1ee9a46b7a902a368762f6256ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f8b410511d1ee9a46b7a902a368762f6256ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f8b410511d1ee9a46b7a902a368762f6256ea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f8b410511d1ee9a46b7a902a368762f6256ea0/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae745a0de34892d0d1e7157292628c375a94221f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae745a0de34892d0d1e7157292628c375a94221f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae745a0de34892d0d1e7157292628c375a94221f"}], "stats": {"total": 263, "additions": 143, "deletions": 120}, "files": [{"sha": "a059d1eb9331d50958f4132a274457d7be92b259", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 82, "deletions": 69, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21f8b410511d1ee9a46b7a902a368762f6256ea0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21f8b410511d1ee9a46b7a902a368762f6256ea0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=21f8b410511d1ee9a46b7a902a368762f6256ea0", "patch": "@@ -32302,47 +32302,6 @@ package body Sem_Util is\n \n    package body Storage_Model_Support is\n \n-      -----------------------------------\n-      -- Get_Storage_Model_Type_Entity --\n-      -----------------------------------\n-\n-      function Get_Storage_Model_Type_Entity\n-        (Typ : Entity_Id;\n-         Nam : Name_Id) return Entity_Id\n-      is\n-         pragma Assert\n-           (Is_Type (Typ)\n-            and then\n-              Nam in Name_Address_Type\n-                   | Name_Null_Address\n-                   | Name_Allocate\n-                   | Name_Deallocate\n-                   | Name_Copy_From\n-                   | Name_Copy_To\n-                   | Name_Storage_Size);\n-\n-         SMT_Aspect_Value : constant Node_Id :=\n-           Find_Value_Of_Aspect (Typ, Aspect_Storage_Model_Type);\n-         Assoc            : Node_Id;\n-\n-      begin\n-         if No (SMT_Aspect_Value) then\n-            return Empty;\n-\n-         else\n-            Assoc := First (Component_Associations (SMT_Aspect_Value));\n-            while Present (Assoc) loop\n-               if Chars (First (Choices (Assoc))) = Nam then\n-                  return Entity (Expression (Assoc));\n-               end if;\n-\n-               Next (Assoc);\n-            end loop;\n-\n-            return Empty;\n-         end if;\n-      end Get_Storage_Model_Type_Entity;\n-\n       -----------------------------------------\n       -- Has_Designated_Storage_Model_Aspect --\n       -----------------------------------------\n@@ -32370,13 +32329,11 @@ package body Sem_Util is\n \n       function Storage_Model_Object (Typ : Entity_Id) return Entity_Id is\n       begin\n-         if Has_Designated_Storage_Model_Aspect (Typ) then\n-            return\n-              Entity\n-                (Find_Value_Of_Aspect (Typ, Aspect_Designated_Storage_Model));\n-         else\n-            return Empty;\n-         end if;\n+         pragma Assert (Has_Designated_Storage_Model_Aspect (Typ));\n+\n+         return\n+           Entity\n+             (Find_Value_Of_Aspect (Typ, Aspect_Designated_Storage_Model));\n       end Storage_Model_Object;\n \n       ------------------------\n@@ -32385,76 +32342,132 @@ package body Sem_Util is\n \n       function Storage_Model_Type (Obj : Entity_Id) return Entity_Id is\n       begin\n-         if Present\n-              (Find_Value_Of_Aspect (Etype (Obj), Aspect_Storage_Model_Type))\n-         then\n-            return Etype (Obj);\n-         else\n-            return Empty;\n-         end if;\n+         pragma Assert (Has_Storage_Model_Type_Aspect (Etype (Obj)));\n+\n+         return Etype (Obj);\n       end Storage_Model_Type;\n \n+      -----------------------------------\n+      -- Get_Storage_Model_Type_Entity --\n+      -----------------------------------\n+\n+      function Get_Storage_Model_Type_Entity\n+        (SM_Obj_Or_Type : Entity_Id;\n+         Nam            : Name_Id) return Entity_Id\n+      is\n+         Typ : constant Entity_Id := (if Is_Object (SM_Obj_Or_Type) then\n+                                         Storage_Model_Type (SM_Obj_Or_Type)\n+                                      else\n+                                         SM_Obj_Or_Type);\n+         pragma Assert\n+           (Is_Type (Typ)\n+             and then\n+               Nam in Name_Address_Type\n+                    | Name_Null_Address\n+                    | Name_Allocate\n+                    | Name_Deallocate\n+                    | Name_Copy_From\n+                    | Name_Copy_To\n+                    | Name_Storage_Size);\n+\n+         Assoc            : Node_Id;\n+         SMT_Aspect_Value : constant Node_Id :=\n+           Find_Value_Of_Aspect (Typ, Aspect_Storage_Model_Type);\n+\n+      begin\n+         pragma Assert (Present (SMT_Aspect_Value));\n+\n+         Assoc := First (Component_Associations (SMT_Aspect_Value));\n+         while Present (Assoc) loop\n+            if Chars (First (Choices (Assoc))) = Nam then\n+               return Entity (Expression (Assoc));\n+            end if;\n+\n+            Next (Assoc);\n+         end loop;\n+\n+         return Empty;\n+      end Get_Storage_Model_Type_Entity;\n+\n       --------------------------------\n       -- Storage_Model_Address_Type --\n       --------------------------------\n \n-      function Storage_Model_Address_Type (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Address_Type\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Address_Type);\n+         return\n+           Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Address_Type);\n       end Storage_Model_Address_Type;\n \n       --------------------------------\n       -- Storage_Model_Null_Address --\n       --------------------------------\n \n-      function Storage_Model_Null_Address (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Null_Address\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Null_Address);\n+         return\n+           Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Null_Address);\n       end Storage_Model_Null_Address;\n \n       ----------------------------\n       -- Storage_Model_Allocate --\n       ----------------------------\n \n-      function Storage_Model_Allocate (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Allocate\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Allocate);\n+         return Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Allocate);\n       end Storage_Model_Allocate;\n \n       ------------------------------\n       -- Storage_Model_Deallocate --\n       ------------------------------\n \n-      function Storage_Model_Deallocate (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Deallocate\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Deallocate);\n+         return\n+           Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Deallocate);\n       end Storage_Model_Deallocate;\n \n       -----------------------------\n       -- Storage_Model_Copy_From --\n       -----------------------------\n \n-      function Storage_Model_Copy_From (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Copy_From\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Copy_From);\n+         return Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Copy_From);\n       end Storage_Model_Copy_From;\n \n       ---------------------------\n       -- Storage_Model_Copy_To --\n       ---------------------------\n \n-      function Storage_Model_Copy_To (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Copy_To\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Copy_To);\n+         return Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Copy_To);\n       end Storage_Model_Copy_To;\n \n       --------------------------------\n       -- Storage_Model_Storage_Size --\n       --------------------------------\n \n-      function Storage_Model_Storage_Size (Typ : Entity_Id) return Entity_Id is\n+      function Storage_Model_Storage_Size\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id\n+      is\n       begin\n-         return Get_Storage_Model_Type_Entity (Typ, Name_Storage_Size);\n+         return\n+           Get_Storage_Model_Type_Entity (SM_Obj_Or_Type, Name_Storage_Size);\n       end Storage_Model_Storage_Size;\n \n    end Storage_Model_Support;"}, {"sha": "6f28fe0b6525d6b6786a88026726c0db10fb0b60", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 61, "deletions": 51, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21f8b410511d1ee9a46b7a902a368762f6256ea0/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21f8b410511d1ee9a46b7a902a368762f6256ea0/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=21f8b410511d1ee9a46b7a902a368762f6256ea0", "patch": "@@ -3591,68 +3591,78 @@ package Sem_Util is\n       --  for the Storage_Model feature. These functions provide an interface\n       --  that the compiler (in particular back-end phases such as gigi and\n       --  GNAT-LLVM) can use to easily obtain entities and operations that\n-      --  are specified for types in the aspects Storage_Model_Type and\n+      --  are specified for types that have aspects Storage_Model_Type or\n       --  Designated_Storage_Model.\n \n-      function Get_Storage_Model_Type_Entity\n-        (Typ : Entity_Id;\n-         Nam : Name_Id) return Entity_Id;\n-      --  Given type Typ with aspect Storage_Model_Type, returns the Entity_Id\n-      --  corresponding to the entity associated with Nam in the aspect. If the\n-      --  type does not specify the aspect, or such an entity is not present,\n-      --  then returns Empty. (Note: This function is modeled on function\n-      --  Get_Iterable_Type_Primitive.)\n+      function Has_Storage_Model_Type_Aspect (Typ : Entity_Id) return Boolean;\n+      --  Returns True iff Typ specifies aspect Storage_Model_Type\n \n       function Has_Designated_Storage_Model_Aspect\n         (Typ : Entity_Id) return Boolean;\n       --  Returns True iff Typ specifies aspect Designated_Storage_Model\n \n-      function Has_Storage_Model_Type_Aspect (Typ : Entity_Id) return Boolean;\n-      --  Returns True iff Typ specifies aspect Storage_Model_Type\n-\n       function Storage_Model_Object (Typ : Entity_Id) return Entity_Id;\n-      --  Given an access type with aspect Designated_Storage_Model, returns\n-      --  the storage-model object associated with that type; returns Empty\n-      --  if there is no associated object.\n+      --  Given an access type Typ with aspect Designated_Storage_Model,\n+      --  returns the storage-model object associated with that type.\n+      --  The object Entity_Ids returned by this function can be passed\n+      --  other functions declared in this interface to retrieve operations\n+      --  associated with Storage_Model_Type aspect of the object's type.\n \n       function Storage_Model_Type (Obj : Entity_Id) return Entity_Id;\n       --  Given an object Obj of a type specifying aspect Storage_Model_Type,\n-      --  returns that type; otherwise returns Empty.\n-\n-      function Storage_Model_Address_Type (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  the type specified for the Address_Type choice in that aspect;\n-      --  returns Empty if the aspect or the type isn't specified.\n-\n-      function Storage_Model_Null_Address (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  constant specified for Null_Address choice in that aspect; returns\n-      --  Empty if the aspect or the constant object isn't specified.\n-\n-      function Storage_Model_Allocate (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  procedure specified for the Allocate choice in that aspect; returns\n-      --  Empty if the aspect or the procedure isn't specified.\n-\n-      function Storage_Model_Deallocate (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  procedure specified for the Deallocate choice in that aspect; returns\n-      --  Empty if the aspect or the procedure isn't specified.\n-\n-      function Storage_Model_Copy_From (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  procedure specified for the Copy_From choice in that aspect; returns\n-      --  Empty if the aspect or the procedure isn't specified.\n-\n-      function Storage_Model_Copy_To (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  procedure specified for the Copy_To choice in that aspect; returns\n-      --  Empty if the aspect or the procedure isn't specified.\n-\n-      function Storage_Model_Storage_Size (Typ : Entity_Id) return Entity_Id;\n-      --  Given a type Typ that specifies aspect Storage_Model_Type, returns\n-      --  function specified for Storage_Size choice in that aspect; returns\n-      --  Empty if the aspect or the procedure isn't specified.\n+      --  returns that type.\n+\n+      function Get_Storage_Model_Type_Entity\n+        (SM_Obj_Or_Type : Entity_Id;\n+         Nam            : Name_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, and Nam denoting the name of one of the argument kinds allowed\n+      --  for that aspect, returns the Entity_Id corresponding to the entity\n+      --  associated with Nam in the aspect. If such an entity is not present,\n+      --  then returns Empty. (Note: This function is modeled on function\n+      --  Get_Iterable_Type_Primitive.)\n+\n+      function Storage_Model_Address_Type\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the type specified for the Address_Type choice in that\n+      --  aspect; returns Empty if the type isn't specified.\n+\n+      function Storage_Model_Null_Address\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the constant specified for the Null_Address choice in\n+      --  that aspect; returns Empty if the constant object isn't specified.\n+\n+      function Storage_Model_Allocate\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the procedure specified for the Allocate choice in that\n+      --  aspect; returns Empty if the procedure isn't specified.\n+\n+      function Storage_Model_Deallocate\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the procedure specified for the Deallocate choice in\n+      --  that aspect; returns Empty if the procedure isn't specified.\n+\n+      function Storage_Model_Copy_From\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the procedure specified for the Copy_From choice in\n+      --  that aspect; returns Empty if the procedure isn't specified.\n+\n+      function Storage_Model_Copy_To\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the procedure specified for the Copy_To choice in that\n+      --  aspect; returns Empty if the procedure isn't specified.\n+\n+      function Storage_Model_Storage_Size\n+        (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n+      --  Given a type with aspect Storage_Model_Type or an object of such a\n+      --  type, returns the function specified for the Storage_Size choice in\n+      --  that aspect; returns Empty if the procedure isn't specified.\n \n    end Storage_Model_Support;\n "}]}