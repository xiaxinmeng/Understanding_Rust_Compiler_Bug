{"sha": "b3d45ff04060a94039d12d6ca01938f190e7287f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNkNDVmZjA0MDYwYTk0MDM5ZDEyZDZjYTAxOTM4ZjE5MGU3Mjg3Zg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2013-04-03T12:14:03Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-04-03T12:14:03Z"}, "message": "* config/spu/spu.c (emit_nop_for_insn): Handle JUMP_TABLE_DATA.\n\nFrom-SVN: r197406", "tree": {"sha": "0a2add39d133549d158800c12e52551e198bf10e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2add39d133549d158800c12e52551e198bf10e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3d45ff04060a94039d12d6ca01938f190e7287f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d45ff04060a94039d12d6ca01938f190e7287f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3d45ff04060a94039d12d6ca01938f190e7287f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d45ff04060a94039d12d6ca01938f190e7287f/comments", "author": null, "committer": null, "parents": [{"sha": "a5cde067925a0f47195b39cb595be5ef50a977c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5cde067925a0f47195b39cb595be5ef50a977c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5cde067925a0f47195b39cb595be5ef50a977c9"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "a9120a42c3e969a4f58322b13ce5296c8e8efd1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d45ff04060a94039d12d6ca01938f190e7287f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d45ff04060a94039d12d6ca01938f190e7287f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3d45ff04060a94039d12d6ca01938f190e7287f", "patch": "@@ -1,3 +1,7 @@\n+2013-04-03  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/spu/spu.c (emit_nop_for_insn): Handle JUMP_TABLE_DATA.\n+\n 2013-04-03  Bin Cheng  <bin.cheng@arm.com>\n \n \t* rtl.h (AUTO_INC_DEC): Fix typo of HAVE_POST_MODIFY_DISP."}, {"sha": "6cbd3f82337fc4719e489186a23a6f5cf9797f1f", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d45ff04060a94039d12d6ca01938f190e7287f/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d45ff04060a94039d12d6ca01938f190e7287f/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=b3d45ff04060a94039d12d6ca01938f190e7287f", "patch": "@@ -1978,13 +1978,22 @@ static struct spu_bb_info *spu_bb_info;\n /* Emit a nop for INSN such that the two will dual issue.  This assumes\n    INSN is 8-byte aligned.  When INSN is inline asm we emit an lnop.\n    We check for TImode to handle a MULTI1 insn which has dual issued its\n-   first instruction.  get_pipe returns -1 for MULTI0, inline asm, or\n-   ADDR_VEC insns. */\n+   first instruction.  get_pipe returns -1 for MULTI0 or inline asm.  */\n static void\n emit_nop_for_insn (rtx insn)\n {\n   int p;\n   rtx new_insn;\n+\n+  /* We need to handle JUMP_TABLE_DATA separately.  */\n+  if (JUMP_TABLE_DATA_P (insn))\n+    {\n+      new_insn = emit_insn_after (gen_lnop(), insn);\n+      recog_memoized (new_insn);\n+      INSN_LOCATION (new_insn) = UNKNOWN_LOCATION;\n+      return;\n+    }\n+\n   p = get_pipe (insn);\n   if ((CALL_P (insn) || JUMP_P (insn)) && SCHED_ON_EVEN_P (insn))\n     new_insn = emit_insn_after (gen_lnop (), insn);"}]}