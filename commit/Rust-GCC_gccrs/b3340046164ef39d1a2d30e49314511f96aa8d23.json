{"sha": "b3340046164ef39d1a2d30e49314511f96aa8d23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzNDAwNDYxNjRlZjM5ZDFhMmQzMGU0OTMxNDUxMWY5NmFhOGQyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2001-11-29T22:31:02Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-11-29T22:31:02Z"}, "message": "locale_facets.tcc (__pad): Add bool parameter to correctly pad internal-adjusted const char*-type objects.\n\n\n2001-11-29  Paolo Carlini  <pcarlini@unitus.it>\n\n\tlibstdc++/3655\n\t* include/bits/locale_facets.tcc (__pad): Add bool parameter to\n\tcorrectly pad internal-adjusted const char*-type objects.\n\t* include/bits/locale_facts.tcc (num_put::_M_insert): Update call.\n\t* include/bits/ostream.tcc (operator<<(_CharT , char, const\n\t_CharT*, const char*, const basic_string&): Update calls.\n\t* src/locale-inst.tcc: Update declarations.\n\t* testsuite/27_io/ostream_inserter_arith.cc (test04): Add test.\n\nFrom-SVN: r47459", "tree": {"sha": "d653f823940d95a23ac173c99c7ff7904c7e786e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d653f823940d95a23ac173c99c7ff7904c7e786e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3340046164ef39d1a2d30e49314511f96aa8d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3340046164ef39d1a2d30e49314511f96aa8d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3340046164ef39d1a2d30e49314511f96aa8d23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3340046164ef39d1a2d30e49314511f96aa8d23/comments", "author": null, "committer": null, "parents": [{"sha": "7d5b8b116ee53bd38bd23bb6cf5577b3fec72000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5b8b116ee53bd38bd23bb6cf5577b3fec72000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5b8b116ee53bd38bd23bb6cf5577b3fec72000"}], "stats": {"total": 67, "additions": 42, "deletions": 25}, "files": [{"sha": "410041da435c65b8bb69fd01e57dabe7b5897f39", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b3340046164ef39d1a2d30e49314511f96aa8d23", "patch": "@@ -1,3 +1,14 @@\n+2001-11-29  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tlibstdc++/3655\n+\t* include/bits/locale_facets.tcc (__pad): Add bool parameter to\n+\tcorrectly pad internal-adjusted const char*-type objects.\n+\t* include/bits/locale_facts.tcc (num_put::_M_insert): Update call.\n+\t* include/bits/ostream.tcc (operator<<(_CharT , char, const\n+\t_CharT*, const char*, const basic_string&): Update calls.\n+\t* src/locale-inst.tcc: Update declarations.\n+\t* testsuite/27_io/ostream_inserter_arith.cc (test04): Add test.\n+\n 2001-11-29  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/ext/howto.html:  Finish allocator notes (inst and 3.0).\n@@ -9,7 +20,6 @@\n \n 2001-11-28  Paolo Carlini  <pcarlini@unitus.it>\n \n-\tlibstdc++/3655\n \t* include/bits/locale_facets.tcc (__pad): Correctly pad\n \tinternal-adjusted hex numbers.\n \t* testsuite/27_io/ostream_inserter_arith.cc: Add testcase."}, {"sha": "835a0ae62a633a4fa6e32d26488ac954408b9864", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=b3340046164ef39d1a2d30e49314511f96aa8d23", "patch": "@@ -814,7 +814,7 @@ namespace std\n       streamsize __w = __io.width();\n       if (__w > static_cast<streamsize>(__len))\n \t{\n-\t  __pad(__io, __fill, __ws2, __ws, __w, __len);\n+\t  __pad(__io, __fill, __ws2, __ws, __w, __len, true);\n \t  __len = static_cast<int>(__w);\n \t  // Switch strings.\n \t  __ws = __ws2;\n@@ -1913,11 +1913,15 @@ namespace std\n   // Assumes \n   // __newlen > __oldlen\n   // __news is allocated for __newlen size\n-  // Used by both num_put and ostream inserters.\n+  // Used by both num_put and ostream inserters: if __num,\n+  // internal-adjusted objects are padded according to the rules below\n+  // concerning 0[xX] and +-, otherwise, exactly as right-adjusted\n+  // ones are.\n   template<typename _CharT, typename _Traits>\n     void\n     __pad(ios_base& __io, _CharT __fill, _CharT* __news, const _CharT* __olds,\n-\t  const streamsize __newlen, const streamsize __oldlen)\n+\t  const streamsize __newlen, const streamsize __oldlen, \n+\t  const bool __num)\n     {\n       typedef _CharT\tchar_type;\n       typedef _Traits\ttraits_type;\n@@ -1940,7 +1944,7 @@ namespace std\n \t  __beglen = __oldlen;\n \t  __end = __pads;\n \t}\n-      else if (__adjust == ios_base::internal)\n+      else if (__adjust == ios_base::internal && __num)\n \t{\n \t  // Pad after the sign, if there is one.\n \t  // Pad after 0[xX], if there is one.\n@@ -1997,10 +2001,11 @@ namespace std\n   template<typename _CharT>\n     void\n     __pad(ios_base& __io, _CharT __fill, _CharT* __news, const _CharT* __olds,\n-\t  const streamsize __newlen, const streamsize __oldlen)\n+\t  const streamsize __newlen, const streamsize __oldlen, \n+\t  const bool __num)\n     { \n-      return __pad<_CharT, char_traits<_CharT> >(__io, __fill, __news, \n-\t\t\t\t\t\t __olds, __newlen, __oldlen); \n+      return __pad<_CharT, char_traits<_CharT> >(__io, __fill, __news, __olds,\n+\t\t\t\t\t\t __newlen, __oldlen, __num); \n     }\n \n   // Used by both numeric and monetary facets."}, {"sha": "ff3c958c05ec0325d54b84af8a6f76433736f44a", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=b3340046164ef39d1a2d30e49314511f96aa8d23", "patch": "@@ -481,7 +481,7 @@ namespace std\n \t      streamsize __len = 1;\n \t      if (__w > __len)\n \t\t{\n-\t\t  __pad(__out, __out.fill(), __pads, &__c, __w, __len);\n+\t\t  __pad(__out, __out.fill(), __pads, &__c, __w, __len, false);\n \t\t  __len = __w;\n \t\t}\n \t      __out.write(__pads, __len);\n@@ -516,7 +516,7 @@ namespace std\n \t      streamsize __len = 1;\n \t      if (__w > __len)\n \t\t{\n-\t\t  __pad(__out, __out.fill(), __pads, &__c, __w, __len);\n+\t\t  __pad(__out, __out.fill(), __pads, &__c, __w, __len, false);\n \t\t  __len = __w;\n \t\t}\n \t      __out.write(__pads, __len);\n@@ -549,7 +549,7 @@ namespace std\n \t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \t      if (__w > __len)\n \t\t{\n-\t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len);\n+\t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len, false);\n \t\t  __s = __pads;\n \t\t  __len = __w;\n \t\t}\n@@ -595,7 +595,7 @@ namespace std\n \t      \n \t      if (__w > __len)\n \t\t{\n-\t\t  __pad(__out, __out.fill(), __pads, __ws, __w, __len);\n+\t\t  __pad(__out, __out.fill(), __pads, __ws, __w, __len, false);\n \t\t  __str = __pads;\n \t\t  __len = __w;\n \t\t}\n@@ -630,7 +630,7 @@ namespace std\n \t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \t      if (__w > __len)\n \t\t{\n-\t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len);\n+\t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len, false);\n \t\t  __s = __pads;\n \t\t  __len = __w;\n \t\t}\n@@ -668,7 +668,7 @@ namespace std\n #endif\n \t  if (__w > __len)\n \t    {\n-\t      __pad(__out, __out.fill(), __pads, __s, __w, __len);\n+\t      __pad(__out, __out.fill(), __pads, __s, __w, __len, false);\n \t      __s = __pads;\n \t      __len = __w;\n \t    }"}, {"sha": "0688db9104db0388b76e0df3bdede4f3a61ee1b8", "filename": "libstdc++-v3/src/locale-inst.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc?ref=b3340046164ef39d1a2d30e49314511f96aa8d23", "patch": "@@ -337,12 +337,12 @@ namespace std\n   template\n     void \n     __pad<char>(ios_base&, char, char*, const char *, streamsize, \n-\t\tstreamsize);\n+\t\tstreamsize, const bool);\n \n   template\n     void \n-    __pad<char, char_traits<char> >(ios_base&, char, char*, \n-\t\t\t\t    const char *, streamsize, streamsize);\n+    __pad<char, char_traits<char> >(ios_base&, char, char*, const char *, \n+\t\t\t\t    streamsize, streamsize, const bool);\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n   template \n@@ -363,13 +363,13 @@ namespace std\n   template\n     void \n     __pad<wchar_t>(ios_base&, wchar_t, wchar_t*, const wchar_t*, \n-\t\t   streamsize, streamsize);\n+\t\t   streamsize, streamsize, const bool);\n \n   template\n     void \n     __pad<wchar_t, char_traits<wchar_t> >(ios_base&, wchar_t, wchar_t*, \n-\t\t\t\t\t  const wchar_t*, \n-\t\t\t\t\t  streamsize, streamsize);\n+\t\t\t\t\t  const wchar_t*, streamsize, \n+\t\t\t\t\t  streamsize, const bool);\n #endif // _GLIBCPP_USE_WCHAR_T\n \n   template "}, {"sha": "2e57922b1e9cb3954003c6ce5fae90eaf1726c01", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_arith.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3340046164ef39d1a2d30e49314511f96aa8d23/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc?ref=b3340046164ef39d1a2d30e49314511f96aa8d23", "patch": "@@ -312,12 +312,14 @@ test03()\n int\n test04()\n {\n-  stringbuf strbuf;\n-  ostream o(&strbuf);\n-\n-  o << hex << showbase << setw(6) << internal << 255;\n-  VERIFY( strbuf.str() == \"0x  ff\" );\n+  stringbuf strbuf1, strbuf2;\n+  ostream o1(&strbuf1), o2(&strbuf2);\n+  o1 << hex << showbase << setw(6) << internal << 0xff;\n+  VERIFY( strbuf1.str() == \"0x  ff\" );\n   \n+  // ... vs internal-adjusted const char*-type objects\n+  o2 << hex << showbase << setw(6) << internal << \"0xff\";\n+  VERIFY( strbuf2.str() == \"  0xff\" );\n   return 0;\n }\n "}]}