{"sha": "970af8677126773a729c5fde809ab307b6494082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwYWY4Njc3MTI2NzczYTcyOWM1ZmRlODA5YWIzMDdiNjQ5NDA4Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2006-12-21T09:03:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2006-12-21T09:03:18Z"}, "message": "re PR target/28966 (-maltivec -m32 causes the stack to be saved and restored even though there is no need for it)\n\ngcc/\n\tPR target/28966\n\tPR target/29248\n\t* reload1.c (reload): Realign stack after it changes size.\ngcc/testsuite/\n\tPR target/28966\n\tPR target/29248\n\t* gcc.dg/rs6000-leaf.c: New.\n\nFrom-SVN: r120102", "tree": {"sha": "d16ac4c285b07d9272716d077f44f7d69f5968b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d16ac4c285b07d9272716d077f44f7d69f5968b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/970af8677126773a729c5fde809ab307b6494082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970af8677126773a729c5fde809ab307b6494082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/970af8677126773a729c5fde809ab307b6494082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970af8677126773a729c5fde809ab307b6494082/comments", "author": null, "committer": null, "parents": [{"sha": "a957d77fc36e52b459a42043b8ea9cadab574277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a957d77fc36e52b459a42043b8ea9cadab574277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a957d77fc36e52b459a42043b8ea9cadab574277"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "2e3f9d9df8744c1fba84c7a45ab200824104b476", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970af8677126773a729c5fde809ab307b6494082/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970af8677126773a729c5fde809ab307b6494082/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=970af8677126773a729c5fde809ab307b6494082", "patch": "@@ -1,3 +1,9 @@\n+2006-12-21  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR target/28966\n+\tPR target/29248\n+\t* reload1.c (reload): Realign stack after it changes size.\n+\n 2006-12-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* simplify-rtx.c (simplify_subreg): Use the correct mode when"}, {"sha": "efa1a397212f45ea3a13b6c39b316f0820a01979", "filename": "gcc/reload1.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970af8677126773a729c5fde809ab307b6494082/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970af8677126773a729c5fde809ab307b6494082/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=970af8677126773a729c5fde809ab307b6494082", "patch": "@@ -888,16 +888,8 @@ reload (rtx first, int global)\n     {\n       int something_changed;\n       int did_spill;\n-\n       HOST_WIDE_INT starting_frame_size;\n \n-      /* Round size of stack frame to stack_alignment_needed.  This must be done\n-\t here because the stack size may be a part of the offset computation\n-\t for register elimination, and there might have been new stack slots\n-\t created in the last iteration of this loop.  */\n-      if (cfun->stack_alignment_needed)\n-        assign_stack_local (BLKmode, 0, cfun->stack_alignment_needed);\n-\n       starting_frame_size = get_frame_size ();\n \n       set_initial_elim_offsets ();\n@@ -964,6 +956,20 @@ reload (rtx first, int global)\n       /* If we allocated another stack slot, redo elimination bookkeeping.  */\n       if (starting_frame_size != get_frame_size ())\n \tcontinue;\n+      if (starting_frame_size && cfun->stack_alignment_needed)\n+\t{\n+\t  /* If we have a stack frame, we must align it now.  The\n+\t     stack size may be a part of the offset computation for\n+\t     register elimination.  So if this changes the stack size,\n+\t     then repeat the elimination bookkeeping.  We don't\n+\t     realign when there is no stack, as that will cause a\n+\t     stack frame when none is needed should\n+\t     STARTING_FRAME_OFFSET not be already aligned to\n+\t     STACK_BOUNDARY.  */\n+\t  assign_stack_local (BLKmode, 0, cfun->stack_alignment_needed);\n+\t  if (starting_frame_size != get_frame_size ())\n+\t    continue;\n+\t}\n \n       if (caller_save_needed)\n \t{"}, {"sha": "d7087428a6f7c99134c7db6a777053a54a9b6706", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970af8677126773a729c5fde809ab307b6494082/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970af8677126773a729c5fde809ab307b6494082/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=970af8677126773a729c5fde809ab307b6494082", "patch": "@@ -1,3 +1,9 @@\n+2006-12-21  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR target/28966\n+\tPR target/29248\n+\t* gcc.dg/rs6000-leaf.c: New.\n+\n 2006-12-20  Tobias Schl\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/25392"}, {"sha": "079418930da7e416d71e592fb9e7fc6b54b1812d", "filename": "gcc/testsuite/gcc.dg/rs6000-leaf.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970af8677126773a729c5fde809ab307b6494082/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-leaf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970af8677126773a729c5fde809ab307b6494082/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-leaf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-leaf.c?ref=970af8677126773a729c5fde809ab307b6494082", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target rs6000-*-* } }  */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"\\tstwu 1,-\\[0-9\\]*(1)\\n\" } } */\n+\n+int Leaf (int i)\n+{\n+  return i + 1;\n+}"}]}