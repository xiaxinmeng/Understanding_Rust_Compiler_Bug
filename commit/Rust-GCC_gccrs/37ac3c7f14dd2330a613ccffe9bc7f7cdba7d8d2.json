{"sha": "37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhYzNjN2YxNGRkMjMzMGE2MTNjY2ZmZTliYzdmN2NkYmE3ZDhkMg==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@oz.codesourcery.com", "date": "2000-11-08T19:41:19Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2000-11-08T19:41:19Z"}, "message": "gcc_build (bootstrap_gcc): New function.\n\n2000-11-08  Jeffrey Oldham  <oldham@oz.codesourcery.com>\n\n\t* gcc_build (bootstrap_gcc): New function.\n\t(configure_gcc): Likewise.\n\t(build_gcc): Rewritten to use configure and bootstrap.\n\t(MAKE_BOOTSTRAP_OPTIONS): Replaced MAKE_OPTIONS.\n\nFrom-SVN: r37323", "tree": {"sha": "5f3a311d163c633af9fe5239ce26e4a269473b93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f3a311d163c633af9fe5239ce26e4a269473b93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2/comments", "author": null, "committer": null, "parents": [{"sha": "6990885199c0d4d79f823fd82613bd6d1e0ff105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6990885199c0d4d79f823fd82613bd6d1e0ff105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6990885199c0d4d79f823fd82613bd6d1e0ff105"}], "stats": {"total": 56, "additions": 41, "deletions": 15}, "files": [{"sha": "661e8a9e51fa146987d475dd96b67e4ae3c5b440", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "patch": "@@ -1,3 +1,10 @@\n+2000-11-08  Jeffrey Oldham  <oldham@oz.codesourcery.com>\n+\n+\t* gcc_build (bootstrap_gcc): New function.\n+\t(configure_gcc): Likewise.\n+\t(build_gcc): Rewritten to use configure and bootstrap.\n+\t(MAKE_BOOTSTRAP_OPTIONS): Replaced MAKE_OPTIONS.\n+\n 2000-10-31  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc_build (MAKE): New variable."}, {"sha": "2989628255c1c68ef9e596ff9a13c1d3c031b17f", "filename": "contrib/gcc_build", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2/contrib%2Fgcc_build", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2/contrib%2Fgcc_build", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_build?ref=37ac3c7f14dd2330a613ccffe9bc7f7cdba7d8d2", "patch": "@@ -61,12 +61,14 @@ usage() {\n cat <<EOF\n gcc_build        [-c configure_options] \n \t\t [-d destination_directory]\n-\t\t [-m make_options]\n+\t\t [-m make_boot_options]\n \t\t [-u username]\n \t\t [-p protocol]\n \t\t [-t tarfile]\n+\t\t [bootstrap]\n \t\t [build]\n \t\t [checkout]\n+\t\t [configure]\n \t\t [export]\n \t\t [install]\n \t\t [test]\n@@ -128,9 +130,9 @@ update_gcc() {\n \terror \"Could not update GCC\"\n }\n \n-# Build GCC.\n+# Configure for a build of GCC.\n \n-build_gcc() {\n+configure_gcc() {\n     # Go to the source directory.\n     changedir ${DESTINATION}\n \n@@ -143,14 +145,23 @@ build_gcc() {\n     changedir ${OBJDIR}\n \n     # Configure the tree.\n-    (eval ${DESTINATION}/configure ${CONFIGURE_OPTIONS} | \n-        tee -a ${LOGFILE}) 2>&1 || \\\n-\terror \"Could not configure GCC\"\n+    (eval ${DESTINATION}/configure ${CONFIGURE_OPTIONS} 2>&1 | \n+        tee -a ${LOGFILE}) || \\\n+\terror \"Could not configure the compiler\"\n+}\n+\n+# Bootstrap GCC.  Assume configuration has already occurred.\n+\n+bootstrap_gcc() {\n+    # Go to the source directory.\n+    changedir ${DESTINATION}\n+    # Go to the object directory.\n+    changedir ${OBJDIR}\n \n     # Bootstrap the compiler\n-    (eval ${MAKE} ${MAKE_OPTIONS} bootstrap 2>&1 |\n+    (eval ${MAKE} ${MAKE_BOOTSTRAP_OPTIONS} bootstrap 2>&1 |\n \ttee -a ${LOGFILE}) || \\\n-\terror \"Could not build GCC\"\n+\terror \"Could not bootstrap the compiler\"\n }\n \n # Test GCC.\n@@ -223,11 +234,12 @@ CONFIGURE_OPTIONS=\n # The `make' program.\n MAKE=${MAKE:-make}\n # Options to pass to make.\n-MAKE_OPTIONS=\n+MAKE_BOOTSTRAP_OPTIONS=\n \n # Modes of operation\n-BUILD=0\n+BOOTSTRAP=0\n CHECKOUT=0\n+CONFIGURE=0\n EXPORT=0\n INSTALL=0\n TEST=0\n@@ -242,7 +254,7 @@ while getopts \"c:d:m:p:t:u:\" ARG; do\n     case $ARG in\n     c)    CONFIGURE_OPTIONS=\"${OPTARG}\";;\n     d)    DESTINATION=\"${OPTARG}\";;\n-    m)    MAKE_OPTIONS=\"${OPTARG}\";;\n+    m)    MAKE_BOOTSTRAP_OPTIONS=\"${OPTARG}\";;\n     p)    CVS_PROTOCOL=\"${OPTARG}\";;\n     t)    CVS_TARGFILE=\"${OPTARG}\";;\n     u)    CVS_USERNAME=\"${OPTARG}\";;\n@@ -254,8 +266,10 @@ shift `expr ${OPTIND} - 1`\n # Handle the major modes.\n while [ $# -ne 0 ]; do\n     case $1 in\n-    build)    BUILD=1;;\n+    bootstrap) BOOTSTRAP=1;;\n+    build)    CONFIGURE=1; BOOTSTRAP=1;;\n     checkout) CHECKOUT=1;;\n+    configure) CONFIGURE=1;;\n     export)   EXPORT=1;;\n     install)  INSTALL=1;;\n     test)     TEST=1;;\n@@ -282,9 +296,14 @@ elif [ ${UPDATE} -ne 0 ]; then\n     update_gcc\n fi\n \n-# Build the compiler.\n-if [ ${BUILD} -ne 0 ]; then\n-    build_gcc\n+# Configure to build the tree.\n+if [ ${CONFIGURE} -ne 0 ]; then\n+    configure_gcc\n+fi\n+\n+# Bootstrap the compiler.\n+if [ ${BOOTSTRAP} -ne 0 ]; then\n+    bootstrap_gcc\n fi\n \n # Test the compiler"}]}