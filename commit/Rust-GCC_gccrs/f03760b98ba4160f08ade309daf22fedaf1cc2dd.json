{"sha": "f03760b98ba4160f08ade309daf22fedaf1cc2dd", "node_id": "C_kwDOANBUbNoAKGYwMzc2MGI5OGJhNDE2MGYwOGFkZTMwOWRhZjIyZmVkYWYxY2MyZGQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-09-08T00:08:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-08T00:08:07Z"}, "message": "Merge #1526\n\n1526: backend: correctly formulate the exit condition r=philberty a=liushuyu\n\n- backend: correctly formulate the exit condition. Previously the exit condition was treated the same as the loop condition (which is the inverse condition of the exit condition). Now, this is corrected.\r\n\r\nShould fix #1523 \n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>", "tree": {"sha": "9ddcf544de1b049b32b7511d6f18c01a12ceaa8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ddcf544de1b049b32b7511d6f18c01a12ceaa8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03760b98ba4160f08ade309daf22fedaf1cc2dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjGTJnCRBK7hj4Ov3rIwAAm88IAJjflCBcSNE+aHVUDYjU8E4R\nv/8l3ZtOmX7L6g51jn1FtwOkQW6PcMPOfveLNaU+cRxppgPFhXxm0R5fclLswMeq\npPQ+GODLYu95QrWmHpbg6Q0OG3jtZnz46YQNyKE72JGdPReCPtGbmEbYJ/sHrF8/\naUSG3RrZnpeXRW8d51S2OHaY3Tra47G+GHaizDFjZdrHT71u7LvdK2SHTRtxMObQ\nEBOg9gY/vuVuIgUL6pI5bG1DjYphdek+3+7ECnSYKqxk7/xln4CHydn9sZWrYZ/c\nQFV6Uyvp0ri+o0fbz/79QV7Raa8sXkIaMvoyVuS4VMJqhDRNB9RC9PvayQ2+MWg=\n=tLPb\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ddcf544de1b049b32b7511d6f18c01a12ceaa8d\nparent 8c6b017310ec3b4f77500d5fa8311e995d655c1a\nparent 6839ad40eebf982f149452cc294ab387350abcef\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1662595687 +0000\ncommitter GitHub <noreply@github.com> 1662595687 +0000\n\nMerge #1526\n\n1526: backend: correctly formulate the exit condition r=philberty a=liushuyu\n\n- backend: correctly formulate the exit condition. Previously the exit condition was treated the same as the loop condition (which is the inverse condition of the exit condition). Now, this is corrected.\r\n\r\nShould fix #1523 \n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03760b98ba4160f08ade309daf22fedaf1cc2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03760b98ba4160f08ade309daf22fedaf1cc2dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03760b98ba4160f08ade309daf22fedaf1cc2dd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6b017310ec3b4f77500d5fa8311e995d655c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6b017310ec3b4f77500d5fa8311e995d655c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6b017310ec3b4f77500d5fa8311e995d655c1a"}, {"sha": "6839ad40eebf982f149452cc294ab387350abcef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6839ad40eebf982f149452cc294ab387350abcef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6839ad40eebf982f149452cc294ab387350abcef"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "660ad092b77276313416545cd397841c8ef218c7", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03760b98ba4160f08ade309daf22fedaf1cc2dd/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03760b98ba4160f08ade309daf22fedaf1cc2dd/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=f03760b98ba4160f08ade309daf22fedaf1cc2dd", "patch": "@@ -727,8 +727,11 @@ CompileExpr::visit (HIR::WhileLoopExpr &expr)\n \n   tree condition\n     = CompileExpr::Compile (expr.get_predicate_expr ().get (), ctx);\n+  tree exit_condition\n+    = fold_build1_loc (expr.get_locus ().gcc_location (), TRUTH_NOT_EXPR,\n+\t\t       boolean_type_node, condition);\n   tree exit_expr\n-    = ctx->get_backend ()->exit_expression (condition, expr.get_locus ());\n+    = ctx->get_backend ()->exit_expression (exit_condition, expr.get_locus ());\n   ctx->add_statement (exit_expr);\n \n   tree code_block_stmt"}, {"sha": "008965917ab0bdf5a7f818c91201b8d7b8c2ec91", "filename": "gcc/testsuite/rust/execute/torture/loop-condition-eval.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03760b98ba4160f08ade309daf22fedaf1cc2dd/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Floop-condition-eval.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03760b98ba4160f08ade309daf22fedaf1cc2dd/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Floop-condition-eval.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Floop-condition-eval.rs?ref=f03760b98ba4160f08ade309daf22fedaf1cc2dd", "patch": "@@ -0,0 +1,21 @@\n+// { dg-output \"1\\n\" }\n+pub fn test() -> u64 {\n+    let mut n = 113383; // #20 in https://oeis.org/A006884\n+    while n != 1 {\n+        n = if n % 2 == 0 { n / 2 } else { 3 * n + 1 };\n+    }\n+    n\n+}\n+\n+pub fn test_1() -> u64 {\n+    test()\n+}\n+\n+extern \"C\" {\n+    fn printf(fmt: *const i8, ...);\n+}\n+\n+fn main() -> i32 {\n+    unsafe { printf(\"%lu\\n\" as *const str as *const i8, test_1()) }\n+    0\n+}"}]}