{"sha": "ff3f395157c42a6d2c922de085f5a890834f975b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYzZjM5NTE1N2M0MmE2ZDJjOTIyZGUwODVmNWE4OTA4MzRmOTc1Yg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2013-07-29T14:37:30Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2013-07-29T14:37:30Z"}, "message": "linux.h (GLIBC_DYNAMIC_LINKER): Handle `-mnan=2008'.\n\n\tgcc/\n\t* config/mips/linux.h (GLIBC_DYNAMIC_LINKER): Handle `-mnan=2008'.\n\t(UCLIBC_DYNAMIC_LINKER): New macro.\n\t* config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32): Handle\n\t`-mnan=2008'.\n\t(GLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32): Likewise.\n\t(UCLIBC_DYNAMIC_LINKER32): Undefine macro first.  Handle\n\t`-mnan=2008'.\n\t(UCLIBC_DYNAMIC_LINKER64): Redefine macro.\n\t(UCLIBC_DYNAMIC_LINKERN32): Likewise.\n\t* config/mips/mips-modes.def: Remove RESET_FLOAT_FORMAT calls\n\tfor SF and DF modes.  Use ieee_quad_format for TF mode.\n\t* config/mips/mips-opts.h (mips_ieee_754_setting): New enum.\n\t* config/mips/mips.c (mips_file_start): Output a `.nan' directive.\n\t(mips_option_override): Handle `-mnan=legacy'.\n\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Handle\n\t`-mabs=2008' and `-mnan=2008'.\n\t(OPTION_DEFAULT_SPECS): Add \"nan\" default.\n\t(ASM_SPEC): Handle `-mnan='.\n\t[!HAVE_AS_NAN] (HAVE_AS_NAN): New macro.\n\t* config/mips/mips.md (abs<mode>2): Handle `-mabs=2008', update\n\tcomment accordingly.\n\t(neg<mode>2): Likewise.\n\t* config/mips/mips.opt (mabs, mnan): New options.\n\t* doc/install.texi (Configuration): Document `--with-nan=' option.\n\t* doc/invoke.texi (Option Summary): List MIPS `-mabs=' and\n\t`-mnan=' options.\n\t(MIPS Options): Document them.\n\t* config.gcc <mips*-*-*>: Handle `--with-nan='.\n\t* configure.ac <mips*-*-*>: Check for GAS `-mnan=2008' support.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\n\tgcc/testsuite/\n\t* gcc.target/mips/fabs-2008.c: New test case.\n\t* gcc.target/mips/fabs-legacy.c: New test case.\n\t* gcc.target/mips/fabsf-2008.c: New test case.\n\t* gcc.target/mips/fabsf-legacy.c: New test case.\n\t* gcc.target/mips/fneg-2008.c: New test case.\n\t* gcc.target/mips/fneg-legacy.c: New test case.\n\t* gcc.target/mips/fneg-2008.c: New test case.\n\t* gcc.target/mips/fneg-legacy.c: New test case.\n\t* gcc.target/mips/nan-2008.c: New test case.\n\t* gcc.target/mips/nan-legacy.c: New test case.\n\t* gcc.target/mips/nanf-2008.c: New test case.\n\t* gcc.target/mips/nanf-legacy.c: New test case.\n\t* gcc.target/mips/nans-2008.c: New test case.\n\t* gcc.target/mips/nans-legacy.c: New test case.\n\t* gcc.target/mips/nansf-2008.c: New test case.\n\t* gcc.target/mips/nansf-legacy.c: New test case.\n\t* gcc.target/mips/mips.exp: Handle `-mabs=' and `-mnan='.\n\nFrom-SVN: r201313", "tree": {"sha": "4b72a5f006ea9267e8c0e91ce37fdae020e14228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b72a5f006ea9267e8c0e91ce37fdae020e14228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff3f395157c42a6d2c922de085f5a890834f975b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3f395157c42a6d2c922de085f5a890834f975b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff3f395157c42a6d2c922de085f5a890834f975b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3f395157c42a6d2c922de085f5a890834f975b/comments", "author": null, "committer": null, "parents": [{"sha": "576e2f37400cecb0cdb4537c7777284b7878e7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576e2f37400cecb0cdb4537c7777284b7878e7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576e2f37400cecb0cdb4537c7777284b7878e7c0"}], "stats": {"total": 442, "additions": 419, "deletions": 23}, "files": [{"sha": "4237a6d2550b3d79c52c75fc4b31894b37ae67dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -1,3 +1,37 @@\n+2013-07-29  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* config/mips/linux.h (GLIBC_DYNAMIC_LINKER): Handle `-mnan=2008'.\n+\t(UCLIBC_DYNAMIC_LINKER): New macro.\n+\t* config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32): Handle\n+\t`-mnan=2008'.\n+\t(GLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32): Likewise.\n+\t(UCLIBC_DYNAMIC_LINKER32): Undefine macro first.  Handle\n+\t`-mnan=2008'.\n+\t(UCLIBC_DYNAMIC_LINKER64): Redefine macro.\n+\t(UCLIBC_DYNAMIC_LINKERN32): Likewise.\n+\t* config/mips/mips-modes.def: Remove RESET_FLOAT_FORMAT calls\n+\tfor SF and DF modes.  Use ieee_quad_format for TF mode.\n+\t* config/mips/mips-opts.h (mips_ieee_754_setting): New enum.\n+\t* config/mips/mips.c (mips_file_start): Output a `.nan' directive.\n+\t(mips_option_override): Handle `-mnan=legacy'.\n+\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Handle\n+\t`-mabs=2008' and `-mnan=2008'.\n+\t(OPTION_DEFAULT_SPECS): Add \"nan\" default.\n+\t(ASM_SPEC): Handle `-mnan='.\n+\t[!HAVE_AS_NAN] (HAVE_AS_NAN): New macro.\n+\t* config/mips/mips.md (abs<mode>2): Handle `-mabs=2008', update\n+\tcomment accordingly.\n+\t(neg<mode>2): Likewise.\n+\t* config/mips/mips.opt (mabs, mnan): New options.\n+\t* doc/install.texi (Configuration): Document `--with-nan=' option.\n+\t* doc/invoke.texi (Option Summary): List MIPS `-mabs=' and\n+\t`-mnan=' options.\n+\t(MIPS Options): Document them.\n+\t* config.gcc <mips*-*-*>: Handle `--with-nan='.\n+\t* configure.ac <mips*-*-*>: Check for GAS `-mnan=2008' support.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2013-07-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (float post-reload splitters): Do not check"}, {"sha": "e4c42ab6966d780e0558d6d6c9db44fffb9ae34b", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -3532,7 +3532,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu tune tune_32 tune_64 divide llsc mips-plt synci\"\n+\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu nan tune tune_32 tune_64 divide llsc mips-plt synci\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)\n@@ -3554,6 +3554,16 @@ case \"${target}\" in\n \t\t\t;;\n \t\tesac\n \n+\t\tcase ${with_nan} in\n+\t\t\"\" | 2008 | legacy)\n+\t\t\t# OK\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown NaN encoding used in --with-nan=$with_nan\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\n \t\tcase ${with_abi} in\n \t\t\"\" | 32 | o64 | n32 | 64 | eabi)\n \t\t\t# OK\n@@ -3913,7 +3923,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu divide llsc mips-plt synci tls\"\n+all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan divide llsc mips-plt synci tls\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_\"`echo $option | sed s/-/_/g`"}, {"sha": "25890e889ba0c7cd0ed67cfefddb8c18c3813cfc", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -417,6 +417,12 @@\n #endif\n \n \n+/* Define if the assembler understands -mnan=. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_NAN\n+#endif\n+\n+\n /* Define if your assembler supports the -no-mul-bug-abort option. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_NO_MUL_BUG_ABORT_OPTION"}, {"sha": "6736295eb363d2bd4089bfe8fbbcc5c2f28cd4b5", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -17,4 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#define GLIBC_DYNAMIC_LINKER \"/lib/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKER \\\n+  \"%{mnan=2008:/lib/ld-linux-mipsn8.so.1;:/lib/ld.so.1}\"\n+\n+#undef UCLIBC_DYNAMIC_LINKER\n+#define UCLIBC_DYNAMIC_LINKER \\\n+  \"%{mnan=2008:/lib/ld-uClibc-mipsn8.so.0;:/lib/ld-uClibc.so.0}\""}, {"sha": "421a53a1085f207aac6abdf6cbcdfef9f9019003", "filename": "gcc/config/mips/linux64.h", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux64.h?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -22,10 +22,22 @@ along with GCC; see the file COPYING3.  If not see\n #define GNU_USER_LINK_EMULATION64 \"elf64%{EB:b}%{EL:l}tsmip\"\n #define GNU_USER_LINK_EMULATIONN32 \"elf32%{EB:b}%{EL:l}tsmipn32\"\n \n-#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n-#define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld.so.1\"\n-#define GLIBC_DYNAMIC_LINKERN32 \"/lib32/ld.so.1\"\n-#define UCLIBC_DYNAMIC_LINKERN32 \"/lib32/ld-uClibc.so.0\"\n+#define GLIBC_DYNAMIC_LINKER32 \\\n+  \"%{mnan=2008:/lib/ld-linux-mipsn8.so.1;:/lib/ld.so.1}\"\n+#define GLIBC_DYNAMIC_LINKER64 \\\n+  \"%{mnan=2008:/lib64/ld-linux-mipsn8.so.1;:/lib64/ld.so.1}\"\n+#define GLIBC_DYNAMIC_LINKERN32 \\\n+  \"%{mnan=2008:/lib32/ld-linux-mipsn8.so.1;:/lib32/ld.so.1}\"\n+\n+#undef UCLIBC_DYNAMIC_LINKER32\n+#define UCLIBC_DYNAMIC_LINKER32 \\\n+  \"%{mnan=2008:/lib/ld-uClibc-mipsn8.so.0;:/lib/ld-uClibc.so.0}\"\n+#undef UCLIBC_DYNAMIC_LINKER64\n+#define UCLIBC_DYNAMIC_LINKER64 \\\n+  \"%{mnan=2008:/lib/ld64-uClibc-mipsn8.so.0;:/lib/ld64-uClibc.so.0}\"\n+#define UCLIBC_DYNAMIC_LINKERN32 \\\n+  \"%{mnan=2008:/lib32/ld-uClibc-mipsn8.so.0;:/lib32/ld-uClibc.so.0}\"\n+\n #define BIONIC_DYNAMIC_LINKERN32 \"/system/bin/linker32\"\n #define GNU_USER_DYNAMIC_LINKERN32 \\\n   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKERN32, UCLIBC_DYNAMIC_LINKERN32, \\"}, {"sha": "383d2cb6d43907d082a54669082935c9242292e8", "filename": "gcc/config/mips/mips-modes.def", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-modes.def?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -17,12 +17,7 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* MIPS has a quirky almost-IEEE format for all its\n-   floating point.  */\n-RESET_FLOAT_FORMAT (SF, mips_single_format);\n-RESET_FLOAT_FORMAT (DF, mips_double_format);\n-\n-FLOAT_MODE (TF, 16, mips_quad_format);\n+FLOAT_MODE (TF, 16, ieee_quad_format);\n \n /* Vector modes.  */\n VECTOR_MODES (INT, 4);        /* V4QI  V2HI      */"}, {"sha": "56249d94c4e2b4264b21242445cb4dab2ef76b1d", "filename": "gcc/config/mips/mips-opts.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-opts.h?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -27,6 +27,13 @@ enum mips_code_readable_setting {\n   CODE_READABLE_YES\n };\n \n+/* Enumerates the setting of the -mabs and -mnan options.  */\n+enum mips_ieee_754_setting {\n+  MIPS_IEEE_754_DEFAULT,\n+  MIPS_IEEE_754_LEGACY,\n+  MIPS_IEEE_754_2008\n+};\n+\n /* Enumerates the setting of the -mr10k-cache-barrier option.  */\n enum mips_r10k_cache_barrier_setting {\n   R10K_CACHE_BARRIER_NONE,"}, {"sha": "46e1d2d7c210d1a8bc3e387ef04a89234c8b1274", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -8843,6 +8843,11 @@ mips_file_start (void)\n     fprintf (asm_out_file, \"\\t.section .gcc_compiled_long%d\\n\"\n \t     \"\\t.previous\\n\", TARGET_LONG64 ? 64 : 32);\n \n+  /* Record the NaN encoding.  */\n+  if (HAVE_AS_NAN || mips_nan != MIPS_IEEE_754_DEFAULT)\n+    fprintf (asm_out_file, \"\\t.nan\\t%s\\n\",\n+\t     mips_nan == MIPS_IEEE_754_2008 ? \"2008\" : \"legacy\");\n+\n #ifdef HAVE_AS_GNU_ATTRIBUTE\n   {\n     int attr;\n@@ -16980,6 +16985,15 @@ mips_option_override (void)\n \t}\n     }\n \n+  /* Pre-IEEE 754-2008 MIPS hardware has a quirky almost-IEEE format\n+     for all its floating point.  */\n+  if (mips_nan != MIPS_IEEE_754_2008)\n+    {\n+      REAL_MODE_FORMAT (SFmode) = &mips_single_format;\n+      REAL_MODE_FORMAT (DFmode) = &mips_double_format;\n+      REAL_MODE_FORMAT (TFmode) = &mips_quad_format;\n+    }\n+\n   /* Make sure that the user didn't turn off paired single support when\n      MIPS-3D support is requested.  */\n   if (TARGET_MIPS3D"}, {"sha": "af7eeee6682b36f2bac91fd63acca9c895f14806", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -507,6 +507,12 @@ struct mips_cpu_info {\n       if (TARGET_PAIRED_SINGLE_FLOAT)\t\t\t\t\t\\\n \tbuiltin_define (\"__mips_paired_single_float\");\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n+      if (mips_abs == MIPS_IEEE_754_2008)\t\t\t\t\\\n+\tbuiltin_define (\"__mips_abs2008\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (mips_nan == MIPS_IEEE_754_2008)\t\t\t\t\\\n+\tbuiltin_define (\"__mips_nan2008\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n       if (TARGET_BIG_ENDIAN)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  builtin_define_std (\"MIPSEB\");\t\t\t\t\\\n@@ -743,6 +749,7 @@ struct mips_cpu_info {\n    --with-abi is ignored if -mabi is specified.\n    --with-float is ignored if -mhard-float or -msoft-float are\n      specified.\n+   --with-nan is ignored if -mnan is specified.\n    --with-divide is ignored if -mdivide-traps or -mdivide-breaks are\n      specified. */\n #define OPTION_DEFAULT_SPECS \\\n@@ -755,6 +762,7 @@ struct mips_cpu_info {\n   {\"abi\", \"%{!mabi=*:-mabi=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:-m%(VALUE)-float}}\" }, \\\n   {\"fpu\", \"%{!msingle-float:%{!mdouble-float:-m%(VALUE)-float}}\" }, \\\n+  {\"nan\", \"%{!mnan=*:-mnan=%(VALUE)}\" }, \\\n   {\"divide\", \"%{!mdivide-traps:%{!mdivide-breaks:-mdivide-%(VALUE)}}\" }, \\\n   {\"llsc\", \"%{!mllsc:%{!mno-llsc:-m%(VALUE)}}\" }, \\\n   {\"mips-plt\", \"%{!mplt:%{!mno-plt:-m%(VALUE)}}\" }, \\\n@@ -1160,7 +1168,7 @@ struct mips_cpu_info {\n %(subtarget_asm_debugging_spec) \\\n %{mabi=*} %{!mabi=*: %(asm_abi_default_spec)} \\\n %{mgp32} %{mgp64} %{march=*} %{mxgot:-xgot} \\\n-%{mfp32} %{mfp64} \\\n+%{mfp32} %{mfp64} %{mnan=*} \\\n %{mshared} %{mno-shared} \\\n %{msym32} %{mno-sym32} \\\n %{mtune=*} \\\n@@ -2897,6 +2905,10 @@ while (0)\n #define HAVE_AS_TLS 0\n #endif\n \n+#ifndef HAVE_AS_NAN\n+#define HAVE_AS_NAN 0\n+#endif\n+\n #ifndef USED_FOR_TARGET\n /* Information about \".set noFOO; ...; .set FOO\" blocks.  */\n struct mips_asm_switch {"}, {"sha": "397c40ab1801908bddf8d98c52a70522d8d8b1c3", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -2711,14 +2711,15 @@\n ;; Do not use the integer abs macro instruction, since that signals an\n ;; exception on -2147483648 (sigh).\n \n-;; abs.fmt is an arithmetic instruction and treats all NaN inputs as\n-;; invalid; it does not clear their sign bits.  We therefore can't use\n-;; abs.fmt if the signs of NaNs matter.\n+;; The \"legacy\" (as opposed to \"2008\") form of ABS.fmt is an arithmetic\n+;; instruction that treats all NaN inputs as invalid; it does not clear\n+;; their sign bit.  We therefore can't use that form if the signs of\n+;; NaNs matter.\n \n (define_insn \"abs<mode>2\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(abs:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")))]\n-  \"!HONOR_NANS (<MODE>mode)\"\n+  \"mips_abs == MIPS_IEEE_754_2008 || !HONOR_NANS (<MODE>mode)\"\n   \"abs.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"fabs\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n@@ -2793,14 +2794,15 @@\n   [(set_attr \"alu_type\"\t\"sub\")\n    (set_attr \"mode\"\t\"DI\")])\n \n-;; neg.fmt is an arithmetic instruction and treats all NaN inputs as\n-;; invalid; it does not flip their sign bit.  We therefore can't use\n-;; neg.fmt if the signs of NaNs matter.\n+;; The \"legacy\" (as opposed to \"2008\") form of NEG.fmt is an arithmetic\n+;; instruction that treats all NaN inputs as invalid; it does not flip\n+;; their sign bit.  We therefore can't use that form if the signs of\n+;; NaNs matter.\n \n (define_insn \"neg<mode>2\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(neg:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")))]\n-  \"!HONOR_NANS (<MODE>mode)\"\n+  \"mips_abs == MIPS_IEEE_754_2008 || !HONOR_NANS (<MODE>mode)\"\n   \"neg.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"fneg\")\n    (set_attr \"mode\" \"<UNITMODE>\")])"}, {"sha": "0324041dbeaa6fbcd468c31750105c10ae6852d2", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -205,6 +205,24 @@ mfused-madd\n Target Report Mask(FUSED_MADD)\n Generate floating-point multiply-add instructions\n \n+mabs=\n+Target RejectNegative Joined Enum(mips_ieee_754_value) Var(mips_abs) Init(MIPS_IEEE_754_DEFAULT)\n+-mabs=MODE\tSelect the IEEE 754 ABS/NEG instruction execution mode\n+\n+mnan=\n+Target RejectNegative Joined Enum(mips_ieee_754_value) Var(mips_nan) Init(MIPS_IEEE_754_DEFAULT)\n+-mnan=ENCODING\tSelect the IEEE 754 NaN data encoding\n+\n+Enum\n+Name(mips_ieee_754_value) Type(int)\n+Known MIPS IEEE 754 settings (for use with the -mabs= and -mnan= options):\n+\n+EnumValue\n+Enum(mips_ieee_754_value) String(2008) Value(MIPS_IEEE_754_2008)\n+\n+EnumValue\n+Enum(mips_ieee_754_value) String(legacy) Value(MIPS_IEEE_754_LEGACY)\n+\n mgp32\n Target Report RejectNegative InverseMask(64BIT)\n Use 32-bit general registers"}, {"sha": "0d6ddaad4f313b1a061f933390ddeda87445e16e", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -26019,6 +26019,41 @@ $as_echo \"$gcc_cv_ld_mips_personality_relaxation\" >&6; }\n $as_echo \"#define HAVE_LD_PERSONALITY_RELAXATION 1\" >>confdefs.h\n \n     fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -mnan= support\" >&5\n+$as_echo_n \"checking assembler for -mnan= support... \" >&6; }\n+if test \"${gcc_cv_as_mips_nan+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_mips_nan=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -mnan=2008 -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_mips_nan=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_mips_nan\" >&5\n+$as_echo \"$gcc_cv_as_mips_nan\" >&6; }\n+if test $gcc_cv_as_mips_nan = yes; then\n+\n+$as_echo \"#define HAVE_AS_NAN 1\" >>confdefs.h\n+\n+fi\n+    if test x$gcc_cv_as_mips_nan = xno \\\n+       && test x$with_nan != x; then\n+      as_fn_error \"Requesting --with-nan= requires assembler support for -mnan=\" \"$LINENO\" 5\n+    fi\n     ;;\n esac\n "}, {"sha": "b279373410a401c137409ae75f648759e3eb34c8", "filename": "gcc/configure.ac", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -4168,6 +4168,17 @@ EOF\n       [Define if your linker can relax absolute .eh_frame personality\n pointers into PC-relative form.])\n     fi\n+\n+    gcc_GAS_CHECK_FEATURE([-mnan= support],\n+      gcc_cv_as_mips_nan,,\n+      [-mnan=2008],,,\n+      [AC_DEFINE(HAVE_AS_NAN, 1,\n+\t\t [Define if the assembler understands -mnan=.])])\n+    if test x$gcc_cv_as_mips_nan = xno \\\n+       && test x$with_nan != x; then\n+      AC_MSG_ERROR(\n+\t[Requesting --with-nan= requires assembler support for -mnan=])\n+    fi\n     ;;\n esac\n "}, {"sha": "9e5ba5e66c00cb602aee8e5018f9284635f1373b", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -1221,6 +1221,24 @@ ISA for floating-point arithmetics.  You can select either @samp{sse} which\n enables @option{-msse2} or @samp{avx} which enables @option{-mavx} by default.\n This option is only supported on i386 and x86-64 targets.\n \n+@item --with-nan=@var{encoding}\n+On MIPS targets, set the default encoding convention to use for the\n+special not-a-number (NaN) IEEE 754 floating-point data.  The\n+possibilities for @var{encoding} are:\n+@table @code\n+@item legacy\n+Use the legacy encoding, as with the @option{-mnan=legacy} command-line\n+option.\n+@item 2008\n+Use the 754-2008 encoding, as with the @option{-mnan=2008} command-line\n+option.\n+@end table\n+To use this configuration option you must have an assembler version\n+installed that supports the @option{-mnan=} command-line option too.\n+In the absence of this configuration option the default convention is\n+the legacy encoding, as when neither of the @option{-mnan=2008} and\n+@option{-mnan=legacy} command-line options has been used.\n+\n @item --with-divide=@var{type}\n Specify how the compiler should generate code for checking for\n division by zero.  This option is only supported on the MIPS target."}, {"sha": "92cc25002a34feacf7157c9daf4a88fb5e598e41", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -750,7 +750,8 @@ Objective-C and Objective-C++ Dialects}.\n -mabi=@var{abi}  -mabicalls  -mno-abicalls @gol\n -mshared  -mno-shared  -mplt  -mno-plt  -mxgot  -mno-xgot @gol\n -mgp32  -mgp64  -mfp32  -mfp64  -mhard-float  -msoft-float @gol\n--mno-float -msingle-float  -mdouble-float  @gol\n+-mno-float  -msingle-float  -mdouble-float @gol\n+-mabs=@var{mode}  -mnan=@var{encoding} @gol\n -mdsp  -mno-dsp  -mdspr2  -mno-dspr2 @gol\n -mmcu -mmno-mcu @gol\n -meva -mno-eva @gol\n@@ -16324,6 +16325,48 @@ operations.\n Assume that the floating-point coprocessor supports double-precision\n operations.  This is the default.\n \n+@item -mabs=2008\n+@itemx -mabs=legacy\n+@opindex mabs=2008\n+@opindex mabs=legacy\n+These options control the treatment of the special not-a-number (NaN)\n+IEEE 754 floating-point data with the @code{abs.@i{fmt}} and\n+@code{neg.@i{fmt}} machine instructions.\n+\n+By default or when the @option{-mabs=legacy} is used the legacy\n+treatment is selected.  In this case these instructions are considered\n+arithmetic and avoided where correct operation is required and the\n+input operand might be a NaN.  A longer sequence of instructions that\n+manipulate the sign bit of floating-point datum manually is used\n+instead unless the @option{-ffinite-math-only} option has also been\n+specified.\n+\n+The @option{-mabs=2008} option selects the IEEE 754-2008 treatment.  In\n+this case these instructions are considered non-arithmetic and therefore\n+operating correctly in all cases, including in particular where the\n+input operand is a NaN.  These instructions are therefore always used\n+for the respective operations.\n+\n+@item -mnan=2008\n+@itemx -mnan=legacy\n+@opindex mnan=2008\n+@opindex mnan=legacy\n+These options control the encoding of the special not-a-number (NaN)\n+IEEE 754 floating-point data.\n+\n+The @option{-mnan=legacy} option selects the legacy encoding.  In this\n+case quiet NaNs (qNaNs) are denoted by the first bit of their trailing\n+significand field being 0, whereas signalling NaNs (sNaNs) are denoted\n+by the first bit of their trailing significand field being 1.\n+\n+The @option{-mnan=2008} option selects the IEEE 754-2008 encoding.  In\n+this case qNaNs are denoted by the first bit of their trailing\n+significand field being 1, whereas sNaNs are denoted by the first bit of\n+their trailing significand field being 0.\n+\n+The default is @option{-mnan=legacy} unless GCC has been configured with\n+@option{--with-nan=2008}.\n+\n @item -mllsc\n @itemx -mno-llsc\n @opindex mllsc"}, {"sha": "7c022b708263ee0948b83bf3485579573aa0560e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -1,3 +1,23 @@\n+2013-07-29  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* gcc.target/mips/fabs-2008.c: New test case.\n+\t* gcc.target/mips/fabs-legacy.c: New test case.\n+\t* gcc.target/mips/fabsf-2008.c: New test case.\n+\t* gcc.target/mips/fabsf-legacy.c: New test case.\n+\t* gcc.target/mips/fneg-2008.c: New test case.\n+\t* gcc.target/mips/fneg-legacy.c: New test case.\n+\t* gcc.target/mips/fneg-2008.c: New test case.\n+\t* gcc.target/mips/fneg-legacy.c: New test case.\n+\t* gcc.target/mips/nan-2008.c: New test case.\n+\t* gcc.target/mips/nan-legacy.c: New test case.\n+\t* gcc.target/mips/nanf-2008.c: New test case.\n+\t* gcc.target/mips/nanf-legacy.c: New test case.\n+\t* gcc.target/mips/nans-2008.c: New test case.\n+\t* gcc.target/mips/nans-legacy.c: New test case.\n+\t* gcc.target/mips/nansf-2008.c: New test case.\n+\t* gcc.target/mips/nansf-legacy.c: New test case.\n+\t* gcc.target/mips/mips.exp: Handle `-mabs=' and `-mnan='.\n+\n 2013-07-29  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuvyrkov  <maxim@kugelworks.com>\n "}, {"sha": "f48437d58cf9335d3088cdf8bd00effff54026ee", "filename": "gcc/testsuite/gcc.target/mips/fabs-2008.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=2008\" } */\n+\n+NOMIPS16 double\n+fabs_2008 (double d)\n+{\n+  return __builtin_fabs (d);\n+}\n+\n+/* { dg-final { scan-assembler \"\\tabs\\.d\\t\" } } */"}, {"sha": "af86b85fb83060d62f7f518ea7508256d18bc006", "filename": "gcc/testsuite/gcc.target/mips/fabs-legacy.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabs-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=legacy\" } */\n+\n+NOMIPS16 double\n+fabs_legacy (double d)\n+{\n+  return __builtin_fabs (d);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tabs\\.d\\t\" } } */"}, {"sha": "229dae66b8f0c8ed23b5009ed22dd85d9452ed9f", "filename": "gcc/testsuite/gcc.target/mips/fabsf-2008.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=2008\" } */\n+\n+NOMIPS16 float\n+fabsf_2008 (float f)\n+{\n+  return __builtin_fabsf (f);\n+}\n+\n+/* { dg-final { scan-assembler \"\\tabs\\.s\\t\" } } */"}, {"sha": "453a0690ef8a89b7819262e8732271aea0ff661c", "filename": "gcc/testsuite/gcc.target/mips/fabsf-legacy.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffabsf-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=legacy\" } */\n+\n+NOMIPS16 float\n+fabsf_legacy (float f)\n+{\n+  return __builtin_fabsf (f);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tabs\\.s\\t\" } } */"}, {"sha": "7d76f45292db253843c8e0ec88c4b96d3dbfdf83", "filename": "gcc/testsuite/gcc.target/mips/fneg-2008.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=2008\" } */\n+\n+NOMIPS16 double\n+fneg_2008 (double d)\n+{\n+  return -d;\n+}\n+\n+/* { dg-final { scan-assembler \"\\tneg\\.d\\t\" } } */"}, {"sha": "cd1422df14893ef6a7afe1bcbd63b55f6ff8e04a", "filename": "gcc/testsuite/gcc.target/mips/fneg-legacy.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffneg-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=legacy\" } */\n+\n+NOMIPS16 double\n+fneg_legacy (double d)\n+{\n+  return -d;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tneg\\.d\\t\" } } */"}, {"sha": "72d8ef15f9723152864724a37678cdc8e5c61dd3", "filename": "gcc/testsuite/gcc.target/mips/fnegf-2008.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=2008\" } */\n+\n+NOMIPS16 float\n+fnegf_2008 (float f)\n+{\n+  return -f;\n+}\n+\n+/* { dg-final { scan-assembler \"\\tneg\\.s\\t\" } } */"}, {"sha": "946a6ef6772e387148eca299918f6302fc3333e3", "filename": "gcc/testsuite/gcc.target/mips/fnegf-legacy.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffnegf-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabs=legacy\" } */\n+\n+NOMIPS16 float\n+fnegf_legacy (float f)\n+{\n+  return -f;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tneg\\.s\\t\" } } */"}, {"sha": "f648f0736593863c0a8f349b679c5c8422d501cd", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -276,8 +276,10 @@ foreach option {\n \n # Add -mfoo= options to mips_option_groups.\n foreach option {\n+    abs\n     branch-cost\n     code-readable\n+    nan\n     r10k-cache-barrier\n     tune\n } {\n@@ -705,6 +707,18 @@ proc mips-dg-init {} {\n \t    \"-msoft-float\",\n \t    #endif\n \n+\t    #ifdef __mips_abs2008\n+\t    \"-mabs=2008\",\n+\t    #else\n+\t    \"-mabs=legacy\",\n+\t    #endif\n+\n+\t    #ifdef __mips_nan2008\n+\t    \"-mnan=2008\",\n+\t    #else\n+\t    \"-mnan=legacy\",\n+\t    #endif\n+\n \t    #if __mips_fpr == 64\n \t    \"-mfp64\",\n \t    #else\n@@ -826,6 +840,8 @@ proc mips-dg-finish {} {\n #            |                           |\n #         -mfp64                      -mfp32\n #            |                           |\n+#         -mabs=2008/-mabs=legacy     <no option>\n+#            |                           |\n #         -mhard-float                -msoft-float\n #            |                           |\n #         -mno-sym32                  -msym32\n@@ -913,6 +929,8 @@ proc mips-dg-options { args } {\n     mips_option_dependency options \"-mips3d\" \"-mpaired-single\"\n     mips_option_dependency options \"-mpaired-single\" \"-mfp64\"\n     mips_option_dependency options \"-mfp64\" \"-mhard-float\"\n+    mips_option_dependency options \"-mabs=2008\" \"-mhard-float\"\n+    mips_option_dependency options \"-mabs=legacy\" \"-mhard-float\"\n     mips_option_dependency options \"-mrelax-pic-calls\" \"-mno-plt\"\n     mips_option_dependency options \"-mrelax-pic-calls\" \"-mabicalls\"\n     mips_option_dependency options \"-mrelax-pic-calls\" \"-mexplicit-relocs\""}, {"sha": "b31299dfda0a5de85ea4a703cc3859b75ce7a4ae", "filename": "gcc/testsuite/gcc.target/mips/nan-2008.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=2008 -EB\" } */\n+\n+double d = __builtin_nan (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\t2008\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2146959360\\n\\t.word\\t0\\n\" } } */"}, {"sha": "8ae7166d083924835cdcaeb1cbd43066bab44121", "filename": "gcc/testsuite/gcc.target/mips/nan-legacy.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnan-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=legacy -EB\" } */\n+\n+double d = __builtin_nan (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\tlegacy\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2146959359\\n\\t.word\\t-1\\n\" } } */"}, {"sha": "6c5bd7babe51895efe887f15c8848b0d6b03c28d", "filename": "gcc/testsuite/gcc.target/mips/nanf-2008.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=2008 -EB\" } */\n+\n+float f = __builtin_nanf (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\t2008\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2143289344\\n\" } } */"}, {"sha": "b13d3398dafb11810ddaf35abaac2c35ddce19d5", "filename": "gcc/testsuite/gcc.target/mips/nanf-legacy.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnanf-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=legacy -EB\" } */\n+\n+float f = __builtin_nanf (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\tlegacy\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2143289343\\n\" } } */"}, {"sha": "b75fc28fda0fb0e94d258638790c0bda535880bf", "filename": "gcc/testsuite/gcc.target/mips/nans-2008.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=2008 -EB\" } */\n+\n+double ds = __builtin_nans (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\t2008\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2146697216\\n\\t.word\\t0\\n\" } } */"}, {"sha": "45fab68dd748cc2312a8e2b51e6b8514587e66c6", "filename": "gcc/testsuite/gcc.target/mips/nans-legacy.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnans-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=legacy -EB\" } */\n+\n+double ds = __builtin_nans (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\tlegacy\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2147483647\\n\\t.word\\t-1\\n\" } } */"}, {"sha": "d6c86a8472f0512350b9c4ac6f064d0b09979c62", "filename": "gcc/testsuite/gcc.target/mips/nansf-2008.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-2008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-2008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-2008.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=2008 -EB\" } */\n+\n+float fs = __builtin_nansf (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\t2008\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2141192192\\n\" } } */"}, {"sha": "27c480f55515288c8b1c3a8b6d17c2d4824fd67e", "filename": "gcc/testsuite/gcc.target/mips/nansf-legacy.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-legacy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f395157c42a6d2c922de085f5a890834f975b/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-legacy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnansf-legacy.c?ref=ff3f395157c42a6d2c922de085f5a890834f975b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mnan=legacy -EB\" } */\n+\n+float fs = __builtin_nansf (\"\");\n+\n+/* { dg-final { scan-assembler \"\\t\\.nan\\tlegacy\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.word\\t2147483647\\n\" } } */"}]}