{"sha": "b3bb2e194c814434e80b9b427df37fe24fc70e6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNiYjJlMTk0YzgxNDQzNGU4MGI5YjQyN2RmMzdmZTI0ZmM3MGU2Yw==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-22T14:48:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T14:48:08Z"}, "message": "Merge #641\n\n641: Ignore impl trait blocks in overlap pass r=philberty a=philberty\n\nIgnore trait-impls in overlapping check this needs some though for generics traits.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "c4ec2996ceb9c03ff927ead206b66147f3955404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ec2996ceb9c03ff927ead206b66147f3955404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3bb2e194c814434e80b9b427df37fe24fc70e6c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhImOoCRBK7hj4Ov3rIwAAoDMIAEUrxAC/pxEi4rHm6kLJUw7D\nyEd6dV+siGZy5ABIBkCXWUcSE0Hd3XJbQ7RzXJDYN6SEso2Aj2Y7dpu/T+y6k59y\nLmWo1GOaWX+42HlpUs+VrRnSeKrJH/SZ87mgrXz6/xnX96x0BsqguwOs9A+K32dP\n/yoqjX7OPDEIwDJftWewY4UeUUAanYZFIfgnPzsLq+Tgp1CIP9yPjMue+Aq1k3/s\nvnf1GoVZS1ePopritSLDLvl9Ql6T86kfIGv9wde9lIjEZcXyHmFK16SBq/ubARo1\n/iROA1mH7Unonn6Ft4jHjPj6tKlnvX09tjO7GlJRogfbo61ibFxRR/x6zmMS6wg=\n=E2Xx\n-----END PGP SIGNATURE-----\n", "payload": "tree c4ec2996ceb9c03ff927ead206b66147f3955404\nparent ac3be517de2c0ec596eeee754b863243cb071098\nparent 2d681bdeda9e6c049457a20c45d045925595a8e9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629643688 +0000\ncommitter GitHub <noreply@github.com> 1629643688 +0000\n\nMerge #641\n\n641: Ignore impl trait blocks in overlap pass r=philberty a=philberty\n\nIgnore trait-impls in overlapping check this needs some though for generics traits.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3bb2e194c814434e80b9b427df37fe24fc70e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3bb2e194c814434e80b9b427df37fe24fc70e6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3bb2e194c814434e80b9b427df37fe24fc70e6c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac3be517de2c0ec596eeee754b863243cb071098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3be517de2c0ec596eeee754b863243cb071098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3be517de2c0ec596eeee754b863243cb071098"}, {"sha": "2d681bdeda9e6c049457a20c45d045925595a8e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d681bdeda9e6c049457a20c45d045925595a8e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d681bdeda9e6c049457a20c45d045925595a8e9"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "134d3141d3852ffd744e47e310c17fcfd13601cd", "filename": "gcc/rust/typecheck/rust-hir-inherent-impl-overlap.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb2e194c814434e80b9b427df37fe24fc70e6c/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb2e194c814434e80b9b427df37fe24fc70e6c/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h?ref=b3bb2e194c814434e80b9b427df37fe24fc70e6c", "patch": "@@ -109,6 +109,10 @@ class OverlappingImplItemPass : public TypeCheckBase\n     // generate mappings\n     pass.mappings->iterate_impl_items (\n       [&] (HirId id, HIR::ImplItem *impl_item, HIR::ImplBlock *impl) -> bool {\n+\t// ignoring trait-impls might need thought later on\n+\tif (impl->has_trait_ref ())\n+\t  return true;\n+\n \tpass.process_impl_item (id, impl_item, impl);\n \treturn true;\n       });"}, {"sha": "b25c517cac2919519938a64ad89b1ebf77c715a3", "filename": "gcc/testsuite/rust/compile/traits8.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3bb2e194c814434e80b9b427df37fe24fc70e6c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3bb2e194c814434e80b9b427df37fe24fc70e6c/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftraits8.rs?ref=b3bb2e194c814434e80b9b427df37fe24fc70e6c", "patch": "@@ -0,0 +1,37 @@\n+trait A {\n+    fn get(self) -> f64;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+}\n+\n+trait B {\n+    fn get(self) -> u8;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+}\n+\n+struct Foo(u8, f64);\n+\n+impl A for Foo {\n+    fn get(self) -> f64 {\n+        self.1\n+    }\n+}\n+\n+impl B for Foo {\n+    fn get(self) -> u8 {\n+        self.0\n+    }\n+}\n+\n+fn main() {\n+    let _a;\n+    _a = Foo(123, 456f64);\n+\n+    let _b: f64;\n+    _b = <Foo as A>::get(_a);\n+\n+    let _a;\n+    _a = Foo(123, 456f64);\n+\n+    let _c: u8;\n+    _c = <Foo as B>::get(_a)\n+}"}]}