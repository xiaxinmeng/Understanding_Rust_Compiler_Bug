{"sha": "fbf196a2560584a0c71b7c44e6354eac93721888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmMTk2YTI1NjA1ODRhMGM3MWI3YzQ0ZTYzNTRlYWM5MzcyMTg4OA==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2015-06-25T17:03:33Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2015-06-25T17:03:33Z"}, "message": "tree-core.h (struct tree_optimization_option): Make opts a pointer to struct cl_optimization.\n\n2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* tree-core.h (struct tree_optimization_option): Make opts a pointer to\n\tstruct cl_optimization.\n\t* tree.h (TREE_OPTIMIZATION): Return the pointer, not the address of it.\n\t* tree.c (make_node_stat): Allocate cl_optimization struct.\n\t(copy_node_stat): Allocate and copy cl_optimization struct.\n\nFrom-SVN: r224952", "tree": {"sha": "0ec323ad3253632e0ab13e7619c3a7de99413f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec323ad3253632e0ab13e7619c3a7de99413f1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf196a2560584a0c71b7c44e6354eac93721888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf196a2560584a0c71b7c44e6354eac93721888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf196a2560584a0c71b7c44e6354eac93721888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf196a2560584a0c71b7c44e6354eac93721888/comments", "author": null, "committer": null, "parents": [{"sha": "16a16ec7db0a5c626567b57ba49e09c4a5cccb76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a16ec7db0a5c626567b57ba49e09c4a5cccb76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a16ec7db0a5c626567b57ba49e09c4a5cccb76"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "202c3a71949ef557275a9ab815ab2d4830634ec8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbf196a2560584a0c71b7c44e6354eac93721888", "patch": "@@ -1,3 +1,11 @@\n+2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* tree-core.h (struct tree_optimization_option): Make opts a pointer to\n+\tstruct cl_optimization.\n+\t* tree.h (TREE_OPTIMIZATION): Return the pointer, not the address of it.\n+\t* tree.c (make_node_stat): Allocate cl_optimization struct.\n+\t(copy_node_stat): Allocate and copy cl_optimization struct.\n+\n 2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* function.h (struct incoming_args): Move struct."}, {"sha": "f23abe2bb430a05f512d41eac02001bfb3b5d6c8", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=fbf196a2560584a0c71b7c44e6354eac93721888", "patch": "@@ -1652,7 +1652,7 @@ struct GTY(()) tree_optimization_option {\n   struct tree_common common;\n \n   /* The optimization options used by the user.  */\n-  struct cl_optimization opts;\n+  struct cl_optimization *opts;\n \n   /* Target optabs for this set of optimization options.  This is of\n      type `struct target_optabs *'.  */"}, {"sha": "d44bc180f518d8e2dc9a5adb2477908e15e09602", "filename": "gcc/tree.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=fbf196a2560584a0c71b7c44e6354eac93721888", "patch": "@@ -1095,9 +1095,20 @@ make_node_stat (enum tree_code code MEM_STAT_DECL)\n       break;\n \n     case tcc_exceptional:\n-      if (code == TARGET_OPTION_NODE)\n-\t{\n-\t  TREE_TARGET_OPTION(t) = ggc_cleared_alloc<struct cl_target_option> ();\n+      switch (code)\n+        {\n+\tcase TARGET_OPTION_NODE:\n+\t  TREE_TARGET_OPTION(t)\n+\t\t\t    = ggc_cleared_alloc<struct cl_target_option> ();\n+\t  break;\n+\n+\tcase OPTIMIZATION_NODE:\n+\t  TREE_OPTIMIZATION (t)\n+\t\t\t    = ggc_cleared_alloc<struct cl_optimization> ();\n+\t  break;\n+\n+\tdefault:\n+\t  break;\n \t}\n       break;\n \n@@ -1188,6 +1199,12 @@ copy_node_stat (tree node MEM_STAT_DECL)\n \tmemcpy (TREE_TARGET_OPTION (t), TREE_TARGET_OPTION (node),\n \t\tsizeof (struct cl_target_option));\n       }\n+    else if (code == OPTIMIZATION_NODE)\n+      {\n+\tTREE_OPTIMIZATION (t) = ggc_alloc<struct cl_optimization>();\n+\tmemcpy (TREE_OPTIMIZATION (t), TREE_OPTIMIZATION (node),\n+\t\tsizeof (struct cl_optimization));\n+      }\n \n   return t;\n }"}, {"sha": "e9f0d734a43a39c6eae9e58f64d9919f32d32c31", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf196a2560584a0c71b7c44e6354eac93721888/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=fbf196a2560584a0c71b7c44e6354eac93721888", "patch": "@@ -2827,7 +2827,7 @@ extern vec<tree, va_gc> **decl_debug_args_insert (tree);\n   (STATEMENT_LIST_CHECK (NODE)->stmt_list.tail)\n \n #define TREE_OPTIMIZATION(NODE) \\\n-  (&OPTIMIZATION_NODE_CHECK (NODE)->optimization.opts)\n+  (OPTIMIZATION_NODE_CHECK (NODE)->optimization.opts)\n \n #define TREE_OPTIMIZATION_OPTABS(NODE) \\\n   (OPTIMIZATION_NODE_CHECK (NODE)->optimization.optabs)"}]}