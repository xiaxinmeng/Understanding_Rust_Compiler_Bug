{"sha": "3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y2NzkwYmY5M2UzZmQyZWY0YjZjOGMwNzZkZDVlNWRlZmM1NmNmOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-07-13T20:33:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-07-13T20:33:09Z"}, "message": "* genrecog.c (write_header): Split long string.\n\nFrom-SVN: r35024", "tree": {"sha": "960aaeaeb4734ba1ee8b8a54264d653a504dacbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/960aaeaeb4734ba1ee8b8a54264d653a504dacbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9/comments", "author": null, "committer": null, "parents": [{"sha": "af0d1578e4867550479497c9b103d4451abbad0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af0d1578e4867550479497c9b103d4451abbad0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af0d1578e4867550479497c9b103d4451abbad0c"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "d23eeb712a15a918157bbdcc612fd25dce202c30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "patch": "@@ -1,5 +1,7 @@\n 2000-07-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* genrecog.c (write_header): Split long string.\n+\n \t* cpphash.c (macro_info): Don't use the `signed' keyword.\n \n \t* system.h (alloca): Prototype if __GNUC__ && __SIZE_TYPE__."}, {"sha": "3e665dce05f6611b43f824740b8a98f3bceba487", "filename": "gcc/genrecog.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=3f6790bf93e3fd2ef4b6c8c076dd5e5defc56cf9", "patch": "@@ -2247,13 +2247,14 @@ write_header ()\n    returns a nonnegative number which is the insn code number for the\\n\\\n    pattern that matched.  This is the same as the order in the machine\\n\\\n    description of the entry that matched.  This number can be used as an\\n\\\n-   index into `insn_data' and other tables.\\n\\\n-\\n\\\n+   index into `insn_data' and other tables.\\n\");\n+  puts (\"\\\n    The third argument to recog is an optional pointer to an int.  If\\n\\\n    present, recog will accept a pattern if it matches except for missing\\n\\\n    CLOBBER expressions at the end.  In that case, the value pointed to by\\n\\\n    the optional pointer will be set to the number of CLOBBERs that need\\n\\\n-   to be added (it should be initialized to zero by the caller).  If it\\n\\\n+   to be added (it should be initialized to zero by the caller).  If it\");\n+  puts (\"\\\n    is set nonzero, the caller should allocate a PARALLEL of the\\n\\\n    appropriate size, copy the initial entries, and call add_clobbers\\n\\\n    (found in insn-emit.c) to fill in the CLOBBERs.\\n\\"}]}