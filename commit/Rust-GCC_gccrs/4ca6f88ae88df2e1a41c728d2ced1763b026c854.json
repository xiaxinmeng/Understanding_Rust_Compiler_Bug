{"sha": "4ca6f88ae88df2e1a41c728d2ced1763b026c854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhNmY4OGFlODhkZjJlMWE0MWM3MjhkMmNlZDE3NjNiMDI2Yzg1NA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2005-11-25T04:15:15Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-11-25T04:15:15Z"}, "message": "ia64-frame.h: Removed.\n\n2005-11-24  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* sysdep/ia64-frame.h: Removed.\n\t* sysdep/ia64.c: Removed.\n\t* sysdep/dwarf2-backtrace.cc: Removed.\n\t* configure.ac: Remove references to HAVE_BACKTRACE and\n\tSUPPLY_BACKTRACE.\n\t* Makefile.am: Remove SUPPLY_BACKTRACE support.\n\t* configure: Rebuilt.\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r107486", "tree": {"sha": "6c707fd71fdca64bc3c955667bc172063af75858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c707fd71fdca64bc3c955667bc172063af75858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ca6f88ae88df2e1a41c728d2ced1763b026c854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca6f88ae88df2e1a41c728d2ced1763b026c854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca6f88ae88df2e1a41c728d2ced1763b026c854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca6f88ae88df2e1a41c728d2ced1763b026c854/comments", "author": null, "committer": null, "parents": [{"sha": "57904aa71196cf28155aa594954d0616e11e2f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57904aa71196cf28155aa594954d0616e11e2f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57904aa71196cf28155aa594954d0616e11e2f57"}], "stats": {"total": 719, "additions": 33, "deletions": 686}, "files": [{"sha": "cc5a6d8d8a90e166e6c8fcb4df0c958749988790", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -1,3 +1,14 @@\n+2005-11-24  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* sysdep/ia64-frame.h: Removed.\n+\t* sysdep/ia64.c: Removed.\n+\t* sysdep/dwarf2-backtrace.cc: Removed.\n+\t* configure.ac: Remove references to HAVE_BACKTRACE and\n+\tSUPPLY_BACKTRACE.\n+\t* Makefile.am: Remove SUPPLY_BACKTRACE support.\n+\t* configure: Rebuilt.\n+\t* Makefile.in: Rebuilt.\n+\n 2005-11-24  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* gij.cc (nonstandard_opts_help): Add entry for -Xss."}, {"sha": "d01645fffcb00634299fbec81a0378dfc1835948", "filename": "libjava/Makefile.am", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -190,10 +190,6 @@ if USING_NOGC\n libgcj_la_SOURCES += nogc.cc\n endif\n \n-if SUPPLY_BACKTRACE\n-libgcj_la_SOURCES += sysdep/dwarf2-backtrace.cc\n-endif\n-\n if USING_POSIX_PLATFORM\n libgcj_la_SOURCES += posix.cc\n endif"}, {"sha": "e5bb08bd29b5353c13b80036dc8f0fecf75bbb06", "filename": "libjava/Makefile.in", "status": "modified", "additions": 21, "deletions": 39, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -52,13 +52,12 @@ target_triplet = @target@\n @USING_GCC_TRUE@am__append_5 = $(WARNINGS)\n @USING_BOEHMGC_TRUE@am__append_6 = boehm.cc\n @USING_NOGC_TRUE@am__append_7 = nogc.cc\n-@SUPPLY_BACKTRACE_TRUE@am__append_8 = sysdep/dwarf2-backtrace.cc\n-@USING_POSIX_PLATFORM_TRUE@am__append_9 = posix.cc\n-@USING_WIN32_PLATFORM_TRUE@am__append_10 = win32.cc\n-@USING_DARWIN_CRT_TRUE@am__append_11 = darwin.cc\n-@USING_POSIX_THREADS_TRUE@am__append_12 = posix-threads.cc\n-@USING_WIN32_THREADS_TRUE@am__append_13 = win32-threads.cc\n-@USING_NO_THREADS_TRUE@am__append_14 = no-threads.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_8 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_9 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_10 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_11 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_12 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_13 = no-threads.cc\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -70,7 +69,7 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \tNEWS THANKS\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@noinst_PROGRAMS =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n-@XLIB_AWT_TRUE@am__append_15 = $(xlib_nat_headers)\n+@XLIB_AWT_TRUE@am__append_14 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -256,9 +255,9 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjava/nio/natDirectByteBufferImpl.cc java/text/natCollator.cc \\\n \tjava/util/natResourceBundle.cc java/util/natVMTimeZone.cc \\\n \tjava/util/logging/natLogger.cc java/util/zip/natDeflater.cc \\\n-\tjava/util/zip/natInflater.cc boehm.cc nogc.cc \\\n-\tsysdep/dwarf2-backtrace.cc posix.cc win32.cc darwin.cc \\\n-\tposix-threads.cc win32-threads.cc no-threads.cc\n+\tjava/util/zip/natInflater.cc boehm.cc nogc.cc posix.cc \\\n+\twin32.cc darwin.cc posix-threads.cc win32-threads.cc \\\n+\tno-threads.cc\n am__objects_2 = gnu/classpath/natSystemProperties.lo \\\n \tgnu/gcj/natCore.lo gnu/gcj/convert/JIS0208_to_Unicode.lo \\\n \tgnu/gcj/convert/JIS0212_to_Unicode.lo \\\n@@ -299,19 +298,18 @@ am__objects_2 = gnu/classpath/natSystemProperties.lo \\\n \tjava/util/zip/natInflater.lo\n @USING_BOEHMGC_TRUE@am__objects_3 = boehm.lo\n @USING_NOGC_TRUE@am__objects_4 = nogc.lo\n-@SUPPLY_BACKTRACE_TRUE@am__objects_5 = sysdep/dwarf2-backtrace.lo\n-@USING_POSIX_PLATFORM_TRUE@am__objects_6 = posix.lo\n-@USING_WIN32_PLATFORM_TRUE@am__objects_7 = win32.lo\n-@USING_DARWIN_CRT_TRUE@am__objects_8 = darwin.lo\n-@USING_POSIX_THREADS_TRUE@am__objects_9 = posix-threads.lo\n-@USING_WIN32_THREADS_TRUE@am__objects_10 = win32-threads.lo\n-@USING_NO_THREADS_TRUE@am__objects_11 = no-threads.lo\n+@USING_POSIX_PLATFORM_TRUE@am__objects_5 = posix.lo\n+@USING_WIN32_PLATFORM_TRUE@am__objects_6 = win32.lo\n+@USING_DARWIN_CRT_TRUE@am__objects_7 = darwin.lo\n+@USING_POSIX_THREADS_TRUE@am__objects_8 = posix-threads.lo\n+@USING_WIN32_THREADS_TRUE@am__objects_9 = win32-threads.lo\n+@USING_NO_THREADS_TRUE@am__objects_10 = no-threads.lo\n am_libgcj_la_OBJECTS = prims.lo jni.lo exception.lo stacktrace.lo \\\n \tlink.lo defineclass.lo interpret.lo verify.lo \\\n \tjava/lang/Class.lo java/lang/Object.lo $(am__objects_2) \\\n \t$(am__objects_3) $(am__objects_4) $(am__objects_5) \\\n \t$(am__objects_6) $(am__objects_7) $(am__objects_8) \\\n-\t$(am__objects_9) $(am__objects_10) $(am__objects_11)\n+\t$(am__objects_9) $(am__objects_10)\n libgcj_la_OBJECTS = $(am_libgcj_la_OBJECTS)\n libgcjawt_la_DEPENDENCIES = lib-gnu-java-awt-peer-gtk.la\n am_libgcjawt_la_OBJECTS = classpath/native/jawt/libgcjawt_la-jawt.lo\n@@ -515,8 +513,6 @@ RANLIB = @RANLIB@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SUPPLY_BACKTRACE_FALSE = @SUPPLY_BACKTRACE_FALSE@\n-SUPPLY_BACKTRACE_TRUE = @SUPPLY_BACKTRACE_TRUE@\n SYSDEP_SOURCES = @SYSDEP_SOURCES@\n SYSTEMSPEC = @SYSTEMSPEC@\n SYS_ZLIBS = @SYS_ZLIBS@\n@@ -719,7 +715,7 @@ libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc link.cc \\\n \tjava/lang/Object.java $(nat_source_files) $(am__append_6) \\\n \t$(am__append_7) $(am__append_8) $(am__append_9) \\\n \t$(am__append_10) $(am__append_11) $(am__append_12) \\\n-\t$(am__append_13) $(am__append_14)\n+\t$(am__append_13)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n \n@@ -5200,7 +5196,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_15)\n+headers_to_make = $(nat_headers) $(am__append_14)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -5656,14 +5652,6 @@ java/util/zip/natDeflater.lo: java/util/zip/$(am__dirstamp) \\\n \tjava/util/zip/$(DEPDIR)/$(am__dirstamp)\n java/util/zip/natInflater.lo: java/util/zip/$(am__dirstamp) \\\n \tjava/util/zip/$(DEPDIR)/$(am__dirstamp)\n-sysdep/$(am__dirstamp):\n-\t@$(mkdir_p) sysdep\n-\t@: > sysdep/$(am__dirstamp)\n-sysdep/$(DEPDIR)/$(am__dirstamp):\n-\t@$(mkdir_p) sysdep/$(DEPDIR)\n-\t@: > sysdep/$(DEPDIR)/$(am__dirstamp)\n-sysdep/dwarf2-backtrace.lo: sysdep/$(am__dirstamp) \\\n-\tsysdep/$(DEPDIR)/$(am__dirstamp)\n libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES) \n \t$(libgcj_la_LINK) -rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(libgcj_la_OBJECTS) $(libgcj_la_LIBADD) $(LIBS)\n classpath/native/jawt/$(am__dirstamp):\n@@ -5939,8 +5927,6 @@ mostlyclean-compile:\n \t-rm -f java/util/zip/natDeflater.lo\n \t-rm -f java/util/zip/natInflater.$(OBJEXT)\n \t-rm -f java/util/zip/natInflater.lo\n-\t-rm -f sysdep/dwarf2-backtrace.$(OBJEXT)\n-\t-rm -f sysdep/dwarf2-backtrace.lo\n \n distclean-compile:\n \t-rm -f *.tab.c\n@@ -6048,7 +6034,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/logging/$(DEPDIR)/natLogger.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/zip/$(DEPDIR)/natDeflater.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/zip/$(DEPDIR)/natInflater.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@sysdep/$(DEPDIR)/dwarf2-backtrace.Plo@am__quote@\n \n .c.o:\n @am__fastdepCC_TRUE@\tdepbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`; \\\n@@ -6298,7 +6283,6 @@ clean-libtool:\n \t-rm -rf java/util/.libs java/util/_libs\n \t-rm -rf java/util/logging/.libs java/util/logging/_libs\n \t-rm -rf java/util/zip/.libs java/util/zip/_libs\n-\t-rm -rf sysdep/.libs sysdep/_libs\n \n distclean-libtool:\n \t-rm -f libtool\n@@ -6713,8 +6697,6 @@ distclean-generic:\n \t-rm -f java/util/logging/$(am__dirstamp)\n \t-rm -f java/util/zip/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/util/zip/$(am__dirstamp)\n-\t-rm -f sysdep/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f sysdep/$(am__dirstamp)\n \t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n@@ -6728,7 +6710,7 @@ clean-am: clean-binPROGRAMS clean-generic clean-libtool \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-local distclean-tags\n@@ -6759,7 +6741,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "}, {"sha": "9d84e3043cefe3aa58fd92ca840487c84d540735", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 158, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -310,7 +310,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GTK_AWT_TRUE GTK_AWT_FALSE QT_AWT_TRUE QT_AWT_FALSE GCJH ZIP INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CAIRO_TRUE GTK_CAIRO_FALSE PKG_CONFIG CAIRO_CFLAGS CAIRO_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS extra_ldflags_libjava GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS SUPPLY_BACKTRACE_TRUE SUPPLY_BACKTRACE_FALSE CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL SYSDEP_SOURCES here LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GTK_AWT_TRUE GTK_AWT_FALSE QT_AWT_TRUE QT_AWT_FALSE GCJH ZIP INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CAIRO_TRUE GTK_CAIRO_FALSE PKG_CONFIG CAIRO_CFLAGS CAIRO_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS extra_ldflags_libjava GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL SYSDEP_SOURCES here LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -6722,8 +6722,6 @@ if test \"${with_ecos+set}\" = set; then\n \n fi;\n \n-supply_backtrace=no\n-\n PLATFORM_INNER_NAT_HDRS=\n case \"$TARGET_ECOS\" in\n    no) case \"$host\" in\n@@ -9920,142 +9918,6 @@ fi\n \n done\n \n-   echo \"$as_me:$LINENO: checking for backtrace\" >&5\n-echo $ECHO_N \"checking for backtrace... $ECHO_C\" >&6\n-if test \"${ac_cv_func_backtrace+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-/* Define backtrace to an innocuous variant, in case <limits.h> declares backtrace.\n-   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n-#define backtrace innocuous_backtrace\n-\n-/* System header to define __stub macros and hopefully few prototypes,\n-    which can conflict with char backtrace (); below.\n-    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n-    <limits.h> exists even on freestanding compilers.  */\n-\n-#ifdef __STDC__\n-# include <limits.h>\n-#else\n-# include <assert.h>\n-#endif\n-\n-#undef backtrace\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-{\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char backtrace ();\n-/* The GNU C library defines this for functions which it implements\n-    to always fail with ENOSYS.  Some functions are actually named\n-    something starting with __ and the normal name is an alias.  */\n-#if defined (__stub_backtrace) || defined (__stub___backtrace)\n-choke me\n-#else\n-char (*f) () = backtrace;\n-#endif\n-#ifdef __cplusplus\n-}\n-#endif\n-\n-int\n-main ()\n-{\n-return f != backtrace;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_func_backtrace=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_func_backtrace=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_func_backtrace\" >&5\n-echo \"${ECHO_T}$ac_cv_func_backtrace\" >&6\n-if test $ac_cv_func_backtrace = yes; then\n-\n-     case \"$host\" in\n-       ia64-*-linux*)\n-\t # Has broken backtrace()\n-\t ;;\n-       mips*-*-linux*)\n-         # Has broken backtrace(), but we supply our own.\n-         if test -d sysdep; then true; else mkdir -p sysdep; fi\n-\t supply_backtrace=yes\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_BACKTRACE 1\n-_ACEOF\n-\n-         ;;\n-       *)\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_BACKTRACE 1\n-_ACEOF\n-\n-\t ;;\n-     esac\n-\n-else\n-\n-     case \"$host\" in\n-       *mingw*)\n-         # Has backtrace() defined in libgcj itself\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_BACKTRACE 1\n-_ACEOF\n-\n-         ;;\n-     esac\n-\n-fi\n-\n-\n    echo \"$as_me:$LINENO: checking for dladdr in -ldl\" >&5\n echo $ECHO_N \"checking for dladdr in -ldl... $ECHO_C\" >&6\n if test \"${ac_cv_lib_dl_dladdr+set}\" = set; then\n@@ -13988,16 +13850,6 @@ fi\n    fi\n fi\n \n-\n-if test \"$supply_backtrace\" = yes; then\n-  SUPPLY_BACKTRACE_TRUE=\n-  SUPPLY_BACKTRACE_FALSE='#'\n-else\n-  SUPPLY_BACKTRACE_TRUE='#'\n-  SUPPLY_BACKTRACE_FALSE=\n-fi\n-\n-\n # Use a semicolon as CLASSPATH separator for MinGW, otherwise a colon.\n case $build in\n     *-mingw32) CLASSPATH_SEPARATOR=';' ;;\n@@ -17118,13 +16970,6 @@ echo \"$as_me: error: conditional \\\"USING_GCC\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${SUPPLY_BACKTRACE_TRUE}\" && test -z \"${SUPPLY_BACKTRACE_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"SUPPLY_BACKTRACE\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"SUPPLY_BACKTRACE\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n if test -z \"${NATIVE_TRUE}\" && test -z \"${NATIVE_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"NATIVE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -17875,8 +17720,6 @@ s,@GLIB_CFLAGS@,$GLIB_CFLAGS,;t t\n s,@GLIB_LIBS@,$GLIB_LIBS,;t t\n s,@LIBART_CFLAGS@,$LIBART_CFLAGS,;t t\n s,@LIBART_LIBS@,$LIBART_LIBS,;t t\n-s,@SUPPLY_BACKTRACE_TRUE@,$SUPPLY_BACKTRACE_TRUE,;t t\n-s,@SUPPLY_BACKTRACE_FALSE@,$SUPPLY_BACKTRACE_FALSE,;t t\n s,@CLASSPATH_SEPARATOR@,$CLASSPATH_SEPARATOR,;t t\n s,@ac_ct_GCJ@,$ac_ct_GCJ,;t t\n s,@ZLIBS@,$ZLIBS,;t t"}, {"sha": "6ae83609acecae5b4f2f17b118318675fc458cfb", "filename": "libjava/configure.ac", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -568,8 +568,6 @@ AC_ARG_WITH(ecos,\n TARGET_ECOS=\"$with_ecos\"\n )\n \n-supply_backtrace=no\n-\n PLATFORM_INNER_NAT_HDRS=\n case \"$TARGET_ECOS\" in\n    no) case \"$host\" in\n@@ -902,33 +900,6 @@ else\n \t\t   fork execvp pipe sigaction ftruncate])\n    AC_CHECK_FUNCS(inet_aton inet_addr, break)\n    AC_CHECK_HEADERS(execinfo.h unistd.h dlfcn.h) \n-   AC_CHECK_FUNC(backtrace, [\n-     case \"$host\" in\n-       ia64-*-linux*)\n-\t # Has broken backtrace()\n-\t ;;\n-       mips*-*-linux*)\n-         # Has broken backtrace(), but we supply our own.\n-         if test -d sysdep; then true; else mkdir -p sysdep; fi\n-\t supply_backtrace=yes\n-         AC_DEFINE(HAVE_BACKTRACE, 1,\n-           [Define if your platform has a working backtrace() function.])\n-         ;;\n-       *)\n-         AC_DEFINE(HAVE_BACKTRACE, 1,\n-           [Define if your platform has a working backtrace() function.])\n-\t ;;\n-     esac\n-   ], [\n-     case \"$host\" in\n-       *mingw*)\n-         # Has backtrace() defined in libgcj itself\n-         AC_DEFINE(HAVE_BACKTRACE, 1,\n-           [Define if your platform has a working backtrace() function.])\n-         ;;\n-     esac\n-   ])\n-\n    AC_CHECK_LIB(dl, dladdr, [\n      if test \"x${disable_dladdr}\" = \"xyes\"; then\n        #Broken dladdr().\n@@ -1162,7 +1133,6 @@ else\n       AC_CHECK_LIB(dl, main, SYSTEMSPEC=\"$SYSTEMSPEC -ldl\")\n    fi\n fi\n-AM_CONDITIONAL(SUPPLY_BACKTRACE, test \"$supply_backtrace\" = yes)\n \n # Use a semicolon as CLASSPATH separator for MinGW, otherwise a colon.\n case $build in"}, {"sha": "efc3dc47716ca74323385dc2762574e9ba6dfab7", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -188,8 +188,6 @@ RANLIB = @RANLIB@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SUPPLY_BACKTRACE_FALSE = @SUPPLY_BACKTRACE_FALSE@\n-SUPPLY_BACKTRACE_TRUE = @SUPPLY_BACKTRACE_TRUE@\n SYSDEP_SOURCES = @SYSDEP_SOURCES@\n SYSTEMSPEC = @SYSTEMSPEC@\n SYS_ZLIBS = @SYS_ZLIBS@"}, {"sha": "550314378e1da82ed74747a3b005ba32bfc58e99", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -187,8 +187,6 @@ RANLIB = @RANLIB@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SUPPLY_BACKTRACE_FALSE = @SUPPLY_BACKTRACE_FALSE@\n-SUPPLY_BACKTRACE_TRUE = @SUPPLY_BACKTRACE_TRUE@\n SYSDEP_SOURCES = @SYSDEP_SOURCES@\n SYSTEMSPEC = @SYSTEMSPEC@\n SYS_ZLIBS = @SYS_ZLIBS@"}, {"sha": "550aa5bdd35a17e3851e0c6a6c26e42ec42f45e1", "filename": "libjava/sysdep/dwarf2-backtrace.cc", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fdwarf2-backtrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fdwarf2-backtrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fdwarf2-backtrace.cc?ref=57904aa71196cf28155aa594954d0616e11e2f57", "patch": "@@ -1,86 +0,0 @@\n-/* dwarf2-backtrac.cc - backtrace implementation driven by the dwarf2\n- exception unwinder.  */\n-\n-/* Copyright (C) 2003  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-/* Written by David Daney <ddaney@avtrex.com> */\n-\n-/*\n-  Although this in theory could be 'C' instead of C++, saying that it\n-  is C++ and including jvm.h makes it easier to insure that the proper\n-  compiler options are used.  There must be unwind tables for\n-  backtrace because it is on the stack when _Unwind_Backtrace is\n-  called.  Compiling as C++ insures this.\n-\n-*/\n-\n-#include <config.h>\n-\n-#include <unwind.h>\n-\n-#include <jvm.h>\n-\n-\n-extern \"C\"\n-{\n-  int backtrace (void **, int);\n-}\n-\n-struct backtrace_state\n-{\n-  int skip_count;\n-  int current_level;\n-  int max_level;\n-  void **locations;\n-};\n-\n-static _Unwind_Reason_Code\n-my_trace_fn (struct _Unwind_Context *uc, void *arg)\n-{\n-\n-  struct backtrace_state *bs = (struct backtrace_state *) arg;\n-\n-  if (bs->skip_count)\n-    {\n-      bs->skip_count--;\n-      return _URC_NO_REASON;\n-    }\n-\n-  _Unwind_Ptr loc = _Unwind_GetIP (uc);\n-\n-  if (bs->current_level < bs->max_level)\n-    bs->locations[bs->current_level++] = (void *) loc;\n-\n-  if (bs->current_level >= bs->max_level)\n-    return _URC_END_OF_STACK;\n-  else\n-    return _URC_NO_REASON;\n-}\n-\n-/*\n- * backtrace is defined in (some versions of) libc.  This definition\n- * must match so that it can replace the libc version at link time.\n- *\n- * Fill the locations array with at most len back trace locations.\n- *\n- * Returns the number of locations actually filled in.\n- *\n- */\n-int\n-backtrace (void **locations, int len)\n-{\n-  struct backtrace_state bs;\n-  bs.skip_count = 1;\t\t/* Don't log the call to backtrace itself. */\n-  bs.current_level = 0;\n-  bs.max_level = len;\n-  bs.locations = locations;\n-\n-  _Unwind_Backtrace (my_trace_fn, &bs);\n-  return bs.current_level;\n-}"}, {"sha": "752e57e508c8e9a40e89129dc1a5fa94364526a6", "filename": "libjava/sysdep/ia64-frame.h", "status": "removed", "additions": 0, "deletions": 282, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fia64-frame.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fia64-frame.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fia64-frame.h?ref=57904aa71196cf28155aa594954d0616e11e2f57", "patch": "@@ -1,282 +0,0 @@\n-/* Header file for unwinding stack frames for exception handling.  */\n-/* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.\n-   Contributed by Jason Merrill <jason@cygnus.com>.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-\n-/* Number of hardware registers known to the compiler.  \n-   We have 128 general registers, 128 floating point registers, 64 predicate\n-   registers, 8 branch registers, and one frame pointer register.  */\n-\n-/* ??? Should add ar.lc, ar.ec and probably also ar.pfs.  */\n-\n-#define FIRST_PSEUDO_REGISTER 330\n-\n-#ifndef DWARF_FRAME_REGISTERS\n-#define DWARF_FRAME_REGISTERS FIRST_PSEUDO_REGISTER\n-#endif\n-\n-typedef struct frame_state\n-{\n-  void *cfa;\n-  void *eh_ptr;\n-  long cfa_offset;\n-  long args_size;\n-  long reg_or_offset[DWARF_FRAME_REGISTERS+1];\n-  unsigned short cfa_reg;\n-  unsigned short retaddr_column;\n-  char saved[DWARF_FRAME_REGISTERS+1];\n-} frame_state;\n-\n-/* Values for 'saved' above.  */\n-#define REG_UNSAVED 0\n-#define REG_SAVED_OFFSET 1\n-#define REG_SAVED_REG 2\n-\n-/* The representation for an \"object\" to be searched for frame unwind info.\n-   For targets with named sections, one object is an executable or shared\n-   library; for other targets, one object is one translation unit.\n-\n-   A copy of this structure declaration is printed by collect2.c;\n-   keep the copies synchronized!  */\n-\n-struct object {\n-#ifdef IA64_UNWIND_INFO\n-  void *pc_base;        /* This field will be set by __do_frame_setup. */\n-#endif\n-  void *pc_begin;\n-  void *pc_end;\n-  struct dwarf_fde *fde_begin;\n-  struct dwarf_fde **fde_array;\n-  size_t count;\n-  struct object *next;\n-};\n-\n-/* Called from __throw to find the registers to restore for a given\n-   PC_TARGET.  The caller should allocate a local variable of `struct\n-   frame_state' (declared in frame.h) and pass its address to STATE_IN.\n-   Returns NULL on failure, otherwise returns STATE_IN.  */\n-\n-extern struct frame_state *__frame_state_for (void *, struct frame_state *);\n-\n-#ifdef IA64_UNWIND_INFO\n-\n-/* This is the information required for unwind records in an ia64\n-   object file. This is required by GAS and the compiler runtime. */\n-\n-/* These are the starting point masks for the various types of\n-   unwind records. To create a record of type R3 for instance, one\n-   starts by using the value UNW_R3 and or-ing in any other required values. \n-   These values are also unique (in context), so they can be used to identify \n-   the various record types as well. UNW_Bx and some UNW_Px do have the\n-   same value, but Px can only occur in a prologue context, and Bx in\n-   a body context.  */\n-\n-#define UNW_R1\t0x00\n-#define UNW_R2\t0x40\n-#define UNW_R3\t0x60\n-#define UNW_P1\t0x80\n-#define UNW_P2\t0xA0\n-#define UNW_P3\t0xB0\n-#define UNW_P4\t0xB8\n-#define UNW_P5\t0xB9\n-#define UNW_P6\t0xC0\n-#define UNW_P7\t0xE0\n-#define UNW_P8\t0xF0\n-#define UNW_P9\t0xF1\n-#define UNW_P10\t0xFF\n-#define UNW_X1\t0xF9\n-#define UNW_X2\t0xFA\n-#define UNW_X3\t0xFB\n-#define UNW_X4\t0xFC\n-#define UNW_B1\t0x80\n-#define UNW_B2\t0xC0\n-#define UNW_B3\t0xE0\n-#define UNW_B4\t0xF0\n-\n-/* These are all the various types of unwind records.  */\n-\n-typedef enum\n-{\n-  prologue, prologue_gr, body, mem_stack_f, mem_stack_v, psp_gr, psp_sprel,\n-  rp_when, rp_gr, rp_br, rp_psprel, rp_sprel, pfs_when, pfs_gr, pfs_psprel,\n-  pfs_sprel, preds_when, preds_gr, preds_psprel, preds_sprel,\n-  fr_mem, frgr_mem, gr_gr, gr_mem, br_mem, br_gr, spill_base, spill_mask,\n-  unat_when, unat_gr, unat_psprel, unat_sprel, lc_when, lc_gr, lc_psprel,\n-  lc_sprel, fpsr_when, fpsr_gr, fpsr_psprel, fpsr_sprel, \n-  priunat_when_gr, priunat_when_mem, priunat_gr, priunat_psprel, \n-  priunat_sprel, bsp_when, bsp_gr, bsp_psprel, bsp_sprel, bspstore_when,\n-  bspstore_gr, bspstore_psprel, bspstore_sprel, rnat_when, rnat_gr,\n-  rnat_psprel, rnat_sprel, epilogue, label_state, copy_state,\n-  spill_psprel, spill_sprel, spill_reg, spill_psprel_p, spill_sprel_p,\n-  spill_reg_p\n-} unw_record_type;\n-\n-\n-/* These structures declare the fields that can be used in each of the \n-   4 record formats, R, P, B and X.  */\n-\n-typedef struct unw_r_record\n-{\n-  unsigned long rlen;\n-  unsigned short mask;\n-  unsigned short grsave;\n-} unw_r_record;\n-\n-typedef struct unw_p_record\n-{\n-  void *imask;\n-  unsigned long t;\n-  unsigned long size;\n-  unsigned long spoff;\n-  unsigned long br;\n-  unsigned long pspoff;\n-  unsigned short gr;\n-  unsigned short rmask;\n-  unsigned short grmask;\n-  unsigned long frmask;\n-  unsigned short brmask;\n-} unw_p_record;\n-\n-typedef struct unw_b_record\n-{\n-  unsigned long t;\n-  unsigned long label;\n-  unsigned short ecount;\n-} unw_b_record;\n-\n-typedef struct unw_x_record\n-{\n-  unsigned long t;\n-  unsigned long spoff;\n-  unsigned long pspoff;\n-  unsigned short reg;\n-  unsigned short treg;\n-  unsigned short qp;\n-  unsigned short xy;   /* Value of the XY field..  */\n-} unw_x_record;\n-\n-/* This structure is used to determine the specific record type and \n-   its fields.  */\n-typedef struct unwind_record\n-{\n-  unw_record_type type;\n-  union {\n-    unw_r_record r;\n-    unw_p_record p;\n-    unw_b_record b;\n-    unw_x_record x;\n-  } record;\n-} unwind_record;\n-\n-/* This structure represents the start of an unwind information pointer.  \n-   'unwind_descriptors' is the beginninng of the unwind descriptors, which\n-   use up 'length' bytes of storage.  */\n-\n-typedef struct unwind_info_ptr \n-{\n-  unsigned short version;\n-  unsigned short flags;\n-  unsigned int length;\n-  unsigned char unwind_descriptors[1];\n-} unwind_info_ptr;\n-\n-\n-#define IA64_UNW_LOC_TYPE_NONE\t\t0\n-#define IA64_UNW_LOC_TYPE_MEM\t\t1\n-#define IA64_UNW_LOC_TYPE_GR\t\t2\n-#define IA64_UNW_LOC_TYPE_FR\t\t3\n-#define IA64_UNW_LOC_TYPE_BR\t\t4\n-#define IA64_UNW_LOC_TYPE_SPOFF\t\t5\n-#define IA64_UNW_LOC_TYPE_PSPOFF\t6\n-#define IA64_UNW_LOC_TYPE_OFFSET\t7\n-#define IA64_UNW_LOC_TYPE_SPILLBASE\t8\n-\n-typedef struct ia64_reg_loc \n-{\n-  long when;\t\t/* PC relative offset from start of function. */\n-  union {\t\t/* In memory or another register?  */\n-    void *mem;\n-    int regno;\n-    int offset;\n-  } l;\n-  short loc_type;\t/* Where to find value.  */\n-  short reg_size;\n-} ia64_reg_loc;\n-\n-/* Frame information record.  */\n-\n-typedef struct ia64_frame_state\n-{\n-  ia64_reg_loc gr[4];\t/* gr4 to  gr7.  */\n-  ia64_reg_loc fr[20];\t/* fr2 to fr5, fr16 to fr31.  */\n-  ia64_reg_loc br[5];\t/* br1 to  br5.  */\n-  ia64_reg_loc rp;\n-  ia64_reg_loc fpsr;\n-  ia64_reg_loc bsp;\n-  ia64_reg_loc bspstore;\n-  ia64_reg_loc rnat;\n-  ia64_reg_loc pfs;\n-  ia64_reg_loc unat;\n-  ia64_reg_loc lc;\n-  ia64_reg_loc pr;\n-  ia64_reg_loc priunat;\n-  ia64_reg_loc sp;\n-  ia64_reg_loc psp;\n-  ia64_reg_loc spill_base;\n-  void *my_sp;\n-  void *my_bsp;\n-} ia64_frame_state;\n-\n-\n-extern unwind_info_ptr *build_ia64_frame_state (unsigned char *, ia64_frame_state *, \n-\t\t\t\t\t\tvoid *, void *);\n-extern void *get_real_reg_value (ia64_reg_loc *);\n-extern void *get_personality (unwind_info_ptr *);\n-extern void *get_except_table (unwind_info_ptr *);\n-extern void set_real_reg_value (ia64_reg_loc *, void *);\n-void *calc_caller_bsp (long, unsigned char *);\n-\n-#endif   /* IA64_UNWIND_INFO  */\n-\n-/* Note the following routines are exported interfaces from libgcc; do not\n-   change these interfaces.  Instead create new interfaces.  Also note\n-   references to these functions may be made weak in files where they\n-   are referenced.  */\n-\n-extern void __register_frame (void * );\n-extern void __register_frame_table (void *);\n-extern void __deregister_frame (void *);\n-\n-/* Called either from crtbegin.o or a static constructor to register the\n-   unwind info for an object or translation unit, respectively.  */\n-\n-extern void __register_frame_info (void *, struct object *);\n-\n-/* Similar, but BEGIN is actually a pointer to a table of unwind entries\n-   for different translation units.  Called from the file generated by\n-   collect2.  */\n-extern void __register_frame_info_table (void *, struct object *);\n-\n-/* Called from crtend.o to deregister the unwind info for an object.  */\n-\n-extern void *__deregister_frame_info (void *);\n-\n-"}, {"sha": "4d21d00f65ac10e92ebf3e3ece7198868bff5085", "filename": "libjava/sysdep/ia64.c", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57904aa71196cf28155aa594954d0616e11e2f57/libjava%2Fsysdep%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fia64.c?ref=57904aa71196cf28155aa594954d0616e11e2f57", "patch": "@@ -1,81 +0,0 @@\n-/* Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include <stddef.h>\n-#include <memory.h>\n-\n-#define IA64_UNWIND_INFO\n-#include \"ia64-frame.h\"\n-\n-static int \n-ia64_backtrace_helper (void **array, void *throw_pc, \n-\t\t       ia64_frame_state *throw_frame,\n-\t\t       ia64_frame_state *frame, void *bsp, int size)\n-{\n-  void *pc = NULL;\n-  int frame_count = 0;\n-  unwind_info_ptr *info;\n-\n-  asm volatile (\"flushrs\");  /*  Make the local register stacks available.  */\n-    \n-  /* Start at our stack frame, get our state.  */\n-  info = build_ia64_frame_state (throw_pc, throw_frame, bsp, NULL);\n-\n-  memcpy (frame, throw_frame, sizeof (*frame));\n-\n-  while (info && frame_count < size)\n-    {\n-      pc = array[frame_count++] = get_real_reg_value (&frame->rp);\n-      --pc;\n-      bsp = calc_caller_bsp \n-\t((long)get_real_reg_value (&frame->pfs), frame->my_bsp);\n-      info = build_ia64_frame_state (pc, frame, bsp, NULL);\n-      if (frame->rp.loc_type == IA64_UNW_LOC_TYPE_NONE) /* We've finished. */\n-\tbreak;\n-    }\n-\n-  return frame_count;\n-}\n-  \n-int\n-_Jv_ia64_backtrace (void **array, int size)\n-{\n-  ia64_frame_state my_frame;\n-  ia64_frame_state originator;\t/* For the context handler is in.  */\n-  void *bsp;\n- \n-  /* Do any necessary initialization to access arbitrary stack frames.\n-     This forces gcc to save memory in our stack frame for saved\n-     registers. */\n-  __builtin_unwind_init ();\n-\n-label_ia64:\n-  bsp = __builtin_ia64_bsp ();\n-  \n-  return ia64_backtrace_helper (array, &&label_ia64, &my_frame, \n-\t\t\t\t&originator, bsp, size);\n-}"}, {"sha": "5eebd79a1f86d3ed2421feb93b77cab0c2ff9736", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca6f88ae88df2e1a41c728d2ced1763b026c854/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=4ca6f88ae88df2e1a41c728d2ced1763b026c854", "patch": "@@ -176,8 +176,6 @@ RANLIB = @RANLIB@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n-SUPPLY_BACKTRACE_FALSE = @SUPPLY_BACKTRACE_FALSE@\n-SUPPLY_BACKTRACE_TRUE = @SUPPLY_BACKTRACE_TRUE@\n SYSDEP_SOURCES = @SYSDEP_SOURCES@\n SYSTEMSPEC = @SYSTEMSPEC@\n SYS_ZLIBS = @SYS_ZLIBS@"}]}