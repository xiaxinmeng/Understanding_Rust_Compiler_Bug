{"sha": "6a4e56a90e3c299e0eb634611cab3d076acbe818", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0ZTU2YTkwZTNjMjk5ZTBlYjYzNDYxMWNhYjNkMDc2YWNiZTgxOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-06-20T06:35:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-06-20T06:35:55Z"}, "message": "re PR middle-end/32285 (Miscompilation with pure _Complex returning call inside another fn's argument list)\n\n\tPR middle-end/32285\n\t* calls.c (precompute_arguments): Also precompute CALL_EXPR arguments\n\tif ACCUMULATE_OUTGOING_ARGS.\n\n\t* gcc.c-torture/execute/20070614-1.c: New test.\n\nFrom-SVN: r125873", "tree": {"sha": "166cd1ce7322fc29d8e7721de1c5dcbb7dfe0b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/166cd1ce7322fc29d8e7721de1c5dcbb7dfe0b43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4e56a90e3c299e0eb634611cab3d076acbe818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4e56a90e3c299e0eb634611cab3d076acbe818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4e56a90e3c299e0eb634611cab3d076acbe818", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4e56a90e3c299e0eb634611cab3d076acbe818/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6cb62483b6958cd89877df5b8c479fc6b9c1faa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb62483b6958cd89877df5b8c479fc6b9c1faa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb62483b6958cd89877df5b8c479fc6b9c1faa2"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "7b3e68d5bcadc1f2a22fe5fea8c5ff385f724dee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a4e56a90e3c299e0eb634611cab3d076acbe818", "patch": "@@ -1,3 +1,9 @@\n+2007-06-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/32285\n+\t* calls.c (precompute_arguments): Also precompute CALL_EXPR arguments\n+\tif ACCUMULATE_OUTGOING_ARGS.\n+\n 2007-06-19  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \t* config/m68hc11/m68hc11.c: Include dataflow header file."}, {"sha": "868edfc396d8f4f2b12c40c8d5f3fef7d9887e0c", "filename": "gcc/calls.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=6a4e56a90e3c299e0eb634611cab3d076acbe818", "patch": "@@ -1269,13 +1269,25 @@ precompute_arguments (int flags, int num_actuals, struct arg_data *args)\n \n   /* If this is a libcall, then precompute all arguments so that we do not\n      get extraneous instructions emitted as part of the libcall sequence.  */\n-  if ((flags & ECF_LIBCALL_BLOCK) == 0)\n+\n+  /* If we preallocated the stack space, and some arguments must be passed\n+     on the stack, then we must precompute any parameter which contains a\n+     function call which will store arguments on the stack.\n+     Otherwise, evaluating the parameter may clobber previous parameters\n+     which have already been stored into the stack.  (we have code to avoid\n+     such case by saving the outgoing stack arguments, but it results in\n+     worse code)  */\n+  if ((flags & ECF_LIBCALL_BLOCK) == 0 && !ACCUMULATE_OUTGOING_ARGS)\n     return;\n \n   for (i = 0; i < num_actuals; i++)\n     {\n       enum machine_mode mode;\n \n+      if ((flags & ECF_LIBCALL_BLOCK) == 0\n+\t  && TREE_CODE (args[i].tree_value) != CALL_EXPR)\n+\tcontinue;\n+\n       /* If this is an addressable type, we cannot pre-evaluate it.  */\n       gcc_assert (!TREE_ADDRESSABLE (TREE_TYPE (args[i].tree_value)));\n "}, {"sha": "20b44c827497f728d65c8972b6e2c6af1400df9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a4e56a90e3c299e0eb634611cab3d076acbe818", "patch": "@@ -1,3 +1,8 @@\n+2007-06-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/32285\n+\t* gcc.c-torture/execute/20070614-1.c: New test.\n+\n 2007-06-19  Seongbae Park  <seongbae.park@gmail.com>\n \n \t* gcc.target/arm/stack-corruption.c: New test."}, {"sha": "fa44f7fa3ec524f8e24d97fdcc7fe49051256b27", "filename": "gcc/testsuite/gcc.c-torture/execute/20070614-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070614-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4e56a90e3c299e0eb634611cab3d076acbe818/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070614-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070614-1.c?ref=6a4e56a90e3c299e0eb634611cab3d076acbe818", "patch": "@@ -0,0 +1,33 @@\n+extern void abort (void);\n+\n+_Complex v = 3.0 + 1.0iF;\n+\n+void\n+foo (_Complex z, int *x)\n+{\n+  if (z != v)\n+    abort ();\n+}\n+\n+_Complex bar (_Complex z) __attribute__ ((pure));\n+_Complex\n+bar (_Complex z)\n+{\n+  return v;\n+}\n+\n+int\n+baz (void)\n+{\n+  int a, i;\n+  for (i = 0; i < 6; i++)\n+    foo (bar (1.0iF * i), &a);\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  baz ();\n+  return 0;\n+}"}]}