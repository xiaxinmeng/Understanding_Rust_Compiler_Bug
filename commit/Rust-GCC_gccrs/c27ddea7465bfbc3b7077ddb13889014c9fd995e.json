{"sha": "c27ddea7465bfbc3b7077ddb13889014c9fd995e", "node_id": "C_kwDOANBUbNoAKGMyN2RkZWE3NDY1YmZiYzNiNzA3N2RkYjEzODg5MDE0YzlmZDk5NWU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T17:27:23Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T21:02:14Z"}, "message": "libstdc++: Update status docs for compare_exchange padding bits\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/status_cxx2020.xml: Update C++20 status.\n\t* doc/html/manual/status.html: Regenerate.", "tree": {"sha": "5393fc200e5c102956b57ec001a1c0be238fb159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5393fc200e5c102956b57ec001a1c0be238fb159"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c27ddea7465bfbc3b7077ddb13889014c9fd995e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c27ddea7465bfbc3b7077ddb13889014c9fd995e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c27ddea7465bfbc3b7077ddb13889014c9fd995e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c27ddea7465bfbc3b7077ddb13889014c9fd995e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3165736d9daafba88adb2db65b2e8ebf0024ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3165736d9daafba88adb2db65b2e8ebf0024ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3165736d9daafba88adb2db65b2e8ebf0024ca"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "c1d7f68abe6b4cec34aec081a67a4846c72253b2", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c27ddea7465bfbc3b7077ddb13889014c9fd995e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c27ddea7465bfbc3b7077ddb13889014c9fd995e/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=c27ddea7465bfbc3b7077ddb13889014c9fd995e", "patch": "@@ -1279,7 +1279,7 @@\n       </td><td align=\"center\"> 10.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_algorithms &gt;= 201806L</code> </td></tr><tr><td align=\"left\">  Constexpr for <code class=\"code\">std::complex</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0415r1.html\" target=\"_top\">\n         P0415R1 </a>\n-      </td><td align=\"center\"> 9.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_complex &gt;= 201711L</code> (since 9.4, see Note 1) </td></tr><tr><td align=\"left\">  P0595R2 <code class=\"code\">std::is_constant_evaluated()</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_complex &gt;= 201711L</code> (since 9.4, see Note 1) </td></tr><tr><td align=\"left\">  <code class=\"code\">std::is_constant_evaluated()</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0595r2.html\" target=\"_top\">\n         P0595R2 </a>\n       </td><td align=\"center\"> 9.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_is_constant_evaluated &gt;= 201811L</code> </td></tr><tr><td align=\"left\">  More constexpr containers </td><td align=\"left\">\n@@ -1365,10 +1365,10 @@\n       </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_syncbuf &gt;= 201803L</code> </td></tr><tr><td align=\"left\">  Make <code class=\"code\">std::memory_order</code> a scoped enumeration </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0439r0.html\" target=\"_top\">\n         P0439R0 </a>\n-      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td><td align=\"left\">\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0528r3.html\" target=\"_top\">\n         P0528R3 </a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  Atomic <code class=\"code\">shared_ptr</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 13.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  Atomic <code class=\"code\">shared_ptr</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0718r2.html\" target=\"_top\">\n         P0718R2 </a>\n       </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\"> __cpp_lib_atomic_shared_ptr &gt;= 201711L</code> </td></tr><tr><td align=\"left\"> std::stop_token and std::jthread </td><td align=\"left\">\n@@ -1537,6 +1537,9 @@\n       </td><td align=\"center\"> 9.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_assume_aligned &gt;= 201811L</code> (since 9.4, see Note 1) </td></tr><tr><td align=\"left\">  Smart pointer creation with default initialization </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1020r1.html\" target=\"_top\">\n         P1020R1 </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_smart_ptr_for_overwrite &gt;= 201811L</code> </td></tr><tr><td align=\"left\">  Rename \"default_init\" Functions </td><td align=\"left\">\n+        <a class=\"link\" href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1973r1.pdf\" target=\"_top\">\n+        P1973R1 </a>\n       </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_smart_ptr_for_overwrite &gt;= 201811L</code> </td></tr><tr><td align=\"left\">  Make stateful allocator propagation more consistent for <code class=\"code\">operator+(basic_string)</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1165r1.html\" target=\"_top\">\n         P1165R1 </a>"}, {"sha": "44dee44f38524c832bd034e588acad3fc1eeac09", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2020.xml", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c27ddea7465bfbc3b7077ddb13889014c9fd995e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c27ddea7465bfbc3b7077ddb13889014c9fd995e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml?ref=c27ddea7465bfbc3b7077ddb13889014c9fd995e", "patch": "@@ -94,7 +94,7 @@ or any notes about the implementation.\n     </row>\n \n     <row>\n-      <entry>  P0595R2 <code>std::is_constant_evaluated()</code> </entry>\n+      <entry>  <code>std::is_constant_evaluated()</code> </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0595r2.html\">\n         P0595R2 </link>\n@@ -384,13 +384,12 @@ or any notes about the implementation.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>  The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0528r3.html\">\n         P0528R3 </link>\n       </entry>\n-      <entry align=\"center\"> </entry>\n+      <entry align=\"center\"> 13.1 </entry>\n       <entry />\n     </row>\n \n@@ -941,6 +940,16 @@ or any notes about the implementation.\n       <entry> <code>__cpp_lib_smart_ptr_for_overwrite &gt;= 201811L</code> </entry>\n     </row>\n \n+    <row>\n+      <entry>  Rename \"default_init\" Functions </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1973r1.pdf\">\n+        P1973R1 </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_smart_ptr_for_overwrite &gt;= 201811L</code> </entry>\n+    </row>\n+\n     <row>\n       <entry>  Make stateful allocator propagation more consistent for <code>operator+(basic_string)</code> </entry>\n       <entry>"}]}