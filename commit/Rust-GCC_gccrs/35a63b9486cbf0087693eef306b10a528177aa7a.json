{"sha": "35a63b9486cbf0087693eef306b10a528177aa7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhNjNiOTQ4NmNiZjAwODc2OTNlZWYzMDZiMTBhNTI4MTc3YWE3YQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@purist.soma.redhat.com", "date": "2000-11-24T23:48:45Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-24T23:48:45Z"}, "message": "codecvt_wchar_t_char.cc (main): Add _GLIBCPP_USE_WCHAR_T guards.\n\n\n2000-11-24  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* testsuite/22_locale/codecvt_wchar_t_char.cc (main): Add\n\t_GLIBCPP_USE_WCHAR_T guards.\n\n\t* configure.in (AC_OUTPUT_COMMANDS): Remove, just run scripts as\n\tis, so that checks for existence of generated files actually work.\n\t* configure: Regenerate.\n\nFrom-SVN: r37723", "tree": {"sha": "88777d03fb87bc97cbf3a9e095dffab96c11529d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88777d03fb87bc97cbf3a9e095dffab96c11529d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35a63b9486cbf0087693eef306b10a528177aa7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a63b9486cbf0087693eef306b10a528177aa7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a63b9486cbf0087693eef306b10a528177aa7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a63b9486cbf0087693eef306b10a528177aa7a/comments", "author": null, "committer": null, "parents": [{"sha": "c3ff75c42196cf0da280614e44b05be073e530c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ff75c42196cf0da280614e44b05be073e530c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ff75c42196cf0da280614e44b05be073e530c3"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "6a1ecb68d35e63fe5fb4e60fc36563406f57522d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=35a63b9486cbf0087693eef306b10a528177aa7a", "patch": "@@ -1,3 +1,12 @@\n+2000-11-24  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n+\n+\t* testsuite/22_locale/codecvt_wchar_t_char.cc (main): Add\n+\t_GLIBCPP_USE_WCHAR_T guards.\n+\n+\t* configure.in (AC_OUTPUT_COMMANDS): Remove, just run scripts as\n+\tis, so that checks for existence of generated files actually work.\n+\t* configure: Regenerate.\n+\n 2000-11-23  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/os/gnu-linux/bits/os_defines.h: Include <features.h>."}, {"sha": "0f4dc49b8f0df90eff2ff50aeb197a3dbc5428bb", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=35a63b9486cbf0087693eef306b10a528177aa7a", "patch": "@@ -19337,11 +19337,11 @@ test \"$no_create\" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1\n \n # Generate bits/c++config.h\n # NB: This must be the first generated file as others include it. . .\n-\n+$srcdir/mkc++config $blddir $srcdir\n \n # Generate bits/std_limits.h and src/limitsMEMBERS.cc\n if test ! -f stamp-limits; then\n-  \n+  $srcdir/mknumeric_limits $blddir $srcdir $xcompiling\n   touch stamp-limits\n fi\n \n@@ -19370,7 +19370,7 @@ if test ! -f stamp-sanity-warned; then\n fi\n \n \n-$srcdir/mkc++config $blddir $srcdir\n-$srcdir/mknumeric_limits $blddir $srcdir $xcompiling\n+\n+\n \n "}, {"sha": "8c6d232f1553e55568f9a6646740b30981c26e67", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=35a63b9486cbf0087693eef306b10a528177aa7a", "patch": "@@ -247,11 +247,11 @@ CXX=\"${CXX}\"\n \n # Generate bits/c++config.h\n # NB: This must be the first generated file as others include it. . .\n-AC_OUTPUT_COMMANDS([$srcdir/mkc++config $blddir $srcdir])\n+$srcdir/mkc++config $blddir $srcdir\n \n # Generate bits/std_limits.h and src/limitsMEMBERS.cc\n if test ! -f stamp-limits; then\n-  AC_OUTPUT_COMMANDS([$srcdir/mknumeric_limits $blddir $srcdir $xcompiling])\n+  $srcdir/mknumeric_limits $blddir $srcdir $xcompiling\n   touch stamp-limits\n fi\n \n@@ -280,3 +280,7 @@ if test ! -f stamp-sanity-warned; then\n fi\n \n \n+\n+\n+\n+"}, {"sha": "3f7c83bcb399000657420272d377e2ee4d0fa1ee", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_wchar_t_char.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a63b9486cbf0087693eef306b10a528177aa7a/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc?ref=35a63b9486cbf0087693eef306b10a528177aa7a", "patch": "@@ -34,6 +34,7 @@\n // or, can use this explicit \"C\" initialization:\n //   w_codecvt::state_type state01 = {0, 0};\n // .. except Ulrich says: Use memset. Always use memset. Feel the force...\n+#ifdef _GLIBCPP_USE_WCHAR_T\n void\n zero_state(std::mbstate_t& state)\n { std::memset(&state, 0, sizeof(std::mbstate_t)); }\n@@ -109,10 +110,14 @@ void test01()\n   delete [] e_arr;\n   delete [] i_arr;\n }\n+#endif /* !defined(_GLIBCPP_USE_WCHAR_T) */\n+\n \n int main ()\n {\n+#if _GLIBCPP_USE_WCHAR_T\n   test01();\n+#endif \n \n   return 0;\n }"}]}