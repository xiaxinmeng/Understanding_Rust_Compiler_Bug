{"sha": "5de923eb8ae12747334e07e2d3826855f03065fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlOTIzZWI4YWUxMjc0NzMzNGUwN2UyZDM4MjY4NTVmMDMwNjVmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:53:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:53:32Z"}, "message": "Resync.\n\nFrom-SVN: r107020", "tree": {"sha": "590a45fd833c9595f7003349422fc754f3575f94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/590a45fd833c9595f7003349422fc754f3575f94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de923eb8ae12747334e07e2d3826855f03065fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de923eb8ae12747334e07e2d3826855f03065fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de923eb8ae12747334e07e2d3826855f03065fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de923eb8ae12747334e07e2d3826855f03065fe/comments", "author": null, "committer": null, "parents": [{"sha": "616cf694edcb0729c2ee8a01f8fb9676e0627eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616cf694edcb0729c2ee8a01f8fb9676e0627eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616cf694edcb0729c2ee8a01f8fb9676e0627eaa"}], "stats": {"total": 1327, "additions": 1327, "deletions": 0}, "files": [{"sha": "47097ebcedabf786b9cb2024f231b3025848caba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1327, "deletions": 0, "changes": 1327, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de923eb8ae12747334e07e2d3826855f03065fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de923eb8ae12747334e07e2d3826855f03065fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5de923eb8ae12747334e07e2d3826855f03065fe", "patch": "@@ -1,3 +1,1330 @@\n+2005-11-14  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-soccon.ads: Minor reformatting. Update comments.\n+\n+\t* gsocket.h: Include <sys/times.h> in the VxWorks case, in order to\n+\tgain visibility on the declaration of struct timeval.\n+\n+\t* g-soccon-freebsd.ads,\n+\tg-soccon-darwin.ads,\n+\tg-soccon-tru64.ads,\n+\tg-soccon-aix.ads,\n+\tg-soccon-irix.ads,\n+\tg-soccon-hpux.ads,\n+\tg-soccon-solaris.ads,\n+\tg-soccon-vms.ads,\n+\tg-soccon-mingw.ads,\n+\tg-soccon-vxworks.ads (SIZEOF_tv_sec, SIZEOF_tv_usec): New constants.\n+\n+\t* g-soccon-hpux-ia64.ads, g-soccon-linux-ppc.ads,\n+\tg-soccon-solaris-64.ads, g-soccon-linux-64.ads,\n+\tg-soccon-linux-x86.ads: New files.\n+\n+\t* g-socthi-mingw.adb: \n+\t(Socket_Error_Message): Remove redundant use of GNAT.Sockets.Constants\n+\n+\t* g-socthi-vxworks.ads, g-socthi-vms.ads, g-socthi-mingw.ads\n+\t(time_t, suseconds_t): New types constructed to match the tv_sec\n+\tand tv_usec fields of C struct timeval.\n+\t(Timeval): Construct structure in terms of the new types.\n+\t(Host_Errno): New function (imported from socket.c), returns last hosts\n+\tdatabase error.\n+\n+\t* g-socthi-vxworks.adb:  Add error handling circuitry.\n+\n+\t* g-socket.ads, g-socket.adb (To_Timeval): Reflect change of type for\n+\tcomponents of struct timeval.\n+\t(Get_Host_By_Name, Get_Host_By_Address): Fix error reporting circuitry.\n+\t(Check_Selector): In error conditions, clear internal socket sets to\n+\tavoid a memory leak.\n+\t(Get_Socket_Option, Set_Socket_Option): Support for Multicast_If,\n+\tSend_Timeout, Receive_Timeout.\n+\n+\t* g-socthi.ads (time_t, suseconds_t): New types constructed to match\n+\tthe tv_sec and tv_usec fields of C struct timeval.\n+\t(Timeval): Construct structure in terms of the new types.\n+\t(Host_Errno): New function (imported from socket.c), returns last hosts\n+\tdatabase error.\n+\n+\t* socket.c (__gnat_get_h_errno): New function to retrieve h_errno, the\n+\thosts database last error code.\n+\n+\t* gen-soccon.c: Complete value expansion should not be performed on\n+\tTARGET, as it has the form of a math expression, and some components\n+\tmay be platform-defined macros.\n+\tFor VxWorks, generate the OK and ERROR values.\n+\tNew constants giving the sizes of the components of C struct timeval.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\tPR ada/18434\n+\n+\t* types.ads: Include All_Checks in Suppress_Array\n+\n+\t* checks.adb (Check_Needed): Remove kludge for a/=b rewritten as\n+\tnot(a=b), since we no longer do this rewriting, and hence it is not\n+\tneeded.\n+\t(Elaboration_Checks_Suppressed): Add special casing to\n+\tdeal with different cases of static and dynamic elaboration checks (all\n+\tchecks does not count in the first case, but does in the second).\n+\t(Expr_Known_Valid): Do not assume that the result of any arbitrary\n+\tfunction call is valid, since this is not the case.\n+\t(Ensure_Valid): Do not apply validity check to a real literal\n+\tin a universal or fixed context\n+\n+\t* exp_ch4.adb (Expand_N_Op_Ne): Don't expand a/=b to not(a=b) for\n+\telementary types using the operator in standard. It is cleaner not to\n+\tmodify the programmers intent, especially in the case of floating-point.\n+\t(Rewrite_Comparison): Fix handling of /= (this was always wrong, but\n+\tit did not matter because we always rewrote a/=b to not(a=b).\n+\t(Expand_Allocator_Expression): For an allocator expression whose nominal\n+\tsubtype is an unconstrained packed type, convert the expression to its\n+\tactual constrained subtype.\n+\tImplement warning for <= or >= where < or > not possible\n+\tFix to Vax_Float tests (too early in many routines, causing premature\n+\tVax_Float expansions.\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Obsolescent): Allow this pragma\n+\tto be used with packages and generic packages as well as with\n+\tsubprograms.\n+\t(Suppress): Set All_Checks, but not Elaboration_Check, for case\n+\tof pragma Suppress (All_Checks)\n+\t(Analyze_Pragma, case Warnings): Implement first argument allowed to be\n+\ta string literal for precise control over warnings.\n+\tAvoid raise of pragma in case of unrecognized pragma and just return\n+\tinstead.\n+\n+\t* sem_prag.ads: Minor reformatting\n+\n+\t* switch-c.adb (Scan_Front_End_Switches): Replace \"raise Bad_Switch;\"\n+\twith call to new procedure Bad_Switch. Call Scan_Pos with new parameter\n+\tSwitch. Do not handle any exception.\n+\tInclude -gnatwx as part of -gnatg (warn on redundant parens)\n+\tAllow optional = after -gnatm\n+\t(Scan_Front_End_Switches): The -gnatp switch sets All_Checks, but no\n+\tlonger sets Elaboration_Checks.\n+\tCode to set warning mode moved to Sem_Warn\n+\tso that it can be shared by pragma processing.\n+\n+\t* s-mastop-tru64.adb (Pop_Frame): Remove redundant parentheses in if\n+\tstatement.\n+\n+\t* s-taprop-solaris.adb: \n+\tChange some <= to =, to avoid new warning\n+\n+\t* a-exexda.adb, prj-proc.adb: \n+\tFix obvious typo (Num_Tracebacks compared <= 0 instead of < 0)\n+\tFix obvious typo (Total_Errors_Detected <= 0 should be = 0)\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_vfpt.adb: Handle /= case\n+\t(Expand_Vax_Conversion): Properly recognize Conversion_OK flag\n+\tso that we do not get duplicate scaling for fixed point conversions.\n+\n+\t* s-vaflop.ads, s-vaflop.adb: (Ne_F): New function\n+\n+2005-11-14  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* system-lynxos-ppc.ads, system-lynxos-x86.ads: \n+\tIncrease default priority on Lynx from 15 to 17, and meet the Ada\n+\trequirement that Default_Priority be ((Priority'First +\n+\tPriority'Last) / 2) by increasing the range of Interrupt_Priority.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-tgt-tru64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb,\n+\tmlib-tgt-hpux.adb, mlib-tgt-hpux.adb, mlib-tgt-linux.adb,\n+\tmlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb, mlib-tgt-vms-alpha.adb,\n+\tmlib-tgt-vms-ia64.adb, mlib-tgt-mingw.adb, mlib-tgt-vxworks.adb,\n+\tmlib-tgt-darwin.adb, mlib-tgt.adb, mlib-tgt.ads,\n+\tmlib-tgt-lynxos.adb (DLL_Prefix): New function\n+\n+2005-11-14  Doug Rupp  <rupp@adacore.com>\n+\n+\t* system-vms.ads, system-vms_64.ads: ADA$GNAT: New exported object in\n+\tprivate part.\n+\n+2005-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-traces-default.adb, s-trafor-default.ads,\n+\ts-tratas-default.adb: Fix compilation errors.\n+\n+2005-11-14  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprop-posix.adb (Initialize_Lock): Destroy mutex attribute before\n+\traising the exception so the memory used is freed.\n+\n+2005-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* adaint.h, adaint.c (__gnat_is_cross_compiler): New constant.\n+\t(Gnat_Install_Locks, __gnatlib_install_locks): Removed, no longer used.\n+\t(convert_address): Update comments and list of platforms using this.\n+\n+\t* s-tasini.adb (Gnat_Install_Locks, __gnatlib_install_locks): Removed,\n+\tno longer used.\n+\n+2005-11-14  Pascal Obry  <obry@adacore.com>\n+\t    Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatdll.adb (Parse_Command_Line): Remove redundant use of\n+\tGNAT.Command_Line.\n+\n+\t* memroot.adb: Remove redundant with/use clause on\n+\tSystem.Storage_Elements.\n+\n+2005-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-except.adb (Zero_Cost_Exceptions): Removed, no longer used.\n+\t(builtin_longjmp, Process_Raise_Exceeption): Move setjmp/longjmp\n+\trelated code to a-exexpr.adb\n+\t(Save_Occurrence_And_Private): Move GCC EH related code to\n+\ta-exexpr-gcc.adb\n+\t(Raise_Current_Excep): Add new variable Id with pragma\n+        volatile, to ensure that the variable lives on stack.\n+\n+\t* a-exexpr-gcc.adb, raise-gcc.c: New file.\n+\n+\t* a-exexpr.adb (builtin_longjmp, Propagate_Exception): Moved here code\n+\tfrom a-except.adb.\n+\tMove GCC EH related code to a-exexpr-gcc.adb\n+\n+\t* Makefile.in: Add or update g-soccon LIBGNAT pairs for Linux/PPC and\n+\t64-bit Solaris\n+\tSplit the Linux version of g-soccon into separate variants for 32 and 64\n+\tbit platforms.\n+\t(gnatlib): Use $(AR_FOR_TARGET) and $(RANLIB_FOR_TARGET)\n+\tvice $(AR) and $(RANLIB). Remove use of host variable $(RANLIB_FLAGS).\n+\tinstall-gnatlib: Use $(RANLIB_FOR_TARGET) vice $(RANLIB). Remove use\n+\tof host variable $(RANLIB_FLAGS).\n+\t(alpha64-dec-*vms*): Fix translations for 64 bit compiler.\n+\tCode clean up: remove unused/obsolete targets.\n+\t(EH_MECHANISM): New variable introduced to differenciate between the\n+\ttwo EH mechanisms statically.\n+\t(gnatlib-zcx, gnatlib-sjlj): Force EH_MECHANISM manually.\n+\t(LIBGNAT_OBJS): Add raise-gcc.o\n+\t(LIBGNAT_TARGET_PAIRS for ppc-vxworks): Use an specialized version of\n+\ts-osinte.adb, s-tpopsp.adb, and system.ads for the run time that\n+\tsupports VxWorks 6 RTPs.\n+\t(EXTRA_GNATRTL_NONTASKING_OBJS for ppc-vxworks): Remove the use of\n+\ti-vxworks and i-vxwoio from the run time that supports VxWorks 6 RTPs.\n+\n+\t* raise.c: Move all GCC EH-related routines to raise-gcc.c\n+\n+2005-11-14  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-tassta.adb (Create_Task): Move the code in charge of resetting the\n+\tdeferral level, when abort is not allowed, to a later stage (the\n+\tTask_Wrapper).\n+\t(Task_Wrapper): If Abort is not allowed, reset the deferral level since\n+\tit will not get changed by the generated code. It was previously done\n+\tin Create_Task.\n+\n+2005-11-14  Thomas Quinot  <quinot@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c:\n+\tFactor common code to build a storage type for an unconstrained object\n+\tfrom a fat or thin pointer type and a constrained object type.\n+\t(annotate_value): Handle BIT_AND_EXPR.\n+\t(annotate_rep): Don't restrict the back annotation of inherited\n+\tcomponents to the type_annotate_only case.\n+\t(gnat_to_gnu_entity) <E_Array_Type>: Do not invoke create_type_decl if\n+\twe are not defining the type.\n+\t<E_Record_Type>: Likewise.\n+\t(gnat_to_gnu_entity) <object, renaming>: Adjust comments and structure\n+\tto get advantage of the new maybe_stabilize_reference interface, to\n+\tensure that what we reference is indeed stabilized instead of relying\n+\ton assumptions on what the stabilizer does.\n+\t(gnat_to_gnu_entity) <E_Incomplete_Type>: If the entity is an incomplete\n+\ttype imported through a limited_with clause, use its non-limited view.\n+\t(Has_Stdcall_Convention): New macro, to centralize the Windows vs others\n+\tdifferentiation.\n+\t(gnat_to_gnu_entity): Use Has_Stdcall_Convention instead of a spread mix\n+\tof #if sections + explicit comparisons of convention identifiers.\n+\t(gnat_to_gnu_entity) <E_Variable>: Decrement force_global if necessary\n+\tbefore early-returning for certain types when code generation is\n+\tdisabled.\n+\t(gnat_to_gnu_entity) <object>: Adjust comment attached to the\n+\tnullification of gnu_expr we do for objects with address clause and\n+\tthat we are not defining.\n+\t(elaborate_expression_1): Do not create constants when creating\n+\tvariables needed by the debug info: the dwarf2 writer considers that\n+\tCONST_DECLs is used only to represent enumeration constants, and emits\n+\tnothing for them.\n+\t(gnat_to_gnu_entity) <object>: When turning a non-definition of an\n+\tobject with an address clause into an indirect reference, drop the\n+\tinitializing expression.\n+\tInclude \"expr.h\".\n+\t(STACK_CHECK_BUILTIN): Delete.\n+\t(STACK_CHECK_PROBE_INTERVAL): Likewise.\n+\t(STACK_CHECK_MAX_FRAME_SIZE): Likewise.\n+\t(STACK_CHECK_MAX_VAR_SIZE): Likewise.\n+\t(gnat_to_gnu_entity): If gnat_entity is a renaming, do not mark the tree\n+\tcorresponding to the renamed object as ignored for debugging purposes.\n+\n+\t* trans.c (tree_transform, case N_Attribute_Reference, case Attr_Size &\n+\trelated): For a prefix that is a dereference of a fat or thin pointer,\n+\tif there is an actual subtype provided by the front-end, use that\n+\tsubtype to build an actual type with bounds template.\n+\t(tree_transform, case N_Free_Statement): If an Actual_Designated_Subtype\n+\tis provided by the front-end, use that subtype to compute the size of\n+\tthe deallocated object.\n+\t(gnat_to_gnu): When adding a statement into an elaboration procedure,\n+\tcheck for a potential violation of a No_Elaboration_Code restriction.\n+\t(maybe_stabilize_reference): New function, like gnat_stabilize_reference\n+\twith extra arguments to control whether to recurse through non-values\n+\tand to let the caller know if the stabilization has succeeded.\n+\t(gnat_stabilize_reference): Now a simple wrapper around\n+\tmaybe_stabilize, for common uses without restriction on lvalues and\n+\twithout need to check for the success indication.\n+\t(gnat_to_gnu, call_to_gnu): Adjust calls to gnat_stabilize_reference, to\n+\tpass false instead of 0 as the FORCE argument which is a bool.\n+\t(Identifier_to_gnu): Remove checks ensuring that an renamed object\n+\tattached to a renaming pointer has been properly stabilized, as no such\n+\tobject is attached otherwise.\n+\t(call_to_gnu): Invoke create_var_decl to create the temporary when the\n+\tfunction uses the \"target pointer\" return mechanism.\n+\tReinstate conversion of the actual to the type of the formal\n+\tparameter before any other specific treatment based on the passing\n+\tmechanism. This turns out to be necessary in order for PLACEHOLDER\n+\tsubstitution to work properly when the latter type is unconstrained.\n+\n+\t* gigi.h (build_unc_object_type_from_ptr): New subprogram, factoring a\n+\tcommon pattern.\n+\t(maybe_stabilize_reference): New function, like gnat_stabilize_reference\n+\twith extra arguments to control whether to recurse through non-values\n+\tand to let the caller know if the stabilization has succeeded.\n+\n+\t* utils2.c (gnat_build_constructor): Only sort the fields for possible\n+\tstatic output of record constructor if all the components are constant.\n+\t(gnat_build_constructor): For a record type, sort the list of field\n+\tinitializers in increasing bit position order.\n+\tFactor common code to build a storage type for an unconstrained object\n+\tfrom a fat or thin pointer type and a constrained object type.\n+\t(build_unary_op) <ADDR_EXPR>: Always recurse down conversions between\n+\ttypes variants, and process special cases of VIEW_CONVERT expressions\n+\tas their NOP_EXPR counterpart to ensure we get to the\n+\tCORRESPONDING_VARs associated with CONST_DECls.\n+\t(build_binary_op) <MODIFY_EXPR>: Do not strip VIEW_CONVERT_EXPRs\n+\ton the right-hand side.\n+\n+\t* utils.c (build_unc_object_type_from_ptr): New subprogram, factoring\n+\ta common pattern.\n+\t(convert) <VIEW_CONVERT_EXPR>: Return the inner operand directly if we\n+\tare converting back to its original type.\n+\t(convert) <JM input>: Fallthrough regular conversion code instead of\n+\textracting the object if converting to a type variant.\n+\t(create_var_decl): When a variable has an initializer requiring code\n+\tgeneration and we are at the top level, check for a potential violation\n+\tof a No_Elaboration_Code restriction.\n+\t(create_var_decl): call expand_decl for CONST_DECLs, to set MODE, ALIGN\n+\tSIZE and SIZE_UNIT which we need for later back-annotations.\n+\t* utils.c: (convert) <STRING_CST>: Remove obsolete code.\n+\t<VIEW_CONVERT_EXPR>: Do not lift the conversion if the target type\n+\tis an unchecked union.\n+\t(pushdecl): Set DECL_NO_STATIC_CHAIN on imported nested functions.\n+\t(convert) <VIEW_CONVERT_EXPR>: When the types have the same\n+\tmain variant, just replace the VIEW_CONVERT_EXPR.\n+\t<UNION_TYPE>: Revert 2005-03-02 change.\n+\n+\t* repinfo.h, repinfo.ads: Add tcode for BIT_AND_EXPR.\n+\n+\t* repinfo.adb (Print_Expr, Rep_Value): Handle Bit_And_Expressions.\n+\n+2005-11-14  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-crbtgo.ads, a-crbtgo.adb, a-coorse.ads, a-coorse.adb, a-convec.ads, \n+\ta-convec.adb, a-coinve.ads, a-coinve.adb, a-cohama.ads, a-cohama.adb, \n+\ta-ciorse.ads, a-ciorse.adb, a-cihama.ads, a-cihama.adb, a-cidlli.ads, \n+\ta-cidlli.adb, a-cdlili.ads, a-cdlili.adb, a-coormu.adb, a-ciormu.adb, \n+\ta-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-ciorma.ads, \n+\ta-coorma.ads, a-ciormu.ads, a-coormu.ads, a-ciorma.adb, a-coorma.adb: \n+\tCompiles against the spec for ordered maps described in sections\n+\tA.18.6 of the most recent (August 2005) AI-302 draft.\n+\n+2005-11-14  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* cuintp.c (UI_To_gnu): Use a proper type for intermediate computations\n+\tto ensure bias adjustments take place when need be and to prevent\n+\toccurrences of intermediate overflows.\n+\n+2005-11-14  Matthew Gingell  <gingell@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n+\n+\t* tb-gcc.c (trace_callback): Work around problem with _Unwind_GetIP on\n+\tia64 HP-UX.\n+\n+\t* tracebak.c (ia64 configuration): Enable _Unwind_Backtrace driven\n+\ttracebacks on ia64 HP-UX and provide explanatory comment.\n+\tEnable backtraces on ia64 GNU/Linux.\n+\t(x86 configuration): Bump FRAME_LEVEL to 1 to ensure we retrieve a real\n+\tbase pointer from builtin_frame_address. Adjust BASE_SKIP accordingly.\n+\n+2005-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* rtsfind.ads, exp_util.adb, exp_util.ads, exp_disp.adb, exp_disp.ads,\n+\texp_ch7.adb, sem_ch9.adb, snames.adb, snames.ads,\n+\texp_ch9.adb, exp_ch9.ads, exp_ch6.adb, exp_ch3.adb, exp_ch3.ads,\n+\teinfo.ads, einfo.adb: Complete support for Ada 2005 interfaces.\n+\n+\t* a-tags.ads, a-tags.adb: Major rewrite and additions to implement\n+\tproperly new Ada 2005 interfaces (AI-345) and add run-time checks (via\n+\tassertions).\n+\n+\t* exp_dbug.ads, exp_dbug.adb (Get_Secondary_DT_External_Name): New\n+\tsubprogram that generates the external name associated with a\n+\tsecondary dispatch table.\n+\t(Get_Secondary_DT_External_Name): New subprogram that generates the\n+\texternal name associated with a secondary dispatch table.\n+\n+2005-11-14  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* xref_lib.adb (Parse_Identifier_Info): It is possible for an entity\n+\tline in the ALI file to include both an instantiation reference, and a\n+\treturned value.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Check_Project): Look for Ada code in extending project,\n+\teven if Ada is not specified as a language.\n+\tUse new function DLL_Prefix for DLL_Name\n+\t(Clean_Interface_Copy_Directory): New procedure\n+\t(Clean_Library_Directory): New procedure\n+\t(Clean_Directory): Remove procedure, no longer used\n+\t(Clean_Project): Do not delete any file in an externally built project\n+\n+\t* prj-env.adb (Set_Ada_Paths.Add.Recursive_Add): Add the object\n+\tdirectory of an extending project, even when there are no Ada source\n+\tpresent.\n+\t(Ada_Objects_Path.Add): Add Library_ALI_Dir, not Library_Dir to the path\n+\t(Set_Ada_Paths.Add.Recursive_Add): Ditto\n+\n+\t* mlib-prj.adb (Check_Library): For all library projects, get the\n+\tlibrary file timestamp.\n+\t(Build_Library): Copy ALI files in Library_ALI_Dir, not in Library_Dir\n+\t(Build_Library): Use new function DLL_Prefix for the DLL_Name\n+\t(Clean): Remove procedure, no longer used\n+\t(Ultimate_Extension_Of): New function\n+\t(Build_Library): When cleaning the library directory, only remove an\n+\texisting library file and any ALI file of a source of the project.\n+\tWhen cleaning the interface copy directory, remove any source that\n+\tcould be a source of the project.\n+\n+\t* prj.ads, prj.adb (Project_Empty): Add values of new components\n+\tLibrary_TS and All_Imported_Projects.\n+\t(Project_Empty): Add values for new components of Project_Data:\n+\tLibrary_ALI_Dir and Display_Library_ALI_Dir\n+\n+\t* prj-attr.adb: New project level attribute name Library_ALI_Dir\n+\n+\t* prj-nmsc.adb (Check_Library_Attributes): Take into account new\n+\tattribute Library_ALI_Dir.\n+\t(Check_Library_Attributes): The library directory cannot be the same as\n+\tany source directory of the project tree.\n+\t(Check_Stand_Alone_Library): The interface copy directory cannot be\n+\tthe same as any source directory of the project tree.\n+\n+\t* mlib.adb: Use Prj.Com.Fail, instead of Osint.Fail directly, to delete\n+\tall temporary files.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_elab.adb: Change name Is_Package to Is_Package_Or_Generic_Package\n+\t(Check_Elab_Call): A call within a protected body is never an\n+\telaboration call, and does not require checking.\n+\t(Same_Elaboration_Scope): Take into account protected types for both\n+\tentities.\n+\t(Activate_Elaborate_All_Desirable): New procedure\n+\n+\t* ali.ads, ali.adb: Implement new AD/ED for Elaborate_All/Elaborate\n+\tdesirable\n+\n+\t* binde.adb: Implement new AD/ED for Elaborate_All/Elaborate desirable\n+\t(Elab_Error_Msg): Use -da to include internal unit links, not -de.\n+\n+\t* lib-writ.ads, lib-writ.adb: \n+\tImplement new AD/ED for Elaborate_All/Elaborate desirable\n+\tUse new Elaborate_All_Desirable flag in N_With_Clause node\n+\n+\t* sinfo.ads, sinfo.adb (Actual_Designated_Subtype): New attribute for\n+\tN_Free_Statement nodes.\n+\tDefine new class N_Subprogram_Instantiation\n+\tAdd Elaborate_Desirable flag to N_With_Clause node\n+\tAdd N_Delay_Statement (covering two kinds of delay)\n+\n+\t* debug.adb: Introduce d.f flag for compiler\n+\tAdd -da switch for binder\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\t    Cyrille Comar  <comar@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Record_Aggr_Code): Do not create master entity\n+\tfor task component, in the case of a limited aggregate. The enclosed\n+\tobject declaration will create it earlier. Otherwise, in the case of a\n+\tnested aggregate, the object may appear in the wrong scope.\n+\t(Convert_Aggr_In_Object_Decl): Create a transient scope when needed.\n+\t(Gen_Assign): If the component being assigned is an array type and the\n+\texpression is itself an aggregate, wrap the assignment in a block to\n+\tforce finalization actions on the temporary created for each row of the\n+\tenclosing object.\n+\t(Build_Record_Aggr_Code): Significant rewrite insuring that ctrl\n+\tstructures are initialized after all discriminants are set so that\n+\tthey can be accessed even when their offset is dynamic.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_attr.adb: Implement Machine_Rounding attribute\n+\t(Analyze_Access_Attribute): The access attribute may appear within an\n+\taggregate that has been expanded into a loop.\n+\t(Check_Task_Prefix): Add semantic check for attribute 'Callable and\n+\t'Terminated whenever the prefix is of a task interface class-wide type.\n+\t(Analyze_Attribute): Add semantic check for attribute 'Identity whenever\n+\tthe prefix is of a task interface class-wide type.\n+\n+\t* s-vaflop-vms-alpha.adb: Valid_D, Valid_F, Valid_G: Make Val constant\n+\tto avoid warnings.\n+\n+\t* s-fatgen.ads, s-fatgen.adb (Machine_Rounding): New function\n+\tRemove pragma Inline for [Unaligned_]Valid.\n+\tAdd comments that Valid routines do not work for Vax_Float\n+\n+\t* exp_attr.adb: Implement Machine_Rounding attribute\n+\n+\t* snames.h: Add entry for Machine_Rounding attribute\n+\n+2005-11-14  Javier Miranda  <miranda@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, cases of Attribute_Size\n+\tand related): For a prefix that is an explicit dereference of an\n+\taccess to unconstrained packed array type, annotate the dereference\n+\twith an actual subtype so GIGI can make a correct size computation.\n+\t(Expand_N_Attribute_Reference): In case of 'Unchecked_Access and\n+\t'Unrestricted_Access, if the designated type is an interface we\n+\tadd a type conversion to force the displacement of the pointer\n+\tto the secondary dispatch table.\n+\tUse Universal_Real instead of Long_Long_Float when we need a high\n+\tprecision float type for the generated code (prevents gratuitous\n+\tVax_Float stuff when pragma Float_Representation (Vax_Float) used)\n+\t(Expand_N_Attribute_Reference): Add support for attribute 'Callable and\n+\t'Terminated for task interface class-wide objects. Generate a call to\n+\tthe predefined dispatching routine used to retrieve the _task_id from\n+\ta task corresponding record.\n+\t(Expand_Fpt_Attribute): Major change to properly handle Vax_Float\n+\n+\t* sem_disp.adb: Change name Is_Package to Is_Package_Or_Generic_Package\n+\t(Check_Dispatching_Operation): Protect the frontend againts\n+\tpreviously detected errors.\n+\n+\t* Makefile.rtl: Add new instantiations of system.fat_gen\n+\n+\t* s-fatflt.ads, s-fatlfl.ads, s-fatllf.ads, s-fatsfl.ads: \n+\tChange name of instantiated package for better consistency\n+\twith newly added system.fat_gen instantiations.\n+\n+\t* s-filofl.ads, s-fishfl.ads, s-fvadfl.ads, s-fvaffl.ads,\n+\ts-fvagfl.ads: New files.\n+\n+2005-11-14  Cyrille Comar  <comar@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Assignment_Statement, Tagged_Case): For an\n+\tassignment of a value of a tagged type that has been rewritten to a\n+\tblock statement, it is known by construction that no checks are\n+\tnecessary for the statements within the block: analyze it with checks\n+\tsuppressed.\n+\t(Expand_N_If_Statement): When killing a dead then-branch in an\n+\tif-statement that has elsif_parts, recompute the Current_Value node\n+\tfor any entity whose value is known from the condition of the first\n+\telsif_part.\n+\t(Expand_N_Return_Statement): When returning a mutable record, convert\n+\tthe return value into its actual subtype in order to help the backend\n+\tto return the actual size instead of the maximum. This is another\n+\taftermath of not returning mutable records on the sec-stack anymore.\n+\n+\t* sem_ch5.ads, sem_ch5.adb (Analyze_Iteration_Scheme): Minor change to\n+\thandling of error msg for suspicious reverse range iteration.\n+\t(Check_Possible_Current_Value_Condition): Move declaration from body to\n+\tspec, to allow this subprogram to be called from exp_ch5.\n+\n+2005-11-14  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Append_Array_Traversal): Modify constrained case to\n+\tgenerate a set of nested array aggregates instead of a single flat\n+\taggregate for multi-dimensional arrays.\n+\n+2005-11-14  Pascal Obry  <obry@adacore.com>\n+\n+\t* expect.c (__gnat_kill) [Win32]: Fix implementation, the pid returned\n+\tby spawnve is a process handle, no need to convert. Add a parameter\n+\tclose to control wether the process handle must be closed.\n+\t(__gnat_waitpid): Fix implementation, the pid returned by spawnve is\n+\ta process handle, not need to convert.\n+\t(__gnat_kill) [*]: Add dummy parameter close to match the Win32 spec.\n+\n+\t* g-expect.adb: (Kill): Document the new close parameter.\n+\t(Close): Do not release the process handle in the kill there as\n+\twaitpid() is using it.\n+\t(Send_Signal): Release the process handle.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_fixd.adb: Use Universal_Real instead of Long_Long_Float when we\n+\tneed a high precision float type for the generated code (prevents\n+\tgratuitous Vax_Float stuff when pragma Float_Representation (Vax_Float)\n+\tused).\n+\n+\t* exp_imgv.adb: Use Universal_Real instead of Long_Long_Float when we\n+\tneed a high precision float type for the generated code (prevents\n+\tgratuitous Vax_Float stuff when pragma Float_Representation (Vax_Float)\n+\tused).\n+\t(Expand_Width_Attribute): In configurable run-time, the attribute is not\n+\tallowed on non-static enumeration subtypes. Force a load error to emit\n+\tthe correct diagnostic.\n+\n+2005-11-14  Thomas Quinot  <quinot@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Unc_Deallocation): If GIGI needs an actual\n+\tsubtype to compute the size of the designated object at run-time,\n+\tcreate such a subtype and store it in the Actual_Designated_Subtype\n+\tattribute of the N_Free_Statement.\n+\tGenerate itype for classwide designated object in both cases of\n+\tuser-specified storage pool: specific and class-wide, not only in the\n+\tspecific case.\n+\tRaise CE when trying to set a not null access type object to null.\n+\t(Expand_Dispatching_Constructor_Call): Retrieve subprogram actual with\n+\tan explicit loop, because freeze nodes make its position variable.\n+\n+\t* sem_intr.adb (Check_Intrinsic_Call): Given warning for freeing not\n+\tnull object.\n+\n+2005-11-14  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_strm.adb (Build_Stream_Attr_Profile, Build_Stream_Function,\n+\tBuild_Stream_Procedure): Add the null-excluding attribute to the first\n+\tformal.\n+\tThis has no semantic meaning under Ada95 mode but it is a\n+\trequirement under Ada05 mode.\n+\n+\t* par-ch3.adb (P_Access_Definition): Addition of warning message if\n+\tthe null exclusion is used under Ada95 mode\n+\t(P_Null_Exclusion): The qualifier has no semantic meaning in Ada 95.\n+\t(P_Access_Definition): Remove assertion that forbids the use of\n+\tthe null-exclusion feature in Ada95.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* impunit.adb: Exclude container helper units not intended for use by\n+\tusers.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): For an access formal that is an access\n+\tto subprogram, freeze the anonymous subprogram type at the same time,\n+\tto prevent later freezing in the wrong scope, such as the enclosing\n+\tsubprogram body.\n+\t(Freeze_Entity): Freeze the equivalent_type of an access_to_protected_\n+\tsubprogram whenever available.\n+\n+2005-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\tPR ada/23732\n+\t* gnatvsn.ads (Library_Version): Bump to 4.1\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-debpoo.adb (Set_Valid): Use Integer_Address instead of\n+\tStorage_Offset to avoid wrap around causing invalid results.\n+\n+2005-11-14  Pascal Obry  <obry@adacore.com>\n+\n+\t* gnatbind.adb (Is_Cross_Compiler): New function returning True for\n+\tcross-compiler.\n+\t(Scan_Bind_Arg): Fail with an error message if -M option is used\n+\ton a native compiler.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Vincent Celier  <celier@adacore.com>\n+\n+\t* gprep.adb: Implement -C switch to scan comments\n+\n+\t* scng.adb: Scan comment symbol separately if Replace_In_Comments set\n+\n+\t* scans.ads: Comment updates (including new use of Tok_Comment in\n+\tpreprocessing)\n+\n+\t* opt.ads: Add documentation for flags that are used by gprmake,\n+\tcurrently and in the next version of gprmake.\n+\t(Verbosity_Level): New variable\n+\tAdd Replace_In_Comments switch\n+\n+\t* vms_data.ads: Add VMS equivalent for new gnatmake switches -vl, -vm\n+\tand -vm.\n+\tAdd /REPLACE_IN_COMMENTS for gnatprep -C switch\n+\n+2005-11-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* g-regpat.adb (Fail): raise Expression_Error including the diagnostic\n+\tmessage, friendlier.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-spitbo.adb: (Hash): Rotate by 3 instead of 1\n+\n+2005-11-14  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c [VMS]: Don't install __gnat_error_handler if DBG$TDBG defined.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* interfac.ads: Change declarations of IEEE float types so that we no\n+\tlonger need a separate version of this package for VMS.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.adb (Generate_Definition, Generate_Reference): Treat the\n+\tinternal entity created for the declaration of a child subprogram body\n+\twith no spec as coming from source, to generate proper cross-reference\n+\tinformation.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Compile_Sources): Change verbose message to minimum\n+\tverbosity level High for \"is in an Ada library\", \"is a read-only\n+\tlibrary\" and \"is an internal library\",\n+\t(Create_Binder_Mapping_File): Path name of ALI file for library project\n+\tmust include the library directory, not the object directory.\n+\t(Scan_Make_Arg): Make sure that Switch.M.Scan_Make_Switches is called\n+\tfor new switches -vl, -vm and -vh.\n+\t(Verbose_Msg): Add new defaulted parameter Minimum_Verbosity\n+\t(Check): Use minimum verbosity Medium for some Verbose_Msg calls\n+\t(Compile_Sources): Do not attempt to compile if an ALI file is missing\n+\tin a project that is externally built.\n+\t(Compute_All_Imported_Projects): New procedure\n+\t(Gnatmake): Check if importing libraries should be regenerated because\n+\tat least an imported library is more recent.\n+\t(Initialize): For each project compute the list of the projects it\n+\timports directly or indirectly.\n+\t(Add_Library_Search_Dir): New procedure, used in place of\n+\tAdd_Lib_Search_Dir in procedure Scan_Make_Arg so that absolute paths are\n+\tput in the search paths.\n+\t(Add_Source_Search_Dir): New procedure, used in place of\n+\tAdd_Src_Search_Dir in procedure Scan_Make_Arg so that absolute paths are\n+\tput in the search paths.\n+\t(Mark_Directory): Resolve the absolute path the directory before marking\n+\tit.\n+\n+\t* switch-m.adb (Scan_Make_Switches): Replace \"raise Bad_Switch;\" with\n+\tcall to new procedure Bad_Switch. Call Scan_Pos with new parameter\n+\tSwitch. Do not handle any exception.\n+\t(Scan_Make_Switches): Increment Ptr for new switches -vl, -vm and -vh\n+\tso that the switch is recognized as valid.\n+\t(Scan_Make_Switches): Implement new switches -vl, -vm and -vh.\n+\n+2005-11-14  GNAT Script  <nobody@adacore.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n+2005-11-14  Pascal Obry  <obry@adacore.com>\n+\n+\t* mdll.adb (Build_Reloc_DLL): Fix parameter handling when a map file is\n+\tused.\n+\t(Ada_Build_Reloc_DLL): Fix parameter handling when a map file is used.\n+\tIn both cases the last argument was dropped.\n+\n+2005-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* namet.h: (Column_Numbe): New type.\n+\t(Get_Column_Number): Define to sinput__get_column_number.\n+\t(Instantiation): Define to sinput__instantiation.\n+\t(Get_Column_Number): Declare.\n+\t(Instantiation): Likewise.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch10.adb (P_Compilation_Unit): Add defenses against junk unit\n+\tsyntax, which could cause compiler hangs.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-ext.adb: Take into account new environment variable\n+\tGPR_PROJECT_PATH. Warn if both GPR_PROJECT_PATH and ADA_PROJECT_PATH\n+\tare defined.\n+\t(Prj.Ext elaboration): For each directory in the ADA_PROJECT_PATH,\n+\tnormalize its path name, making it absolute and resolving symbolic\n+\tlinks, and replace the original if resolved path is different.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-part.adb (Create_Virtual_Extending_Project): Put virtual project\n+\tinto Prj.Tree.Tree_Private_Part.Projects_Htable for GPS.\n+\n+2005-11-14  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-pp.adb (Print): Do not output the with statement if the\n+\tassociated name is empty, which happens for virtual extending projects.\n+\t(Print): Preserve the \"extends all\" attribute when printing the project.\n+\n+\t* prj-tree.ads (String_Value_Of): Add comment about returned value for\n+\ta virtual extending project.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggregate): An others choice is legal on the\n+\trhs of an assignment even if the type is unconstrained, when the\n+\tcontext is non-expanding.\n+\tIn an inlined body, if the context type is private,\n+\tresolve with its full view, which must be a composite type.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb: Change name Is_Package to Is_Package_Or_Generic_Package\n+\tDo not give obsolescent warning on with of subprogram (since we\n+\tdiagnose calls)\n+\t(Analyze_With_Clause): Add test for obsolescent package\n+\t(Install_Context_Clauses): If the unit is the body of a child unit, do\n+\tnot install twice the private declarations of the parents, to prevent\n+\tcircular lists of Use_Clauses in a parent.\n+\t(Implicit_With_On_Parent): Do add duplicate with_clause on parent when\n+\tcompiling body of child unit.\n+\tUse new class N_Subprogram_Instantiation\n+\t(Expand_With_Clause): If this is a private with_clause for a child unit,\n+\tappearing in the context of a package declaration, then the implicit\n+\twith_clauses generated for parent units are private as well.\n+\t(License_Check): Do not generate message if with'ed unit is internal\n+\n+2005-11-14  Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch12.ads, sem_ch12.adb (Map_Entities): Exclude entities whose\n+\tnames are internal, because they will not have a corresponding partner\n+\tin the actual package.\n+\t(Analyze_Formal_Package): Move the setting of the formal package spec's\n+\tGeneric_Parent field so that it occurs prior to analyzing the package,\n+\tto allow proper operation of Install_Parent_Private_Declarations.\n+\t(Analyze_Package_Instantiation): Set the instantiated package entity's\n+\tPackage_Instantiation field.\n+\t(Get_Package_Instantiation_Node): Move declaration to package spec.\n+\tRetrieve the N_Package_Instantiation node when the Package_Instantiation\n+\tfield is present.\n+\t(Check_Generic_Child_Unit): Within an inlined call, the only possible\n+\tinstantiation is Unchecked_Conversion, for which no parents are needed.\n+\t(Inline_Instance_Body): Deinstall and record the use_clauses for all\n+\tparent scopes of a scope being removed prior to inlining an instance\n+\tbody.\n+\t(Analyze_Package_Instantiation): Do not perform front-end inlining when\n+\tthe current context is itself an instance within a non-instance child\n+\tunit, to prevent scope stack errors.\n+\t(Save_References): If the node is an aggregate that is an actual in a\n+\tcall, rewrite as a qualified expression to preserve some type\n+\tinformation, to resolve possible ambiguities in the instance.\n+\t(Instance_Parent_Unit): New global variable to record the ultimate\n+\tparent unit associated with a generic child unit instance (associated\n+\twith the existing Parent_Unit_Visible flag).\n+\t(type Instance_Env): New component Instance_Parent_Unit for stacking\n+\tparents recorded in the global Instance_Parent_Unit.\n+\t(Init_Env): Save value of Instance_Parent_Unit in the Instance_Env\n+\tstack.\n+\t(Install_Spec): Save the parent unit entity in Instance_Parent_Unit when\n+\tit's not a top-level unit, and only do this if Instance_Parent_Unit is\n+\tnot already set. Replace test of Is_Child_Unit with test of parent's\n+\tscope against package Standard. Add comments and a ??? comment.\n+\t(Remove_Parent): Revise condition for resetting Is_Immediately_Visible\n+\ton a child instance parent to test that the parent equals\n+\tInstance_Parent rather than simply checking that the unit is not a\n+\tchild unit.\n+\t(Restore_Env): Restore value of Instance_Parent_Unit from Instance_Env.\n+\t(Validate_Derived_Interface_Type_Instance): Verify that all ancestors of\n+\ta formal interface are ancestors of the corresponding actual.\n+\t(Validate_Formal_Interface_Type): Additional legality checks.\n+\t(Analyze_Formal_Derived_Interface_Type): New procedure to handle formal\n+\tinterface types with ancestors.\n+\t(Analyze_Formal_Package): If formal is a renaming, use renamed entity\n+\tto diagnose attempts to use generic within its own declaration.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.ads, sem_ch3.adb (Build_Discriminal): Add link to original\n+\tdiscriminant.\n+\t(Build_Private_Derived_Type): The entity of the created full view of the\n+\tderived type does not come from source. If after installing the private\n+\tdeclarations of the parent scope the parent is still private, use its\n+\tfull view to construct the full declaration of the derived type.\n+\t(Build_Derived_Record_Type): Relax the condition that controls the\n+\texecution of the check that verifies that the partial view and\n+\tthe full view agree in the set of implemented interfaces. In\n+\taddition, this test now only takes into account the progenitors.\n+\t(Derive_Interface_Subprograms): No need to derive subprograms\n+\tof ancestors that are interfaces.\n+\t(Derive_Subprograms): Remove formal No_Predefined_Prims and the\n+\tassociated code.\n+\tChange name Is_Package to Is_Package_Or_Generic_Package\n+\t(Complete_Subprograms_Derivation): Handle the case in which the full\n+\tview is a transitive derivation of the ancestor of the partial view.\n+\t(Process_Full_View): Rename local subprogram Find_Interface_In_\n+\tDescendant to Find_Ancestor_Interface to leave the code more clear.\n+\tRemove wrong code that avoids the generation of an error message\n+\twhen the immediate ancestor of the partial view is an interface.\n+\tIn addition some minor reorganization of the code has been done to\n+\tleave it more clear.\n+\t(Analyze_Type_Declaration): If type has previous incomplete tagged\n+\tpartial view, inherit properly its primitive operations.\n+\t(Collect_Interfaces): Make public, for analysis of formal\n+\tinterfaces.\n+\t(Analyze_Interface_Declaration): New procedure for use for regular and\n+\tformal interface declarations.\n+\t(Build_Derived_Record_Type): Add support for private types to the code\n+\tthat checks if a tagged type implements abstract interfaces.\n+\t(Check_Aliased_Component_Type): The test applies in the spec of an\n+\tinstance as well.\n+\t(Access_Type_Declaration): Clean up declaration of malformed type\n+\tdeclared as an access to its own classwide type, to prevent cascaded\n+\tcrash.\n+\t(Collect_Interfaces): For private extensions and for derived task types\n+\tand derived protected types, the parent may be an interface that must\n+\tbe included in the interface list.\n+\t(Access_Definition): If the designated type is an interface that may\n+\tcontain tasks, create Master_Id for it before analyzing the expression\n+\tof the declaration, which may be an allocator.\n+\t(Record_Type_Declaration): Set properly the interface kind, for use\n+\tin allocators, the creation of master id's for task interfaces, etc.\n+\n+2005-11-14  Javier Miranda  <miranda@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Conformance): The null-exclusion feature can be\n+\tomitted in case of stream attribute subprograms.\n+\t(Check_Inline_Pragma): Handle Inline and Inline_Always pragmas that\n+\tappear immediately after a subprogram body, when there is no previous\n+\tsubprogram declaration.\n+\tChange name Is_Package to Is_Package_Or_Generic_Package\n+\t(Process_Formals): A non null qualifier on a non null named access\n+\ttype is not an error, and is a warning only if Redundant_Constructs\n+\tare flagged.\n+\n+2005-11-14  Gary Dismukes  <dismukes@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb (Install_Parent_Private_Declarations): New procedure\n+\tnested within Analyze_Package_Specification to install the private\n+\tdeclarations and use clauses within each of the parent units of a\n+\tpackage instance of a generic child package.\n+\t(Analyze_Package_Specification): When entering a private part of a\n+\tpackage associated with a generic instance or formal package, the\n+\tprivate declarations of the parent must be installed (by calling new\n+\tprocedure Install_Parent_Private_Declarations).\n+\tChange name Is_Package to Is_Package_Or_Generic_Package\n+\t(Preserve_Full_Attributes): For a synchronized type, the corresponding\n+\trecord is absent in a generic context, which does not indicate a\n+\tcompiler error.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): In a generic context, do\n+\tnot try to rewrite a renamed stream attribute, because the operations\n+\ton the type may not have been generated.\n+\tHandle properly a renaming_as_body generated for a stream operation\n+\twhose default is abstract because the object type itself is abstract.\n+\t(Find_Type): If the type is incomplete and appears as the prefix of a\n+\t'Class reference, it is tagged, and its list of primitive operations\n+\tmust be initialized properly.\n+\t(Chain_Use_Clauses): When chaining the use clauses that appear in the\n+\tprivate declaration of a parent unit, prior to compiling the private\n+\tpart of a child unit, find on the scope stack the proper parent entity\n+\ton which to link the use clause.\n+\t(Note_Redundant_Use): Emit a warning when a redundant use clause is\n+\tdetected.\n+\t(Analyze_Object_Renaming): An attribute reference is not a legal object\n+\tif it is not a function call.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_eval.adb: Implement d.f flag\n+\t(Subtype_Statically_Match): A generic actual type has unknown\n+\tdiscriminants when the corresponding actual has a similar partial view.\n+\tIf the routine is called to validate the signature of an inherited\n+\toperation in a child instance, the generic actual matches the full view,\n+\n+2005-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Provide a better error message whenever\n+\ta procedure call is used as a select statement trigger and is not an\n+\tentry renaming or a primitive of a limited interface.\n+\t(Valid_Conversion): If the operand has a single interpretation do not\n+\tremove address operations.\n+\t(Check_Infinite_Recursion): Skip freeze nodes when looking for a raise\n+\tstatement to inhibit warning.\n+\t(Resolve_Unary_Op): Do not produce a warning when\n+\tprocessing an expression of the form -(A mod B)\n+\tUse Universal_Real instead of Long_Long_Float when we need a high\n+\tprecision float type for the generated code (prevents gratuitous\n+\tVax_Float stuff when pragma Float_Representation (Vax_Float) used)\n+\t(Resolve_Concatenation_Arg): Improve error message when argument is an\n+\tambiguous call to a function that returns an array.\n+\t(Make_Call_Into_Operator, Operand_Type_In_Scope): Do not check that\n+\tthere is an implicit operator in the given scope if we are within an\n+\tinstance: legality check has been performed on the generic.\n+\t(Resolve_Unary_Op): Apply warnings checks on argument of Abs operator\n+\tafter resolving operand, to avoid false warnings on overloaded calls.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\t    Javier Miranda  <miranda@adacore.com>\n+\n+\tPR ada/15604\n+\n+\t* sem_type.adb (Covers): In an inlined body, a composite type matches\n+\ta private type whose full view is a composite type.\n+\t(Interface_Present_In_Ancestor): Protect the frontend against\n+\tpreviously detected errors to ensure that its compilation\n+\twith assertions enabled gives the same output that its\n+\tcompilation without assertions.\n+\t(Interface_Present_In_Ancestor): Add support for private types.\n+\tChange name In_Actual to In_Generic_Actual (clean up)\n+\t(Disambiguate): New predicate In_Actual, to recognize expressions that\n+\tappear in the renaming declaration generated for generic actuals, and\n+\twhich must be resolved in the outer context.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n+\t    Hristian Kirtchev  <kirtchev@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb: Change name Is_Package to\n+\tIs_Package_Or_Generic_Package.\n+\t(Check_Obsolescent): New procedure.\n+\t(Set_Is_Public): Remove obsolete junk test.\n+\t(Set_Public_Status): Do not set Is_Public on an object whose declaration\n+\toccurs within a handled_sequence_of_statemets.\n+\t(Is_Controlling_Limited_Procedure): Factor some of the logic, account\n+\tfor a parameterless procedure.\n+\t(Enter_Name): Recognize renaming declarations created for private\n+\tcomponent of a protected type within protected operations, so that\n+\tthe source name of the component can be used in the debugger.\n+\n+2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.ads, sem_warn.adb (Publicly_Referenceable): Generic formals\n+\tof a generic subprogram are not visible outside the body.\n+\t(Set_Warning_Switch): New procedure (code to set warning mode moved\n+\there from Switch.C so that it can be shared by pragma processing.\n+\t(Check_References): Special case warning for non-modified non-imported\n+\tvolatile objects.\n+\t* par-prag.adb: Modify processing of pragma Warnings to accomodate new\n+\tform with a string literal argument\n+\n+2005-11-14  Javier Miranda  <miranda@adacore.com>\n+\n+\t* s-finroo.ads, s-finroo.adb (Read): Addition of \"not null\" to the\n+\tanonymous access.\n+\t(Write): Addition of \"not null\" to the anonymous access.\n+\t(Read): Addition of \"not null\" to the anonymous access.\n+\t(Write): Addition of \"not null\" to the anonymous access.\n+\n+\t* s-strxdr.adb, s-stratt.ads, s-stratt.adb (I_AD, I_AS, I_B, I_C, I_F,\n+\tI_I, I_LF, I_LI, I_LLF, I_LLI, I_LLU, I_LU, I_SF, I_SI, I_SSI, I_SSU,\n+\tI_SU, I_U, I_WC): Addition of \"not null\" to the anonymous access.\n+\t(W_AD, W_AS, W_B, W_C, W_F, W_I, W_LF, W_LI, W_LLF, W_LLI, W_LLU,\n+\tW_LU, W_SF, W_SI, W_SSI, W_SSU, W_SU, W_U, W_WC): Addition of\n+\t\"not null\" to the anonymous access.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-stoele.adb: Fix code for Address mod Storage_Offset for negative\n+\toffset values\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch.adb (Bad_Switch): New procedure\n+\t(Scan_Nat, Scan_Pos): Directly call Osint.Fail with the appropriate\n+\tmessage when in error.\n+\n+\t* switch.ads (Bad_Switch, Bad_Switch_Value, Missing_Switch_Value,\n+\tToo_Many_Output_Files): Remove declarations, no longer used.\n+\t(Scan_Nat): New parameter Switch\n+\t(Scan_Pos): Ditto\n+\t(Bad_Switch): New procedure\n+\n+\t* switch-b.adb (Scan_Binder_Switches): Replace \"raise Bad_Switch;\"\n+\twith call to new procedure Bad_Switch. Call Scan_Pos and Scan_Natwith\n+\tnew parameter Switch. Replace \"raise Too_Many_Output_Files;\" with call\n+\tto Osint.Fail. Do not handle any exception.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* tempdir.adb (Tempdir): Do not use environment variable TMPDIR if it\n+\tdesignates a non existent directory.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* xgnatugn.adb: Replace invalid membership test by 'Valid\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* makegpr.adb (Gprmake): Do not attempt to build the global archive if\n+\tthere is no object directory.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* usage.adb: Minor adjustment to output format, use nn instead of nnn\n+\t(so that -gnateInnn does not run into next column)\n+\n+2005-11-14  Ed Falis  <falis@adacore.com>\n+\n+\t* s-bitops.adb (Bits_Array): corrected comment: \"unconstrained\" =>\n+\t\"constrained\"\n+\n+2005-11-14  Cyrille Comar  <comar@adacore.com>\n+\n+\t* s-chepoo.ads: Add comments on Dereference.\n+\tRemove unnecessary inherited abstract primitives.\n+\tCosmetic cleanup.\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_cat.ads (Validate_Access_Type_Declaration): Remove declaration\n+\tnode parameter, not needed, since it is available as Declaration_Node.\n+\n+2005-11-14  Geert Bosch  <bosch@adacore.com>\n+\n+\t* s-exnllf.adb (Exn_LLF): Fix comment to be more precise and\n+\tgrammatically correct.\n+\n+2005-11-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* s-fileio.ads: Correct spelling error in comment\n+\n+2005-11-14  Cyrille Comar  <comar@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\t    Vincent Celier  <celier@adacore.com>\n+\t    Ben Brosgol  <brosgol@adacore.com>\n+\t    Jose Ruiz  <ruiz@adacore.com>\n+\t    Pascal Obry  <obry@adacore.com>\n+\n+\t* gnat_ugn.texi: \n+\tDocument that -fstack-check is needed for strict compliance with the\n+\tAda 95 Reference Manual.\n+\tCorrect reference to VAX systems to meet HP guidelines\n+\tAdd documentation for new gnatmake switches -vl, -vm and -vh\n+\tReplace DEC Ada by HP Ada\n+\tReplace DIGITAL by HP\n+\tRemove empty section on tools in compatibility section\n+\tClarify the Windows convention semantics.\n+\tDocument the Win32 calling convention.\n+\tThe Stdcall, Win32 and DLL convention are synonyms.\n+\tAdd a note in -gnatR description about zero size record components\n+\tNote on new >= and <= warnings for -gnatwc\n+\tDocument that equal sign after -gnatm is optional.\n+\tNote that strip is working fine on DLL built with a Library\n+\tProject. The restriction apply only to DLL built with gnatdll.\n+\tUpdate section about the way to debug a DLL.\n+\tUpdate information about the DLL convention.\n+\tDocument -C switch for gnatprep\n+\tDocument new attribute Library_ALI_Dir\n+\tUpdate elaboration doc to include implicit Elaborate pragmas now\n+\tgenerated for subprogram instantiations.\n+\tDocument limitation on executable names that include spaces for --GCC,\n+\t--GNATBIND, and --GNATLINK switches.\n+\tDocument that -w causes -gnatws to be added at start of gcc switches\n+\n+\t* gnat_rm.texi: Document that -mieee is needed for generating infinite\n+\tand NaN values in case of overflow on machines that are not fully\n+\tcompliant with the IEEE floating-point standard.\n+\tCreate a section describing the set of compiler options needed for\n+\tstrict compliance with the Ada 95 Reference Manual.\n+\tAdd documentation for pragma Obsolescent applied to a package\n+\tClarify potential issues of mixed language programs related to the\n+\tI/O buffering enabling in the elaboration of the GNAT runtime.\n+\tAdd extra documentation for pragma Restrictions (No_Elaboration_Code)\n+\tThis documentation only patch adds extra documentsion for pragma\n+\tRestrictions (No_Elaboration_Code), explaining why it is not possible\n+\tto document this restriction in terms of allowed source constructs.\n+\tDocument string literal form of pragma Warnings\n+\tDocument new attribute Library_ALI_Dir\n+\tAdd documentation on stable attributes in project files that was missing\n+\n+\t* gnat-style.texi: Indicate that paragraphs within a single comment\n+\tshould be separated by empty comment lines\n+\n+\t* ug_words: Added replacements for -gnat95 and -gnat05 (/95 and\n+\t/05 respectively)\n+\n+\t* bindusg.adb: Minor cleanup, put -m before -M for consistency\n+\n+2005-11-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-secain.adb, a-slcain.adb, a-shcain.adb, a-chtgke.ads, a-chtgke.adb,\n+\ta-stwiha.adb, a-strhas.adb, a-chzla1.ads, a-chzla9.ads, a-stzbou.adb,\n+\ta-stzbou.ads, a-stzfix.adb, a-stzhas.adb, a-stzmap.adb, a-stzmap.ads,\n+\ta-stzsea.adb, a-stzsea.ads, a-stzsup.adb, a-stzsup.ads, a-stzunb.adb,\n+\ta-stzunb.ads, a-szuzha.adb, a-szuzha.ads, a-szuzti.adb, a-szuzti.ads,\n+\ta-ztcoau.adb, a-ztcoau.ads, a-ztcoio.adb, a-ztcstr.adb, a-ztcstr.ads,\n+\ta-ztdeau.adb, a-ztdeau.ads, a-ztdeio.adb, a-ztdeio.ads, a-ztedit.adb,\n+\ta-ztedit.ads, a-ztenau.ads, a-ztenio.adb, a-ztenio.ads, a-ztexio.adb,\n+\ta-ztexio.ads, a-ztfiio.adb, a-ztfiio.ads, a-ztflau.adb, a-ztflau.ads,\n+\ta-ztflio.adb, a-ztflio.ads, a-ztgeau.adb, a-ztgeau.ads, a-ztinau.adb,\n+\ta-ztinau.ads, a-ztinio.adb, a-ztmoau.ads, a-ztmoio.adb, a-ztmoio.ads,\n+\ta-zttest.adb, g-enblsp-vms-alpha.adb, g-enblsp-vms-alpha.adb,\n+\tg-enblsp-vms-ia64.adb, g-enblsp-vms-ia64.adb, system-linux-hppa.ads,\n+\ta-chacon.adb, a-chacon.ads, a-wichun.adb, a-wichun.ads, a-zchuni.adb,\n+\ta-zchuni.ads, g-trasym-vms-alpha.adb, g-trasym-vms-ia64.adb,\n+\tsystem-hpux-ia64.ads, g-soccon-unixware.ads, g-soliop-unixware.ads,\n+\tg-soccon-interix.ads, g-soliop-solaris.ads, g-eacodu-vms.adb,\n+\tg-expect-vms.adb, g-socthi-vms.adb, g-soliop-mingw.ads,\n+\ta-intnam-unixware.ads, a-intnam-lynxos.ads, a-intnam-tru64.ads,\n+\ta-intnam-aix.ads, a-intnam-linux.ads, a-intnam-linux.ads,\n+\ta-intnam-dummy.ads, a-numaux-libc-x86.ads, a-intnam-interix.ads,\n+\ta-intnam-solaris.ads, a-calend-vms.adb, a-calend-vms.ads,\n+\ta-intnam-vms.ads, a-calend-mingw.adb, a-intnam-mingw.ads,\n+\ta-intnam-vxworks.ads, a-numaux-vxworks.ads, system-unixware.ads,\n+\tsystem-linux-ia64.ads, a-intnam-freebsd.ads, system-freebsd-x86.ads,\n+\tsystem-lynxos-ppc.ads, system-linux-x86_64.ads, a-stunha.adb,\n+\ta-cgaaso.ads, a-cgaaso.adb, a-chtgop.adb, a-cgcaso.adb, a-cgarso.adb,\n+\ta-cohata.ads, a-crbtgk.adb, a-crbltr.ads, a-coprnu.adb, a-rbtgso.adb,\n+\ta-intnam-darwin.ads, system-darwin-ppc.ads, gprmake.adb, makegpr.ads,\n+\tsystem-tru64.ads, system-aix.ads, system-solaris-x86.ads,\n+\tsystem-irix-o32.ads, s-interr-sigaction.adb, system-irix-n32.ads,\n+\ts-parame-mingw.adb, system-hpux.ads, s-traceb-hpux.adb,\n+\tsystem-linux-x86.ads, s-inmaop-dummy.adb, system-os2.ads,\n+\tsystem-interix.ads, system-solaris-sparc.ads,\n+\tsystem-solaris-sparcv9.ads, s-inmaop-vms.adb,\n+\ts-mastop-vms.adb, expander.adb, expander.ads, s-gloloc-mingw.adb,\n+\tsystem-mingw.ads, system-vms-zcx.ads, s-osinte-fsu.adb,\n+\ts-traceb-mastop.adb, a-exextr.adb, a-exstat.adb, a-filico.ads,\n+\ta-finali.ads, a-interr.ads, a-intsig.adb, a-intsig.ads,\n+\ta-except.ads, a-numaux-x86.ads, a-astaco.adb, a-calend.adb,\n+\ta-calend.ads, a-chahan.adb, a-chahan.ads, a-chlat9.ads,\n+\ta-colien.adb, a-colien.ads, a-colire.adb, a-colire.ads,\n+\ta-comlin.adb, a-comlin.ads, a-cwila1.ads, a-cwila9.ads,\n+\ta-elchha.adb, a-decima.adb, a-decima.ads, a-diocst.ads,\n+\ta-direio.adb, a-direio.ads, a-excach.adb, a-excach.adb,\n+\ta-exctra.ads, ali-util.adb, a-ngcefu.adb, a-ngcoty.adb,\n+\ta-ngcoty.ads, a-nudira.adb, a-nudira.ads, a-nuflra.adb,\n+\ta-numaux.ads, a-reatim.ads, a-sequio.adb, a-sequio.ads,\n+\ta-siocst.ads, a-ssicst.ads, a-stmaco.ads, a-storio.adb,\n+\ta-strbou.adb, a-strbou.ads, a-stream.ads, a-strfix.adb,\n+\ta-strmap.adb, a-strmap.ads, a-strsea.adb, a-strsea.ads,\n+\ta-strsup.adb, a-strsup.ads, a-strunb.adb, a-strunb.ads,\n+\ta-stwibo.adb, a-stwibo.ads, a-stwifi.adb, a-stwima.adb,\n+\ta-stwima.ads, a-stwise.adb, a-stwise.ads, a-stwisu.adb,\n+\ta-stwisu.ads, a-stwiun.adb, a-stwiun.ads, a-suteio.adb,\n+\ta-suteio.ads, a-swmwco.ads, a-swuwti.adb, a-swuwti.ads,\n+\ta-sytaco.adb, a-sytaco.ads, a-tasatt.adb, a-taside.adb,\n+\ta-taside.ads, a-teioed.adb, a-textio.adb, a-textio.ads,\n+\ta-ticoau.adb, a-ticoau.ads, a-ticoio.adb, a-tideau.adb,\n+\ta-tideio.adb, a-tienau.adb, a-tienio.adb, a-tifiio.adb,\n+\ta-tiflio.adb, a-tigeau.adb, a-tigeau.ads, a-tiinau.adb,\n+\ta-tiinio.adb, a-timoau.adb, a-timoio.adb, a-timoio.ads,\n+\ta-tiocst.ads, a-titest.adb, atree.adb, a-witeio.adb,\n+\ta-witeio.ads, a-wtcoau.adb, a-wtcoau.ads, a-wtcoio.adb,\n+\ta-wtcstr.ads, a-wtdeau.adb, a-wtdeio.adb, a-wtedit.adb,\n+\ta-wtedit.ads, a-wtenau.adb, a-wtenio.adb, a-wtfiio.adb,\n+\ta-wtflio.adb, a-wtgeau.adb, a-wtinau.adb, a-wtinio.adb,\n+\ta-wtmoau.adb, a-wtmoio.adb, a-wttest.adb, back_end.adb,\n+\tbindgen.adb, butil.adb, butil.ads, checks.ads, cio.c, comperr.adb,\n+\tcsets.ads, cstand.adb, debug.ads, elists.ads, errno.c, errout.adb,\n+\terrout.ads, erroutc.adb, erroutc.ads, errutil.adb, errutil.ads,\n+\terrutil.ads, err_vars.ads, eval_fat.adb, exp_ch11.adb, exp_ch11.ads,\n+\texp_ch2.adb, exp_ch7.ads, exp_imgv.ads, exp_pakd.adb, exp_prag.adb,\n+\texp_prag.ads, exp_tss.adb, exp_tss.ads, exp_vfpt.ads, fe.h, fmap.adb,\n+\tfreeze.ads, frontend.adb, frontend.ads, g-arrspl.adb, g-arrspl.ads,\n+\tg-awk.adb, g-awk.ads, g-boumai.ads, g-calend.adb, g-calend.ads,\n+\tg-catiio.adb, g-comlin.adb, g-comlin.ads, g-comlin.ads, g-comlin.ads,\n+\tg-comver.adb, g-crc32.adb, g-crc32.ads, g-ctrl_c.ads, g-curexc.ads,\n+\tg-debpoo.ads, g-debuti.adb, g-diopit.adb, g-diopit.ads, g-dirope.adb,\n+\tg-dirope.ads, g-dyntab.adb, g-dyntab.ads, g-excact.adb, g-excact.ads,\n+\tg-except.ads, g-exctra.adb, g-exctra.ads, g-expect.ads, g-flocon.ads,\n+\tg-hesorg.ads, g-io.adb, g-locfil.ads, g-md5.adb, g-md5.ads, g-md5.ads,\n+\tg-moreex.adb, g-signal.ads, g-signal.adb, gnatbind.ads, gnatchop.adb,\n+\tgnatcmd.adb, gnatfind.adb, gnatlbr.adb, gnatmake.ads, gnatmem.adb,\n+\tgnatprep.adb, gnatprep.ads, gnatsym.adb, gnatxref.adb, g-os_lib.adb,\n+\tg-os_lib.ads, g-pehage.adb, g-pehage.ads, gprep.ads, g-regexp.adb,\n+\tg-regexp.ads, g-regist.adb, g-regist.ads, g-regpat.ads, g-semaph.adb,\n+\tg-socthi.adb, g-soliop.ads, g-spipat.adb, g-spipat.ads, g-sptabo.ads,\n+\tg-sptain.ads, g-sptavs.ads, g-string.ads, g-tasloc.adb, g-tasloc.ads,\n+\tg-trasym.adb, g-trasym.ads, i-fortra.adb, i-fortra.ads, inline.adb,\n+\tlayout.adb, live.adb, make.ads, makeutl.ads, makeutl.adb, mdll-fil.adb,\n+\tmdll-fil.ads, mdll-utl.ads, memroot.ads, memtrack.adb, mlib.ads,\n+\tmlib-fil.adb, mlib-fil.ads, mlib-prj.ads, mlib-utl.adb, mlib-utl.ads,\n+\tnlists.adb, nlists.ads, osint.adb, osint.ads, osint-c.adb, osint-l.adb,\n+\tosint-l.ads, osint-m.ads, output.adb, par.adb, par.adb, par.ads,\n+\tpar-ch11.adb, par-ch12.adb, par-ch2.adb, par-ch4.adb, par-ch5.adb,\n+\tpar-ch6.adb, par-ch9.adb, par-endh.adb, par-labl.adb, par-load.adb,\n+\tpar-tchk.adb, prep.adb, prepcomp.adb, prepcomp.ads, prj-attr.ads,\n+\tprj-com.ads, prj-dect.adb, prj-dect.ads, prj-env.ads, prj-err.ads,\n+\tprj-ext.ads, prj-makr.adb, prj-makr.ads, prj-nmsc.ads, prj-pars.adb,\n+\tprj-pars.ads, prj-part.ads, prj-pp.ads, prj-proc.ads, prj-strt.adb,\n+\tprj-strt.ads, prj-tree.adb, prj-util.adb, prj-util.ads, rtsfind.adb,\n+\tsem.adb, sem.ads, sem_case.adb, sem_case.ads, sem_ch11.adb,\n+\tsem_ch4.adb, sem_ch6.ads, sem_ch7.ads, sem_dist.ads, sem_elab.ads,\n+\tsem_elim.ads, sem_eval.ads, sem_intr.ads, sem_maps.adb, sem_maps.ads,\n+\tsem_maps.ads, sem_res.ads, sem_type.ads, sfn_scan.adb, sfn_scan.ads,\n+\ts-imgwch.ads, s-imgwiu.adb, s-imgwiu.ads, s-inmaop.ads, sinput.adb,\n+\tsinput.ads, s-pack03.adb, s-pack03.ads, s-pack05.adb, s-pack05.ads,\n+\ts-pack06.adb, s-pack06.ads, s-pack07.adb, s-pack07.ads, s-pack09.adb,\n+\ts-pack09.ads, s-pack10.adb, s-pack10.ads, s-pack11.adb, s-pack11.ads,\n+\ts-pack12.adb, s-pack12.ads, s-pack13.adb, s-pack13.ads, s-pack14.adb,\n+\ts-pack14.ads, s-pack15.adb, s-pack15.ads, s-pack17.adb, s-pack17.ads,\n+\ts-pack18.adb, s-pack18.ads, s-pack19.adb, s-pack19.ads, s-pack20.adb,\n+\ts-pack20.ads, s-pack21.adb, s-pack21.ads, s-pack22.adb, s-pack22.ads,\n+\ts-pack23.adb, s-pack23.ads, s-pack24.adb, s-pack24.ads, s-pack25.adb,\n+\ts-pack25.ads, s-pack26.adb, s-pack26.ads, s-pack27.adb, s-pack27.ads,\n+\ts-pack28.adb, s-pack28.ads, s-pack29.adb, s-pack29.ads, s-pack30.adb,\n+\ts-pack30.ads, s-pack31.adb, s-pack31.ads, s-pack33.adb, s-pack33.ads,\n+\ts-pack34.adb, s-pack34.ads, s-pack35.adb, s-pack35.ads, s-pack36.adb,\n+\ts-pack36.ads, s-pack37.adb, s-pack37.ads, s-pack38.adb, s-pack38.ads,\n+\ts-pack39.adb, s-pack39.ads, s-pack40.adb, s-pack40.ads, s-pack41.adb,\n+\ts-pack41.ads, s-pack42.adb, s-pack42.ads, s-pack43.adb, s-pack43.ads,\n+\ts-pack44.adb, s-pack44.ads, s-pack45.adb, s-pack45.ads, s-pack46.adb,\n+\ts-pack46.ads, s-pack47.adb, s-pack47.ads, s-pack48.adb, s-pack48.ads,\n+\ts-pack49.adb, s-pack49.ads, s-pack50.adb, s-pack50.ads, s-pack51.adb,\n+\ts-pack51.ads, s-pack52.adb, s-pack52.ads, s-pack53.adb, s-pack53.ads,\n+\ts-pack54.adb, s-pack54.ads, s-pack55.adb, s-pack55.ads, s-pack56.adb,\n+\ts-pack56.ads, s-pack57.adb, s-pack57.ads, s-pack58.adb, s-pack58.ads,\n+\ts-pack59.adb, s-pack59.ads, s-pack60.adb, s-pack60.adb, s-pack60.ads,\n+\ts-pack61.adb, s-pack61.ads, s-pack62.adb, s-pack62.ads, s-pack63.adb,\n+\ts-pack63.ads, s-parint.adb, s-parint.adb, s-parint.ads, sprint.ads,\n+\ts-purexc.ads, s-restri.ads, s-restri.adb, s-scaval.adb, s-scaval.ads,\n+\ts-secsta.adb, s-secsta.ads, s-sequio.adb, s-sequio.ads, stand.ads,\n+\ts-tasuti.adb, s-traceb.adb, s-traceb.ads, stringt.adb, stringt.ads,\n+\tstyleg.ads, s-valboo.adb, s-valboo.ads, s-valcha.adb, s-valcha.ads,\n+\ts-valdec.adb, s-valdec.ads, s-valint.adb, s-valint.ads, s-valint.ads,\n+\ts-vallld.adb, s-vallld.ads, s-vallli.adb, s-vallli.ads, s-valllu.adb,\n+\ts-valllu.ads, s-valrea.adb, s-valrea.ads, s-valuns.adb, s-valuns.ads,\n+\ts-valuti.adb, s-valuti.ads, s-valwch.ads, s-veboop.adb, s-veboop.ads,\n+\ts-vercon.adb, s-vercon.ads, s-wchcnv.adb, s-wchcnv.ads, s-wchcon.ads,\n+\ts-wchjis.adb, s-wchjis.ads, s-wchstw.adb, s-wchstw.adb, s-wchstw.ads,\n+\ts-wchwts.adb, s-wchwts.ads, s-widboo.adb, s-widboo.ads, s-widcha.adb,\n+\ts-widcha.ads, s-widenu.adb, s-widenu.ads, s-widlli.adb, s-widlli.ads,\n+\ts-widllu.adb, s-widllu.ads, s-widwch.adb, s-widwch.ads, s-wwdcha.adb,\n+\ts-wwdcha.ads, s-wwdenu.adb, s-wwdenu.ads, symbols.adb, symbols.ads,\n+\ttable.ads, targparm.adb, targparm.ads, tb-alvms.c, tb-alvxw.c,\n+\ttbuild.adb, tree_io.ads, treepr.adb, treeprs.adt, ttypef.ads,\n+\tttypes.ads, types.adb, uintp.adb, uintp.ads, uname.ads, urealp.ads,\n+\tusage.ads, validsw.ads, vxaddr2line.adb, widechar.adb, widechar.ads,\n+\txeinfo.adb, xnmake.adb, xref_lib.ads, xr_tabls.adb, xr_tabls.ads,\n+\txsinfo.adb, xtreeprs.adb, xsnames.adb, vms_conv.ads, vms_conv.adb,\n+\ta-dirval.ads, a-dirval.adb, a-dirval-mingw.adb, a-direct.ads,\n+\ta-direct.adb, indepsw.ads, prj-attr-pm.ads, system-linux-ppc.ads,\n+\ta-numaux-darwin.ads, a-numaux-darwin.adb,\n+\ta-swuwha.ads, a-stunha.ads: Minor reformatting\n+\n 2005-11-14  Robert Dewar  <dewar@adacore.com>\n \n \tPR ada/18434"}]}