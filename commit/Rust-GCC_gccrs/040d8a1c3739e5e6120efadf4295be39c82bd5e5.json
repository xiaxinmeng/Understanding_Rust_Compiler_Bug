{"sha": "040d8a1c3739e5e6120efadf4295be39c82bd5e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwZDhhMWMzNzM5ZTVlNjEyMGVmYWRmNDI5NWJlMzljODJiZDVlNQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-07-26T10:30:20Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-07-26T10:30:20Z"}, "message": "AArch64 support for NEG in vector registers for DI and SI mode\n\nFrom-SVN: r201261", "tree": {"sha": "955835e8d42d0a615414cbf104c703cdb4b9b537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/955835e8d42d0a615414cbf104c703cdb4b9b537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040d8a1c3739e5e6120efadf4295be39c82bd5e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040d8a1c3739e5e6120efadf4295be39c82bd5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040d8a1c3739e5e6120efadf4295be39c82bd5e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040d8a1c3739e5e6120efadf4295be39c82bd5e5/comments", "author": null, "committer": null, "parents": [{"sha": "85bd4ac6e2dd81712e54d7f6e8c17340dcb36a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bd4ac6e2dd81712e54d7f6e8c17340dcb36a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85bd4ac6e2dd81712e54d7f6e8c17340dcb36a11"}], "stats": {"total": 89, "additions": 85, "deletions": 4}, "files": [{"sha": "773e35c9ab92031b7266db61e02c7902f907377a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040d8a1c3739e5e6120efadf4295be39c82bd5e5", "patch": "@@ -1,3 +1,8 @@\n+2013-07-26  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/aarch64/aarch64.md (neg<mode>2): Offer alternative that\n+\tuses vector registers.\n+\n 2013-07-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n             Richard Earnshaw  <richard.earnshaw@arm.com>\n "}, {"sha": "5d64228351be8c0e251b8524c5c917e14e0b1054", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=040d8a1c3739e5e6120efadf4295be39c82bd5e5", "patch": "@@ -2041,12 +2041,17 @@\n )\n \n (define_insn \"neg<mode>2\"\n-  [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n-\t(neg:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:GPI 0 \"register_operand\" \"=r,w\")\n+\t(neg:GPI (match_operand:GPI 1 \"register_operand\" \"r,w\")))]\n   \"\"\n-  \"neg\\\\t%<w>0, %<w>1\"\n+  \"@\n+   neg\\\\t%<w>0, %<w>1\n+   neg\\\\t%<rtn>0<vas>, %<rtn>1<vas>\"\n   [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"mode\" \"<MODE>\")]\n+   (set_attr \"simd_type\" \"*,simd_negabs\")\n+   (set_attr \"simd\" \"*,yes\")\n+   (set_attr \"mode\" \"<MODE>\")\n+   (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n ;; zero_extend version of above"}, {"sha": "ca1a2273fcac75e84854e86c1ebb87ed266ddaaa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=040d8a1c3739e5e6120efadf4295be39c82bd5e5", "patch": "@@ -1,3 +1,7 @@\n+2013-07-26  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/neg_1.c: New test.\n+\n 2013-07-25  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/57966"}, {"sha": "04b0fdd2313f7d37e57fad6fc427512c41080d6d", "filename": "gcc/testsuite/gcc.target/aarch64/neg_1.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040d8a1c3739e5e6120efadf4295be39c82bd5e5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_1.c?ref=040d8a1c3739e5e6120efadf4295be39c82bd5e5", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-inline --save-temps\" } */\n+\n+extern void abort (void);\n+\n+long long\n+neg64 (long long a)\n+{\n+  /* { dg-final { scan-assembler \"neg\\tx\\[0-9\\]+\" } } */\n+  return 0 - a;\n+}\n+\n+long long\n+neg64_in_dreg (long long a)\n+{\n+  /* { dg-final { scan-assembler \"neg\\td\\[0-9\\]+, d\\[0-9\\]+\" } } */\n+  register long long x asm (\"d8\") = a;\n+  register long long y asm (\"d9\");\n+  asm volatile (\"\" : : \"w\" (x));\n+  y = 0 - x;\n+  asm volatile (\"\" : : \"w\" (y));\n+  return y;\n+}\n+\n+int\n+neg32 (int a)\n+{\n+  /* { dg-final { scan-assembler \"neg\\tw\\[0-9\\]+\" } } */\n+  return 0 - a;\n+}\n+\n+int\n+neg32_in_sreg (int a)\n+{\n+  /* { dg-final { scan-assembler \"neg\\tv\\[0-9\\]+\\.2s, v\\[0-9\\]+\\.2s\" } } */\n+  register int x asm (\"s8\") = a;\n+  register int y asm (\"s9\");\n+  asm volatile (\"\" : : \"w\" (x));\n+  y = 0 - x;\n+  asm volatile (\"\" : : \"w\" (y));\n+  return y;\n+}\n+\n+int\n+main (void)\n+{\n+  long long a;\n+  int b;\n+  a = 61;\n+  b = 313;\n+\n+  if (neg64 (a) != -61)\n+    abort ();\n+\n+  if (neg64_in_dreg (a) != -61)\n+    abort ();\n+\n+  if (neg32 (b) != -313)\n+    abort ();\n+\n+  if (neg32_in_sreg (b) != -313)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}