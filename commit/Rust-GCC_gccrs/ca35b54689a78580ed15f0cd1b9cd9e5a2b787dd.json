{"sha": "ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzNWI1NDY4OWE3ODU4MGVkMTVmMGNkMWI5Y2Q5ZTVhMmI3ODdkZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-03T19:58:40Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-03T19:58:40Z"}, "message": "Fix messed up accidental commit.\n\nFrom-SVN: r75368", "tree": {"sha": "3d686174201329a100ae99ae55e9028cf9b316c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d686174201329a100ae99ae55e9028cf9b316c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/comments", "author": null, "committer": null, "parents": [{"sha": "c5d1156b32432f680505056a6832b1ac16b16a21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d1156b32432f680505056a6832b1ac16b16a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d1156b32432f680505056a6832b1ac16b16a21"}], "stats": {"total": 65, "additions": 21, "deletions": 44}, "files": [{"sha": "b197c751d409a9477448e432ecd5aff44a76b40e", "filename": "gcc/ChangeLog.10", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2FChangeLog.10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2FChangeLog.10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.10?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -145,20 +145,6 @@\n \t* i386.h (CLASS_LIKELY_SPILLED_P): Return true for\n \tFP_TOP_REG/FP_SECOND_REG.\n \n-2003-12-30  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* Makefile.in (graph.o): Add dependencies on TREE_H and langhooks.h\n-\t(gcse.c): Add dependency on langhooks.h\n-\t* function.h (struct function): Remove the `name' field.\n-\t(current_function_name): Do not define.\n-\t* function.c (allocate_struct_function): Don't initialize the `name'\n-\tfield.\n-\t* gcse.c (gcse_main, one_classic_gcse_pass, one_cprop_pass,\n-\tone_pre_gcse_pass, bypass_jumps): Replace all occurences of\n-\tcurrent_function_name with lang_hooks.decl_printable_name calls.\n-\t* graph.h (start_fct, start_bb, node_data, draw_edge, end_fct):\n-\tLikewise.\n-\n 2003-12-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tBackport from tree-ssa (relevant changes only):"}, {"sha": "13901411156247918ddbf2647259440a037b6d1b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -1322,7 +1322,7 @@ c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H)\n c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n     function.h c-pragma.h toplev.h output.h $(GGC_H) $(TM_P_H) $(C_COMMON_H) gt-c-pragma.h\n graph.o: graph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h flags.h output.h \\\n-    $(RTL_H) function.h langhooks.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(TREE_H)\n+    $(RTL_H) function.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h\n sbitmap.o: sbitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n     hard-reg-set.h $(BASIC_BLOCK_H)\n \n@@ -1651,7 +1651,7 @@ web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h $(BASIC_BLOCK_H) function.h output.h toplev.h df.h\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h real.h insn-config.h $(GGC_H) $(RECOG_H) $(EXPR_H) \\\n-   $(BASIC_BLOCK_H) function.h langhooks.h output.h toplev.h $(TM_P_H) $(PARAMS_H) \\\n+   $(BASIC_BLOCK_H) function.h output.h toplev.h $(TM_P_H) $(PARAMS_H) \\\n    except.h gt-gcse.h $(TREE_H)\n sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    function.h hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)"}, {"sha": "30ede39ef0222d1f0273c77e6197298eec9308dc", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -6408,6 +6408,8 @@ allocate_struct_function (tree fndecl)\n   DECL_SAVED_INSNS (fndecl) = cfun;\n   cfun->decl = fndecl;\n \n+  current_function_name = (*lang_hooks.decl_printable_name) (fndecl, 2);\n+\n   result = DECL_RESULT (fndecl);\n   if (aggregate_value_p (result, fndecl))\n     {"}, {"sha": "89a1465ad0a8abaffa374a7d17f7ae55316b67fa", "filename": "gcc/function.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -183,6 +183,9 @@ struct function GTY(())\n \n   /* For function.c.  */\n \n+  /* Name of this function.  */\n+  const char *name;\n+\n   /* Points to the FUNCTION_DECL of this function.  */\n   tree decl;\n \n@@ -531,6 +534,7 @@ extern int virtuals_instantiated;\n extern int trampolines_created;\n \n /* For backward compatibility... eventually these should all go away.  */\n+#define current_function_name (cfun->name)\n #define current_function_pops_args (cfun->pops_args)\n #define current_function_returns_struct (cfun->returns_struct)\n #define current_function_returns_pcc_struct (cfun->returns_pcc_struct)"}, {"sha": "798437649cec3c9c1fbe8b116245371efa9b4f85", "filename": "gcc/gcse.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -161,7 +161,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"function.h\"\n-#include \"langhooks.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"ggc.h\"\n@@ -856,8 +855,7 @@ gcse_main (rtx f, FILE *file)\n   if (file)\n     {\n       fprintf (file, \"GCSE of %s: %d basic blocks, \",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       n_basic_blocks);\n+\t       current_function_name, n_basic_blocks);\n       fprintf (file, \"%d pass%s, %d bytes\\n\\n\",\n \t       pass, pass > 1 ? \"es\" : \"\", max_pass_bytes);\n     }\n@@ -3616,8 +3614,7 @@ one_classic_gcse_pass (int pass)\n     {\n       fprintf (gcse_file, \"\\n\");\n       fprintf (gcse_file, \"GCSE of %s, pass %d: %d bytes needed, %d substs,\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       pass, bytes_used, gcse_subst_count);\n+\t       current_function_name, pass, bytes_used, gcse_subst_count);\n       fprintf (gcse_file, \"%d insns created\\n\", gcse_create_count);\n     }\n \n@@ -4689,8 +4686,7 @@ one_cprop_pass (int pass, int cprop_jumps, int bypass_jumps)\n   if (gcse_file)\n     {\n       fprintf (gcse_file, \"CPROP of %s, pass %d: %d bytes needed, \",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       pass, bytes_used);\n+\t       current_function_name, pass, bytes_used);\n       fprintf (gcse_file, \"%d const props, %d copy props\\n\\n\",\n \t       const_prop_count, copy_prop_count);\n     }\n@@ -5792,8 +5788,7 @@ one_pre_gcse_pass (int pass)\n   if (gcse_file)\n     {\n       fprintf (gcse_file, \"\\nPRE GCSE of %s, pass %d: %d bytes needed, \",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       pass, bytes_used);\n+\t       current_function_name, pass, bytes_used);\n       fprintf (gcse_file, \"%d substs, %d insns created\\n\",\n \t       gcse_subst_count, gcse_create_count);\n     }\n@@ -8022,8 +8017,7 @@ bypass_jumps (FILE *file)\n   if (file)\n     {\n       fprintf (file, \"BYPASS of %s: %d basic blocks, \",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       n_basic_blocks);\n+\t       current_function_name, n_basic_blocks);\n       fprintf (file, \"%d bytes\\n\\n\", bytes_used);\n     }\n "}, {"sha": "d82dd917ce9ee712c0a7a5d1a184333bae3590c5", "filename": "gcc/graph.c", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=ca35b54689a78580ed15f0cd1b9cd9e5a2b787dd", "patch": "@@ -25,11 +25,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm.h\"\n \n #include \"rtl.h\"\n-#include \"tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"function.h\"\n-#include \"langhooks.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"toplev.h\"\n@@ -57,8 +55,7 @@ start_fct (FILE *fp)\n     case vcg:\n       fprintf (fp, \"\\\n graph: { title: \\\"%s\\\"\\nfolding: 1\\nhidden: 2\\nnode: { title: \\\"%s.0\\\" }\\n\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n+\t       current_function_name, current_function_name);\n       break;\n     case no_graph:\n       break;\n@@ -74,8 +71,7 @@ start_bb (FILE *fp, int bb)\n       fprintf (fp, \"\\\n graph: {\\ntitle: \\\"%s.BB%d\\\"\\nfolding: 1\\ncolor: lightblue\\n\\\n label: \\\"basic block %d\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       bb, bb);\n+\t       current_function_name, bb, bb);\n       break;\n     case no_graph:\n       break;\n@@ -117,9 +113,8 @@ node_data (FILE *fp, rtx tmp_rtx)\n \tcase vcg:\n \t  fprintf (fp, \"\\\n edge: { sourcename: \\\"%s.0\\\" targetname: \\\"%s.%d\\\" }\\n\",\n-\t\t   (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t\t   (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t\t   XINT (tmp_rtx, 0));\n+\t\t   current_function_name,\n+\t\t   current_function_name, XINT (tmp_rtx, 0));\n \t  break;\n \tcase no_graph:\n \t  break;\n@@ -131,8 +126,7 @@ edge: { sourcename: \\\"%s.0\\\" targetname: \\\"%s.%d\\\" }\\n\",\n     case vcg:\n       fprintf (fp, \"node: {\\n  title: \\\"%s.%d\\\"\\n  color: %s\\n  \\\n label: \\\"%s %d\\n\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       XINT (tmp_rtx, 0),\n+\t       current_function_name, XINT (tmp_rtx, 0),\n \t       GET_CODE (tmp_rtx) == NOTE ? \"lightgrey\"\n \t       : GET_CODE (tmp_rtx) == INSN ? \"green\"\n \t       : GET_CODE (tmp_rtx) == JUMP_INSN ? \"darkgreen\"\n@@ -184,11 +178,8 @@ draw_edge (FILE *fp, int from, int to, int bb_edge, int class)\n \tcolor = \"color: green \";\n       fprintf (fp,\n \t       \"edge: { sourcename: \\\"%s.%d\\\" targetname: \\\"%s.%d\\\" %s\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       from,\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2),\n-\t       to,\n-\t       color);\n+\t       current_function_name, from,\n+\t       current_function_name, to, color);\n       if (class)\n \tfprintf (fp, \"class: %d \", class);\n       fputs (\"}\\n\", fp);\n@@ -218,7 +209,7 @@ end_fct (FILE *fp)\n     {\n     case vcg:\n       fprintf (fp, \"node: { title: \\\"%s.999999\\\" label: \\\"END\\\" }\\n}\\n\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n+\t       current_function_name);\n       break;\n     case no_graph:\n       break;"}]}