{"sha": "26c5587d43c1379f05908779d9f066cde38579e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjNTU4N2Q0M2MxMzc5ZjA1OTA4Nzc5ZDlmMDY2Y2RlMzg1NzllMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-11T22:26:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-11T22:26:45Z"}, "message": "(TARGET_SWITCHES): Add no-fpu and hard-float.\n\n(CONDITIONAL_REGISTER_USAGE): Define for ! TARGET_FPU.\n(BASE_RETURN_VALUE_REG): Use reg 8 when ! TARGET_FPU.\n(BASE_OUTGOING_VALUE_REG): Use reg 24 when ! TARGET_FPU.\n\nFrom-SVN: r3196", "tree": {"sha": "95df5f53db057410388304940fc11678eb2ada18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95df5f53db057410388304940fc11678eb2ada18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26c5587d43c1379f05908779d9f066cde38579e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c5587d43c1379f05908779d9f066cde38579e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c5587d43c1379f05908779d9f066cde38579e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c5587d43c1379f05908779d9f066cde38579e3/comments", "author": null, "committer": null, "parents": [{"sha": "ab5519b72116dd509ea5cb0d14be6b6341a8a59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5519b72116dd509ea5cb0d14be6b6341a8a59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab5519b72116dd509ea5cb0d14be6b6341a8a59a"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "e6764db4b15c09366efa2c7ebbfc037fb13bf074", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c5587d43c1379f05908779d9f066cde38579e3/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c5587d43c1379f05908779d9f066cde38579e3/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=26c5587d43c1379f05908779d9f066cde38579e3", "patch": "@@ -120,6 +120,8 @@ extern int target_flags;\n \n #define TARGET_SWITCHES  \\\n   { {\"fpu\", 1},\t\t\t\\\n+    {\"no-fpu\", -1},\t\t\\\n+    {\"hard-float\", 1},\t\t\\\n     {\"soft-float\", -1},\t\t\\\n     {\"epilogue\", 2},\t\t\\\n     {\"no-epilogue\", -2},\t\\\n@@ -300,6 +302,21 @@ extern int target_flags;\n   1, 1, 1, 1, 1, 1, 1, 1,\t\\\n   1, 1, 1, 1, 1, 1, 1, 1}\n \n+/* If !TARGET_FPU, then make the fp registers fixed so that they won't\n+   be allocated.  */\n+\n+#define CONDITIONAL_REGISTER_USAGE\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+    if (! TARGET_FPU)\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tint regno;\t\t\t\t\t\t\\\n+\tfor (regno = 32; regno < 64; regno++)\t\t\t\\\n+\t  fixed_regs[regno] = 1;\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n /* Return number of consecutive hard regs needed starting at reg REGNO\n    to hold something of mode MODE.\n    This is ordinarily the length in words of a value of mode MODE\n@@ -654,9 +671,9 @@ extern char leaf_reg_backmap[];\n \n /* Some subroutine macros specific to this machine.  */\n #define BASE_RETURN_VALUE_REG(MODE) \\\n- ((MODE) == SFmode || (MODE) == DFmode ? 32 : 8)\n+ (((MODE) == SFmode || (MODE) == DFmode) && TARGET_FPU ? 32 : 8)\n #define BASE_OUTGOING_VALUE_REG(MODE) \\\n- ((MODE) == SFmode || (MODE) == DFmode ? 32 : 24)\n+ (((MODE) == SFmode || (MODE) == DFmode) && TARGET_FPU ? 32 : 24)\n #define BASE_PASSING_ARG_REG(MODE) (8)\n #define BASE_INCOMING_ARG_REG(MODE) (24)\n "}]}