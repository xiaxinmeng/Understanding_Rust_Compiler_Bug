{"sha": "8592c207050c21252a030f31908ade306507a231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5MmMyMDcwNTBjMjEyNTJhMDMwZjMxOTA4YWRlMzA2NTA3YTIzMQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-11-26T08:42:18Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-11-26T08:42:18Z"}, "message": "20141125-1.c: New testcase.\n\n2014-11-25  Andrew Pinski <apinski@cavium.com>\n\n        * gcc.c-torture/execute/20141125-1.c: New testcase.\n\nFrom-SVN: r218073", "tree": {"sha": "073fd19d7c43515600042510fab5b476c52220cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/073fd19d7c43515600042510fab5b476c52220cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8592c207050c21252a030f31908ade306507a231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8592c207050c21252a030f31908ade306507a231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8592c207050c21252a030f31908ade306507a231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8592c207050c21252a030f31908ade306507a231/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64b4bb607b563c9d19f3ef78238d11aac9278a6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b4bb607b563c9d19f3ef78238d11aac9278a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b4bb607b563c9d19f3ef78238d11aac9278a6d"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "cc579801f342f3124babfdad7d5dbc3ff6a7930d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8592c207050c21252a030f31908ade306507a231/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8592c207050c21252a030f31908ade306507a231/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8592c207050c21252a030f31908ade306507a231", "patch": "@@ -1,3 +1,7 @@\n+2014-11-25  Andrew Pinski <apinski@cavium.com>\n+\n+\t* gcc.c-torture/execute/20141125-1.c: New testcase.\n+\n 2014-11-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/empty_label.f: Change test to continue testing"}, {"sha": "6aa5665fbaf9f7ab93b209509fd0bd4b0195bf32", "filename": "gcc/testsuite/gcc.c-torture/execute/20141125-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8592c207050c21252a030f31908ade306507a231/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20141125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8592c207050c21252a030f31908ade306507a231/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20141125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20141125-1.c?ref=8592c207050c21252a030f31908ade306507a231", "patch": "@@ -0,0 +1,17 @@\n+int f(long long a) __attribute__((noinline,noclone));\n+int f(long long a)\n+{\n+  if (a & 0x3ffffffffffffffull)\n+    return 1;\n+  return 1024;\n+}\n+\n+int main(void)\n+{\n+  if(f(0x48375d8000000000ull) != 1)\n+    __builtin_abort ();\n+  if (f(0xfc00000000000000ull) != 1024)\n+    __builtin_abort ();\n+  return 0;\n+}\n+"}]}