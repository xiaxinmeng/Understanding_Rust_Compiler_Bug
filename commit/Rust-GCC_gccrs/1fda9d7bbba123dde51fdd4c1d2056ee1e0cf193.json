{"sha": "1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkYTlkN2JiYmExMjNkZGU1MWZkZDRjMWQyMDU2ZWUxZTBjZjE5Mw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-11-21T16:25:07Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-11-21T16:25:07Z"}, "message": "inclhack.def (alpha_pthread_init): New fix.\n\n\n\t* inclhack.def (alpha_pthread_init): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/pthread.h: Update for new test.\n\nCo-Authored-By: Bruce Korb <bkorb@gnu.org>\n\nFrom-SVN: r90981", "tree": {"sha": "ce42d87a3f2eded136a49700d47eeba7e3f01591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce42d87a3f2eded136a49700d47eeba7e3f01591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/comments", "author": null, "committer": null, "parents": [{"sha": "db02564e0a85c02865edf7db08d9fc343aa6b375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db02564e0a85c02865edf7db08d9fc343aa6b375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db02564e0a85c02865edf7db08d9fc343aa6b375"}], "stats": {"total": 129, "additions": 124, "deletions": 5}, "files": [{"sha": "ace5d2a75e62c1b8fd7ce43d084325f019381414", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "patch": "@@ -1,3 +1,10 @@\n+2004-11-20  Roger Sayle  <roger@eyesopen.com>\n+\t    Bruce Korb  <bkorb@gnu.org>\n+\n+\t* inclhack.def (alpha_pthread_init): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/pthread.h: Update for new test.\n+\n 2004-11-15  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixincl.c(fix_with_system): correct misuse of variables and"}, {"sha": "ff772117d1e17582590dc6e1ac9f2d9e50249537", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 52, "deletions": 5, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday November 13, 2004 at 08:30:08 PM UTC\n+ * It has been AutoGen-ed  Sunday November 21, 2004 at 09:09:46 AM MST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Nov 13 20:30:09 UTC 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Sun Nov 21 09:09:46 MST 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 176 fixup descriptions.\n+ * This file contains 177 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1083,6 +1083,47 @@ static const char* apzAlpha_Pthread_GccPatch[] = {\n %0\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_Pthread_Init fix\n+ */\n+tSCC zAlpha_Pthread_InitName[] =\n+     \"alpha_pthread_init\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha_Pthread_InitList[] =\n+  \"|pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha_Pthread_InitMachs[] = {\n+        \"alpha*-dec-osf*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_Pthread_InitSelect0[] =\n+       \" \\\\* @\\\\(#\\\\)\\\\$RCSfile: pthread\\\\.h,v \\\\$ \\\\$Revision: 1\\\\.1\\\\.33\\\\.21 \\\\$ \\\\(DEC\\\\) \\\\$Date: 2000/08/15 15:30:13 \\\\$\";\n+\n+#define    ALPHA_PTHREAD_INIT_TEST_CT  1\n+static tTestDesc aAlpha_Pthread_InitTests[] = {\n+  { TT_EGREP,    zAlpha_Pthread_InitSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_Pthread_Init\n+ */\n+static const char* apzAlpha_Pthread_InitPatch[] = { \"sed\",\n+    \"-e\", \"s@MVALID\\\\(.*\\\\)A}@MVALID\\\\1A, 0, 0, 0, 0, 0, 0 }@\\n\\\n+s@MVALID\\\\(.*\\\\)_}@MVALID\\\\1_, 0, 0, 0, 0 }@\\n\\\n+s@CVALID\\\\(.*\\\\)A}@CVALID\\\\1A, 0, 0, 0, 0 }@\\n\\\n+s@CVALID\\\\(.*\\\\)_}@CVALID\\\\1_, 0, 0 }@\\n\\\n+s@WVALID\\\\(.*\\\\)A}@WVALID\\\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\\n\\\n+s@WVALID\\\\(.*\\\\)_}@WVALID\\\\1_, 0, 0, 0, 0, 0, 0, 0 }@\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Sbrk fix\n@@ -7031,9 +7072,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          205\n+#define REGEX_COUNT          206\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            176\n+#define FIX_COUNT            177\n \n /*\n  *  Enumerate the fixes\n@@ -7063,6 +7104,7 @@ typedef enum {\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_PTHREAD_FIXIDX,\n     ALPHA_PTHREAD_GCC_FIXIDX,\n+    ALPHA_PTHREAD_INIT_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n     ALPHA_WCHAR_FIXIDX,\n     AVOID_BOOL_DEFINE_FIXIDX,\n@@ -7338,6 +7380,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_PTHREAD_GCC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_Pthread_GccTests,   apzAlpha_Pthread_GccPatch, 0 },\n \n+  {  zAlpha_Pthread_InitName,    zAlpha_Pthread_InitList,\n+     apzAlpha_Pthread_InitMachs,\n+     ALPHA_PTHREAD_INIT_TEST_CT, FD_MACH_ONLY,\n+     aAlpha_Pthread_InitTests,   apzAlpha_Pthread_InitPatch, 0 },\n+\n   {  zAlpha_SbrkName,    zAlpha_SbrkList,\n      apzAlpha_SbrkMachs,\n      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "37f2311728360552f34e0efad2fcda29fe43ac69", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "patch": "@@ -705,6 +705,50 @@ fix = {\n \t\t\"#endif\";\n };\n \n+/*\n+ * Compaq Tru64 v5.1 defines all of its PTHREAD_*_INITIALIZER macros\n+ * incorrectly, specifying less fields in the initializers than are\n+ * defined in the corresponding structure types.  Use of these macros\n+ * in user code results in spurious warnings.\n+ */\n+fix = {\n+    hackname  = alpha_pthread_init;\n+    files     = pthread.h;\n+    select    = ' \\* @\\(#\\)\\$' 'RCSfile: pthread\\.h,v \\$'\n+                ' \\$'  'Revision: 1\\.1\\.33\\.21 \\$ \\(DEC\\)'\n+                ' \\$'  'Date: 2000/08/15 15:30:13 \\$';\n+    mach      = \"alpha*-dec-osf*\";\n+    sed       = \"s@MVALID\\\\(.*\\\\)A}@MVALID\\\\1A, 0, 0, 0, 0, 0, 0 }@\\n\"\n+                \"s@MVALID\\\\(.*\\\\)_}@MVALID\\\\1_, 0, 0, 0, 0 }@\\n\"\n+                \"s@CVALID\\\\(.*\\\\)A}@CVALID\\\\1A, 0, 0, 0, 0 }@\\n\"\n+                \"s@CVALID\\\\(.*\\\\)_}@CVALID\\\\1_, 0, 0 }@\\n\"\n+                \"s@WVALID\\\\(.*\\\\)A}@WVALID\\\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\\n\"\n+                \"s@WVALID\\\\(.*\\\\)_}@WVALID\\\\1_, 0, 0, 0, 0, 0, 0, 0 }@\\n\";\n+    test_text = \"/*\\n\"\n+                \" * @(#)\\\\$\"  \"RCSfile: pthread.h,v \\\\$ \\\\$\"\n+                \"Revision: 1.1.33.21 \\\\$ (DEC) \\\\$\"\n+                \"Date: 2000/08/15 15:30:13 \\\\$\\n\"\n+                \" */\\n\"\n+\"#ifndef _PTHREAD_NOMETER_STATIC\\n\"\n+\"# define PTHREAD_MUTEX_INITIALIZER \\\\\\n\"\n+\"    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA}\\n\"\n+\"# define PTHREAD_COND_INITIALIZER \\\\\\n\"\n+\"    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA}\\n\"\n+\"# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \\\\\\n\"\n+\"    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}\\n\"\n+\"# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \\\\\\n\"\n+\"    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}\\n\"\n+\"#else\\n\"\n+\"# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA}\\n\"\n+\"# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \\\\\\n\"\n+\"    {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}\\n\"\n+\"# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \\\\\\n\"\n+\"    {0, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}\\n\"\n+\"#endif\\n\\n\"\n+\"#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA}\\n\"\n+\"#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_) \\\\\\n\"\n+\"        {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_}\\n\";\n+};\n \n /*\n  *  Fix return value of sbrk in unistd.h on Alpha OSF/1 V2.0"}, {"sha": "735c0ef7ffd62effd2dbb279075e719d14e19765", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=1fda9d7bbba123dde51fdd4c1d2056ee1e0cf193", "patch": "@@ -35,6 +35,27 @@\n #endif  /* ALPHA_PTHREAD_GCC_CHECK */\n \n \n+#if defined( ALPHA_PTHREAD_INIT_CHECK )\n+/*\n+ * @(#)$RCSfile: pthread.h,v $ $Revision: 1.1.33.21 $ (DEC) $Date: 2000/08/15 15:30:13 $\n+ */\n+#ifndef _PTHREAD_NOMETER_STATIC\n+# define PTHREAD_MUTEX_INITIALIZER     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }\n+# define PTHREAD_COND_INITIALIZER     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, 0, 0, 0, 0 }\n+# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }\n+# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }\n+#else\n+# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }\n+# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }\n+# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {{{0},0}, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }\n+#endif\n+\n+#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, 0, 0, 0, 0, 0, 0, 0, 0, 0 }\n+#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_)         {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_, 0, 0, 0, 0, 0, 0, 0 }\n+\n+#endif  /* ALPHA_PTHREAD_INIT_CHECK */\n+\n+\n #if defined( PTHREAD_PAGE_SIZE_CHECK )\n extern int __page_size;\n #endif  /* PTHREAD_PAGE_SIZE_CHECK */"}]}