{"sha": "c4d15dddf6b9eacb36f535807ad2ee364af46e04", "node_id": "C_kwDOANBUbNoAKGM0ZDE1ZGRkZjZiOWVhY2IzNmY1MzU4MDdhZDJlZTM2NGFmNDZlMDQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T18:42:10Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-11T08:30:44Z"}, "message": "[PR107195] Set range to zero when nonzero mask is 0.\n\nWhen solving 0 = _15 & 1, we calculate _15 as:\n\n\t[irange] int [-INF, -2][0, +INF] NONZERO 0xfffffffe\n\nThe known value of _15 is [0, 1] NONZERO 0x1 which is intersected with\nthe above, yielding:\n\n\t[0, 1] NONZERO 0x0\n\nThis eventually gets copied to a _Bool [0, 1] NONZERO 0x0.\n\nThis is problematic because here we have a bool which is zero, but\nreturns false for irange::zero_p, since the latter does not look at\nnonzero bits.  This causes logical_combine to assume the range is\nnot-zero, and all hell breaks loose.\n\nI think we should just normalize a nonzero mask of 0 to [0, 0] at\ncreation, thus avoiding all this.\n\n\tPR tree-optimization/107195\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::set_range_from_nonzero_bits): Set range\n\tto [0,0] when nonzero mask is 0.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107195-1.c: New test.\n\t* gcc.dg/tree-ssa/pr107195-2.c: New test.", "tree": {"sha": "c8471cd057a40f070c65d04241e71ce73510d69e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8471cd057a40f070c65d04241e71ce73510d69e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4d15dddf6b9eacb36f535807ad2ee364af46e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d15dddf6b9eacb36f535807ad2ee364af46e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d15dddf6b9eacb36f535807ad2ee364af46e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d15dddf6b9eacb36f535807ad2ee364af46e04/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ecd0f1cc6f8f3ba818946a42b22c2ab61f46825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ecd0f1cc6f8f3ba818946a42b22c2ab61f46825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ecd0f1cc6f8f3ba818946a42b22c2ab61f46825"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "a0c20dbd4b1e57bfd49e55fef9e0a73c4532f7a1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107195-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-1.c?ref=c4d15dddf6b9eacb36f535807ad2ee364af46e04", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do run }\n+// { dg-options \"-O1 -fno-tree-ccp\" }\n+\n+int a, b;\n+int main() {\n+  int c = 0;\n+  if (a)\n+    c = 1;\n+  c = 1 & (a && c) && b;\n+  if (a) {\n+    b = c;\n+    __builtin_abort ();\n+  }\n+  return 0;\n+}"}, {"sha": "d447c78bdd300c97018ffb6b2adda5df39390743", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107195-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107195-2.c?ref=c4d15dddf6b9eacb36f535807ad2ee364af46e04", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do run }\n+// { dg-options \"-O1\" }\n+\n+int a, b;\n+int main() {\n+  int c = 0;\n+  long d;\n+  for (; b < 1; b++) {\n+    (c && d) & 3 || a;\n+    d = c;\n+    c = -1;\n+    if (d)\n+      __builtin_abort();\n+  }\n+  return 0;\n+}"}, {"sha": "e07d2aa9a5bd5bf1dec6043d08ea75143cd46835", "filename": "gcc/value-range.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d15dddf6b9eacb36f535807ad2ee364af46e04/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=c4d15dddf6b9eacb36f535807ad2ee364af46e04", "patch": "@@ -2903,6 +2903,11 @@ irange::set_range_from_nonzero_bits ()\n \t}\n       return true;\n     }\n+  else if (popcount == 0)\n+    {\n+      set_zero (type ());\n+      return true;\n+    }\n   return false;\n }\n "}]}