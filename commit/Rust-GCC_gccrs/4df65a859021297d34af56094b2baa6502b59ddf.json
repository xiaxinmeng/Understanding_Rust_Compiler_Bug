{"sha": "4df65a859021297d34af56094b2baa6502b59ddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmNjVhODU5MDIxMjk3ZDM0YWY1NjA5NGIyYmFhNjUwMmI1OWRkZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-02-19T09:29:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-02-19T09:29:34Z"}, "message": "re PR ipa/60243 (IPA is slow on large cgraph tree)\n\n2014-02-19  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/60243\n\t* ipa-prop.c: Include stringpool.h and tree-ssanames.h.\n\t(ipa_modify_call_arguments): Emit an argument load explicitely and\n\tpreserve virtual SSA form there and for the replacement call.\n\tDo not update SSA form nor free dominance info.\n\nFrom-SVN: r207879", "tree": {"sha": "0bcc11c5c531426ed377a4a3d36656b54bec203e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bcc11c5c531426ed377a4a3d36656b54bec203e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4df65a859021297d34af56094b2baa6502b59ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df65a859021297d34af56094b2baa6502b59ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df65a859021297d34af56094b2baa6502b59ddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df65a859021297d34af56094b2baa6502b59ddf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fea98d8cf1513e1ea54a6de9a32ef42f6448345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fea98d8cf1513e1ea54a6de9a32ef42f6448345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fea98d8cf1513e1ea54a6de9a32ef42f6448345"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "fa67c9e17ff8d33f21e6b0d5cd58b870b37896e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4df65a859021297d34af56094b2baa6502b59ddf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4df65a859021297d34af56094b2baa6502b59ddf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4df65a859021297d34af56094b2baa6502b59ddf", "patch": "@@ -1,3 +1,11 @@\n+2014-02-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/60243\n+\t* ipa-prop.c: Include stringpool.h and tree-ssanames.h.\n+\t(ipa_modify_call_arguments): Emit an argument load explicitely and\n+\tpreserve virtual SSA form there and for the replacement call.\n+\tDo not update SSA form nor free dominance info.\n+\n 2014-02-18  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa.c (function_and_variable_visibility): Also clear WEAK"}, {"sha": "368b93b7d4ac9161893fa1a8ba14511b6a471746", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4df65a859021297d34af56094b2baa6502b59ddf/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4df65a859021297d34af56094b2baa6502b59ddf/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=4df65a859021297d34af56094b2baa6502b59ddf", "patch": "@@ -57,6 +57,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-streamer.h\"\n #include \"params.h\"\n #include \"ipa-utils.h\"\n+#include \"stringpool.h\"\n+#include \"tree-ssanames.h\"\n \n /* Intermediate information about a parameter that is only useful during the\n    run of ipa_analyze_node and is not kept afterwards.  */\n@@ -3794,18 +3796,32 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n \t\talign = (misalign & -misalign);\n \t      if (align < TYPE_ALIGN (type))\n \t\ttype = build_aligned_type (type, align);\n+\t      base = force_gimple_operand_gsi (&gsi, base,\n+\t\t\t\t\t       true, NULL, true, GSI_SAME_STMT);\n \t      expr = fold_build2_loc (loc, MEM_REF, type, base, off);\n+\t      /* If expr is not a valid gimple call argument emit\n+\t         a load into a temporary.  */\n+\t      if (is_gimple_reg_type (TREE_TYPE (expr)))\n+\t\t{\n+\t\t  gimple tem = gimple_build_assign (NULL_TREE, expr);\n+\t\t  if (gimple_in_ssa_p (cfun))\n+\t\t    {\n+\t\t      gimple_set_vuse (tem, gimple_vuse (stmt));\n+\t\t      expr = make_ssa_name (TREE_TYPE (expr), tem);\n+\t\t    }\n+\t\t  else\n+\t\t    expr = create_tmp_reg (TREE_TYPE (expr), NULL);\n+\t\t  gimple_assign_set_lhs (tem, expr);\n+\t\t  gsi_insert_before (&gsi, tem, GSI_SAME_STMT);\n+\t\t}\n \t    }\n \t  else\n \t    {\n \t      expr = fold_build2_loc (loc, MEM_REF, adj->type, base, off);\n \t      expr = build_fold_addr_expr (expr);\n+\t      expr = force_gimple_operand_gsi (&gsi, expr,\n+\t\t\t\t\t       true, NULL, true, GSI_SAME_STMT);\n \t    }\n-\n-\t  expr = force_gimple_operand_gsi (&gsi, expr,\n-\t\t\t\t\t   adj->by_ref\n-\t\t\t\t\t   || is_gimple_reg_type (adj->type),\n-\t\t\t\t\t   NULL, true, GSI_SAME_STMT);\n \t  vargs.quick_push (expr);\n \t}\n       if (adj->op != IPA_PARM_OP_COPY && MAY_HAVE_DEBUG_STMTS)\n@@ -3861,6 +3877,15 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n     gimple_set_location (new_stmt, gimple_location (stmt));\n   gimple_call_set_chain (new_stmt, gimple_call_chain (stmt));\n   gimple_call_copy_flags (new_stmt, stmt);\n+  if (gimple_in_ssa_p (cfun))\n+    {\n+      gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+      if (gimple_vdef (stmt))\n+\t{\n+\t  gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n+\t  SSA_NAME_DEF_STMT (gimple_vdef (new_stmt)) = new_stmt;\n+\t}\n+    }\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -3878,9 +3903,6 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n     }\n   while ((gsi_end_p (prev_gsi) && !gsi_end_p (gsi))\n \t || (!gsi_end_p (prev_gsi) && gsi_stmt (gsi) == gsi_stmt (prev_gsi)));\n-\n-  update_ssa (TODO_update_ssa);\n-  free_dominance_info (CDI_DOMINATORS);\n }\n \n /* If the expression *EXPR should be replaced by a reduction of a parameter, do"}]}