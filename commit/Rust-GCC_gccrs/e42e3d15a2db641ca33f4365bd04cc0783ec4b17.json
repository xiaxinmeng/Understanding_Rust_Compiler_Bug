{"sha": "e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyZTNkMTVhMmRiNjQxY2EzM2Y0MzY1YmQwNGNjMDc4M2VjNGIxNw==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@linaro.org", "date": "2014-07-03T05:24:12Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-07-03T05:24:12Z"}, "message": "loop-invariant.c (struct invariant): Add a new member: eqno;\n\nChangeLog:\n2014-07-03  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\t* loop-invariant.c (struct invariant): Add a new member: eqno;\n\t(find_identical_invariants): Update eqno;\n\t(create_new_invariant): Init eqno;\n\t(get_inv_cost): Compute comp_cost with eqno;\n\n\ntestsuite/ChangeLog:\n2014-07-03  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\t* gcc.target/arm/identical-invariants.c: New test.\n\nFrom-SVN: r212256", "tree": {"sha": "965441201e93a2ae9d149b7f26ec0a99c9dbe3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/965441201e93a2ae9d149b7f26ec0a99c9dbe3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/comments", "author": null, "committer": null, "parents": [{"sha": "44a638118f1cd38a8d70f69e6ae74052223ea10a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a638118f1cd38a8d70f69e6ae74052223ea10a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a638118f1cd38a8d70f69e6ae74052223ea10a"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "b8511a1adc6906546b1480403205a212367bd7ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "patch": "@@ -1,3 +1,10 @@\n+2014-07-03  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\t* loop-invariant.c (struct invariant): Add a new member: eqno;\n+\t(find_identical_invariants): Update eqno;\n+\t(create_new_invariant): Init eqno;\n+\t(get_inv_cost): Compute comp_cost with eqno;\n+\n 2014-07-02  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* genconfig.c (have_rotate_flag, have_rotatert_flag): New variables."}, {"sha": "bd67eb9b4cdd0da3e41053871adcb9755368172a", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "patch": "@@ -104,6 +104,9 @@ struct invariant\n   /* The number of the invariant with the same value.  */\n   unsigned eqto;\n \n+  /* The number of invariants which eqto this.  */\n+  unsigned eqno;\n+\n   /* If we moved the invariant out of the loop, the register that contains its\n      value.  */\n   rtx reg;\n@@ -498,6 +501,7 @@ find_identical_invariants (invariant_htab_type *eq, struct invariant *inv)\n   struct invariant *dep;\n   rtx expr, set;\n   enum machine_mode mode;\n+  struct invariant *tmp;\n \n   if (inv->eqto != ~0u)\n     return;\n@@ -513,7 +517,12 @@ find_identical_invariants (invariant_htab_type *eq, struct invariant *inv)\n   mode = GET_MODE (expr);\n   if (mode == VOIDmode)\n     mode = GET_MODE (SET_DEST (set));\n-  inv->eqto = find_or_insert_inv (eq, expr, mode, inv)->invno;\n+\n+  tmp = find_or_insert_inv (eq, expr, mode, inv);\n+  inv->eqto = tmp->invno;\n+\n+  if (tmp->invno != inv->invno && inv->always_executed)\n+    tmp->eqno++;\n \n   if (dump_file && inv->eqto != inv->invno)\n     fprintf (dump_file,\n@@ -722,6 +731,10 @@ create_new_invariant (struct def *def, rtx insn, bitmap depends_on,\n \n   inv->invno = invariants.length ();\n   inv->eqto = ~0u;\n+\n+  /* Itself.  */\n+  inv->eqno = 1;\n+\n   if (def)\n     def->invno = inv->invno;\n   invariants.safe_push (inv);\n@@ -1136,7 +1149,7 @@ get_inv_cost (struct invariant *inv, int *comp_cost, unsigned *regs_needed,\n \n   if (!inv->cheap_address\n       || inv->def->n_addr_uses < inv->def->n_uses)\n-    (*comp_cost) += inv->cost;\n+    (*comp_cost) += inv->cost * inv->eqno;\n \n #ifdef STACK_REGS\n   {"}, {"sha": "58dd47b29ca53fc750eea707d81b426d5f2f8019", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "patch": "@@ -1,3 +1,7 @@\n+2014-07-03  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\t* gcc.target/arm/identical-invariants.c: New test.\n+\n 2014-07-02  Jan Hubicka  <hubicka@ucw.cz>\n \t    Chen Gang <gang.chen.5i5j@gmail.com>\n "}, {"sha": "f3c7f8639471dda8c0a5e157cec4f44b42278c59", "filename": "gcc/testsuite/gcc.target/arm/identical-invariants.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fidentical-invariants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42e3d15a2db641ca33f4365bd04cc0783ec4b17/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fidentical-invariants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fidentical-invariants.c?ref=e42e3d15a2db641ca33f4365bd04cc0783ec4b17", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile { target { arm_thumb2_ok } } } */\n+/* { dg-options \"-O2 -fdump-rtl-loop2_invariant \" } */\n+\n+int t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;\n+extern void foo2 (int *, int *, int *, int *, int *, int *);\n+extern int foo3 (int, int, int, int, int, int);\n+int foo (int a, int b, int c, int d)\n+{\n+   int i = a;\n+\n+   for (; i > 0; i += b)\n+    {\n+      if (a > 0x1234567)\n+\tfoo2 (&t1, &t2, &t3, &t4, &t5, &t6);\n+      foo2 (&t1, &t2, &t3, &t4, &t5, &t6);\n+      if (b > 0x1234567)\n+\tfoo2 (&t7, &t2, &t8, &t4, &t5, &t6);\n+      foo2 (&t1, &t2, &t3, &t4, &t5, &t6);\n+      if (c > 0x1234567)\n+\tfoo2 (&t1, &t9, &t10, &t4, &t5, &t6);\n+      t2 = t5 - d;\n+    }\n+\n+ return foo3 (t1, t2, t3, t4, t5, t6);\n+}\n+\n+/* { dg-final { scan-rtl-dump \"Decided to move invariant 0\" \"loop2_invariant\" } } */\n+/* { dg-final { cleanup-rtl-dump \"loop2_invariant\" } } */\n+"}]}