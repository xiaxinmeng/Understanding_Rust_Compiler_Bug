{"sha": "cc6ac522f94f5a49471249da9b55aee778272cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2YWM1MjJmOTRmNWE0OTQ3MTI0OWRhOWI1NWFlZTc3ODI3MmNkMg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-09-30T23:13:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-09-30T23:13:06Z"}, "message": "Don't build thread library for targets that don't support threads.\n\n* configure.ac (pthread.h): Use AC_CHECK_HEADERS instead of\nAC_CHECK_HEADER.\n(target_thread_file): New.  Set from sed'ed gcc output.\n(posix_threads): New.  Set from target_thread_file.  Use instead of\nac_have_pthread_h.\n(pthread_create_version): Move initialization before code using it.\n* configure: Regenerate.\n\nFrom-SVN: r104838", "tree": {"sha": "5640ad73ab8b36db0e64e26d539b9e1a1d19f603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5640ad73ab8b36db0e64e26d539b9e1a1d19f603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6ac522f94f5a49471249da9b55aee778272cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6ac522f94f5a49471249da9b55aee778272cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6ac522f94f5a49471249da9b55aee778272cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6ac522f94f5a49471249da9b55aee778272cd2/comments", "author": null, "committer": null, "parents": [{"sha": "6a82a28a50a576a95355cb0917a02b501646f652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a82a28a50a576a95355cb0917a02b501646f652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a82a28a50a576a95355cb0917a02b501646f652"}], "stats": {"total": 154, "additions": 97, "deletions": 57}, "files": [{"sha": "e125f01b159a3f8ce14984ecd8001b499d3cc929", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=cc6ac522f94f5a49471249da9b55aee778272cd2", "patch": "@@ -1,5 +1,13 @@\n 2005-09-30  James E. Wilson  <wilson@specifix.com>\n \n+\t* configure.ac (pthread.h): Use AC_CHECK_HEADERS instead of\n+\tAC_CHECK_HEADER.\n+\t(target_thread_file): New.  Set from sed'ed gcc output.\n+\t(posix_threads): New.  Set from target_thread_file.  Use instead of\n+\tac_have_pthread_h.\n+\t(pthread_create_version): Move initialization before code using it.\n+\t* configure: Regenerate.\n+\n \t* mf-heuristics.c (_end, ENTRY_POINT): Make them arrays with unknown\n \tbounds.\n "}, {"sha": "b1f7c72e4017a63714a3ffe90e3b016ade84c3b7", "filename": "libmudflap/configure", "status": "modified", "additions": 65, "deletions": 47, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=cc6ac522f94f5a49471249da9b55aee778272cd2", "patch": "@@ -6325,27 +6325,30 @@ then\n   mkdir pth\n fi\n \n-pthread_create_version='\"\"'\n-if test \"${ac_cv_header_pthread_h+set}\" = set; then\n-  echo \"$as_me:$LINENO: checking for pthread.h\" >&5\n-echo $ECHO_N \"checking for pthread.h... $ECHO_C\" >&6\n-if test \"${ac_cv_header_pthread_h+set}\" = set; then\n+\n+for ac_header in pthread.h\n+do\n+as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n fi\n-echo \"$as_me:$LINENO: result: $ac_cv_header_pthread_h\" >&5\n-echo \"${ECHO_T}$ac_cv_header_pthread_h\" >&6\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n else\n   # Is the header compilable?\n-echo \"$as_me:$LINENO: checking pthread.h usability\" >&5\n-echo $ECHO_N \"checking pthread.h usability... $ECHO_C\" >&6\n+echo \"$as_me:$LINENO: checking $ac_header usability\" >&5\n+echo $ECHO_N \"checking $ac_header usability... $ECHO_C\" >&6\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n $ac_includes_default\n-#include <pthread.h>\n+#include <$ac_header>\n _ACEOF\n rm -f conftest.$ac_objext\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n@@ -6381,15 +6384,15 @@ echo \"$as_me:$LINENO: result: $ac_header_compiler\" >&5\n echo \"${ECHO_T}$ac_header_compiler\" >&6\n \n # Is the header present?\n-echo \"$as_me:$LINENO: checking pthread.h presence\" >&5\n-echo $ECHO_N \"checking pthread.h presence... $ECHO_C\" >&6\n+echo \"$as_me:$LINENO: checking $ac_header presence\" >&5\n+echo $ECHO_N \"checking $ac_header presence... $ECHO_C\" >&6\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <pthread.h>\n+#include <$ac_header>\n _ACEOF\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n@@ -6423,25 +6426,25 @@ echo \"${ECHO_T}$ac_header_preproc\" >&6\n # So?  What about this header?\n case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in\n   yes:no: )\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: accepted by the compiler, rejected by the preprocessor!\" >&5\n-echo \"$as_me: WARNING: pthread.h: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: proceeding with the compiler's result\" >&5\n-echo \"$as_me: WARNING: pthread.h: proceeding with the compiler's result\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&5\n+echo \"$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the compiler's result\" >&2;}\n     ac_header_preproc=yes\n     ;;\n   no:yes:* )\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: present but cannot be compiled\" >&5\n-echo \"$as_me: WARNING: pthread.h: present but cannot be compiled\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h:     check for missing prerequisite headers?\" >&5\n-echo \"$as_me: WARNING: pthread.h:     check for missing prerequisite headers?\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: see the Autoconf documentation\" >&5\n-echo \"$as_me: WARNING: pthread.h: see the Autoconf documentation\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n-echo \"$as_me: WARNING: pthread.h:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: proceeding with the preprocessor's result\" >&5\n-echo \"$as_me: WARNING: pthread.h: proceeding with the preprocessor's result\" >&2;}\n-    { echo \"$as_me:$LINENO: WARNING: pthread.h: in the future, the compiler will take precedence\" >&5\n-echo \"$as_me: WARNING: pthread.h: in the future, the compiler will take precedence\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled\" >&5\n+echo \"$as_me: WARNING: $ac_header: present but cannot be compiled\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?\" >&5\n+echo \"$as_me: WARNING: $ac_header:     check for missing prerequisite headers?\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation\" >&5\n+echo \"$as_me: WARNING: $ac_header: see the Autoconf documentation\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n+echo \"$as_me: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the preprocessor's result\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence\" >&5\n+echo \"$as_me: WARNING: $ac_header: in the future, the compiler will take precedence\" >&2;}\n     (\n       cat <<\\_ASBOX\n ## ------------------------------------- ##\n@@ -6452,44 +6455,58 @@ _ASBOX\n       sed \"s/^/$as_me: WARNING:     /\" >&2\n     ;;\n esac\n-echo \"$as_me:$LINENO: checking for pthread.h\" >&5\n-echo $ECHO_N \"checking for pthread.h... $ECHO_C\" >&6\n-if test \"${ac_cv_header_pthread_h+set}\" = set; then\n+echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  ac_cv_header_pthread_h=$ac_header_preproc\n+  eval \"$as_ac_Header=\\$ac_header_preproc\"\n fi\n-echo \"$as_me:$LINENO: result: $ac_cv_header_pthread_h\" >&5\n-echo \"${ECHO_T}$ac_cv_header_pthread_h\" >&6\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n \n fi\n-if test $ac_cv_header_pthread_h = yes; then\n-\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_PTHREAD_H 1\n+if test `eval echo '${'$as_ac_Header'}'` = yes; then\n+  cat >>confdefs.h <<_ACEOF\n+#define `echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n _ACEOF\n \n-ac_have_pthread_h=yes\n+fi\n \n-else\n+done\n \n-ac_have_pthread_h=\n \n-fi\n+echo \"$as_me:$LINENO: checking for thread model used by GCC\" >&5\n+echo $ECHO_N \"checking for thread model used by GCC... $ECHO_C\" >&6\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+echo \"$as_me:$LINENO: result: $target_thread_file\" >&5\n+echo \"${ECHO_T}$target_thread_file\" >&6\n \n+# We only support posix threads, or no threads at all.\n+posix_threads=\n+case ${target_thread_file} in\n+  posix)\n+    posix_threads=yes\n+    ;;\n+  single)\n+    ;;\n+  *)\n+    echo \"${target_thread_file} is an unsupported thread package\" 1>&2\n+    exit 1\n+    ;;\n+esac\n \n \n \n-if test \"x$ac_have_pthread_h\" != \"x\"; then\n+if test \"x$posix_threads\" != \"x\"; then\n   LIBMUDFLAPTH_TRUE=\n   LIBMUDFLAPTH_FALSE='#'\n else\n   LIBMUDFLAPTH_TRUE='#'\n   LIBMUDFLAPTH_FALSE=\n fi\n \n-if test \"x$ac_have_pthread_h\" != \"x\"\n+if test \"x$posix_threads\" != \"x\"\n then\n         build_libmudflapth=1\n else\n@@ -6602,7 +6619,8 @@ esac\n \n \n \n-if test \"x$enable_shared\" = \"xyes\" && test \"x$ac_have_pthread_h\" != \"x\"; then\n+pthread_create_version='\"\"'\n+if test \"x$enable_shared\" = \"xyes\" && test \"x$posix_threads\" != \"x\"; then\n   # NB: don't check for -lpthread here, because then it would be\n   # added to LIBS.  For the thread-unaware libmudflap.la, we don't\n   # want it there."}, {"sha": "039ff4e5f5c44774fa5c6331bd08bc4ff877408d", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6ac522f94f5a49471249da9b55aee778272cd2/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=cc6ac522f94f5a49471249da9b55aee778272cd2", "patch": "@@ -114,15 +114,28 @@ then\n   mkdir pth\n fi\n \n-pthread_create_version='\"\"'\n-AC_CHECK_HEADER(pthread.h,[\n-AC_DEFINE_UNQUOTED(HAVE_PTHREAD_H, 1, [define if you have <pthread.h>])\n-ac_have_pthread_h=yes\n-],[\n-ac_have_pthread_h=\n-])\n-AM_CONDITIONAL(LIBMUDFLAPTH, [test \"x$ac_have_pthread_h\" != \"x\"])\n-if test \"x$ac_have_pthread_h\" != \"x\"\n+AC_CHECK_HEADERS(pthread.h)\n+\n+AC_MSG_CHECKING([for thread model used by GCC])\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+AC_MSG_RESULT([$target_thread_file])\n+\n+# We only support posix threads, or no threads at all.\n+posix_threads=\n+case ${target_thread_file} in\n+  posix)\n+    posix_threads=yes\n+    ;;\n+  single)\n+    ;;\n+  *)\n+    echo \"${target_thread_file} is an unsupported thread package\" 1>&2\n+    exit 1\n+    ;;\n+esac\n+\n+AM_CONDITIONAL(LIBMUDFLAPTH, [test \"x$posix_threads\" != \"x\"])\n+if test \"x$posix_threads\" != \"x\"\n then\n         build_libmudflapth=1\n else\n@@ -162,7 +175,8 @@ esac\n AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n \n-if test \"x$enable_shared\" = \"xyes\" && test \"x$ac_have_pthread_h\" != \"x\"; then\n+pthread_create_version='\"\"'\n+if test \"x$enable_shared\" = \"xyes\" && test \"x$posix_threads\" != \"x\"; then\n   # NB: don't check for -lpthread here, because then it would be\n   # added to LIBS.  For the thread-unaware libmudflap.la, we don't\n   # want it there."}]}