{"sha": "788d9012add31d55efb347132525f5889aeebc86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg4ZDkwMTJhZGQzMWQ1NWVmYjM0NzEzMjUyNWY1ODg5YWVlYmM4Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-09T19:42:41Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-09T19:42:41Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r9599", "tree": {"sha": "c4b0a3d5d970a0daea24f203e24cbe3615a3ce7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4b0a3d5d970a0daea24f203e24cbe3615a3ce7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/788d9012add31d55efb347132525f5889aeebc86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788d9012add31d55efb347132525f5889aeebc86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/788d9012add31d55efb347132525f5889aeebc86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788d9012add31d55efb347132525f5889aeebc86/comments", "author": null, "committer": null, "parents": [{"sha": "25f5b13e9d042a68515d9052f0ee59796ff9b8e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f5b13e9d042a68515d9052f0ee59796ff9b8e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f5b13e9d042a68515d9052f0ee59796ff9b8e7"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "02f8196725be8f3c7766250b90ad97d436bd7a70", "filename": "gcc/config/rs6000/powerpc.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d9012add31d55efb347132525f5889aeebc86/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d9012add31d55efb347132525f5889aeebc86/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpowerpc.h?ref=788d9012add31d55efb347132525f5889aeebc86", "patch": "@@ -64,3 +64,22 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_PPC601\n+\n+/* These are not necessary when we pass -u to the assembler, and undefining\n+   them saves a great deal of space in object files.  */\n+\n+#undef ASM_OUTPUT_EXTERNAL\n+#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n+{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\\\n+  if ((TREE_CODE (DECL) == VAR_DECL\t\t\\\n+       || TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n+      && (NAME)[0] != '*'\t\t\t\\\n+      && (NAME)[strlen (NAME) - 1] != ']')\t\\\n+    {\t\t\t\t\t\t\\\n+      char *_name = (char *) permalloc (strlen (XSTR (_symref, 0)) + 5); \\\n+      strcpy (_name, XSTR (_symref, 0));\t\\\n+      strcat (_name, TREE_CODE (DECL) == FUNCTION_DECL ? \"[DS]\" : \"[RW]\"); \\\n+      XSTR (_symref, 0) = _name;\t\t\\\n+    }\t\t\t\t\t\t\\\n+}"}, {"sha": "449bf53a69b508203565a7c2b425c549ce284459", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d9012add31d55efb347132525f5889aeebc86/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d9012add31d55efb347132525f5889aeebc86/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=788d9012add31d55efb347132525f5889aeebc86", "patch": "@@ -88,12 +88,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    export list with the -Wl,-bE option.  */\n \n #define LINK_SPEC \"-T512 -H512 %{!r:-btextro} -bhalt:4 -bnodelcsect\\\n-   %{static:-bnso -bI:/lib/syscalls.exp} %{g*:-bexport:/usr/lib/libg.exp}\\\n-   %{shared:-bM:SRE}\"\n+   %{static:-bnso -bI:/lib/syscalls.exp} \\\n+   %{!shared:%{g*:-bexport:/usr/lib/libg.exp}} %{shared:-bM:SRE}\"\n \n /* Profiled library versions are used by linking with special directories.  */\n #define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n-   %{p:-L/lib/profiled -L/usr/lib/profiled} %{g*:-lg} -lc\"\n+   %{p:-L/lib/profiled -L/usr/lib/profiled} %{!shared:%{g*:-lg}} -lc\"\n \n /* gcc must do the search itself to find libgcc.a, not use -l.  */\n #define LIBGCC_SPEC \"%{!shared:libgcc.a%s}\""}]}