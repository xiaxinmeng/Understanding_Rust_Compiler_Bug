{"sha": "c064fde513a56f84a742e38b30c87871d9df3718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA2NGZkZTUxM2E1NmY4NGE3NDJlMzhiMzBjODc4NzFkOWRmMzcxOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-03-15T20:43:12Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-03-15T20:43:12Z"}, "message": "real.c (c4x_single_format, [...]): Provide values for signbit_ro for c4x's single and extended floating point formats.\n\n\n\t* real.c (c4x_single_format, c4x_extended_format): Provide values\n\tfor signbit_ro for c4x's single and extended floating point formats.\n\t* optabs.c (expand_copysign): Use the floating point format's\n\tsignbit_ro for expanding via expand_copysign_absneg, and it's\n\tsignbit_rw field for expanding via expand_copysign_bit.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r96530", "tree": {"sha": "50db29a106e66fe59df101fa54e16ae8c18b2d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50db29a106e66fe59df101fa54e16ae8c18b2d72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c064fde513a56f84a742e38b30c87871d9df3718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c064fde513a56f84a742e38b30c87871d9df3718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c064fde513a56f84a742e38b30c87871d9df3718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c064fde513a56f84a742e38b30c87871d9df3718/comments", "author": null, "committer": null, "parents": [{"sha": "813edff1aa8406f9a37c0ef16a70d9533fd3de62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813edff1aa8406f9a37c0ef16a70d9533fd3de62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813edff1aa8406f9a37c0ef16a70d9533fd3de62"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "67cce72f5e721708da471e4d530c8ef90ec9cb9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c064fde513a56f84a742e38b30c87871d9df3718", "patch": "@@ -1,3 +1,12 @@\n+2005-03-15  Roger Sayle  <roger@eyesopen.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (c4x_single_format, c4x_extended_format): Provide values\n+\tfor signbit_ro for c4x's single and extended floating point formats.\n+\t* optabs.c (expand_copysign): Use the floating point format's\n+\tsignbit_ro for expanding via expand_copysign_absneg, and it's\n+\tsignbit_rw field for expanding via expand_copysign_bit.\n+\n 2005-03-15  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.h (unknown_alignment_for_access_p): Replaced by"}, {"sha": "a28042a80aaf3cb21d557cfb5ff67a46104f014d", "filename": "gcc/optabs.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c064fde513a56f84a742e38b30c87871d9df3718", "patch": "@@ -2865,7 +2865,6 @@ expand_copysign (rtx op0, rtx op1, rtx target)\n {\n   enum machine_mode mode = GET_MODE (op0);\n   const struct real_format *fmt;\n-  int bitpos;\n   bool op0_is_abs;\n   rtx temp;\n \n@@ -2882,10 +2881,6 @@ expand_copysign (rtx op0, rtx op1, rtx target)\n   if (fmt == NULL || !fmt->has_signed_zero)\n     return NULL_RTX;\n \n-  bitpos = fmt->signbit_rw;\n-  if (bitpos < 0)\n-    return NULL_RTX;\n-\n   op0_is_abs = false;\n   if (GET_CODE (op0) == CONST_DOUBLE)\n     {\n@@ -2894,17 +2889,21 @@ expand_copysign (rtx op0, rtx op1, rtx target)\n       op0_is_abs = true;\n     }\n \n-  if (GET_CODE (op0) == CONST_DOUBLE\n-      || (neg_optab->handlers[mode].insn_code != CODE_FOR_nothing\n-          && abs_optab->handlers[mode].insn_code != CODE_FOR_nothing))\n+  if (fmt->signbit_ro >= 0\n+      && (GET_CODE (op0) == CONST_DOUBLE\n+\t  || (neg_optab->handlers[mode].insn_code != CODE_FOR_nothing\n+\t      && abs_optab->handlers[mode].insn_code != CODE_FOR_nothing)))\n     {\n       temp = expand_copysign_absneg (mode, op0, op1, target,\n-\t\t\t\t     bitpos, op0_is_abs);\n+\t\t\t\t     fmt->signbit_ro, op0_is_abs);\n       if (temp)\n \treturn temp;\n     }\n \n-  return expand_copysign_bit (mode, op0, op1, target, bitpos, op0_is_abs);\n+  if (fmt->signbit_rw < 0)\n+    return NULL_RTX;\n+  return expand_copysign_bit (mode, op0, op1, target,\n+\t\t\t      fmt->signbit_rw, op0_is_abs);\n }\n \f\n /* Generate an instruction whose insn-code is INSN_CODE,"}, {"sha": "81bce444437f17d2bf506a952ae6012e50b4876a", "filename": "gcc/real.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c064fde513a56f84a742e38b30c87871d9df3718/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=c064fde513a56f84a742e38b30c87871d9df3718", "patch": "@@ -4414,7 +4414,7 @@ const struct real_format c4x_single_format =\n     24,\n     -126,\n     128,\n-    -1,\n+    23,\n     -1,\n     false,\n     false,\n@@ -4433,7 +4433,7 @@ const struct real_format c4x_extended_format =\n     32,\n     -126,\n     128,\n-    -1,\n+    31,\n     -1,\n     false,\n     false,"}]}