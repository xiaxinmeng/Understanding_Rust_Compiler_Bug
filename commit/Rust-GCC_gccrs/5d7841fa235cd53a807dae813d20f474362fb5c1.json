{"sha": "5d7841fa235cd53a807dae813d20f474362fb5c1", "node_id": "C_kwDOANBUbNoAKDVkNzg0MWZhMjM1Y2Q1M2E4MDdkYWU4MTNkMjBmNDc0MzYyZmI1YzE", "commit": {"author": {"name": "Sebastien Lacoste", "email": "dev@graphman.fr", "date": "2022-06-23T11:29:36Z"}, "committer": {"name": "Sebastien Lacoste", "email": "dev@graphman.fr", "date": "2022-06-23T13:58:56Z"}, "message": "Use HIR::Type's location when checking privacy\n\nThis improves privacy errors reporting location\n\nSigned-off-by: Sebastien Lacoste <dev@graphman.fr>", "tree": {"sha": "387b5e3734c1da8487a42d603ddbdf35172bfbb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/387b5e3734c1da8487a42d603ddbdf35172bfbb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7841fa235cd53a807dae813d20f474362fb5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7841fa235cd53a807dae813d20f474362fb5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7841fa235cd53a807dae813d20f474362fb5c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7841fa235cd53a807dae813d20f474362fb5c1/comments", "author": {"login": "graphman65", "id": 1569161, "node_id": "MDQ6VXNlcjE1NjkxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1569161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graphman65", "html_url": "https://github.com/graphman65", "followers_url": "https://api.github.com/users/graphman65/followers", "following_url": "https://api.github.com/users/graphman65/following{/other_user}", "gists_url": "https://api.github.com/users/graphman65/gists{/gist_id}", "starred_url": "https://api.github.com/users/graphman65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graphman65/subscriptions", "organizations_url": "https://api.github.com/users/graphman65/orgs", "repos_url": "https://api.github.com/users/graphman65/repos", "events_url": "https://api.github.com/users/graphman65/events{/privacy}", "received_events_url": "https://api.github.com/users/graphman65/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graphman65", "id": 1569161, "node_id": "MDQ6VXNlcjE1NjkxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1569161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graphman65", "html_url": "https://github.com/graphman65", "followers_url": "https://api.github.com/users/graphman65/followers", "following_url": "https://api.github.com/users/graphman65/following{/other_user}", "gists_url": "https://api.github.com/users/graphman65/gists{/gist_id}", "starred_url": "https://api.github.com/users/graphman65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graphman65/subscriptions", "organizations_url": "https://api.github.com/users/graphman65/orgs", "repos_url": "https://api.github.com/users/graphman65/repos", "events_url": "https://api.github.com/users/graphman65/events{/privacy}", "received_events_url": "https://api.github.com/users/graphman65/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d114e48ce6e6a4d6b1b4021640cbdfa3a32c05bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d114e48ce6e6a4d6b1b4021640cbdfa3a32c05bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d114e48ce6e6a4d6b1b4021640cbdfa3a32c05bb"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "77f477b8303b7da2c76fa1e6e035fc8c5b8d2f01", "filename": "gcc/rust/privacy/rust-privacy-reporter.cc", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc?ref=5d7841fa235cd53a807dae813d20f474362fb5c1", "patch": "@@ -188,8 +188,7 @@ PrivacyReporter::check_base_type_privacy (Analysis::NodeMapping &node_mappings,\n }\n \n void\n-PrivacyReporter::check_type_privacy (const HIR::Type *type,\n-\t\t\t\t     const Location &locus)\n+PrivacyReporter::check_type_privacy (const HIR::Type *type)\n {\n   rust_assert (type);\n \n@@ -198,7 +197,7 @@ PrivacyReporter::check_type_privacy (const HIR::Type *type,\n     ty_ctx.lookup_type (type->get_mappings ().get_hirid (), &lookup));\n \n   auto node_mappings = type->get_mappings ();\n-  return check_base_type_privacy (node_mappings, lookup, locus);\n+  return check_base_type_privacy (node_mappings, lookup, type->get_locus ());\n }\n \n void\n@@ -634,9 +633,7 @@ void\n PrivacyReporter::visit (HIR::Function &function)\n {\n   for (auto &param : function.get_function_params ())\n-    check_type_privacy (param.get_type (), param.get_locus ());\n-\n-  // FIXME: It would be better if it was specifically the type's locus (#1256)\n+    check_type_privacy (param.get_type ());\n \n   function.get_definition ()->accept_vis (*this);\n }\n@@ -737,8 +734,7 @@ PrivacyReporter::visit (HIR::LetStmt &stmt)\n {\n   auto type = stmt.get_type ();\n   if (type)\n-    check_type_privacy (type, stmt.get_locus ());\n-  // FIXME: #1256\n+    check_type_privacy (type);\n \n   auto init_expr = stmt.get_init_expr ();\n   if (init_expr)"}, {"sha": "a04e318e9eade2530f7dbd83204f2554f43185cc", "filename": "gcc/rust/privacy/rust-privacy-reporter.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.h?ref=5d7841fa235cd53a807dae813d20f474362fb5c1", "patch": "@@ -74,9 +74,8 @@ types\n    *\n    * @param type Reference to an explicit type used in a statement, expression\n    * \t\tor parameter\n-   * @param locus Location of said type\n    */\n-  void check_type_privacy (const HIR::Type *type, const Location &locus);\n+  void check_type_privacy (const HIR::Type *type);\n \n   virtual void visit (HIR::StructExprFieldIdentifier &field);\n   virtual void visit (HIR::StructExprFieldIdentifierValue &field);"}, {"sha": "0e0e496dde234b6f7c33eb8c1a858ac2f3010624", "filename": "gcc/testsuite/rust/compile/privacy5.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7841fa235cd53a807dae813d20f474362fb5c1/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy5.rs?ref=5d7841fa235cd53a807dae813d20f474362fb5c1", "patch": "@@ -12,7 +12,6 @@ mod orange {\n \n         let _: green::Foo; // { dg-error \"definition is private in this context\" }\n \n-        fn any(a0: green::Foo, a1: green::Bar) {}\n-        // { dg-error \"definition is private in this context\" \"\" { target *-*-* } .-1 }\n+        fn any(a0: green::Foo, a1: green::Bar) {} // { dg-error \"20:definition is private in this context\" }\n     }\n }"}]}