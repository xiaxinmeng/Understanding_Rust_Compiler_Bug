{"sha": "60f06d2f91a13bec192a76b6665dc441692bf924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmMDZkMmY5MWExM2JlYzE5MmE3NmI2NjY1ZGM0NDE2OTJiZjkyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-24T14:00:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-24T14:00:07Z"}, "message": "new\n\nFrom-SVN: r20021", "tree": {"sha": "7edfc7b2892fb1cc5867a77460a46c6ee0df7879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7edfc7b2892fb1cc5867a77460a46c6ee0df7879"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f06d2f91a13bec192a76b6665dc441692bf924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f06d2f91a13bec192a76b6665dc441692bf924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f06d2f91a13bec192a76b6665dc441692bf924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f06d2f91a13bec192a76b6665dc441692bf924/comments", "author": null, "committer": null, "parents": [{"sha": "f098395833cd46ebd4bbf7afc24d7a4c1e2f4304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f098395833cd46ebd4bbf7afc24d7a4c1e2f4304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f098395833cd46ebd4bbf7afc24d7a4c1e2f4304"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "6386fe1883b598f5a8c170e549b04f91167793e4", "filename": "gcc/testsuite/g++.old-deja/g++.other/delete1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdelete1.C?ref=60f06d2f91a13bec192a76b6665dc441692bf924", "patch": "@@ -0,0 +1,15 @@\n+//Build don't link:\n+struct cl_heap_ring{\n+    void operator delete (void* ptr) { }\n+    cl_heap_ring ()\n+    { }\n+};\n+\n+struct cl_heap_null_ring : public cl_heap_ring {\n+    void operator delete (void* ptr) { }\n+};\n+\n+void f()\n+{\n+  new cl_heap_null_ring();\n+}"}, {"sha": "28483177bf9b4aed75802a566526c5fac7fafe27", "filename": "gcc/testsuite/g++.old-deja/g++.other/virtual1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C?ref=60f06d2f91a13bec192a76b6665dc441692bf924", "patch": "@@ -0,0 +1,13 @@\n+// Build don't link:\n+\n+struct S0 { virtual void f1 () { } };\n+\n+struct S1 : virtual public S0 { virtual void f1 () { } };\n+\n+struct S2 : public S1 { virtual void f1 () { } };\n+\n+struct S3 : virtual public S0 { virtual void f1 () { } };\n+\n+struct S4 : public S3 { };\n+\n+void creator () { new S4; }"}, {"sha": "dd5b988b31661e04e1de9b336608cb689cad2f66", "filename": "gcc/testsuite/g++.old-deja/g++.pt/auto_ptr.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f06d2f91a13bec192a76b6665dc441692bf924/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C?ref=60f06d2f91a13bec192a76b6665dc441692bf924", "patch": "@@ -0,0 +1,54 @@\n+template <typename Y> struct auto_ptr_ref {\n+  Y* py;\n+  auto_ptr_ref(Y* p) : py(p) {}\n+};\n+template<typename X> struct auto_ptr {\n+   X* px;\n+ public:\n+   typedef X element_type;\n+\n+   explicit auto_ptr(X* p =0) throw() : px(p) {}\n+   auto_ptr(auto_ptr& r) throw() : px(r.release()) {}\n+   template<typename Y>\n+      auto_ptr(auto_ptr<Y>& r) throw() : px(r.release()) {}\n+\n+   auto_ptr& operator=(auto_ptr& r) throw() { \n+      reset(r.release()); \n+      return *this;\n+   }\n+   template<typename Y> auto_ptr& operator=(auto_ptr<Y>& r) throw() { \n+      reset(r.release()); \n+      return *this;\n+   }\n+\n+   ~auto_ptr() { delete px; }\n+\n+   X& operator*() const throw() { return *px; }\n+   X* operator->() const throw() { return px; }\n+   X* get() const throw() { return px; }\n+   X* release() throw() { X* p=px; px=0; return p; }\n+   void reset(X* p=0) throw() { if (px != p) delete px, px = p; }\n+\n+   auto_ptr(auto_ptr_ref<X> r) throw() : px(r.py) {}\n+   template<typename Y> operator auto_ptr_ref<Y>() throw() {\n+      return auto_ptr_ref<Y>(release()); \n+   }\n+   template<typename Y> operator auto_ptr<Y>() throw() { \n+      return auto_ptr<Y>(release());\n+   }\n+};\n+\n+struct Base { Base() {} virtual ~Base() {} };\n+struct Derived : Base { Derived() {}; };\n+\n+auto_ptr<Derived> f() { auto_ptr<Derived> null(0); return null; }\n+void g(auto_ptr<Derived>) { }\n+void h(auto_ptr<Base>) { }\n+\n+int main() {\n+    auto_ptr<Base> x(f());\n+    auto_ptr<Derived> y(f());\n+    x = y;\n+    g(f());\n+    h(f());\n+}"}]}