{"sha": "3d77b9c27d670837a69730746f0b8c63590b4852", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3N2I5YzI3ZDY3MDgzN2E2OTczMDc0NmYwYjhjNjM1OTBiNDg1Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T03:44:53Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-17T03:44:53Z"}, "message": "Correct previous patch.\n\nFrom-SVN: r2495", "tree": {"sha": "d7f48bdbcc2c7b8073fce578b51a68d67602c68b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7f48bdbcc2c7b8073fce578b51a68d67602c68b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d77b9c27d670837a69730746f0b8c63590b4852", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d77b9c27d670837a69730746f0b8c63590b4852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d77b9c27d670837a69730746f0b8c63590b4852", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d77b9c27d670837a69730746f0b8c63590b4852/comments", "author": null, "committer": null, "parents": [{"sha": "f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ba5fe9cc3c832320bd34c32ae5b51be8c31fe9"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "1123904ade1a9205843979d8380ec62c5ba42f58", "filename": "gcc/make-cc1.com", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d77b9c27d670837a69730746f0b8c63590b4852/gcc%2Fmake-cc1.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d77b9c27d670837a69730746f0b8c63590b4852/gcc%2Fmake-cc1.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cc1.com?ref=3d77b9c27d670837a69730746f0b8c63590b4852", "patch": "@@ -181,9 +181,8 @@ $!'f$verify(0)\n $\tendif\n $!\n $compile_cc1:\n-$if (DO_CC1 + DO_CC1PLUS) .ne.0\n+$if (DO_CC1 + DO_CC1OBJ) .ne.0\n $\tthen\n-$write sys$output \"testing\"\n $if (f$search(\"C-PARSE.Y\") .eqs. \"\") then goto yes_yfiles\n $if (f$cvtime(f$file_attributes(\"C-PARSE.IN\",\"RDT\")).gts. -\n  \t    f$cvtime(f$file_attributes(\"C-PARSE.Y\",\"RDT\")))  -\n@@ -193,8 +192,8 @@ $if (f$cvtime(f$file_attributes(\"C-PARSE.IN\",\"RDT\")).gts. -\n  \t    f$cvtime(f$file_attributes(\"OBJC-PARSE.Y\",\"RDT\")))  -\n \t\tthen goto yes_yfiles\n $GOTO no_yfiles\n-$echo \"Now processing c-parse.in to generate c-parse.y and objc-parse.y.\"\n $yes_yfiles:\n+$echo \"Now processing c-parse.in to generate c-parse.y and objc-parse.y.\"\n $ edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n !\n !     Read c-parse.in, write c-parse.y and objc-parse.y, depending on"}]}