{"sha": "68bd6dd68879755ecff25c829d1067bb78db82bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhiZDZkZDY4ODc5NzU1ZWNmZjI1YzgyOWQxMDY3YmI3OGRiODJiZg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-21T20:09:00Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-21T20:09:00Z"}, "message": "* cppinit.c (sanity_checks): Avoid printf mismatch warnings.\n\nFrom-SVN: r53694", "tree": {"sha": "cbdb2a8fe9c40ff82af55360d8b42ed7e3b82b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbdb2a8fe9c40ff82af55360d8b42ed7e3b82b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68bd6dd68879755ecff25c829d1067bb78db82bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68bd6dd68879755ecff25c829d1067bb78db82bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68bd6dd68879755ecff25c829d1067bb78db82bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68bd6dd68879755ecff25c829d1067bb78db82bf/comments", "author": null, "committer": null, "parents": [{"sha": "35a76aacf6174d280b49051a7e1cf1bc9334ce11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a76aacf6174d280b49051a7e1cf1bc9334ce11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a76aacf6174d280b49051a7e1cf1bc9334ce11"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "af1f768cb871784a5a961d444e6c14c6923e0027", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68bd6dd68879755ecff25c829d1067bb78db82bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68bd6dd68879755ecff25c829d1067bb78db82bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68bd6dd68879755ecff25c829d1067bb78db82bf", "patch": "@@ -1,3 +1,7 @@\n+2002-05-21  Andreas Jaeger  <aj@suse.de>\n+\n+\t* cppinit.c (sanity_checks): Avoid printf mismatch warnings.\n+\n 2002-05-21  Richard Henderson  <rth@redhat.com>\n \n \t* reg-stack.c (swap_rtx_condition, subst_stack_regs_pat): Use\n@@ -33,7 +37,7 @@ Tue May 21 10:51:54 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(cselib_invalidate_regno): Use it to determine which hard\n \tregisters to scan when mode is not VOIDmode.\n \n-2002-05-20  Duraid Madina   <duraid@fl.net.au>   \n+2002-05-20  Duraid Madina   <duraid@fl.net.au>\n \n \t* tradcpp.c (fixup_newlines): Use old-style function header.\n \n@@ -215,7 +219,7 @@ config/alpha:\n \n \t* toplev.c (display_help): Kill -a -ax help.\n \n-\t* config/1750a/1750a.h, config/alpha/alpha.h, \n+\t* config/1750a/1750a.h, config/alpha/alpha.h,\n \tconfig/clipper/clipper.h, config/dsp16xx/dsp16xx.h,\n \tconfig/h8300/h8300.h, config/i960/i960.h, config/m68k/tower-as.h,\n \tconfig/m88k/m88k.h, config/vax/vax.h, config/we32k/we32k.h:\n@@ -258,7 +262,7 @@ config/alpha:\n \tconfig/i386/i386-protos.h, config/i386/win32.h, config/i386/winnt.c,\n \tconfig/ia64/ia64.c, config/ia64/ia64.h, config/m32r/m32r.c,\n \tconfig/m32r/m32r.h, config/mcore/mcore.c, config/mcore/mcore.h,\n-\tconfig/pa/pa.c, config/rs6000/rs6000.c, config/rs6000/sysv4.h, \n+\tconfig/pa/pa.c, config/rs6000/rs6000.c, config/rs6000/sysv4.h,\n \tconfig/rs6000/xcoff.h, config/sh/sh.c, config/sh/sh.h,\n \tconfig/v850/v850.c, config/v850/v850.h:\n \tMove STRIP_NAME_ENCODING to out-of-line function and add"}, {"sha": "4f2cc8ef652ea4dfaff6ac74380b0f4a5e36485e", "filename": "gcc/cppinit.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68bd6dd68879755ecff25c829d1067bb78db82bf/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68bd6dd68879755ecff25c829d1067bb78db82bf/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=68bd6dd68879755ecff25c829d1067bb78db82bf", "patch": "@@ -858,8 +858,9 @@ static void sanity_checks (pfile)\n \n   if (CPP_OPTION (pfile, precision) > BITS_PER_HOST_WIDEST_INT)\n     cpp_error (pfile, DL_FATAL,\n-\t       \"preprocessor arithmetic has maximum precision of %u bits; target requires %u bits\",\n-\t       BITS_PER_HOST_WIDEST_INT, CPP_OPTION (pfile, precision));\n+\t       \"preprocessor arithmetic has maximum precision of %lu bits; target requires %lu bits\",\n+\t       (unsigned long)BITS_PER_HOST_WIDEST_INT,\n+\t       (unsigned long)CPP_OPTION (pfile, precision));\n \n   if (CPP_OPTION (pfile, precision) < CPP_OPTION (pfile, int_precision))\n     cpp_error (pfile, DL_FATAL,\n@@ -878,8 +879,9 @@ static void sanity_checks (pfile)\n \n   if (CPP_OPTION (pfile, wchar_precision) > BITS_PER_CPPCHAR_T)\n     cpp_error (pfile, DL_FATAL,\n-\t       \"CPP on this host cannot handle wide character constants over %u bits, but the target requires %u bits\",\n-\t       BITS_PER_CPPCHAR_T, CPP_OPTION (pfile, wchar_precision));\n+\t       \"CPP on this host cannot handle wide character constants over %lu bits, but the target requires %lu bits\",\n+\t       (unsigned long)BITS_PER_CPPCHAR_T,\n+\t       (unsigned long)CPP_OPTION (pfile, wchar_precision));\n }\n #else\n # define sanity_checks(PFILE)"}]}