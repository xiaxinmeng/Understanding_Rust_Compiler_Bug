{"sha": "c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEzYmMzZDk5OGIyNmE5ZDUwYzZiYjA3ZDBmOGYzNzIxMTdlN2EyMA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-06-25T11:09:21Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-06-25T11:09:21Z"}, "message": "re PR middle-end/57670 (Member-pointer calls should not be redirected to builtin_unreachable)\n\n2013-06-25  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/57670\n\t* cgraph.h (cgraph_indirect_call_info): New flag member_ptr.\n\t* ipa-prop.c (ipa_print_node_jump_functions): Mark member pointer\n\tcalls in the dump.\n\t(ipa_note_param_call): Initialize member_ptr flag.\n\t(ipa_analyze_indirect_call_uses): Set member_ptr flag.\n\t(ipa_make_edge_direct_to_target): Bail out if member_ptr is set.\n\t(ipa_write_indirect_edge_info): Stream member_ptr flag.\n\t(ipa_read_indirect_edge_info): Likewise.\n\ntestsuite/\n\t* g++.dg/ipa/pr57670.C (H): New test.\n\nFrom-SVN: r200393", "tree": {"sha": "d82bab7c445398d72a006a056d61c12cf0f00522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d82bab7c445398d72a006a056d61c12cf0f00522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6cdbb7e8a1f92fcc2504d56d68ff981803d499a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cdbb7e8a1f92fcc2504d56d68ff981803d499a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cdbb7e8a1f92fcc2504d56d68ff981803d499a7"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "9367386a2f6c97834b6e936d7650751e1a4abe91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "patch": "@@ -1,3 +1,15 @@\n+2013-06-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/57670\n+\t* cgraph.h (cgraph_indirect_call_info): New flag member_ptr.\n+\t* ipa-prop.c (ipa_print_node_jump_functions): Mark member pointer\n+\tcalls in the dump.\n+\t(ipa_note_param_call): Initialize member_ptr flag.\n+\t(ipa_analyze_indirect_call_uses): Set member_ptr flag.\n+\t(ipa_make_edge_direct_to_target): Bail out if member_ptr is set.\n+\t(ipa_write_indirect_edge_info): Stream member_ptr flag.\n+\t(ipa_read_indirect_edge_info): Likewise.\n+\n 2013-06-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56977"}, {"sha": "e66eecd4d2712c367085177c96b41eaeb0ef251c", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "patch": "@@ -440,6 +440,8 @@ struct GTY(()) cgraph_indirect_call_info\n   /* Set when the call is a call of a pointer loaded from contents of an\n      aggregate at offset.  */\n   unsigned agg_contents : 1;\n+  /* Set when this is a call through a member pointer.  */\n+  unsigned member_ptr : 1;\n   /* When the previous bit is set, this one determines whether the destination\n      is loaded from a parameter passed by reference. */\n   unsigned by_ref : 1;"}, {"sha": "62d7a3c5e845f1f9b40fea42c1cf97a21e5417ca", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "patch": "@@ -303,8 +303,9 @@ ipa_print_node_jump_functions (FILE *f, struct cgraph_node *node)\n \n       ii = cs->indirect_info;\n       if (ii->agg_contents)\n-\tfprintf (f, \"    indirect aggregate callsite, calling param %i, \"\n+\tfprintf (f, \"    indirect %s callsite, calling param %i, \"\n \t\t \"offset \" HOST_WIDE_INT_PRINT_DEC \", %s\",\n+\t\t ii->member_ptr ? \"member ptr\" : \"aggregate\",\n \t\t ii->param_index, ii->offset,\n \t\t ii->by_ref ? \"by reference\" : \"by_value\");\n       else\n@@ -1626,6 +1627,7 @@ ipa_note_param_call (struct cgraph_node *node, int param_index, gimple stmt)\n   cs->indirect_info->offset = 0;\n   cs->indirect_info->polymorphic = 0;\n   cs->indirect_info->agg_contents = 0;\n+  cs->indirect_info->member_ptr = 0;\n   return cs;\n }\n \n@@ -1819,6 +1821,7 @@ ipa_analyze_indirect_call_uses (struct cgraph_node *node,\n       struct cgraph_edge *cs = ipa_note_param_call (node, index, call);\n       cs->indirect_info->offset = offset;\n       cs->indirect_info->agg_contents = 1;\n+      cs->indirect_info->member_ptr = 1;\n     }\n \n   return;\n@@ -2239,6 +2242,10 @@ ipa_make_edge_direct_to_target (struct cgraph_edge *ie, tree target)\n       target = canonicalize_constructor_val (target, NULL);\n       if (!target || TREE_CODE (target) != FUNCTION_DECL)\n \t{\n+\t  if (ie->indirect_info->member_ptr)\n+\t    /* Member pointer call that goes through a VMT lookup.  */\n+\t    return NULL;\n+\n \t  if (dump_file)\n \t    fprintf (dump_file, \"ipa-prop: Discovered direct call to non-function\"\n \t\t\t\t\" in %s/%i, making it unreachable.\\n\",\n@@ -3792,6 +3799,7 @@ ipa_write_indirect_edge_info (struct output_block *ob,\n   bp = bitpack_create (ob->main_stream);\n   bp_pack_value (&bp, ii->polymorphic, 1);\n   bp_pack_value (&bp, ii->agg_contents, 1);\n+  bp_pack_value (&bp, ii->member_ptr, 1);\n   bp_pack_value (&bp, ii->by_ref, 1);\n   streamer_write_bitpack (&bp);\n \n@@ -3818,6 +3826,7 @@ ipa_read_indirect_edge_info (struct lto_input_block *ib,\n   bp = streamer_read_bitpack (ib);\n   ii->polymorphic = bp_unpack_value (&bp, 1);\n   ii->agg_contents = bp_unpack_value (&bp, 1);\n+  ii->member_ptr = bp_unpack_value (&bp, 1);\n   ii->by_ref = bp_unpack_value (&bp, 1);\n   if (ii->polymorphic)\n     {"}, {"sha": "380fbf5978d183f5d4284d9263bd6c33593bced9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "patch": "@@ -1,3 +1,8 @@\n+2013-06-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/57670\n+\t* g++.dg/ipa/pr57670.C: New test.\n+\n 2013-06-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56977"}, {"sha": "400612e756e6a7bb9636588955d49239c585a71d", "filename": "gcc/testsuite/g++.dg/ipa/pr57670.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr57670.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c13bc3d998b26a9d50c6bb07d0f8f372117e7a20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr57670.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr57670.C?ref=c13bc3d998b26a9d50c6bb07d0f8f372117e7a20", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fno-early-inlining\" } */\n+\n+class H\n+{\n+public:\n+  virtual unsigned bar() const { return 16; }\n+};\n+\n+class A : public H\n+{\n+  unsigned foo(unsigned (H::*func)(void) const) const;\n+public:\n+  H *h;\n+  virtual unsigned bar() const;\n+};\n+\n+unsigned A::foo(unsigned (H::*func)(void) const) const\n+{\n+  return  (h->*func)();\n+}\n+\n+unsigned A::bar() const\n+{\n+  return foo(&H::bar);\n+}\n+\n+int main (int argc, char **argv)\n+{\n+  H h;\n+  A a;\n+  a.h = &h;\n+\n+  if (a.bar() != 16)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}