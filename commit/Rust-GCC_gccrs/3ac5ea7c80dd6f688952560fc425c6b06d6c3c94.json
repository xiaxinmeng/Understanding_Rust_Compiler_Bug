{"sha": "3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjNWVhN2M4MGRkNmY2ODg5NTI1NjBmYzQyNWM2YjA2ZDZjM2M5NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-14T17:51:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-14T17:51:18Z"}, "message": "arm-protos.h (arm_va_arg): Remove.\n\n        * config/arm/arm-protos.h (arm_va_arg): Remove.\n        * config/arm/arm.c (arm_va_arg): Remove.\n        (arm_init_expanders): Fix alignment of arg_pointer_rtx.\n        * config/arm/arm.h (EXPAND_BUILTIN_VA_ARG): Remove.\n\nFrom-SVN: r84695", "tree": {"sha": "6a3bcf228e275b9bdadba9093ec8a0dc13742aef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a3bcf228e275b9bdadba9093ec8a0dc13742aef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/comments", "author": null, "committer": null, "parents": [{"sha": "a2017852eec2470633015d24cf8e6e43f40f9914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2017852eec2470633015d24cf8e6e43f40f9914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2017852eec2470633015d24cf8e6e43f40f9914"}], "stats": {"total": 68, "additions": 19, "deletions": 49}, "files": [{"sha": "59ee70e7dd12c7167e79654495f961eff8785a05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "patch": "@@ -1,3 +1,10 @@\n+2004-07-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/arm/arm-protos.h (arm_va_arg): Remove.\n+\t* config/arm/arm.c (arm_va_arg): Remove.\n+\t(arm_init_expanders): Fix alignment of arg_pointer_rtx.\n+\t* config/arm/arm.h (EXPAND_BUILTIN_VA_ARG): Remove.\n+\n 2004-07-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.c (fix_range): New function to mark a range(s) of registers as\n@@ -178,7 +185,7 @@\n \t(mips_pass_by_reference): Rename from function_arg_pass_by_reference.\n \tHandle mode sizes correctly.\n \t* config/mips/mips.h (FUNCTION_ARG_PASS_BY_REFERENCE): Remove.\n-        (FUNCTION_ARG_CALLEE_COPIES): Don't reference pass-by-ref.\n+\t(FUNCTION_ARG_CALLEE_COPIES): Don't reference pass-by-ref.\n \t* config/mmix/mmix-protos.h (mmix_function_arg_pass_by_reference): Kill.\n \t* config/mmix/mmix.c (TARGET_PASS_BY_REFERENCE): New.\n \t(mmix_pass_by_reference): Rename from\n@@ -192,7 +199,7 @@\n \t* config/pa/pa.c (pa_pass_by_reference): New.\n \t(TARGET_PASS_BY_REFERENCE): New.\n \t* config/pa/pa.h (FUNCTION_ARG_PASS_BY_REFERENCE): Remove.\n-        (FUNCTION_ARG_CALLEE_COPIES): True.\n+\t(FUNCTION_ARG_CALLEE_COPIES): True.\n \t* config/rs6000/rs6000-protos.h (function_arg_pass_by_reference): Kill.\n \t* config/rs6000/rs6000.c (TARGET_PASS_BY_REFERENCE): New.\n \t(rs6000_pass_by_reference): Rename from function_arg_pass_by_reference.\n@@ -297,14 +304,14 @@\n \tside-effect of having a length greater or equal to 3.\n \n 2004-07-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Lloyd Parkes  <lloyd@must-have-coffee.gen.nz>\n+\t    Lloyd Parkes  <lloyd@must-have-coffee.gen.nz>\n \n \tPR target/15186\n \t* config/sparc/sol2-bi.h (LINK_ARCH64_SPEC_BASE): Pass\n \t/usr/ucblib/sparcv9 as -R path when -compat-bsd is specified.\n \n 2004-07-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Martin Sebor  <sebor@roguewave.com>\n+\t    Martin Sebor  <sebor@roguewave.com>\n \n \tPR target/12602\n \t* doc/invoke.texi (SPARC options): Document -threads\n@@ -732,9 +739,9 @@\n \t* config/darwin.h (LINK_COMMAND_SPEC): Don't call c++filt.\n \n 2004-07-10  Steve Kargl  <sgk@troutmask.apl.washington.edu>\n-            James Morrison  <phython@gcc.gnu.org>\n+\t    James Morrison  <phython@gcc.gnu.org>\n \n-        * doc/contrib.texi (Contributors): Add gfortran contributors and\n+\t* doc/contrib.texi (Contributors): Add gfortran contributors and\n \tfix a couple of typos.\n \n 2004-07-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>"}, {"sha": "291f6d78f01f2751394fd53580cec9ea0759f304", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "patch": "@@ -155,7 +155,6 @@ extern const char *vfp_output_fstmx (rtx *);\n #if defined TREE_CODE\n extern rtx arm_function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n extern void arm_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree);\n-extern rtx arm_va_arg (tree, tree);\n extern bool arm_needs_doubleword_align (enum machine_mode, tree);\n extern rtx arm_function_value(tree, tree);\n #endif"}, {"sha": "1de284e1d621c598d91f7da9ba866a826836da62", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 38, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "patch": "@@ -2407,44 +2407,6 @@ arm_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n {\n   return type && TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST;\n }\n-\n-/* Implement va_arg.  */\n-\n-rtx\n-arm_va_arg (tree valist, tree type)\n-{\n-  int align;\n-\n-  /* Variable sized types are passed by reference.  */\n-  if (TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST)\n-    {\n-      rtx addr = std_expand_builtin_va_arg (valist, build_pointer_type (type));\n-      return gen_rtx_MEM (ptr_mode, force_reg (Pmode, addr));\n-    }\n-\n-  align = FUNCTION_ARG_BOUNDARY (TYPE_MODE (type), type);\n-  if (align > PARM_BOUNDARY)\n-    {\n-      tree mask;\n-      tree t;\n-\n-      /* Maintain 64-bit alignment of the valist pointer by\n-\t constructing:   valist = ((valist + (8 - 1)) & -8).  */\n-      mask = build_int_2 (- (align / BITS_PER_UNIT), -1);\n-      t = build_int_2 ((align / BITS_PER_UNIT) - 1, 0);\n-      t = build (PLUS_EXPR,    TREE_TYPE (valist), valist, t);\n-      t = build (BIT_AND_EXPR, TREE_TYPE (t), t, mask);\n-      t = build (MODIFY_EXPR,  TREE_TYPE (valist), valist, t);\n-      TREE_SIDE_EFFECTS (t) = 1;\n-      expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n-\n-      /* This is to stop the combine pass optimizing\n-\t away the alignment adjustment.  */\n-      mark_reg_pointer (arg_pointer_rtx, PARM_BOUNDARY);\n-    }\n-\n-  return std_expand_builtin_va_arg (valist, type);\n-}\n \f\n /* Encode the current state of the #pragma [no_]long_calls.  */\n typedef enum\n@@ -13159,6 +13121,12 @@ arm_init_expanders (void)\n {\n   /* Arrange to initialize and mark the machine per-function status.  */\n   init_machine_status = arm_init_machine_status;\n+\n+  /* This is to stop the combine pass optimizing away the alignment\n+     adjustment of va_arg.  */\n+  /* ??? It is claimed that this should not be necessary.  */\n+  if (cfun)\n+    mark_reg_pointer (arg_pointer_rtx, PARM_BOUNDARY);\n }\n \n "}, {"sha": "0f195672af4140ae78ee7fd7313a5494cad4387f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac5ea7c80dd6f688952560fc425c6b06d6c3c94/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=3ac5ea7c80dd6f688952560fc425c6b06d6c3c94", "patch": "@@ -1733,10 +1733,6 @@ typedef struct\n     || (TARGET_IWMMXT_ABI\t\t\\\n \t&& IN_RANGE ((REGNO), FIRST_IWMMXT_REGNUM, FIRST_IWMMXT_REGNUM + 9)))\n \n-/* Implement `va_arg'.  */\n-#define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n-  arm_va_arg (valist, type)\n-\n \f\n /* If your target environment doesn't prefix user functions with an\n    underscore, you may wish to re-define this to prevent any conflicts."}]}