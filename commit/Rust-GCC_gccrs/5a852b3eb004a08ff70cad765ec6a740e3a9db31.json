{"sha": "5a852b3eb004a08ff70cad765ec6a740e3a9db31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE4NTJiM2ViMDA0YTA4ZmY3MGNhZDc2NWVjNmE3NDBlM2E5ZGIzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-01-28T23:23:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-01-28T23:23:26Z"}, "message": "dwarf2.h (enum dwarf_call_frame_info): Add other DWARF 3 codes.\n\n        * dwarf2.h (enum dwarf_call_frame_info): Add other DWARF 3 codes.\n        Sync with src version.\n\nFrom-SVN: r49302", "tree": {"sha": "e1ef02b31d1c37ee7a6f42c835d32b79f184bd37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1ef02b31d1c37ee7a6f42c835d32b79f184bd37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a852b3eb004a08ff70cad765ec6a740e3a9db31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a852b3eb004a08ff70cad765ec6a740e3a9db31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a852b3eb004a08ff70cad765ec6a740e3a9db31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a852b3eb004a08ff70cad765ec6a740e3a9db31/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b08dd119e6d9b2d1f787833d0dc290f04ac4eb15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08dd119e6d9b2d1f787833d0dc290f04ac4eb15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08dd119e6d9b2d1f787833d0dc290f04ac4eb15"}], "stats": {"total": 133, "additions": 72, "deletions": 61}, "files": [{"sha": "e1830f0b974359c646bbb122494ce5564943ab79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a852b3eb004a08ff70cad765ec6a740e3a9db31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a852b3eb004a08ff70cad765ec6a740e3a9db31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a852b3eb004a08ff70cad765ec6a740e3a9db31", "patch": "@@ -1,3 +1,8 @@\n+2002-01-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_call_frame_info): Add other DWARF 3 codes.\n+\tSync with src version.\n+\n 2002-01-28  Paul Koning  <pkoning@equallogic.com>\n \n \t* builtin-types.def (BT_FN_VOID_CONST_PTR_VAR): Replace"}, {"sha": "0d433c32542250fe196ab0c8a17bcb5b6ddb1ada", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 67, "deletions": 61, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a852b3eb004a08ff70cad765ec6a740e3a9db31/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a852b3eb004a08ff70cad765ec6a740e3a9db31/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=5a852b3eb004a08ff70cad765ec6a740e3a9db31", "patch": "@@ -1,9 +1,14 @@\n /* Declarations and definitions of codes relating to the DWARF2 symbolic\n    debugging information format.\n-   Copyright (C) 1992, 1993, 1995, 1996, 1997, 2000 \n+   Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n-   Contributed by Gary Funck (gary@intrepid.com).  Derived from the\n-   DWARF 1 implementation written by Ron Guilmette (rfg@monkeys.com).\n+\n+   Written by Gary Funck (gary@intrepid.com) The Ada Joint Program\n+   Office (AJPO), Florida State Unviversity and Silicon Graphics Inc.\n+   provided support for this effort -- June 21, 1995.\n+\n+   Derived from the DWARF 1 implementation written by Ron Guilmette\n+   (rfg@netcom.com), November 1990.\n \n This file is part of GCC.\n \n@@ -26,13 +31,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    Revision 2.0.0 (July 27, 1993) developed by the UNIX International\n    Programming Languages Special Interest Group (UI/PLSIG) and distributed\n    by UNIX International.  Copies of this specification are available from\n-   UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.  */\n+   UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.\n+\n+   This file also now contains definitions from the DWARF 3 specification.  */\n \n /* This file is shared between GCC and GDB, and should not contain\n    prototypes.  */\n \n /* Tag names and codes.  */\n-\n enum dwarf_tag\n   {\n     DW_TAG_padding = 0x00,\n@@ -83,7 +89,7 @@ enum dwarf_tag\n     DW_TAG_variant_part = 0x33,\n     DW_TAG_variable = 0x34,\n     DW_TAG_volatile_type = 0x35,\n-    /* DWARF 2.1 */\n+    /* DWARF 3.  */\n     DW_TAG_dwarf_procedure = 0x36,\n     DW_TAG_restrict_type = 0x37,\n     DW_TAG_interface_type = 0x38,\n@@ -92,20 +98,20 @@ enum dwarf_tag\n     DW_TAG_unspecified_type = 0x3b,\n     DW_TAG_partial_unit = 0x3c,\n     DW_TAG_imported_unit = 0x3d,\n-    /* SGI/MIPS Extensions */\n+    /* SGI/MIPS Extensions.  */\n     DW_TAG_MIPS_loop = 0x4081,\n-    /* GNU extensions */\n-    DW_TAG_format_label = 0x4101,\t/* for FORTRAN 77 and Fortran 90 */\n-    DW_TAG_function_template = 0x4102,\t/* for C++ */\n-    DW_TAG_class_template = 0x4103,\t/* for C++ */\n+    /* GNU extensions.  */\n+    DW_TAG_format_label = 0x4101,\t/* For FORTRAN 77 and Fortran 90.  */\n+    DW_TAG_function_template = 0x4102,\t/* For C++.  */\n+    DW_TAG_class_template = 0x4103,\t/* For C++.  */\n     DW_TAG_GNU_BINCL = 0x4104,\n     DW_TAG_GNU_EINCL = 0x4105\n   };\n \n #define DW_TAG_lo_user\t0x4080\n #define DW_TAG_hi_user\t0xffff\n \n-/* flag that tells whether entry has a child or not */\n+/* Flag that tells whether entry has a child or not.  */\n #define DW_children_no   0\n #define\tDW_children_yes  1\n \n@@ -201,20 +207,20 @@ enum dwarf_attribute\n     DW_AT_variable_parameter = 0x4b,\n     DW_AT_virtuality = 0x4c,\n     DW_AT_vtable_elem_location = 0x4d,\n-    /* DWARF 2.1 */\n-    DW_AT_allocated = 0x4e,\n-    DW_AT_associated = 0x4f,\n-    DW_AT_data_location = 0x50, \n-    DW_AT_stride = 0x51,\n-    DW_AT_entry_pc = 0x52,\n-    DW_AT_use_UTF8 = 0x53,\n-    DW_AT_extension = 0x54,\n-    DW_AT_ranges = 0x55,\n-    DW_AT_trampoline = 0x56,\n-    DW_AT_call_column = 0x57, \n-    DW_AT_call_file = 0x58,\n-    DW_AT_call_line = 0x59,\n-    /* SGI/MIPS Extensions */\n+    /* DWARF 3 values.  */\n+    DW_AT_allocated     = 0x4e,\n+    DW_AT_associated    = 0x4f,\n+    DW_AT_data_location = 0x50,\n+    DW_AT_stride        = 0x51,\n+    DW_AT_entry_pc      = 0x52,\n+    DW_AT_use_UTF8      = 0x53,\n+    DW_AT_extension     = 0x54,\n+    DW_AT_ranges        = 0x55,\n+    DW_AT_trampoline    = 0x56,\n+    DW_AT_call_column   = 0x57,\n+    DW_AT_call_file     = 0x58,\n+    DW_AT_call_line     = 0x59,\n+    /* SGI/MIPS Extensions.  */\n     DW_AT_MIPS_fde = 0x2001,\n     DW_AT_MIPS_loop_begin = 0x2002,\n     DW_AT_MIPS_tail_loop_begin = 0x2003,\n@@ -227,21 +233,20 @@ enum dwarf_attribute\n     DW_AT_MIPS_clone_origin = 0x200a,\n     DW_AT_MIPS_has_inlines = 0x200b,\n     /* GNU extensions.  */\n-    DW_AT_sf_names = 0x2101,\n-    DW_AT_src_info = 0x2102,\n-    DW_AT_mac_info = 0x2103,\n+    DW_AT_sf_names   = 0x2101,\n+    DW_AT_src_info   = 0x2102,\n+    DW_AT_mac_info   = 0x2103,\n     DW_AT_src_coords = 0x2104,\n     DW_AT_body_begin = 0x2105,\n-    DW_AT_body_end = 0x2106,\n-    /* VMS Extensions */\n+    DW_AT_body_end   = 0x2106,\n+    /* VMS Extensions.  */\n     DW_AT_VMS_rtnbeg_pd_address = 0x2201\n   };\n \n-#define DW_AT_lo_user\t0x2000\t/* implementation-defined range start */\n-#define DW_AT_hi_user\t0x3ff0\t/* implementation-defined range end */\n+#define DW_AT_lo_user\t0x2000\t/* Implementation-defined range start.  */\n+#define DW_AT_hi_user\t0x3ff0\t/* Implementation-defined range end.  */\n \n /* Location atom names and codes.  */\n-\n enum dwarf_location_atom\n   {\n     DW_OP_addr = 0x03,\n@@ -389,18 +394,17 @@ enum dwarf_location_atom\n     DW_OP_deref_size = 0x94,\n     DW_OP_xderef_size = 0x95,\n     DW_OP_nop = 0x96,\n-    /* DWARF 2.1 */\n+    /* DWARF 3 extensions.  */\n     DW_OP_push_object_address = 0x97,\n     DW_OP_call2 = 0x98,\n     DW_OP_call4 = 0x99,\n     DW_OP_calli = 0x9a\n   };\n \n-#define DW_OP_lo_user\t0x80\t/* implementation-defined range start */\n-#define DW_OP_hi_user\t0xff\t/* implementation-defined range end */\n+#define DW_OP_lo_user\t0x80\t/* Implementation-defined range start.  */\n+#define DW_OP_hi_user\t0xff\t/* Implementation-defined range end.  */\n \n /* Type encodings.  */\n-\n enum dwarf_type\n   {\n     DW_ATE_void = 0x0,\n@@ -412,7 +416,7 @@ enum dwarf_type\n     DW_ATE_signed_char = 0x6,\n     DW_ATE_unsigned = 0x7,\n     DW_ATE_unsigned_char = 0x8,\n-    /* DWARF 2.1 */\n+    /* DWARF 3.  */\n     DW_ATE_imaginary_float = 0x9\n   };\n \n@@ -426,31 +430,31 @@ enum dwarf_array_dim_ordering\n     DW_ORD_col_major = 1\n   };\n \n-/* access attribute */\n+/* Access attribute.  */\n enum dwarf_access_attribute\n   {\n     DW_ACCESS_public = 1,\n     DW_ACCESS_protected = 2,\n     DW_ACCESS_private = 3\n   };\n \n-/* visibility */\n+/* Visibility.  */\n enum dwarf_visibility_attribute\n   {\n     DW_VIS_local = 1,\n     DW_VIS_exported = 2,\n     DW_VIS_qualified = 3\n   };\n \n-/* virtuality */\n+/* Virtuality.  */\n enum dwarf_virtuality_attribute\n   {\n     DW_VIRTUALITY_none = 0,\n     DW_VIRTUALITY_virtual = 1,\n     DW_VIRTUALITY_pure_virtual = 2\n   };\n \n-/* case sensitivity */\n+/* Case sensitivity.  */\n enum dwarf_id_case\n   {\n     DW_ID_case_sensitive = 0,\n@@ -459,7 +463,7 @@ enum dwarf_id_case\n     DW_ID_case_insensitive = 3\n   };\n \n-/* calling convention */\n+/* Calling convention.  */\n enum dwarf_calling_convention\n   {\n     DW_CC_normal = 0x1,\n@@ -470,7 +474,7 @@ enum dwarf_calling_convention\n #define DW_CC_lo_user 0x40\n #define DW_CC_hi_user 0xff\n \n-/* inline attribute */\n+/* Inline attribute.  */\n enum dwarf_inline_attribute\n   {\n     DW_INL_not_inlined = 0,\n@@ -479,14 +483,14 @@ enum dwarf_inline_attribute\n     DW_INL_declared_inlined = 3\n   };\n \n-/* discriminant lists */\n+/* Discriminant lists.  */\n enum dwarf_discrim_list\n   {\n     DW_DSC_label = 0,\n     DW_DSC_range = 1\n   };\n \n-/* line number opcodes */\n+/* Line number opcodes.  */\n enum dwarf_line_number_ops\n   {\n     DW_LNS_extended_op = 0,\n@@ -498,18 +502,22 @@ enum dwarf_line_number_ops\n     DW_LNS_negate_stmt = 6,\n     DW_LNS_set_basic_block = 7,\n     DW_LNS_const_add_pc = 8,\n-    DW_LNS_fixed_advance_pc = 9\n+    DW_LNS_fixed_advance_pc = 9,\n+    /* DWARF 3.  */\n+    DW_LNS_set_prologue_end = 10,\n+    DW_LNS_set_epilogue_begin = 11,\n+    DW_LNS_set_isa = 12\n   };\n \n-/* line number extended opcodes */\n+/* Line number extended opcodes.  */\n enum dwarf_line_number_x_ops\n   {\n     DW_LNE_end_sequence = 1,\n     DW_LNE_set_address = 2,\n     DW_LNE_define_file = 3\n   };\n \n-/* call frame information */\n+/* Call frame information.  */\n enum dwarf_call_frame_info\n   {\n     DW_CFA_advance_loc = 0x40,\n@@ -530,17 +538,18 @@ enum dwarf_call_frame_info\n     DW_CFA_def_cfa = 0x0c,\n     DW_CFA_def_cfa_register = 0x0d,\n     DW_CFA_def_cfa_offset = 0x0e,\n+\n+    /* DWARF 3.  */\n     DW_CFA_def_cfa_expression = 0x0f,\n     DW_CFA_expression = 0x10,\n-    /* Dwarf 2.1 */\n     DW_CFA_offset_extended_sf = 0x11,\n     DW_CFA_def_cfa_sf = 0x12,\n     DW_CFA_def_cfa_offset_sf = 0x13,\n \n-    /* SGI/MIPS specific */\n+    /* SGI/MIPS specific.  */\n     DW_CFA_MIPS_advance_loc8 = 0x1d,\n-    \n-    /* GNU extensions */\n+\n+    /* GNU extensions.  */\n     DW_CFA_GNU_window_save = 0x2d,\n     DW_CFA_GNU_args_size = 0x2e,\n     DW_CFA_GNU_negative_offset_extended = 0x2f\n@@ -559,7 +568,6 @@ enum dwarf_call_frame_info\n #define DW_ADDR_none\t\t0\n \n /* Source language names and codes.  */\n-\n enum dwarf_source_language\n   {\n     DW_LANG_C89 = 0x0001,\n@@ -573,20 +581,19 @@ enum dwarf_source_language\n     DW_LANG_Pascal83 = 0x0009,\n     DW_LANG_Modula2 = 0x000a,\n     DW_LANG_Java = 0x000b,\n-    /* DWARF 2.1 */\n+    /* DWARF 3.  */\n     DW_LANG_C99 = 0x000c,\n     DW_LANG_Ada95 = 0x000d,\n     DW_LANG_Fortran95 = 0x000e,\n-    /* MIPS */\n+    /* MIPS.  */\n     DW_LANG_Mips_Assembler = 0x8001\n   };\n \n \n-#define DW_LANG_lo_user 0x8000\t/* implementation-defined range start */\n-#define DW_LANG_hi_user 0xffff\t/* implementation-defined range start */\n+#define DW_LANG_lo_user 0x8000\t/* Implementation-defined range start.  */\n+#define DW_LANG_hi_user 0xffff\t/* Implementation-defined range start.  */\n \n /* Names and codes for macro information.  */\n-\n enum dwarf_macinfo_record_type\n   {\n     DW_MACINFO_define = 1,\n@@ -595,7 +602,6 @@ enum dwarf_macinfo_record_type\n     DW_MACINFO_end_file = 4,\n     DW_MACINFO_vendor_ext = 255\n   };\n-\n \f\n /* @@@ For use with GNU frame unwind information.  */\n "}]}