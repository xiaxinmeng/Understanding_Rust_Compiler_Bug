{"sha": "6d0d35d518a12ee43c1fbd77df73a66d02305a69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwZDM1ZDUxOGExMmVlNDNjMWZiZDc3ZGY3M2E2NmQwMjMwNWE2OQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-14T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-14T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "e42a4f20d48de335eff99d954de13e4898642865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e42a4f20d48de335eff99d954de13e4898642865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0d35d518a12ee43c1fbd77df73a66d02305a69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0d35d518a12ee43c1fbd77df73a66d02305a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0d35d518a12ee43c1fbd77df73a66d02305a69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0d35d518a12ee43c1fbd77df73a66d02305a69/comments", "author": null, "committer": null, "parents": [{"sha": "af7128621e54f04b90589bb0c3e1ef271c239265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7128621e54f04b90589bb0c3e1ef271c239265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7128621e54f04b90589bb0c3e1ef271c239265"}], "stats": {"total": 207, "additions": 206, "deletions": 1}, "files": [{"sha": "21e54dec631cd3542b7d32dfd25754c9a0f75ff7", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,8 @@\n+2021-04-13  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* mh-mingw: Set __USE_MINGW_ACCESS in missed C++ flags\n+\tvariables\n+\n 2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR c++/98316"}, {"sha": "0eebc8759d9ffa40f400779406825ead318ca9b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,28 @@\n+2021-04-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100053\n+\t* tree-ssa-sccvn.c (vn_nary_op_get_predicated_value): Do\n+\tnot use optimistic dominance queries for backedges to validate\n+\tpredicated values.\n+\t(dominated_by_p_w_unex): Add parameter to ignore executable\n+\tstate on backedges.\n+\t(rpo_elim::eliminate_avail): Adjust.\n+\n+2021-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100028\n+\t* config/aarch64/aarch64.md (*aarch64_bfxil<mode>_extr,\n+\t*aarch64_bfxilsi_extrdi): New define_insn patterns.\n+\n+2021-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99648\n+\t* simplify-rtx.c (simplify_immed_subreg): For MODE_COMPOSITE_P\n+\toutermode, return NULL if the result doesn't encode back to the\n+\toriginal byte sequence.\n+\t(simplify_gen_subreg): Don't create SUBREGs from constants to\n+\tMODE_COMPOSITE_P outermode.\n+\n 2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/99905"}, {"sha": "3219cc3cd75b2f5a1cec97784c1eeb61f3d4aff0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1 +1 @@\n-20210413\n+20210414"}, {"sha": "d64ae068b7ae9ad21b089acce9515b6907c926f9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,12 @@\n+2021-04-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/misc.c (gnat_init): Set default range bits to 0.\n+\t* gcc-interface/trans.c (extract_encoding): Delete.\n+\t(decode_name): Likewise.\n+\t(File_Name_to_gnu): New function.\n+\t(gigi): Call it to translate file names.  Replace assertion on\n+\t1-1 mapping between files and line maps with conditional error.\n+\n 2021-04-11  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* gnat_ugn.texi (Top): Avoid invalid \"up\" link."}, {"sha": "85dd4629d4dd7e9ebd81dd64812511b592d8c5bb", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,15 @@\n+2021-04-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98599\n+\t* supergraph.cc (saved_uids::make_uid_unique): New.\n+\t(saved_uids::restore_uids): New.\n+\t(supergraph::supergraph): Replace assignments to stmt->uid with\n+\tcalls to m_stmt_uids.make_uid_unique.\n+\t(supergraph::~supergraph): New.\n+\t* supergraph.h (class saved_uids): New.\n+\t(supergraph::~supergraph): New decl.\n+\t(supergraph::m_stmt_uids): New field.\n+\n 2021-04-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/100011"}, {"sha": "9145630d43bae3a2e10fe3b805d0eba856e832f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,49 @@\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100032\n+\t* pt.c (get_underlying_template): Compare TYPE_QUALS.\n+\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100054\n+\tPR c++/90479\n+\t* init.c (get_nsdmi): Do more context adjustment for local classes.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99008\n+\t* pt.c (do_class_deduction): Reject alias CTAD in C++17 mode\n+\trather than issuing a pedwarn.\n+\t* typeck2.c (build_functional_cast_1): Handle CTAD uniformly\n+\tfor consistent diagnostics.\n+\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91933\n+\t* class.c (build_base_path): Shortcut simple non-pointer case.\n+\n+2021-04-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* module.cc (ordinary_loc_of): Test LINEMAPS_MACRO_LOWEST_LOCATION\n+\tof the linemap.\n+\t(module_state::write_location): Likewise.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/97134\n+\t* pt.c (do_class_deduction): Look through EXPR_PACK_EXPANSION\n+\twhen checking if the initializer is an equivalent class\n+\tplaceholder template parameter.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99961\n+\tPR c++/99994\n+\t* constraint.cc (satisfy_normalized_constraints): Set\n+\tcp_unevaluated.\n+\t* parser.c (cp_parser_concept_definition): Likewise.\n+\t(cp_parser_requires_clause_opt): Likewise.\n+\n 2021-04-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93085"}, {"sha": "1f79bc39928b337b7f131fe1513b9e708f95e45e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,87 @@\n+2021-04-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/82800\n+\t* g++.dg/warn/uninit-pr82800.C: New test.\n+\n+2021-04-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/86058\n+\t* gcc.dg/pr86058.c: New test.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99008\n+\t* g++.old-deja/g++.ns/crash3.C: Adjust expected diagnostic.\n+\t* g++.old-deja/g++.ns/template7.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash8.C: Likewise.\n+\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100032\n+\t* g++.dg/cpp0x/alias-decl-equiv1.C: New test.\n+\n+2021-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/97121\n+\t* g++.dg/cpp2a/spaceship-err6.C: New test.\n+\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100054\n+\t* g++.dg/cpp1y/lambda-generic-local-class1.C: New test.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99008\n+\t* g++.dg/parse/template2.C: Adjust expected diagnostic.\n+\t* g++.dg/template/error8.C: Likewise.\n+\t* g++.dg/cpp1z/class-deduction84.C: New test.\n+\n+2021-04-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100053\n+\t* gcc.dg/torture/pr100053.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-fre-93.c: Likewise.\n+\n+2021-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91933\n+\t* g++.dg/cpp0x/constexpr-base7.C: New test.\n+\n+2021-04-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR preprocessor/99446\n+\t* g++.dg/diagnostic/pr72803.C: Adjust expected column.\n+\n+2021-04-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100028\n+\t* gcc.target/aarch64/pr100028.c: New test.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/97134\n+\t* g++.dg/cpp2a/nontype-class43.C: New test.\n+\n+2021-04-13  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99961\n+\tPR c++/99994\n+\t* g++.dg/cpp2a/concepts-uneval1.C: New test.\n+\t* g++.dg/cpp2a/concepts-uneval2.C: New test.\n+\n+2021-04-13  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR analyzer/99212\n+\t* gcc.dg/analyzer/data-model-1.c (test_45): Inverse xfail at\n+\tline 971 for cris-*-*.\n+\n+2021-04-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98599\n+\t* gcc.dg/analyzer/pr98599-a.c: New test.\n+\t* gcc.dg/analyzer/pr98599-b.c: New test.\n+\n 2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/99905"}, {"sha": "3402aa8fda28bc24fb548808606b0b6ebeb0384e", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,15 @@\n+2021-04-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR preprocessor/99446\n+\t* line-map.c (line-map.c): Do not advance to linemaps for\n+\tdifferent files.\n+\n+2021-04-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* include/line-map.h (IS_MACRO_LOC): Delete.\n+\t* line-map.c (linemap_location_from_macro_expansion_p): Test\n+\tLINEMAPS_MACRO_LOWEST_LOCATION of the linemap.\n+\n 2021-03-02  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/99323"}, {"sha": "7be83da61e8bd92efa9cd37c194c4264781970f1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0d35d518a12ee43c1fbd77df73a66d02305a69/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0d35d518a12ee43c1fbd77df73a66d02305a69/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6d0d35d518a12ee43c1fbd77df73a66d02305a69", "patch": "@@ -1,3 +1,15 @@\n+2021-04-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100060\n+\t* include/std/bit: Only include <ext/numeric_traits.h> for\n+\thosted build, use <limits> otherwise.\n+\n+2021-04-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/backwards_compatibility.xml: Remove porting\n+\tnotes for libg++ and libstdc++-v2, and bibliography.\n+\t* doc/html/*: Regenerated.\n+\n 2021-04-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/100044"}]}