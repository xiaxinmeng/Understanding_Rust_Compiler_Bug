{"sha": "8bc47ae2a784685f79dca8d7d04135c939a49452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjNDdhZTJhNzg0Njg1Zjc5ZGNhOGQ3ZDA0MTM1YzkzOWE0OTQ1Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-13T12:15:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-13T12:15:01Z"}, "message": "re PR tree-optimization/69013 (gfortran-5.3.0 ICE in prune_uninit_phi_opnds_in_unrealizable_paths, at tree-ssa-uninit.c:1121)\n\n2016-01-13  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69013\n\t* tree-ssa-uninit.c (prune_uninit_phi_opnds_in_unrealizable_paths):\n\tExchange assert for a test.\n\nFrom-SVN: r232320", "tree": {"sha": "57c444d3e18499aa6d1f729cd6f2a96bc25bf327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57c444d3e18499aa6d1f729cd6f2a96bc25bf327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bc47ae2a784685f79dca8d7d04135c939a49452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc47ae2a784685f79dca8d7d04135c939a49452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc47ae2a784685f79dca8d7d04135c939a49452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc47ae2a784685f79dca8d7d04135c939a49452/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95251c8380ee4d50242fc4ae886bf1c5ef6c9cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95251c8380ee4d50242fc4ae886bf1c5ef6c9cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95251c8380ee4d50242fc4ae886bf1c5ef6c9cd9"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "5be7ebf80d900d30bdb52c27b0db386677b471f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc47ae2a784685f79dca8d7d04135c939a49452/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc47ae2a784685f79dca8d7d04135c939a49452/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bc47ae2a784685f79dca8d7d04135c939a49452", "patch": "@@ -1,3 +1,9 @@\n+2016-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69013\n+\t* tree-ssa-uninit.c (prune_uninit_phi_opnds_in_unrealizable_paths):\n+\tExchange assert for a test.\n+\n 2016-01-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/69247"}, {"sha": "ea3ceb8f101bbe2882a093f6d204ac6dc3af0830", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc47ae2a784685f79dca8d7d04135c939a49452/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc47ae2a784685f79dca8d7d04135c939a49452/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=8bc47ae2a784685f79dca8d7d04135c939a49452", "patch": "@@ -1093,19 +1093,21 @@ prune_uninit_phi_opnds_in_unrealizable_paths (gphi *phi,\n \t      edge opnd_edge;\n \t      unsigned uninit_opnds2\n \t\t  = compute_uninit_opnds_pos (opnd_def_phi);\n-\t      pred_chain_union def_preds = vNULL;\n-\t      bool ok;\n-\t      gcc_assert (!MASK_EMPTY (uninit_opnds2));\n-\t      opnd_edge = gimple_phi_arg_edge (phi, i);\n-\t      ok = is_use_properly_guarded (phi,\n-\t\t\t\t\t    opnd_edge->src,\n-\t\t\t\t\t    opnd_def_phi,\n-\t\t\t\t\t    uninit_opnds2,\n-\t\t\t\t\t    &def_preds,\n-\t\t\t\t\t    visited_phis);\n-\t      destroy_predicate_vecs (&def_preds);\n-\t      if (!ok)\n-\t\treturn false;\n+\t      if (!MASK_EMPTY (uninit_opnds2))\n+\t\t{\n+\t\t  pred_chain_union def_preds = vNULL;\n+\t\t  bool ok;\n+\t\t  opnd_edge = gimple_phi_arg_edge (phi, i);\n+\t\t  ok = is_use_properly_guarded (phi,\n+\t\t\t\t\t\topnd_edge->src,\n+\t\t\t\t\t\topnd_def_phi,\n+\t\t\t\t\t\tuninit_opnds2,\n+\t\t\t\t\t\t&def_preds,\n+\t\t\t\t\t\tvisited_phis);\n+\t\t  destroy_predicate_vecs (&def_preds);\n+\t\t  if (!ok)\n+\t\t    return false;\n+\t\t}\n \t    }\n \t  else\n \t    return false;"}]}