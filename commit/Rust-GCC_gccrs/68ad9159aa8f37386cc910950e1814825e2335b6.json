{"sha": "68ad9159aa8f37386cc910950e1814825e2335b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhZDkxNTlhYThmMzczODZjYzkxMDk1MGUxODE0ODI1ZTIzMzViNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-08-20T21:46:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-08-20T21:46:48Z"}, "message": "tree.h (IS_EXPR_CODE_CLASS): Also include 'r' and 's'.\n\n        * tree.h (IS_EXPR_CODE_CLASS): Also include 'r' and 's'.\n        (EXPR_CHECK): Don't check for 'r' or 's' if we're\n        checking IS_EXPR_CODE_CLASS.\n        * calls.c (calls_function_1): Likewise.\n        * fold-const.c (fold): Likewise.\n        * tree.c (iterative_hash_expr): Likewise.\n        * tree-inline.c (walk_tree, copy_tree_r): Likewise.\n\nFrom-SVN: r70617", "tree": {"sha": "a4be84606bce231dfa45e9238c38069766649fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4be84606bce231dfa45e9238c38069766649fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ad9159aa8f37386cc910950e1814825e2335b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ad9159aa8f37386cc910950e1814825e2335b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ad9159aa8f37386cc910950e1814825e2335b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ad9159aa8f37386cc910950e1814825e2335b6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8e60672eff02dc404f86f6fdaecbc45c622f838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e60672eff02dc404f86f6fdaecbc45c622f838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e60672eff02dc404f86f6fdaecbc45c622f838"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "2ff2414d9e7ccf1e114548a85516ae69beac90ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -1,3 +1,13 @@\n+2003-08-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (IS_EXPR_CODE_CLASS): Also include 'r' and 's'.\n+\t(EXPR_CHECK): Don't check for 'r' or 's' if we're\n+\tchecking IS_EXPR_CODE_CLASS.\n+\t* calls.c (calls_function_1): Likewise.\n+\t* fold-const.c (fold): Likewise.\n+\t* tree.c (iterative_hash_expr): Likewise.\n+\t* tree-inline.c (walk_tree, copy_tree_r): Likewise.\n+\n 2003-08-20  Gunther Nikl  <gni@gecko.de>\n \n \t* config/m68k/m68k.c (m68k_output_mi_thunk): delete obsolete code"}, {"sha": "f4bf6d3b70dd5ecc029faad6c08458596ba71b9c", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -262,8 +262,8 @@ calls_function_1 (tree exp, int which)\n       break;\n     }\n \n-  /* Only expressions, references, and blocks can contain calls.  */\n-  if (! IS_EXPR_CODE_CLASS (class) && class != 'r' && class != 'b')\n+  /* Only expressions and blocks can contain calls.  */\n+  if (! IS_EXPR_CODE_CLASS (class) && class != 'b')\n     return 0;\n \n   for (i = 0; i < length; i++)"}, {"sha": "ef7c086087b683b77be119ff3997159be0b2bc5f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -5032,7 +5032,7 @@ fold (tree expr)\n \t   do arithmetic on them.  */\n \twins = 0;\n     }\n-  else if (IS_EXPR_CODE_CLASS (kind) || kind == 'r')\n+  else if (IS_EXPR_CODE_CLASS (kind))\n     {\n       int len = first_rtl_op (code);\n       int i;"}, {"sha": "8893b26236ab24b39aece29db00d76a2938c7e88", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -1661,15 +1661,11 @@ walk_tree (tree *tp, walk_tree_fn func, void *data, void *htab_)\n     }\n \n   /* Handle common cases up front.  */\n-  if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n-      || TREE_CODE_CLASS (code) == 'r'\n-      || TREE_CODE_CLASS (code) == 's')\n+  if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code)))\n #else /* INLINER_FOR_JAVA */\n   if (code != EXIT_BLOCK_EXPR\n       && code != SAVE_EXPR\n-      && (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n-\t  || TREE_CODE_CLASS (code) == 'r'\n-\t  || TREE_CODE_CLASS (code) == 's'))\n+      && IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code)))\n #endif /* INLINER_FOR_JAVA */\n     {\n       int i, len;\n@@ -1862,9 +1858,7 @@ copy_tree_r (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \n   /* We make copies of most nodes.  */\n   if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n-      || TREE_CODE_CLASS (code) == 'r'\n       || TREE_CODE_CLASS (code) == 'c'\n-      || TREE_CODE_CLASS (code) == 's'\n       || code == TREE_LIST\n       || code == TREE_VEC\n       || (*lang_hooks.tree_inlining.tree_chain_matters_p) (*tp))"}, {"sha": "d38a87daf1f90609da35be1048011d47b318ee85", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -3527,7 +3527,7 @@ iterative_hash_expr (tree t, hashval_t val)\n       else\n \tabort ();\n     }\n-  else if (IS_EXPR_CODE_CLASS (class) || class == 'r')\n+  else if (IS_EXPR_CODE_CLASS (class))\n     {\n       val = iterative_hash_object (code, val);\n "}, {"sha": "0563f08554a9df3615cef0d200db1a1386b0ec45", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad9159aa8f37386cc910950e1814825e2335b6/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=68ad9159aa8f37386cc910950e1814825e2335b6", "patch": "@@ -57,7 +57,8 @@ extern const char tree_code_type[];\n    expression.  */\n \n #define IS_EXPR_CODE_CLASS(CLASS) \\\n-  ((CLASS) == '<' || (CLASS) == '1' || (CLASS) == '2' || (CLASS) == 'e')\n+  ((CLASS) == '<' || (CLASS) == '1' || (CLASS) == '2' || (CLASS) == 'e' \\\n+   || (CLASS) == 'r' || (CLASS) == 's')\n \n /* Number of argument-words in each kind of tree-node.  */\n \n@@ -291,7 +292,7 @@ struct tree_common GTY(())\n #define EXPR_CHECK(T) __extension__\t\t\t\t\t\\\n ({  const tree __t = (T);\t\t\t\t\t\t\\\n     char const __c = TREE_CODE_CLASS (TREE_CODE (__t));\t\t\t\\\n-    if (!IS_EXPR_CODE_CLASS (__c) && __c != 'r' && __c != 's')\t\t\\\n+    if (!IS_EXPR_CODE_CLASS (__c))\t\t\t\t\t\\\n       tree_class_check_failed (__t, 'e', __FILE__, __LINE__,\t\t\\\n \t\t\t       __FUNCTION__);\t\t\t\t\\\n     __t; })"}]}