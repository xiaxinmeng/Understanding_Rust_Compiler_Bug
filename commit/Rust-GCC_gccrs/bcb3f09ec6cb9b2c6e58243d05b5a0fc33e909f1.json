{"sha": "bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1", "node_id": "C_kwDOANBUbNoAKGJjYjNmMDllYzZjYjliMmM2ZTU4MjQzZDA1YjVhMGZjMzNlOTA5ZjE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-10-18T07:33:38Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:36Z"}, "message": "ada: Tune hash function for cross-reference entries\n\nTune the hash function that combines entity identifiers with source\nlocations of where those entities are referenced. Previously the source\nlocation was multiplied by 2 ** 7 (i.e. shifted left by 7 bits), then\nadded to the entity identifier, and finally divided modulo 2 ** 16 (i.e.\nmasked to only use the lowest 16 bits). This hash routine caused\ncollisions that could make some tests up to twice slower.\n\nWith a large entity number the source location was only contributing few\nbits to the hash value. This large entity number might correspond to\nentity like Ada.Characters.Latin_1.NUL that occurs thousands of times in\ngenerated code.\n\ngcc/ada/\n\n\t* lib-xref.adb (Hash): Tune hash function.", "tree": {"sha": "4df5daefb657713802fe88277389dedcf84e9a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4df5daefb657713802fe88277389dedcf84e9a63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc3208e698b2f424d892d3c9e5d5562ccde9e4cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3208e698b2f424d892d3c9e5d5562ccde9e4cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3208e698b2f424d892d3c9e5d5562ccde9e4cf"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5a1538e523c0b18c71ee474dc46a1f3f9fd858ff", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=bcb3f09ec6cb9b2c6e58243d05b5a0fc33e909f1", "patch": "@@ -1271,10 +1271,10 @@ package body Lib.Xref is\n       XE : Xref_Entry renames Xrefs.Table (F);\n       type M is mod 2**32;\n \n-      H : constant M := M (XE.Key.Ent) + 2 ** 7 * M (abs XE.Key.Loc);\n+      H : constant M := 3 * M (XE.Key.Ent) + 5 * M (abs XE.Key.Loc);\n       --  It would be more natural to write:\n       --\n-      --    H : constant M := M'Mod (XE.Key.Ent) + 2**7 * M'Mod (XE.Key.Loc);\n+      --    H : constant M := 3 * M'Mod (XE.Key.Ent) + 5 * M'Mod (XE.Key.Loc);\n       --\n       --  But we can't use M'Mod, because it prevents bootstrapping with older\n       --  compilers. Loc can be negative, so we do \"abs\" before converting."}]}