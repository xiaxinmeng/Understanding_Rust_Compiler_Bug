{"sha": "48166757dcf46d92cf1795dd7333dda7030179c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgxNjY3NTdkY2Y0NmQ5MmNmMTc5NWRkNzMzM2RkYTcwMzAxNzljOA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-29T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-29T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "58c31b3c1dd0abaf7f326f6088737f57c2ac0988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58c31b3c1dd0abaf7f326f6088737f57c2ac0988"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48166757dcf46d92cf1795dd7333dda7030179c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48166757dcf46d92cf1795dd7333dda7030179c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48166757dcf46d92cf1795dd7333dda7030179c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48166757dcf46d92cf1795dd7333dda7030179c8/comments", "author": null, "committer": null, "parents": [{"sha": "0f54cc9c63842ddfa921530cb499743cafc9b177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f54cc9c63842ddfa921530cb499743cafc9b177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f54cc9c63842ddfa921530cb499743cafc9b177"}], "stats": {"total": 248, "additions": 247, "deletions": 1}, "files": [{"sha": "24c27bf8cf2cc8c0f2bfc6baa3cb7d91379e949f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,77 @@\n+2021-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree-iterator.h (struct tree_stmt_iterator): Add operator++,\n+\toperator--, operator*, operator==, and operator!=.\n+\t(class tsi_range): New.\n+\n+2021-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100778\n+\t* tree-vect-slp.c (vect_build_slp_tree_1): Prevent possibly\n+\ttrapping ops in different BBs.\n+\n+2021-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/100791\n+\t* tree-inline.c (copy_bb): When processing __builtin_va_arg_pack\n+\tcopy fntype from original call.\n+\n+2021-05-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/100751\n+\t* doc/gcov.texi: Revert partially a hunk that was wrong.\n+\n+2021-05-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/csky/csky-linux-elf.h (HAVE_sync_compare_and_swapqi):\n+\tDefined.\n+\t(HAVE_sync_compare_and_swaphi): Likewise.\n+\t(HAVE_sync_compare_and_swapsi): Likewise.\n+\n+2021-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* tree.h (OMP_CLAUSE_MAP_IMPLICIT): Define.\n+\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_omp_affinity): New.\n+\t(gimplify_scan_omp_clauses): Call it; remove affinity clause afterwards.\n+\t* tree-core.h (enum omp_clause_code): Add OMP_CLAUSE_AFFINITY.\n+\t* tree-pretty-print.c (dump_omp_clause): Handle OMP_CLAUSE_AFFINITY.\n+\t* tree.c (omp_clause_num_ops, omp_clause_code_name): Add clause.\n+\t(walk_tree_1): Handle OMP_CLAUSE_AFFINITY.\n+\n+2021-05-28  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\t    Richard Biener   <rguenther@suse.de>\n+\n+\t* match.pd <popcount & / + pattern matching>:\n+\tWhen generating popcount directly fails, try doing it in two halves.\n+\n+2021-05-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* Makefile.in (generated_files): Add gimple-match.c and\n+\tgeneric-match.c\n+\n+2021-05-28  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* gensupport.c (alter_predicate_for_insn): Handle MATCH_DUP.\n+\n+2021-05-28  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* gensupport.c (alter_constraints): Add MATCH_SCRATCH case.\n+\n+2021-05-28  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR tree-optimization/99398\n+\t* tree-ssa-forwprop.c (simplify_permutation): Optimize some cases\n+\twhere the fed operands are CTOR/CST and propagated through\n+\tVIEW_CONVERT_EXPR.  Call vec_perm_indices::new_shrunk_vector.\n+\t* vec-perm-indices.c (vec_perm_indices::new_shrunk_vector): New\n+\tfunction.\n+\t* vec-perm-indices.h (vec_perm_indices::new_shrunk_vector): New\n+\tdeclare.\n+\n 2021-05-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/mmx.md (addv2sf3): Do not call"}, {"sha": "cc21e7a45a7eef8ca20a1c35605d42575f657359", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1 +1 @@\n-20210528\n+20210529"}, {"sha": "29051798fbafeb0a4069edc24640a95ebcfa2578", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,13 @@\n+2021-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* c-omp.c (c_omp_split_clauses): For reduction clause if combined with\n+\ttarget add a map tofrom clause with OMP_CLAUSE_MAP_IMPLICIT.\n+\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-pragma.h (enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_AFFINITY.\n+\n 2021-05-25  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/92860"}, {"sha": "411058fd4707214449a414657479f9552f2a3098", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,29 @@\n+2021-05-28  Richard Biener   <rguenther@suse.de>\n+\n+\tPR c/100803\n+\t* gimple-parser.c (c_parser_gimple_paren_condition): Diagnose\n+\tinvalid if conditions.\n+\n+2021-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* c-typeck.c (handle_omp_array_sections): Copy OMP_CLAUSE_MAP_IMPLICIT.\n+\t(c_finish_omp_clauses): Move not just OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT\n+\tmarked clauses last, but also OMP_CLAUSE_MAP_IMPLICIT.  Add\n+\tmap_firstprivate_head bitmap, set it for GOMP_MAP_FIRSTPRIVATE_POINTER\n+\tmaps and silently remove OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT if it is\n+\tpresent too.  For OMP_CLAUSE_MAP_IMPLICIT silently remove the clause\n+\tif present in map_head, map_field_head or map_firstprivate_head\n+\tbitmaps.\n+\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_affinity): New.\n+\t(c_parser_omp_clause_name, c_parser_omp_variable_list,\n+\tc_parser_omp_all_clauses, OMP_TASK_CLAUSE_MASK): Handle affinity clause.\n+\t* c-typeck.c (handle_omp_array_sections_1, handle_omp_array_sections,\n+\tc_finish_omp_clauses): Likewise.\n+\n 2021-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR c/100653"}, {"sha": "882c8eb475d55187e2530b445f94a2c5c64dc402", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,44 @@\n+2021-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (build_data_member_initialization): Use tsi_range.\n+\t(build_constexpr_constructor_member_initializers): Likewise.\n+\t(constexpr_fn_retval, cxx_eval_statement_list): Likewise.\n+\t(potential_constant_expression_1): Likewise.\n+\t* coroutines.cc (await_statement_expander): Likewise.\n+\t(await_statement_walker): Likewise.\n+\t* module.cc (trees_out::core_vals): Likewise.\n+\t* pt.c (tsubst_expr): Likewise.\n+\t* semantics.c (set_cleanup_locs): Likewise.\n+\n+2021-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100797\n+\tPR c++/95719\n+\t* call.c (build_over_call): Adjust base_binfo in\n+\tresolves_to_fixed_type_p case.\n+\n+2021-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* semantics.c (handle_omp_array_sections): Copy\n+\tOMP_CLAUSE_MAP_IMPLICIT.\n+\t(finish_omp_clauses): Move not just OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT\n+\tmarked clauses last, but also OMP_CLAUSE_MAP_IMPLICIT.  Add\n+\tmap_firstprivate_head bitmap, set it for GOMP_MAP_FIRSTPRIVATE_POINTER\n+\tmaps and silently remove OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT if it is\n+\tpresent too.  For OMP_CLAUSE_MAP_IMPLICIT silently remove the clause\n+\tif present in map_head, map_field_head or map_firstprivate_head\n+\tbitmaps.\n+\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_clause_affinity): New.\n+\t(cp_parser_omp_clause_name, cp_parser_omp_var_list_no_open,\n+\tcp_parser_omp_all_clauses, OMP_TASK_CLAUSE_MASK): Handle affinity\n+\tclause.\n+\t* semantics.c (handle_omp_array_sections_1, handle_omp_array_sections,\n+\tfinish_omp_clauses): Likewise.\n+\n 2021-05-27  Matthias Kretz  <kretz@kde.org>\n \n \tPR c++/100716"}, {"sha": "2fc8b6f1b00a3e3d982cb09c552be2680fe2c866", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,28 @@\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_iterator): New.\n+\t(show_omp_namelist): Handle iterators.\n+\t(show_omp_clauses): Handle affinity.\n+\t* gfortran.h (gfc_free_omp_namelist): New union with 'udr' and new 'ns'.\n+\t* match.c (gfc_free_omp_namelist): Add are to choose union element.\n+\t* openmp.c (gfc_free_omp_clauses, gfc_match_omp_detach,\n+\tgfc_match_omp_clause_reduction, gfc_match_omp_flush): Update\n+\tcall to gfc_free_omp_namelist.\n+\t(gfc_match_omp_variable_list): Likewise; permit preceeding whitespace.\n+\t(enum omp_mask1): Add OMP_CLAUSE_AFFINITY.\n+\t(gfc_match_iterator): New.\n+\t(gfc_match_omp_clauses): Use it; update call to gfc_free_omp_namelist.\n+\t(OMP_TASK_CLAUSES): Add OMP_CLAUSE_AFFINITY.\n+\t(gfc_match_omp_taskwait): Match depend clause.\n+\t(resolve_omp_clauses): Handle affinity; update for udr/union change.\n+\t(gfc_resolve_omp_directive): Resolve clauses of taskwait.\n+\t* st.c (gfc_free_statement): Update gfc_free_omp_namelist call.\n+\t* trans-openmp.c (gfc_trans_omp_array_reduction_or_udr): Likewise\n+\t(handle_iterator): New.\n+\t(gfc_trans_omp_clauses): Handle iterators for depend/affinity clause.\n+\t(gfc_trans_omp_taskwait): Handle depend clause.\n+\t(gfc_trans_omp_directive): Update call.\n+\n 2021-05-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/100602"}, {"sha": "cbe655fc01cce3d2b31fa4a2f1cc8335697a9588", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,69 @@\n+2021-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100778\n+\t* gcc.dg/vect/bb-slp-pr100778-1.c: New testcase.\n+\n+2021-05-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100797\n+\tPR c++/95719\n+\t* g++.dg/inherit/virtual15.C: New test.\n+\t* g++.dg/inherit/virtual15a.C: New file.\n+\n+2021-05-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/100791\n+\t* gcc.dg/pr100791.c: New testcase.\n+\n+2021-05-28  Richard Biener   <rguenther@suse.de>\n+\n+\tPR c/100803\n+\t* gcc.dg/gimplefe-error-11.c: New testcase.\n+\n+2021-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/99928\n+\t* c-c++-common/gomp/pr99928-8.c: Remove all xfails.\n+\t* c-c++-common/gomp/pr99928-9.c: Likewise.\n+\t* c-c++-common/gomp/pr99928-10.c: Likewise.\n+\t* c-c++-common/gomp/pr99928-16.c: New test.\n+\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/gomp/affinity-1.c: New test.\n+\t* c-c++-common/gomp/affinity-2.c: New test.\n+\t* c-c++-common/gomp/affinity-3.c: New test.\n+\t* c-c++-common/gomp/affinity-4.c: New test.\n+\t* c-c++-common/gomp/affinity-5.c: New test.\n+\t* c-c++-common/gomp/affinity-6.c: New test.\n+\t* c-c++-common/gomp/affinity-7.c: New test.\n+\t* gfortran.dg/gomp/affinity-clause-1.f90: New test.\n+\t* gfortran.dg/gomp/affinity-clause-2.f90: New test.\n+\t* gfortran.dg/gomp/affinity-clause-3.f90: New test.\n+\t* gfortran.dg/gomp/affinity-clause-4.f90: New test.\n+\t* gfortran.dg/gomp/affinity-clause-5.f90: New test.\n+\t* gfortran.dg/gomp/affinity-clause-6.f90: New test.\n+\t* gfortran.dg/gomp/depend-iterator-1.f90: New test.\n+\t* gfortran.dg/gomp/depend-iterator-2.f90: New test.\n+\t* gfortran.dg/gomp/depend-iterator-3.f90: New test.\n+\t* gfortran.dg/gomp/taskwait.f90: New test.\n+\n+2021-05-28  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\t    Richard Biener   <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/popcount4ll.c: Remove lp64 condition.\n+\tAdjust scanning pattern for !lp64.\n+\t* gcc.dg/tree-ssa/popcount5ll.c: Likewise.\n+\t* gcc.dg/tree-ssa/popcount4l.c: Adjust scanning pattern\n+\tfor ! int32plus.\n+\n+2021-05-28  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR tree-optimization/99398\n+\t* gcc.target/powerpc/vec-perm-ctor-run.c: New test.\n+\t* gcc.target/powerpc/vec-perm-ctor.c: New test.\n+\t* gcc.target/powerpc/vec-perm-ctor.h: New test.\n+\n 2021-05-27  Matthias Kretz  <kretz@kde.org>\n \n \tPR c++/100716"}, {"sha": "aca35043ceeca7f174280fd277fcfcfb5051ccf1", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48166757dcf46d92cf1795dd7333dda7030179c8/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48166757dcf46d92cf1795dd7333dda7030179c8/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=48166757dcf46d92cf1795dd7333dda7030179c8", "patch": "@@ -1,3 +1,7 @@\n+2021-05-28  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/depend-iterator-2.f90: New test.\n+\n 2021-05-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/lib/libgomp.exp (check_effective_target_openacc_cuda,"}]}