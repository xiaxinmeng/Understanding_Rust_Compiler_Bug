{"sha": "47d2cee50d64825872e97186da5a683dcabb5943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdkMmNlZTUwZDY0ODI1ODcyZTk3MTg2ZGE1YTY4M2RjYWJiNTk0Mw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-13T06:36:21Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-13T06:36:21Z"}, "message": "genrecog.c (add_to_sequence): When processing a MATCH_PARALLEL...\n\n\t* genrecog.c (add_to_sequence): When processing a MATCH_PARALLEL,\n\tif pred->singleton != PARALLEL, issue a warning and pretend it was.\n\tAlso issue a warning for any predicate we don't know about.\n\nFrom-SVN: r85933", "tree": {"sha": "6bcc0c4a0000dbc6ed0bd19b245971600293fbae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bcc0c4a0000dbc6ed0bd19b245971600293fbae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47d2cee50d64825872e97186da5a683dcabb5943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d2cee50d64825872e97186da5a683dcabb5943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47d2cee50d64825872e97186da5a683dcabb5943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d2cee50d64825872e97186da5a683dcabb5943/comments", "author": null, "committer": null, "parents": [{"sha": "8fe75e43623a88a049f0f33191fdffce583a69c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe75e43623a88a049f0f33191fdffce583a69c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fe75e43623a88a049f0f33191fdffce583a69c3"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "44b45aadad09e4da8918e8390f7e7725bed5bc5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47d2cee50d64825872e97186da5a683dcabb5943/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47d2cee50d64825872e97186da5a683dcabb5943/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47d2cee50d64825872e97186da5a683dcabb5943", "patch": "@@ -1,13 +1,19 @@\n+2004-08-12  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* genrecog.c (add_to_sequence): When processing a MATCH_PARALLEL,\n+\tif pred->singleton != PARALLEL, issue a warning and pretend it was.\n+\tAlso issue a warning for any predicate we don't know about.\n+\n 2004-08-12  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (internal_label_prefix): Export.\n \t(internal_label_prefix_len, struct ix86_address,\n \tix86_decompose_address, maybe_get_pool_constant,\n \tix86_fp_compare_code_to_integer, ix86_fp_comparison_codes,\n \tmemory_address_length): Export.\n-\t(any_fp_register_operand, fp_register_operand, \n+\t(any_fp_register_operand, fp_register_operand,\n \tregister_and_not_any_fp_reg_operand, register_and_not_fp_reg_operand,\n-\tx86_64_general_operand, x86_64_szext_general_operand, \n+\tx86_64_general_operand, x86_64_szext_general_operand,\n \tx86_64_nonmemory_operand, x86_64_movabs_operand,\n \tx86_64_szext_nonmemory_operand, x86_64_immediate_operand,\n \tx86_64_zext_immediate_operand, const_int_1_31_operand,\n@@ -23,10 +29,10 @@\n \tindex_register_operand, q_regs_operand, flags_reg_operand,\n \tnon_q_regs_operand, zero_extended_scalar_load_operand,\n \tvector_move_operand, no_seg_address_operand, sse_comparison_operator,\n-\tix86_comparison_operator, ix86_carry_flag_operator, \n+\tix86_comparison_operator, ix86_carry_flag_operator,\n \tfcmov_comparison_operator, promotable_binary_operator,\n \tcmp_fp_expander_operand, ext_register_operand, binary_fp_operator,\n-\tmult_operator, div_operator, arith_or_logical_operator, \n+\tmult_operator, div_operator, arith_or_logical_operator,\n \tmemory_displacement_operand, cmpsi_operand, long_memory_operand,\n \taligned_operand): Move to predicates.md as define_predicates.\n \t(tls_symbolic_operand_1): Remove.\n@@ -66,7 +72,7 @@\n \t(dbx_debug_hooks): Use new begin prologue hook.\n \t(dbxout_function_end): Emit N_ENSYM.\n \t* stab.def (N_BNSYM, N_ENSYM): Define and document these two new stabs.\n-\t\n+\n 2004-08-12  Janis Johnson  <janis187@us.ibm.com>\n \n \t* config/rs6000/altivec.h (vec_dst): Fix C++ functions whose first"}, {"sha": "c1d559ffe74287d782ee5bf40cfbb741b8484c9a", "filename": "gcc/genrecog.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47d2cee50d64825872e97186da5a683dcabb5943/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47d2cee50d64825872e97186da5a683dcabb5943/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=47d2cee50d64825872e97186da5a683dcabb5943", "patch": "@@ -974,8 +974,18 @@ add_to_sequence (rtx pattern, struct decision_head *last, const char *position,\n \t      {\n \t\ttest->u.pred.data = pred;\n \t\tallows_const_int = pred->codes[CONST_INT];\n-\t\tcode = pred->singleton;\n+\t\tif (was_code == MATCH_PARALLEL\n+\t\t    && pred->singleton != PARALLEL)\n+\t\t  message_with_line (pattern_lineno,\n+\t\t\t\"predicate '%s' used in match_parallel \"\n+\t\t\t\"does not allow only PARALLEL\", pred->name);\n+\t\telse\n+\t\t  code = pred->singleton;\n \t      }\n+\t    else\n+\t      message_with_line (pattern_lineno,\n+\t\t\t\"warning: unknown predicate '%s' in '%s' expression\",\n+\t\t\tpred_name, GET_RTX_NAME (was_code));\n \t  }\n \n \t/* Can't enforce a mode if we allow const_int.  */"}]}