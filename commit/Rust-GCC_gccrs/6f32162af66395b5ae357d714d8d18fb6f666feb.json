{"sha": "6f32162af66395b5ae357d714d8d18fb6f666feb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYzMjE2MmFmNjYzOTViNWFlMzU3ZDcxNGQ4ZDE4ZmI2ZjY2NmZlYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-10-11T21:33:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-10-11T21:33:09Z"}, "message": "typeck2.c (store_init_value): Don't re-digest a bracketed initializer.\n\n        * typeck2.c (store_init_value): Don't re-digest a bracketed\n        initializer.\n\n        * class.c (finish_struct_anon): Use TYPE_ANONYMOUS_P instead of\n        ANON_AGGR_TYPE_P.\n\nFrom-SVN: r46202", "tree": {"sha": "8cbf91a7b6e5e66a0e74ccc4dc69717d918c4269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cbf91a7b6e5e66a0e74ccc4dc69717d918c4269"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f32162af66395b5ae357d714d8d18fb6f666feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f32162af66395b5ae357d714d8d18fb6f666feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f32162af66395b5ae357d714d8d18fb6f666feb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f32162af66395b5ae357d714d8d18fb6f666feb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8206c799f26f57e250c2035e7343344a80df646e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8206c799f26f57e250c2035e7343344a80df646e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8206c799f26f57e250c2035e7343344a80df646e"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "4c4cdce311aef185a8070eab5189bb35f9c72799", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f32162af66395b5ae357d714d8d18fb6f666feb", "patch": "@@ -1,3 +1,11 @@\n+2001-10-11  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* typeck2.c (store_init_value): Don't re-digest a bracketed\n+\tinitializer.\n+\n+\t* class.c (finish_struct_anon): Use TYPE_ANONYMOUS_P instead of\n+\tANON_AGGR_TYPE_P.\n+\n 2001-10-11  Richard Henderson  <rth@redhat.com>\n \n \t* class.c (build_vtable_entry_ref): Create a VTABLE_REF instead"}, {"sha": "1fa9a125dfbfa33c910759ea3ab012acce90e2c4", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6f32162af66395b5ae357d714d8d18fb6f666feb", "patch": "@@ -2932,10 +2932,12 @@ finish_struct_anon (t)\n \t\t declared, but we also find nested classes by noticing\n \t\t the TYPE_DECL that we create implicitly.  You're\n \t\t allowed to put one anonymous union inside another,\n-\t\t though, so we explicitly tolerate that.  */\n+\t\t though, so we explicitly tolerate that.  We use\n+\t\t TYPE_ANONYMOUS_P rather than ANON_AGGR_TYPE_P so that\n+\t\t we also allow unnamed types used for defining fields.  */\n \t      if (DECL_ARTIFICIAL (elt) \n \t\t  && (!DECL_IMPLICIT_TYPEDEF_P (elt)\n-\t\t      || ANON_AGGR_TYPE_P (TREE_TYPE (elt))))\n+\t\t      || TYPE_ANONYMOUS_P (TREE_TYPE (elt))))\n \t\tcontinue;\n \n \t      if (DECL_NAME (elt) == constructor_name (t))"}, {"sha": "fbedc13426a325f2a0171ec927d83996cf7b6d7b", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=6f32162af66395b5ae357d714d8d18fb6f666feb", "patch": "@@ -389,9 +389,15 @@ store_init_value (decl, init)\n \n   /* End of special C++ code.  */\n \n-  /* Digest the specified initializer into an expression.  */\n-\n-  value = digest_init (type, init, (tree *) 0);\n+  /* We might have already run this bracketed initializer through\n+     digest_init.  Don't do so again.  */\n+  if (TREE_CODE (init) == CONSTRUCTOR && TREE_HAS_CONSTRUCTOR (init)\n+      && TREE_TYPE (init)\n+      && TYPE_MAIN_VARIANT (TREE_TYPE (init)) == TYPE_MAIN_VARIANT (type))\n+    value = init;\n+  else\n+    /* Digest the specified initializer into an expression.  */\n+    value = digest_init (type, init, (tree *) 0);\n \n   /* Store the expression if valid; else report error.  */\n "}, {"sha": "98d8c20653b694c3ecaaa5edaff423e767e9a875", "filename": "gcc/testsuite/g++.dg/other/anon2.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f32162af66395b5ae357d714d8d18fb6f666feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon2.C?ref=6f32162af66395b5ae357d714d8d18fb6f666feb", "patch": "@@ -0,0 +1,22 @@\n+// Test that we can have an unnamed struct inside an anonymous union.\n+\n+struct A\n+{\n+  union\n+  {\n+    struct { int i; } foo;\n+  };\n+};\n+\n+static union\n+{\n+  struct { int i; } foo;\n+};\n+\n+int main ()\n+{\n+  union\n+  {\n+    struct { int i; } bar;\n+  };\n+}"}]}