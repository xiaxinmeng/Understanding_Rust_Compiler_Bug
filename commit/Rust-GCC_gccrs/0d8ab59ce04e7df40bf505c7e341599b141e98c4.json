{"sha": "0d8ab59ce04e7df40bf505c7e341599b141e98c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4YWI1OWNlMDRlN2RmNDBiZjUwNWM3ZTM0MTU5OWIxNDFlOThjNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-10-20T06:49:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-10-20T06:49:13Z"}, "message": "re PR c++/67064 (Register asm variable broken)\n\n\tPR c++/67064\n\n\t* semantics.c (force_paren_expr): Don't mess with hard register vars.\n\nFrom-SVN: r229021", "tree": {"sha": "3a7b296e2e2611189857913cc24ab29633d02d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a7b296e2e2611189857913cc24ab29633d02d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d8ab59ce04e7df40bf505c7e341599b141e98c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8ab59ce04e7df40bf505c7e341599b141e98c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8ab59ce04e7df40bf505c7e341599b141e98c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8ab59ce04e7df40bf505c7e341599b141e98c4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "620cf5ea84a3da4730462b553c5e3c17e39d8ed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/620cf5ea84a3da4730462b553c5e3c17e39d8ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/620cf5ea84a3da4730462b553c5e3c17e39d8ed9"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "6ffa733c0ac053c99584e4930ec19f646053eb7e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d8ab59ce04e7df40bf505c7e341599b141e98c4", "patch": "@@ -1,5 +1,8 @@\n 2015-10-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67064\n+\t* semantics.c (force_paren_expr): Don't mess with hard register vars.\n+\n \tImplement N4268, Do constant evaluation of all non-type template args.\n \t* parser.c (cp_parser_template_argument): For C++1z just parse a\n \tconstant-expression."}, {"sha": "c0a8b32276782a902b4ee05e8709fde063ec12a8", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=0d8ab59ce04e7df40bf505c7e341599b141e98c4", "patch": "@@ -1660,6 +1660,8 @@ force_paren_expr (tree expr)\n     REF_PARENTHESIZED_P (expr) = true;\n   else if (type_dependent_expression_p (expr))\n     expr = build1 (PAREN_EXPR, TREE_TYPE (expr), expr);\n+  else if (VAR_P (expr) && DECL_HARD_REGISTER (expr))\n+    /* We can't bind a hard register variable to a reference.  */;\n   else\n     {\n       cp_lvalue_kind kind = lvalue_kind (expr);"}, {"sha": "afb392bc5dae4f2788e1c1a81758fb7a9bf3fec7", "filename": "gcc/testsuite/g++.dg/parse/parens3.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparens3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8ab59ce04e7df40bf505c7e341599b141e98c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparens3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparens3.C?ref=0d8ab59ce04e7df40bf505c7e341599b141e98c4", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/67064\n+// { dg-options \"-w\" }\n+\n+struct s {\n+  int i;\n+};\n+\n+register struct s *reg __asm__( \"1\" );\n+\n+int f(void)\n+{\n+  int i;\n+\n+  i = reg->i;\n+  i = (reg)->i;\n+\n+  return i;\n+}"}]}