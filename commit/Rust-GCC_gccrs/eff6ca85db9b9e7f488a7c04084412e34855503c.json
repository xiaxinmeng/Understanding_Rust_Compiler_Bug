{"sha": "eff6ca85db9b9e7f488a7c04084412e34855503c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmNmNhODVkYjliOWU3ZjQ4OGE3YzA0MDg0NDEyZTM0ODU1NTAzYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-10-26T17:54:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-10-26T17:54:50Z"}, "message": "crtfastmath.c (set_fast_math): Use __builtin_ia32_fxsave.\n\n\t* config/i386/crtfastmath.c (set_fast_math): Use __builtin_ia32_fxsave.\n\tClear only fxsave.mxcsr_mask.  Use saved mxcsr from fxsave structure\n\twhen appropriate.  Correct structure element types.\n\t* config/i386/t-crtfm (crtfastmath.o): Compile with -mfxsr, remove\n\t-minline-all-stringops from compile flags.\n\nFrom-SVN: r192855", "tree": {"sha": "f77b722f6470dec4c6e4d13c1f5218250646f0c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f77b722f6470dec4c6e4d13c1f5218250646f0c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eff6ca85db9b9e7f488a7c04084412e34855503c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff6ca85db9b9e7f488a7c04084412e34855503c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff6ca85db9b9e7f488a7c04084412e34855503c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff6ca85db9b9e7f488a7c04084412e34855503c/comments", "author": null, "committer": null, "parents": [{"sha": "85c2f96c1cd3d1cbdbd20ad26f7d26dafbca087c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c2f96c1cd3d1cbdbd20ad26f7d26dafbca087c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c2f96c1cd3d1cbdbd20ad26f7d26dafbca087c"}], "stats": {"total": 51, "additions": 32, "deletions": 19}, "files": [{"sha": "3f073ab12eb0bb03e5bf114dd8054fde13a661fb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=eff6ca85db9b9e7f488a7c04084412e34855503c", "patch": "@@ -1,10 +1,18 @@\n+2012-10-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/crtfastmath.c (set_fast_math): Use __builtin_ia32_fxsave.\n+\tClear only fxsave.mxcsr_mask.  Use saved mxcsr from fxsave structure\n+\twhen appropriate.  Correct structure element types.\n+\t* config/i386/t-crtfm (crtfastmath.o): Compile with -mfxsr, remove\n+\t-minline-all-stringops from compile flags.\n+\n 2012-10-25  Ralf Cors\u00e9pius <ralf.corsepius@rtems.org>\n \n \t* config.host (sparc64-*-rtems*): Remove sparc/t-elf.\n \n 2012-10-25  Ralf Cors\u00e9pius <ralf.corsepius@rtems.org>\n \n-\t* config.host (sh*-*-rtems*): Add sh*-*-elf*'s extra_parts. \n+\t* config.host (sh*-*-rtems*): Add sh*-*-elf*'s extra_parts.\n \n 2012-10-25  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n "}, {"sha": "e923d8f46692e930e2fe2062f1ef88ace8514cba", "filename": "libgcc/config/i386/crtfastmath.c", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcrtfastmath.c?ref=eff6ca85db9b9e7f488a7c04084412e34855503c", "patch": "@@ -91,36 +91,41 @@ set_fast_math (void)\n \treturn;\n #endif /* __sun__ && __svr4__ */\n \n-      mxcsr = __builtin_ia32_stmxcsr () | MXCSR_FTZ;\n-\n       if (edx & bit_FXSAVE)\n \t{\n \t  /* Check if DAZ is available.  */\n \t  struct\n \t    {\n-\t      unsigned short int cwd;\n-\t      unsigned short int swd;\n-\t      unsigned short int twd;\n-\t      unsigned short int fop;\n-\t      long int fip;\n-\t      long int fcs;\n-\t      long int foo;\n-\t      long int fos;\n-\t      long int mxcsr;\n-\t      long int mxcsr_mask;\n-\t      long int st_space[32];\n-\t      long int xmm_space[32];\n-\t      long int padding[56];\n+\t      unsigned short cwd;\n+\t      unsigned short swd;\n+\t      unsigned short twd;\n+\t      unsigned short fop;\n+\t      unsigned int fip;\n+\t      unsigned int fcs;\n+\t      unsigned int foo;\n+\t      unsigned int fos;\n+\t      unsigned int mxcsr;\n+\t      unsigned int mxcsr_mask;\n+\t      unsigned int st_space[32];\n+\t      unsigned int xmm_space[32];\n+\t      unsigned int padding[56];\n \t    } __attribute__ ((aligned (16))) fxsave;\n \n-\t  __builtin_memset (&fxsave, 0, sizeof (fxsave));\n+\t  /* This is necessary since some implementations of FXSAVE\n+\t     do not modify reserved areas within the image.  */\n+\t  fxsave.mxcsr_mask = 0;\n+\n+\t  __builtin_ia32_fxsave (&fxsave);\n \n-\t  asm volatile (\"fxsave %0\" : \"=m\" (fxsave) : \"m\" (fxsave));\n+\t  mxcsr = fxsave.mxcsr;\n \n \t  if (fxsave.mxcsr_mask & MXCSR_DAZ)\n \t    mxcsr |= MXCSR_DAZ;\n \t}\n+      else\n+\tmxcsr = __builtin_ia32_stmxcsr ();\n \n+      mxcsr |= MXCSR_FTZ;\n       __builtin_ia32_ldmxcsr (mxcsr);\n     }\n #else"}, {"sha": "b9da06bfd20984364fc4cbbd95bd2d9c2314a7b4", "filename": "libgcc/config/i386/t-crtfm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2Fconfig%2Fi386%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff6ca85db9b9e7f488a7c04084412e34855503c/libgcc%2Fconfig%2Fi386%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-crtfm?ref=eff6ca85db9b9e7f488a7c04084412e34855503c", "patch": "@@ -1,4 +1,4 @@\n # This is an endfile, Use -minline-all-stringops to ensure\n # that __builtin_memset doesn't refer to the lib function memset().\n crtfastmath.o: $(srcdir)/config/i386/crtfastmath.c\n-\t$(gcc_compile) -msse -minline-all-stringops -c $<\n+\t$(gcc_compile) -mfxsr -msse -c $<"}]}