{"sha": "5f1db7627f6eea2050c3d71f17bca5ecf586a813", "node_id": "C_kwDOANBUbNoAKDVmMWRiNzYyN2Y2ZWVhMjA1MGMzZDcxZjE3YmNhNWVjZjU4NmE4MTM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-24T12:23:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-28T19:22:51Z"}, "message": "libstdc++: Improve types used as iterators in testsuite\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/25_algorithms/copy/34595.cc: Add missing operation\n\tfor type used as an iterator.\n\t* testsuite/25_algorithms/unique_copy/check_type.cc: Likewise.", "tree": {"sha": "ad53750d683743b6438aa0ea85203ad7720b96fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad53750d683743b6438aa0ea85203ad7720b96fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f1db7627f6eea2050c3d71f17bca5ecf586a813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1db7627f6eea2050c3d71f17bca5ecf586a813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1db7627f6eea2050c3d71f17bca5ecf586a813", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1db7627f6eea2050c3d71f17bca5ecf586a813/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4000d722e609bbbb1e923721b54911bb784eeec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4000d722e609bbbb1e923721b54911bb784eeec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4000d722e609bbbb1e923721b54911bb784eeec3"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "513425a5a2c1eafcb959954ee4351f0f25e131d4", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/34595.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1db7627f6eea2050c3d71f17bca5ecf586a813/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F34595.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1db7627f6eea2050c3d71f17bca5ecf586a813/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F34595.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F34595.cc?ref=5f1db7627f6eea2050c3d71f17bca5ecf586a813", "patch": "@@ -27,11 +27,12 @@ class Counting_output_iterator\n public:\n   Counting_output_iterator() : c(0) {}\n   Counting_output_iterator& operator++() { return *this; }\n+  Counting_output_iterator operator++(int) { return *this; }\n   Counting_output_iterator& operator*() { return *this; }\n-  \n+\n   template <typename T>\n   void operator=(const T&) { ++c; }\n-  \n+\n   std::size_t current_counter() const { return c; }\n };\n "}, {"sha": "27b35794e8a1ae17213826815331f355bb854cc6", "filename": "libstdc++-v3/testsuite/25_algorithms/unique_copy/check_type.cc", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1db7627f6eea2050c3d71f17bca5ecf586a813/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Fcheck_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1db7627f6eea2050c3d71f17bca5ecf586a813/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Fcheck_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Fcheck_type.cc?ref=5f1db7627f6eea2050c3d71f17bca5ecf586a813", "patch": "@@ -25,27 +25,35 @@\n using __gnu_test::input_iterator_wrapper;\n using __gnu_test::output_iterator_wrapper;\n \n-struct S1 { };\n+template<typename T>\n+struct iter_facade\n+{\n+  T& operator++();\n+  T operator++(int);\n+  T& operator*() const;\n+};\n+\n+struct S1 : iter_facade<S1> { };\n \n-struct S2\n+struct S2 : iter_facade<S2>\n {\n   S2(const S1&) {}\n };\n \n-bool \n+bool\n operator==(const S1&, const S1&) {return true;}\n \n-struct X1 { };\n+struct X1 : iter_facade<X1>  { };\n \n-struct X2\n+struct X2 : iter_facade<X2>\n {\n   X2(const X1&) {}\n };\n \n-bool \n+bool\n predicate(const X1&, const X1&) {return true;}\n \n-output_iterator_wrapper<S2> \n+output_iterator_wrapper<S2>\n test1(input_iterator_wrapper<S1>& s1, output_iterator_wrapper<S2>& s2)\n { return std::unique_copy(s1, s1, s2); }\n "}]}