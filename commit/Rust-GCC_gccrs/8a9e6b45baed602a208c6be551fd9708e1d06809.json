{"sha": "8a9e6b45baed602a208c6be551fd9708e1d06809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5ZTZiNDViYWVkNjAyYTIwOGM2YmU1NTFmZDk3MDhlMWQwNjgwOQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-05-21T09:22:26Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-05-21T09:22:26Z"}, "message": "Stop the cfglayout code from failing an assert when called from hw-doloop.\n\n\t* cfgrtl.c (cfg_layout_initialize): Weaken assert to only trigger if\n\tflag_reorder_blocks_and_partition.\n\t* hw-doloop.c (reorg_loops): Avoid reordering if that flag is set.\n\nFrom-SVN: r210683", "tree": {"sha": "f6876e2d660634f5c9a6e15d561f6b1238bc678b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6876e2d660634f5c9a6e15d561f6b1238bc678b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a9e6b45baed602a208c6be551fd9708e1d06809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9e6b45baed602a208c6be551fd9708e1d06809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9e6b45baed602a208c6be551fd9708e1d06809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9e6b45baed602a208c6be551fd9708e1d06809/comments", "author": null, "committer": null, "parents": [{"sha": "c4e5de1b1af1b33acbbe5a2271ff37405d1d17b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e5de1b1af1b33acbbe5a2271ff37405d1d17b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e5de1b1af1b33acbbe5a2271ff37405d1d17b5"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "a80370b9116c235bed05de091eff296e007ddc58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a9e6b45baed602a208c6be551fd9708e1d06809", "patch": "@@ -1,3 +1,9 @@\n+2014-05-21  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* cfgrtl.c (cfg_layout_initialize): Weaken assert to only trigger if\n+\tflag_reorder_blocks_and_partition.\n+\t* hw-doloop.c (reorg_loops): Avoid reordering if that flag is set.\n+\n 2014-05-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54236"}, {"sha": "49faf2e0e631485fbcf0acee16f2086ed9d8f319", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=8a9e6b45baed602a208c6be551fd9708e1d06809", "patch": "@@ -4213,14 +4213,14 @@ cfg_layout_initialize (unsigned int flags)\n   rtx x;\n   basic_block bb;\n \n-  /* Once bb reordering is complete, cfg layout mode should not be re-entered.\n-     Entering cfg layout mode will perform optimizations on the cfg that\n-     could affect the bb layout negatively or even require fixups. An\n-     example of the latter is if edge forwarding performed when optimizing\n-     the cfg layout required moving a block from the hot to the cold section\n-     under -freorder-blocks-and-partition. This would create an illegal\n-     partitioning unless some manual fixup was performed.  */\n-  gcc_assert (!crtl->bb_reorder_complete);\n+  /* Once bb partitioning is complete, cfg layout mode should not be\n+     re-entered.  Entering cfg layout mode may require fixups.  As an\n+     example, if edge forwarding performed when optimizing the cfg\n+     layout required moving a block from the hot to the cold\n+     section. This would create an illegal partitioning unless some\n+     manual fixup was performed.  */\n+  gcc_assert (!(crtl->bb_reorder_complete\n+\t\t&& flag_reorder_blocks_and_partition));\n \n   initialize_original_copy_tables ();\n "}, {"sha": "d18276103b4a67fcc83ce986fcd7b2e6bcc1d3f2", "filename": "gcc/hw-doloop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2Fhw-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a9e6b45baed602a208c6be551fd9708e1d06809/gcc%2Fhw-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.c?ref=8a9e6b45baed602a208c6be551fd9708e1d06809", "patch": "@@ -636,7 +636,9 @@ reorg_loops (bool do_reorder, struct hw_doloop_hooks *hooks)\n \n   loops = discover_loops (&loop_stack, hooks);\n \n-  if (do_reorder)\n+  /* We can't enter cfglayout mode anymore if basic block partitioning\n+     already happened.  */\n+  if (do_reorder && !flag_reorder_blocks_and_partition)\n     {\n       reorder_loops (loops);\n       free_loops (loops);"}]}