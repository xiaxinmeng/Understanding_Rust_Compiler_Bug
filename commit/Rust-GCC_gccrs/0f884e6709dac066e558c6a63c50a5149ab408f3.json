{"sha": "0f884e6709dac066e558c6a63c50a5149ab408f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4ODRlNjcwOWRhYzA2NmU1NThjNmE2M2M1MGE1MTQ5YWI0MDhmMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-12-02T14:10:23Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-12-02T14:10:23Z"}, "message": "Stop only if there aren't any usable algorithms\n\nWhen searching for an usable algorithm with -minline-all-stringops,\ndecide_alg stops when it sees libcall even if there is a usable\nalgorithm.  It goes into an infinite loop.  This patch changes\ndecide_alg to stop searching only if there aren't any usable algorithms.\nTestd on Linux/x86-64.\n\n\ngcc/\n\n\tPR target/64108\n\t* config/i386/i386.c (decide_alg): Stop only if there aren't\n\tany usable algorithms.\n\ngcc/testsuite/\n\n\tPR target/64108\n\t* gcc.target/i386/memset-strategy-2.c: New test.\n\nFrom-SVN: r218272", "tree": {"sha": "8519c84ca3cfd4e5b3c4e7acd089cd6330aa87ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8519c84ca3cfd4e5b3c4e7acd089cd6330aa87ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f884e6709dac066e558c6a63c50a5149ab408f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f884e6709dac066e558c6a63c50a5149ab408f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f884e6709dac066e558c6a63c50a5149ab408f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f884e6709dac066e558c6a63c50a5149ab408f3/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb98f8869b20ecc3ee1f6cb473ab6d7b3c34ece7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb98f8869b20ecc3ee1f6cb473ab6d7b3c34ece7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb98f8869b20ecc3ee1f6cb473ab6d7b3c34ece7"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "c746d0f8a5134ea597447a2f69a5ec0d2d9b6d95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f884e6709dac066e558c6a63c50a5149ab408f3", "patch": "@@ -1,3 +1,9 @@\n+2014-12-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/64108\n+\t* config/i386/i386.c (decide_alg): Stop only if there aren't\n+\tany usable algorithms.\n+\n 2014-12-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/63718"}, {"sha": "211c9e6a65ecccd956daf3b60cdc1d8a4b914f7b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0f884e6709dac066e558c6a63c50a5149ab408f3", "patch": "@@ -24464,7 +24464,8 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n \t\t      *noalign = alg_noalign;\n \t\t      return alg;\n \t\t    }\n-\t\t  break;\n+\t\t  else if (!any_alg_usable_p)\n+\t\t    break;\n \t\t}\n \t      else if (alg_usable_p (candidate, memset))\n \t\t{"}, {"sha": "5d668494f8acc854a30bbae43be84e8d29a84f41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f884e6709dac066e558c6a63c50a5149ab408f3", "patch": "@@ -1,3 +1,8 @@\n+2014-12-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/64108\n+\t* gcc.target/i386/memset-strategy-2.c: New test.\n+\n 2014-12-02  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/torture/20141202-1.c: New testcase."}, {"sha": "aafa54d004f8a199e4b3eaca4487c736b7c93eef", "filename": "gcc/testsuite/gcc.target/i386/memset-strategy-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f884e6709dac066e558c6a63c50a5149ab408f3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-strategy-2.c?ref=0f884e6709dac066e558c6a63c50a5149ab408f3", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/64108 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=atom -mmemset-strategy=libcall:-1:align -minline-all-stringops\" } */\n+\n+char a[2048];\n+void t (void)\n+{\n+  __builtin_memset (a, 1, 2048);\n+}\n+"}]}