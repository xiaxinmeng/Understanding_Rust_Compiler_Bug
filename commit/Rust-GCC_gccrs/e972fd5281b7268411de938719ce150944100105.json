{"sha": "e972fd5281b7268411de938719ce150944100105", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3MmZkNTI4MWI3MjY4NDExZGU5Mzg3MTljZTE1MDk0NDEwMDEwNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2011-09-06T15:12:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T15:12:52Z"}, "message": "Makefile.in, [...] (gnattools, [...]): New targets.\n\n\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in\n\t(gnattools, regnattools, cross-gnattools, canadian-gnattools,\n\tgnatlib, gnatlib-sjlj, gnatlib-zcx, gnatlib-shared, gnatlib_and_tools):\n\tNew targets.\n\t(TOOLS_FLAGS_TO_PASS): New.\n\t(../stamp-tools): Reintroduce, to avoid merge conflicts.\n\nFrom-SVN: r178600", "tree": {"sha": "aac4ca685c6551050d6934556290bf34e1b67b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aac4ca685c6551050d6934556290bf34e1b67b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e972fd5281b7268411de938719ce150944100105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e972fd5281b7268411de938719ce150944100105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e972fd5281b7268411de938719ce150944100105", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e972fd5281b7268411de938719ce150944100105/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "124f1be6a97eb0263df56cb34c8ce9a8de405f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124f1be6a97eb0263df56cb34c8ce9a8de405f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124f1be6a97eb0263df56cb34c8ce9a8de405f1e"}], "stats": {"total": 109, "additions": 103, "deletions": 6}, "files": [{"sha": "db43918f802918328a8f2ca75cf54770c7979386", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e972fd5281b7268411de938719ce150944100105", "patch": "@@ -1,3 +1,12 @@\n+2011-09-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in\n+\t(gnattools, regnattools, cross-gnattools, canadian-gnattools,\n+\tgnatlib, gnatlib-sjlj, gnatlib-zcx, gnatlib-shared, gnatlib_and_tools):\n+\tNew targets.\n+\t(TOOLS_FLAGS_TO_PASS): New.\n+\t(../stamp-tools): Reintroduce, to avoid merge conflicts.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch10.adb, impunit.ads, impunit.adb (Not_Impl_Defined_Unit): New"}, {"sha": "f199a69dac232d857ff0ff995bdf71d6a49cc9a1", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=e972fd5281b7268411de938719ce150944100105", "patch": "@@ -545,6 +545,39 @@ gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target\n gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)\n \t+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS)\n \n+# use target-gcc target-gnatmake target-gnatbind target-gnatlink\n+gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force\n+\t$(MAKE) -C ada $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) \\\n+\t  ADA_INCLUDES=\"-I- -I../rts\"\\\n+\t  CC=\"../../xgcc -B../../\" GNATBIND=\"../../gnatbind\"  gnattools1\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2\n+\n+regnattools:\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools1-re\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2\n+\n+cross-gnattools: force\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools1-re\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools4\n+\n+canadian-gnattools: force\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools1-re\n+\t$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2\n+\n+gnatlib gnatlib-sjlj gnatlib-zcx gnatlib-shared: ada/s-oscons.ads force\n+\t$(MAKE) -C ada $(FLAGS_TO_PASS)  \\\n+\t   GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n+\t   GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t   TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t   THREAD_KIND=\"$(THREAD_KIND)\" \\\n+\t   TRACE=\"$(TRACE)\" \\\n+\t   FORCE_DEBUG_ADAFLAGS=\"$(FORCE_DEBUG_ADAFLAGS)\" \\\n+\t   $@\n+\n+# use only for native compiler\n+gnatlib_and_tools: gnatlib gnattools\n+\n # use cross-gcc\n gnat-cross: force\n \tmake $(GNAT1_ADA_OBJS) CC=\"gcc -B../stage1/\" CFLAGS=\"-S -gnatp\" \\"}, {"sha": "fe87cbf3ffbace13df876efa038594b3489094cc", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 61, "deletions": 6, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e972fd5281b7268411de938719ce150944100105/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=e972fd5281b7268411de938719ce150944100105", "patch": "@@ -2315,8 +2315,32 @@ ADA_INCLUDE_SRCS =\\\n \n LIBGNAT=../$(RTSDIR)/libgnat.a\n \n+TOOLS_FLAGS_TO_PASS=\t\t\\\n+\t\"CC=$(CC)\" \t\t\\\n+\t\"CFLAGS=$(CFLAGS)\"\t\\\n+\t\"LDFLAGS=$(LDFLAGS)\"\t\\\n+\t\"ADAFLAGS=$(ADAFLAGS)\"\t\\\n+\t\"INCLUDES=$(INCLUDES_FOR_SUBDIR)\"\\\n+\t\"ADA_INCLUDES=$(ADA_INCLUDES) $(ADA_INCLUDES_FOR_SUBDIR)\"\\\n+\t\"libsubdir=$(libsubdir)\"\t\\\n+\t\"exeext=$(exeext)\"\t\\\n+\t\"fsrcdir=$(fsrcdir)\"\t\\\n+\t\"srcdir=$(fsrcdir)\"\t\\\n+\t\"TOOLS_LIBS=$(TOOLS_LIBS) $(TGT_LIB)\"\t\\\n+\t\"GNATMAKE=$(GNATMAKE)\"\t\\\n+\t\"GNATLINK=$(GNATLINK)\"\t\\\n+\t\"GNATBIND=$(GNATBIND)\"\n+\n GCC_LINK=$(CC) $(GCC_LINK_FLAGS) $(ADA_INCLUDES)\n \n+# Build directory for the tools. Let's copy the target-dependent\n+# sources using the same mechanism as for gnatlib. The other sources are\n+# accessed using the vpath directive below\n+# Note: dummy target, stamp-tools is mainly handled by gnattools.\n+\n+../stamp-tools:\n+\ttouch ../stamp-tools\n+\n # when compiling the tools, the runtime has to be first on the path so that\n # it hides the runtime files lying with the rest of the sources\n ifeq ($(TOOLSCASE),native)\n@@ -2335,7 +2359,38 @@ ifeq ($(TOOLSCASE),cross)\n   vpath %.h   ../\n endif\n \n-common-tools:\n+# gnatmake/link tools cannot always be built with gnatmake/link for bootstrap\n+# reasons: gnatmake should be built with a recent compiler, a recent compiler\n+# may not generate ALI files compatible with an old gnatmake so it is important\n+# to be able to build gnatmake without a version of gnatmake around. Once\n+# everything has been compiled once, gnatmake can be recompiled with itself\n+# (see target gnattools1-re)\n+gnattools1: ../stamp-tools ../stamp-gnatlib-$(RTSDIR)\n+\t$(MAKE) -C tools -f ../Makefile $(TOOLS_FLAGS_TO_PASS) \\\n+\t  TOOLSCASE=native \\\n+\t  ../../gnatmake$(exeext) ../../gnatlink$(exeext)\n+\n+# gnatmake/link can be built with recent gnatmake/link if they are available.\n+# This is especially convenient for building cross tools or for rebuilding\n+# the tools when the original bootstrap has already be done.\n+gnattools1-re: ../stamp-tools\n+\t$(MAKE) -C tools -f ../Makefile $(TOOLS_FLAGS_TO_PASS) \\\n+\t  TOOLSCASE=cross INCLUDES=\"\" gnatmake-re gnatlink-re\n+\n+# these tools are built with gnatmake & are common to native and cross\n+gnattools2: ../stamp-tools\n+\t$(MAKE) -C tools -f ../Makefile $(TOOLS_FLAGS_TO_PASS) \\\n+\t  TOOLSCASE=native common-tools $(EXTRA_GNATTOOLS)\n+\n+# those tools are only built for the cross version\n+gnattools4: ../stamp-tools\n+ifeq ($(ENABLE_VXADDR2LINE),true)\n+\t$(MAKE) -C tools -f ../Makefile $(TOOLS_FLAGS_TO_PASS) \\\n+\t  TOOLSCASE=cross top_buildir=../../.. \\\n+\t  ../../vxaddr2line$(exeext)\n+endif\n+\n+common-tools: ../stamp-tools\n \t$(GNATMAKE) -j0 -c -b $(ADA_INCLUDES) \\\n \t  --GNATBIND=\"$(GNATBIND)\" --GCC=\"$(CC) $(ALL_ADAFLAGS)\" \\\n \t  gnatchop gnatcmd gnatkr gnatls gnatprep gnatxref gnatfind gnatname \\\n@@ -2359,22 +2414,22 @@ common-tools:\n \t$(GNATLINK) -v gnatclean -o ../../gnatclean$(exeext) \\\n \t\t--GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n-../../gnatsym$(exeext): \n+../../gnatsym$(exeext): ../stamp-tools\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatsym --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatsym\n \t$(GNATLINK) -v gnatsym -o $@ --GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n-../../gnatdll$(exeext): \n+../../gnatdll$(exeext): ../stamp-tools\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatdll --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatdll\n \t$(GNATLINK) -v gnatdll -o $@ --GCC=\"$(GCC_LINK)\" $(TOOLS_LIBS)\n \n-../../vxaddr2line$(exeext): targext.o\n+../../vxaddr2line$(exeext): ../stamp-tools targext.o\n \t$(GNATMAKE) -c  $(ADA_INCLUDES) vxaddr2line --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vxaddr2line\n \t$(GNATLINK) -v vxaddr2line -o $@ --GCC=\"$(GCC_LINK)\" targext.o $(CLIB)\n \n-gnatmake-re:  link.o targext.o\n+gnatmake-re: ../stamp-tools link.o targext.o\n \t$(GNATMAKE) -j0 $(ADA_INCLUDES) -u sdefault --GCC=\"$(CC) $(MOST_ADA_FLAGS)\"\n \t$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatmake --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake\n@@ -2385,7 +2440,7 @@ gnatmake-re:  link.o targext.o\n # with the former version of gnatlink itself which cannot override itself.\n # gnatlink-re cannot be run at the same time as gnatmake-re, hence the\n # dependency\n-gnatlink-re: link.o targext.o gnatmake-re\n+gnatlink-re: ../stamp-tools link.o targext.o gnatmake-re\n \t$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatlink --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink\n \t$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \\"}]}