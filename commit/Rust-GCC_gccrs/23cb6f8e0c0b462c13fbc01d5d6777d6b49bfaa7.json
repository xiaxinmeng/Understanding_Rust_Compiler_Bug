{"sha": "23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjYjZmOGUwYzBiNDYyYzEzZmJjMDFkNWQ2Nzc3ZDZiNDliZmFhNw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-09-28T19:32:31Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-09-28T19:32:31Z"}, "message": "[Darwin, PPC, Mode Iterators 4/n] Update macho_high.\n\nDrop the expander and use a mode iterator on the define_insn\nfor @macho_high_<mode> instead.\n\ngcc/ChangeLog:\n\n2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c (gen_macho_high): Amend to include the mode\n\targument.\n\t(machopic_indirect_data_reference): Amend gen_macho_high call\n\tto include mode argument.\n\t(machopic_legitimize_pic_address): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_legitimize_address):\n\t* config/rs6000/darwin.md (@macho_high_<mode>): New, replaces\n\tthe macho_high expander and two define_insn entries.\n\nFrom-SVN: r276256", "tree": {"sha": "06f769200357c1179cb4e34c6e04e0a1430012ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06f769200357c1179cb4e34c6e04e0a1430012ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60674b3f8aca8f2b41580ce06b44117a9e6ab52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60674b3f8aca8f2b41580ce06b44117a9e6ab52e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60674b3f8aca8f2b41580ce06b44117a9e6ab52e"}], "stats": {"total": 51, "additions": 22, "deletions": 29}, "files": [{"sha": "88fed01cd52017d654e8d8c6eae040322390832d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "patch": "@@ -1,3 +1,14 @@\n+2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (gen_macho_high): Amend to include the mode\n+\targument.\n+\t(machopic_indirect_data_reference): Amend gen_macho_high call\n+\tto include mode argument.\n+\t(machopic_legitimize_pic_address): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_address):\n+\t* config/rs6000/darwin.md (@macho_high_<mode>): New, replaces\n+\tthe macho_high expander and two define_insn entries.\n+\n 2019-09-28  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/86805"}, {"sha": "1f72c07ab72ae0a503fd1c08520e6f032169ef65", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"lto-section-names.h\"\n #include \"intl.h\"\n+#include \"optabs.h\"\n \n /* Darwin supports a feature called fix-and-continue, which is used\n    for rapid turn around debugging.  When code is compiled with the\n@@ -108,7 +109,7 @@ section * darwin_sections[NUM_DARWIN_SECTIONS];\n \n /* While we transition to using in-tests instead of ifdef'd code.  */\n #if !HAVE_lo_sum\n-#define gen_macho_high(a,b) (a)\n+#define gen_macho_high(m,a,b) (a)\n #define gen_macho_low(a,b,c) (a)\n #endif\n \n@@ -654,7 +655,7 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n \t    {\n \t  /* Create a new register for CSE opportunities.  */\n \t  rtx hi_reg = (!can_create_pseudo_p () ? reg : gen_reg_rtx (Pmode));\n- \t  emit_insn (gen_macho_high (hi_reg, orig));\n+\t  emit_insn (gen_macho_high (Pmode, hi_reg, orig));\n  \t  emit_insn (gen_macho_low (reg, hi_reg, orig));\n \t      return reg;\n  \t    }\n@@ -858,7 +859,7 @@ machopic_legitimize_pic_address (rtx orig, machine_mode mode, rtx reg)\n \t      rtx asym = XEXP (orig, 0);\n \t      rtx mem;\n \n-\t      emit_insn (gen_macho_high (temp_reg, asym));\n+\t      emit_insn (gen_macho_high (Pmode, temp_reg, asym));\n \t      mem = gen_const_mem (GET_MODE (orig),\n \t\t\t\t   gen_rtx_LO_SUM (Pmode, temp_reg,\n \t\t\t\t\t\t   copy_rtx (asym)));"}, {"sha": "0c63a31755e2b8a56d78ff59877f25d26b874b0e", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "patch": "@@ -150,31 +150,12 @@ You should have received a copy of the GNU General Public License\n    stfd %0,lo16(%2)(%1)\"\n   [(set_attr \"type\" \"store\")])\n \n-;; Mach-O PIC trickery.\n-(define_expand \"macho_high\"\n-  [(set (match_operand 0 \"\")\n-\t(high (match_operand 1 \"\")))]\n-  \"TARGET_MACHO\"\n-{\n-  if (TARGET_64BIT)\n-    emit_insn (gen_macho_high_di (operands[0], operands[1]));\n-  else\n-    emit_insn (gen_macho_high_si (operands[0], operands[1]));\n+;; Mach-O PIC.\n \n-  DONE;\n-})\n-\n-(define_insn \"macho_high_si\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=b*r\")\n-\t(high:SI (match_operand 1 \"\" \"\")))]\n-  \"TARGET_MACHO && ! TARGET_64BIT\"\n-  \"lis %0,ha16(%1)\")\n-  \n-\n-(define_insn \"macho_high_di\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=b*r\")\n-\t(high:DI (match_operand 1 \"\" \"\")))]\n-  \"TARGET_MACHO && TARGET_64BIT\"\n+(define_insn \"@macho_high_<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=b*r\")\n+\t(high:P (match_operand 1 \"\" \"\")))]\n+  \"TARGET_MACHO && (DEFAULT_ABI == ABI_DARWIN)\"\n   \"lis %0,ha16(%1)\")\n \n (define_expand \"macho_low\""}, {"sha": "f136dcbf8c3fff1869764cfc05e2195cd17a5dca", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=23cb6f8e0c0b462c13fbc01d5d6777d6b49bfaa7", "patch": "@@ -7978,7 +7978,7 @@ rs6000_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n       if (TARGET_ELF)\n \temit_insn (gen_elf_high (reg, x));\n       else\n-\temit_insn (gen_macho_high (reg, x));\n+\temit_insn (gen_macho_high (Pmode, reg, x));\n       return gen_rtx_LO_SUM (Pmode, reg, x);\n     }\n   else if (TARGET_TOC\n@@ -9691,7 +9691,7 @@ rs6000_emit_move (rtx dest, rtx source, machine_mode mode)\n \t\t  return;\n \t\t}\n #endif\n-\t      emit_insn (gen_macho_high (target, operands[1]));\n+\t      emit_insn (gen_macho_high (Pmode, target, operands[1]));\n \t      emit_insn (gen_macho_low (operands[0], target, operands[1]));\n \t      return;\n \t    }"}]}