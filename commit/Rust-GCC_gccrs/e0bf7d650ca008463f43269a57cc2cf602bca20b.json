{"sha": "e0bf7d650ca008463f43269a57cc2cf602bca20b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBiZjdkNjUwY2EwMDg0NjNmNDMyNjlhNTdjYzJjZjYwMmJjYTIwYg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-05-06T15:08:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T15:08:57Z"}, "message": "sinput.adb (Expr_Last_Char): Fix some copy-paste errors for paren skipping.\n\n2009-05-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sinput.adb (Expr_Last_Char): Fix some copy-paste errors for paren\n\tskipping.\n\t(Expr_First_Char): Add ??? comment that paren skipping needs work\n\t(Expr_Last_Char): Add ??? comment that paren skipping needs work\n\n\t* exp_attr.adb: Add processing for Compiler_Version\n\n\t* sem_attr.adb: New attribute Compiler_Version\n\n\t* snames.ads-tmpl: Add entries for Compiler_Version attribute\n\n\t* gnat_rm.texi: Document Compiler_Version attribute\n\nFrom-SVN: r147181", "tree": {"sha": "818ba69ac8fa94ec7b09ad931f8d3114dbc0ed96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/818ba69ac8fa94ec7b09ad931f8d3114dbc0ed96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0bf7d650ca008463f43269a57cc2cf602bca20b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bf7d650ca008463f43269a57cc2cf602bca20b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0bf7d650ca008463f43269a57cc2cf602bca20b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bf7d650ca008463f43269a57cc2cf602bca20b/comments", "author": null, "committer": null, "parents": [{"sha": "9419a9fdc8150067898eb5ad6347c3b55d4817e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9419a9fdc8150067898eb5ad6347c3b55d4817e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9419a9fdc8150067898eb5ad6347c3b55d4817e1"}], "stats": {"total": 91, "additions": 78, "deletions": 13}, "files": [{"sha": "c3f5bf7b76dadc1e0f371c06fb9c36dd2413b1ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -1,3 +1,18 @@\n+2009-05-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinput.adb (Expr_Last_Char): Fix some copy-paste errors for paren\n+\tskipping.\n+\t(Expr_First_Char): Add ??? comment that paren skipping needs work\n+\t(Expr_Last_Char): Add ??? comment that paren skipping needs work\n+\n+\t* exp_attr.adb: Add processing for Compiler_Version\n+\n+\t* sem_attr.adb: New attribute Compiler_Version\n+\n+\t* snames.ads-tmpl: Add entries for Compiler_Version attribute\n+\n+\t* gnat_rm.texi: Document Compiler_Version attribute\n+\n 2009-05-06  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.adb: Minor reformatting"}, {"sha": "58e06391d4178fb53a9356a38daac3c403c926e3", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -5238,6 +5238,7 @@ package body Exp_Attr is\n            Attribute_Address_Size                 |\n            Attribute_Base                         |\n            Attribute_Class                        |\n+           Attribute_Compiler_Version             |\n            Attribute_Default_Bit_Order            |\n            Attribute_Delta                        |\n            Attribute_Denorm                       |"}, {"sha": "2ff9c117680084a72a43dfd9b75dde9cf900fb2d", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -222,6 +222,7 @@ Implementation Defined Attributes\n * AST_Entry::\n * Bit::\n * Bit_Position::\n+* Compiler_Version::\n * Code_Address::\n * Default_Bit_Order::\n * Elaborated::\n@@ -5352,6 +5353,7 @@ consideration, you should minimize the use of these attributes.\n * AST_Entry::\n * Bit::\n * Bit_Position::\n+* Compiler_Version::\n * Code_Address::\n * Default_Bit_Order::\n * Elaborated::\n@@ -5504,6 +5506,15 @@ type @code{Universal_Integer}.  The value depends only on the field\n @var{C} and is independent of the alignment of\n the containing record @var{R}.\n \n+@node Compiler_Version\n+@unnumberedsec Compiler_Version\n+@findex Compiler_Version\n+@noindent\n+@code{Standard'Compiler_Version} (@code{Standard} is the only allowed\n+prefix) yields a static string identifying the version of the compiler\n+being used to compile the unit containing the attribute reference. A\n+typical result would be something like \"GNAT Pro 6.3.0w (20090221)\".\n+\n @node Code_Address\n @unnumberedsec Code_Address\n @findex Code_Address"}, {"sha": "972019fcc0d9e1da2ac2e48aa2f58c7370934ee9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -35,6 +35,7 @@ with Exp_Dist; use Exp_Dist;\n with Exp_Util; use Exp_Util;\n with Expander; use Expander;\n with Freeze;   use Freeze;\n+with Gnatvsn;  use Gnatvsn;\n with Itypes;   use Itypes;\n with Lib;      use Lib;\n with Lib.Xref; use Lib.Xref;\n@@ -2544,6 +2545,16 @@ package body Sem_Attr is\n \n          Set_Etype (N, RTE (RE_Address));\n \n+      ----------------------\n+      -- Compiler_Version --\n+      ----------------------\n+\n+      when Attribute_Compiler_Version =>\n+         Check_E0;\n+         Check_Standard_Prefix;\n+         Rewrite (N, Make_String_Literal (Loc, Gnat_Static_Version_String));\n+         Analyze_And_Resolve (N, Standard_String);\n+\n       --------------------\n       -- Component_Size --\n       --------------------\n@@ -7482,6 +7493,7 @@ package body Sem_Attr is\n            Attribute_Caller                   |\n            Attribute_Class                    |\n            Attribute_Code_Address             |\n+           Attribute_Compiler_Version         |\n            Attribute_Count                    |\n            Attribute_Default_Bit_Order        |\n            Attribute_Elaborated               |"}, {"sha": "020e69df26d1a5556aea16d85403af6d146c4c22", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -317,6 +317,11 @@ package body Sinput is\n \n                Loc := Sloc (N);\n \n+               --  Skip past parens\n+\n+               --  This is not right, it does not deal with skipping comments\n+               --  and probably also has wide character problems ???\n+\n                if Count > 0 then\n                   declare\n                      SFI : constant Source_File_Index :=\n@@ -408,7 +413,7 @@ package body Sinput is\n                  N_Conditional_Expression    =>\n                raise Program_Error;\n \n-            --  Cases where the Sloc points to the start of the tokem, but we\n+            --  Cases where the Sloc points to the start of the token, but we\n             --  still need to handle the sequence of left parentheses.\n \n             when N_Identifier          |\n@@ -425,25 +430,44 @@ package body Sinput is\n \n                Loc := Sloc (N);\n \n-               if Count > 0 then\n-                  declare\n-                     SFI : constant Source_File_Index :=\n-                             Get_Source_File_Index (Loc);\n-                     Src : constant Source_Buffer_Ptr := Source_Text (SFI);\n-                     Fst : constant Source_Ptr        := Source_Last (SFI);\n+               --  Now we have two tasks, first we are pointing to the start\n+               --  of the token below, second, we need to skip parentheses.\n \n-                  begin\n+               --  Skipping to the end of a token is not easy, we can't just\n+               --  skip to a space, since we may have e.g. X*YAR+Z, and if we\n+               --  are finding the end of the subexpression X*YAR, we don't\n+               --  want to skip past the +Z. Also we have to worry about\n+               --  skipping comments, and about wide characters ???\n+\n+               declare\n+                  SFI : constant Source_File_Index :=\n+                          Get_Source_File_Index (Loc);\n+                  Src : constant Source_Buffer_Ptr := Source_Text (SFI);\n+                  Lst : constant Source_Ptr        := Source_Last (SFI);\n+\n+               begin\n+                  --  Scan through first blank character, to get to the end\n+                  --  of this token. As noted above that's not really right???\n+\n+                  loop\n+                     exit when Loc = Lst or else Src (Loc + 1) <= ' ';\n+                     Loc := Loc + 1;\n+                  end loop;\n+\n+                  --  Skip past parens, but this also ignores comments ???\n+\n+                  if Count > 0 then\n                      for J in 1 .. Count loop\n                         loop\n-                           exit when Loc = Fst;\n-                           Loc := Loc - 1;\n+                           exit when Loc = Lst;\n+                           Loc := Loc + 1;\n                            exit when Src (Loc) >= ' ';\n                         end loop;\n \n-                        exit when Src (Loc) /= '(';\n+                        exit when Src (Loc) /= ')';\n                      end loop;\n-                  end;\n-               end if;\n+                  end if;\n+               end;\n \n                return Loc;\n          end case;"}, {"sha": "263269ca0a5269dcd952d02d89abe34178853798", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf7d650ca008463f43269a57cc2cf602bca20b/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=e0bf7d650ca008463f43269a57cc2cf602bca20b", "patch": "@@ -688,6 +688,7 @@ package Snames is\n    Name_Callable                       : constant Name_Id := N + $;\n    Name_Caller                         : constant Name_Id := N + $;\n    Name_Code_Address                   : constant Name_Id := N + $; -- GNAT\n+   Name_Compiler_Version               : constant Name_Id := N + $; -- GNAT\n    Name_Component_Size                 : constant Name_Id := N + $;\n    Name_Compose                        : constant Name_Id := N + $;\n    Name_Constrained                    : constant Name_Id := N + $;\n@@ -1188,6 +1189,7 @@ package Snames is\n       Attribute_Callable,\n       Attribute_Caller,\n       Attribute_Code_Address,\n+      Attribute_Compiler_Version,\n       Attribute_Component_Size,\n       Attribute_Compose,\n       Attribute_Constrained,"}]}