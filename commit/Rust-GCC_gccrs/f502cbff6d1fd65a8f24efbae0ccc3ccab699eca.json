{"sha": "f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwMmNiZmY2ZDFmZDY1YThmMjRlZmJhZTBjY2MzY2NhYjY5OWVjYQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-12-12T01:19:25Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-12-12T01:19:25Z"}, "message": "osf.h (TARGET_OS_CPP_BUILTINS): Define __STDC_VERSION__ to ISO C94 for C++.\n\n\t* config/alpha/osf.h (TARGET_OS_CPP_BUILTINS): Define\n\t__STDC_VERSION__ to ISO C94 for C++.\n\n\t* fixinc/inclhack.def (alpha_wchar): New fix.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/wchar.h: New file.\n\nFrom-SVN: r74558", "tree": {"sha": "6aab55979ba574900ae7a4a600672386e08788ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aab55979ba574900ae7a4a600672386e08788ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/comments", "author": null, "committer": null, "parents": [{"sha": "d8683476fe137d0e878a1e46ca41392e1b50dad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8683476fe137d0e878a1e46ca41392e1b50dad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8683476fe137d0e878a1e46ca41392e1b50dad5"}], "stats": {"total": 101, "additions": 96, "deletions": 5}, "files": [{"sha": "8fae82c9a46ae8331d630d6732a8ec6f5d881f3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "patch": "@@ -1,3 +1,12 @@\n+2003-12-12  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/osf.h (TARGET_OS_CPP_BUILTINS): Define\n+\t__STDC_VERSION__ to ISO C94 for C++.\n+\n+\t* fixinc/inclhack.def (alpha_wchar): New fix.\n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/wchar.h: New file.\n+\n 2003-12-11  David Mosberger  <davidm@hpl.hp.com>\n \n \t* unwind-libunwind.c (_Unwind_SetGR): Clear the NaT bit as"}, {"sha": "fd72ba381327414841d99ebe2f515e598af087cd", "filename": "gcc/config/alpha/osf.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Fconfig%2Falpha%2Fosf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Fconfig%2Falpha%2Fosf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf.h?ref=f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "patch": "@@ -49,6 +49,13 @@ Boston, MA 02111-1307, USA.  */\n \t   to be defined for <math.h>.  */\t\t\\\n         if (LONG_DOUBLE_TYPE_SIZE == 128)\t\t\\\n           builtin_define (\"__X_FLOAT\");\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+\t/* Tru64 UNIX V4/V5 provide several ISO C94\t\\\n+\t   features protected by the corresponding\t\\\n+\t   __STDC_VERSION__ macro.  libstdc++ v3\t\\\n+\t   needs them as well.  */\t\t\t\\\n+\tif (c_dialect_cxx ())\t\t\t\t\\\n+\t  builtin_define (\"__STDC_VERSION__=199409L\");\t\\\n     } while (0)\n \n /* Accept DEC C flags for multithreaded programs.  We use _PTHREAD_USE_D4"}, {"sha": "dbf73a28092f24f32299f09913ec4e5f79e6f2d9", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday November  3, 2003 at 10:05:53 PM MET\n+ * It has been AutoGen-ed  Wednesday November 19, 2003 at 04:30:46 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Nov  3 22:05:53 MET 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Wed Nov 19 16:30:46 MET 2003\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 161 fixup descriptions.\n+ * This file contains 162 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -973,6 +973,43 @@ static const char* apzAlpha_SbrkPatch[] = {\n     \"void *sbrk(\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_Wchar fix\n+ */\n+tSCC zAlpha_WcharName[] =\n+     \"alpha_wchar\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha_WcharList[] =\n+  \"|wchar.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha_WcharMachs[] = {\n+        \"alpha*-dec-osf4*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_WcharSelect0[] =\n+       \"#define wcstok wcstok_r\";\n+\n+#define    ALPHA_WCHAR_TEST_CT  1\n+static tTestDesc aAlpha_WcharTests[] = {\n+  { TT_EGREP,    zAlpha_WcharSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_Wchar\n+ */\n+static const char* apzAlpha_WcharPatch[] = { \"sed\",\n+    \"-e\", \"s@#define wcstok wcstok_r@extern wchar_t *wcstok __((wchar_t *, const wchar_t *, wchar_t **)) __asm__(\\\"wcstok_r\\\");@\",\n+    \"-e\", \"s@#define wcsftime __wcsftime_isoc@extern size_t   wcsftime __((wchar_t *, size_t, const wchar_t *, const struct tm *)) __asm__(\\\"__wcsftime_isoc\\\");@\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Avoid_Bool_Define fix\n@@ -6378,9 +6415,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          181\n+#define REGEX_COUNT          182\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            161\n+#define FIX_COUNT            162\n \n /*\n  *  Enumerate the fixes\n@@ -6407,6 +6444,7 @@ typedef enum {\n     ALPHA_PTHREAD_FIXIDX,\n     ALPHA_PTHREAD_GCC_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n+    ALPHA_WCHAR_FIXIDX,\n     AVOID_BOOL_DEFINE_FIXIDX,\n     AVOID_BOOL_TYPE_FIXIDX,\n     AVOID_WCHAR_T_TYPE_FIXIDX,\n@@ -6655,6 +6693,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_SbrkTests,   apzAlpha_SbrkPatch, 0 },\n \n+  {  zAlpha_WcharName,    zAlpha_WcharList,\n+     apzAlpha_WcharMachs,\n+     ALPHA_WCHAR_TEST_CT, FD_MACH_ONLY,\n+     aAlpha_WcharTests,   apzAlpha_WcharPatch, 0 },\n+\n   {  zAvoid_Bool_DefineName,    zAvoid_Bool_DefineList,\n      apzAvoid_Bool_DefineMachs,\n      AVOID_BOOL_DEFINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "654386932ec6a976935ff0853962556b0aabe8a2", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "patch": "@@ -633,6 +633,23 @@ fix = {\n };\n \n \n+/*\n+ *  Change external names of wcstok/wcsftime via asm instead of macros on\n+ *  Tru64 UNIX V4.0.\n+ */\n+fix = {\n+    hackname = alpha_wchar;\n+    files    = wchar.h;\n+\n+    mach     = \"alpha*-dec-osf4*\";\n+    select   = \"#define wcstok wcstok_r\";\n+    sed      = \"s@#define wcstok wcstok_r@extern wchar_t *wcstok __((wchar_t *, const wchar_t *, wchar_t **)) __asm__(\\\"wcstok_r\\\");@\";\n+    sed      = \"s@#define wcsftime __wcsftime_isoc@extern size_t   wcsftime __((wchar_t *, size_t, const wchar_t *, const struct tm *)) __asm__(\\\"__wcsftime_isoc\\\");@\";\n+    test_text = \"#define wcstok wcstok_r\\n\"\n+\t\t\"#define wcsftime __wcsftime_isoc\";\n+};\n+\n+\n /*\n  *  For C++, avoid any typedef or macro definition of bool,\n  *  and use the built in type instead."}, {"sha": "5c0b9dfe86adc3bdcfa8a2e2cab3928ebc548d53", "filename": "gcc/fixinc/tests/base/wchar.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Ftests%2Fbase%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f502cbff6d1fd65a8f24efbae0ccc3ccab699eca/gcc%2Ffixinc%2Ftests%2Fbase%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fwchar.h?ref=f502cbff6d1fd65a8f24efbae0ccc3ccab699eca", "patch": "@@ -0,0 +1,15 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/wchar.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( ALPHA_WCHAR_CHECK )\n+extern wchar_t *wcstok __((wchar_t *, const wchar_t *, wchar_t **)) __asm__(\"wcstok_r\");\n+extern size_t   wcsftime __((wchar_t *, size_t, const wchar_t *, const struct tm *)) __asm__(\"__wcsftime_isoc\");\n+#endif  /* ALPHA_WCHAR_CHECK */"}]}