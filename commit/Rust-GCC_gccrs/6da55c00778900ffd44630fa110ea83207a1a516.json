{"sha": "6da55c00778900ffd44630fa110ea83207a1a516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhNTVjMDA3Nzg5MDBmZmQ0NDYzMGZhMTEwZWE4MzIwN2ExYTUxNg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2005-02-15T23:18:04Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-02-15T23:18:04Z"}, "message": "re PR preprocessor/19077 (Internal compiler error compiling MPlayer)\n\n2005-02-15  Eric Christopher  <echristo@redhat.com>\n\n\tPR preprocessor/19077\n\t* macro.c (cpp_macro_definition): Move handling of whitespace\n\tto PREV_WHITE conditional. Remove overloading of len\n\tvariable.\n\n2005-02-15  Eric Christopher  <echristo@redhat.com>\n\n\t* gcc.dg/cpp/20050215-1.c: New file.\n\nFrom-SVN: r95080", "tree": {"sha": "88d1edaa90379d91bcd7b9bad1e228c48a4e8210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88d1edaa90379d91bcd7b9bad1e228c48a4e8210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da55c00778900ffd44630fa110ea83207a1a516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da55c00778900ffd44630fa110ea83207a1a516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da55c00778900ffd44630fa110ea83207a1a516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da55c00778900ffd44630fa110ea83207a1a516/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f85d0c4797a5f39c061288e059c6c24cb9290f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f85d0c4797a5f39c061288e059c6c24cb9290f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f85d0c4797a5f39c061288e059c6c24cb9290f9"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "34b9f12ddcdcd98b5a2f9d3c2d35267334d55e91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da55c00778900ffd44630fa110ea83207a1a516/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da55c00778900ffd44630fa110ea83207a1a516/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6da55c00778900ffd44630fa110ea83207a1a516", "patch": "@@ -1,3 +1,7 @@\n+2005-02-15  Eric Christopher  <echristo@redhat.com>\n+\n+\t* gcc.dg/cpp/20050215-1.c: New file.\n+\n 2005-02-15  James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR tree-optimization/15785"}, {"sha": "e5aaf220e3e7b5b7d8e893b924fce7f4fa127b3c", "filename": "gcc/testsuite/gcc.dg/cpp/20050215-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da55c00778900ffd44630fa110ea83207a1a516/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20050215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da55c00778900ffd44630fa110ea83207a1a516/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20050215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20050215-1.c?ref=6da55c00778900ffd44630fa110ea83207a1a516", "patch": "@@ -0,0 +1,10 @@\n+/* Testcase for memory corruption bug in macro processing.\n+   See PR preprocessor/19077 for details.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-g3\" } */\n+#define FOO(a,b,c,d,e) a b c d e \\\n+\"                                                                           \" \\\n+\"                                                                           \" \\\n+\"                                                                             \"\n+int i;"}, {"sha": "5c58eb7ceb803ddbb56bdf281a541155f95f065f", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da55c00778900ffd44630fa110ea83207a1a516/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da55c00778900ffd44630fa110ea83207a1a516/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=6da55c00778900ffd44630fa110ea83207a1a516", "patch": "@@ -1,3 +1,10 @@\n+2005-02-15  Eric Christopher  <echristo@redhat.com>\n+\n+\tPR preprocessor/19077\n+\t* macro.c (cpp_macro_definition): Move handling of whitespace\n+\tto PREV_WHITE conditional. Remove overloading of len\n+\tvariable.\n+\n 2005-02-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* directives.c, files.c, init.c, internal.h, macro.c, pch.c,"}, {"sha": "5e596699e017745c69736d40de7e016e2cf79144", "filename": "libcpp/macro.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da55c00778900ffd44630fa110ea83207a1a516/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da55c00778900ffd44630fa110ea83207a1a516/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=6da55c00778900ffd44630fa110ea83207a1a516", "patch": "@@ -1666,6 +1666,7 @@ cpp_macro_definition (cpp_reader *pfile, const cpp_hashnode *node)\n \tlen += NODE_LEN (macro->params[i]) + 1; /* \",\" */\n     }\n \n+  /* This should match below where we fill in the buffer.  */\n   if (CPP_OPTION (pfile, traditional))\n     len += _cpp_replacement_text_len (macro);\n   else\n@@ -1677,11 +1678,14 @@ cpp_macro_definition (cpp_reader *pfile, const cpp_hashnode *node)\n \t  if (token->type == CPP_MACRO_ARG)\n \t    len += NODE_LEN (macro->params[token->val.arg_no - 1]);\n \t  else\n-\t    len += cpp_token_len (token) + 1; /* Includes room for ' '.  */\n+\t    len += cpp_token_len (token);\n+\n \t  if (token->flags & STRINGIFY_ARG)\n \t    len++;\t\t\t/* \"#\" */\n \t  if (token->flags & PASTE_LEFT)\n \t    len += 3;\t\t/* \" ##\" */\n+\t  if (token->flags & PREV_WHITE)\n+\t    len++;              /* \" \" */\n \t}\n     }\n \n@@ -1741,10 +1745,10 @@ cpp_macro_definition (cpp_reader *pfile, const cpp_hashnode *node)\n \n \t  if (token->type == CPP_MACRO_ARG)\n \t    {\n-\t      len = NODE_LEN (macro->params[token->val.arg_no - 1]);\n \t      memcpy (buffer,\n-\t\t      NODE_NAME (macro->params[token->val.arg_no - 1]), len);\n-\t      buffer += len;\n+\t\t      NODE_NAME (macro->params[token->val.arg_no - 1]),\n+\t\t      NODE_LEN (macro->params[token->val.arg_no - 1]));\n+\t      buffer += NODE_LEN (macro->params[token->val.arg_no - 1]);\n \t    }\n \t  else\n \t    buffer = cpp_spell_token (pfile, token, buffer);"}]}