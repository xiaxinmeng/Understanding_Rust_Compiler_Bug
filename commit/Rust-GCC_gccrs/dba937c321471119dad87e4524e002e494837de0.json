{"sha": "dba937c321471119dad87e4524e002e494837de0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhOTM3YzMyMTQ3MTExOWRhZDg3ZTQ1MjRlMDAyZTQ5NDgzN2RlMA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-17T21:27:08Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-17T21:27:08Z"}, "message": "re PR libfortran/79956 (many new -Wmaybe-uninitialized warnings with bootstrap-O3)\n\n2017-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/79956\n\t* m4/reshape.m4 (reshape_'rtype_ccode`):  Correct use\n\tof GFC_ASSERT.\n\t* generated/reshape_c10.c: Regenerated.\n\t* generated/reshape_c16.c: Regenerated.\n\t* generated/reshape_c4.c: Regenerated.\n\t* generated/reshape_c8.c: Regenerated.\n\t* generated/reshape_i16.c: Regenerated.\n\t* generated/reshape_i4.c: Regenerated.\n\t* generated/reshape_i8.c: Regenerated.\n\t* generated/reshape_r10.c: Regenerated.\n\t* generated/reshape_r16.c: Regenerated.\n\t* generated/reshape_r4.c: Regenerated.\n\t* generated/reshape_r8.c: Regenerated.\n\nFrom-SVN: r246248", "tree": {"sha": "b7df398cd1d46d953da49fe122be584ed1f708bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7df398cd1d46d953da49fe122be584ed1f708bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba937c321471119dad87e4524e002e494837de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba937c321471119dad87e4524e002e494837de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba937c321471119dad87e4524e002e494837de0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba937c321471119dad87e4524e002e494837de0/comments", "author": null, "committer": null, "parents": [{"sha": "d951e75dfe83b86dd2c46c7835e03bbf04b29278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d951e75dfe83b86dd2c46c7835e03bbf04b29278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d951e75dfe83b86dd2c46c7835e03bbf04b29278"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "96b75e9292add7cb92c4713a4f06e79016b644e6", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -1,3 +1,20 @@\n+2017-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/79956\n+\t* m4/reshape.m4 (reshape_'rtype_ccode`):  Correct use\n+\tof GFC_ASSERT.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\n 2017-03-15  NightStrike  <nightstrike@gmail.com>\n \t    Janne Blomqvist  <jb@gcc.gnu.org>\n "}, {"sha": "ce6c9a256dc4ac910806ffa3b1c15e1a9b376f74", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "4ca6722433e304f2c1be99285c93a544398bb17f", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "dc1b8ee6c74e697acedfc536927e39065e21e5dd", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "88d03d731484e19f479c498dc4fa322dc0f6d7b9", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "fd5e8e7e736384e0c9add7f4470e45027f850819", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "149d18575eb8d908696e156107e6e1b705ef29cd", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "a4c95a24b7a00560347269ecf09d579175440862", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "47e803fd562a4f64aa3e850d7e5768aeb29571ed", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "c210dfdef52aacee4d3ff408212687f351477a63", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "a4f9b07f55c78c07fdb6b5eebf6ddfb83b37222b", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "955463c4645006bd05369b3ca7aec070522359e3", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -80,7 +80,7 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}, {"sha": "346d5389a104aecb84d682d369ee6e5f28b6a3c1", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba937c321471119dad87e4524e002e494837de0/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=dba937c321471119dad87e4524e002e494837de0", "patch": "@@ -84,7 +84,7 @@ reshape_'rtype_ccode` ('rtype` * const restrict ret,\n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n   /* rdim is always > 0; this lets the compiler optimize more and\n    avoids a potential warning.  */\n-  GFC_ASSERT(sdim>0);\n+  GFC_ASSERT(rdim>0);\n \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");"}]}