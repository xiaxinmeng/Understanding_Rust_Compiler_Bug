{"sha": "40e2396121e547e79dd2492372176c18355fab4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBlMjM5NjEyMWU1NDdlNzlkZDI0OTIzNzIxNzZjMTgzNTVmYWI0Zg==", "commit": {"author": {"name": "Michael Collison", "email": "michael.collison@linaro.org", "date": "2015-01-09T20:18:42Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2015-01-09T20:18:42Z"}, "message": "genattrtab.c (write_header): Include hash-set.h...\n\n2015-01-09  Michael Collison  <michael.collison@linaro.org>\n\t\n\t* genattrtab.c (write_header): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-attrtab.c.\n\t* genautomata.c (main) : Include hash-set.h, macInclude hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-automata.c.\n\t* genemit.c (main): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-emit.c.\n\t* gengtype.c (open_base_files): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tgtype-desc.c.\n\t* genopinit.c (main): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-opinit.c.\n\t* genoutput.c (output_prologue): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-output.c.\n\t* genpeep.c (main): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-peep.c.\n\t* genpreds.c (write_insn_preds_c): Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\tinsn-preds.c.\n\t* optc-save-gen-awk: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h when generating\n\toptions-save.c.\n\t* opth-gen.awk: Change include guard from GCC_C_COMMON_H to GCC_C_COMMON_C\n\twhen generating options.h.\n\t* ada/gcc-interface/cuintp.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* ada/gcc-interface/decl.c: ditto.\n\t* ada/gcc-interface/misc.c: ditto.\n\t* ada/gcc-interface/targtyps.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h,\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* ada/gcc-interface/trans.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, real.h,\n\tfold-const.h, wide-int.h, inchash.h due to\n\tflattening of tree.h.\n\t* ada/gcc-interface/utils.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* ada/gcc-interface/utils2.c: ditto.\n\t* alias.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* asan.c: ditto.\n\t* attribs.c: ditto.\n\t* auto-inc-dec.c: ditto.\n\t* auto-profile.c: ditto\n\t* bb-reorder.c: ditto.\n\t* bt-load.c: Include symtab.h due to flattening of tree.h.\n\t* builtins.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* c/c-array-notation.c: ditto.\n\t* c/c-aux-info.c: ditto.\n\t* c/c-convert.c: ditto.\n\t* c/c-decl.c: ditto.\n\t* c/c-errors.c: ditto.\n\t* c/c-lang.c: dittoxs.\n\t* c/c-objc-common.c: ditto.\n\t* c/c-parser.c: ditto.\n\t* c/c-typeck.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, inchash.h, real.h and\n\tfixed-value.h due to flattening of tree.h.\n\t* calls.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* ccmp.c: ditto.\n\t* c-family/array-notation-common.c: ditto.\n\t* c-family/c-ada-spec.c: ditto.\n\t* c-family/c-cilkplus.c: ditto.\n\t* c-family/c-common.c: Include input.h due to flattening of tree.h.\n\tDefine macro GCC_C_COMMON_C.\n\t* c-family/c-common.h: Flatten tree.h header files into c-common.h.\n\tRemove include of tree-core.h.\n\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* c-family/c-dump.c: ditto.\n\t* c-family/c-format.c: Flatten tree.h header files into c-common.h.\n\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* c-family/c-dump.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* c-family/c-format.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, inchash.h and real.h due to\n\tflattening of tree.h.\n\t* c-family/c-gimplify.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* c-family/cilk.c: ditto.\n\t* c-family/c-lex.c: ditto.\n\t* c-family/c-omp.c: ditto.\n\t* c-family/c-opts.c: ditto.\n\t* c-family/c-pch.c: ditto.\n\t* c-family/c-ppoutput.c: ditto.\n\t* c-family/c-pragma.c: ditto.\n\t* c-family/c-pretty-print.c: ditto.\n\t* c-family/c-semantics.c: ditto.\n\t* c-family/c-ubsan.c: ditto.\n\t* c-family/stub-objc.c: ditto.\n\t* cfgbuild.c: ditto.\n\t* cfg.c: ditto.\n\t* cfgcleanup.c: ditto.\n\t* cfgexpand.c: ditto.\n\t* cfghooks.c: ditto.\n\t* cfgloop.c: Include symtab.h, fold-const.h, and\n\tinchash.h due to flattening of tree.h.\n\t* cfgloopmanip.c: ditto.\n\t* cfgrtl.c:  Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* cgraphbuild.c: ditto.\n\t* cgraph.c: ditto.\n\t* cgraphclones.c: ditto.\n\t* cgraphunit.c: ditto.\n\t* cilk-common.c: ditto.\n\t* combine.c: ditto.\n\t* combine-stack-adj.c: Include symbol.h due to flattening of tree.h.\n\t* config/aarch64/aarch64-builtins.c:  Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/aarch64/aarch64.c: ditto.\n\t* config/alpha/alpha.c: ditto.\n\t* config/arc/arc.c: ditto.\n\t* config/arm/aarch-common.c: ditto.\n\t* config/arm/arm-builtins.c: ditto.\n\t* config/arm/arm.c: ditto.\n\t* config/arm/arm-c.c: ditto.\n\t* config/avr/avr.c: ditto.\n\t* config/avr/avr-c.c: ditto.\n\t* config/avr/avr-log.c: ditto.\n\t* config/bfin/bfin.c: ditto.\n\t* config/c6x/c6x.c: ditto.\n\t* config/cr16/cr16.c: ditto.\n\t* config/cris/cris.c: ditto.\n\t* config/darwin.c: ditto.\n\t* config/darwin-c.c: ditto.\n\t* config/default-c.c: ditto.\n\t* config/epiphany/epiphany.c: ditto.\n\t* config/fr30/fr30.c: ditto.\n\t* config/frv/frv.c: ditto.\n\t* config/glibc-c.c: ditto.\n\t* config/h8300/h8300.c: ditto.\n\t* config/i386/i386.c: ditto.\n\t* config/i386/i386-c.c: ditto.\n\t* config/i386/msformat.c: ditto.\n\t* config/i386/winnt.c: ditto.\n\t* config/i386/winnt-cxx.c: ditto.\n\t* config/i386/winnt-stubs.c: ditto.\n\t* config/ia64/ia64.c: ditto.\n\t* config/ia64/ia64-c.c: ditto.\n\t* config/iq2000/iq2000.c: ditto.\n\t* config/lm32/lm32.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* config/m32c/m32c.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/m32c/m32c-pragma.c: ditto.\n\t* config/m32c/m32cr.c: ditto.\n\t* config/m68/m68k.c: ditto.\n\t* config/mcore/mcore.c: ditto.\n\t* config/mep/mep.c: ditto.\n\t* config/mep/mep-pragma.c: ditto.\n\t* config/microblaze/microblaze.c: ditto.\n\t* config/microblaze/microblaze-c.c: ditto.\n\t* config/mips/mips.c: ditto.\n\t* config/mmix/mmix.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* config/mn10300/mn10300.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/moxie/moxie.c: ditto.\n\t* config/msp430/msp430.c: ditto.\n\t* config/msp430/msp430-c.c: ditto.\n\t* config/nds32/nds32.c: ditto.\n\t* config/nds32/nds32-cost.c: ditto.\n\t* config/nds32/nds32-fp-as-gp.c: ditto.\n\t* config/nds32/nds32-intrinsic.c: ditto.\n\t* config/nds32/nds32-isr.c: ditto.\n\t* config/nds32/nds32-md-auxillary.c: ditto.\n\t* config/nds32/nds32-memory-manipulationx.c: ditto.\n\t* config/nds32/nds32-pipelines-auxillary.c: ditto.\n\t* config/nds32/nds32-predicates.c: ditto.\n\t* config/nios2/nios2.c: ditto.\n\t* config/nvptx/nvptx.c: ditto.\n\t* config/pa/pa.c: ditto.\n\t* config/pdp11/pdp11x.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* config/rl78/rl78.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/rl78/rl78-cx.c: ditto.\n\t* config/rs6000/rs6000.c: ditto.\n\t* config/rs6000/rs6000-c.c: ditto.\n\t* config/rx/rx.c: ditto.\n\t* config/s390/s390.c: ditto.\n\t* config/sh/sh.c: ditto.\n\t* config/sh/sc.c: ditto.\n\t* config/sh/sh-mem.cc: ditto.\n\t* config/sh/sh_treg_combine.cc: Include symtab.h, inchash.h and tree.h\n\tdue to flattening of tree.h.\n\tRemove include of tree-core.h.\n\t* config/sol2.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/sol2-c.c: ditto.\n\t* config/sol2-cxx.c: ditto.\n\t* config/sol2-stubs.c: ditto.\n\t* config/sparc/sparc.c: ditto.\n\t* config/sparc/sparc-cx.c: ditto.\n\t* config/spu/spu.c: ditto.\n\t* config/spu/spu-c.c: ditto\n\t* config/storym16/stormy16.c: ditto.\n\t* config/tilegx/tilegx.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* config/tilepro/gen-mul-tables.cc: Include symtab.h in generated file.\n\t* config/tilegx/tilegx-c.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/tilepro/tilepro.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* config/tilepro/tilepro-c.c: Include hash-set.h, machmode.h,\n\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n\tfold-const.h, wide-int.h, and inchash.h due to\n\tflattening of tree.h.\n\t* config/v850/v850.c: ditto.\n\t* config/v850/v850-c.c: ditto.\n\t* config/vax/vax.c: ditto.\n\t* config/vms/vms.c: ditto.\n\t* config/vms/vms-c.c: ditto.\n\t* config/vxworks.c: ditto.\n\t* config/winnt-c.c: ditto.\n\t* config/xtensa/xtensa.c: Include symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* coverage.c: ditto.\n\t* cp/call.c: ditto.\n\t* cp/class.c: ditto.\n\t* cp/constexpr.c: ditto.\n\t* cp/cp-array-notation.c: ditto.\n\t* cp/cp-gimplify.c: ditto.\n\t* cp/cp-lang.c: ditto.\n\t* cp/cp-objcp-common.c: ditto.\n\t* cp/cvt.c: ditto.\n\t* cp/decl2.c: ditto.\n\t* cp/decl.c: ditto.\n\t* cp/dump.c: ditto.\n\t* cp/error.c: ditto.\n\t* cp/except.c: ditto.\n\t* cp/expr.c: ditto.\n\t* cp/friend.c: ditto.\n\t* cp/init.c: ditto.\n\t* cp/lambda.c: ditto.\n\t* cp/lex.c: ditto.\n\t* cp/mangle.c: ditto.\n\t* cp/name-lookup.c: ditto.\n\t* cp/optimize.c: ditto.\n\t* cp/parser.c: ditto.\n\t* cp/pt.c: ditto.\n\t* cp/ptree.c: ditto.\n\t* cp/repo.c: ditto.\n\t* cp/rtti.c: ditto.\n\t* cp/search.c: ditto.\n\t* cp/semantics.c: ditto.\n\t* cp/tree.c: ditto.\n\t* cp/typeck2.c: ditto.\n\t* cp/typeck.c: ditto.\n\t* cppbuiltin.c: ditto.\n\t* cprop.c: ditto.\n\t* cse.c: Add include of symtab.h due to flattening of tree.h.\n\t* cselib.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* data-streamer.c: ditto.\n\t* data-streamer-in.c: ditto.\n\t* data-streamer-out.c: ditto.\n\t* dbxout.c: ditto.\n\t* dce.c: ditto.\n\t* ddg.c: Add include of symtab.h due to flattening of tree.h.\n\t* debug.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* dfp.c: ditto.\n\t* df-scan.c: ditto.\n\t* dojump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n\t* double-int.c: ditto.\n\t* dse.c: ditto.\n\t* dumpfile.c: ditto.\n\t* dwarf2asm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n\t* dwarf2cfi.c: ditto.\n\t* dwarf2out.c: ditto.\n\t* emit-rtl.c: ditto.\n\t* except.c: ditto.\n\t* explow.c: ditto.\n\t* expmed.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* expr.c: ditto.\n\t* final.c: ditto.\n\t* fixed-value.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, inchash.h and fixed-value.h due to flattening of tree.h.\n\t* fold-const.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\tRelocate inline function convert_to_ptrofftype_loc from tree.h.\n\tRelocate inline function fold_build_pointer_plus_loc from tree.h.\n\tRelocate inline function fold_build_pointer_plus_hwi_loc from tree.h.\n\t* fold-const.h: Relocate macro convert_to_ptrofftype from tree.h.\n\tRelocate macro fold_build_pointer_plus to relocate from tree.h.h.\n\tRelocate macro fold_build_pointer_plus_hwi from tree.h.\n\tAdd prototype for convert_to_ptrofftype_loc relocated from tree.h.\n\tAdd prototype for fold_build_pointer_plus_loc relocated from tree.h.\n\tAdd prototype for fold_build_pointer_plus_hwi_loc relocated from tree.h.\n\t* fortran/convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/cpp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/decl.c: ditto.\n\t* fortran/f95.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/iresolve.c: ditto.\n\t* fortran/match.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/module.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/options.c: ditto.\n\t* fortran/target-memory.c: Include hash-set.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans-array.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans-common.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans-const.c: ditto.\n\t* fortran/trans-decl.c: ditto.\n\t* fortran/trans-expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans-intrinsic.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n\t* fortran/trans-io.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* fortran/trans-openmp.c: ditto.\n\t* fortran/trans-stmt.c: ditto.\n\t* fortran/trans-types.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n\t* function.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* gcc-plugin.h: Include statistics.h, double-int.h, real.h, fixed-value.h,\n\talias.h, flags.h, and symtab.h due to flattening of tree.h\n\t* gcse.c: ditto.\n\t* generic-match-head.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ggc-page.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* gimple-builder.c: ditto.\n\t* gimple.c: ditto.\n\t* gimple-expr.c: ditto.\n\t* gimple-fold.c: ditto.\n\t* gimple-iterator.c: ditto.\n\t* gimple-low.c: ditto.\n\t* gimple-match-head.c: ditto.\n\t* gimple-pretty-print.c: ditto.\n\t* generic-ssa-isolate-paths.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* gimple-ssa-strength-reduction.c: ditto.\n\t* gimple-streamer-in.c: ditto.\n\t* gimple-streamer-out.c: ditto.\n\t* gimple-walk.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* gimplify.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* gimplify-me.c: ditto.\n\t* go/go-gcc.cc: ditto.\n\t* go/go-lang.c: ditto.\n\t* go/gdump.c: ditto.\n\t* graphite-blocking.c: ditto.\n\t* graphite.c: ditto.\n\t* graphite-dependencies.c: ditto.\n\t* graphite-interchange.c: ditto.\n\t* graphite-isl-ast-to-gimple.c: ditto.\n\t* graphite-optimize-isl.c: ditto.\n\t* graphite-poly.c: ditto.\n\t* graphite-scop-detection.c: ditto.\n\t* graphite-sese-to-poly.c: ditto.\n\t* hw-doloop.c: Include symtab.h due to flattening of tree.h.\n\t* ifcvt.c: ditto.\n\t* init-regs.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* internal-fc.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa.c: ditto.\n\t* ipa-chkp.c: ditto.\n\t* ipa-comdats.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-cp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-devirt.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-icf.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-icf-gimple.c: ditto.\n\t* ipa-inline-analysis.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-inline.c: ditto.\n\t* ipa-inline-transform.c: ditto.\n\t* ipa-polymorhpic-call.c: ditto.\n\t* ipa-profile.c: ditto.\n\t* ipa-prop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-pure-const.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-ref.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ipa-reference.c: ditto.\n\t* ipa-split.c: ditto.\n\t* ipa-utils.c: ditto.\n\t* ipa-visbility.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* ira.c: ditto.\n\t* ira-color.c: Include hash-set.h due to flattening of tree.h.\n\t* ira-costs.c: ditto.\n\t* ira-emit.c: ditto.\n\t* java/boehm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/builtins.c: ditto.\n\t* java/class.c: ditto.\n\t* java/constants.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/decl.c: ditto.\n\t* java/except.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h,inchash.h and real.h due to flattening of tree.h.\n\t* java/gimplify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/jcf-dump.c: ditto.\n\t* java/jcf-io.c: ditto.\n\t* java/jcf-parse.c: ditto.\n\t* java/jvgenmain.c: ditto.\n\t* java/lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/mangle.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* java/mangle_name.c: ditto.\n\t* java/resource.c: ditto.\n\t* java/typeck.c: ditto.\n\t* java/verify-glue.c: ditto.\n\t* java/verify-impl.c: ditto.\n\t* jump.c: Include symtab.h due to flattening of tree.h.\n\t* langhooks.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* loop-doloop.c: Include symtab.h due to flattening of tree.h.\n\t* loop-init.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* loop-invariant.c: Include symtab.h due to flattening of tree.h.\n\t* loop-iv.c: ditto.\n\t* loop-unroll.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lower-subreg.c: ditto.\n\t* lra-assigns.c: Include symtab.h due to flattening of tree.h.\n\t* lra.c: Include symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* lra-coalesce.c: Include symtab.h due to flattening of tree.h.\n\t* lra-constraints.c: ditto.\n\t* lra-eliminations.c: ditto.\n\t* lra-livesc: ditto.\n\t* lra-remat.c: ditto.\n\t* lra-spills.c: ditto.\n\t* lto/lto.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto/lto-lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto/lto-object.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto/lto-partition.c: ditto.\n\t* lto/lto-symtab.c: ditto.\n\t* lto-cgraph.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto-compress.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto-opts.c: ditto.\n\t* lto-section-in.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* lto-section-out.c: ditto.\n\t* lto-streamer.c: ditto.\n\t* lto-streamer-in.c: ditto.\n\t* lto-streamer-out.c: ditto.\n\t* modulo-sched.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* objc/objc-act.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options, fold-const.h,\n\twide-int.h, and inchash.h due to flattening of tree.h.\n\t* objc/objc-encoding.c: ditto.\n\t* objc/objc-gnu-runtime-abi-01.c: ditto.\n\t* objc/objc-lang.c: ditto.\n\t* objc/objc-map.c: ditto.\n\t* objc/objc-next-runtime-abi-01.c: ditto.\n\t* objc/objc-next-runtime-abi-02.c: ditto.\n\t* objc/objc-runtime-shared-support.c: ditto.\n\t* objcp/objcp-decl.c: ditto.\n\t* objcp/objcp-lang.c: ditto.\n\t* omega.c: ditto.\n\t* omega-low.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* optabs.c: ditto.\n\t* opts-global.c: ditto.\n\t* passes.c: ditto.\n\t* plugin.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* postreload.c: Include symtab.h due to flattening of tree.h.\n\t* postreload-gcse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* predict.c: ditto.\n\t* print-rtl.c: ditto.\n\t* print-tree.c: ditto.\n\t* profile.c: Include symtab.h, fold-const.h\n\tand inchash.h due to flattening of tree.h.\n\t* real.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* realmpfr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* recog.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* ree.c: ditto.\n\t* reginfo.c: ditto.\n\t* reg-stack.c: ditto.\n\t* reload1.c: Include symtab.h, fold-const.h, wide-int.h\n\tand inchash.h due to flattening of tree.h.\n\t* reload.c: Include symtab.h due to flattening of tree.h.\n\t* reorg.c: ditto.\n\t* rtlanal.c: Include symtab.h, fold-const.h, wide-int.h\n\tand inchash.h due to flattening of tree.h.\n\t* rtl-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* rtlhooks.c: Include symtab.h due to flattening of tree.h.\n\t* sanopt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* sched-deps.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* sched-vis.c: ditto.\n\t* sdbout.c: ditto.\n\t* sel-sched.c: Include symtab.h, fold-const.h, wide-int.h\n\tand inchash.h due to flattening of tree.h.\n\t* sel-sched-ir.c: ditto.\n\t* sese.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* shrink-wrap.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* simplify-rtx.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* stack-ptr-mod.c: ditto.\n\t* stmt.c: ditto.\n\t* store-motion.c: ditto.\n\t* store-layout.c: ditto.\n\t* stringpool.c: ditto.\n\t* symtab.c: ditto.\n\t* target-globals.c: ditto.\n\t* targhooks.c: ditto.\n\t* toplev.c: ditto.\n\t* tracer.c: ditto.\n\t* trans-mem.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-affine.c: ditto.\n\t* tree-browser.c: ditto.\n\t* tree.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-call-cdce.c: Include symtab.h, alias.h, double-int.h,\n\tfold-const.h, wide-int.h, inchash.h and real.h due to\n\tflattening of tree.h.\n\t* tree-cfg.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-cfgcleanup.c: ditto.\n\t* tree-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-chkp-opt.c: ditto.\n\t* tree-chrec.c: ditto.\n\t* tree-chkp-opt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n\treal.h due to flattening of tree.h.\n\t* tree-core.h: Flatten header file by removing all #include statements.\n\t* tree-data-ref.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-dfa.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n\treal.h due to flattening of tree.h.\n\t* tree-diagnostic.c: ditto.\n\t* tree-dump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n\tfixed-value.h due to flattening of tree.h.\n\t* tree-dfa.c: ditto.\n\t* tree-eh.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n\treal.h due to flattening of tree.h.\n\t* tree-emutls.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree.h: Flatten header files by removing all includes except tree-core.h.\n\tRemove inline function convert_to_ptrofftype_loc to relocate to fold-const.c.\n\tRemove macro convert_to_ptrofftype to relocate to fold-const.h.\n\tRemove inline function fold_build_pointer_plus_loc to relocate to fold-const.c.\n\tRemove macro fold_build_pointer_plus to relocate to fold-const.h.\n\tRemove inline function fold_build_pointer_plus_hwi_loc to relocate to fold-const.c.\n\tRemove macro fold_build_pointer_plus_hwi to relocate to fold-const.h.\n\t* tree-if-conv.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n\tfixed-value.h due to flattening of tree.h.\n\t* tree-inline.c: ditto.\n\t* tree-into-ssa.c: ditto.\n\t* tree-iterator.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-loop-distribution.c: ditto.\n\t* tree-nested.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-nrv.c: ditto.\n\t* tree-object-size.c: ditto.\n\t* tree-outof-ssa.c: ditto.\n\t* tree-parloops.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-phinodes.c: ditto.\n\t* tree-predcom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-pretty-print.c: ditto.\n\t* tree-profile.c: double-int.h, input.h, alias.h, symtab.h,\n\tfold-const.h, wide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-scalar-evolution.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-sra.c: Include  vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n\tinchash.h due to flattening of tree.h.\n\t* tree-ssa-alias.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-ssa.c: ditto.\n\t* tree-ssa-ccp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n\tand real.h due to flattening of tree.h.\n\t* tree-ssa-coalesce.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-ssa-copy.c: ditto.\n\t* tree-ssa-copyrename.c: ditto.\n\t* tree-ssa-dce.c: ditto.\n\t* tree-ssa-dom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n\tand real.h due to flattening of tree.h.\n\t* tree-ssa-dse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-ssa-forwprop.c: ditto.\n\t* tree-ssa-ifcombine.c: ditto.\n\t* tree-ssa-live.c: ditto.\n\t* tree-ssa-loop.c: ditto.\n\t* tree-ssa-loop-ch.c: ditto.\n\t* tree-ssa-loop-im.c: ditto.\n\t* tree-ssa-loop-ivcanon.c: ditto.\n\t* tree-ssa-loop-ivopts.c: ditto.\n\t* tree-ssa-loop-manip.c: ditto.\n\t* tree-ssa-loop-niter.c: ditto.\n\t* tree-ssa-loop-prefetch.c: ditto.\n\t* tree-ssa-loop-unswitch.c: ditto.\n\t* tree-ssa-loop-math-opts.c: ditto.\n\t* tree-ssanames.c: ditto.\n\t* tree-ssa-operands.c: ditto.\n\t* tree-ssa-phiopt.c: ditto.\n\t* tree-ssa-phiprop.c: ditto.\n\t* tree-ssa-pre.c: ditto.\n\t* tree-ssa-propagate.c: ditto.\n\t* tree-ssa-reassoc.c: ditto.\n\t* tree-ssa-sccvn.c: ditto.\n\t* tree-ssa-sink.c: ditto.\n\t* tree-ssa-strlen.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-ssa-structalias.c: double-int.h, input.h, alias.h, symtab.h,\n\tfold-const.h, wide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-ssa-tail-merge.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-ssa-ter.c: ditto.\n\t* tree-ssa-threadedge.c: ditto.\n\t* tree-ssa-threadupdate.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-ssa-uncprop.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n\twide-int.h and inchash.h due to flattening of tree.h.\n\t* tree-ssa-uninit.c: ditto.\n\t* tree-stdarg.c: Include vec.h, double-int.h, input.h, alias.h,\n\tsymtab.h, fold-const.h, wide-int.h and inchash.h due to flattening\n\tof tree.h.\n\t* tree-streamer.c: Include vec.h, double-int.h, input.h, alias.h,\n\tsymtab.h, options.h, fold-const.h, wide-int.h and\n\tinchash.h due to flattening of tree.h.\n\t* tree-streamer-in.c: Include hash-set.h, machmode.h, vec.h,\n\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n\twide-int.h, inchash.h, real.h and fixed-value.h due to flattening\n\tof tree.h.\n\t* tree-streamer-out.c: dittoo.\n\t* tree-switch-conversion.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-tailcall.c: ditto.\n\t* tree-vect-data-refs.c: ditto.\n\t* tree-vect-generic.c: Include hash-set.h, machmode.h, vec.h, double-int.h, input.h,\n\talias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-vect-loop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* tree-vect-loop-manip.c: ditto.\n\t* tree-vectorizer.c: ditto.\n\t* tree-vect-patterns.c: ditto.\n\t* tree-vect-slp.c: ditto.\n\t* tree-vect-stmts.c: ditto.\n\t* tree-vrp.c: ditto.\n\t* tsan.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* ubsan.c: ditto.\n\t* value-prof.c.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* varasm.c: ditto.\n\t* varpool.c: ditto.\n\t* var-tracking.c: ditto.\n\t* vmsdbgout.c: ditto.\n\t* vtable-verify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* wide-int.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\t* xcoffout.c: ditto.\n\t* libcc1/plugin.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n\tdue to flattening of tree.h.\n\nFrom-SVN: r219402", "tree": {"sha": "dfcb6b733a5247a67fc8aa24cc18a8473d54623f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfcb6b733a5247a67fc8aa24cc18a8473d54623f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40e2396121e547e79dd2492372176c18355fab4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e2396121e547e79dd2492372176c18355fab4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e2396121e547e79dd2492372176c18355fab4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e2396121e547e79dd2492372176c18355fab4f/comments", "author": null, "committer": null, "parents": [{"sha": "ccce3b2ac3c9352501278d36b3c79f049234870b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccce3b2ac3c9352501278d36b3c79f049234870b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccce3b2ac3c9352501278d36b3c79f049234870b"}], "stats": {"total": 6756, "additions": 5600, "deletions": 1156}, "files": [{"sha": "d06655bab54062f452ce68b74dd25f765e24e533", "filename": "gcc/ChangeLog", "status": "modified", "additions": 851, "deletions": 0, "changes": 851, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -1,3 +1,854 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\t\n+\t* genattrtab.c (write_header): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-attrtab.c.\n+\t* genautomata.c (main) : Include hash-set.h, macInclude hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-automata.c.\n+\t* genemit.c (main): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-emit.c.\n+\t* gengtype.c (open_base_files): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tgtype-desc.c.\n+\t* genopinit.c (main): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-opinit.c.\n+\t* genoutput.c (output_prologue): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-output.c.\n+\t* genpeep.c (main): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-peep.c.\n+\t* genpreds.c (write_insn_preds_c): Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\tinsn-preds.c.\n+\t* optc-save-gen-awk: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h when generating\n+\toptions-save.c.\n+\t* opth-gen.awk: Change include guard from GCC_C_COMMON_H to GCC_C_COMMON_C\n+\twhen generating options.h.\n+\t* ada/gcc-interface/cuintp.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* ada/gcc-interface/decl.c: ditto.\n+\t* ada/gcc-interface/misc.c: ditto.\n+\t* ada/gcc-interface/targtyps.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* ada/gcc-interface/trans.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, real.h,\n+\tfold-const.h, wide-int.h, inchash.h due to\n+\tflattening of tree.h.\n+\t* ada/gcc-interface/utils.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* ada/gcc-interface/utils2.c: ditto.\n+\t* alias.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* asan.c: ditto.\n+\t* attribs.c: ditto.\n+\t* auto-inc-dec.c: ditto.\n+\t* auto-profile.c: ditto\n+\t* bb-reorder.c: ditto.\n+\t* bt-load.c: Include symtab.h due to flattening of tree.h.\n+\t* builtins.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c/c-array-notation.c: ditto.\n+\t* c/c-aux-info.c: ditto.\n+\t* c/c-convert.c: ditto.\n+\t* c/c-decl.c: ditto.\n+\t* c/c-errors.c: ditto.\n+\t* c/c-lang.c: dittoxs.\n+\t* c/c-objc-common.c: ditto.\n+\t* c/c-parser.c: ditto.\n+\t* c/c-typeck.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, inchash.h, real.h and\n+\tfixed-value.h due to flattening of tree.h.\n+\t* calls.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* ccmp.c: ditto.\n+\t* c-family/array-notation-common.c: ditto.\n+\t* c-family/c-ada-spec.c: ditto.\n+\t* c-family/c-cilkplus.c: ditto.\n+\t* c-family/c-common.c: Include input.h due to flattening of tree.h.\n+\tDefine macro GCC_C_COMMON_C.\n+\t* c-family/c-common.h: Flatten tree.h header files into c-common.h.\n+\tRemove include of tree-core.h.\n+\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-family/c-dump.c: ditto.\n+\t* c-family/c-format.c: Flatten tree.h header files into c-common.h.\n+\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-family/c-dump.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-family/c-format.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, inchash.h and real.h due to\n+\tflattening of tree.h.\n+\t* c-family/c-gimplify.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-family/cilk.c: ditto.\n+\t* c-family/c-lex.c: ditto.\n+\t* c-family/c-omp.c: ditto.\n+\t* c-family/c-opts.c: ditto.\n+\t* c-family/c-pch.c: ditto.\n+\t* c-family/c-ppoutput.c: ditto.\n+\t* c-family/c-pragma.c: ditto.\n+\t* c-family/c-pretty-print.c: ditto.\n+\t* c-family/c-semantics.c: ditto.\n+\t* c-family/c-ubsan.c: ditto.\n+\t* c-family/stub-objc.c: ditto.\n+\t* cfgbuild.c: ditto.\n+\t* cfg.c: ditto.\n+\t* cfgcleanup.c: ditto.\n+\t* cfgexpand.c: ditto.\n+\t* cfghooks.c: ditto.\n+\t* cfgloop.c: Include symtab.h, fold-const.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* cfgloopmanip.c: ditto.\n+\t* cfgrtl.c:  Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* cgraphbuild.c: ditto.\n+\t* cgraph.c: ditto.\n+\t* cgraphclones.c: ditto.\n+\t* cgraphunit.c: ditto.\n+\t* cilk-common.c: ditto.\n+\t* combine.c: ditto.\n+\t* combine-stack-adj.c: Include symbol.h due to flattening of tree.h.\n+\t* config/aarch64/aarch64-builtins.c:  Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/aarch64/aarch64.c: ditto.\n+\t* config/alpha/alpha.c: ditto.\n+\t* config/arc/arc.c: ditto.\n+\t* config/arm/aarch-common.c: ditto.\n+\t* config/arm/arm-builtins.c: ditto.\n+\t* config/arm/arm.c: ditto.\n+\t* config/arm/arm-c.c: ditto.\n+\t* config/avr/avr.c: ditto.\n+\t* config/avr/avr-c.c: ditto.\n+\t* config/avr/avr-log.c: ditto.\n+\t* config/bfin/bfin.c: ditto.\n+\t* config/c6x/c6x.c: ditto.\n+\t* config/cr16/cr16.c: ditto.\n+\t* config/cris/cris.c: ditto.\n+\t* config/darwin.c: ditto.\n+\t* config/darwin-c.c: ditto.\n+\t* config/default-c.c: ditto.\n+\t* config/epiphany/epiphany.c: ditto.\n+\t* config/fr30/fr30.c: ditto.\n+\t* config/frv/frv.c: ditto.\n+\t* config/glibc-c.c: ditto.\n+\t* config/h8300/h8300.c: ditto.\n+\t* config/i386/i386.c: ditto.\n+\t* config/i386/i386-c.c: ditto.\n+\t* config/i386/msformat.c: ditto.\n+\t* config/i386/winnt.c: ditto.\n+\t* config/i386/winnt-cxx.c: ditto.\n+\t* config/i386/winnt-stubs.c: ditto.\n+\t* config/ia64/ia64.c: ditto.\n+\t* config/ia64/ia64-c.c: ditto.\n+\t* config/iq2000/iq2000.c: ditto.\n+\t* config/lm32/lm32.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* config/m32c/m32c.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/m32c/m32c-pragma.c: ditto.\n+\t* config/m32c/m32cr.c: ditto.\n+\t* config/m68/m68k.c: ditto.\n+\t* config/mcore/mcore.c: ditto.\n+\t* config/mep/mep.c: ditto.\n+\t* config/mep/mep-pragma.c: ditto.\n+\t* config/microblaze/microblaze.c: ditto.\n+\t* config/microblaze/microblaze-c.c: ditto.\n+\t* config/mips/mips.c: ditto.\n+\t* config/mmix/mmix.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* config/mn10300/mn10300.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/moxie/moxie.c: ditto.\n+\t* config/msp430/msp430.c: ditto.\n+\t* config/msp430/msp430-c.c: ditto.\n+\t* config/nds32/nds32.c: ditto.\n+\t* config/nds32/nds32-cost.c: ditto.\n+\t* config/nds32/nds32-fp-as-gp.c: ditto.\n+\t* config/nds32/nds32-intrinsic.c: ditto.\n+\t* config/nds32/nds32-isr.c: ditto.\n+\t* config/nds32/nds32-md-auxillary.c: ditto.\n+\t* config/nds32/nds32-memory-manipulationx.c: ditto.\n+\t* config/nds32/nds32-pipelines-auxillary.c: ditto.\n+\t* config/nds32/nds32-predicates.c: ditto.\n+\t* config/nios2/nios2.c: ditto.\n+\t* config/nvptx/nvptx.c: ditto.\n+\t* config/pa/pa.c: ditto.\n+\t* config/pdp11/pdp11x.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* config/rl78/rl78.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/rl78/rl78-cx.c: ditto.\n+\t* config/rs6000/rs6000.c: ditto.\n+\t* config/rs6000/rs6000-c.c: ditto.\n+\t* config/rx/rx.c: ditto.\n+\t* config/s390/s390.c: ditto.\n+\t* config/sh/sh.c: ditto.\n+\t* config/sh/sc.c: ditto.\n+\t* config/sh/sh-mem.cc: ditto.\n+\t* config/sh/sh_treg_combine.cc: Include symtab.h, inchash.h and tree.h\n+\tdue to flattening of tree.h.\n+\tRemove include of tree-core.h.\n+\t* config/sol2.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/sol2-c.c: ditto.\n+\t* config/sol2-cxx.c: ditto.\n+\t* config/sol2-stubs.c: ditto.\n+\t* config/sparc/sparc.c: ditto.\n+\t* config/sparc/sparc-cx.c: ditto.\n+\t* config/spu/spu.c: ditto.\n+\t* config/spu/spu-c.c: ditto\n+\t* config/storym16/stormy16.c: ditto.\n+\t* config/tilegx/tilegx.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* config/tilepro/gen-mul-tables.cc: Include symtab.h in generated file.\n+\t* config/tilegx/tilegx-c.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/tilepro/tilepro.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* config/tilepro/tilepro-c.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* config/v850/v850.c: ditto.\n+\t* config/v850/v850-c.c: ditto.\n+\t* config/vax/vax.c: ditto.\n+\t* config/vms/vms.c: ditto.\n+\t* config/vms/vms-c.c: ditto.\n+\t* config/vxworks.c: ditto.\n+\t* config/winnt-c.c: ditto.\n+\t* config/xtensa/xtensa.c: Include symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* coverage.c: ditto.\n+\t* cp/call.c: ditto.\n+\t* cp/class.c: ditto.\n+\t* cp/constexpr.c: ditto.\n+\t* cp/cp-array-notation.c: ditto.\n+\t* cp/cp-gimplify.c: ditto.\n+\t* cp/cp-lang.c: ditto.\n+\t* cp/cp-objcp-common.c: ditto.\n+\t* cp/cvt.c: ditto.\n+\t* cp/decl2.c: ditto.\n+\t* cp/decl.c: ditto.\n+\t* cp/dump.c: ditto.\n+\t* cp/error.c: ditto.\n+\t* cp/except.c: ditto.\n+\t* cp/expr.c: ditto.\n+\t* cp/friend.c: ditto.\n+\t* cp/init.c: ditto.\n+\t* cp/lambda.c: ditto.\n+\t* cp/lex.c: ditto.\n+\t* cp/mangle.c: ditto.\n+\t* cp/name-lookup.c: ditto.\n+\t* cp/optimize.c: ditto.\n+\t* cp/parser.c: ditto.\n+\t* cp/pt.c: ditto.\n+\t* cp/ptree.c: ditto.\n+\t* cp/repo.c: ditto.\n+\t* cp/rtti.c: ditto.\n+\t* cp/search.c: ditto.\n+\t* cp/semantics.c: ditto.\n+\t* cp/tree.c: ditto.\n+\t* cp/typeck2.c: ditto.\n+\t* cp/typeck.c: ditto.\n+\t* cppbuiltin.c: ditto.\n+\t* cprop.c: ditto.\n+\t* cse.c: Add include of symtab.h due to flattening of tree.h.\n+\t* cselib.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* data-streamer.c: ditto.\n+\t* data-streamer-in.c: ditto.\n+\t* data-streamer-out.c: ditto.\n+\t* dbxout.c: ditto.\n+\t* dce.c: ditto.\n+\t* ddg.c: Add include of symtab.h due to flattening of tree.h.\n+\t* debug.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* dfp.c: ditto.\n+\t* df-scan.c: ditto.\n+\t* dojump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\t* double-int.c: ditto.\n+\t* dse.c: ditto.\n+\t* dumpfile.c: ditto.\n+\t* dwarf2asm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\t* dwarf2cfi.c: ditto.\n+\t* dwarf2out.c: ditto.\n+\t* emit-rtl.c: ditto.\n+\t* except.c: ditto.\n+\t* explow.c: ditto.\n+\t* expmed.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* expr.c: ditto.\n+\t* final.c: ditto.\n+\t* fixed-value.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and fixed-value.h due to flattening of tree.h.\n+\t* fold-const.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\tRelocate inline function convert_to_ptrofftype_loc from tree.h.\n+\tRelocate inline function fold_build_pointer_plus_loc from tree.h.\n+\tRelocate inline function fold_build_pointer_plus_hwi_loc from tree.h.\n+\t* fold-const.h: Relocate macro convert_to_ptrofftype from tree.h.\n+\tRelocate macro fold_build_pointer_plus to relocate from tree.h.h.\n+\tRelocate macro fold_build_pointer_plus_hwi from tree.h.\n+\tAdd prototype for convert_to_ptrofftype_loc relocated from tree.h.\n+\tAdd prototype for fold_build_pointer_plus_loc relocated from tree.h.\n+\tAdd prototype for fold_build_pointer_plus_hwi_loc relocated from tree.h.\n+\t* fortran/convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/cpp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/decl.c: ditto.\n+\t* fortran/f95.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/iresolve.c: ditto.\n+\t* fortran/match.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/module.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/options.c: ditto.\n+\t* fortran/target-memory.c: Include hash-set.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans-array.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans-common.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans-const.c: ditto.\n+\t* fortran/trans-decl.c: ditto.\n+\t* fortran/trans-expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans-intrinsic.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\t* fortran/trans-io.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* fortran/trans-openmp.c: ditto.\n+\t* fortran/trans-stmt.c: ditto.\n+\t* fortran/trans-types.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\t* function.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* gcc-plugin.h: Include statistics.h, double-int.h, real.h, fixed-value.h,\n+\talias.h, flags.h, and symtab.h due to flattening of tree.h\n+\t* gcse.c: ditto.\n+\t* generic-match-head.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ggc-page.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* gimple-builder.c: ditto.\n+\t* gimple.c: ditto.\n+\t* gimple-expr.c: ditto.\n+\t* gimple-fold.c: ditto.\n+\t* gimple-iterator.c: ditto.\n+\t* gimple-low.c: ditto.\n+\t* gimple-match-head.c: ditto.\n+\t* gimple-pretty-print.c: ditto.\n+\t* generic-ssa-isolate-paths.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* gimple-ssa-strength-reduction.c: ditto.\n+\t* gimple-streamer-in.c: ditto.\n+\t* gimple-streamer-out.c: ditto.\n+\t* gimple-walk.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* gimplify.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* gimplify-me.c: ditto.\n+\t* go/go-gcc.cc: ditto.\n+\t* go/go-lang.c: ditto.\n+\t* go/gdump.c: ditto.\n+\t* graphite-blocking.c: ditto.\n+\t* graphite.c: ditto.\n+\t* graphite-dependencies.c: ditto.\n+\t* graphite-interchange.c: ditto.\n+\t* graphite-isl-ast-to-gimple.c: ditto.\n+\t* graphite-optimize-isl.c: ditto.\n+\t* graphite-poly.c: ditto.\n+\t* graphite-scop-detection.c: ditto.\n+\t* graphite-sese-to-poly.c: ditto.\n+\t* hw-doloop.c: Include symtab.h due to flattening of tree.h.\n+\t* ifcvt.c: ditto.\n+\t* init-regs.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* internal-fc.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa.c: ditto.\n+\t* ipa-chkp.c: ditto.\n+\t* ipa-comdats.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-cp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-devirt.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-icf.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-icf-gimple.c: ditto.\n+\t* ipa-inline-analysis.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-inline.c: ditto.\n+\t* ipa-inline-transform.c: ditto.\n+\t* ipa-polymorhpic-call.c: ditto.\n+\t* ipa-profile.c: ditto.\n+\t* ipa-prop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-pure-const.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-ref.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ipa-reference.c: ditto.\n+\t* ipa-split.c: ditto.\n+\t* ipa-utils.c: ditto.\n+\t* ipa-visbility.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* ira.c: ditto.\n+\t* ira-color.c: Include hash-set.h due to flattening of tree.h.\n+\t* ira-costs.c: ditto.\n+\t* ira-emit.c: ditto.\n+\t* java/boehm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/builtins.c: ditto.\n+\t* java/class.c: ditto.\n+\t* java/constants.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/decl.c: ditto.\n+\t* java/except.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h,inchash.h and real.h due to flattening of tree.h.\n+\t* java/gimplify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/jcf-dump.c: ditto.\n+\t* java/jcf-io.c: ditto.\n+\t* java/jcf-parse.c: ditto.\n+\t* java/jvgenmain.c: ditto.\n+\t* java/lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/mangle.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* java/mangle_name.c: ditto.\n+\t* java/resource.c: ditto.\n+\t* java/typeck.c: ditto.\n+\t* java/verify-glue.c: ditto.\n+\t* java/verify-impl.c: ditto.\n+\t* jump.c: Include symtab.h due to flattening of tree.h.\n+\t* langhooks.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* loop-doloop.c: Include symtab.h due to flattening of tree.h.\n+\t* loop-init.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* loop-invariant.c: Include symtab.h due to flattening of tree.h.\n+\t* loop-iv.c: ditto.\n+\t* loop-unroll.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lower-subreg.c: ditto.\n+\t* lra-assigns.c: Include symtab.h due to flattening of tree.h.\n+\t* lra.c: Include symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* lra-coalesce.c: Include symtab.h due to flattening of tree.h.\n+\t* lra-constraints.c: ditto.\n+\t* lra-eliminations.c: ditto.\n+\t* lra-livesc: ditto.\n+\t* lra-remat.c: ditto.\n+\t* lra-spills.c: ditto.\n+\t* lto/lto.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto/lto-lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto/lto-object.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto/lto-partition.c: ditto.\n+\t* lto/lto-symtab.c: ditto.\n+\t* lto-cgraph.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-compress.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-opts.c: ditto.\n+\t* lto-section-in.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-section-out.c: ditto.\n+\t* lto-streamer.c: ditto.\n+\t* lto-streamer-in.c: ditto.\n+\t* lto-streamer-out.c: ditto.\n+\t* modulo-sched.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* objc/objc-act.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* objc/objc-encoding.c: ditto.\n+\t* objc/objc-gnu-runtime-abi-01.c: ditto.\n+\t* objc/objc-lang.c: ditto.\n+\t* objc/objc-map.c: ditto.\n+\t* objc/objc-next-runtime-abi-01.c: ditto.\n+\t* objc/objc-next-runtime-abi-02.c: ditto.\n+\t* objc/objc-runtime-shared-support.c: ditto.\n+\t* objcp/objcp-decl.c: ditto.\n+\t* objcp/objcp-lang.c: ditto.\n+\t* omega.c: ditto.\n+\t* omega-low.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* optabs.c: ditto.\n+\t* opts-global.c: ditto.\n+\t* passes.c: ditto.\n+\t* plugin.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* postreload.c: Include symtab.h due to flattening of tree.h.\n+\t* postreload-gcse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* predict.c: ditto.\n+\t* print-rtl.c: ditto.\n+\t* print-tree.c: ditto.\n+\t* profile.c: Include symtab.h, fold-const.h\n+\tand inchash.h due to flattening of tree.h.\n+\t* real.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* realmpfr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* recog.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* ree.c: ditto.\n+\t* reginfo.c: ditto.\n+\t* reg-stack.c: ditto.\n+\t* reload1.c: Include symtab.h, fold-const.h, wide-int.h\n+\tand inchash.h due to flattening of tree.h.\n+\t* reload.c: Include symtab.h due to flattening of tree.h.\n+\t* reorg.c: ditto.\n+\t* rtlanal.c: Include symtab.h, fold-const.h, wide-int.h\n+\tand inchash.h due to flattening of tree.h.\n+\t* rtl-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* rtlhooks.c: Include symtab.h due to flattening of tree.h.\n+\t* sanopt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* sched-deps.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* sched-vis.c: ditto.\n+\t* sdbout.c: ditto.\n+\t* sel-sched.c: Include symtab.h, fold-const.h, wide-int.h\n+\tand inchash.h due to flattening of tree.h.\n+\t* sel-sched-ir.c: ditto.\n+\t* sese.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* shrink-wrap.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* simplify-rtx.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* stack-ptr-mod.c: ditto.\n+\t* stmt.c: ditto.\n+\t* store-motion.c: ditto.\n+\t* store-layout.c: ditto.\n+\t* stringpool.c: ditto.\n+\t* symtab.c: ditto.\n+\t* target-globals.c: ditto.\n+\t* targhooks.c: ditto.\n+\t* toplev.c: ditto.\n+\t* tracer.c: ditto.\n+\t* trans-mem.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-affine.c: ditto.\n+\t* tree-browser.c: ditto.\n+\t* tree.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-call-cdce.c: Include symtab.h, alias.h, double-int.h,\n+\tfold-const.h, wide-int.h, inchash.h and real.h due to\n+\tflattening of tree.h.\n+\t* tree-cfg.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-cfgcleanup.c: ditto.\n+\t* tree-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-chkp-opt.c: ditto.\n+\t* tree-chrec.c: ditto.\n+\t* tree-chkp-opt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n+\treal.h due to flattening of tree.h.\n+\t* tree-core.h: Flatten header file by removing all #include statements.\n+\t* tree-data-ref.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-dfa.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n+\treal.h due to flattening of tree.h.\n+\t* tree-diagnostic.c: ditto.\n+\t* tree-dump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n+\tfixed-value.h due to flattening of tree.h.\n+\t* tree-dfa.c: ditto.\n+\t* tree-eh.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n+\treal.h due to flattening of tree.h.\n+\t* tree-emutls.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree.h: Flatten header files by removing all includes except tree-core.h.\n+\tRemove inline function convert_to_ptrofftype_loc to relocate to fold-const.c.\n+\tRemove macro convert_to_ptrofftype to relocate to fold-const.h.\n+\tRemove inline function fold_build_pointer_plus_loc to relocate to fold-const.c.\n+\tRemove macro fold_build_pointer_plus to relocate to fold-const.h.\n+\tRemove inline function fold_build_pointer_plus_hwi_loc to relocate to fold-const.c.\n+\tRemove macro fold_build_pointer_plus_hwi to relocate to fold-const.h.\n+\t* tree-if-conv.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n+\tfixed-value.h due to flattening of tree.h.\n+\t* tree-inline.c: ditto.\n+\t* tree-into-ssa.c: ditto.\n+\t* tree-iterator.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-loop-distribution.c: ditto.\n+\t* tree-nested.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-nrv.c: ditto.\n+\t* tree-object-size.c: ditto.\n+\t* tree-outof-ssa.c: ditto.\n+\t* tree-parloops.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-phinodes.c: ditto.\n+\t* tree-predcom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-pretty-print.c: ditto.\n+\t* tree-profile.c: double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-scalar-evolution.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-sra.c: Include  vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-ssa-alias.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-ssa.c: ditto.\n+\t* tree-ssa-ccp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n+\tand real.h due to flattening of tree.h.\n+\t* tree-ssa-coalesce.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-ssa-copy.c: ditto.\n+\t* tree-ssa-copyrename.c: ditto.\n+\t* tree-ssa-dce.c: ditto.\n+\t* tree-ssa-dom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n+\tand real.h due to flattening of tree.h.\n+\t* tree-ssa-dse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-ssa-forwprop.c: ditto.\n+\t* tree-ssa-ifcombine.c: ditto.\n+\t* tree-ssa-live.c: ditto.\n+\t* tree-ssa-loop.c: ditto.\n+\t* tree-ssa-loop-ch.c: ditto.\n+\t* tree-ssa-loop-im.c: ditto.\n+\t* tree-ssa-loop-ivcanon.c: ditto.\n+\t* tree-ssa-loop-ivopts.c: ditto.\n+\t* tree-ssa-loop-manip.c: ditto.\n+\t* tree-ssa-loop-niter.c: ditto.\n+\t* tree-ssa-loop-prefetch.c: ditto.\n+\t* tree-ssa-loop-unswitch.c: ditto.\n+\t* tree-ssa-loop-math-opts.c: ditto.\n+\t* tree-ssanames.c: ditto.\n+\t* tree-ssa-operands.c: ditto.\n+\t* tree-ssa-phiopt.c: ditto.\n+\t* tree-ssa-phiprop.c: ditto.\n+\t* tree-ssa-pre.c: ditto.\n+\t* tree-ssa-propagate.c: ditto.\n+\t* tree-ssa-reassoc.c: ditto.\n+\t* tree-ssa-sccvn.c: ditto.\n+\t* tree-ssa-sink.c: ditto.\n+\t* tree-ssa-strlen.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-ssa-structalias.c: double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-ssa-tail-merge.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-ssa-ter.c: ditto.\n+\t* tree-ssa-threadedge.c: ditto.\n+\t* tree-ssa-threadupdate.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-ssa-uncprop.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h and inchash.h due to flattening of tree.h.\n+\t* tree-ssa-uninit.c: ditto.\n+\t* tree-stdarg.c: Include vec.h, double-int.h, input.h, alias.h,\n+\tsymtab.h, fold-const.h, wide-int.h and inchash.h due to flattening\n+\tof tree.h.\n+\t* tree-streamer.c: Include vec.h, double-int.h, input.h, alias.h,\n+\tsymtab.h, options.h, fold-const.h, wide-int.h and\n+\tinchash.h due to flattening of tree.h.\n+\t* tree-streamer-in.c: Include hash-set.h, machmode.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, inchash.h, real.h and fixed-value.h due to flattening\n+\tof tree.h.\n+\t* tree-streamer-out.c: dittoo.\n+\t* tree-switch-conversion.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-tailcall.c: ditto.\n+\t* tree-vect-data-refs.c: ditto.\n+\t* tree-vect-generic.c: Include hash-set.h, machmode.h, vec.h, double-int.h, input.h,\n+\talias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-vect-loop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* tree-vect-loop-manip.c: ditto.\n+\t* tree-vectorizer.c: ditto.\n+\t* tree-vect-patterns.c: ditto.\n+\t* tree-vect-slp.c: ditto.\n+\t* tree-vect-stmts.c: ditto.\n+\t* tree-vrp.c: ditto.\n+\t* tsan.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* ubsan.c: ditto.\n+\t* value-prof.c.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* varasm.c: ditto.\n+\t* varpool.c: ditto.\n+\t* var-tracking.c: ditto.\n+\t* vmsdbgout.c: ditto.\n+\t* vtable-verify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* wide-int.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\t* xcoffout.c: ditto.\n+\t* libcc1/plugin.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\n 2015-01-09  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/64539"}, {"sha": "d86b8d4710edd6263b5ca1d508f44ce3fee02e1a", "filename": "gcc/ada/gcc-interface/cuintp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fcuintp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -30,7 +30,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n \n #include \"ada.h\"\n #include \"types.h\""}, {"sha": "f16b0cb078961d35dae4df8fc350096d6ed8a2d4", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\""}, {"sha": "edaab97802ff5a28a84b7f3b03c3494544b5e862", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,7 +29,17 @@\n #include \"opts.h\"\n #include \"options.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"print-tree.h\"\n #include \"diagnostic.h\""}, {"sha": "6a4ee4e300d3274a7a897a1b460cceb1f204a1f6", "filename": "gcc/ada/gcc-interface/targtyps.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,6 +28,16 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"options.h\"\n #include \"tree.h\"\n #include \"tm.h\"\n #include \"tm_p.h\""}, {"sha": "7858b3bd126b8725847ea306a0a5d4bb7f0c8493", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,18 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"stmt.h\"\n@@ -36,16 +47,12 @@\n #include \"output.h\"\n #include \"libfuncs.h\"\t/* For set_stack_check_libfunc.  */\n #include \"tree-iterator.h\"\n-#include \"hash-set.h\"\n #include \"gimple-expr.h\"\n #include \"gimplify.h\"\n #include \"bitmap.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "b62c7d4c4a3276092e1327cd6b7cad74cfeb4b82", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"attribs.h\"\n@@ -45,10 +55,6 @@\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "4100ce0e757fa276b4bc7059f7b82a549838a2c4", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\""}, {"sha": "9261cd8eb2d8d450c4d91ffbc3806857bccfe0be", "filename": "gcc/alias.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"expr.h\"\n #include \"tm_p.h\""}, {"sha": "9585f6ca40d95a44a8803ec60db5e42cdaff9f35", "filename": "gcc/asan.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,13 +22,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"hash-table.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "c18bff291a7ac2e2274ef57a6cdb279c6d2094f8", "filename": "gcc/attribs.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "50258d5b8f8a7bf3ab7e12b90c9c41766e3dee68", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\""}, {"sha": "b2568890fe6ab8d3b37b8bb9e4d0653f0d7b0779", "filename": "gcc/auto-profile.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fauto-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fauto-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,7 +26,18 @@ along with GCC; see the file COPYING3.  If not see\n #include <set>\n \n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\"\n #include \"predict.h\""}, {"sha": "0b99db15db5307087da655497fbb5a9092f414dc", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -82,6 +82,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\""}, {"sha": "5030aae79b7f5860b26d0634fcb58cb4ac1a12de", "filename": "gcc/bt-load.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"target.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"insn-attr.h\""}, {"sha": "9280704e0435915bc1e80eea289dbd29979831db", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"machmode.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\""}, {"sha": "8a2f36fc139fe8a374a90f614df4614607d57c0c", "filename": "gcc/c-family/array-notation-common.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Farray-notation-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Farray-notation-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Farray-notation-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\" \n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"langhooks.h\" \n #include \"tree-iterator.h\""}, {"sha": "945fa7cdb34fd8eeb1ce52ef63989c20fe9aebb4", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"dumpfile.h\"\n #include \"c-ada-spec.h\"\n #include \"cpplib.h\""}, {"sha": "4f039d35f790b0901d254735e78a46f18c2fa2c3", "filename": "gcc/c-family/c-cilkplus.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-cilkplus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-cilkplus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cilkplus.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n "}, {"sha": "29cab015a1e05b6212bf3f7c02c979ab18329ce4", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -17,9 +17,12 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define GCC_C_COMMON_C\n+\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"input.h\"\n #include \"c-common.h\"\n #include \"tm.h\"\n #include \"intl.h\""}, {"sha": "bc2cdeea299d2f7e2576d672880bca2139362559", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"splay-tree.h\"\n #include \"cpplib.h\"\n #include \"ggc.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"input.h\"\n+#include \"statistics.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"flags.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n \n /* In order for the format checking to accept the C frontend\n    diagnostic framework extensions, you must include this file before"}, {"sha": "229a316a886e8421678003aa2e8aadf6a29d81a6", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\""}, {"sha": "47aaeb4c3dcfc02ef9ce77aec1a92a79b1824466", "filename": "gcc/c-family/c-dump.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-dump.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tree-dump.h\"\n #include \"c-common.h\""}, {"sha": "e47c190ce53544dbc2e82128f0e12783cb740128", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"flags.h\""}, {"sha": "4e7a96f2be73a7f713de485ed4f70ee9638d3e2d", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"c-common.h\"\n #include \"predict.h\"\n #include \"vec.h\""}, {"sha": "bb55be8063e285f613834815f903961e6c57b9e4", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,7 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\""}, {"sha": "0523b4c04d798fca892fba625d77051793fa3a1c", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\""}, {"sha": "124c91c700f196a183d4a9eb90a8a49f5842ace1", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"options.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\"\n@@ -34,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"incpath.h\"\n #include \"debug.h\"\t\t/* For debug_hooks.  */\n #include \"opts.h\"\n-#include \"options.h\"\n #include \"plugin.h\"\t\t/* For PLUGIN_INCLUDE_FILE event.  */\n #include \"mkdeps.h\"\n #include \"c-target.h\""}, {"sha": "599b600dc66d69c1320506824c59a0db9e62e4fd", "filename": "gcc/c-family/c-pch.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"version.h\"\n #include \"cpplib.h\"\n+#include \"options.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-common.h\""}, {"sha": "9b9cba06b393d1d2ad8f8f8a4488557398ab70d2", "filename": "gcc/c-family/c-ppoutput.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ppoutput.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@\n #include \"coretypes.h\"\n #include \"cpplib.h\"\n #include \"../libcpp/internal.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\t\t/* For flags.  */\n #include \"c-pragma.h\"\t\t/* For parse_in.  */"}, {"sha": "16c70e5cb9e4f52e887b1a858f02f0289bd459e1", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "4ca6420c3ff9253628cad7b0db55bc54b4eeb560", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"attribs.h\""}, {"sha": "f6b8d227bf5eff6e656e2ffe454c8224fcc302b4", "filename": "gcc/c-family/c-semantics.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-semantics.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,13 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"tree.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n-#include \"vec.h\"\n #include \"machmode.h\"\n-#include \"hard-reg-set.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n #include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"splay-tree.h\"\n #include \"c-common.h\""}, {"sha": "90d59c03a1609be63f601003153ccd63db61f612", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"alloc-pool.h\"\n #include \"hash-map.h\""}, {"sha": "3d13deb8a5a665ba933df1defb3ce07fb32004e5", "filename": "gcc/c-family/cilk.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fcilk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fcilk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcilk.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"calls.h\"\n #include \"langhooks.h\""}, {"sha": "b67c74c8d379230a2843377061d35558fcc4d3ac", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"vec.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"alias.h\"\n+#include \"input.h\"\n+#include \"symtab.h\"\n+#include \"double-int.h\"\n+#include \"flags.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"c-objc.h\""}, {"sha": "c77e751d0933c7d6497a4a198ab999c67e887596", "filename": "gcc/c/c-array-notation.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-array-notation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-array-notation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-array-notation.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -68,6 +68,15 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"flags.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"gimple-expr.h\""}, {"sha": "fcefcae2fd55baddc3a4a6bb18d0840c0a1b7dff", "filename": "gcc/c/c-aux-info.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-aux-info.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n "}, {"sha": "2cb53f748d6aed3096f7e6f926adf3716dfea957", "filename": "gcc/c/c-convert.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-convert.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,6 +27,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"convert.h\""}, {"sha": "b9424b5f154d81ee9cb09728e159cd5c1bb19c2d", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -30,7 +30,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"tm.h\"\n #include \"intl.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\""}, {"sha": "78c3dfd3b27d9a6d5f0a0d725553589e040dcc5b", "filename": "gcc/c/c-errors.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-errors.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"tm_p.h\""}, {"sha": "1d572854b1f6d64dd76ef4eca01e51a2c0e6f331", "filename": "gcc/c/c-lang.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-lang.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,8 +22,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n-#include \"fold-const.h\"\n #include \"c-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"langhooks.h\""}, {"sha": "344d4e2949c86541aae74409bfbd24c74a58b8e6", "filename": "gcc/c/c-objc-common.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,11 +20,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"flags.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"intl.h\"\n #include \"c-family/c-pretty-print.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"langhooks.h\""}, {"sha": "d3094656208aa33fb6ad722762941e9e3141507c", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -39,7 +39,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t\t/* For rtl.h: needs enum reg_class.  */\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"flags.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n #include \"stor-layout.h\""}, {"sha": "a851c8d271db49c1903fc3387bda5820ea9a1be2", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"trans-mem.h\"\n #include \"varasm.h\""}, {"sha": "82003a9c6555a46649e3bf9d2f6a4cf1a3b4f297", "filename": "gcc/caller-save.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"df.h\"\n #include \"reload.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "36aa19feaaa2bc0e0439ac17f2a7d2b7e5b4596e", "filename": "gcc/calls.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"stringpool.h\""}, {"sha": "3216669dad723254db8f45c8e8eb021775c39d99", "filename": "gcc/ccmp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fccmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fccmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fccmp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"regs.h\""}, {"sha": "d96be45a39136b5b651405533b93e82a90183f95", "filename": "gcc/cfg.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -53,6 +53,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"hash-table.h\"\n #include \"alloc-pool.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"predict.h\"\n #include \"vec.h\""}, {"sha": "c26abbf4e641581a11d8d9984615898f9405fa87", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\""}, {"sha": "f26458e3680bfbd557f02c1227e778cd50e0e467", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -34,6 +34,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\""}, {"sha": "366fc0a684bda5790372c79e77785a4dbb5cb8b7", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\""}, {"sha": "4b57280169349d684451efa2823b2196ee115fa6", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"dumpfile.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"predict.h\""}, {"sha": "ce56b69192aa586a629c2e25203acc2b917ec958", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"vec.h\"\n+#include \"symtab.h\"\n+#include \"inchash.h\"\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n@@ -38,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "444e259babff3af6cb1281ca0f8dba14ff350b71", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"graphds.h\"\n #include \"params.h\""}, {"sha": "45cc85da8638e0b34dfc00b6b1e7088e3069f50e", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"vec.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n+#include \"symtab.h\"\n+#include \"inchash.h\"\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n@@ -36,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "fdaefa213f8a161edbb33450b74e3641c9efcbd9", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -41,14 +41,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\""}, {"sha": "4770a6c38380bc46c456b1939280449e5aebfebb", "filename": "gcc/cgraph.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n #include \"print-tree.h\""}, {"sha": "f2f04c34ca0333dcdb8fff53826e37f0fa688fc1", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,12 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "2a7de2e6689f1bc29124f2d015c81d6b1fc86955", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -69,12 +69,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n-#include \"tree.h\"\n-#include \"stringpool.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n-#include \"vec.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"stringpool.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "e3be36090f7fc11e8e5ed0a84025058fbe8c59ae", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -161,17 +161,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"output.h\"\n #include \"rtl.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "36d023a712e386b1587dd34b239da66f27122a87", "filename": "gcc/cilk-common.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcilk-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcilk-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcilk-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"langhooks.h\""}, {"sha": "4c98f0082decc7da83f3570ff10effe85782dbab", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -55,6 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "101cf3593c390286f0d4c74a74d64b81e497b41d", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -80,17 +80,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "f45169e3c5fcad63ece93a45f63611df01b5d420", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"calls.h\"\n@@ -38,9 +48,6 @@\n #include \"vec.h\"\n #include \"ggc.h\"\n #include \"predict.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "5100532e8e6ecf098dc5f6ab5c7b0587256ba03d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@\n #include \"insn-codes.h\"\n #include \"rtl.h\"\n #include \"insn-attr.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -50,10 +60,6 @@\n #include \"target-def.h\"\n #include \"targhooks.h\"\n #include \"ggc.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"tm_p.h\""}, {"sha": "afb49bb514a95cf551d38151e651421d71afd8aa", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,7 +24,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"varasm.h\"\n@@ -42,10 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"diagnostic-core.h\""}, {"sha": "efba8a31b76392c3b65a7f39e8a1300cd9089179", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,7 +32,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\""}, {"sha": "b2bb859f7d80d34c2393c60f8bc4ab366cbd3028", "filename": "gcc/config/arm/aarch-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Faarch-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Faarch-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,6 +27,15 @@\n #include \"tm.h\"\n #include \"tm_p.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n #include \"rtl.h\""}, {"sha": "739369dfe613bfffb54f9ed890c69b16d27e8e49", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"expr.h\"\n #include \"tm_p.h\""}, {"sha": "3e4d1688b311d4ab3354759fc586d52f077315d8", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tm_p.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n "}, {"sha": "452820ab7a334b0f5c5927744e298d8295cd9cf5", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,9 +28,9 @@\n \tcortexm1smallmultiply,cortexm0smallmultiply,cortexm0plussmallmultiply,\n \tgenericv7a,cortexa5,cortexa7,\n \tcortexa8,cortexa9,cortexa12,\n-\tcortexa15,cortexa17,cortexr4,cortexr4f,\n-\tcortexr5,cortexr7,cortexm7,\n-\tcortexm4,cortexm3,marvell_pj4,\n-\tcortexa15cortexa7,cortexa17cortexa7,cortexa53,\n-\tcortexa57,cortexa57cortexa53\"\n+\tcortexa15,cortexa17,cortexr4,\n+\tcortexr4f,cortexr5,cortexr7,\n+\tcortexm7,cortexm4,cortexm3,\n+\tmarvell_pj4,cortexa15cortexa7,cortexa17cortexa7,\n+\tcortexa53,cortexa57,cortexa57cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "3c34ecf90146b1c1cb0dd85e7a6a2599cba00fdd", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,7 +26,17 @@\n #include \"hash-table.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -40,10 +50,6 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"reload.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "ffac50c6d6d242b1209fafc54a9a83a003d4e66a", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"tm.h\"\n #include \"tm_p.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"target.h\""}, {"sha": "8a191011883da788400f70d09113b2a31aea5531", "filename": "gcc/config/avr/avr-log.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr-log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr-log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-log.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,14 +23,19 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"print-tree.h\"\n #include \"output.h\"\n #include \"input.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"tm_p.h\""}, {"sha": "66406be58d43d5712ade9a018d8befa3cf777642", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,7 +31,17 @@\n #include \"insn-codes.h\"\n #include \"flags.h\"\n #include \"reload.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"print-tree.h\"\n #include \"calls.h\"\n@@ -42,10 +52,6 @@\n #include \"c-family/c-common.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\""}, {"sha": "bebbce317210ae3ccd850fa4a1cf85438fbfc5ef", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,15 +31,21 @@\n #include \"insn-flags.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"target.h\""}, {"sha": "fff0b847e85cf87feaf3560a50d473265b712dd9", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,7 +24,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n@@ -53,10 +63,6 @@\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n #include \"df.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "213dc368f8596dff4c038395c25a17c57cc99842", "filename": "gcc/config/cr16/cr16.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fcr16%2Fcr16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fcr16%2Fcr16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"tm_p.h\"\n@@ -36,10 +46,6 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\""}, {"sha": "15dcca22eb6e3cea12d55bc293900ae2262c86de", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,17 +29,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"conditions.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"diagnostic-core.h\""}, {"sha": "3803e75fb76494b144f6d2912b384fcc3e8755d1", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"target.h\"\n #include \"incpath.h\""}, {"sha": "c12a17ca7db796973eb78fe0c7455a8c34917b29", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,16 +31,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "549382248df1fe7cf7c9d96e04f9b0f0ba8dca7a", "filename": "gcc/config/default-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdefault-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fdefault-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdefault-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"c-family/c-target.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"c-family/c-target-def.h\"\n \n /* Do not include tm.h or tm_p.h here; if it is useful for a target to"}, {"sha": "102acc99cc5d0dc7853e98acf240980f1351e076", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n@@ -36,10 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\""}, {"sha": "2c00ff5a4d745b2bf195bdb3c598bc96fb9d3a1a", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,17 +32,23 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"output.h\"\n #include \"expr.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "eb1ef534fb0394b59b972fb5b3686a6cb21b2b71", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,7 +21,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n@@ -39,10 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\""}, {"sha": "4e7b5fc07e24f73fb220f0df015cd40f47310b99", "filename": "gcc/config/glibc-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fglibc-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fglibc-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fglibc-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"c-family/c-target.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"c-family/c-target-def.h\"\n \n /* Implement TARGET_C_PREINCLUDE for glibc targets.  */"}, {"sha": "fe85df5ad67ac1b2dec9224191310f3a32e628b1", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\""}, {"sha": "03045fb7238054df424d6e3b1c869771d13968a6", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"flags.h\""}, {"sha": "8724ea36cf411597e95d896518af823e7b8b442f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n #include \"calls.h\"\n@@ -38,10 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\""}, {"sha": "1aca93e298ee74a972d3ae11b93eba6207fe6d6c", "filename": "gcc/config/i386/msformat-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmsformat-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-family/c-common.h\""}, {"sha": "1d1a29b083e87cd6f497477afcb74539385a1ecf", "filename": "gcc/config/i386/winnt-cxx.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "b5d3bce71d8d85fc299d3ebf026d3a799796f27a", "filename": "gcc/config/i386/winnt-stubs.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"tm_p.h\""}, {"sha": "14fd2531fc97000bc00fce5bd42f9400e97b55b0", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,7 +26,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n #include \"flags.h\"\n@@ -40,9 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"predict.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "7bf50327e61ffebab4ab6599f1d8f8cf38d97d5f", "filename": "gcc/config/ia64/ia64-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fia64%2Fia64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fia64%2Fia64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cpplib.h\""}, {"sha": "40f1ae48a1b85341390a5d8c95711ac612414afe", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,7 +24,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -41,10 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "8d2b44fe0f26a9542e117f6aa4d74d9ae4c33cd7", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,7 +21,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"varasm.h\"\n@@ -33,10 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "ae995cf0e0b3f0fdd7d20333e43b8b6039f9a177", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -48,7 +48,11 @@\n #include \"insn-codes.h\"\n #include \"recog.h\"\n #include \"output.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"calls.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "6d8c762a46ff547739b1d581b610180d53c34f65", "filename": "gcc/config/m32c/m32c-pragma.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-common.h\""}, {"sha": "817650cc342d39ed92b129c0310733bc80393a0b", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -35,18 +35,24 @@\n #include \"reload.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "31021fce8483f9df236ea2e206d3d6cb1fe617c1", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -36,10 +45,6 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"expr.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\""}, {"sha": "6dcb6a20c017200457bbbb40ce8796cd3feda2ba", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,15 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"calls.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"rtl.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "d3a488594e04ea7cb667440b58b9525194e6d3b9", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"stringpool.h\"\n@@ -40,10 +50,6 @@\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"recog.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "f5bd20c2806d4c71b7d8bf444a81f0607f5822aa", "filename": "gcc/config/mep/mep-pragma.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-pragma.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,17 +22,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n #include \"c-family/c-pragma.h\"\n #include \"cpplib.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\" /* for decode_reg_name */\n #include \"mep-protos.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #define MAX_RECOG_OPERANDS 10"}, {"sha": "9e8884983ff2e01ba9793290f2fc170de97f9780", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n #include \"stringpool.h\"\n@@ -41,10 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\""}, {"sha": "a879ac666c767b6acbea893603debb26f54c4086", "filename": "gcc/config/microblaze/microblaze-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n #include \"tm_p.h\""}, {"sha": "bf0a4d8e49e90eb3ccd2c4588099194bbf603b8e", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,14 +32,19 @@\n #include \"insn-flags.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "327aa290ec2c9a7453e88bcc55504476e726aed7", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -33,15 +33,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"output.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "1849c7fbc1d8a3f783702a307b62090f049ced1d", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -43,6 +43,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n #include \"flags.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\""}, {"sha": "b65deeaf1b4f45ec78b10fa017c6737b0514b115", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -39,10 +48,6 @@\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"obstack.h\""}, {"sha": "08e90b908d2099ca7cfdfbbef6af088ee1e6d70d", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -35,6 +35,15 @@\n #include \"reload.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -43,10 +52,6 @@\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "036050c2c7c3b20ac1a7eabfc80d5e5877fbcdcc", "filename": "gcc/config/msp430/msp430-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmsp430%2Fmsp430-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmsp430%2Fmsp430-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n #include \"msp430-protos.h\""}, {"sha": "53172175f756bcbedeacff4fb507b677a4b05c77", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"rtl.h\"\n@@ -33,10 +43,6 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "9c8b57974cf72ee2293dd0e4df43c11344dc8723", "filename": "gcc/config/nds32/nds32-cost.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "88a8e5b38d5f8bad05e921e227e6310f3d0e6940", "filename": "gcc/config/nds32/nds32-fp-as-gp.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "8815179c7ca14b2c63c98ec2d830c89a774576aa", "filename": "gcc/config/nds32/nds32-intrinsic.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "bf2d659a301a6e5f5adda6c77cecede891d20110", "filename": "gcc/config/nds32/nds32-isr.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "374f1150fe16e8b28a3331a162066a8cecff3fe7", "filename": "gcc/config/nds32/nds32-md-auxiliary.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -39,10 +48,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "0bf8101cfd7063fe4040b5f12fbcb6658f3e0cf0", "filename": "gcc/config/nds32/nds32-memory-manipulation.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -39,10 +48,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "55030b1307cc239b2e40c89a756dca836f6a31e1", "filename": "gcc/config/nds32/nds32-pipelines-auxiliary.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -39,10 +48,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "7e5ecc0fb5ddaa362a226d811dccb53ea5b47d1a", "filename": "gcc/config/nds32/nds32-predicates.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "d2ffb6150a7026114aba36ecb18b1c9987d87a86", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "a078a5ef62090b0a4bc579ad86eaf1610a3cf233", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\"\n@@ -37,10 +47,6 @@\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "9e74ee39bf494a1c77425b43afb45d89ce57b114", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"insn-flags.h\"\n #include \"output.h\""}, {"sha": "3c39df2fbe08d3b43e6e785a3628f6bc7b674d18", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,7 +29,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"conditions.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n@@ -41,10 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"diagnostic-core.h\""}, {"sha": "85181ebb0460bf3fcfb689ca6f4ffeabc13dbd43", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -37,6 +37,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\""}, {"sha": "8c5d00c0584715648cbd13c55fb1d7df56585971", "filename": "gcc/config/rl78/rl78-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frl78%2Frl78-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frl78%2Frl78-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n #include \"rl78-protos.h\""}, {"sha": "d5a0075dc40afca151ce6461fb767b6da3de0c8d", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -34,10 +44,6 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "10071996e96a33e79dd3c2ab8577f1351dda21b7", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"wide-int.h\""}, {"sha": "4f8803d3aaee88a7083e6ac813c8d37cbf324720", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,7 +31,17 @@\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"obstack.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -41,10 +51,6 @@\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"output.h\""}, {"sha": "58ee86e83f4d6c002a616b78974915264c7304ea", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n@@ -38,10 +47,6 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "adb2a269fa27269f4435256fc3f1eac4370050b3", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n@@ -40,10 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\""}, {"sha": "8aa056dda43bce29d562c7db9fd3fb57bed5d439", "filename": "gcc/config/sh/sh-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "a3eb67935cb145e8a32193b63310cbff49c9878c", "filename": "gcc/config/sh/sh-mem.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-mem.cc?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,13 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"machmode.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "ddaa41861d9e32b84ad51f93269bc7a1a6366e39", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,7 +28,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"insn-config.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -38,10 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "3c3676719bc4dec7ac8dcdb1c5cf78d95d0f0eab", "filename": "gcc/config/sh/sh_treg_combine.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -46,7 +46,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n-#include \"tree-core.h\"\n+#include \"symtab.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n #include \"optabs.h\"\n #include \"expr.h\"\n "}, {"sha": "a73384c0f34f60dc118b2e4f916267bf38229f20", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "69212b21ff7cf320d8ad8d75a42c97adfc117877", "filename": "gcc/config/sol2-cxx.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-cxx.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,6 +20,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cp/cp-tree.h\""}, {"sha": "d35613c4c9e49a9617a42cacf431c4dfc4312a42", "filename": "gcc/config/sol2-stubs.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-stubs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2-stubs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-stubs.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,6 +20,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm.h\"\n #include \"tm_p.h\""}, {"sha": "d256776a9805c5d22985949e4fad2f4385371781", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\""}, {"sha": "b49599d725221439ae4fe06e6e4bbdb0f75e2fe7", "filename": "gcc/config/sparc/sparc-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsparc%2Fsparc-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsparc%2Fsparc-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"flags.h\""}, {"sha": "4d6143ae01151407bb83e256ab5fe9b59231dc94", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,7 +24,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -38,10 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"except.h\""}, {"sha": "739fa67127e2f5e7c4682c2e67db6becdf4cb40a", "filename": "gcc/config/spu/spu-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fspu%2Fspu-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fspu%2Fspu-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -19,6 +19,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"c-family/c-common.h\""}, {"sha": "9bb6fc091512d63493755c25aa62c07abddd2c56", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,7 +27,17 @@\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"obstack.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n@@ -36,10 +46,6 @@\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"output.h\""}, {"sha": "9234652b64bb8fed3a71ebac5d7600a6c26e3073", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -34,7 +34,17 @@\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -43,10 +53,6 @@\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"target.h\""}, {"sha": "c358d7306a36b7a50b185f0dff053ac212ba519a", "filename": "gcc/config/tilegx/tilegx-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilegx%2Ftilegx-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilegx%2Ftilegx-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"tm.h\"\n #include \"tm_p.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n "}, {"sha": "de1b3a61d49301e06ea3b8291578a9491c84bf3f", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -55,7 +55,11 @@\n #include \"function.h\"\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"hash-table.h\"\n #include \"ggc.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "ea31b0d229d5a79a130b4c0962aa600cf9365947", "filename": "gcc/config/tilepro/gen-mul-tables.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -1255,6 +1255,7 @@ main ()\n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"coretypes.h\\\"\\n\");\n+  printf (\"#include \\\"symtab.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\");\n   printf (\"#include \\\"optabs.h\\\"\\n\");"}, {"sha": "fc2afdac8347e205f2ac98126afe6a4946e5be3b", "filename": "gcc/config/tilepro/tilepro-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Ftilepro-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Ftilepro-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@\n #include \"tm.h\"\n #include \"tm_p.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n "}, {"sha": "8cf109a7bc3f90051e3d5b8b80df3b6eade65ab3", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -56,7 +56,11 @@\n #include \"function.h\"\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"hash-table.h\"\n #include \"ggc.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "a5480232b08e12ebabe28d2f76f7790db45953da", "filename": "gcc/config/v850/v850-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fv850%2Fv850-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fv850%2Fv850-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\""}, {"sha": "688df17a218f091e8ea4ffb1a276867e2f6cfc2e", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n@@ -37,10 +46,6 @@\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"diagnostic-core.h\""}, {"sha": "deb42e497441222fbbf895005c1350e4d14fe7e6", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,17 +32,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"basic-block.h\"\n #include \"df.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"calls.h\"\n #include \"varasm.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"output.h\""}, {"sha": "540dc0955f90955fec41db19f4f345cc056028a4", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-common.h\""}, {"sha": "306379f01a7e7fbe5e86bce59abc36a959b81ef0", "filename": "gcc/config/vms/vms.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvms%2Fvms.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvms%2Fvms.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"vms-protos.h\""}, {"sha": "4e4cfc8ab6374dc3a29046a05a5a655b439460ed", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"output.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n \n /* Like default_named_section_asm_out_constructor, except that even"}, {"sha": "3b9e542ddd01a61472dcf75803fcfb792d721b0e", "filename": "gcc/config/winnt-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fwinnt-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fwinnt-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt-c.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"c-family/c-target.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"options.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"c-family/c-target-def.h\"\n \n static bool"}, {"sha": "8bd7ae787fb39a93fa8b37940eb1a5afbf55ce2d", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -47,7 +47,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"recog.h\"\n #include \"output.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\""}, {"sha": "142e82a3c8f484888708d4ca527bb08bf13d9c92", "filename": "gcc/convert.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"convert.h\""}, {"sha": "76866ca3a025a8ff6ac7551faacd1ff5a653c9fe", "filename": "gcc/coverage.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,17 +29,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"regs.h\"\n #include \"expr.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "9568c836882f36f095f6d12f8fe458bb9df70d28", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"trans-mem.h\"\n@@ -43,10 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "edb87fe2e0a46df0f9f8100023251cb2287ac492", "filename": "gcc/cp/class.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n@@ -38,10 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "9a0d518450f3f9f47884dd4df8acc1778d7cfa53", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"cp-tree.h\""}, {"sha": "c64f7e233bcaa2c2f70a12af99ad7602712b7b1f", "filename": "gcc/cp/cp-array-notation.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-array-notation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-array-notation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-array-notation.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -53,6 +53,16 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\""}, {"sha": "6136b6059f5352bac710365916774f54076fc07f", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,16 +23,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"tree-iterator.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "825005a241fde0f4ec16d9712e40ecac1e63b906", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"cp-tree.h\""}, {"sha": "dd8e7c598148236e3fa4648f81444656d6710c58", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\""}, {"sha": "d0924f100c56181ad1f1aacaf988cb13c476ce4b", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,6 +28,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n@@ -36,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"convert.h\"\n #include \"decl.h\"\n #include \"target.h\"\n-#include \"wide-int.h\"\n \n static tree cp_convert_to_pointer (tree, tree, tsubst_flags_t);\n static tree convert_to_pointer_force (tree, tree, tsubst_flags_t);"}, {"sha": "9d9a04eeee6b56671887a193c015b6b06f4ccd6b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -30,6 +30,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tree-hasher.h\"\n #include \"stringpool.h\"\n@@ -61,9 +70,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "e59a8f9058dc3f568cabb8019dce39237134f743", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -30,6 +30,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n@@ -48,10 +57,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "a318a230d469cb6d1aabeb1f0c4384e9324bd6aa", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"tree-dump.h\""}, {"sha": "ce43f86b72bb1944156eb7a5e377f5de63cbcc26", "filename": "gcc/cp/error.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cp-tree.h\""}, {"sha": "902aeb228cb2e9319a1d40de4e1ae651ef79d3db", "filename": "gcc/cp/except.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"trans-mem.h\""}, {"sha": "dc7b2777f0de97a39d6bd03da4402aac40ba3b2e", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\""}, {"sha": "20781cb6df065805495779ddd1d4887b1e93fab9", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\""}, {"sha": "e600472c72c978a201e5d05b5476fe5dda581bce", "filename": "gcc/cp/init.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\""}, {"sha": "6c9e224c0f49ef6383fc60a9a4b56a7d949d5403", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,15 +24,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "0fced4f9fd6ab95d4d23f7ee151c05708a32f921", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"input.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cp-tree.h\""}, {"sha": "45377fc02e4a0036e7d216bd97e289695b2afcf2", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -48,6 +48,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tree-hasher.h\"\n #include \"stor-layout.h\"\n@@ -60,10 +69,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "aeb3791022f40f6150055ae99c79c76b297b2d39", "filename": "gcc/cp/method.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\"\n@@ -38,10 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "cf612407e9e58a5bde24891304fdf39a4f1d16ed", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"print-tree.h\"\n@@ -35,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"debug.h\"\n #include \"c-family/c-pragma.h\"\n #include \"params.h\"\n-#include \"hash-set.h\"\n \n /* The bindings for a particular name in a particular scope.  */\n "}, {"sha": "2d20e096f7c57a44874b93b38289d59a061e51d0", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cp-tree.h\"\n@@ -39,9 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"ipa-ref.h\""}, {"sha": "3290dfa7e5951091d34d94481abd2330083cc7b5", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"timevar.h\"\n #include \"cpplib.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"print-tree.h\"\n #include \"stringpool.h\"\n@@ -39,10 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "d8652fb3d21430101d75f8c228b122968684da61", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,6 +28,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\""}, {"sha": "79c80a30d9ade40d480afa3f8b680b89906d7e6d", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"print-tree.h\"\n #include \"cp-tree.h\""}, {"sha": "604d66728de2de83e1a3007e74432270dfb346e0", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,6 +28,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"cp-tree.h\""}, {"sha": "3e941b94588aefb1dc5654e7c0a1693bb3dc93f6", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"stringpool.h\""}, {"sha": "0031acdd848a9f1e2f1995c6056a7567cf9ce9ba", "filename": "gcc/cp/search.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"intl.h\""}, {"sha": "15b8d0111a047cc98bf7fda52082771f16c007e1", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -27,6 +27,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stmt.h\"\n #include \"varasm.h\"\n@@ -44,10 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "80f2ce6ab9fcb41e0b0827c6a49005325d9b5eb1", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tree-hasher.h\"\n #include \"stor-layout.h\"\n #include \"print-tree.h\"\n@@ -35,10 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "69e22290765f31e476b0baba14b02fbf0d84fa68", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,7 +28,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"cp-tree.h\""}, {"sha": "ddd30d19bc72c5214b77e6dec24065ee9f0bdf1e", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,6 +29,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\""}, {"sha": "aae6217cef9f6d4cfec2b7b126a82452e3a52632", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"version.h\"\n #include \"flags.h\""}, {"sha": "4538291c078e77f8db28d5b4a9caadfb18b55e92", "filename": "gcc/cprop.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,8 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n-\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"regs.h\""}, {"sha": "ec64ffa004b87ef0148888e99b5510dad770da6d", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\""}, {"sha": "d6ccbfb46902a523a1d8681afeced324a72c4ea2", "filename": "gcc/cselib.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,8 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"/* FIXME: For hashing DEBUG_EXPR & friends.  */\n #include \"tm_p.h\"\n #include \"regs.h\"\n@@ -31,9 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"emit-rtl.h\""}, {"sha": "897ceab44175a13cb39d9a603c8774a9608e3b00", "filename": "gcc/data-streamer-in.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer-in.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,12 +24,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"predict.h\"\n #include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "caee0c6a464633d6055981bcf1cc530d2325301d", "filename": "gcc/data-streamer-out.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer-out.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,12 +23,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "e3a1b41ad70745348417400a00c55c3bcbc1887b", "filename": "gcc/data-streamer.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdata-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,12 +22,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "f0e24b63bdf364835312573fb8a88117d9884c89", "filename": "gcc/dbxout.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -70,8 +70,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"rtl.h\""}, {"sha": "99f6271556271209b6a9228402627cd437de2d63", "filename": "gcc/dce.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "8c31b8926dc00769e5f3f0eea002836f74a7356c", "filename": "gcc/ddg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cfgloop.h\"\n #include \"sbitmap.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"bitmap.h\"\n #include \"df.h\""}, {"sha": "7d18c0aa868435f406e310d1da1319f2e83ebddc", "filename": "gcc/debug.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -19,6 +19,15 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"debug.h\"\n "}, {"sha": "1700be998054c88581a7d7dcf26b051dd5202780", "filename": "gcc/df-scan.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,8 +31,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n-#include \"vec.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "a55e3598e8929a08c60c3b20b0e751467359c3ab", "filename": "gcc/dfp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"dfp.h\""}, {"sha": "9133eb75d40412ee5256587061abeaf9b4a6cac3", "filename": "gcc/dojump.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,13 +22,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "301622eb442d2fa044427896d63f65af3e88d4f8", "filename": "gcc/double-int.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdouble-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdouble-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t\t/* For BITS_PER_UNIT and *_BIG_ENDIAN.  */\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n \n static int add_double_with_sign (unsigned HOST_WIDE_INT, HOST_WIDE_INT,"}, {"sha": "e3022366dd646b94c1ac8dfa8c230dc56c627edb", "filename": "gcc/dse.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,7 +28,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"regs.h\""}, {"sha": "743344e5e1533c509f48a772f898c315a1e2b306", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n #include \"dumpfile.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n #include \"gimple-pretty-print.h\"\n #include \"context.h\""}, {"sha": "c5942b902748719d2ed01e1cb13f4993ac420b4b", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,6 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"varasm.h\""}, {"sha": "9def81b91c465c88d987737e2fc92d9ee548e1be", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,12 +24,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"version.h\"\n #include \"flags.h\"\n #include \"rtl.h\"\n-#include \"tree.h\"\n-#include \"stor-layout.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n-#include \"vec.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n+#include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "4fbcb97c6d68e961c349994de537c1b83bc9b326", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -60,7 +60,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\""}, {"sha": "43d924280747ed4e49a72323894fb010145bbee7", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -37,13 +37,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"varasm.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "bceb67973646f5e30d73b629a213e2b3850e782e", "filename": "gcc/except.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -114,14 +114,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "3e3cf053d5455bd47e30161ae6ab3b52fea3e243", "filename": "gcc/explow.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,15 +24,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "d184552e37dd98a6c4a52aaa154be50419ede559", "filename": "gcc/expmed.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\""}, {"sha": "fc2286257c3b6731e666444cb70a98c5c3e4214a", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"machmode.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"attribs.h\"\n@@ -32,9 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"insn-config.h\""}, {"sha": "7797d815566dfa2bbf2244e0564e088305cac052", "filename": "gcc/final.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -46,7 +46,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"hard-reg-set.h\"\n@@ -60,10 +68,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"output.h\"\n #include \"except.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"rtl-error.h\""}, {"sha": "689794584a653923797e8b9682a96d80cfa973f3", "filename": "gcc/fixed-value.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffixed-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffixed-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"fixed-value.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n #include \"wide-int.h\""}, {"sha": "b1cbfac7f75a58b74d92d1b120d148316ebd3a6a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -45,7 +45,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"tree-iterator.h\"\n@@ -61,8 +71,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\"\n@@ -16214,3 +16222,27 @@ fold_strip_sign_ops (tree exp)\n     }\n   return NULL_TREE;\n }\n+\n+/* Return OFF converted to a pointer offset type suitable as offset for\n+   POINTER_PLUS_EXPR.  Use location LOC for this conversion.  */\n+tree\n+convert_to_ptrofftype_loc (location_t loc, tree off)\n+{\n+  return fold_convert_loc (loc, sizetype, off);\n+}\n+\n+/* Build and fold a POINTER_PLUS_EXPR at LOC offsetting PTR by OFF.  */\n+tree\n+fold_build_pointer_plus_loc (location_t loc, tree ptr, tree off)\n+{\n+  return fold_build2_loc (loc, POINTER_PLUS_EXPR, TREE_TYPE (ptr),\n+\t\t\t  ptr, convert_to_ptrofftype_loc (loc, off));\n+}\n+\n+/* Build and fold a POINTER_PLUS_EXPR at LOC offsetting PTR by OFF.  */\n+tree\n+fold_build_pointer_plus_hwi_loc (location_t loc, tree ptr, HOST_WIDE_INT off)\n+{\n+  return fold_build2_loc (loc, POINTER_PLUS_EXPR, TREE_TYPE (ptr),\n+\t\t\t  ptr, size_int (off));\n+}"}, {"sha": "a6d0ceadcf6b67fb0a7a465ded381d2af2bb4188", "filename": "gcc/fold-const.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffold-const.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffold-const.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.h?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -172,4 +172,21 @@ extern tree exact_inverse (tree, tree);\n extern tree const_unop (enum tree_code, tree, tree);\n extern tree const_binop (enum tree_code, tree, tree, tree);\n \n+/* Return OFF converted to a pointer offset type suitable as offset for\n+   POINTER_PLUS_EXPR.  Use location LOC for this conversion.  */\n+extern tree convert_to_ptrofftype_loc (location_t loc, tree off);\n+\n+#define convert_to_ptrofftype(t) convert_to_ptrofftype_loc (UNKNOWN_LOCATION, t)\n+\n+/* Build and fold a POINTER_PLUS_EXPR at LOC offsetting PTR by OFF.  */\n+extern tree fold_build_pointer_plus_loc (location_t loc, tree ptr, tree off);\n+\n+#define fold_build_pointer_plus(p,o) \\\n+\tfold_build_pointer_plus_loc (UNKNOWN_LOCATION, p, o)\n+\n+/* Build and fold a POINTER_PLUS_EXPR at LOC offsetting PTR by OFF.  */\n+extern tree fold_build_pointer_plus_hwi_loc (location_t loc, tree ptr, HOST_WIDE_INT off);\n+\n+#define fold_build_pointer_plus_hwi(p,o) \\\n+\tfold_build_pointer_plus_hwi_loc (UNKNOWN_LOCATION, p, o)\n #endif // GCC_FOLD_CONST_H"}, {"sha": "261083dcf6ecdef309df08843b674404fbf9e2b6", "filename": "gcc/fortran/convert.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fconvert.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"convert.h\"\n \n /* Prepare expr to be an argument of a TRUTH_NOT_EXPR,"}, {"sha": "b30f90e05c50b961aff6aada840b318565ba94be", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,6 +20,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"version.h\"\n #include \"flags.h\""}, {"sha": "dfb760b14414a226d2efad236fa1f151a39fa863", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -26,6 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"parse.h\"\n #include \"flags.h\"\n #include \"constructor.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n "}, {"sha": "ff57de0d4536539ea9a13b4f282972dac91d7e31", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -28,16 +28,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"timevar.h\"\n #include \"tm.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "6fa0994cf2322169b70c773166a4c4bd202c4ee1", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,6 +29,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"gfortran.h\""}, {"sha": "2973d5a1c5cc4b20c80c185d6fd0cdb029365324", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,6 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gfortran.h\"\n #include \"match.h\"\n #include \"parse.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n "}, {"sha": "c47489aeec3dedad424973aae0985450d9389d18", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -73,6 +73,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"parse.h\" /* FIXME */\n #include \"constructor.h\"\n #include \"cpp.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stringpool.h\"\n #include \"scanner.h\""}, {"sha": "a356f538eaae96fdbbfc4089b324aaff225da860", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,12 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"intl.h\"\n #include \"opts.h\"\n #include \"toplev.h\"  /* For save_decoded_options.  */\n-#include \"options.h\"\n #include \"params.h\"\n #include \"tree-inline.h\"\n #include \"gfortran.h\""}, {"sha": "4d636368d565b231d60d1820d2c2c864e9541153", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,8 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"flags.h\"\n+#include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"gfortran.h\"\n #include \"arith.h\"\n@@ -32,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"trans-const.h\"\n #include \"trans-types.h\"\n #include \"target-memory.h\"\n-#include \"wide-int.h\"\n \n /* --------------------------------------------------------------- */\n /* Calculate the size of an expression.  */"}, {"sha": "08b020b42a827f2fd91f9aa430491fb47585ffa8", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -79,7 +79,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"gimple-expr.h\"\n #include \"diagnostic-core.h\"\t/* For internal_error/fatal_error.  */\n #include \"flags.h\""}, {"sha": "6dd11062ae8175480e72ed69439142c402948c7f", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -97,7 +97,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\""}, {"sha": "4e2f577181b40d4ee37106507ebd56845e455161", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,7 +24,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"real.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"realmpfr.h\"\n #include \"diagnostic-core.h\"\t/* For fatal_error.  */\n@@ -33,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"trans-const.h\"\n #include \"trans-types.h\"\n #include \"target-memory.h\"\n-#include \"wide-int.h\"\n \n tree gfc_rank_cst[GFC_MAX_DIMENSIONS + 1];\n "}, {"sha": "b099a0b71ef70654515404b423c2338b213963eb", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n@@ -36,10 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\t/* For internal_error.  */\n #include \"toplev.h\"\t/* For announce_function.  */\n #include \"target.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "5ebf3abb273be4f2889f2f0e339fae71c7d77900", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"diagnostic-core.h\"\t/* For fatal_error.  */\n #include \"langhooks.h\"\n@@ -40,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"trans-stmt.h\"\n #include \"dependency.h\"\n #include \"gimplify.h\"\n-#include \"wide-int.h\"\n \n /* Convert a scalar to an array descriptor. To be used for assumed-rank\n    arrays.  */"}, {"sha": "ca6d5e231f172836f160f1806f83286d033bb1ae", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -25,7 +25,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t/* For UNITS_PER_WORD.  */\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"tree-nested.h\"\n #include \"stor-layout.h\"\n@@ -44,7 +55,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Only for gfc_trans_assign and gfc_trans_pointer_assign.  */\n #include \"trans-stmt.h\"\n #include \"tree-nested.h\"\n-#include \"wide-int.h\"\n \n /* This maps Fortran intrinsic math functions to external library or GCC\n    builtin functions.  */"}, {"sha": "ef37fcfc5c624a53afca35342138111f65d01ee3", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"ggc.h\""}, {"sha": "e77c191545265093e114da2ba1566d73ecb0331a", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"gimple-expr.h\"\n #include \"gimplify.h\"\t/* For create_tmp_var_raw.  */\n #include \"stringpool.h\""}, {"sha": "69a1065755844569d005fc71fb66264c0e996d5d", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,7 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"gfortran.h\"\n #include \"flags.h\""}, {"sha": "bc92abc09b5679588f2ac98aee103570a97fa54f", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -33,7 +33,18 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t   LONG_TYPE_SIZE, LONG_LONG_TYPE_SIZE,\n \t\t\t   FLOAT_TYPE_SIZE, DOUBLE_TYPE_SIZE and\n \t\t\t   LONG_DOUBLE_TYPE_SIZE.  */\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"langhooks.h\"\t/* For iso-c-bindings.def.  */"}, {"sha": "c7aaee80e65249eb133882922d25d87f5f076970", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"gfortran.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"gimple-expr.h\"\t/* For create_tmp_var_raw.  */\n #include \"stringpool.h\"\n #include \"tree-iterator.h\""}, {"sha": "9589e64df2ecaef666ff206a5e31450e902af355", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -36,7 +36,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl-error.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"stringpool.h\""}, {"sha": "3dd52ee316aa03101108e4dda9449c27224f0f72", "filename": "gcc/gcc-plugin.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgcc-plugin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgcc-plugin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-plugin.h?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -48,6 +48,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n #include \"ipa-ref.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"flags.h\"\n+#include \"symtab.h\"\n+#include \"tree-core.h\"\n+#include \"hash-set.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"fold-const.h\"\n+#include \"tree-check.h\"\n \n /* Event names.  */\n enum plugin_event"}, {"sha": "0f046415668b3f7403d961374f7cdf2ff52b260d", "filename": "gcc/gcse.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -138,9 +138,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n-\n #include \"hard-reg-set.h\"\n #include \"rtl.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n@@ -149,10 +157,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "1fc6b2b6f7a5e0be9c27d7552ee47f566789999c", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -5108,6 +5108,16 @@ write_header (FILE *outf)\n   fprintf (outf, \"#include \\\"system.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"coretypes.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"tm.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"hash-set.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"machmode.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"vec.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"double-int.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"input.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"alias.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"symtab.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"options.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"wide-int.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"inchash.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"tree.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"varasm.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"stor-layout.h\\\"\\n\");"}, {"sha": "896f7afa0f54a5adccd08112fcc1bd9795cbebab", "filename": "gcc/genautomata.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -9675,6 +9675,15 @@ main (int argc, char **argv)\n \t\t\"#include \\\"system.h\\\"\\n\"\n \t\t\"#include \\\"coretypes.h\\\"\\n\"\n \t\t\"#include \\\"tm.h\\\"\\n\"\n+\t\t\"#include \\\"hash-set.h\\\"\\n\"\n+\t\t\"#include \\\"machmode.h\\\"\\n\"\n+\t\t\"#include \\\"vec.h\\\"\\n\"\n+\t\t\"#include \\\"double-int.h\\\"\\n\"\n+\t\t\"#include \\\"input.h\\\"\\n\"\n+\t\t\"#include \\\"alias.h\\\"\\n\"\n+\t\t\"#include \\\"symtab.h\\\"\\n\"\n+\t\t\"#include \\\"wide-int.h\\\"\\n\"\n+\t\t\"#include \\\"inchash.h\\\"\\n\"\n \t\t\"#include \\\"tree.h\\\"\\n\"\n \t\t\"#include \\\"varasm.h\\\"\\n\"\n \t\t\"#include \\\"stor-layout.h\\\"\\n\""}, {"sha": "cda3fce87503bace4ff7004b541c2bd6875c1e05", "filename": "gcc/genemit.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -795,6 +795,15 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"coretypes.h\\\"\\n\");\n   printf (\"#include \\\"tm.h\\\"\\n\");\n+  printf (\"#include \\\"hash-set.h\\\"\\n\");\n+  printf (\"#include \\\"machmode.h\\\"\\n\");\n+  printf (\"#include \\\"vec.h\\\"\\n\");\n+  printf (\"#include \\\"double-int.h\\\"\\n\");\n+  printf (\"#include \\\"input.h\\\"\\n\");\n+  printf (\"#include \\\"alias.h\\\"\\n\");\n+  printf (\"#include \\\"symtab.h\\\"\\n\");\n+  printf (\"#include \\\"wide-int.h\\\"\\n\");\n+  printf (\"#include \\\"inchash.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n   printf (\"#include \\\"varasm.h\\\"\\n\");\n   printf (\"#include \\\"stor-layout.h\\\"\\n\");"}, {"sha": "c34604d6940456ad2bb5371410ca132993e37377", "filename": "gcc/generic-match-head.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgeneric-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgeneric-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgeneric-match-head.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,18 +20,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "9f805b546d16946e6ba55e363d27e85f1074a4f2", "filename": "gcc/gengtype.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -1709,12 +1709,15 @@ open_base_files (void)\n     static const char *const ifiles[] = {\n       \"config.h\", \"system.h\", \"coretypes.h\", \"tm.h\", \"insn-codes.h\",\n       \"hashtab.h\", \"splay-tree.h\", \"obstack.h\", \"bitmap.h\", \"input.h\",\n-      \"tree.h\", \"rtl.h\", \"wide-int.h\", \"hashtab.h\", \"hash-set.h\", \"vec.h\",\n+      \"hash-set.h\", \"machmode.h\", \"vec.h\", \"double-int.h\", \"input.h\",\n+      \"alias.h\", \"symtab.h\", \"options.h\", \n+      \"wide-int.h\", \"inchash.h\",\n+      \"tree.h\", \"fold-const.h\", \"rtl.h\",\n       \"machmode.h\", \"tm.h\", \"hard-reg-set.h\", \"input.h\", \"predict.h\",\n       \"function.h\", \"insn-config.h\", \"expr.h\", \"alloc-pool.h\",\n       \"hard-reg-set.h\", \"basic-block.h\", \"cselib.h\", \"insn-addr.h\",\n       \"optabs.h\", \"libfuncs.h\", \"debug.h\", \"ggc.h\", \n-      \"hash-table.h\", \"vec.h\", \"ggc.h\", \"dominance.h\", \"cfg.h\", \"basic-block.h\",\n+      \"ggc.h\", \"dominance.h\", \"cfg.h\", \"basic-block.h\",\n       \"tree-ssa-alias.h\", \"internal-fn.h\", \"gimple-fold.h\", \"tree-eh.h\",\n       \"gimple-expr.h\", \"is-a.h\",\n       \"gimple.h\", \"gimple-iterator.h\", \"gimple-ssa.h\", \"tree-cfg.h\","}, {"sha": "b30105345d0c52ee4a7b5b20225735ee8a95641b", "filename": "gcc/genopinit.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -465,6 +465,15 @@ main (int argc, char **argv)\n \t   \"#include \\\"system.h\\\"\\n\"\n \t   \"#include \\\"coretypes.h\\\"\\n\"\n \t   \"#include \\\"tm.h\\\"\\n\"\n+\t   \"#include \\\"hash-set.h\\\"\\n\"\n+\t   \"#include \\\"machmode.h\\\"\\n\"\n+\t   \"#include \\\"vec.h\\\"\\n\"\n+\t   \"#include \\\"double-int.h\\\"\\n\"\n+\t   \"#include \\\"input.h\\\"\\n\"\n+\t   \"#include \\\"alias.h\\\"\\n\"\n+\t   \"#include \\\"symtab.h\\\"\\n\"\n+\t   \"#include \\\"wide-int.h\\\"\\n\"\n+\t   \"#include \\\"inchash.h\\\"\\n\"\n \t   \"#include \\\"tree.h\\\"\\n\"\n \t   \"#include \\\"varasm.h\\\"\\n\"\n \t   \"#include \\\"stor-layout.h\\\"\\n\""}, {"sha": "fde30ef1d09988b9753b69e7766a9388b056151e", "filename": "gcc/genoutput.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -229,6 +229,15 @@ output_prologue (void)\n   printf (\"#include \\\"tm.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"ggc.h\\\"\\n\");\n+  printf (\"#include \\\"hash-set.h\\\"\\n\");\n+  printf (\"#include \\\"machmode.h\\\"\\n\");\n+  printf (\"#include \\\"vec.h\\\"\\n\");\n+  printf (\"#include \\\"double-int.h\\\"\\n\");\n+  printf (\"#include \\\"input.h\\\"\\n\");\n+  printf (\"#include \\\"alias.h\\\"\\n\");\n+  printf (\"#include \\\"symtab.h\\\"\\n\");\n+  printf (\"#include \\\"wide-int.h\\\"\\n\");\n+  printf (\"#include \\\"inchash.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n   printf (\"#include \\\"varasm.h\\\"\\n\");\n   printf (\"#include \\\"stor-layout.h\\\"\\n\");"}, {"sha": "2eb3ebc1b614c3797b5e37c505f2d907627c8683", "filename": "gcc/genpeep.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -359,6 +359,15 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"coretypes.h\\\"\\n\");\n   printf (\"#include \\\"tm.h\\\"\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\");\n+  printf (\"#include \\\"hash-set.h\\\"\\n\");\n+  printf (\"#include \\\"machmode.h\\\"\\n\");\n+  printf (\"#include \\\"vec.h\\\"\\n\");\n+  printf (\"#include \\\"double-int.h\\\"\\n\");\n+  printf (\"#include \\\"input.h\\\"\\n\");\n+  printf (\"#include \\\"alias.h\\\"\\n\");\n+  printf (\"#include \\\"symtab.h\\\"\\n\");\n+  printf (\"#include \\\"wide-int.h\\\"\\n\");\n+  printf (\"#include \\\"inchash.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n   printf (\"#include \\\"varasm.h\\\"\\n\");\n   printf (\"#include \\\"stor-layout.h\\\"\\n\");"}, {"sha": "1eb3368cf645e7dc54a75658d67b8748ed395f8e", "filename": "gcc/genpreds.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -1417,6 +1417,15 @@ write_insn_preds_c (void)\n #include \\\"coretypes.h\\\"\\n\\\n #include \\\"tm.h\\\"\\n\\\n #include \\\"rtl.h\\\"\\n\\\n+#include \\\"hash-set.h\\\"\\n\\\n+#include \\\"machmode.h\\\"\\n\\\n+#include \\\"vec.h\\\"\\n\\\n+#include \\\"double-int.h\\\"\\n\\\n+#include \\\"input.h\\\"\\n\\\n+#include \\\"alias.h\\\"\\n\\\n+#include \\\"symtab.h\\\"\\n\\\n+#include \\\"wide-int.h\\\"\\n\\\n+#include \\\"inchash.h\\\"\\n\\\n #include \\\"tree.h\\\"\\n\\\n #include \\\"varasm.h\\\"\\n\\\n #include \\\"stor-layout.h\\\"\\n\\"}, {"sha": "e70c0ea4d2d767eb2ee263e20ecc2b52de7f1649", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,6 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\""}, {"sha": "32088201a6bd9294fb9e0e81ab76c096792278ba", "filename": "gcc/gimple-builder.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-builder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-builder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-builder.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,13 +20,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "efc93b7a55fbe5d4b732e883bf2466115c449879", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,12 +23,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "49b31f1deb3a1a6a873ba081d6e9ced10e91a47b", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,7 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"expr.h\"\n #include \"stmt.h\""}, {"sha": "a322390c9f591d4ab776ca2141fe95ba92551058", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,12 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "7ae1330eafeb2e6ddf7bb5da0d9b3fb6a7273289", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,14 +22,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tree-nested.h\"\n #include \"calls.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "d7ada77bfc1942b29c5b0bed11c2d43d10d714c1", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,18 +20,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "21e98c6d22f293919213ec1d41337ce2b8019b7e", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,16 +23,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"hashtab.h\"\n #include \"bitmap.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "de318f34831f4813001105cb0ad1072733b414ba", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,13 +22,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"flags.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "f6c92d0844a8148e085334e87d1c857418317351", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -36,14 +36,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"hash-map.h\"\n-#include \"hash-table.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "da670b8940676a2c8877ceac389f609c45f3c66b", "filename": "gcc/gimple-streamer-in.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-streamer-in.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,12 +23,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n@@ -47,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-phinodes.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n-#include \"hash-map.h\"\n #include \"plugin-api.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\""}, {"sha": "110caf19b2c3a03f746a02349dbbe62a6ac88b93", "filename": "gcc/gimple-streamer-out.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-streamer-out.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,12 +22,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n@@ -41,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\"\n-#include \"hash-map.h\"\n #include \"plugin-api.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\""}, {"sha": "45ff859706433ada14dce289bd006e77f156817d", "filename": "gcc/gimple-walk.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-walk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple-walk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-walk.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,13 +23,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stmt.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "9eb7b14fd73c2b5b5491b991f9e68e0db10a3680", "filename": "gcc/gimple.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,16 +24,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"target.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"calls.h\"\n #include \"stmt.h\"\n #include \"stor-layout.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\""}, {"sha": "2e3337c6408dab40fbc707b3ecee810be339e3ce", "filename": "gcc/gimplify-me.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimplify-me.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimplify-me.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify-me.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,14 +24,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stmt.h\"\n #include \"stor-layout.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "59aaf5a33319c84fa331115c1433d035c524b965", "filename": "gcc/gimplify.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -23,14 +23,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"expr.h\"\n-#include \"hash-set.h\"\n-#include \"hash-table.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "66ecee75ce9d8dad7c84efcf1c26fb6336a57abe", "filename": "gcc/go/go-backend.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-backend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-backend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-backend.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,6 +22,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"simple-object.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"tm_p.h\""}, {"sha": "d8b80b6d20888cb0e128126e341d2777467bbbb6", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,18 +24,25 @@\n // include it here before tree.h includes it later.\n #include <gmp.h>\n \n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"tree-iterator.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "2797e99620c36152ae48c5888430196950e9830d", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,11 +22,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ansidecl.h\"\n #include \"coretypes.h\"\n #include \"opts.h\"\n-#include \"tree.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "4147f7547313f28aff5c82db1b543c0bb92039d9", "filename": "gcc/godump.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgodump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgodump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgodump.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,6 +31,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"ggc.h\"\n #include \"hash-set.h\""}, {"sha": "dd3f03b72a7712db9799162e96dc756e66da93ce", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,12 +32,19 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "edd357d870e2276812f5847a1a964e646fe6216d", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -31,12 +31,19 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "8c0d95d20bb8bc81be4aabf1e4f3cc9f2ad22bd4", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -43,12 +43,19 @@ extern \"C\" {\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "90ce0c66e7a35d545c6667bf757ba1d6b30deebc", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -38,12 +38,19 @@ extern \"C\" {\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "8bdf7443018a8872686cadd02123749880ad6d31", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,12 +32,19 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "ae90c29f01806d197a5cf99217e7d476db65fee6", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -43,12 +43,19 @@ extern \"C\" {\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "4512fe7abf053afe3287e21bb69bb3eee748d50f", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -29,12 +29,19 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "5bb521ff1032c982741f825d0ce8d3efa5f279ac", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -40,12 +40,19 @@ extern \"C\" {\n \n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "c8f0617a5fb86de8789ef0f85bef5b8250652596", "filename": "gcc/graphite.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -44,12 +44,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "5ad1569890fa17f14e6506592401e368792f8f6e", "filename": "gcc/hw-doloop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fhw-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fhw-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\""}, {"sha": "30a13a8a5ebe904af43a18639f8cbbd1b387cd80", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -42,6 +42,7 @@\n #include \"cfganal.h\"\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n+#include \"symtab.h\"\n #include \"expr.h\"\n #include \"output.h\"\n #include \"insn-codes.h\""}, {"sha": "3b9560dec2b648a2f865be4f266523d92bde0c1c", "filename": "gcc/init-regs.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Finit-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Finit-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finit-regs.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,16 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "07a9ec5150cfa5045f2ab1d30660d221ea348c11", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,17 +20,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"internal-fn.h\"\n #include \"stor-layout.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "30d511d9af913a10cbda2dfd454e7a1d4f8e324b", "filename": "gcc/ipa-chkp.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-chkp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,9 +21,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree-core.h\"\n-#include \"stor-layout.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"stor-layout.h\"\n #include \"tree-pass.h\"\n #include \"stringpool.h\"\n #include \"bitmap.h\""}, {"sha": "ad5945f468d9d16500f70a58302c9ceed2506094", "filename": "gcc/ipa-comdats.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-comdats.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-comdats.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-comdats.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -52,14 +52,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n #include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "44f16bf86f29d691f2ee9c27ae52cc07be01d2ae", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -103,19 +103,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"hash-map.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"gimple-fold.h\"\n #include \"gimple-expr.h\"\n #include \"target.h\"\n #include \"predict.h\"\n #include \"basic-block.h\"\n-#include \"vec.h\"\n-#include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "52d2e52915400c6b67d9c7e89a685c2031c25766", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -109,18 +109,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"hash-map.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"calls.h\"\n #include \"predict.h\"\n #include \"basic-block.h\"\n-#include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "8c3a27babc392233e2d11e6802a5673da816fe8a", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,12 +22,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "1b76a1df372ddfa8a7f2f66160078c76f4d836d4", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -54,12 +54,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "92858dad36049606130ce390233986488368f85c", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -68,7 +68,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"real.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"print-tree.h\"\n@@ -81,10 +92,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"coverage.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "7e5eda99a5bd4c80b46972e51098a7b501bc405c", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -32,19 +32,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n #include \"langhooks.h\"\n #include \"intl.h\"\n #include \"coverage.h\"\n #include \"ggc.h\"\n #include \"tree-cfg.h\"\n-#include \"vec.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "e9ad2448635396680cf81586696b063feee0aacf", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -93,7 +93,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"trans-mem.h\"\n #include \"calls.h\"\n #include \"tree-inline.h\"\n@@ -109,10 +119,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"bitmap.h\"\n #include \"profile.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "369d9382adae46d01512bb1dd26f5165029e25bb", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -22,24 +22,28 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"calls.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n-#include \"hash-set.h\"\n #include \"target.h\"\n-#include \"hash-table.h\"\n-#include \"inchash.h\"\n #include \"tree-pretty-print.h\"\n #include \"predict.h\"\n #include \"basic-block.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "f82f7db1acfe31291d3da43108d013de5fd9aa83", "filename": "gcc/ipa-profile.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-profile.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -48,18 +48,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "a96b2be44d1698b2db38d151c3445e6ea2f5b931", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -20,12 +20,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tree.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}, {"sha": "73e80e8b1419e913050f2bb5aa0a6dd26892cd15", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -35,14 +35,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"calls.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "91c2f89af25271ef94183d69f5b79224a393f88f", "filename": "gcc/ipa-ref.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e2396121e547e79dd2492372176c18355fab4f/gcc%2Fipa-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-ref.c?ref=40e2396121e547e79dd2492372176c18355fab4f", "patch": "@@ -21,16 +21,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hash-set.h\"\n+#include \"machmode.h\"\n+#include \"vec.h\"\n+#include \"double-int.h\"\n+#include \"input.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"options.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\""}]}