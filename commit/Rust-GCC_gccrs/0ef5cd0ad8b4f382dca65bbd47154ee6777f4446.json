{"sha": "0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmNWNkMGFkOGI0ZjM4MmRjYTY1YmJkNDcxNTRlZTY3NzdmNDQ0Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-04-21T08:52:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:52:31Z"}, "message": "exp_aggr.adb (Component_Not_OK_For_Backend): Refine previous change to take into account Per_Object_Constraint field rather...\n\n2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_aggr.adb (Component_Not_OK_For_Backend): Refine previous\n\tchange to take into account Per_Object_Constraint field rather\n\tthan special casing strings.\n\t* exp_ch6.adb: Fix typo in Replace_Returns.\n\nFrom-SVN: r235314", "tree": {"sha": "5dac84b6aef6d582a4d11e3b9b1417281b7e3c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dac84b6aef6d582a4d11e3b9b1417281b7e3c4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d6aa71558f460ef00af8420e81e01f46d95da84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6aa71558f460ef00af8420e81e01f46d95da84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6aa71558f460ef00af8420e81e01f46d95da84"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "ba209af65b9b2e3668d628696496053189462817", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "patch": "@@ -1,11 +1,13 @@\n-2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n+2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* sem_ch5.adb: Minor reformatting.\n+\t* exp_aggr.adb (Component_Not_OK_For_Backend): Refine previous\n+\tchange to take into account Per_Object_Constraint field rather\n+\tthan special casing strings.\n+\t* exp_ch6.adb: Fix typo in Replace_Returns.\n \n-2016-04-21  Eric Botcazou  <ebotcazou@adacore.com>\n+2016-04-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n-\t* exp_ch2.adb (Expand_Current_Value): Make an appropriate\n-\tcharacter literal if the entity is of a character type.\n+\t* sem_ch5.adb: Minor reformatting.\n \n 2016-04-21  Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "334955b57172c9453015a81be7cf3aef3eeb4a17", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "patch": "@@ -6024,7 +6024,8 @@ package body Exp_Aggr is\n                return True;\n \n             elsif Modify_Tree_For_C\n-              and then Ekind (Etype (Expr_Q)) = E_String_Literal_Subtype\n+              and then Nkind (C) in N_Entity\n+              and then Has_Per_Object_Constraint (C)\n             then\n                Static_Components := False;\n                return True;"}, {"sha": "162849eac0ff7ac73f03b198271a6c80653d4a42", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef5cd0ad8b4f382dca65bbd47154ee6777f4446/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0ef5cd0ad8b4f382dca65bbd47154ee6777f4446", "patch": "@@ -739,7 +739,7 @@ package body Exp_Ch6 is\n                begin\n                   Part := First (Elsif_Parts (Stmt));\n                   while Present (Part) loop\n-                     Replace_Returns (Part, Then_Statements (Part));\n+                     Replace_Returns (Param_Id, Then_Statements (Part));\n                      Next (Part);\n                   end loop;\n                end;\n@@ -806,6 +806,11 @@ package body Exp_Ch6 is\n             Make_Handled_Sequence_Of_Statements (Loc,\n               Statements => Stmts));\n \n+      --  If the function is a generic instance, so is the new procedure.\n+      --  Set flag accordingly so that the proper renaming declarations are\n+      --  generated.\n+\n+      Set_Is_Generic_Instance (Proc_Id, Is_Generic_Instance (Func_Id));\n       return New_Body;\n    end Build_Procedure_Body_Form;\n "}]}