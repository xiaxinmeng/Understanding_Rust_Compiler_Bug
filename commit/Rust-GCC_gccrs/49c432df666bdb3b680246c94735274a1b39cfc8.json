{"sha": "49c432df666bdb3b680246c94735274a1b39cfc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDljNDMyZGY2NjZiZGIzYjY4MDI0NmM5NDczNTI3NGExYjM5Y2ZjOA==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-07-29T20:23:44Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-07-29T20:23:44Z"}, "message": "MSP430: Disallow use of code/data regions in the small memory model\n\ngcc/ChangeLog:\n\n2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/msp430.h (DRIVER_SELF_SPECS): Define and emit errors\n\twhen -m{code,data}-region are used without -mlarge.\n\t* config/msp430/msp430.c (msp430_option_override): Error when a\n\tnon-default code or data region is used without -mlarge.\n\t(msp430_section_attr): Emit a warning and do not add upper/lower/either\n\tattributes when they are used without -mlarge.\n\ngcc/testsuite/ChangeLog:\n\n2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* gcc.target/msp430/pr78818-data-region.c: Add -mlarge to dg-options.\n\t* gcc.target/msp430/region-misuse-code.c: New test.\n\t* gcc.target/msp430/region-misuse-data.c: Likewise.\n\t* gcc.target/msp430/region-misuse-code-data.c: Likewise.\n\t* gcc.target/msp430/region-attribute-misuse.c: Likewise.\n\nFrom-SVN: r273884", "tree": {"sha": "5cbfa54f367e75b1911830bfba3159243508605e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cbfa54f367e75b1911830bfba3159243508605e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49c432df666bdb3b680246c94735274a1b39cfc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c432df666bdb3b680246c94735274a1b39cfc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c432df666bdb3b680246c94735274a1b39cfc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c432df666bdb3b680246c94735274a1b39cfc8/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37816988909ba2b10722aff56d7cbd8ff48bf21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37816988909ba2b10722aff56d7cbd8ff48bf21d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37816988909ba2b10722aff56d7cbd8ff48bf21d"}], "stats": {"total": 91, "additions": 86, "deletions": 5}, "files": [{"sha": "5ab9e12ed052f1c670fd4200b42da6bb96031899", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -1,3 +1,12 @@\n+2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.h (DRIVER_SELF_SPECS): Define and emit errors\n+\twhen -m{code,data}-region are used without -mlarge.\n+\t* config/msp430/msp430.c (msp430_option_override): Error when a\n+\tnon-default code or data region is used without -mlarge.\n+\t(msp430_section_attr): Emit a warning and do not add upper/lower/either\n+\tattributes when they are used without -mlarge.\n+\n 2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \tPR target/70320"}, {"sha": "c7b774e71a6181193fb63f4b239ebd160fca7030", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -875,10 +875,26 @@ msp430_option_override (void)\n   if (TARGET_LARGE && !msp430x)\n     error (\"%<-mlarge%> requires a 430X-compatible %<-mmcu=%>\");\n \n-  if (msp430_code_region == MSP430_REGION_UPPER && ! msp430x)\n-    error (\"%<-mcode-region=upper%> requires 430X-compatible cpu\");\n-  if (msp430_data_region == MSP430_REGION_UPPER && ! msp430x)\n-    error (\"%<-mdata-region=upper%> requires 430X-compatible cpu\");\n+  if (!TARGET_LARGE && msp430_code_region == MSP430_REGION_EITHER)\n+    error (\"%<-mcode-region=either%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+  else if (!TARGET_LARGE && msp430_code_region == MSP430_REGION_UPPER)\n+    error (\"%<-mcode-region=upper%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+  else if (!TARGET_LARGE && msp430_code_region == MSP430_REGION_LOWER)\n+    error (\"%<-mcode-region=lower%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+\n+  if (!TARGET_LARGE && msp430_data_region == MSP430_REGION_EITHER)\n+    error (\"%<-mdata-region=either%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+  else if (!TARGET_LARGE && msp430_data_region == MSP430_REGION_UPPER)\n+    error (\"%<-mdata-region=upper%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+  else if (!TARGET_LARGE && msp430_data_region == MSP430_REGION_LOWER)\n+    error (\"%<-mdata-region=lower%> requires the large memory model \"\n+\t   \"(%<-mlarge%>)\");\n+\n \n   if (flag_exceptions || flag_non_call_exceptions\n       || flag_unwind_tables || flag_asynchronous_unwind_tables)\n@@ -2038,6 +2054,17 @@ msp430_section_attr (tree * node,\n \tmessage = \"already marked with 'upper' attribute\";\n     }\n \n+  /* It does not make sense to use upper/lower/either attributes without\n+     -mlarge.\n+     Without -mlarge, \"lower\" is the default and only region, so is redundant.\n+     Without -mlarge, \"upper\" will (and \"either\" might) place code/data in the\n+     upper region, which for data could result in relocation overflows, and for\n+     code could result in stack mismanagement and incorrect call/return\n+     instructions.  */\n+  if (!TARGET_LARGE)\n+    message = G_(\"%qE attribute ignored. large memory model (%<-mlarge%>) \"\n+\t\t \"is required\");\n+\n   if (message)\n     {\n       warning (OPT_Wattributes, message, name);"}, {"sha": "3361771870376dbf19ccd3660720ad75645537d6", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -68,6 +68,14 @@ extern bool msp430x;\n #define LINK_SPEC \"%{mrelax:--relax} %{mlarge:%{!r:%{!g:--gc-sections}}} \" \\\n   \"%{mcode-region=*:--code-region=%*} %{mdata-region=*:--data-region=%*}\"\n \n+#define DRIVER_SELF_SPECS \\\n+  \" %{!mlarge:%{mcode-region=*:%{mdata-region=*:%e-mcode-region and \"\t\\\n+    \"-mdata-region require the large memory model (-mlarge)}}}\" \\\n+  \" %{!mlarge:%{mcode-region=*:\"\t\\\n+    \"%e-mcode-region requires the large memory model (-mlarge)}}\"\t\\\n+  \" %{!mlarge:%{mdata-region=*:\"\t\\\n+    \"%e-mdata-region requires the large memory model (-mlarge)}}\"\n+\n extern const char * msp430_select_hwmult_lib (int, const char **);\n # define EXTRA_SPEC_FUNCTIONS\t\t\t\t\\\n   { \"msp430_hwmult_lib\", msp430_select_hwmult_lib },"}, {"sha": "2e692754094754e4b070166c113c9e2a0797a47f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -1,3 +1,11 @@\n+2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/pr78818-data-region.c: Add -mlarge to dg-options.\n+\t* gcc.target/msp430/region-misuse-code.c: New test.\n+\t* gcc.target/msp430/region-misuse-data.c: Likewise.\n+\t* gcc.target/msp430/region-misuse-code-data.c: Likewise.\n+\t* gcc.target/msp430/region-attribute-misuse.c: Likewise.\n+\n 2019-07-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \tPR target/70320"}, {"sha": "5b0721e728a4521eede85d25293ba326cd8857ad", "filename": "gcc/testsuite/gcc.target/msp430/pr78818-data-region.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr78818-data-region.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr78818-data-region.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fpr78818-data-region.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mdata-region=either\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=msp430\" } { \"\" } } */\n+/* { dg-options \"-mlarge -mdata-region=either\" } */\n \n /* { dg-final { scan-assembler-not \"\\\\.either\\\\.data\" } } */\n /* { dg-final { scan-assembler-not \"\\\\.either\\\\.bss\" } } */"}, {"sha": "fe4617b917c2bb6d5ff80666775914e534439b60", "filename": "gcc/testsuite/gcc.target/msp430/region-attribute-misuse.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-attribute-misuse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-attribute-misuse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-attribute-misuse.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=msp430\" \"-mlarge\" \"-mcode-region=*\" \"-mdata-region=*\" } { \"\" } } */\n+/* { dg-final { scan-assembler-not \".section.*bss\" } } */\n+/* { dg-final { scan-assembler \".section.*upper.data\" } } */\n+/* { dg-final { scan-assembler \".section.*lower.data\" } } */\n+/* { dg-final { scan-assembler \".section.*either.data\" } } */\n+\n+int __attribute__((upper)) upper_bss; /* { dg-warning \"'upper' attribute ignored. large memory model .'-mlarge'. is required\" } */\n+int __attribute__((lower)) lower_bss; /* { dg-warning \"'lower' attribute ignored. large memory model .'-mlarge'. is required\" } */\n+int __attribute__((either)) either_bss; /* { dg-warning \"'either' attribute ignored. large memory model .'-mlarge'. is required\" } */\n+\n+/* Verify that even without -mlarge, objects can still be placed in\n+   upper/lower/either regions manually.  */\n+int __attribute__((section(\".upper.data\"))) upper_data = 1;\n+int __attribute__((section(\".lower.data\"))) lower_data = 2;\n+int __attribute__((section(\".either.data\"))) either_data = 3;"}, {"sha": "72a160d0bda623b0e7a5af199287a09e7c27335e", "filename": "gcc/testsuite/gcc.target/msp430/region-misuse-code-data.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code-data.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code-data.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code-data.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mlarge\" } { \"\" } } */\n+/* { dg-options \"-mcode-region=either -mdata-region=none\" } */\n+/* { dg-error \"-mcode-region and -mdata-region require the large memory model .-mlarge.\" \"\" { target *-*-* } 0 } */"}, {"sha": "6441b773d6ea871c59e274e5143ea56a73730723", "filename": "gcc/testsuite/gcc.target/msp430/region-misuse-code.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-code.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mlarge\" \"-mdata-region=*\" } { \"\" } } */\n+/* { dg-options \"-mcode-region=lower\" } */\n+/* { dg-error \"-mcode-region requires the large memory model .-mlarge.\" \"\" { target *-*-* } 0 } */"}, {"sha": "07523b6042da746eff5e00a6c854608002914241", "filename": "gcc/testsuite/gcc.target/msp430/region-misuse-data.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-data.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c432df666bdb3b680246c94735274a1b39cfc8/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-data.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Fregion-misuse-data.c?ref=49c432df666bdb3b680246c94735274a1b39cfc8", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mlarge\" \"-mdata-region=*\" } { \"\" } } */\n+/* { dg-options \"-mdata-region=upper\" } */\n+/* { dg-error \"-mdata-region requires the large memory model .-mlarge.\" \"\" { target *-*-* } 0 } */"}]}