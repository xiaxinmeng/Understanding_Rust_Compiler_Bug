{"sha": "f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFmMDdhOTZkYTNiOWQ5M2I2ZmQyOTIzYWVhODg5NDRhN2FkNTViNQ==", "commit": {"author": {"name": "Doug Kwan", "email": "dougkwan@google.com", "date": "2008-05-16T13:41:24Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-16T13:41:24Z"}, "message": "real.c (real_to_decimal, [...]): Distinguish QNaN & SNaN.\n\n2008-05-16  Doug Kwan  <dougkwan@google.com>\n\n\t* real.c (real_to_decimal, real_to_hexadecimal): Distinguish\n\tQNaN & SNaN.\n\t(real_from_string): Handle NaNs and Inf as approriate.\n\nFrom-SVN: r135421", "tree": {"sha": "53e64ea80548c9626c93b624d83dfaf664a790d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e64ea80548c9626c93b624d83dfaf664a790d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5/comments", "author": {"login": "dougkwan", "id": 1399231, "node_id": "MDQ6VXNlcjEzOTkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1399231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougkwan", "html_url": "https://github.com/dougkwan", "followers_url": "https://api.github.com/users/dougkwan/followers", "following_url": "https://api.github.com/users/dougkwan/following{/other_user}", "gists_url": "https://api.github.com/users/dougkwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougkwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougkwan/subscriptions", "organizations_url": "https://api.github.com/users/dougkwan/orgs", "repos_url": "https://api.github.com/users/dougkwan/repos", "events_url": "https://api.github.com/users/dougkwan/events{/privacy}", "received_events_url": "https://api.github.com/users/dougkwan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "105f48aedd4222f499b663535684adddb5f2fcd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105f48aedd4222f499b663535684adddb5f2fcd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105f48aedd4222f499b663535684adddb5f2fcd8"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "4f1690782db5ed3e8d9dc3779a8ba7738adc3c1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "patch": "@@ -1,3 +1,9 @@\n+2008-05-16  Doug Kwan  <dougkwan@google.com>\n+\n+\t* real.c (real_to_decimal, real_to_hexadecimal): Distinguish\n+\tQNaN & SNaN.\n+\t(real_from_string): Handle NaNs and Inf as approriate.\n+\n 2008-05-16  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* doc/gty.texi (Source Files Containing Type Information): Note"}, {"sha": "c4695cced914b5f4fe37005c367571cf5eb9d71c", "filename": "gcc/real.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "patch": "@@ -1471,7 +1471,8 @@ real_to_decimal (char *str, const REAL_VALUE_TYPE *r_orig, size_t buf_size,\n       return;\n     case rvc_nan:\n       /* ??? Print the significand as well, if not canonical?  */\n-      strcpy (str, (r.sign ? \"-NaN\" : \"+NaN\"));\n+      sprintf (str, \"%c%cNaN\", (r_orig->sign ? '-' : '+'),\n+\t       (r_orig->signalling ? 'S' : 'Q'));\n       return;\n     default:\n       gcc_unreachable ();\n@@ -1743,7 +1744,8 @@ real_to_hexadecimal (char *str, const REAL_VALUE_TYPE *r, size_t buf_size,\n       return;\n     case rvc_nan:\n       /* ??? Print the significand as well, if not canonical?  */\n-      strcpy (str, (r->sign ? \"-NaN\" : \"+NaN\"));\n+      sprintf (str, \"%c%cNaN\", (r->sign ? '-' : '+'),\n+\t       (r->signalling ? 'S' : 'Q'));\n       return;\n     default:\n       gcc_unreachable ();\n@@ -1812,6 +1814,22 @@ real_from_string (REAL_VALUE_TYPE *r, const char *str)\n   else if (*str == '+')\n     str++;\n \n+  if (!strncmp (str, \"QNaN\", 4))\n+    {\n+      get_canonical_qnan (r, sign);\n+      return 0;\n+    }\n+  else if (!strncmp (str, \"SNaN\", 4))\n+    {\n+      get_canonical_snan (r, sign);\n+      return 0;\n+    }\n+  else if (!strncmp (str, \"Inf\", 3))\n+    {\n+      get_inf (r, sign);\n+      return 0;\n+    }\n+\n   if (str[0] == '0' && (str[1] == 'x' || str[1] == 'X'))\n     {\n       /* Hexadecimal floating point.  */"}]}