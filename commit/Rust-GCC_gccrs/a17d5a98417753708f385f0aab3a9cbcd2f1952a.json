{"sha": "a17d5a98417753708f385f0aab3a9cbcd2f1952a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3ZDVhOTg0MTc3NTM3MDhmMzg1ZjBhYWIzYTljYmNkMmYxOTUyYQ==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2012-10-23T18:44:27Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2012-10-23T18:44:27Z"}, "message": "re PR debug/54508 (Wrong debug information emitted if data members not referenced)\n\nPR debug/54508\n* dwarf2out.c (prune_unused_types_prune): If pruning a class and\nnot all its children were marked, add DW_AT_declaration flag.\n\n* g++.dg/debug/dwarf2/pr54508.C: New.\n\nFrom-SVN: r192739", "tree": {"sha": "c683ea50ebea1be10dfc5c7e2eee5a1f7bfb42fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c683ea50ebea1be10dfc5c7e2eee5a1f7bfb42fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a17d5a98417753708f385f0aab3a9cbcd2f1952a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17d5a98417753708f385f0aab3a9cbcd2f1952a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17d5a98417753708f385f0aab3a9cbcd2f1952a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17d5a98417753708f385f0aab3a9cbcd2f1952a/comments", "author": null, "committer": null, "parents": [{"sha": "22531fb1957ca61debd68c6d3bbc16899b907ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22531fb1957ca61debd68c6d3bbc16899b907ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22531fb1957ca61debd68c6d3bbc16899b907ba8"}], "stats": {"total": 99, "additions": 97, "deletions": 2}, "files": [{"sha": "fba9d742f1b5691d5c695ba9842ec23dac156fce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a17d5a98417753708f385f0aab3a9cbcd2f1952a", "patch": "@@ -1,3 +1,9 @@\n+2012-10-23  Paul Koning  <ni1d@arrl.net>\n+\n+\tPR debug/54508\n+\t* dwarf2out.c (prune_unused_types_prune): If pruning a class and\n+\tnot all its children were marked, add DW_AT_declaration flag.\n+\n 2012-10-23  Ian Bolton  <ian.bolton@arm.com>\n \t    James Greenhalgh  <james.greenhalgh@arm.com>\n \t    Jim MacArthur  <jim.macarthur@arm.com>"}, {"sha": "bed3d67353a2613191fbbbb8a0b9ad94cab4c4a7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a17d5a98417753708f385f0aab3a9cbcd2f1952a", "patch": "@@ -21220,6 +21220,7 @@ static void\n prune_unused_types_prune (dw_die_ref die)\n {\n   dw_die_ref c;\n+  int pruned = 0;\n \n   gcc_assert (die->die_mark);\n   prune_unused_types_update_strings (die);\n@@ -21242,13 +21243,24 @@ prune_unused_types_prune (dw_die_ref die)\n \t      prev->die_sib = c->die_sib;\n \t      die->die_child = prev;\n \t    }\n-\t  return;\n+\t  pruned = 1;\n+\t  goto finished;\n \t}\n \n     if (c != prev->die_sib)\n-      prev->die_sib = c;\n+      {\n+\tprev->die_sib = c;\n+\tpruned = 1;\n+      }\n     prune_unused_types_prune (c);\n   } while (c != die->die_child);\n+\n+ finished:\n+  /* If we pruned children, and this is a class, mark it as a \n+     declaration to inform debuggers that this is not a complete\n+     class definition.  */\n+  if (pruned && die->die_mark == 1 && class_scope_p (die))\n+    add_AT_flag (die, DW_AT_declaration, 1);\n }\n \n /* Remove dies representing declarations that we never use.  */"}, {"sha": "79ccb547bd660b45e2bb657c8d9e8733e23b5e8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a17d5a98417753708f385f0aab3a9cbcd2f1952a", "patch": "@@ -1,3 +1,8 @@\n+2012-10-23  Paul Koning  <ni1d@arrl.net>\n+\n+\tPR debug/54508\n+\t* g++.dg/debug/dwarf2/pr54508.C: New.\n+\t\n 2012-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/54844"}, {"sha": "c1163c9f71d4c7a69bab509bde7629b937a0619c", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr54508.C", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17d5a98417753708f385f0aab3a9cbcd2f1952a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr54508.C?ref=a17d5a98417753708f385f0aab3a9cbcd2f1952a", "patch": "@@ -0,0 +1,72 @@\n+// PR debug/54508\n+// { dg-do compile }\n+// { dg-options \"-g2 -dA -fno-merge-debug-strings\" }\n+\n+// { dg-final { scan-assembler-not \"\\\"cbase\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"c\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_decl_line\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_declaration\" } }\n+// { dg-final { scan-assembler-not \"\\\"OPCODE\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler-not \"\\\"bi\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler-not \"\\\"si\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"s\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler-not \"\\\"s\\\\\\\\0\\\"\\[^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_decl_line\\[\\r\\n\\]+\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_declaration\" } }\n+// { dg-final { scan-assembler \"\\\"f1\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler \"\\\"u\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^\\r\\n\\]+\\[\\r\\n\\]+\\[\\^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_decl_line\\[\\r\\n\\]+\\[^#;/!|@\\]+\\[#;/!|@\\]+ DW_AT_declaration\" } }\n+// { dg-final { scan-assembler-not \"\\\"f2\\\\\\\\0\\\"\\[ \\t\\]+\\[#;/!|@\\]+ DW_AT_name\" } }\n+// { dg-final { scan-assembler-not \"\\\"nc\\\\\\\\0\\\"\\[ \\t\\]+\\# DW_AT_name\" } }\n+\n+class cbase\n+\n+{\n+public:\n+ static int si;\n+    int bi;\n+};\n+\n+class c : public cbase\n+\n+{\n+public:\n+ enum\n+ {\n+  OPCODE = 251\n+ };\n+ int i ;\n+ static const char *testc (void) { return \"foo\"; }\n+};\n+\n+struct s\n+{\n+    int f1;\n+    static const char *tests (void) { return \"test\"; }\n+};\n+\n+union u\n+{\n+    int f2;\n+    double d;\n+    static const char *testu (void) { return \"test union\"; }\n+};\n+\n+namespace n \n+{\n+    const char *ntest (void) { return \"test n\"; }\n+\n+    class nc\n+    {\n+    public:\n+        int i;\n+        static int sj;\n+    };\n+}\n+\n+extern void send (int, int, const void *, int);\n+\n+void test (int src)\n+{\n+  int cookie = 1;\n+  static struct s ss;\n+  \n+  send(src, c::OPCODE, c::testc (), cookie);\n+  send(src, c::OPCODE, u::testu (), cookie);\n+  send(src, c::OPCODE, n::ntest (), cookie);\n+}"}]}