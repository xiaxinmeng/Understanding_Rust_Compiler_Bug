{"sha": "70f6320462d91e5add99ae5b50226356302a8c0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmNjMyMDQ2MmQ5MWU1YWRkOTlhZTViNTAyMjYzNTYzMDJhOGMwYg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-01T11:27:06Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-02T07:33:51Z"}, "message": "d: Fix segfault in build_frontend_type on alpha-*-*\n\nThe va_list type for Alpha includes a nameless dummy field for alignment\npurposes.  To transpose this into D, a field named \"__pad%d\" is inserted\ninto the struct definition.\n\nIt was also noticed that in the D front-end AST copy of the backend\ntype, all offsets for fields generated by build_frontend_type were set\nto zero due to a wrong assumption that DECL_FIELD_OFFSET would have a\nnon-zero value.  This has been fixed to use byte_position instead.\n\ngcc/d/ChangeLog:\n\n\t* d-builtins.cc (build_frontend_type): Handle struct fields with NULL\n\tDECL_NAME.  Use byte_position to get the real field offset.", "tree": {"sha": "232915ce57fdf3666e878c1b8d317fe2ac0a5f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232915ce57fdf3666e878c1b8d317fe2ac0a5f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f6320462d91e5add99ae5b50226356302a8c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f6320462d91e5add99ae5b50226356302a8c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f6320462d91e5add99ae5b50226356302a8c0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f6320462d91e5add99ae5b50226356302a8c0b/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a8bac4d7e7209a1fef96a077c80bb2416aac6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8bac4d7e7209a1fef96a077c80bb2416aac6ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8bac4d7e7209a1fef96a077c80bb2416aac6ce"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "1cb5407f8a9b1052b8c2b7d53a23b3948a2b62b3", "filename": "gcc/d/d-builtins.cc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f6320462d91e5add99ae5b50226356302a8c0b/gcc%2Fd%2Fd-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f6320462d91e5add99ae5b50226356302a8c0b/gcc%2Fd%2Fd-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-builtins.cc?ref=70f6320462d91e5add99ae5b50226356302a8c0b", "patch": "@@ -238,6 +238,9 @@ build_frontend_type (tree type)\n       sdecl->type->ctype = type;\n       sdecl->type->merge2 ();\n \n+      /* Add both named and anonymous fields as members of the struct.\n+\t Anonymous fields still need a name in D, so call them \"__pad%d\".  */\n+      int anonfield_id = 0;\n       sdecl->members = new Dsymbols;\n \n       for (tree field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n@@ -249,12 +252,19 @@ build_frontend_type (tree type)\n \t      return NULL;\n \t    }\n \n-\t  Identifier *fident\n-\t    = Identifier::idPool (IDENTIFIER_POINTER (DECL_NAME (field)));\n+\t  Identifier *fident;\n+\t  if (DECL_NAME (field) == NULL_TREE)\n+\t    fident = Identifier::generateId (\"__pad\", anonfield_id++);\n+\t  else\n+\t    {\n+\t      const char *name = IDENTIFIER_POINTER (DECL_NAME (field));\n+\t      fident = Identifier::idPool (name);\n+\t    }\n+\n \t  VarDeclaration *vd = VarDeclaration::create (Loc (), ftype, fident,\n \t\t\t\t\t\t       NULL);\n \t  vd->parent = sdecl;\n-\t  vd->offset = tree_to_uhwi (DECL_FIELD_OFFSET (field));\n+\t  vd->offset = tree_to_uhwi (byte_position (field));\n \t  vd->semanticRun = PASSsemanticdone;\n \t  vd->csym = field;\n \t  sdecl->members->push (vd);"}]}