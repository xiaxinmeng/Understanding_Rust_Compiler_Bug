{"sha": "4c82f12b8ea309606d2b03270910d86f657300c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM4MmYxMmI4ZWEzMDk2MDZkMmIwMzI3MDkxMGQ4NmY2NTczMDBjNg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-07-02T00:21:56Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-07-02T00:21:56Z"}, "message": "iris5.h (SET_FILE_NUMBER): Moved here from iris3.h.\n\n\t* config/mips/iris5.h (SET_FILE_NUMBER): Moved here from iris3.h.\n\tUndef before redefinition.\n\t(LABEL_AFTER_LOC): Likewise.\n\t(DEFAULT_SIGNED_CHAR): Likewise.\n\t(ASM_OUTPUT_ASCII): Moved here from iris4.h.\n\tFix IRIX spelling.\n\n\t* config/mips/iris3.h: Remove, unused.\n\t* config/mips/iris4.h: Likewise.\n\n\t* config/mips/mips.h (STACK_ARGS_ADJUST): Remove, unused.\n\n\t* config/mips/iris5.h (TARGET_DEFAULT): Move ...\n\t* config.gcc (mips-sgi-irix6*o32, mips-sgi-irix5*): ... here to\n\ttarget_cpu_default.\n\n\t* config/mips/iris5.h: Move explicit includes ...\n\t* config.gcc (mips-sgi-irix6*o32, mips-sgi-irix5*): ... here.\n\n\t* config/mips/iris6.h (MIPS_ISA_DEFAULT, MIPS_ABI_DEFAULT): Move ...\n\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here to\n\ttm_defines.\n\n\t* config/mips/iris6.h (TARGET_DEFAULT): Move ...\n\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here to\n\ttarget_cpu_default.\n\n\t* config/mips/iris6.h: Fix IRIX spelling.\n\t(MULTILIB_DEFAULTS): Undef before redefinition.\n\n\t* config/mips/iris6.h: Move explicit includes ...\n\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here.\n\nFrom-SVN: r68808", "tree": {"sha": "0dd71c21138a3a7bbe4887d00e5c94ff332a9767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dd71c21138a3a7bbe4887d00e5c94ff332a9767"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c82f12b8ea309606d2b03270910d86f657300c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c82f12b8ea309606d2b03270910d86f657300c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c82f12b8ea309606d2b03270910d86f657300c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c82f12b8ea309606d2b03270910d86f657300c6/comments", "author": null, "committer": null, "parents": [{"sha": "8bd87c4e73fef41cbbd1c7dd722e0a590ff1111c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd87c4e73fef41cbbd1c7dd722e0a590ff1111c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bd87c4e73fef41cbbd1c7dd722e0a590ff1111c"}], "stats": {"total": 158, "additions": 104, "deletions": 54}, "files": [{"sha": "2e02edc63acc621f2ca84d1f2b902d3ba9d63a42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c82f12b8ea309606d2b03270910d86f657300c6", "patch": "@@ -1,3 +1,38 @@\n+2003-07-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/mips/iris5.h (SET_FILE_NUMBER): Moved here from iris3.h.\n+\tUndef before redefinition.\n+\t(LABEL_AFTER_LOC): Likewise.\n+\t(DEFAULT_SIGNED_CHAR): Likewise.\n+\t(ASM_OUTPUT_ASCII): Moved here from iris4.h.\n+\tFix IRIX spelling.\n+\t\n+\t* config/mips/iris3.h: Remove, unused.\n+\t* config/mips/iris4.h: Likewise.\n+\n+\t* config/mips/mips.h (STACK_ARGS_ADJUST): Remove, unused.\n+\n+\t* config/mips/iris5.h (TARGET_DEFAULT): Move ...\n+\t* config.gcc (mips-sgi-irix6*o32, mips-sgi-irix5*): ... here to\n+\ttarget_cpu_default.\n+\n+\t* config/mips/iris5.h: Move explicit includes ...\n+\t* config.gcc (mips-sgi-irix6*o32, mips-sgi-irix5*): ... here.\n+\t\n+\t* config/mips/iris6.h (MIPS_ISA_DEFAULT, MIPS_ABI_DEFAULT): Move ...\n+\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here to\n+\ttm_defines.\n+\n+\t* config/mips/iris6.h (TARGET_DEFAULT): Move ...\n+\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here to\n+\ttarget_cpu_default.\n+\n+\t* config/mips/iris6.h: Fix IRIX spelling.\n+\t(MULTILIB_DEFAULTS): Undef before redefinition.\n+\t\n+\t* config/mips/iris6.h: Move explicit includes ...\n+\t* config.gcc (mips-sgi-irix6*, mips-sgi-irix5cross64): ... here.\n+\n Wed Jul  2 02:16:48 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_mark_needed_node, cgraph_varpool_mark_needed_node,"}, {"sha": "7bcfb40028a33f7b3ddc15996fa63f8f285eada6", "filename": "gcc/config.gcc", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=4c82f12b8ea309606d2b03270910d86f657300c6", "patch": "@@ -1391,21 +1391,23 @@ mcore-*-pe*)\n \ttmake_file=mcore/t-mcore-pe\n \t;;\n mips-sgi-irix6*o32)\t\t# SGI System V.4., IRIX 6, O32 ABI\n+\ttm_file=\"${tm_file} mips/iris5.h\"\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=\"mips/iris5.h mips/iris5gas.h mips/iris6-o32-gas.h\"\n+\t\ttm_file=\"${tm_file} mips/iris5gas.h mips/iris6-o32-gas.h\"\n \t\tif test x$stabs = xyes\n \t\tthen\n \t\t\ttm_file=\"${tm_file} dbx.h mips/dbxmdebug.h\"\n \t\tfi\n \t\ttmake_file=mips/t-iris5-gas\n \telse\n-\t\ttm_file=\"mips/iris5.h mips/iris6-o32-as.h\"\n+\t\ttm_file=\"${tm_file} mips/iris6-o32-as.h\"\n \t\ttmake_file=mips/t-iris5-as\n \tfi\n \ttm_file=\"${tm_file} mips/iris6-o32.h\"\n \ttmake_file=\"${tmake_file} mips/t-iris mips/t-iris5-6\"\n \txm_file=mips/xm-iris5.h\n+\ttarget_cpu_default=\"MASK_ABICALLS\"\n \t# mips-tfile doesn't work yet\n \t# See comment in mips/iris5.h file.\n \tuse_collect2=yes\n@@ -1414,42 +1416,46 @@ mips-sgi-irix6*o32)\t\t# SGI System V.4., IRIX 6, O32 ABI\n #\tfi\n \t;;\n mips-sgi-irix6*)\t\t# SGI System V.4., IRIX 6\n+\ttm_file=\"${tm_file} mips/iris5.h mips/iris6.h\"\n \tif test \"x$gnu_ld\" = xyes\n \tthen\n-\t\ttm_file=\"mips/iris6.h mips/iris6gld.h\"\n-\telse\n-\t\ttm_file=mips/iris6.h\n+\t\ttm_file=\"${tm_file} mips/iris6gld.h\"\n \tfi\n \ttmake_file=\"mips/t-iris mips/t-iris5-6 mips/t-iris6\"\n+\ttarget_cpu_default=\"MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\"\n+\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n #\tif test x$enable_threads = xyes; then\n #\t\tthread_file='irix'\n #\tfi\n \t;;\n mips-sgi-irix5cross64)\t\t# Irix5 host, Irix 6 target, cross64\n-\ttm_file=\"mips/iris6.h mips/cross64.h\"\n+\ttm_file=\"${tm_file} mips/iris5.h mips/iris6.h mips/cross64.h\"\n \txm_file=mips/xm-iris5.h\n \ttmake_file=\"mips/t-iris mips/t-cross64\"\n+\ttarget_cpu_default=\"MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\"\n+\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n \t# See comment in mips/iris[56].h files.\n \tuse_collect2=yes\n #\tif test x$enable_threads = xyes; then\n #\t\tthread_file='irix'\n #\tfi\n \t;;\n mips-sgi-irix5*)\t\t# SGI System V.4., IRIX 5\n+\ttm_file=\"${tm_file} mips/iris5.h\"\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=\"mips/iris5.h mips/iris5gas.h\"\n+\t\ttm_file=\"${tm_file} mips/iris5gas.h\"\n \t\tif test x$stabs = xyes\n \t\tthen\n \t\t\ttm_file=\"${tm_file} dbx.h mips/dbxmdebug.h\"\n \t\tfi\n \t\ttmake_file=mips/t-iris5-gas\n \telse\n-\t\ttm_file=mips/iris5.h\n \t\ttmake_file=mips/t-iris5-as\n \tfi\n \ttmake_file=\"${tmake_file} mips/t-iris mips/t-iris5-6\"\n \txm_file=mips/xm-iris5.h\n+\ttarget_cpu_default=\"MASK_ABICALLS\"\n \t# mips-tfile doesn't work yet\n \t# See comment in mips/iris5.h file.\n \tuse_collect2=yes"}, {"sha": "a0d1e936d7e1f812bf171260c8dc38a7aa198a45", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=4c82f12b8ea309606d2b03270910d86f657300c6", "patch": "@@ -1,6 +1,6 @@\n-/* Definitions of target machine for GNU compiler.  Iris version 5.\n+/* Definitions of target machine for GNU compiler.  IRIX version 5.\n    Copyright (C) 1993, 1995, 1996, 1998, 2000,\n-   2001, 2002 Free Software Foundation, Inc.\n+   2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,23 +21,16 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_IRIX5 1\n \n-#ifndef TARGET_DEFAULT\n-#define\tTARGET_DEFAULT\tMASK_ABICALLS\n-#endif\n #define ABICALLS_ASM_OP \"\\t.option pic2\"\n \n-#include \"mips/iris3.h\"\n-#include \"mips/mips.h\"\n-#include \"mips/iris4.h\"\n-\n-/* Irix 5 doesn't use COFF, so disable special COFF handling in collect2.c.  */\n+/* IRIX 5 doesn't use COFF, so disable special COFF handling in collect2.c.  */\n #undef OBJECT_FORMAT_COFF\n \n /* ??? This is correct, but not very useful, because there is no file that\n    uses this macro.  */\n /* ??? The best way to handle global constructors under ELF is to use .init\n    and .fini sections.  Unfortunately, there is apparently no way to get\n-   the Irix 5.x (x <= 2) assembler to create these sections.  So we instead\n+   the IRIX 5.x (x <= 2) assembler to create these sections.  So we instead\n    use collect.  The linker can create these sections via -init and -fini\n    options, but using this would require modifying how crtstuff works, and\n    I will leave that for another time (or someone else).  */\n@@ -58,6 +51,10 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE        INT_TYPE_SIZE\n #define MAX_WCHAR_TYPE_SIZE    64\n \n+/* Plain char is unsigned in the SGI compiler.  */\n+#undef DEFAULT_SIGNED_CHAR\n+#define DEFAULT_SIGNED_CHAR 0\n+\n #define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\\\n  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\\\n   || !strcmp (STR, \"rpath\"))\n@@ -153,7 +150,19 @@ Boston, MA 02111-1307, USA.  */\n #undef MACHINE_TYPE\n #define MACHINE_TYPE \"SGI running IRIX 5.x\"\n \n- /* Dollar signs are OK in Irix5 but not in Irix3.  */\n+/* Always use 1 for .file number.  I [meissner@osf.org] wonder why\n+   IRIX needs this.  */\n+\n+#undef SET_FILE_NUMBER\n+#define SET_FILE_NUMBER() num_source_filenames = 1\n+\n+/* Put out a label after a .loc.  I [meissner@osf.org] wonder why\n+   IRIX needs this.  */\n+\n+#undef LABEL_AFTER_LOC\n+#define LABEL_AFTER_LOC(STREAM) fprintf (STREAM, \"LM%d:\\n\", ++sym_lineno)\n+\n+ /* Dollar signs are OK in IRIX 5 but not in IRIX 3.  */\n #undef DOLLARS_IN_IDENTIFIERS\n #undef NO_DOLLAR_IN_LABEL\n \n@@ -162,7 +171,24 @@ Boston, MA 02111-1307, USA.  */\n #undef MIPS_DEFAULT_GVALUE\n #define MIPS_DEFAULT_GVALUE 0\n \n-/* In Irix 5, we must output a `.global name .text' directive for every used\n+/* Some assemblers have a bug that causes backslash escaped chars in .ascii\n+   to be misassembled, so we just completely avoid it.  */\n+#undef ASM_OUTPUT_ASCII\n+#define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  const unsigned char *s_ = (const unsigned char *)(PTR);\t\\\n+  unsigned len_ = (LEN);\t\t\t\t\t\\\n+  unsigned i_;\t\t\t\t\t\t\t\\\n+  for (i_ = 0; i_ < len_; s_++, i_++)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      if ((i_ % 8) == 0)\t\t\t\t\t\\\n+\tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\t\\\n+      fprintf ((FILE), \"%s0x%x\", (i_%8?\",\":\"\"), *s_);\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  fputs (\"\\n\", (FILE));\t\t\t\t\t\t\\\n+} while (0)\n+\n+/* In IRIX 5, we must output a `.global name .text' directive for every used\n    but undefined function.  If we don't, the linker may perform an optimization\n    (skipping over the insns that set $gp) when it is unsafe.  This is used\n    indirectly by ASM_OUTPUT_EXTERNAL.  */"}, {"sha": "2a6befdd681d2151665deea158452729888fd2ec", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 16, "deletions": 23, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=4c82f12b8ea309606d2b03270910d86f657300c6", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler.  Iris version 6.\n+/* Definitions of target machine for GNU compiler.  IRIX version 6.\n    Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n \n@@ -19,25 +19,18 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Let mips.c know we need the Irix6 functions.  */\n+/* Let mips.c know we need the IRIX 6 functions.  */\n #define TARGET_IRIX6 1\n \n /* Default to -mabi=n32 and -mips3.  */\n-#define MIPS_ISA_DEFAULT 3\n-#define MIPS_ABI_DEFAULT ABI_N32\n+#undef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS { \"mabi=n32\" }\n \n-#ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT)\n-#endif\n-\n-#include \"mips/iris5.h\"\n-\n-/* Irix6 assembler does handle DWARF2 directives.  Override setting in\n-   irix5.h file.  */\n+/* IRIX 6 assembler does handle DWARF2 directives.  Override setting in\n+   iris5.h file.  */\n #undef DWARF2_UNWIND_INFO\n \n-/* The Irix6 assembler will sometimes assign labels to the wrong\n+/* The IRIX 6 assembler will sometimes assign labels to the wrong\n    section unless the labels are within .ent/.end blocks.  Therefore,\n    we avoid creating such labels.  */\n #define DWARF2_GENERATE_TEXT_SECTION_LABEL 0\n@@ -58,19 +51,19 @@ Boston, MA 02111-1307, USA.  */\n #undef WINT_TYPE_SIZE\n #define WINT_TYPE_SIZE 32\n \n-/* For Irix 6, -mabi=64 implies TARGET_LONG64.  */\n+/* For IRIX 6, -mabi=64 implies TARGET_LONG64.  */\n /* This is handled in override_options.  */\n \n #undef SUBTARGET_CC1_SPEC\n #define SUBTARGET_CC1_SPEC \"\"\n \n-/* We must pass -D_LONGLONG always, even when -ansi is used, because irix6\n+/* We must pass -D_LONGLONG always, even when -ansi is used, because IRIX 6\n    system header files require it.  This is OK, because gcc never warns\n    when long long is used in system header files.  Alternatively, we can\n    add support for the SGI builtin type __long_long.  */\n \n /* The GNU C++ standard library requires that __EXTENSIONS__ and\n-   _SGI_SOURCE be defined on at least irix6.2 and probably all IRIX 6\n+   _SGI_SOURCE be defined on at least IRIX 6.2 and probably all IRIX 6\n    prior to 6.5.  They normally get defined if !ansi, for g++ we want\n    them regardless.  We don't need this on IRIX 6.5 itself, but it\n    shouldn't hurt other than the namespace pollution.  */\n@@ -145,7 +138,7 @@ Boston, MA 02111-1307, USA.  */\n        }\t\t\t\t\t\t\\\n } while (0)\n \n-/* Irix 6 uses DWARF-2.  */\n+/* IRIX 6 uses DWARF-2.  */\n #define DWARF2_DEBUGGING_INFO 1\n #define MIPS_DEBUGGING_INFO 1\n #undef PREFERRED_DEBUGGING_TYPE\n@@ -167,7 +160,7 @@ Boston, MA 02111-1307, USA.  */\n    as DWARF_OFFSET_SIZE.  */\n #define DWARF_INITIAL_LENGTH_SIZE DWARF_OFFSET_SIZE\n \n-/* There is no GNU as port for Irix6 yet, so we set MD_EXEC_PREFIX so that\n+/* There is no GNU as port for IRIX 6 yet, so we set MD_EXEC_PREFIX so that\n    gcc will automatically find SGI as instead of searching the user's path.\n    The latter can fail when building a cross compiler if the user has . in\n    the path before /usr/bin, since then gcc will find and try to use the link\n@@ -182,13 +175,13 @@ Boston, MA 02111-1307, USA.  */\n #undef MACHINE_TYPE\n #define MACHINE_TYPE \"SGI running IRIX 6.x\"\n \n-/* Irix 5 stuff that we don't need for Irix 6.  */\n+/* IRIX 5 stuff that we don't need for IRIX 6.  */\n /* ??? We do need this for the -mabi=32 switch though.  */\n #undef ASM_OUTPUT_UNDEF_FUNCTION\n #undef ASM_OUTPUT_EXTERNAL_LIBCALL\n #undef ASM_DECLARE_FUNCTION_SIZE\n \n-/* Stuff we need for Irix 6 that isn't in Irix 5.  */\n+/* Stuff we need for IRIX 6 that isn't in IRIX 5.  */\n \n /* The SGI assembler doesn't like labels before the .ent, so we must output\n    the .ent and function name here, which is the normal place for it.  */\n@@ -237,7 +230,7 @@ Boston, MA 02111-1307, USA.  */\n #define TYPE_ASM_OP\t\"\\t.type\\t\"\n #define SIZE_ASM_OP\t\"\\t.size\\t\"\n \n-/* Irix assembler does not support the init_priority C++ attribute.  */\n+/* IRIX assembler does not support the init_priority C++ attribute.  */\n #undef SUPPORTS_INIT_PRIORITY\n #define SUPPORTS_INIT_PRIORITY 0\n \n@@ -416,7 +409,7 @@ do\t\t\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n-/* Define the `__builtin_va_list' type for the ABI.  On Irix6, this\n+/* Define the `__builtin_va_list' type for the ABI.  On IRIX 6, this\n    type is `char *'.  */\n #undef BUILD_VA_LIST_TYPE\n #define BUILD_VA_LIST_TYPE(VALIST) \\\n@@ -448,7 +441,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n #define LOCAL_LABEL_PREFIX ((mips_abi == ABI_32 || mips_abi == ABI_O64) \\\n \t\t\t    ? \"$\" : \".\")\n \n-/* Profiling is supported via libprof1.a not -lc_p as in Irix 3.  */\n+/* Profiling is supported via libprof1.a not -lc_p as in IRIX 3.  */\n /* ??? If no mabi=X option give, but a mipsX option is, then should depend\n    on the mipsX option.  */\n #undef STARTFILE_SPEC"}, {"sha": "f69376acb4928aeb4495d4e17181eedc584d7d6e", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c82f12b8ea309606d2b03270910d86f657300c6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4c82f12b8ea309606d2b03270910d86f657300c6", "patch": "@@ -2532,16 +2532,6 @@ extern enum reg_class mips_char_to_class[256];\n   ((mips_abi == ABI_32 || mips_abi == ABI_O64 || mips_abi == ABI_EABI) \\\n    ? 64 : 128)\n \n-/* Make sure 4 words are always allocated on the stack.  */\n-\n-#ifndef STACK_ARGS_ADJUST\n-#define STACK_ARGS_ADJUST(SIZE)\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (SIZE.constant < 4 * UNITS_PER_WORD)\t\t\t\t\\\n-    SIZE.constant = 4 * UNITS_PER_WORD;\t\t\t\t\t\\\n-}\n-#endif\n-\n \f\n /* A C expression that should indicate the number of bytes of its\n    own arguments that a function pops on returning, or 0"}]}