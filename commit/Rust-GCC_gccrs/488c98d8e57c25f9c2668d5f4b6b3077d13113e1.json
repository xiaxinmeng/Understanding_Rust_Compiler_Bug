{"sha": "488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4Yzk4ZDhlNTdjMjVmOWMyNjY4ZDVmNGI2YjMwNzdkMTMxMTNlMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-11-05T05:17:16Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-11-05T05:17:16Z"}, "message": "tsystem.h: Add the prototype of strlen.\n\n\t* tsystem.h: Add the prototype of strlen.\n\t* unwind-pe.h (read_encoded_value_with_base): Add an\n\tappropriate cast to handle a case where the pointer size is\n\tsmaller than sizeof (int).\n\nFrom-SVN: r73265", "tree": {"sha": "65c1a41f79dbdb5644f68e8c8d029886b1d4761b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65c1a41f79dbdb5644f68e8c8d029886b1d4761b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/comments", "author": null, "committer": null, "parents": [{"sha": "c1fab4c1be7b11a656786759ee9927761c1a9473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1fab4c1be7b11a656786759ee9927761c1a9473", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1fab4c1be7b11a656786759ee9927761c1a9473"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "c2c2da961a48018a0596a122e8a41800da65e8b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "patch": "@@ -1,3 +1,10 @@\n+2003-11-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tsystem.h: Add the prototype of strlen.\n+\t* unwind-pe.h (read_encoded_value_with_base): Add an\n+\tappropriate cast to handle a case where the pointer size is\n+\tsmaller than sizeof (int).\n+\n 2003-11-04  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips-protos.h (mips_global_pic_constant_p): Delete."}, {"sha": "f24bab78cc5e4258fc8784ddafe5d5f227dee500", "filename": "gcc/tsystem.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2Ftsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2Ftsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsystem.h?ref=488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "patch": "@@ -62,6 +62,10 @@ extern int atexit (void (*)(void));\n extern void abort (void) __attribute__ ((__noreturn__));\n #endif\n \n+#ifndef strlen\n+extern size_t strlen (const char *);\n+#endif\n+\n #else /* ! inhibit_libc */\n /* We disable this when inhibit_libc, so that gcc can still be built without\n    needing header files first.  */"}, {"sha": "e6aebd7a41199e0f2cc5c211a8aedad351b96a3e", "filename": "gcc/unwind-pe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2Funwind-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/488c98d8e57c25f9c2668d5f4b6b3077d13113e1/gcc%2Funwind-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-pe.h?ref=488c98d8e57c25f9c2668d5f4b6b3077d13113e1", "patch": "@@ -199,7 +199,7 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,\n       _Unwind_Internal_Ptr a = (_Unwind_Internal_Ptr) p;\n       a = (a + sizeof (void *) - 1) & - sizeof(void *);\n       result = *(_Unwind_Internal_Ptr *) a;\n-      p = (const unsigned char *) (a + sizeof (void *));\n+      p = (const unsigned char *) (_Unwind_Internal_Ptr) (a + sizeof (void *));\n     }\n   else\n     {"}]}