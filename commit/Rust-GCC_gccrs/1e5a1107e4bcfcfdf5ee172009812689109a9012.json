{"sha": "1e5a1107e4bcfcfdf5ee172009812689109a9012", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1YTExMDdlNGJjZmNmZGY1ZWUxNzIwMDk4MTI2ODkxMDlhOTAxMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-03-03T09:19:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-03T09:19:42Z"}, "message": "* calls.c (special_function_p): operator new may not be malloc-like.\n\nFrom-SVN: r32308", "tree": {"sha": "1f5a0b1f3495717a7afe9e88d266b213ac8ddfe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f5a0b1f3495717a7afe9e88d266b213ac8ddfe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e5a1107e4bcfcfdf5ee172009812689109a9012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5a1107e4bcfcfdf5ee172009812689109a9012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5a1107e4bcfcfdf5ee172009812689109a9012", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5a1107e4bcfcfdf5ee172009812689109a9012/comments", "author": null, "committer": null, "parents": [{"sha": "09496b7c183524bcae9606d118b7f7cfb0196878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09496b7c183524bcae9606d118b7f7cfb0196878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09496b7c183524bcae9606d118b7f7cfb0196878"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "dfd80351f91305c653f7baa192eebf2dfa2033d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5a1107e4bcfcfdf5ee172009812689109a9012/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5a1107e4bcfcfdf5ee172009812689109a9012/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e5a1107e4bcfcfdf5ee172009812689109a9012", "patch": "@@ -1,5 +1,7 @@\n 2000-03-03  Jason Merrill  <jason@casey.cygnus.com>\n \n+\t* calls.c (special_function_p): operator new may not be malloc-like.\n+\n \t* gcse.c (dump_hash_table): Really fix error in last change.\n \n 2000-03-02  Denis Chertykov  <denisc@overta.ru>"}, {"sha": "324cc7bdf30ec33447d7fb55778b0ee88aa651fc", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5a1107e4bcfcfdf5ee172009812689109a9012/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5a1107e4bcfcfdf5ee172009812689109a9012/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=1e5a1107e4bcfcfdf5ee172009812689109a9012", "patch": "@@ -634,16 +634,13 @@ special_function_p (fndecl, returns_twice, is_longjmp, fork_or_exec,\n       /* Do not add any more malloc-like functions to this list,\n          instead mark them as malloc functions using the malloc attribute.\n          Note, realloc is not suitable for attribute malloc since\n-         it may return the same address across multiple calls. */\n+         it may return the same address across multiple calls.\n+         C++ operator new is not suitable because it is not required\n+         to return a unique pointer; indeed, the standard placement new\n+\t just returns its argument. */\n       else if (! strcmp (tname, \"malloc\")\n \t       || ! strcmp (tname, \"calloc\")\n-\t       || ! strcmp (tname, \"strdup\")\n-\t       /* Note use of NAME rather than TNAME here.  These functions\n-\t\t  are only reserved when preceded with __.  */\n-\t       || ! strcmp (name, \"__vn\")\t/* mangled __builtin_vec_new */\n-\t       || ! strcmp (name, \"__nw\")\t/* mangled __builtin_new */\n-\t       || ! strcmp (name, \"__builtin_new\")\n-\t       || ! strcmp (name, \"__builtin_vec_new\"))\n+\t       || ! strcmp (tname, \"strdup\"))\n \t*is_malloc = 1;\n     }\n }"}]}