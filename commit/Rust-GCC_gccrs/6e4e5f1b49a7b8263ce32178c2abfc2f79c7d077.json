{"sha": "6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0ZTVmMWI0OWE3YjgyNjNjZTMyMTc4YzJhYmZjMmY3OWM3ZDA3Nw==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-04-28T17:04:06Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-04-28T17:04:06Z"}, "message": "(ENDFILE_SPEC, LIB_SPEC) Fix crtbegin and crtend\n\nFrom-SVN: r9539", "tree": {"sha": "e0b13a5f5a9f3ca67e1d262c1a7ecb87129ab761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0b13a5f5a9f3ca67e1d262c1a7ecb87129ab761"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077/comments", "author": null, "committer": null, "parents": [{"sha": "50dc89b594351c5d2f20024a206c8c7cc83efef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50dc89b594351c5d2f20024a206c8c7cc83efef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50dc89b594351c5d2f20024a206c8c7cc83efef5"}], "stats": {"total": 79, "additions": 55, "deletions": 24}, "files": [{"sha": "db872aad2a216e65a01b97376e8e1387a4f6d6e8", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 53, "deletions": 20, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "patch": "@@ -1,9 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 1989, 1990, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 1995 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n-   Enhanced by Michael Meissner (meissner@osf.org)\n-   Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n This file is part of GNU CC.\n@@ -31,7 +29,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.15 $\"\n+#define VERSION_INFO2   \"$Revision: 1.16 $\"\n #endif\n #ifndef NO_BUGS\n #define AS_BUG_IMMEDIATE_LABEL\n@@ -114,8 +112,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    and last objects are crtbegin.o (or bcscrtbegin.o) and crtend.o.\n    When the -G link option is used (-shared and -symbolic) a final\n    link is not being done.  */\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \"crtend.o%s\"\n #undef\tLIB_SPEC\n-#define LIB_SPEC \"%{!msvr3:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}} crtend.o%s\"\n+#define LIB_SPEC \"%{!msvr3:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}}\"\n #undef\tLINK_SPEC\n #define LINK_SPEC \"%{z*} %{h*} %{V} %{v:%{!V:-V}} \\\n \t\t   %{static:-dn -Bstatic} \\\n@@ -176,30 +176,39 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Override svr4.h and m88k.h except when compiling crtstuff.c.  These must\n    be constant strings when compiling crtstuff.c.  Otherwise, respect the\n    -mversion-STRING option used.  */\n+#undef INIT_SECTION_PREAMBLE\n #undef INIT_SECTION_ASM_OP\n #undef FINI_SECTION_ASM_OP\n #undef CTORS_SECTION_ASM_OP\n #undef DTORS_SECTION_ASM_OP\n \n-#if !defined (CRT_BEGIN) && !defined (CRT_END)\n+#if defined (CRT_BEGIN) || defined (CRT_END) || defined (L__main)\n+/* routines to invoke global constructors and destructors are always COFF \n+   to enable linking mixed COFF and ELF objects */\n+#define FINI_SECTION_ASM_OP (\"section  .fini,\\\"x\\\"\")\n+#ifndef BCS\n+#define INIT_SECTION_PREAMBLE asm (\"\\taddu\\tr31,r31,0x20\")\n+#endif\n #undef\tINIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n-\t\t\t     ? \"section\\t .init,\\\"xa\\\"\"\t\t\\\n-\t\t\t     : \"section\\t .init,\\\"x\\\"\")\n+#define INIT_SECTION_ASM_OP (\"section\\t .init,\\\"x\\\"\")\n #undef\tCTORS_SECTION_ASM_OP\n-#define CTORS_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n-\t\t\t      ? \"section\\t .ctors,\\\"aw\\\"\"\t\\\n-\t\t\t      : \"section\\t .ctors,\\\"d\\\"\")\n+#define CTORS_SECTION_ASM_OP (\"section\\t .ctors,\\\"d\\\"\")\n #undef\tDTORS_SECTION_ASM_OP\n-#define DTORS_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n-\t\t\t      ? \"section\\t .dtors,\\\"aw\\\"\"\t\\\n-\t\t\t      : \"section\\t .dtors,\\\"d\\\"\")\n+#define DTORS_SECTION_ASM_OP (\"section\\t .dtors,\\\"d\\\"\")\n+#undef OBJECT_FORMAT_ELF\n #else\n-/* These must be constant strings for crtstuff.c.  */\n-#define INIT_SECTION_ASM_OP\t\"section\\t .init,\\\"x\\\"\"\n-#define FINI_SECTION_ASM_OP\t\"section\\t .fini,\\\"x\\\"\"\n-#define CTORS_SECTION_ASM_OP\t\"section\\t .ctors,\\\"d\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\"section\\t .dtors,\\\"d\\\"\"\n+#undef        INIT_SECTION_ASM_OP\n+#define INIT_SECTION_ASM_OP (TARGET_SVR4                      \\\n+                           ? \"section\\t .init,\\\"xa\\\"\"         \\\n+                           : \"section\\t .init,\\\"x\\\"\")\n+#undef        CTORS_SECTION_ASM_OP\n+#define CTORS_SECTION_ASM_OP (TARGET_SVR4                     \\\n+                            ? \"section\\t .ctors,\\\"aw\\\"\"       \\\n+                            : \"section\\t .ctors,\\\"d\\\"\")\n+#undef        DTORS_SECTION_ASM_OP\n+#define DTORS_SECTION_ASM_OP (TARGET_SVR4                     \\\n+                            ? \"section\\t .dtors,\\\"aw\\\"\"       \\\n+                            : \"section\\t .dtors,\\\"d\\\"\")\n #endif /* crtstuff.c */\n \n /* The lists of global object constructors and global destructors are always\n@@ -211,10 +220,19 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    entries.  */\n \n /* Mark the end of the .ctors/.dtors sections with a -1.  */\n+\n+#define CTOR_LIST_BEGIN\t\t\t\\\n+asm (CTORS_SECTION_ASM_OP);\t\t\\\n+func_ptr __CTOR_LIST__[1] = { (func_ptr) (-1) }\n+\n #define CTOR_LIST_END\t\t\t\\\n asm (CTORS_SECTION_ASM_OP);\t\t\\\n func_ptr __CTOR_END__[1] = { (func_ptr) (-1) }\n \n+#define DTOR_LIST_BEGIN\t\t\t\\\n+asm (DTORS_SECTION_ASM_OP);\t\t\\\n+func_ptr __DTOR_LIST__[1] = { (func_ptr) (-1) }\n+\n #define DTOR_LIST_END\t\t\t\\\n asm (DTORS_SECTION_ASM_OP);\t\t\\\n func_ptr __DTOR_END__[1] = { (func_ptr) (-1) }\n@@ -238,3 +256,18 @@ func_ptr __DTOR_END__[1] = { (func_ptr) (-1) }\n       if (((int *)__DTOR_LIST__)[i] != 0)\t\t\\\n \t__DTOR_LIST__[i] ();\t\t\t\t\\\n   } while (0)\t\t\t\t\t\n+\n+/* The maximum alignment which the object file format can support.\n+   page alignment would seem to be enough */\n+#undef MAX_OFILE_ALIGNMENT\n+#define MAX_OFILE_ALIGNMENT 0x1000\n+\n+/* Must use data section for relocatable constants when pic.  */\n+#undef SELECT_RTX_SECTION\n+#define SELECT_RTX_SECTION(MODE,RTX)            \\\n+{                                               \\\n+  if (flag_pic && symbolic_operand (RTX))       \\\n+    data_section ();                            \\\n+  else                                          \\\n+    const_section ();                           \\\n+}"}, {"sha": "694fe426017243f7426201c7f52d36791e77bcb7", "filename": "gcc/config/m88k/dguxbcs.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h?ref=6e4e5f1b49a7b8263ce32178c2abfc2f79c7d077", "patch": "@@ -1,9 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 1989, 1990, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 89, 90, 91, 93, 94, 1995 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n-   Enhanced by Michael Meissner (meissner@osf.org)\n-   Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n This file is part of GNU CC.\n@@ -61,7 +59,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Linker and library spec's.\n    -msvr3 is the default if -msvr4 is not specified. */\n #undef\tLIB_SPEC\n-#define LIB_SPEC \"%{msvr4:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}} crtend.o%s\"\n+#define LIB_SPEC \"%{msvr4:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}}\"\n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n \t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\"}]}