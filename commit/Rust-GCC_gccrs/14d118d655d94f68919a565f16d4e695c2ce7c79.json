{"sha": "14d118d655d94f68919a565f16d4e695c2ce7c79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRkMTE4ZDY1NWQ5NGY2ODkxOWE1NjVmMTZkNGU2OTVjMmNlN2M3OQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-04T01:04:18Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-04T01:04:18Z"}, "message": "ia64.c (ia64_emit_insn_before): Put it back.\n\n2002-05-03  David S. Miller  <davem@redhat.com>\n\n\t* config/ia64/ia64.c (ia64_emit_insn_before): Put it back.\n\t(rtx_needs_barrier): Delete reference to cycle_display unspec.\n\t(ia64_sched_reorder2): Mention need for cycle display handling\n\tonce such notes exist.\n\nFrom-SVN: r53139", "tree": {"sha": "7fff67a8524bdecd9338c0ad4770aad1d1b83caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fff67a8524bdecd9338c0ad4770aad1d1b83caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14d118d655d94f68919a565f16d4e695c2ce7c79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d118d655d94f68919a565f16d4e695c2ce7c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d118d655d94f68919a565f16d4e695c2ce7c79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d118d655d94f68919a565f16d4e695c2ce7c79/comments", "author": null, "committer": null, "parents": [{"sha": "14c9397896cb3988424758497266a142c3cc4f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c9397896cb3988424758497266a142c3cc4f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c9397896cb3988424758497266a142c3cc4f6e"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "ee8baf7d247a10a1db6158ca29364e7ac67ad6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d118d655d94f68919a565f16d4e695c2ce7c79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d118d655d94f68919a565f16d4e695c2ce7c79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14d118d655d94f68919a565f16d4e695c2ce7c79", "patch": "@@ -3,6 +3,11 @@\n \t* target-defs.h (TARGET_SCHED_CYCLE_DISPLAY): Delete.\n \t* target.h (struct gcc_target): Delete cycle_display member.\n \n+\t* config/ia64/ia64.c (ia64_emit_insn_before): Put it back.\n+\t(rtx_needs_barrier): Delete reference to cycle_display unspec.\n+\t(ia64_sched_reorder2): Mention need for cycle display handling\n+\tonce such notes exist.\n+\t\n 2002-05-03  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (etoasc): Strip most trailing zeros for clarity."}, {"sha": "0520db4d20c750b79caae3657fa8e228bdfe2085", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d118d655d94f68919a565f16d4e695c2ce7c79/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d118d655d94f68919a565f16d4e695c2ce7c79/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=14d118d655d94f68919a565f16d4e695c2ce7c79", "patch": "@@ -4602,7 +4602,6 @@ rtx_needs_barrier (x, flags, pred)\n \tcase 20: /* mov = ar.bsp */\n \tcase 21: /* flushrs */\n \tcase 22: /* bundle selector */\n-\tcase 23: /* cycle display */\n           break;\n \n         case 24: /* addp4 */\n@@ -5159,6 +5158,7 @@ int ia64_final_schedule = 0;\n static int itanium_split_issue PARAMS ((const struct ia64_packet *, int));\n static rtx ia64_single_set PARAMS ((rtx));\n static int insn_matches_slot PARAMS ((const struct ia64_packet *, enum attr_type, int, rtx));\n+static void ia64_emit_insn_before PARAMS ((rtx, rtx));\n static void maybe_rotate PARAMS ((FILE *));\n static void finish_last_head PARAMS ((FILE *, int));\n static void rotate_one_bundle PARAMS ((FILE *));\n@@ -5481,6 +5481,16 @@ insn_matches_slot (p, itype, slot, insn)\n   return 0;\n }\n \n+/* Like emit_insn_before, but skip cycle_display notes.\n+   ??? When cycle display notes are implemented, update this.  */\n+\n+static void\n+ia64_emit_insn_before (insn, before)\n+     rtx insn, before;\n+{\n+  emit_insn_before (insn, before);\n+}\n+\n /* When rotating a bundle out of the issue window, insert a bundle selector\n    insn in front of it.  DUMP is the scheduling dump file or NULL.  START\n    is either 0 or 3, depending on whether we want to emit a bundle selector\n@@ -5512,7 +5522,7 @@ finish_last_head (dump, start)\n     fprintf (dump, \"//    Emitting template before %d: %s\\n\",\n \t     INSN_UID (insn), b->name);\n \n-  emit_insn_before (gen_bundle_selector (GEN_INT (bundle_type)), insn);\n+  ia64_emit_insn_before (gen_bundle_selector (GEN_INT (bundle_type)), insn);\n }\n \n /* We can't schedule more insns this cycle.  Fix up the scheduling state\n@@ -6372,7 +6382,10 @@ ia64_sched_reorder2 (dump, sched_verbose, ready, pn_ready, clock_var)\n \t    abort ();\n \t  insn_code = recog_memoized (stop);\n \n-\t  /* Ignore .pred.rel.mutex.  */\n+\t  /* Ignore .pred.rel.mutex.\n+\n+\t     ??? Update this to ignore cycle display notes too\n+\t     ??? once those are implemented  */\n \t  if (insn_code == CODE_FOR_pred_rel_mutex\n \t      || insn_code == CODE_FOR_prologue_use)\n \t    continue;\n@@ -6470,7 +6483,7 @@ ia64_variable_issue (dump, sched_verbose, insn, can_issue_more)\n       int t = sched_data.first_slot;\n       if (t == 0)\n \tt = 3;\n-      emit_insn_before (gen_insn_group_barrier (GEN_INT (t)), insn);\n+      ia64_emit_insn_before (gen_insn_group_barrier (GEN_INT (t)), insn);\n       init_insn_group_barriers ();\n       sched_data.last_was_stop = 0;\n     }"}]}