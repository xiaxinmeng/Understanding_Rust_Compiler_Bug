{"sha": "13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNiMWFmZTRkZWZjYzNlZWFhNTBmZTEwZWIyZjI3NjhlOTU2OTZlYw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-06T12:48:58Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-06T12:48:58Z"}, "message": "re PR fortran/88658 (Intrinsic MAX1 returns a REAL result, should be INTEGER.)\n\n2019-01-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/88658\n\t* gfortran.h: Add macro gfc_real_4_kind\n\t* simplify.c (simplify_min_max): Special case for the types of\n\tAMAX0, AMIN0, MAX1 and MIN1, which actually change the types of\n\ttheir arguments.\n\n2019-01-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/88658\n\t* gfortran.dg/min_max_type_2.f90: New test.\n\nFrom-SVN: r267609", "tree": {"sha": "26134927b3fb6c16bc2861226c82eda9a4723674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26134927b3fb6c16bc2861226c82eda9a4723674"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/comments", "author": null, "committer": null, "parents": [{"sha": "8f4813c1b7e2e567dbeeb5f46ce3ecd7c702bef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f4813c1b7e2e567dbeeb5f46ce3ecd7c702bef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f4813c1b7e2e567dbeeb5f46ce3ecd7c702bef7"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "cf869f8785a598841449da2666cfb50ecb1e76e2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "patch": "@@ -1,3 +1,11 @@\n+2019-01-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/88658\n+\t* gfortran.h: Add macro gfc_real_4_kind\n+\t* simplify.c (simplify_min_max): Special case for the types of\n+\tAMAX0, AMIN0, MAX1 and MIN1, which actually change the types of\n+\ttheir arguments.\n+\n 2019-01-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/88009"}, {"sha": "0b281105fb458a781cbe908d81b3ae2bd204c9f3", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "patch": "@@ -2967,6 +2967,7 @@ extern int gfc_character_storage_size;\n \n #define gfc_logical_4_kind 4\n #define gfc_integer_4_kind 4\n+#define gfc_real_4_kind 4\n \n /* symbol.c */\n void gfc_clear_new_implicit (void);"}, {"sha": "fdaf3cb47409882ec7632b584b44a98ef46cc9a4", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "patch": "@@ -4963,6 +4963,8 @@ static gfc_expr *\n simplify_min_max (gfc_expr *expr, int sign)\n {\n   gfc_actual_arglist *arg, *last, *extremum;\n+  gfc_expr *tmp, *ret;\n+  const char *fname;\n \n   last = NULL;\n   extremum = NULL;\n@@ -4995,7 +4997,27 @@ simplify_min_max (gfc_expr *expr, int sign)\n   if (expr->value.function.actual->next != NULL)\n     return NULL;\n \n-  return gfc_copy_expr (expr->value.function.actual->expr);\n+  /* Handle special cases of specific functions (min|max)1 and\n+     a(min|max)0.  */\n+\n+  tmp = expr->value.function.actual->expr;\n+  fname = expr->value.function.isym->name;\n+\n+  if ((tmp->ts.type != BT_INTEGER || tmp->ts.kind != gfc_integer_4_kind)\n+      && (strcmp (fname, \"min1\") == 0 || strcmp (fname, \"max1\") == 0))\n+    {\n+      ret = gfc_convert_constant (tmp, BT_INTEGER, gfc_integer_4_kind);\n+    }\n+  else if ((tmp->ts.type != BT_REAL || tmp->ts.kind != gfc_real_4_kind)\n+\t   && (strcmp (fname, \"amin0\") == 0 || strcmp (fname, \"amax0\") == 0))\n+    {\n+      ret = gfc_convert_constant (tmp, BT_REAL, gfc_real_4_kind);\n+    }\n+  else\n+    ret = gfc_copy_expr (tmp);\n+\n+  return ret;\n+\n }\n \n "}, {"sha": "fcbbd7432aed9dfb977eb47cad0b6011a4aa6eef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "patch": "@@ -1,3 +1,8 @@\n+2019-01-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/88658\n+\t* gfortran.dg/min_max_type_2.f90: New test.\n+\n 2019-01-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/88363"}, {"sha": "e2b6d6745d93b38ff440e81ddd82a8531ff973ef", "filename": "gcc/testsuite/gfortran.dg/min_max_type_2.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b1afe4defcc3eeaa50fe10eb2f2768e95696ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmin_max_type_2.f90?ref=13b1afe4defcc3eeaa50fe10eb2f2768e95696ec", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do  run }\n+! PR 88658 - make sure the types for min1, max1, amax0 and amin0 are\n+! correct when simplified\n+\n+program main\n+  real :: RVCOMP\n+  character (len=12) :: line\n+  integer :: n\n+\n+  RVCOMP = MAX1(2.3, 3.1, 4.4) / 5 \n+  if (rvcomp /= 0.) stop 1\n+  rvcomp = min1(2.3, 3.1, 5.1) / 5\n+  if (rvcomp /= 0.) stop 2\n+  write (unit=line, fmt='(F12.5)') amax0(42, 21, 7)\n+  if (line /= '    42.00000') stop 3\n+  write (unit=line, fmt='(F12.5)') amin0(42,21,7)\n+  if (line /= '     7.00000') stop 4\n+end program main"}]}