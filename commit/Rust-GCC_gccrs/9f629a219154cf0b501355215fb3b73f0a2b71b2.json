{"sha": "9f629a219154cf0b501355215fb3b73f0a2b71b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2MjlhMjE5MTU0Y2YwYjUwMTM1NTIxNWZiM2I3M2YwYTJiNzFiMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-06-13T19:27:29Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-06-13T19:27:29Z"}, "message": "c-common.c (handle_mode_attribute): Use VECTOR_MODE_P macro.\n\n2003-06-13  Aldy Hernandez  <aldyh@redhat.com>\n\n        * c-common.c (handle_mode_attribute): Use VECTOR_MODE_P macro.\n\n        * simplify-rtx.c (simplify_subreg): Same.\n\n        * emit-rtl.c (gen_lowpart_common): Same.\n\nFrom-SVN: r67911", "tree": {"sha": "375c2980e48a746e92597d9b8fcfa28dfa34bdc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/375c2980e48a746e92597d9b8fcfa28dfa34bdc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f629a219154cf0b501355215fb3b73f0a2b71b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f629a219154cf0b501355215fb3b73f0a2b71b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f629a219154cf0b501355215fb3b73f0a2b71b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f629a219154cf0b501355215fb3b73f0a2b71b2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e15bb5c692fb17d5c56a0b0c9c60022186f6a539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15bb5c692fb17d5c56a0b0c9c60022186f6a539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15bb5c692fb17d5c56a0b0c9c60022186f6a539"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "8416f98f8963e94d44df7911a52969f877969cae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f629a219154cf0b501355215fb3b73f0a2b71b2", "patch": "@@ -1,3 +1,11 @@\n+2003-06-13  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * c-common.c (handle_mode_attribute): Use VECTOR_MODE_P macro.\n+\n+        * simplify-rtx.c (simplify_subreg): Same.\n+\n+        * emit-rtl.c (gen_lowpart_common): Same.\n+\n 2003-06-13  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* builtins.c: Fix comment typos."}, {"sha": "30a7db74efb3a46c2083da0fdeba95817f17bb53", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=9f629a219154cf0b501355215fb3b73f0a2b71b2", "patch": "@@ -5215,9 +5215,7 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n \t{\n \t  /* If this is a vector, make sure we either have hardware\n \t     support, or we can emulate it.  */\n-\t  if ((GET_MODE_CLASS (mode) == MODE_VECTOR_INT\n-\t       || GET_MODE_CLASS (mode) == MODE_VECTOR_FLOAT)\n-\t      && !vector_mode_valid_p (mode))\n+\t  if (VECTOR_MODE_P (mode) && !vector_mode_valid_p (mode))\n \t    {\n \t      error (\"unable to emulate '%s'\", GET_MODE_NAME (mode));\n \t      return NULL_TREE;"}, {"sha": "4590bf252709344ee1d51961ddbb340efe66cd49", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=9f629a219154cf0b501355215fb3b73f0a2b71b2", "patch": "@@ -1155,9 +1155,7 @@ gen_lowpart_common (mode, x)\n   else if (GET_CODE (x) == SUBREG || GET_CODE (x) == REG\n \t   || GET_CODE (x) == CONCAT || GET_CODE (x) == CONST_VECTOR)\n     return simplify_gen_subreg (mode, x, GET_MODE (x), offset);\n-  else if ((GET_MODE_CLASS (mode) == MODE_VECTOR_INT\n-\t    || GET_MODE_CLASS (mode) == MODE_VECTOR_FLOAT)\n-\t   && GET_MODE (x) == VOIDmode)\n+  else if (VECTOR_MODE_P (mode) && GET_MODE (x) == VOIDmode)\n     return simplify_gen_subreg (mode, x, int_mode_for_mode (mode), offset);\n   /* If X is a CONST_INT or a CONST_DOUBLE, extract the appropriate bits\n      from the low-order part of the constant.  */"}, {"sha": "9738566e09e1fe49e19be8837c3221360a6822f0", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f629a219154cf0b501355215fb3b73f0a2b71b2/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=9f629a219154cf0b501355215fb3b73f0a2b71b2", "patch": "@@ -2707,8 +2707,7 @@ simplify_subreg (outermode, op, innermode, byte)\n       int offset, part;\n       unsigned HOST_WIDE_INT val = 0;\n \n-      if (GET_MODE_CLASS (outermode) == MODE_VECTOR_INT\n-\t  || GET_MODE_CLASS (outermode) == MODE_VECTOR_FLOAT)\n+      if (VECTOR_MODE_P (outermode))\n \t{\n \t  /* Construct a CONST_VECTOR from individual subregs.  */\n \t  enum machine_mode submode = GET_MODE_INNER (outermode);"}]}