{"sha": "f2f044864a655b46be09310f389a1e9f11517484", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmMDQ0ODY0YTY1NWI0NmJlMDkzMTBmMzg5YTFlOWYxMTUxNzQ4NA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-12-26T21:01:11Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-12-26T21:01:11Z"}, "message": "tree.c (get_binfo_at_offset): Use BINFO_TYPE instead of TREE_TYPE, compare TYPE_MAIN_VARIANTs of types.\n\n2010-12-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree.c (get_binfo_at_offset): Use BINFO_TYPE instead of TREE_TYPE,\n\tcompare TYPE_MAIN_VARIANTs of types.\n\nFrom-SVN: r168255", "tree": {"sha": "7fe8f4cca6f0dc54482b79fea615e44487b82a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe8f4cca6f0dc54482b79fea615e44487b82a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f044864a655b46be09310f389a1e9f11517484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f044864a655b46be09310f389a1e9f11517484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f044864a655b46be09310f389a1e9f11517484", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f044864a655b46be09310f389a1e9f11517484/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b992d9b062e5eac510573fee4e8b747606da3910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b992d9b062e5eac510573fee4e8b747606da3910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b992d9b062e5eac510573fee4e8b747606da3910"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "137ce3b30d47cc59896135d40f34492453300ef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f044864a655b46be09310f389a1e9f11517484/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f044864a655b46be09310f389a1e9f11517484/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2f044864a655b46be09310f389a1e9f11517484", "patch": "@@ -1,3 +1,8 @@\n+2010-12-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree.c (get_binfo_at_offset): Use BINFO_TYPE instead of TREE_TYPE,\n+\tcompare TYPE_MAIN_VARIANTs of types.\n+\n 2010-12-26  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* config/m68k/t-linux (M68K_MLIB_CPU): Only include 680x0 CPUs."}, {"sha": "cc95d70bee0df9989c65d91825d06560fcf9eec5", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f044864a655b46be09310f389a1e9f11517484/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f044864a655b46be09310f389a1e9f11517484/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f2f044864a655b46be09310f389a1e9f11517484", "patch": "@@ -10939,15 +10939,15 @@ lhd_gcc_personality (void)\n tree\n get_binfo_at_offset (tree binfo, HOST_WIDE_INT offset, tree expected_type)\n {\n-  tree type = TREE_TYPE (binfo);\n+  tree type = BINFO_TYPE (binfo);\n \n   while (true)\n     {\n       HOST_WIDE_INT pos, size;\n       tree fld;\n       int i;\n \n-      if (type == expected_type)\n+      if (TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (expected_type))\n \t  return binfo;\n       if (offset < 0)\n \treturn NULL_TREE;"}]}