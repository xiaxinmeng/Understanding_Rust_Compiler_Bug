{"sha": "aec78e730e868938b44e1c73eb248595a6a97fd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVjNzhlNzMwZTg2ODkzOGI0NGUxYzczZWIyNDg1OTVhNmE5N2ZkOQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-01-29T10:27:50Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-01-29T10:27:50Z"}, "message": "re PR fortran/30554 ([4.1 only] ICE in mio_pointer_ref at module.c:1945)\n\n2007-01-29  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30554\n\t* module.c (read_module): If a symbol is excluded by an ONLY\n\tclause, check to see if there is a symtree already loaded. If\n\tso, attach the symtree to the pointer_info.\n\n2007-01-29  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30554\n\t* gfortran.dg/used_dummy_types_6.f90: New test.\n\nFrom-SVN: r121281", "tree": {"sha": "949e338e3757cb36d165fae79e228cdac199a817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/949e338e3757cb36d165fae79e228cdac199a817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aec78e730e868938b44e1c73eb248595a6a97fd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec78e730e868938b44e1c73eb248595a6a97fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aec78e730e868938b44e1c73eb248595a6a97fd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec78e730e868938b44e1c73eb248595a6a97fd9/comments", "author": null, "committer": null, "parents": [{"sha": "098b68ad539fb491c024ed60f783581970bb20b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/098b68ad539fb491c024ed60f783581970bb20b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/098b68ad539fb491c024ed60f783581970bb20b3"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "1ff3a60428699b576b8e6cac55e59dbffd187f5b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aec78e730e868938b44e1c73eb248595a6a97fd9", "patch": "@@ -1,3 +1,10 @@\n+2007-01-29  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30554\n+\t* module.c (read_module): If a symbol is excluded by an ONLY\n+\tclause, check to see if there is a symtree already loaded. If\n+\tso, attach the symtree to the pointer_info.\n+\n 2007-01-28  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/30389"}, {"sha": "e76bd0e92db462eaa1d329bb145e4cbc95cc5614", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=aec78e730e868938b44e1c73eb248595a6a97fd9", "patch": "@@ -3394,15 +3394,22 @@ read_module (void)\n \t  /* Get the jth local name for this symbol.  */\n \t  p = find_use_name_n (name, &j);\n \n-\t  /* Skip symtree nodes not in an ONLY clause.  */\n+\t  /* Skip symtree nodes not in an ONLY clause, unless there\n+\t     is an existing symtree loaded from another USE\n+\t     statement.  */\n \t  if (p == NULL)\n-\t    continue;\n+\t    {\n+\t      st = gfc_find_symtree (gfc_current_ns->sym_root, name);\n+\t      if (st != NULL)\n+\t\tinfo->u.rsym.symtree = st;\n+\t      continue;\n+\t    }\n \n-\t  /* Check for ambiguous symbols.  */\n \t  st = gfc_find_symtree (gfc_current_ns->sym_root, p);\n \n \t  if (st != NULL)\n \t    {\n+\t      /* Check for ambiguous symbols.  */\n \t      if (st->n.sym != info->u.rsym.sym)\n \t\tst->ambiguous = 1;\n \t      info->u.rsym.symtree = st;"}, {"sha": "66501a914bced9e719b95f42f50d69d95a9be33e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aec78e730e868938b44e1c73eb248595a6a97fd9", "patch": "@@ -1,3 +1,8 @@\n+2007-01-29  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30554\n+\t* gfortran.dg/used_dummy_types_6.f90: New test.\n+\n 2007-01-28  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-prof/val-prof-6.c: New test."}, {"sha": "bcee65ac3198d9968a7cfd5250bfd59177e896d3", "filename": "gcc/testsuite/gfortran.dg/used_dummy_types_6.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_dummy_types_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec78e730e868938b44e1c73eb248595a6a97fd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_dummy_types_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_dummy_types_6.f90?ref=aec78e730e868938b44e1c73eb248595a6a97fd9", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! Tests the fix for PR30554, the USE statements in potential_energy\n+! would cause a segfault because the pointer_info for nfree coming\n+! from constraint would not find the existing symtree coming directly\n+! from atom.\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+MODULE ATOMS\n+INTEGER :: NFREE = 0\n+END MODULE ATOMS\n+\n+MODULE CONSTRAINT\n+USE ATOMS, ONLY: NFREE\n+CONTAINS\n+   SUBROUTINE ENERGY_CONSTRAINT ( HESSIAN )\n+   REAL , DIMENSION(1:(3*NFREE*(3*NFREE+1))/2):: HESSIAN\n+   END SUBROUTINE ENERGY_CONSTRAINT\n+END MODULE CONSTRAINT\n+\n+MODULE POTENTIAL_ENERGY\n+USE ATOMS\n+USE CONSTRAINT,         ONLY : ENERGY_CONSTRAINT\n+END MODULE POTENTIAL_ENERGY\n+! { dg-final { cleanup-modules \"atoms constraint potential_energy\" } }"}]}