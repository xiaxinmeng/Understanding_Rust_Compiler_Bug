{"sha": "992931ba3d02d107b3abf51781b4b4625d2cce7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyOTMxYmEzZDAyZDEwN2IzYWJmNTE3ODFiNGI0NjI1ZDJjY2U3Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-08-21T15:25:17Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-08-21T15:25:17Z"}, "message": "re PR c++/65043 (Expected narrowing conversion during list initialization of bool from double)\n\n\tPR c++/65043\n\t* call.c (standard_conversion): Set check_narrowing.\n\t* typeck2.c (check_narrowing): Use CP_INTEGRAL_TYPE_P rather\n\tthan comparing with INTEGER_TYPE.\n\n\t* g++.dg/concepts/pr67595.C: Add dg-warning.\n\t* g++.dg/cpp0x/Wnarrowing11.C: New test.\n\t* g++.dg/cpp0x/Wnarrowing12.C: New test.\n\t* g++.dg/cpp0x/rv-cast5.C: Add static_cast.\n\nFrom-SVN: r263739", "tree": {"sha": "671d641b6208764e364a009dbd4bbc0ae066d46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/671d641b6208764e364a009dbd4bbc0ae066d46b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/992931ba3d02d107b3abf51781b4b4625d2cce7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992931ba3d02d107b3abf51781b4b4625d2cce7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992931ba3d02d107b3abf51781b4b4625d2cce7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992931ba3d02d107b3abf51781b4b4625d2cce7c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3e993e9b0774326a86836924eff2ddd3511d4a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e993e9b0774326a86836924eff2ddd3511d4a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e993e9b0774326a86836924eff2ddd3511d4a2"}], "stats": {"total": 83, "additions": 80, "deletions": 3}, "files": [{"sha": "44be980985dc1c256fd5d9dbea2cf64193b502b6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -1,5 +1,10 @@\n 2018-08-21  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/65043\n+\t* call.c (standard_conversion): Set check_narrowing.\n+\t* typeck2.c (check_narrowing): Use CP_INTEGRAL_TYPE_P rather\n+\tthan comparing with INTEGER_TYPE.\n+\n \t* cp-tree.h: Fix typo.\n \n 2018-08-20  David Malcolm  <dmalcolm@redhat.com>"}, {"sha": "626830c0d9a43a26f7973b5d107309d37c49a524", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -1388,6 +1388,8 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \t    conv->rank = cr_pbool;\n \t  if (NULLPTR_TYPE_P (from) && (flags & LOOKUP_ONLYCONVERTING))\n \t    conv->bad_p = true;\n+\t  if (flags & LOOKUP_NO_NARROWING)\n+\t    conv->check_narrowing = true;\n \t  return conv;\n \t}\n "}, {"sha": "1e899ab17a1d22bbeaba668567dc04cd765ca293", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -913,7 +913,7 @@ check_narrowing (tree type, tree init, tsubst_flags_t complain, bool const_only)\n   if (const_only && !TREE_CONSTANT (init))\n     return ok;\n \n-  if (TREE_CODE (type) == INTEGER_TYPE\n+  if (CP_INTEGRAL_TYPE_P (type)\n       && TREE_CODE (ftype) == REAL_TYPE)\n     ok = false;\n   else if (INTEGRAL_OR_ENUMERATION_TYPE_P (ftype)"}, {"sha": "7b54bc0a8681b9b03194de04130beb770d51d9d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -1,3 +1,11 @@\n+2018-08-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/65043\n+\t* g++.dg/concepts/pr67595.C: Add dg-warning.\n+\t* g++.dg/cpp0x/Wnarrowing11.C: New test.\n+\t* g++.dg/cpp0x/Wnarrowing12.C: New test.\n+\t* g++.dg/cpp0x/rv-cast5.C: Add static_cast.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/expr_func7.adb, gnat.dg/expr_func7.ads: New testcase."}, {"sha": "76d1fe62132d9b2644c07ad24bdbc59675bdf346", "filename": "gcc/testsuite/g++.dg/concepts/pr67595.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -4,7 +4,7 @@ template <class X> concept bool allocatable = requires{{new X}->X * };\n template <class X> concept bool semiregular = allocatable<X>;\n template <class X> concept bool readable = requires{requires semiregular<X>};\n template <class> int weak_input_iterator = requires{{0}->readable};\n-template <class X> bool input_iterator{weak_input_iterator<X>};\n+template <class X> bool input_iterator{weak_input_iterator<X>}; // { dg-warning \"narrowing conversion\" }\n template <class X> bool forward_iterator{input_iterator<X>};\n template <class X> bool bidirectional_iterator{forward_iterator<X>};\n template <class X>"}, {"sha": "5b7323633c7cad1fe9a645fc5c3826742a294b07", "filename": "gcc/testsuite/g++.dg/cpp0x/Wnarrowing11.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing11.C?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/65043\n+// { dg-do compile { target c++11 } }\n+\n+struct X\n+{\n+  X(bool) { }\n+};\n+\n+struct Y\n+{\n+  Y(char) { }\n+};\n+\n+struct Z\n+{\n+  Z(char16_t) { }\n+};\n+\n+struct W\n+{\n+  W(char32_t) { }\n+};\n+\n+int main() \n+{\n+  X x{1.2}; // { dg-error \"narrowing conversion\" }\n+  Y y{1.2}; // { dg-error \"narrowing conversion\" }\n+  Z z{1.2}; // { dg-error \"narrowing conversion\" }\n+  W w{1.2}; // { dg-error \"narrowing conversion\" }\n+}"}, {"sha": "83b4d3a58c6dff9213fee92c5a01c48c4278c70d", "filename": "gcc/testsuite/g++.dg/cpp0x/Wnarrowing12.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing12.C?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/65043\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wnarrowing\" }\n+\n+struct X\n+{\n+  X(bool) { }\n+};\n+\n+struct Y\n+{\n+  Y(char) { }\n+};\n+\n+struct Z\n+{\n+  Z(char16_t) { }\n+};\n+\n+struct W\n+{\n+  W(char32_t) { }\n+};\n+\n+int main() \n+{\n+  double d = 1.2;\n+  X x{d}; // { dg-warning \"narrowing conversion\" }\n+  Y y{d}; // { dg-warning \"narrowing conversion\" }\n+  Z z{d}; // { dg-warning \"narrowing conversion\" }\n+  W w{d}; // { dg-warning \"narrowing conversion\" }\n+}"}, {"sha": "5233078f7b4a7a34fd8bb8577f8d6ba8b676b15f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cast5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992931ba3d02d107b3abf51781b4b4625d2cce7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast5.C?ref=992931ba3d02d107b3abf51781b4b4625d2cce7c", "patch": "@@ -8,5 +8,5 @@ struct hold {\n \n int main()\n {\n-  hold<bool&&>{42}();\n+  hold<bool&&>{static_cast<bool>(42)}();\n }"}]}