{"sha": "6ed6e4e15247af6110d444cef486152fea6f01b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVkNmU0ZTE1MjQ3YWY2MTEwZDQ0NGNlZjQ4NjE1MmZlYTZmMDFiNQ==", "commit": {"author": {"name": "David Wohlferd", "email": "dw@LimeGreenSocks.com", "date": "2014-07-16T22:01:41Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2014-07-16T22:01:41Z"}, "message": "re PR target/61662 (Incorrect value calculated for _lrotl on LLP64 systems)\n\n\tPR target/61662\n\t* config/i386/ia32intrin.h: Use __LP64__ to determine size of long.\n\nFrom-SVN: r212699", "tree": {"sha": "16f8a0144d4056919e5c795dea759378bfbd495c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16f8a0144d4056919e5c795dea759378bfbd495c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ed6e4e15247af6110d444cef486152fea6f01b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed6e4e15247af6110d444cef486152fea6f01b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ed6e4e15247af6110d444cef486152fea6f01b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed6e4e15247af6110d444cef486152fea6f01b5/comments", "author": null, "committer": null, "parents": [{"sha": "2fca42b068683dcf510e9d4cd51c4043207427a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fca42b068683dcf510e9d4cd51c4043207427a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fca42b068683dcf510e9d4cd51c4043207427a9"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "f3a404fe9e95940fcb5c3858132b6a1906efe4e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ed6e4e15247af6110d444cef486152fea6f01b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ed6e4e15247af6110d444cef486152fea6f01b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ed6e4e15247af6110d444cef486152fea6f01b5", "patch": "@@ -1,3 +1,8 @@\n+2014-07-16  David Wohlferd <dw@LimeGreenSocks.com>\n+\n+\tPR target/61662\n+\t* config/i386/ia32intrin.h: Use __LP64__ to determine size of long.\n+\n 2014-07-16  Dodji Seketeli  <dodji@redhat.com>\n \n \tSupport location tracking for built-in macro tokens"}, {"sha": "614b0fab203631b36bcbeca236f75b3cb309ae8e", "filename": "gcc/config/i386/ia32intrin.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ed6e4e15247af6110d444cef486152fea6f01b5/gcc%2Fconfig%2Fi386%2Fia32intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ed6e4e15247af6110d444cef486152fea6f01b5/gcc%2Fconfig%2Fi386%2Fia32intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fia32intrin.h?ref=6ed6e4e15247af6110d444cef486152fea6f01b5", "patch": "@@ -256,11 +256,7 @@ __writeeflags (unsigned long long X)\n \n #define _bswap64(a)\t\t__bswapq(a)\n #define _popcnt64(a)\t\t__popcntq(a)\n-#define _lrotl(a,b)\t\t__rolq((a), (b))\n-#define _lrotr(a,b)\t\t__rorq((a), (b))\n #else\n-#define _lrotl(a,b)\t\t__rold((a), (b))\n-#define _lrotr(a,b)\t\t__rord((a), (b))\n \n /* Read flags register */\n extern __inline unsigned int\n@@ -280,6 +276,16 @@ __writeeflags (unsigned int X)\n \n #endif\n \n+/* On LP64 systems, longs are 64-bit.  Use the appropriate rotate\n+ * function.  */\n+#ifdef __LP64__\n+#define _lrotl(a,b)\t\t__rolq((a), (b))\n+#define _lrotr(a,b)\t\t__rorq((a), (b))\n+#else\n+#define _lrotl(a,b)\t\t__rold((a), (b))\n+#define _lrotr(a,b)\t\t__rord((a), (b))\n+#endif\n+\n #define _bit_scan_forward(a)\t__bsfd(a)\n #define _bit_scan_reverse(a)\t__bsrd(a)\n #define _bswap(a)\t\t__bswapd(a)"}]}