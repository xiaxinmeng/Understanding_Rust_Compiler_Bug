{"sha": "48a08b9cab4909ed61621a56794e1c8f0bb625a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhhMDhiOWNhYjQ5MDllZDYxNjIxYTU2Nzk0ZTFjOGYwYmI2MjVhNg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2000-11-22T20:46:40Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-11-22T20:46:40Z"}, "message": "Define symbolic names for the link register, last integer register and the fake CC register.\n\nDefine symbolic names for the link register, last integer register and the\nfake CC register.  Update patterns to use these symbolic names.\n\nFrom-SVN: r37671", "tree": {"sha": "c8a9790de52c7a64bf0554fbc4fdd89d5371f1c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8a9790de52c7a64bf0554fbc4fdd89d5371f1c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48a08b9cab4909ed61621a56794e1c8f0bb625a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48a08b9cab4909ed61621a56794e1c8f0bb625a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48a08b9cab4909ed61621a56794e1c8f0bb625a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48a08b9cab4909ed61621a56794e1c8f0bb625a6/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a16f893b63812b02fc92f79a41d04a65a898b16b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16f893b63812b02fc92f79a41d04a65a898b16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16f893b63812b02fc92f79a41d04a65a898b16b"}], "stats": {"total": 295, "additions": 155, "deletions": 140}, "files": [{"sha": "052e3490ba57426425984f9f9fd694d1eb9a2959", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a08b9cab4909ed61621a56794e1c8f0bb625a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a08b9cab4909ed61621a56794e1c8f0bb625a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48a08b9cab4909ed61621a56794e1c8f0bb625a6", "patch": "@@ -1,3 +1,9 @@\n+2000-11-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.md (define_constants): Define symbolic names for\n+\tthe link register, last integer register and the fake CC register.\n+\tUpdate patterns to use these symbolic names.\n+\n 2000-11-22  Neil Booth  <neilb@earthling.net>\n \n \t* cpplex.c (trigraph_ok): Ensure we don't warn twice."}, {"sha": "793f1a47fe8130ebcce505e87e461d77f5cda6a3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 149, "deletions": 140, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a08b9cab4909ed61621a56794e1c8f0bb625a6/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a08b9cab4909ed61621a56794e1c8f0bb625a6/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=48a08b9cab4909ed61621a56794e1c8f0bb625a6", "patch": "@@ -328,6 +328,15 @@\n        (eq_attr \"type\" \"!mult,load,store1,store2,store3,store4\")) 32 32)\n \f\n ;;---------------------------------------------------------------------------\n+;; Make code more maintainable by using names for fixed registers.\n+\n+(define_constants\n+  [(LR_REGNUM       14)\n+   (LAST_ARM_REGNUM 15)\n+   (CC_REGNUM       24)]\n+)\n+\f\n+;;---------------------------------------------------------------------------\n \n ;; Note: For DImode insns, there is normally no reason why operands should\n ;; not be in the same register, what we don't want is for something being\n@@ -339,14 +348,14 @@\n   [(set (match_operand:DI          0 \"s_register_operand\" \"\")\n \t(plus:DI (match_operand:DI 1 \"s_register_operand\" \"\")\n \t\t (match_operand:DI 2 \"s_register_operand\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\n   \"\n-  [(parallel [(set (reg:CC_C 24)\n+  [(parallel [(set (reg:CC_C CC_REGNUM)\n \t\t   (compare:CC_C (plus:SI (match_dup 1) (match_dup 2))\n \t\t\t\t (match_dup 1)))\n \t      (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))])\n-   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t\t       (plus:SI (match_dup 4) (match_dup 5))))]\n   \"\n   {\n@@ -367,14 +376,14 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"\")\n \t(plus:DI (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"\"))\n \t\t (match_operand:DI 1 \"s_register_operand\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\n   \"\n-  [(parallel [(set (reg:CC_C 24)\n+  [(parallel [(set (reg:CC_C CC_REGNUM)\n \t\t   (compare:CC_C (plus:SI (match_dup 1) (match_dup 2))\n \t\t\t\t (match_dup 1)))\n \t      (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))])\n-   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t\t       (plus:SI (ashiftrt:SI (match_dup 2)\n \t\t\t\t\t\t     (const_int 31))\n \t\t\t\t\t(match_dup 4))))]\n@@ -396,14 +405,14 @@\n   [(set (match_operand:DI 0 \"s_register_operand\" \"\")\n \t(plus:DI (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"\"))\n \t\t (match_operand:DI 1 \"s_register_operand\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\n   \"\n-  [(parallel [(set (reg:CC_C 24)\n+  [(parallel [(set (reg:CC_C CC_REGNUM)\n \t\t   (compare:CC_C (plus:SI (match_dup 1) (match_dup 2))\n \t\t\t\t (match_dup 1)))\n \t      (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))])\n-   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+   (set (match_dup 3) (plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t\t       (plus:SI (match_dup 4) (const_int 0))))]\n   \"\n   {\n@@ -422,7 +431,7 @@\n    [(set (match_operand:DI           0 \"s_register_operand\" \"\")\n \t  (plus:DI (match_operand:DI 1 \"s_register_operand\" \"\")\n \t           (match_operand:DI 2 \"s_register_operand\" \"\")))\n-    (clobber (reg:CC 24))])]\n+    (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_EITHER\"\n   \"\n   if (TARGET_THUMB)\n@@ -439,7 +448,7 @@\n   [(set (match_operand:DI          0 \"register_operand\" \"=l\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n \t\t (match_operand:DI 2 \"register_operand\" \"l\")))\n-   (clobber (reg:CC 24))\n+   (clobber (reg:CC CC_REGNUM))\n   ]\n   \"TARGET_THUMB\"\n   \"add\\\\t%Q0, %Q0, %Q2\\;adc\\\\t%R0, %R0, %R2\"\n@@ -450,7 +459,7 @@\n   [(set (match_operand:DI          0 \"s_register_operand\" \"=&r,&r\")\n \t(plus:DI (match_operand:DI 1 \"s_register_operand\" \"%0, 0\")\n \t\t (match_operand:DI 2 \"s_register_operand\" \"r,  0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\n   \"\n   \"#\"\n@@ -463,7 +472,7 @@\n \t(plus:DI (sign_extend:DI\n \t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\n   \"\n   \"#\"\n@@ -476,7 +485,7 @@\n \t(plus:DI (zero_extend:DI\n \t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t\t (match_operand:DI 1 \"s_register_operand\" \"r,0\")))\n-   (clobber (reg:CC 24))\n+   (clobber (reg:CC CC_REGNUM))\n   ]\n   \"TARGET_ARM\n   \"\n@@ -573,7 +582,7 @@\n )\n \n (define_insn \"*addsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (plus:SI (match_operand:SI 1 \"s_register_operand\" \"r, r\")\n \t\t  (match_operand:SI 2 \"arm_add_operand\"    \"rI,L\"))\n@@ -588,7 +597,7 @@\n )\n \n (define_insn \"*addsi3_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (plus:SI (match_operand:SI 0 \"s_register_operand\" \"r, r\")\n \t\t  (match_operand:SI 1 \"arm_add_operand\"    \"rI,L\"))\n@@ -604,7 +613,7 @@\n ;; patterns, except we write them slightly different - the combiner\n ;; tends to generate them this way.\n (define_insn \"*addsi3_compare0_for_combiner\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC\n \t (match_operand:SI 1 \"s_register_operand\" \"r,r\")\n \t (neg:SI (match_operand:SI 2 \"arm_add_operand\" \"rI,L\"))))\n@@ -618,7 +627,7 @@\n )\n \n (define_insn \"*addsi3_compare0_scratch_for_combiner\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC\n \t (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n \t (neg:SI (match_operand:SI 1 \"arm_add_operand\" \"rI,L\"))))]\n@@ -634,7 +643,7 @@\n ;; either GEU or LTU, so we can use the carry flag from the addition\n ;; instead of doing the compare a second time.\n (define_insn \"*addsi3_compare_op1\"\n-  [(set (reg:CC_C 24)\n+  [(set (reg:CC_C CC_REGNUM)\n \t(compare:CC_C\n \t (plus:SI (match_operand:SI 1 \"s_register_operand\" \"r,r\")\n \t\t  (match_operand:SI 2 \"arm_add_operand\" \"rI,L\"))\n@@ -649,7 +658,7 @@\n )\n \n (define_insn \"*addsi3_compare_op2\"\n-  [(set (reg:CC_C 24)\n+  [(set (reg:CC_C CC_REGNUM)\n \t(compare:CC_C\n \t (plus:SI (match_operand:SI 1 \"s_register_operand\" \"r,r\")\n \t\t  (match_operand:SI 2 \"arm_add_operand\" \"rI,L\"))\n@@ -664,7 +673,7 @@\n )\n \n (define_insn \"*compare_addsi2_op0\"\n-  [(set (reg:CC_C 24)\n+  [(set (reg:CC_C CC_REGNUM)\n \t(compare:CC_C\n \t (plus:SI (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n \t\t  (match_operand:SI 1 \"arm_add_operand\" \"rI,L\"))\n@@ -677,7 +686,7 @@\n )\n \n (define_insn \"*compare_addsi2_op1\"\n-  [(set (reg:CC_C 24)\n+  [(set (reg:CC_C CC_REGNUM)\n \t(compare:CC_C\n \t (plus:SI (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n \t\t  (match_operand:SI 1 \"arm_add_operand\" \"rI,L\"))\n@@ -691,7 +700,7 @@\n \n (define_insn \"*addsi3_carryin\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+\t(plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t (plus:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))))]\n   \"TARGET_ARM\"\n@@ -701,7 +710,7 @@\n \n (define_insn \"*addsi3_carryin_shift\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n-\t(plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+\t(plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t (plus:SI\n \t\t   (match_operator:SI 2 \"shift_operator\"\n \t\t      [(match_operand:SI 3 \"s_register_operand\" \"\")\n@@ -716,15 +725,15 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (plus:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))\n-\t\t (ltu:SI (reg:CC_C 24) (const_int 0))))]\n+\t\t (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n   \"TARGET_ARM\"\n   \"adc%?\\\\t%0, %1, %2\"\n   [(set_attr \"conds\" \"use\")]\n )\n \n (define_insn \"*addsi3_carryin_alt2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(plus:SI (plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+\t(plus:SI (plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))\n \t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI\")))]\n   \"TARGET_ARM\"\n@@ -734,7 +743,7 @@\n \n (define_insn \"*addsi3_carryin_alt3\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(plus:SI (plus:SI (ltu:SI (reg:CC_C 24) (const_int 0))\n+\t(plus:SI (plus:SI (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))\n \t\t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))\n \t\t (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_ARM\"\n@@ -896,7 +905,7 @@\n    [(set (match_operand:DI            0 \"s_register_operand\" \"\")\n \t  (minus:DI (match_operand:DI 1 \"s_register_operand\" \"\")\n \t            (match_operand:DI 2 \"s_register_operand\" \"\")))\n-    (clobber (reg:CC 24))])]\n+    (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_EITHER\"\n   \"\n   if (TARGET_THUMB)\n@@ -913,7 +922,7 @@\n   [(set (match_operand:DI           0 \"s_register_operand\" \"=&r,&r,&r\")\n \t(minus:DI (match_operand:DI 1 \"s_register_operand\" \"0,r,0\")\n \t\t  (match_operand:DI 2 \"s_register_operand\" \"r,0,0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"subs\\\\t%Q0, %Q1, %Q2\\;sbc\\\\t%R0, %R1, %R2\"\n   [(set_attr \"conds\" \"clob\")\n@@ -924,7 +933,7 @@\n   [(set (match_operand:DI           0 \"register_operand\" \"=l\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\"  \"0\")\n \t\t  (match_operand:DI 2 \"register_operand\"  \"l\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_THUMB\"\n   \"sub\\\\t%Q0, %Q0, %Q2\\;sbc\\\\t%R0, %R0, %R2\"\n   [(set_attr \"length\" \"4\")]\n@@ -935,7 +944,7 @@\n \t(minus:DI (match_operand:DI 1 \"s_register_operand\"  \"?r,0\")\n \t\t  (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, #0\"\n   [(set_attr \"conds\" \"clob\")\n@@ -947,7 +956,7 @@\n \t(minus:DI (match_operand:DI  1 \"s_register_operand\"  \"r,0\")\n \t\t  (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, %2, asr #31\"\n   [(set_attr \"conds\" \"clob\")\n@@ -959,7 +968,7 @@\n \t(minus:DI (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))\n \t\t  (match_operand:DI  1 \"s_register_operand\" \"?r,0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, #0\"\n   [(set_attr \"conds\" \"clob\")\n@@ -971,7 +980,7 @@\n \t(minus:DI (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"   \"r,r\"))\n \t\t  (match_operand:DI  1 \"s_register_operand\"  \"?r,0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n   [(set_attr \"conds\" \"clob\")\n@@ -984,7 +993,7 @@\n \t\t   (match_operand:SI 1 \"s_register_operand\"  \"r\"))\n \t\t  (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"subs\\\\t%Q0, %1, %2\\;rsc\\\\t%R0, %1, %1\"\n   [(set_attr \"conds\" \"clob\")\n@@ -1048,7 +1057,7 @@\n )\n \n (define_insn \"*subsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (minus:SI (match_operand:SI 1 \"arm_rhs_operand\" \"r,I\")\n \t\t   (match_operand:SI 2 \"arm_rhs_operand\" \"rI,r\"))\n@@ -1188,7 +1197,7 @@\n )\n \n (define_insn \"*mulsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (mult:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%?r,0\"))\n@@ -1202,7 +1211,7 @@\n )\n \n (define_insn \"*mulsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (mult:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 1 \"s_register_operand\" \"%?r,0\"))\n@@ -1229,7 +1238,7 @@\n )\n \n (define_insn \"*mulsi3addsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (plus:SI (mult:SI\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r,r,r\")\n@@ -1246,7 +1255,7 @@\n )\n \n (define_insn \"*mulsi3addsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (plus:SI (mult:SI\n \t\t   (match_operand:SI 2 \"s_register_operand\" \"r,r,r,r\")\n@@ -1848,7 +1857,7 @@\n )\n \n (define_insn \"*andsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (and:SI (match_operand:SI 1 \"s_register_operand\" \"r,r\")\n \t\t (match_operand:SI 2 \"arm_not_operand\" \"rI,K\"))\n@@ -1863,7 +1872,7 @@\n )\n \n (define_insn \"*andsi3_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (and:SI (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n \t\t (match_operand:SI 1 \"arm_not_operand\" \"rI,K\"))\n@@ -1877,7 +1886,7 @@\n )\n \n (define_insn \"*zeroextractsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (zero_extract:SI\n \t\t\t  (match_operand:SI 0 \"s_register_operand\" \"r\")\n \t\t \t  (match_operand 1 \"const_int_operand\" \"n\")\n@@ -2129,7 +2138,7 @@\n )\n \n (define_insn \"*andsi_notsi_si_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (and:SI (not:SI (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t\t (match_operand:SI 1 \"s_register_operand\" \"r\"))\n@@ -2142,7 +2151,7 @@\n )\n \n (define_insn \"*andsi_notsi_si_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (and:SI (not:SI (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t\t (match_operand:SI 1 \"s_register_operand\" \"r\"))\n@@ -2244,7 +2253,7 @@\n )\n   \n (define_insn \"*iorsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r\")\n \t\t\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))\n \t\t\t (const_int 0)))\n@@ -2256,7 +2265,7 @@\n )\n \n (define_insn \"*iorsi3_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (ior:SI (match_operand:SI 1 \"s_register_operand\" \"%r\")\n \t\t\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))\n \t\t\t (const_int 0)))\n@@ -2330,7 +2339,7 @@\n )\n \n (define_insn \"*xorsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (xor:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI\"))\n \t\t\t (const_int 0)))\n@@ -2342,7 +2351,7 @@\n )\n \n (define_insn \"*xorsi3_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (xor:SI (match_operand:SI 0 \"s_register_operand\" \"r\")\n \t\t\t\t (match_operand:SI 1 \"arm_rhs_operand\" \"rI\"))\n \t\t\t (const_int 0)))]\n@@ -2387,7 +2396,7 @@\n   [(set (match_operand:SI          0 \"s_register_operand\" \"=r,r,r\")\n \t(smax:SI (match_operand:SI 1 \"s_register_operand\"  \"0,r,?r\")\n \t\t (match_operand:SI 2 \"arm_rhs_operand\"    \"rI,0,rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movlt\\\\t%0, %2\n@@ -2401,7 +2410,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n \t(smin:SI (match_operand:SI 1 \"s_register_operand\" \"0,r,?r\")\n \t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movge\\\\t%0, %2\n@@ -2415,7 +2424,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n \t(umax:SI (match_operand:SI 1 \"s_register_operand\" \"0,r,?r\")\n \t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movcc\\\\t%0, %2\n@@ -2429,7 +2438,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n \t(umin:SI (match_operand:SI 1 \"s_register_operand\" \"0,r,?r\")\n \t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movcs\\\\t%0, %2\n@@ -2444,7 +2453,7 @@\n \t(match_operator:SI 3 \"minmax_operator\"\n \t [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t  (match_operand:SI 2 \"s_register_operand\" \"r\")]))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   operands[3] = gen_rtx (minmax_code (operands[3]), SImode, operands[1],\n@@ -2468,7 +2477,7 @@\n \t   [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t    (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])\n \t  (match_operand:SI 1 \"s_register_operand\" \"0,?r\")]))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\n    && (GET_CODE (operands[1]) != REG\n        || (REGNO(operands[1]) != FRAME_POINTER_REGNUM\n@@ -2620,7 +2629,7 @@\n )\n \n (define_insn \"*shiftsi3_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (match_operator:SI 3 \"shift_operator\"\n \t\t\t  [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"arm_rhs_operand\" \"rM\")])\n@@ -2634,7 +2643,7 @@\n )\n \n (define_insn \"*shiftsi3_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (match_operator:SI 3 \"shift_operator\"\n \t\t\t  [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"arm_rhs_operand\" \"rM\")])\n@@ -2658,7 +2667,7 @@\n )\n \n (define_insn \"*notsi_shiftsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (not:SI (match_operator:SI 3 \"shift_operator\"\n \t\t\t  [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"arm_rhs_operand\" \"rM\")]))\n@@ -2672,7 +2681,7 @@\n )\n \n (define_insn \"*not_shiftsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (not:SI (match_operator:SI 3 \"shift_operator\"\n \t\t\t  [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"arm_rhs_operand\" \"rM\")]))\n@@ -2720,7 +2729,7 @@\n  [(parallel\n    [(set (match_operand:DI          0 \"s_register_operand\" \"\")\n \t  (neg:DI (match_operand:DI 1 \"s_register_operand\" \"\")))\n-    (clobber (reg:CC 24))])]\n+    (clobber (reg:CC CC_REGNUM))])]\n   \"TARGET_EITHER\"\n   \"\n   if (TARGET_THUMB)\n@@ -2736,7 +2745,7 @@\n (define_insn \"*arm_negdi2\"\n   [(set (match_operand:DI         0 \"s_register_operand\" \"=&r,r\")\n \t(neg:DI (match_operand:DI 1 \"s_register_operand\"  \"?r,0\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"rsbs\\\\t%Q0, %Q1, #0\\;rsc\\\\t%R0, %R1, #0\"\n   [(set_attr \"conds\" \"clob\")\n@@ -2746,7 +2755,7 @@\n (define_insn \"*thumb_negdi2\"\n   [(set (match_operand:DI         0 \"register_operand\" \"=&l\")\n \t(neg:DI (match_operand:DI 1 \"register_operand\"   \"l\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_THUMB\"\n   \"mov\\\\t%R0, #0\\;neg\\\\t%Q0, %Q1\\;sbc\\\\t%R0, %R1\"\n   [(set_attr \"length\" \"6\")]\n@@ -2820,7 +2829,7 @@\n (define_insn \"abssi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,&r\")\n \t(abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%0, #0\\;rsblt\\\\t%0, %0, #0\n@@ -2833,7 +2842,7 @@\n (define_insn \"*neg_abssi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,&r\")\n \t(neg:SI (abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%0, #0\\;rsbgt\\\\t%0, %0, #0\n@@ -3010,7 +3019,7 @@\n )\n \n (define_insn \"*notsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (not:SI (match_operand:SI 1 \"s_register_operand\" \"r\"))\n \t\t\t (const_int 0)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n@@ -3021,7 +3030,7 @@\n )\n \n (define_insn \"*notsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (not:SI (match_operand:SI 1 \"s_register_operand\" \"r\"))\n \t\t\t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=r\"))]\n@@ -3388,7 +3397,7 @@\n )\n \n (define_insn \"*compareqi_eq0\"\n-  [(set (reg:CC_Z 24)\n+  [(set (reg:CC_Z CC_REGNUM)\n \t(compare:CC_Z (match_operand:QI 0 \"s_register_operand\" \"r\")\n \t\t\t (const_int 0)))]\n   \"TARGET_ARM\"\n@@ -4237,7 +4246,7 @@\n ;; result is being tested against zero.\n \n (define_insn \"*movsi_compare0\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC (match_operand:SI 1 \"s_register_operand\" \"0,r\")\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n@@ -5202,14 +5211,14 @@\n                      (use (match_operand:SI 2 \"\" \"\"))])]\n   \"TARGET_ARM\"\n   \"\n-  /* Support only fixed point registers */\n+  /* Support only fixed point registers.  */\n   if (GET_CODE (operands[2]) != CONST_INT\n       || INTVAL (operands[2]) > 14\n       || INTVAL (operands[2]) < 2\n       || GET_CODE (operands[1]) != MEM\n       || GET_CODE (operands[0]) != REG\n-      || REGNO (operands[0]) > 14\n-      || REGNO (operands[0]) + INTVAL (operands[2]) > 15)\n+      || REGNO (operands[0]) > (LAST_ARM_REGNUM - 1)\n+      || REGNO (operands[0]) + INTVAL (operands[2]) > LAST_ARM_REGNUM)\n     FAIL;\n \n   operands[3]\n@@ -5284,8 +5293,8 @@\n       || INTVAL (operands[2]) < 2\n       || GET_CODE (operands[1]) != REG\n       || GET_CODE (operands[0]) != MEM\n-      || REGNO (operands[1]) > 14\n-      || REGNO (operands[1]) + INTVAL (operands[2]) > 15)\n+      || REGNO (operands[1]) > (LAST_ARM_REGNUM - 1)\n+      || REGNO (operands[1]) + INTVAL (operands[2]) > LAST_ARM_REGNUM)\n     FAIL;\n \n   operands[3]\n@@ -5552,7 +5561,7 @@\n )\n \n (define_insn \"*arm_cmpsi_insn\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n \t\t    (match_operand:SI 1 \"arm_add_operand\"    \"rI,L\")))]\n   \"TARGET_ARM\"\n@@ -5563,7 +5572,7 @@\n )\n \n (define_insn \"*cmpsi_shiftsi\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC (match_operand:SI   0 \"s_register_operand\" \"r\")\n \t\t    (match_operator:SI  3 \"shift_operator\"\n \t\t     [(match_operand:SI 1 \"s_register_operand\" \"r\")\n@@ -5575,7 +5584,7 @@\n )\n \n (define_insn \"*cmpsi_shiftsi_swp\"\n-  [(set (reg:CC_SWP 24)\n+  [(set (reg:CC_SWP CC_REGNUM)\n \t(compare:CC_SWP (match_operator:SI 3 \"shift_operator\"\n \t\t\t [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t\t  (match_operand:SI 2 \"reg_or_int_operand\" \"rM\")])\n@@ -5587,7 +5596,7 @@\n )\n \n (define_insn \"*cmpsi_neg_shiftsi\"\n-  [(set (reg:CC 24)\n+  [(set (reg:CC CC_REGNUM)\n \t(compare:CC (match_operand:SI 0 \"s_register_operand\" \"r\")\n \t\t    (neg:SI (match_operator:SI 3 \"shift_operator\"\n \t\t\t     [(match_operand:SI 1 \"s_register_operand\" \"r\")\n@@ -5599,7 +5608,7 @@\n )\n \n (define_insn \"*cmpsf_insn\"\n-  [(set (reg:CCFP 24)\n+  [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:SF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n@@ -5611,7 +5620,7 @@\n )\n \n (define_insn \"*cmpdf_insn\"\n-  [(set (reg:CCFP 24)\n+  [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n@@ -5623,7 +5632,7 @@\n )\n \n (define_insn \"*cmpesfdf_df\"\n-  [(set (reg:CCFP 24)\n+  [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (float_extend:DF\n \t\t       (match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n \t\t      (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n@@ -5636,7 +5645,7 @@\n )\n \n (define_insn \"*cmpdf_esfdf\"\n-  [(set (reg:CCFP 24)\n+  [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f\")\n \t\t      (float_extend:DF\n \t\t       (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n@@ -5647,7 +5656,7 @@\n )\n \n (define_insn \"*cmpxf_insn\"\n-  [(set (reg:CCFP 24)\n+  [(set (reg:CCFP CC_REGNUM)\n \t(compare:CCFP (match_operand:XF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:XF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n@@ -5659,7 +5668,7 @@\n )\n \n (define_insn \"*cmpsf_trap\"\n-  [(set (reg:CCFPE 24)\n+  [(set (reg:CCFPE CC_REGNUM)\n \t(compare:CCFPE (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:SF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n@@ -5671,7 +5680,7 @@\n )\n \n (define_insn \"*cmpdf_trap\"\n-  [(set (reg:CCFPE 24)\n+  [(set (reg:CCFPE CC_REGNUM)\n \t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n@@ -5683,7 +5692,7 @@\n )\n \n (define_insn \"*cmp_esfdf_df_trap\"\n-  [(set (reg:CCFPE 24)\n+  [(set (reg:CCFPE CC_REGNUM)\n \t(compare:CCFPE (float_extend:DF\n \t\t\t(match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n \t\t       (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n@@ -5696,7 +5705,7 @@\n )\n \n (define_insn \"*cmp_df_esfdf_trap\"\n-  [(set (reg:CCFPE 24)\n+  [(set (reg:CCFPE CC_REGNUM)\n \t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f\")\n \t\t       (float_extend:DF\n \t\t\t(match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n@@ -5707,7 +5716,7 @@\n )\n \n (define_insn \"*cmpxf_trap\"\n-  [(set (reg:CCFPE 24)\n+  [(set (reg:CCFPE CC_REGNUM)\n \t(compare:CCFPE (match_operand:XF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:XF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"TARGET_ARM && ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n@@ -6364,7 +6373,7 @@\n   [(parallel [(call (match_operand 0 \"memory_operand\" \"\")\n \t            (match_operand 1 \"general_operand\" \"\"))\n \t      (use (match_operand 2 \"\" \"\"))\n-\t      (clobber (reg:SI 14))])]\n+\t      (clobber (reg:SI LR_REGNUM))])]\n   \"TARGET_EITHER\"\n   \"\n   {\n@@ -6396,7 +6405,7 @@\n   [(call (mem:SI (match_operand:SI 0 \"s_register_operand\" \"r\"))\n          (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   return output_call (operands);\n@@ -6410,7 +6419,7 @@\n   [(call (mem:SI (match_operand:SI 0 \"memory_operand\" \"m\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   return output_call_mem (operands);\n@@ -6423,7 +6432,7 @@\n   [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"l*r\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB\"\n   \"*\n   {\n@@ -6440,7 +6449,7 @@\n \t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"l*r\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB\"\n   \"*\n   {\n@@ -6457,7 +6466,7 @@\n \t           (call (match_operand 1 \"memory_operand\" \"\")\n \t\t         (match_operand 2 \"general_operand\" \"\")))\n \t      (use (match_operand 3 \"\" \"\"))\n-\t      (clobber (reg:SI 14))])]\n+\t      (clobber (reg:SI LR_REGNUM))])]\n   \"TARGET_EITHER\"\n   \"\n   {\n@@ -6479,7 +6488,7 @@\n         (call (mem:SI (match_operand:SI 1 \"s_register_operand\" \"r,r\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   return output_call (&operands[1]);\n@@ -6493,7 +6502,7 @@\n \t(call (mem:SI (match_operand:SI 1 \"memory_operand\" \"m,m\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM && (!CONSTANT_ADDRESS_P (XEXP (operands[1], 0)))\"\n   \"*\n   return output_call_mem (&operands[1]);\n@@ -6509,7 +6518,7 @@\n   [(call (mem:SI (match_operand:SI 0 \"\" \"X\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM\n    && (GET_CODE (operands[0]) == SYMBOL_REF)\n    && !arm_is_longcall_p (operands[0], INTVAL (operands[2]), 1)\"\n@@ -6525,7 +6534,7 @@\n \t(call (mem:SI (match_operand:SI 1 \"\" \"X,X\"))\n \t(match_operand:SI 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_ARM\n    && (GET_CODE (operands[1]) == SYMBOL_REF)\n    && !arm_is_longcall_p (operands[1], INTVAL (operands[3]), 1)\"\n@@ -6540,7 +6549,7 @@\n   [(call (mem:SI (match_operand:SI 0 \"\" \"X\"))\n \t (match_operand:SI 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB\n    && operands[2] == const0_rtx && (GET_CODE (operands[0]) == SYMBOL_REF)\"\n   \"bl\\\\t%a0\"\n@@ -6553,7 +6562,7 @@\n \t(call (mem:SI (match_operand 1 \"\" \"X\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI 14))]\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB\n    && operands[3] == const0_rtx && (GET_CODE (operands[1]) == SYMBOL_REF)\"\n   \"bl\\\\t%a1\"\n@@ -6747,7 +6756,7 @@\n \t\t(mem:SI (plus:SI (mult:SI (match_dup 0) (const_int 4))\n \t\t\t\t (label_ref (match_operand 2 \"\" \"\"))))\n \t\t(label_ref (match_operand 3 \"\" \"\"))))\n-\t      (clobber (reg:CC 24))\n+\t      (clobber (reg:CC CC_REGNUM))\n \t      (use (label_ref (match_dup 2)))])]\n   \"TARGET_ARM\"\n   \"*\n@@ -6828,7 +6837,7 @@\n )\n \n (define_insn \"*arith_shiftsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n         (compare:CC_NOOV (match_operator:SI 1 \"shiftable_operator\"\n \t\t          [(match_operator:SI 3 \"shift_operator\"\n \t\t            [(match_operand:SI 4 \"s_register_operand\" \"r\")\n@@ -6845,7 +6854,7 @@\n )\n \n (define_insn \"*arith_shiftsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n         (compare:CC_NOOV (match_operator:SI 1 \"shiftable_operator\"\n \t\t          [(match_operator:SI 3 \"shift_operator\"\n \t\t            [(match_operand:SI 4 \"s_register_operand\" \"r\")\n@@ -6872,7 +6881,7 @@\n )\n \n (define_insn \"*sub_shiftsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (minus:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t   (match_operator:SI 2 \"shift_operator\"\n@@ -6889,7 +6898,7 @@\n )\n \n (define_insn \"*sub_shiftsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV\n \t (minus:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t   (match_operator:SI 2 \"shift_operator\"\n@@ -6931,7 +6940,7 @@\n )\n \n (define_insn \"*reload_mulsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (plus:SI\n \t\t\t  (plus:SI \n \t\t\t   (match_operator:SI 5 \"shift_operator\"\n@@ -6954,7 +6963,7 @@\n )\n \n (define_insn \"*reload_mulsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (plus:SI\n \t\t\t  (plus:SI \n \t\t\t   (match_operator:SI 5 \"shift_operator\"\n@@ -6994,7 +7003,7 @@\n )\n \n (define_insn \"*reload_muladdsi_compare0\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (plus:SI (plus:SI (mult:SI\n \t\t\t\t\t    (match_operand:SI 3 \"\" \"r\")\n \t\t\t\t\t    (match_operand:SI 4 \"\" \"r\"))\n@@ -7016,7 +7025,7 @@\n )\n \n (define_insn \"*reload_muladdsi_compare0_scratch\"\n-  [(set (reg:CC_NOOV 24)\n+  [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (plus:SI (plus:SI (mult:SI\n \t\t\t\t\t    (match_operand:SI 3 \"\" \"r\")\n \t\t\t\t\t    (match_operand:SI 4 \"\" \"r\"))\n@@ -7065,7 +7074,7 @@\n \t(match_operator:SI 1 \"arm_comparison_operator\"\n \t [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t  (match_operand:SI 3 \"arm_add_operand\" \"rI,L\")]))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n     if (GET_CODE (operands[1]) == LT && operands[3] == const0_rtx)\n@@ -7125,7 +7134,7 @@\n            [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t    (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])\n           (match_operand:SI 1 \"s_register_operand\" \"0,?r\")]))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n     if (GET_CODE (operands[4]) == LT && operands[3] == const0_rtx)\n@@ -7150,7 +7159,7 @@\n \t\t  (match_operator:SI 4 \"arm_comparison_operator\"\n                    [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t    (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n     output_asm_insn (\\\"cmp\\\\t%2, %3\\\", operands);\n@@ -7238,7 +7247,7 @@\n \t(neg:SI (match_operator 3 \"arm_comparison_operator\"\n \t\t [(match_operand:SI 1 \"s_register_operand\" \"r\")\n \t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"rI\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   if (GET_CODE (operands[3]) == LT && operands[3] == const0_rtx)\n@@ -7266,7 +7275,7 @@\n \t   (match_operand:SI 4 \"arm_add_operand\" \"rIL,rIL,rIL\")])\n \t (match_operand:SI 1 \"arm_rhs_operand\" \"0,rI,?rI\")\n \t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   if (GET_CODE (operands[5]) == LT\n@@ -7330,7 +7339,7 @@\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 3 \"arm_add_operand\" \"rIL,rIL\"))\n \t\t\t (match_operand:SI 1 \"arm_rhs_operand\" \"0,?rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7366,7 +7375,7 @@\n \t\t\t (plus:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t\t  (match_operand:SI 3 \"arm_add_operand\" \"rIL,rIL\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7404,7 +7413,7 @@\n \t\t\t (match_operator:SI 7 \"shiftable_operator\"\n \t\t\t  [(match_operand:SI 3 \"s_register_operand\" \"r\")\n \t\t\t   (match_operand:SI 4 \"arm_rhs_operand\" \"rI\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7436,7 +7445,7 @@\n \t\t\t  [(match_operand:SI 4 \"s_register_operand\" \"r,r\")\n \t\t\t   (match_operand:SI 5 \"arm_rhs_operand\" \"rI,rI\")])\n \t\t\t (match_operand:SI 1 \"arm_rhs_operand\" \"0,?rI\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   /* If we have an operation where (op x 0) is the identity operation and\n@@ -7494,7 +7503,7 @@\n \t\t\t (match_operator:SI 7 \"shiftable_operator\"\n \t\t\t  [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t\t\t   (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n   /* If we have an operation where (op x 0) is the identity operation and\n@@ -7554,7 +7563,7 @@\n \t (match_operand:SI 1 \"arm_not_operand\" \"0,?rIK\")\n \t (not:SI\n \t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7586,7 +7595,7 @@\n \t (not:SI\n \t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t (match_operand:SI 1 \"arm_not_operand\" \"0,?rIK\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7619,7 +7628,7 @@\n \t  [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t   (match_operand:SI 3 \"arm_rhs_operand\" \"rM,rM\")])\n \t (match_operand:SI 1 \"arm_not_operand\" \"0,?rIK\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7654,7 +7663,7 @@\n \t (match_operator:SI 7 \"shift_operator\"\n \t  [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n \t   (match_operand:SI 3 \"arm_rhs_operand\" \"rM,rM\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7691,7 +7700,7 @@\n \t (match_operator:SI 9 \"shift_operator\"\n \t  [(match_operand:SI 3 \"s_register_operand\" \"r\")\n \t   (match_operand:SI 4 \"arm_rhs_operand\" \"rM\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7725,7 +7734,7 @@\n \t (match_operator:SI 7 \"shiftable_operator\"\n \t  [(match_operand:SI 2 \"s_register_operand\" \"r\")\n \t   (match_operand:SI 3 \"arm_rhs_operand\" \"rI\")])))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7757,7 +7766,7 @@\n \t  [(match_operand:SI 2 \"s_register_operand\" \"r\")\n \t   (match_operand:SI 3 \"arm_rhs_operand\" \"rI\")])\n \t (not:SI (match_operand:SI 1 \"s_register_operand\" \"r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7787,7 +7796,7 @@\n \t   (match_operand:SI 4 \"arm_add_operand\" \"rIL,rIL\")])\n \t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"r,r\"))\n \t (match_operand:SI 1 \"arm_not_operand\" \"0,?rIK\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -7818,7 +7827,7 @@\n \t   (match_operand:SI 4 \"arm_add_operand\" \"rIL,rIL\")])\n \t (match_operand:SI 1 \"arm_not_operand\" \"0,?rIK\")\n \t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"#\"\n   [(set_attr \"conds\" \"clob\")\n@@ -8411,7 +8420,7 @@\n (define_peephole\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(match_operand:SI 1 \"s_register_operand\" \"r\"))\n-   (set (reg:CC 24)\n+   (set (reg:CC CC_REGNUM)\n \t(compare:CC (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\n   \"\n@@ -8520,7 +8529,7 @@\n ;; extension is not needed.\n \n (define_split\n-  [(set (reg:CC_Z 24)\n+  [(set (reg:CC_Z CC_REGNUM)\n \t(compare:CC_Z\n \t (ashift:SI (subreg:SI (match_operand:QI 0 \"memory_operand\" \"\") 0)\n \t\t    (const_int 24))\n@@ -8530,7 +8539,7 @@\n    && (((unsigned HOST_WIDE_INT) INTVAL (operands[1]))\n        == (((unsigned HOST_WIDE_INT) INTVAL (operands[1])) >> 24) << 24)\"\n   [(set (match_dup 2) (zero_extend:SI (match_dup 0)))\n-   (set (reg:CC 24) (compare:CC (match_dup 2) (match_dup 1)))]\n+   (set (reg:CC CC_REGNUM) (compare:CC (match_dup 2) (match_dup 1)))]\n   \"\n   operands[1] = GEN_INT (((unsigned long) INTVAL (operands[1])) >> 24);\n   \"\n@@ -8625,7 +8634,7 @@\n \t\t\t  [(match_operand 2 \"\" \"\") (match_operand 3 \"\" \"\")])\n \t\t\t (match_dup 0)\n \t\t\t (match_operand 4 \"\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\"\n   [(set (match_dup 5) (match_dup 6))\n    (cond_exec (match_dup 7)\n@@ -8636,7 +8645,7 @@\n \t\t\t\t\t     operands[2], operands[3]);\n     enum rtx_code rc = GET_CODE (operands[1]);\n \n-    operands[5] = gen_rtx_REG (mode, 24);\n+    operands[5] = gen_rtx_REG (mode, CC_REGNUM);\n     operands[6] = gen_rtx_COMPARE (mode, operands[2], operands[3]);\n     if (mode == CCFPmode || mode == CCFPEmode)\n       rc = reverse_condition_maybe_unordered (rc);\n@@ -8653,7 +8662,7 @@\n \t\t\t  [(match_operand 2 \"\" \"\") (match_operand 3 \"\" \"\")])\n \t\t\t (match_operand 4 \"\" \"\")\n \t\t\t (match_dup 0)))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\"\n   [(set (match_dup 5) (match_dup 6))\n    (cond_exec (match_op_dup 1 [(match_dup 5) (const_int 0)])\n@@ -8663,7 +8672,7 @@\n     enum machine_mode mode = SELECT_CC_MODE (GET_CODE (operands[1]),\n \t\t\t\t\t     operands[2], operands[3]);\n \n-    operands[5] = gen_rtx_REG (mode, 24);\n+    operands[5] = gen_rtx_REG (mode, CC_REGNUM);\n     operands[6] = gen_rtx_COMPARE (mode, operands[2], operands[3]);\n   }\"\n )\n@@ -8674,7 +8683,7 @@\n \t\t\t  [(match_operand 2 \"\" \"\") (match_operand 3 \"\" \"\")])\n \t\t\t (match_operand 4 \"\" \"\")\n \t\t\t (match_operand 5 \"\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\"\n   [(set (match_dup 6) (match_dup 7))\n    (cond_exec (match_op_dup 1 [(match_dup 6) (const_int 0)])\n@@ -8687,7 +8696,7 @@\n \t\t\t\t\t     operands[2], operands[3]);\n     enum rtx_code rc = GET_CODE (operands[1]);\n \n-    operands[6] = gen_rtx_REG (mode, 24);\n+    operands[6] = gen_rtx_REG (mode, CC_REGNUM);\n     operands[7] = gen_rtx_COMPARE (mode, operands[2], operands[3]);\n     if (mode == CCFPmode || mode == CCFPEmode)\n       rc = reverse_condition_maybe_unordered (rc);\n@@ -8704,7 +8713,7 @@\n \t\t\t  [(match_operand 2 \"\" \"\") (match_operand 3 \"\" \"\")])\n \t\t\t (match_operand 4 \"\" \"\")\n \t\t\t (match_operand 5 \"\" \"\")))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed && 0\"\n   [(set (match_dup 6) (match_dup 7))\n    (set (match_dup 0) \n@@ -8716,7 +8725,7 @@\n     enum machine_mode mode = SELECT_CC_MODE (GET_CODE (operands[1]),\n \t\t\t\t\t     operands[2], operands[3]);\n \n-    operands[6] = gen_rtx_REG (mode, 24);\n+    operands[6] = gen_rtx_REG (mode, CC_REGNUM);\n     operands[7] = gen_rtx_COMPARE (mode, operands[2], operands[3]);\n   }\"\n )\n@@ -8729,7 +8738,7 @@\n \t\t\t (match_operand:SI 4 \"arm_rhs_operand\" \"\")\n \t\t\t (not:SI\n \t\t\t  (match_operand:SI 5 \"s_register_operand\" \"\"))))\n-   (clobber (reg:CC 24))]\n+   (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM && reload_completed\"\n   [(set (match_dup 6) (match_dup 7))\n    (set (match_dup 0) \n@@ -8741,7 +8750,7 @@\n     enum machine_mode mode = SELECT_CC_MODE (GET_CODE (operands[1]),\n \t\t\t\t\t     operands[2], operands[3]);\n \n-    operands[6] = gen_rtx_REG (mode, 24);\n+    operands[6] = gen_rtx_REG (mode, CC_REGNUM);\n     operands[7] = gen_rtx (COMPARE, mode, operands[2], operands[3]);\n   }\"\n )"}]}