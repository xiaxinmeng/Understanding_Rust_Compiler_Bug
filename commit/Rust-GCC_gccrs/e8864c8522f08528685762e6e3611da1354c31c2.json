{"sha": "e8864c8522f08528685762e6e3611da1354c31c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg4NjRjODUyMmYwODUyODY4NTc2MmU2ZTM2MTFkYTEzNTRjMzFjMg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-11-13T13:08:12Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-11-13T13:08:12Z"}, "message": "Use POINTER_SIZE to check for pointer size\n\n\tPR tree-optimization/63828\n\t* ipa-polymorphic-call.c (possible_placement_new): Check\n\tPOINTER_SIZE, instead of BITS_PER_WORD, for pointer size.\n\nFrom-SVN: r217483", "tree": {"sha": "df72c87df35853f6cd231aa376d593f49effc268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df72c87df35853f6cd231aa376d593f49effc268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8864c8522f08528685762e6e3611da1354c31c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8864c8522f08528685762e6e3611da1354c31c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8864c8522f08528685762e6e3611da1354c31c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8864c8522f08528685762e6e3611da1354c31c2/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "581d232670be67eb51d3839c43f1113507a89185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/581d232670be67eb51d3839c43f1113507a89185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/581d232670be67eb51d3839c43f1113507a89185"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d909f67067cff512f28fb972a955715d4cf3e76e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8864c8522f08528685762e6e3611da1354c31c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8864c8522f08528685762e6e3611da1354c31c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8864c8522f08528685762e6e3611da1354c31c2", "patch": "@@ -1,3 +1,9 @@\n+2014-11-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR tree-optimization/63828\n+\t* ipa-polymorphic-call.c (possible_placement_new): Check\n+\tPOINTER_SIZE, instead of BITS_PER_WORD, for pointer size.\n+\n 2014-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/tm.texi.in (SELECT_CC_MODE): Update example."}, {"sha": "30b5db242afefe191d396a6194ca71ef1664fa85", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8864c8522f08528685762e6e3611da1354c31c2/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8864c8522f08528685762e6e3611da1354c31c2/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=e8864c8522f08528685762e6e3611da1354c31c2", "patch": "@@ -106,7 +106,7 @@ possible_placement_new (tree type, tree expected_type,\n {\n   return ((TREE_CODE (type) != RECORD_TYPE\n \t   || !TYPE_BINFO (type)\n-\t   || cur_offset >= BITS_PER_WORD\n+\t   || cur_offset >= POINTER_SIZE\n \t   || !polymorphic_type_binfo_p (TYPE_BINFO (type)))\n \t  && (!TYPE_SIZE (type)\n \t      || !tree_fits_shwi_p (TYPE_SIZE (type))"}]}