{"sha": "015712847ae83501000efdfce6b2c0878215bc8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE1NzEyODQ3YWU4MzUwMTAwMGVmZGZjZTZiMmMwODc4MjE1YmM4Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T18:43:06Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T18:43:06Z"}, "message": "(dbxout_block): obey DBX_BLOCKS_FUNCTION_RELATIVE\n\n(dbxout_block): obey DBX_BLOCKS_FUNCTION_RELATIVE\n(dbxout_init):  Use ASM_IDENTIFY_GCC_AFTER_SOURCE if defined.\n\nFrom-SVN: r1644", "tree": {"sha": "a0238a897a0363e5a65f946aa99661fcfcffd3a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0238a897a0363e5a65f946aa99661fcfcffd3a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/015712847ae83501000efdfce6b2c0878215bc8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015712847ae83501000efdfce6b2c0878215bc8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015712847ae83501000efdfce6b2c0878215bc8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015712847ae83501000efdfce6b2c0878215bc8c/comments", "author": null, "committer": null, "parents": [{"sha": "9d29d6930efd14bfd9fef51e75f0ca5b9b4ea05e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d29d6930efd14bfd9fef51e75f0ca5b9b4ea05e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d29d6930efd14bfd9fef51e75f0ca5b9b4ea05e"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1633330d32db69a4b3e4eee66aa41fe7c2807dd5", "filename": "gcc/dbxout.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015712847ae83501000efdfce6b2c0878215bc8c/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015712847ae83501000efdfce6b2c0878215bc8c/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=015712847ae83501000efdfce6b2c0878215bc8c", "patch": "@@ -424,6 +424,13 @@ dbxout_init (asm_file, input_file_name, syms)\n   ASM_OUTPUT_INTERNAL_LABEL (asmfile, \"Ltext\", 0);\n #endif /* no DBX_OUTPUT_MAIN_SOURCE_FILENAME */\n \n+  /* Possibly output something to inform GDB that this compilation was by\n+     GCC.  It's easier for GDB to parse it when after the N_SO's.  This\n+     is used in Solaris 2.  */\n+#ifdef ASM_IDENTIFY_GCC_AFTER_SOURCE\n+  ASM_IDENTIFY_GCC_AFTER_SOURCE (asmfile);\n+#endif\n+\n   lastfile = input_file_name;\n \n   next_type_number = 1;\n@@ -2165,6 +2172,10 @@ dbxout_block (block, depth, args)\n #else\n \t      fprintf (asmfile, \"%s %d,0,0,\", ASM_STABN_OP, N_LBRAC);\n \t      assemble_name (asmfile, buf);\n+#if DBX_BLOCKS_FUNCTION_RELATIVE\n+\t      fputc ('-', asmfile);\n+\t      assemble_name (asmfile, IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)));\n+#endif\n \t      fprintf (asmfile, \"\\n\");\n #endif\n \t    }\n@@ -2194,6 +2205,10 @@ dbxout_block (block, depth, args)\n #else\n \t      fprintf (asmfile, \"%s %d,0,0,\", ASM_STABN_OP, N_RBRAC);\n \t      assemble_name (asmfile, buf);\n+#if DBX_BLOCKS_FUNCTION_RELATIVE\n+\t      fputc ('-', asmfile);\n+\t      assemble_name (asmfile, IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)));\n+#endif\n \t      fprintf (asmfile, \"\\n\");\n #endif\n \t    }"}]}