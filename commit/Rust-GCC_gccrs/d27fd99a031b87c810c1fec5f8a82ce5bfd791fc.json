{"sha": "d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI3ZmQ5OWEwMzFiODdjODEwYzFmZWM1ZjhhODJjZTViZmQ3OTFmYw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-12-24T00:43:40Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-12-24T00:43:40Z"}, "message": "Shorten primitive array allocation path:\n\n        * decl.c (init_decl_processing): Use _Jv_NewPrimArray not _Jv_NewArray\n        to create new primitive arrays.\n        * expr.c (build_newarray): If generating native code, call\n        soft_newarray_node with a reference to the primitive TYPE identifier\n        instead of type_value.\n\nFrom-SVN: r38482", "tree": {"sha": "933ecd6a4250e4eba29b9292dde0fe6fcd8d2d65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/933ecd6a4250e4eba29b9292dde0fe6fcd8d2d65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/comments", "author": null, "committer": null, "parents": [{"sha": "93b0dee7798f3a068d5a3e1ea3a421829548f2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b0dee7798f3a068d5a3e1ea3a421829548f2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b0dee7798f3a068d5a3e1ea3a421829548f2b4"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "c52b5291a0e8756e7b53939e58eaa02682aa9d79", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "patch": "@@ -1,3 +1,12 @@\n+2000-12-22  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\tShorten primitive array allocation path:\n+\t* decl.c (init_decl_processing): Use _Jv_NewPrimArray not _Jv_NewArray\n+\tto create new primitive arrays.\n+\t* expr.c (build_newarray): If generating native code, call \n+\tsoft_newarray_node with a reference to the primitive TYPE identifier\n+\tinstead of type_value.\n+\t\n 2000-12-17  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \tFix for PRs gcj/312 and gcj/253:"}, {"sha": "df6b236e45ed6b9286caac84386f69300e17cdae", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "patch": "@@ -775,7 +775,7 @@ init_decl_processing ()\n   t = tree_cons (NULL_TREE, int_type_node, \n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_newarray_node\n-      = builtin_function (\"_Jv_NewArray\",\n+      = builtin_function (\"_Jv_NewPrimArray\",\n \t\t\t  build_function_type(ptr_type_node, t),\n \t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n   DECL_IS_MALLOC (soft_newarray_node) = 1;"}, {"sha": "95a27fd4ccd4ca0c3344a70be7842b0ebfaa0632", "filename": "gcc/java/expr.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d27fd99a031b87c810c1fec5f8a82ce5bfd791fc/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d27fd99a031b87c810c1fec5f8a82ce5bfd791fc", "patch": "@@ -784,24 +784,35 @@ build_java_check_indexed_type (array_node, indexed_type)\n     return indexed_type;\n }\n \n-/* newarray triggers a call to _Jv_NewArray. This function should be called\n-   with an integer code (the type of array to create) and get from the stack\n-   the size of the dimmension.  */\n+/* newarray triggers a call to _Jv_NewPrimArray. This function should be \n+   called with an integer code (the type of array to create), and the length\n+   of the array to create.  */\n \n tree\n build_newarray (atype_value, length)\n      int atype_value;\n      tree length;\n {\n+  tree type_arg;\n+\n+  tree prim_type = decode_newarray_type (atype_value);\n   tree type\n-    = build_java_array_type (decode_newarray_type (atype_value),\n+    = build_java_array_type (prim_type,\n \t\t\t     host_integerp (length, 0) == INTEGER_CST\n \t\t\t     ? tree_low_cst (length, 0) : -1);\n \n+  /* If compiling to native, pass a reference to the primitive type class \n+     and save the runtime some work. However, the bytecode generator\n+     expects to find the type_code int here. */\n+  if (flag_emit_class_files)\n+    type_arg = build_int_2 (atype_value, 0);\n+  else\n+    type_arg = build_class_ref (prim_type);\n+\n   return build (CALL_EXPR, promote_type (type),\n \t\tbuild_address_of (soft_newarray_node),\n \t\ttree_cons (NULL_TREE, \n-\t\t\t   build_int_2 (atype_value, 0),\n+\t\t\t   type_arg,\n \t\t\t   build_tree_list (NULL_TREE, length)),\n \t\tNULL_TREE);\n }"}]}