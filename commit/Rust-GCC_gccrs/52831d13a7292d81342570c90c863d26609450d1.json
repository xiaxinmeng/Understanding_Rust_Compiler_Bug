{"sha": "52831d13a7292d81342570c90c863d26609450d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4MzFkMTNhNzI5MmQ4MTM0MjU3MGM5MGM4NjNkMjY2MDk0NTBkMQ==", "commit": {"author": {"name": "Michael Zolotukhin", "email": "michael.v.zolotukhin@intel.com", "date": "2012-11-30T08:43:07Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-11-30T08:43:07Z"}, "message": "gensupport.c (maybe_eval_c_test): Remove not-null check for expr.\n\n        * gensupport.c (maybe_eval_c_test): Remove not-null check for expr.\n        * read-rtl.c (apply_iterators): Initialize condition with \"\" instead\n        of NULL.\n\nFrom-SVN: r193988", "tree": {"sha": "2769a75df04ce40f9a219fd231856354ce31fbcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2769a75df04ce40f9a219fd231856354ce31fbcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52831d13a7292d81342570c90c863d26609450d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52831d13a7292d81342570c90c863d26609450d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52831d13a7292d81342570c90c863d26609450d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52831d13a7292d81342570c90c863d26609450d1/comments", "author": null, "committer": null, "parents": [{"sha": "e7b0b62dc0cdf46195cc3a1353a66812199cce30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7b0b62dc0cdf46195cc3a1353a66812199cce30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7b0b62dc0cdf46195cc3a1353a66812199cce30"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "db07f002b36a157777c5c4635a4a2d9dd147a06f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52831d13a7292d81342570c90c863d26609450d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52831d13a7292d81342570c90c863d26609450d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52831d13a7292d81342570c90c863d26609450d1", "patch": "@@ -1,3 +1,9 @@\n+2012-11-30  Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* gensupport.c (maybe_eval_c_test): Remove not-null check for expr.\n+\t* read-rtl.c (apply_iterators): Initialize condition with \"\" instead\n+\tof NULL.\n+\n 2012-11-30  Kai Tietz  <ktietz@redhat.com>\n \n \t* config/i386/host-mingw32.c (va_granularity): Make none-const."}, {"sha": "e573f64f4177319ac47308950501a683ae92ca67", "filename": "gcc/gensupport.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52831d13a7292d81342570c90c863d26609450d1/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52831d13a7292d81342570c90c863d26609450d1/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=52831d13a7292d81342570c90c863d26609450d1", "patch": "@@ -2650,7 +2650,7 @@ maybe_eval_c_test (const char *expr)\n   const struct c_test *test;\n   struct c_test dummy;\n \n-  if (!expr || expr[0] == 0)\n+  if (expr[0] == 0)\n     return 1;\n \n   dummy.expr = expr;"}, {"sha": "6dd4fc51ddbbf96f5d521d5a2f69817db89dd3ee", "filename": "gcc/read-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52831d13a7292d81342570c90c863d26609450d1/gcc%2Fread-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52831d13a7292d81342570c90c863d26609450d1/gcc%2Fread-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl.c?ref=52831d13a7292d81342570c90c863d26609450d1", "patch": "@@ -546,7 +546,7 @@ apply_iterators (rtx original, rtx *queue)\n     {\n       /* Apply the current iterator values.  Accumulate a condition to\n \t say when the resulting rtx can be used.  */\n-      condition = NULL;\n+      condition = \"\";\n       FOR_EACH_VEC_ELT (iterator_uses, i, iuse)\n \t{\n \t  if (iuse->iterator->group == &substs)"}]}