{"sha": "e09150c7c0602ed7aa36db50a1535160af96a35a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5MTUwYzdjMDYwMmVkN2FhMzZkYjUwYTE1MzUxNjBhZjk2YTM1YQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-11-30T17:49:53Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-11-30T17:49:53Z"}, "message": "Add MULTILIB_EXCEPTiONS\n\nFrom-SVN: r10642", "tree": {"sha": "60b2cc83a8522099e67172444d5f51e9a6319c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b2cc83a8522099e67172444d5f51e9a6319c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e09150c7c0602ed7aa36db50a1535160af96a35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09150c7c0602ed7aa36db50a1535160af96a35a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e09150c7c0602ed7aa36db50a1535160af96a35a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09150c7c0602ed7aa36db50a1535160af96a35a/comments", "author": null, "committer": null, "parents": [{"sha": "23ec378b8424a890a968504e4944bd4452af31d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ec378b8424a890a968504e4944bd4452af31d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ec378b8424a890a968504e4944bd4452af31d7"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "882180086d0a50a177223dbb88ee5410b3cd3ac2", "filename": "gcc/genmultilib", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09150c7c0602ed7aa36db50a1535160af96a35a/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09150c7c0602ed7aa36db50a1535160af96a35a/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=e09150c7c0602ed7aa36db50a1535160af96a35a", "patch": "@@ -42,6 +42,9 @@\n # appear in the first argument, and the second should be a synonym for\n # it.  Question marks are replaced with equal signs in both options.\n \n+# The optional fourth argument is a list of multilib directory \n+# combinations that should not be built.\n+\n # The output looks like\n #   #define MULTILIB_MATCHES \"\\\n #   SUBDIRECTORY OPTIONS;\\\n@@ -78,6 +81,7 @@\n options=$1\n dirnames=$2\n matches=$3\n+exceptions=$4\n \n # What we want to do is select all combinations of the sets in\n # options.  Each combination which includes a set of mutually\n@@ -112,6 +116,33 @@ combinations=`initial=/ ./tmpmultilib ${options}`\n \n rm -f tmpmultilib\n \n+# If there exceptions, weed them out now\n+if [ -n \"${exceptions}\" ]; then\n+  rm -f tmpmultilib2\n+  cat >tmpmultilib2 <<\\EOF\n+#!/bin/sh\n+# This recursive script weeds out any combination of multilib\n+# switches that should not be generated.  The output looks like\n+# a list of subdirectory names with leading and trailing slashes.\n+\n+  for opt in $@; do\n+    case \"$opt\" in\n+EOF\n+\n+  for except in ${exceptions}; do\n+    echo \"      /${except}/) : ;;\" >> tmpmultilib2\n+  done\n+\n+cat >>tmpmultilib2 <<\\EOF\n+      *) echo ${opt};;\n+    esac\n+  done\n+EOF\n+  chmod +x tmpmultilib2\n+  combinations=`./tmpmultilib2 ${combinations}`\n+  rm -f ./tmpmultilib2\n+fi\n+\n # Construct a sed pattern which will convert option names to directory\n # names.\n todirnames="}]}