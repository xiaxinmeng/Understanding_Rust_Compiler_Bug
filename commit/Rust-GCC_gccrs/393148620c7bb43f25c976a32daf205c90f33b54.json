{"sha": "393148620c7bb43f25c976a32daf205c90f33b54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkzMTQ4NjIwYzdiYjQzZjI1Yzk3NmEzMmRhZjIwNWM5MGYzM2I1NA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-27T08:49:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T08:49:55Z"}, "message": "exp_disp.adb (Build_Dispatch_Tables): For a private type completed by a synchronized tagged type...\n\n2008-05-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_disp.adb (Build_Dispatch_Tables): For a private type completed by\n\ta synchronized tagged type, do not attempt to build dispatch table for\n\tfull view. The table is built for the corresponding record type, which\n\thas its own declaration.\n\nFrom-SVN: r135978", "tree": {"sha": "da60cbc457c2d67cba5c142c15adad7c00a41d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da60cbc457c2d67cba5c142c15adad7c00a41d7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/393148620c7bb43f25c976a32daf205c90f33b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393148620c7bb43f25c976a32daf205c90f33b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/393148620c7bb43f25c976a32daf205c90f33b54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393148620c7bb43f25c976a32daf205c90f33b54/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c4e9ad2b2fd7277af83f62cef018e4f90115e41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4e9ad2b2fd7277af83f62cef018e4f90115e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c4e9ad2b2fd7277af83f62cef018e4f90115e41"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "864206951f64e39c60565d5e649ce4d31e78d074", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/393148620c7bb43f25c976a32daf205c90f33b54/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/393148620c7bb43f25c976a32daf205c90f33b54/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=393148620c7bb43f25c976a32daf205c90f33b54", "patch": "@@ -173,25 +173,28 @@ package body Exp_Disp is\n \n             --  Handle private types of library level tagged types. We must\n             --  exchange the private and full-view to ensure the correct\n-            --  expansion.\n+            --  expansion. If the full view is a synchronized type ignore\n+            --  the type because the table will be built for the corresponding\n+            --  record type, that has its own declaration.\n \n             elsif (Nkind (D) = N_Private_Type_Declaration\n                      or else Nkind (D) = N_Private_Extension_Declaration)\n                and then Present (Full_View (Defining_Entity (D)))\n-               and then Is_Library_Level_Tagged_Type\n-                          (Full_View (Defining_Entity (D)))\n-               and then Ekind (Full_View (Defining_Entity (D)))\n-                          /= E_Record_Subtype\n             then\n                declare\n                   E1 : constant Entity_Id := Defining_Entity (D);\n-                  E2 : constant Entity_Id := Full_View (Defining_Entity (D));\n+                  E2 : constant Entity_Id := Full_View (E1);\n \n                begin\n-                  Exchange_Declarations (E1);\n-                  Insert_List_After_And_Analyze (Last (Target_List),\n-                    Make_DT (E1));\n-                  Exchange_Declarations (E2);\n+                  if Is_Library_Level_Tagged_Type (E2)\n+                    and then Ekind (E2) /= E_Record_Subtype\n+                    and then not Is_Concurrent_Type (E2)\n+                  then\n+                     Exchange_Declarations (E1);\n+                     Insert_List_After_And_Analyze (Last (Target_List),\n+                       Make_DT (E1));\n+                     Exchange_Declarations (E2);\n+                  end if;\n                end;\n             end if;\n "}]}