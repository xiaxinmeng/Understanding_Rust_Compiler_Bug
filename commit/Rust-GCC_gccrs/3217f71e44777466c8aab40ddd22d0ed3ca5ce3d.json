{"sha": "3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxN2Y3MWU0NDc3NzQ2NmM4YWFiNDBkZGQyMmQwZWQzY2E1Y2UzZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:26:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:26:27Z"}, "message": "[multiple changes]\n\n2012-08-06  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, switch-c.adb, inline.ads, sem_ch10.adb, types.ads,\n\tchecks.adb, sem_prag.adb, sem.adb, sem.ads, sem_res.adb, sem_attr.adb,\n\tgnat1drv.adb, exp_ch4.adb, exp_ch6.adb, opt.ads, osint.adb: Implement\n\textended overflow checks (step 1).\n\t(Overflow_Check_Type, Suppress_Record, Suppress_All): New types.\n\t(Suppress_Array): Extended to include switches to control extended\n\toverflow checking (and renamed to Suppress_Record).\n\tUpdate all uses of Suppress_Array.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* makeutl.ads: Minor documentation fix.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.adb: Minor reformatting.\n\nFrom-SVN: r190166", "tree": {"sha": "252d34fec92d6b22e8d4f8e3c7dedd6b4cf771ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/252d34fec92d6b22e8d4f8e3c7dedd6b4cf771ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/comments", "author": null, "committer": null, "parents": [{"sha": "e68077239dc16ba900c6f3b631fd88032bc870d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68077239dc16ba900c6f3b631fd88032bc870d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68077239dc16ba900c6f3b631fd88032bc870d2"}], "stats": {"total": 345, "additions": 218, "deletions": 127}, "files": [{"sha": "abd977a7afa522bc8976a743595fbd0e1014138c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -1,3 +1,22 @@\n+2012-08-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, switch-c.adb, inline.ads, sem_ch10.adb, types.ads,\n+\tchecks.adb, sem_prag.adb, sem.adb, sem.ads, sem_res.adb, sem_attr.adb,\n+\tgnat1drv.adb, exp_ch4.adb, exp_ch6.adb, opt.ads, osint.adb: Implement\n+\textended overflow checks (step 1).\n+\t(Overflow_Check_Type, Suppress_Record, Suppress_All): New types.\n+\t(Suppress_Array): Extended to include switches to control extended\n+\toverflow checking (and renamed to Suppress_Record).\n+\tUpdate all uses of Suppress_Array.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* makeutl.ads: Minor documentation fix.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.adb: Minor reformatting.\n+\n 2012-08-06  Geert Bosch  <bosch@adacore.com>\n \n \t* a-ngelfu.adb: Change obsolete comment that this is a non-strict"}, {"sha": "b086c7548077958678e4e10a3e38c60b0cdbd89f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -322,7 +322,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Access_Check);\n       else\n-         return Scope_Suppress (Access_Check);\n+         return Scope_Suppress.Suppress (Access_Check);\n       end if;\n    end Access_Checks_Suppressed;\n \n@@ -335,7 +335,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Accessibility_Check);\n       else\n-         return Scope_Suppress (Accessibility_Check);\n+         return Scope_Suppress.Suppress (Accessibility_Check);\n       end if;\n    end Accessibility_Checks_Suppressed;\n \n@@ -378,7 +378,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Alignment_Check);\n       else\n-         return Scope_Suppress (Alignment_Check);\n+         return Scope_Suppress.Suppress (Alignment_Check);\n       end if;\n    end Alignment_Checks_Suppressed;\n \n@@ -2616,7 +2616,7 @@ package body Checks is\n       --  Otherwise result depends on current scope setting\n \n       else\n-         return Scope_Suppress (Atomic_Synchronization);\n+         return Scope_Suppress.Suppress (Atomic_Synchronization);\n       end if;\n    end Atomic_Synchronization_Disabled;\n \n@@ -3641,7 +3641,7 @@ package body Checks is\n          end if;\n       end if;\n \n-      return Scope_Suppress (Discriminant_Check);\n+      return Scope_Suppress.Suppress (Discriminant_Check);\n    end Discriminant_Checks_Suppressed;\n \n    --------------------------------\n@@ -3653,7 +3653,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Division_Check);\n       else\n-         return Scope_Suppress (Division_Check);\n+         return Scope_Suppress.Suppress (Division_Check);\n       end if;\n    end Division_Checks_Suppressed;\n \n@@ -3682,10 +3682,10 @@ package body Checks is\n          end if;\n       end if;\n \n-      if Scope_Suppress (Elaboration_Check) then\n+      if Scope_Suppress.Suppress (Elaboration_Check) then\n          return True;\n       elsif Dynamic_Elaboration_Checks then\n-         return Scope_Suppress (All_Checks);\n+         return Scope_Suppress.Suppress (All_Checks);\n       else\n          return False;\n       end if;\n@@ -5305,7 +5305,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Index_Check);\n       else\n-         return Scope_Suppress (Index_Check);\n+         return Scope_Suppress.Suppress (Index_Check);\n       end if;\n    end Index_Checks_Suppressed;\n \n@@ -5821,7 +5821,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Length_Check);\n       else\n-         return Scope_Suppress (Length_Check);\n+         return Scope_Suppress.Suppress (Length_Check);\n       end if;\n    end Length_Checks_Suppressed;\n \n@@ -5834,7 +5834,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Overflow_Check);\n       else\n-         return Scope_Suppress (Overflow_Check);\n+         return Scope_Suppress.Suppress (Overflow_Check);\n       end if;\n    end Overflow_Checks_Suppressed;\n \n@@ -5858,7 +5858,7 @@ package body Checks is\n          end if;\n       end if;\n \n-      return Scope_Suppress (Range_Check);\n+      return Scope_Suppress.Suppress (Range_Check);\n    end Range_Checks_Suppressed;\n \n    -----------------------------------------\n@@ -5875,7 +5875,10 @@ package body Checks is\n    begin\n       --  Immediate return if scope checks suppressed for either check\n \n-      if Scope_Suppress (Range_Check) or Scope_Suppress (Validity_Check) then\n+      if Scope_Suppress.Suppress (Range_Check)\n+           or\n+         Scope_Suppress.Suppress (Validity_Check)\n+      then\n          return True;\n       end if;\n \n@@ -7356,7 +7359,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Storage_Check);\n       else\n-         return Scope_Suppress (Storage_Check);\n+         return Scope_Suppress.Suppress (Storage_Check);\n       end if;\n    end Storage_Checks_Suppressed;\n \n@@ -7372,7 +7375,7 @@ package body Checks is\n          return Is_Check_Suppressed (E, Tag_Check);\n       end if;\n \n-      return Scope_Suppress (Tag_Check);\n+      return Scope_Suppress.Suppress (Tag_Check);\n    end Tag_Checks_Suppressed;\n \n    --------------------------\n@@ -7398,7 +7401,7 @@ package body Checks is\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n          return Is_Check_Suppressed (E, Validity_Check);\n       else\n-         return Scope_Suppress (Validity_Check);\n+         return Scope_Suppress.Suppress (Validity_Check);\n       end if;\n    end Validity_Checks_Suppressed;\n "}, {"sha": "9cc8865b64d1d0a5d051a233f1d44438bf151828", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -699,7 +699,7 @@ package body Exp_Ch4 is\n       begin\n          if Ada_Version >= Ada_2005\n            and then Is_Class_Wide_Type (DesigT)\n-           and then not Scope_Suppress (Accessibility_Check)\n+           and then not Scope_Suppress.Suppress (Accessibility_Check)\n            and then\n              (Type_Access_Level (Etype (Exp)) > Type_Access_Level (PtrT)\n                or else"}, {"sha": "930f82befc0a3c24888dae59108182eb0dd8a9fc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -7474,7 +7474,7 @@ package body Exp_Ch6 is\n       elsif Ada_Version >= Ada_2005\n         and then Tagged_Type_Expansion\n         and then Is_Class_Wide_Type (R_Type)\n-        and then not Scope_Suppress (Accessibility_Check)\n+        and then not Scope_Suppress.Suppress (Accessibility_Check)\n         and then\n           (Is_Class_Wide_Type (Etype (Exp))\n             or else Nkind_In (Exp, N_Type_Conversion,"}, {"sha": "7e28bb4c1396f75136d8e74760b762ca5ca0c0f1", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -4410,6 +4410,8 @@ package body Exp_Ch7 is\n          Stmts     : List_Id;\n          Temp_Id   : Entity_Id;\n \n+      --  Start of processing for Process_Transient_Objects\n+\n       begin\n          --  Examine all objects in the list First_Object .. Last_Object\n \n@@ -4629,10 +4631,10 @@ package body Exp_Ch7 is\n       end if;\n \n       declare\n-         Node_To_Wrap  : constant Node_Id := Node_To_Be_Wrapped;\n-         First_Obj  : Node_Id;\n-         Last_Obj   : Node_Id;\n-         Target     : Node_Id;\n+         Node_To_Wrap : constant Node_Id := Node_To_Be_Wrapped;\n+         First_Obj    : Node_Id;\n+         Last_Obj     : Node_Id;\n+         Target       : Node_Id;\n \n       begin\n          --  If the node to be wrapped is the trigger of an asynchronous"}, {"sha": "f7b9d450128e88862ee096d84c49138f4a6f73f2", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -3818,20 +3818,20 @@ package body Exp_Util is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Insert_Actions (Assoc_Node, Ins_Actions);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Insert_Actions (Assoc_Node, Ins_Actions);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Insert_Actions;\n@@ -6272,9 +6272,9 @@ package body Exp_Util is\n       Name_Req     : Boolean := False;\n       Variable_Ref : Boolean := False)\n    is\n-      Loc          : constant Source_Ptr     := Sloc (Exp);\n-      Exp_Type     : constant Entity_Id      := Etype (Exp);\n-      Svg_Suppress : constant Suppress_Array := Scope_Suppress;\n+      Loc          : constant Source_Ptr      := Sloc (Exp);\n+      Exp_Type     : constant Entity_Id       := Etype (Exp);\n+      Svg_Suppress : constant Suppress_Record := Scope_Suppress;\n       Def_Id       : Entity_Id;\n       E            : Node_Id;\n       New_Exp      : Node_Id;\n@@ -6705,7 +6705,7 @@ package body Exp_Util is\n \n       --  All this must not have any checks\n \n-      Scope_Suppress := (others => True);\n+      Scope_Suppress := Suppress_All;\n \n       --  If it is a scalar type and we need to capture the value, just make\n       --  a copy. Likewise for a function call, an attribute reference, an"}, {"sha": "b2f371f39730a867eb564b192cac904316a7b7ac", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -193,13 +193,16 @@ procedure Gnat1drv is\n          --  Enable all other language checks\n \n          Suppress_Options :=\n-           (Access_Check      => True,\n-            Alignment_Check   => True,\n-            Division_Check    => True,\n-            Elaboration_Check => True,\n-            Overflow_Check    => True,\n-            others            => False);\n-         Enable_Overflow_Checks := False;\n+           (Suppress                   => (Access_Check      => True,\n+                                           Alignment_Check   => True,\n+                                           Division_Check    => True,\n+                                           Elaboration_Check => True,\n+                                           Overflow_Check    => True,\n+                                           others            => False),\n+            Overflow_Checks_General    => Suppress,\n+            Overflow_Checks_Assertions => Suppress);\n+\n+         Enable_Overflow_Checks     := False;\n          Dynamic_Elaboration_Checks := False;\n \n          --  Kill debug of generated code, since it messes up sloc values\n@@ -339,17 +342,20 @@ procedure Gnat1drv is\n                         and\n                        Targparm.Backend_Overflow_Checks_On_Target))\n       then\n-         Suppress_Options (Overflow_Check) := False;\n+         Suppress_Options.Suppress (Overflow_Check) := False;\n       else\n-         Suppress_Options (Overflow_Check) := True;\n+         Suppress_Options.Suppress (Overflow_Check)  := True;\n+         Suppress_Options.Overflow_Checks_General    := Check_All;\n+         Suppress_Options.Overflow_Checks_Assertions := Check_All;\n       end if;\n \n       --  Set default for atomic synchronization. As this synchronization\n       --  between atomic accesses can be expensive, and not typically needed\n       --  on some targets, an optional target parameter can turn the option\n       --  off. Note Atomic Synchronization is implemented as check.\n \n-      Suppress_Options (Atomic_Synchronization) := not Atomic_Sync_Default;\n+      Suppress_Options.Suppress (Atomic_Synchronization) :=\n+        not Atomic_Sync_Default;\n \n       --  Set switch indicating if we can use N_Expression_With_Actions\n \n@@ -426,12 +432,12 @@ procedure Gnat1drv is\n          Restrict.Restrictions.Set (No_Initialize_Scalars) := True;\n \n          --  Suppress all language checks since they are handled implicitly by\n-         --  the formal verification backend.\n+         --    the formal verification backend.\n          --  Turn off dynamic elaboration checks.\n          --  Turn off alignment checks.\n          --  Turn off validity checking.\n \n-         Suppress_Options := (others => True);\n+         Suppress_Options := Suppress_All;\n          Enable_Overflow_Checks := False;\n          Dynamic_Elaboration_Checks := False;\n          Reset_Validity_Check_Options;"}, {"sha": "f3750a83aa245642ad3bfd8c2770bb4a46d3530c", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -70,7 +70,7 @@ package Inline is\n       --  be restored when compiling the body, to insure that internal enti-\n       --  ties use the same counter and are unique over spec and body.\n \n-      Scope_Suppress           : Suppress_Array;\n+      Scope_Suppress           : Suppress_Record;\n       Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;\n       --  Save suppress information at the point of instantiation. Used to\n       --  properly inherit check status active at this point (see RM 11.5"}, {"sha": "1b899c1bb45f883a8271407272dc724c6284da04", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -138,7 +138,8 @@ package Makeutl is\n    --  Do nothing if Switch is an absolute path switch. If relative, fail if\n    --  Parent is the empty string, otherwise prepend the path with Parent. This\n    --  subprogram is only used when using project files. If For_Gnatbind is\n-   --  True, gnatbind switches that are not paths (-L, -A) are left unchaned.\n+   --  True, consider gnatbind specific syntax for -L (not a path, left\n+   --  unchanged) and -A (path is optional, preceded with \"=\" if present).\n    --  If Including_RTS is True, process also switches --RTS=. Do_Fail is\n    --  called in case of error. Using Osint.Fail might be appropriate.\n "}, {"sha": "a6c0cf3dff278e854f9a6096e25296a17b3754da", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -1070,8 +1070,9 @@ package Opt is\n \n    Overflow_Checks_Unsuppressed : Boolean := False;\n    --  GNAT\n-   --  Set to True if at least one occurrence of pragma Unsuppress\n-   --  (All_Checks|Overflow_Checks) has been processed.\n+   --  This flag is True if there has been at least one pragma with the\n+   --  effect of unsuppressing overflow checks, meaning that a more careful\n+   --  check of the current mode is required.\n \n    Persistent_BSS_Mode : Boolean := False;\n    --  GNAT\n@@ -1249,7 +1250,7 @@ package Opt is\n    --  GNAT\n    --  Set to True if -gnatp (suppress all checks) switch present.\n \n-   Suppress_Options : Suppress_Array;\n+   Suppress_Options : Suppress_Record;\n    --  GNAT\n    --  Flags set True to suppress corresponding check, i.e. add an implicit\n    --  pragma Suppress at the outer level of each unit compiled. Note that"}, {"sha": "3e452b5d6defa17ad33f7dd7b109abb0c55ca9ea", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -1659,7 +1659,7 @@ package body Osint is\n       --  be reset later (turning some on if -gnato is not specified, and\n       --  turning all of them on if -gnatp is specified).\n \n-      Suppress_Options := (others => False);\n+      Suppress_Options := ((others => False), Check_All, Check_All);\n \n       --  Reserve the first slot in the search paths table. This is the\n       --  directory of the main source file or main library file and is filled"}, {"sha": "46fd546fa7697a19282e990c48f0bc3c4a973381", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -722,20 +722,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Analyze (N);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Analyze (N);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Analyze;\n@@ -761,20 +761,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Analyze_List (L);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Analyze_List (L);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Analyze_List;\n@@ -1022,20 +1022,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Insert_After_And_Analyze (N, M);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Insert_After_And_Analyze (N, M);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Insert_After_And_Analyze;\n@@ -1082,20 +1082,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Insert_Before_And_Analyze (N, M);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Insert_Before_And_Analyze (N, M);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Insert_Before_And_Analyze;\n@@ -1141,20 +1141,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Insert_List_After_And_Analyze (N, L);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Insert_List_After_And_Analyze (N, L);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Insert_List_After_And_Analyze;\n@@ -1199,20 +1199,20 @@ package body Sem is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Insert_List_Before_And_Analyze (N, L);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Insert_List_Before_And_Analyze (N, L);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Insert_List_Before_And_Analyze;\n@@ -1264,9 +1264,9 @@ package body Sem is\n       --  the All_Checks flag.\n \n       if C in Predefined_Check_Id then\n-         return Scope_Suppress (C);\n+         return Scope_Suppress.Suppress (C);\n       else\n-         return Scope_Suppress (All_Checks);\n+         return Scope_Suppress.Suppress (All_Checks);\n       end if;\n    end Is_Check_Suppressed;\n "}, {"sha": "00bce6969b615c2540c948de7158751d944c3a4e", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -310,8 +310,8 @@ package Sem is\n    --  that are applicable to all entities. A similar search is needed for any\n    --  non-predefined check even if no specific entity is involved.\n \n-   Scope_Suppress : Suppress_Array := Suppress_Options;\n-   --  This array contains the current scope based settings of the suppress\n+   Scope_Suppress : Suppress_Record := Suppress_Options;\n+   --  This variable contains the current scope based settings of the suppress\n    --  switches. It is initialized from the options as shown, and then modified\n    --  by pragma Suppress. On entry to each scope, the current setting is saved\n    --  the scope stack, and then restored on exit from the scope. This record\n@@ -449,7 +449,7 @@ package Sem is\n       --  Pointer to name of last subprogram body in this scope. Used for\n       --  testing proper alpha ordering of subprogram bodies in scope.\n \n-      Save_Scope_Suppress : Suppress_Array;\n+      Save_Scope_Suppress : Suppress_Record;\n       --  Save contents of Scope_Suppress on entry\n \n       Save_Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;"}, {"sha": "737ede23845ebe624cac1aff830e51eb27500c5b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -5880,7 +5880,7 @@ package body Sem_Attr is\n             begin\n                if No (E1) then\n                   if C in Predefined_Check_Id then\n-                     R := Scope_Suppress (C);\n+                     R := Scope_Suppress.Suppress (C);\n                   else\n                      R := Is_Check_Suppressed (Empty, C);\n                   end if;"}, {"sha": "31e8e5564e5331b259f781c81bf7b0ce4868d671", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -1964,7 +1964,7 @@ package body Sem_Ch10 is\n       Num_Scopes      : Int := 0;\n       Use_Clauses     : array (1 .. Scope_Stack.Last) of Node_Id;\n       Enclosing_Child : Entity_Id := Empty;\n-      Svg             : constant Suppress_Array := Scope_Suppress;\n+      Svg             : constant Suppress_Record := Scope_Suppress;\n \n       Save_Cunit_Restrictions : constant Save_Cunit_Boolean_Restrictions :=\n                                   Cunit_Boolean_Restrictions_Save;"}, {"sha": "4d377585e5f7add7bfbe206b19d0be815ed9eaed", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -5485,9 +5485,9 @@ package body Sem_Prag is\n                --  affected by this processing).\n \n                if R_Id = No_Exceptions and then not Warn then\n-                  for J in Scope_Suppress'Range loop\n+                  for J in Scope_Suppress.Suppress'Range loop\n                      if J /= Atomic_Synchronization then\n-                        Scope_Suppress (J) := True;\n+                        Scope_Suppress.Suppress (J) := True;\n                      end if;\n                   end loop;\n                end if;\n@@ -5641,9 +5641,7 @@ package body Sem_Prag is\n          --  user code: we want to generate checks for analysis purposes, as\n          --  set respectively by -gnatC and -gnatd.F\n \n-         if (CodePeer_Mode or Alfa_Mode)\n-           and then Comes_From_Source (N)\n-         then\n+         if (CodePeer_Mode or Alfa_Mode) and then Comes_From_Source (N) then\n             return;\n          end if;\n \n@@ -5666,10 +5664,17 @@ package body Sem_Prag is\n               (\"argument of pragma% is not valid check name\", Arg1);\n          end if;\n \n-         if not Suppress_Case\n-           and then (C = All_Checks or else C = Overflow_Check)\n-         then\n-            Opt.Overflow_Checks_Unsuppressed := True;\n+         --  Special processing for overflow check case\n+\n+         if C = All_Checks or else C = Overflow_Check then\n+            if Suppress_Case then\n+               Scope_Suppress.Overflow_Checks_General    := Suppress;\n+               Scope_Suppress.Overflow_Checks_Assertions := Suppress;\n+            else\n+               Scope_Suppress.Overflow_Checks_General    := Check_All;\n+               Scope_Suppress.Overflow_Checks_Assertions := Check_All;\n+               Opt.Overflow_Checks_Unsuppressed := True;\n+            end if;\n          end if;\n \n          if Arg_Count = 1 then\n@@ -5687,11 +5692,12 @@ package body Sem_Prag is\n                --  Atomic_Synchronization is also not affected, since this is\n                --  not a real check.\n \n-               for J in Scope_Suppress'Range loop\n+               for J in Scope_Suppress.Suppress'Range loop\n                   if J /= Elaboration_Check\n-                    and then J /= Atomic_Synchronization\n+                       and then\n+                     J /= Atomic_Synchronization\n                   then\n-                     Scope_Suppress (J) := Suppress_Case;\n+                     Scope_Suppress.Suppress (J) := Suppress_Case;\n                   end if;\n                end loop;\n \n@@ -5704,7 +5710,7 @@ package body Sem_Prag is\n               and then (not Comes_From_Source (N)\n                          or else C /= Atomic_Synchronization)\n             then\n-               Scope_Suppress (C) := Suppress_Case;\n+               Scope_Suppress.Suppress (C) := Suppress_Case;\n             end if;\n \n             --  Also make an entry in the Local_Entity_Suppress table"}, {"sha": "21d3e145d332b4ac3a1f4253a7df38e3dba33c3a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -334,21 +334,20 @@ package body Sem_Res is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Analyze_And_Resolve (N, Typ);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n-\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Analyze_And_Resolve (N, Typ);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n \n@@ -375,27 +374,24 @@ package body Sem_Res is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Analyze_And_Resolve (N);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n-\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Analyze_And_Resolve (N);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n \n-      if Current_Scope /= Scop\n-        and then Scope_Is_Transient\n-      then\n+      if Current_Scope /= Scop and then Scope_Is_Transient then\n          Scope_Stack.Table (Scope_Stack.Last).Save_Scope_Suppress :=\n            Scope_Suppress;\n       end if;\n@@ -2904,20 +2900,20 @@ package body Sem_Res is\n    begin\n       if Suppress = All_Checks then\n          declare\n-            Svg : constant Suppress_Array := Scope_Suppress;\n+            Svg : constant Suppress_Record := Scope_Suppress;\n          begin\n-            Scope_Suppress := (others => True);\n+            Scope_Suppress := Suppress_All;\n             Resolve (N, Typ);\n             Scope_Suppress := Svg;\n          end;\n \n       else\n          declare\n-            Svg : constant Boolean := Scope_Suppress (Suppress);\n+            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n          begin\n-            Scope_Suppress (Suppress) := True;\n+            Scope_Suppress.Suppress (Suppress) := True;\n             Resolve (N, Typ);\n-            Scope_Suppress (Suppress) := Svg;\n+            Scope_Suppress.Suppress (Suppress) := Svg;\n          end;\n       end if;\n    end Resolve;"}, {"sha": "4815c097302957c1aa58083d5e2c05deb574ec57", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -443,7 +443,8 @@ package body Switch.C is\n                   --  -gnated switch (disable atomic synchronization)\n \n                   when 'd' =>\n-                     Suppress_Options (Atomic_Synchronization) := True;\n+                     Suppress_Options.Suppress (Atomic_Synchronization) :=\n+                       True;\n \n                   --  -gnateD switch (preprocessing symbol definition)\n \n@@ -754,7 +755,9 @@ package body Switch.C is\n \n             when 'o' =>\n                Ptr := Ptr + 1;\n-               Suppress_Options (Overflow_Check) := False;\n+               Suppress_Options.Suppress (Overflow_Check) := False;\n+               Suppress_Options.Overflow_Checks_General := Check_All;\n+               Suppress_Options.Overflow_Checks_Assertions := Check_All;\n                Opt.Enable_Overflow_Checks := True;\n \n             --  Processing for O switch\n@@ -782,12 +785,16 @@ package body Switch.C is\n                   --  exclude Atomic_Synchronization, since this is not a real\n                   --  check.\n \n-                  for J in Suppress_Options'Range loop\n+                  for J in Suppress_Options.Suppress'Range loop\n                      if J /= Elaboration_Check\n-                       and then J /= Atomic_Synchronization\n+                          and then\n+                        J /= Atomic_Synchronization\n                      then\n-                        Suppress_Options (J) := True;\n+                        Suppress_Options.Suppress (J) := True;\n                      end if;\n+\n+                     Suppress_Options.Overflow_Checks_General    := Suppress;\n+                     Suppress_Options.Overflow_Checks_Assertions := Suppress;\n                   end loop;\n \n                   Validity_Checks_On         := False;"}, {"sha": "03370cff6666dae3237f5b52877b009e4b07735e", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 53, "deletions": 3, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217f71e44777466c8aab40ddd22d0ed3ca5ce3d/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=3217f71e44777466c8aab40ddd22d0ed3ca5ce3d", "patch": "@@ -646,9 +646,9 @@ package Types is\n       TS      : out Time_Stamp_Type);\n    --  Given the components of a time stamp, initialize the value\n \n-   -----------------------------------------------\n-   -- Types used for Pragma Suppress Management --\n-   -----------------------------------------------\n+   -------------------------------------\n+   -- Types used for Check Management --\n+   -------------------------------------\n \n    type Check_Id is new Nat;\n    --  Type used to represent a check id\n@@ -703,6 +703,56 @@ package Types is\n    --    4.  Add a new Do_xxx_Check flag to Sinfo (if required)\n    --    5.  Add appropriate checks for the new test\n \n+   --  The following provides precise details on the mode used to check\n+   --  intermediate overflows in expressions for signed integer arithmetic.\n+\n+   type Overflow_Check_Type is\n+     (Suppress,\n+      --  Intermediate overflow suppressed. If an arithmetic operation creates\n+      --  an overflow, no exception is raised, and the program is erroneous.\n+\n+      Check_All,\n+      --  All intermediate operations are checked. If the result of any\n+      --  arithmetic operation gives a result outside the range of the base\n+      --  type, then a Constraint_Error exception is raised.\n+\n+      Minimize,\n+      --  Where appropriate, arithmetic operations are performed with an\n+      --  extended range, using Long_Long_Integer if necessary. As long as\n+      --  the result fits in this extended range, then no exception is raised\n+      --  and computation continues with the extended result. The final value\n+      --  of an expression must fit in the base type of the whole expression.\n+      --  If an intermediate result is outside the range of Long_Long_Integer\n+      --  then a Constraint_Error exception is raised.\n+\n+      Eliminate);\n+      --  In this mode arbitrary precision arithmetic is used as needed to\n+      --  ensure that it is impossible for intermediate arithmetic to cause\n+      --  an overflow. Again the final value of an expression must fit in\n+      --  the base type of the whole expression.\n+\n+   --  The following structure captures the state of check suppression or\n+   --  activation at a particular point in the program execution.\n+\n+   type Suppress_Record is record\n+      Suppress : Suppress_Array;\n+      --  Indicates suppression status of each possible check\n+\n+      Overflow_Checks_General : Overflow_Check_Type;\n+      --  This field is relevant only if Suppress (Overflow_Check) is False.\n+      --  It indicates the mode of overflow checking to be applied to general\n+      --  expressions outside assertions.\n+\n+      Overflow_Checks_Assertions : Overflow_Check_Type;\n+      --  This field is relevant only if Suppress (Overflow_Check) is False.\n+      --  It indicates the mode of overflow checking to be applied to any\n+      --  expressions occuring inside assertions.\n+   end record;\n+\n+   Suppress_All : constant Suppress_Record :=\n+                    ((others => True), Suppress, Suppress);\n+   --  Constant used to initialize Suppress_Record value to all suppressed.\n+\n    -----------------------------------\n    -- Global Exception Declarations --\n    -----------------------------------"}]}