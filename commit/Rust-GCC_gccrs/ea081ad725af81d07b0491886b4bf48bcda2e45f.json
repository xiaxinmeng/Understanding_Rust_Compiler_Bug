{"sha": "ea081ad725af81d07b0491886b4bf48bcda2e45f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwODFhZDcyNWFmODFkMDdiMDQ5MTg4NmI0YmY0OGJjZGEyZTQ1Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:21:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:21:51Z"}, "message": "Resync.\n\nFrom-SVN: r134084", "tree": {"sha": "df48244b9456ea54a44fcddb78fbb7179e83db90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df48244b9456ea54a44fcddb78fbb7179e83db90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea081ad725af81d07b0491886b4bf48bcda2e45f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea081ad725af81d07b0491886b4bf48bcda2e45f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea081ad725af81d07b0491886b4bf48bcda2e45f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea081ad725af81d07b0491886b4bf48bcda2e45f/comments", "author": null, "committer": null, "parents": [{"sha": "e957f438ad5f4bd1f54614661e0c8554d0a9c175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e957f438ad5f4bd1f54614661e0c8554d0a9c175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e957f438ad5f4bd1f54614661e0c8554d0a9c175"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "18cbd4af108a8016d2b568a0896f5fcd5cbc9a46", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea081ad725af81d07b0491886b4bf48bcda2e45f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea081ad725af81d07b0491886b4bf48bcda2e45f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea081ad725af81d07b0491886b4bf48bcda2e45f", "patch": "@@ -1,3 +1,22 @@\n+2008-04-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tasuti.ads: Use Task_Address instead of System.Address.\n+\n+\t* makeutl.adb (Path_Or_File_Name): New function\n+\n+\t* nlists.ads, itypes.ads: Update comments.\n+\n+\t* s-crtl.ads (malloc32, realloc32): New functions.\n+\n+\t* s-auxdec.ads (Short_Address_Size): New constant.\n+\n+\t* a-taside.adb, s-tasdeb.adb: Use Task_Address.\n+\n+\t* s-ststop.ads, s-ststop.adb: New file.\n+\n+\t* exp_tss.ads, s-taprop-lynxos.adb: Update comments.\n+\tMinor reformatting.\n+\n 2008-04-08  Pascal Obry  <obry@adacore.com>\n \n \t* g-sercom.ads, g-sercom.adb (Data_Rate): Add B115200.\n@@ -48,7 +67,8 @@\n \t* system-linux-x86_64.ads: (Stack_Check_Probes): Set to True.\n \n \t* s-taspri-lynxos.ads, s-taspri-solaris.ads, s-taspri-tru64.ads,\n-\ts-taspri-hpux-dce.ads (Task_Address): New subtype of System.Address\n+\ts-taspri-hpux-dce.ads, s-taspri-dummy.ads, s-taspri-posix.ads,\n+\ts-taspri-vms.ads (Task_Address): New subtype of System.Address\n \t(Task_Address_Size): New constant size of System.Address\n \t(Alternate_Stack_Size): New constant.\n \n@@ -61,7 +81,7 @@\n \tthe environment task.\n \t(Create_Task): Fix assertions for NPTL library (vs old LinuxThreads).\n \n-\t* s-parame.adb (Minimum_Stack_Size): Increase value to 16K to\n+\t* s-parame.adb (Minimum_Stack_Size): Increase value to 16K\n \n \t* system-linux-x86.ads: (Stack_Check_Probes): Set to True.\n \n@@ -149,6 +169,8 @@\n \tFiles mlib-tgt-*.adb have been renamed mlib-tgt-specific-*.adb\n \tMinor updates for VMS\n \n+\t* gnatbl.c: Removed.\n+\n 2008-04-08  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-expect-vms.adb, a-textio.adb, a-witeio.adb, exp_dbug.adb,\n@@ -916,8 +938,8 @@ PR ada/10768\n \t(Analyze_Assignment_Statement): The assignment is illegal if the\n \tleft-hand is an interface.\n \n-\t* sem_res.adb (Resolve_Arithmetic_Op): For mod/rem check violation of\n-\trestriction No_Implicit_Conditionals\n+\t* sem_res.ads, sem_res.adb (Resolve_Arithmetic_Op): For mod/rem check\n+\tviolation of restriction No_Implicit_Conditionals\n \tAdd Sure parameter to Note_Possible_Modication calls\n \tUse new Is_Standard_Character_Type predicate\n \t(Make_Call_Into_Operator): Preserve Comes_From_Source when rewriting"}]}