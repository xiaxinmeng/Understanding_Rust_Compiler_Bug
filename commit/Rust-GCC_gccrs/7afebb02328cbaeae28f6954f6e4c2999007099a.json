{"sha": "7afebb02328cbaeae28f6954f6e4c2999007099a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmZWJiMDIzMjhjYmFlYWUyOGY2OTU0ZjZlNGMyOTk5MDA3MDk5YQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-11-25T17:22:53Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-11-25T17:22:53Z"}, "message": "Makefile.am: Remove intrinsics/erf.c and intrinsics/bessel.c.\n\n\t* Makefile.am: Remove intrinsics/erf.c and intrinsics/bessel.c.\n\t* Makefile.in: Regenerate.\n\t* intrinsics/erf.c: Remove.\n\t* intrinsics/bessel.c: Remove.\n\t* c99_protos.h: Add prototypes for bessel and error functions.\n\t* intrinsics/c99_functions.c: Move content for intrinsics/erf.c\n\tand intrinsics/bessel.c here.\n\nFrom-SVN: r119204", "tree": {"sha": "7b1a43b523ba701ba6ef1200cc8b3c34a25a1e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b1a43b523ba701ba6ef1200cc8b3c34a25a1e66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7afebb02328cbaeae28f6954f6e4c2999007099a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afebb02328cbaeae28f6954f6e4c2999007099a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afebb02328cbaeae28f6954f6e4c2999007099a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afebb02328cbaeae28f6954f6e4c2999007099a/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9406549c9ff749822cba6ea283708ef950d70ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9406549c9ff749822cba6ea283708ef950d70ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9406549c9ff749822cba6ea283708ef950d70ab3"}], "stats": {"total": 306, "additions": 154, "deletions": 152}, "files": [{"sha": "97e7f3a2c2bdb6efac546d77e989c12b66a6a34c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7afebb02328cbaeae28f6954f6e4c2999007099a", "patch": "@@ -1,3 +1,13 @@\n+2006-11-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* Makefile.am: Remove intrinsics/erf.c and intrinsics/bessel.c.\n+\t* Makefile.in: Regenerate.\n+\t* intrinsics/erf.c: Remove.\n+\t* intrinsics/bessel.c: Remove.\n+\t* c99_protos.h: Add prototypes for bessel and error functions.\n+\t* intrinsics/c99_functions.c: Move content for intrinsics/erf.c\n+\tand intrinsics/bessel.c here.\n+\n 2006-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* io/io.h (unit_flags): Add new flag has_recl."}, {"sha": "b6bf05b2dc64a6471ae30db11d3c5841d6984f73", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=7afebb02328cbaeae28f6954f6e4c2999007099a", "patch": "@@ -43,7 +43,6 @@ intrinsics/associated.c \\\n intrinsics/abort.c \\\n intrinsics/access.c \\\n intrinsics/args.c \\\n-intrinsics/bessel.c \\\n intrinsics/c99_functions.c \\\n intrinsics/chdir.c \\\n intrinsics/chmod.c \\\n@@ -53,7 +52,6 @@ intrinsics/cshift0.c \\\n intrinsics/ctime.c \\\n intrinsics/date_and_time.c \\\n intrinsics/env.c \\\n-intrinsics/erf.c \\\n intrinsics/eoshift0.c \\\n intrinsics/eoshift2.c \\\n intrinsics/etime.c \\"}, {"sha": "c73bb0d74eb9d8ac3a38f07cc3b43023c34eab54", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=7afebb02328cbaeae28f6954f6e4c2999007099a", "patch": "@@ -169,9 +169,9 @@ am__objects_30 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n am__objects_31 = close.lo file_pos.lo format.lo inquire.lo \\\n \tlist_read.lo lock.lo open.lo read.lo size_from_kind.lo \\\n \ttransfer.lo unit.lo unix.lo write.lo\n-am__objects_32 = associated.lo abort.lo access.lo args.lo bessel.lo \\\n+am__objects_32 = associated.lo abort.lo access.lo args.lo \\\n \tc99_functions.lo chdir.lo chmod.lo clock.lo cpu_time.lo \\\n-\tcshift0.lo ctime.lo date_and_time.lo env.lo erf.lo eoshift0.lo \\\n+\tcshift0.lo ctime.lo date_and_time.lo env.lo eoshift0.lo \\\n \teoshift2.lo etime.lo exit.lo fget.lo flush.lo fnum.lo ftell.lo \\\n \tgerror.lo getcwd.lo getlog.lo getXid.lo hostnm.lo kill.lo \\\n \tierrno.lo ishftc.lo link.lo malloc.lo mvbits.lo move_alloc.lo \\\n@@ -402,7 +402,6 @@ intrinsics/associated.c \\\n intrinsics/abort.c \\\n intrinsics/access.c \\\n intrinsics/args.c \\\n-intrinsics/bessel.c \\\n intrinsics/c99_functions.c \\\n intrinsics/chdir.c \\\n intrinsics/chmod.c \\\n@@ -412,7 +411,6 @@ intrinsics/cshift0.c \\\n intrinsics/ctime.c \\\n intrinsics/date_and_time.c \\\n intrinsics/env.c \\\n-intrinsics/erf.c \\\n intrinsics/eoshift0.c \\\n intrinsics/eoshift2.c \\\n intrinsics/etime.c \\\n@@ -2358,9 +2356,6 @@ access.lo: intrinsics/access.c\n args.lo: intrinsics/args.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o args.lo `test -f 'intrinsics/args.c' || echo '$(srcdir)/'`intrinsics/args.c\n \n-bessel.lo: intrinsics/bessel.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bessel.lo `test -f 'intrinsics/bessel.c' || echo '$(srcdir)/'`intrinsics/bessel.c\n-\n c99_functions.lo: intrinsics/c99_functions.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c99_functions.lo `test -f 'intrinsics/c99_functions.c' || echo '$(srcdir)/'`intrinsics/c99_functions.c\n \n@@ -2388,9 +2383,6 @@ date_and_time.lo: intrinsics/date_and_time.c\n env.lo: intrinsics/env.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o env.lo `test -f 'intrinsics/env.c' || echo '$(srcdir)/'`intrinsics/env.c\n \n-erf.lo: intrinsics/erf.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o erf.lo `test -f 'intrinsics/erf.c' || echo '$(srcdir)/'`intrinsics/erf.c\n-\n eoshift0.lo: intrinsics/eoshift0.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o eoshift0.lo `test -f 'intrinsics/eoshift0.c' || echo '$(srcdir)/'`intrinsics/eoshift0.c\n "}, {"sha": "26c0aa2b54702c1d9ef1315bc3c5e825ed2edf93", "filename": "libgfortran/c99_protos.h", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2Fc99_protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2Fc99_protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fc99_protos.h?ref=7afebb02328cbaeae28f6954f6e4c2999007099a", "patch": "@@ -185,6 +185,53 @@ extern double round(double);\n extern float roundf(float);\n #endif\n \n+/* Wrappers for systems without the various C99 single precision Bessel\n+   functions.  */\n+\n+#if defined(HAVE_J0) && ! defined(HAVE_J0F)\n+#define HAVE_J0F 1\n+extern float j0f (float);\n+#endif\n+\n+#if defined(HAVE_J1) && !defined(HAVE_J1F)\n+#define HAVE_J1F 1\n+extern float j1f (float);\n+#endif\n+\n+#if defined(HAVE_JN) && !defined(HAVE_JNF)\n+#define HAVE_JNF 1\n+extern float jnf (int, float);\n+#endif\n+\n+#if defined(HAVE_Y0) && !defined(HAVE_Y0F)\n+#define HAVE_Y0F 1\n+extern float y0f (float);\n+#endif\n+\n+#if defined(HAVE_Y1) && !defined(HAVE_Y1F)\n+#define HAVE_Y1F 1\n+extern float y1f (float);\n+#endif\n+\n+#if defined(HAVE_YN) && !defined(HAVE_YNF)\n+#define HAVE_YNF 1\n+extern float ynf (int, float);\n+#endif\n+\n+\n+/* Wrappers for systems without the C99 erff() and erfcf() functions.  */\n+\n+#if defined(HAVE_ERF) && !defined(HAVE_ERFF)\n+#define HAVE_ERFF 1\n+extern float erff (float);\n+#endif\n+\n+#if defined(HAVE_ERFC) && !defined(HAVE_ERFCF)\n+#define HAVE_ERFCF 1\n+extern float erfcf (float);\n+#endif\n+\n+\n \n /* log10l is needed on all platforms for decimal I/O */\n #ifndef HAVE_LOG10L"}, {"sha": "69facd6e58f9edc738319ff6e8e4e0bb844d52bf", "filename": "libgfortran/intrinsics/bessel.c", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9406549c9ff749822cba6ea283708ef950d70ab3/libgfortran%2Fintrinsics%2Fbessel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9406549c9ff749822cba6ea283708ef950d70ab3/libgfortran%2Fintrinsics%2Fbessel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fbessel.c?ref=9406549c9ff749822cba6ea283708ef950d70ab3", "patch": "@@ -1,92 +0,0 @@\n-/* Wrapper for systems without the various C99 single precision Bessel\n-   functions.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-#if HAVE_J0 && !HAVE_J0F\n-extern float j0f (float);\n-\n-float\n-j0f (float x)\n-{\n-  return (float) j0 ((double) x);\n-}\n-#endif\n-\n-#if HAVE_J1 && !HAVE_J1F\n-extern float j1f (float);\n-\n-float j1f (float x)\n-{\n-  return (float) j1 ((double) x);\n-}\n-#endif\n-\n-#if HAVE_JN && !HAVE_JNF\n-extern float jnf (int, float);\n-\n-float\n-jnf (int n, float x)\n-{\n-  return (float) jn (n, (double) x);\n-}\n-#endif\n-\n-#if HAVE_Y0 && !HAVE_Y0F\n-extern float y0f (float);\n-\n-float\n-y0f (float x)\n-{\n-  return (float) y0 ((double) x);\n-}\n-#endif\n-\n-#if HAVE_Y1 && !HAVE_Y1F\n-extern float y1f (float);\n-\n-float\n-y1f (float x)\n-{\n-  return (float) y1 ((double) x);\n-}\n-#endif\n-\n-#if HAVE_YN && !HAVE_YNF\n-extern float ynf (int, float);\n-\n-float\n-ynf (int n, float x)\n-{\n-  return (float) yn (n, (double) x);\n-}\n-#endif"}, {"sha": "96b5ef88851a39aaa6d6bc837a2ad32a46c574be", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afebb02328cbaeae28f6954f6e4c2999007099a/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=7afebb02328cbaeae28f6954f6e4c2999007099a", "patch": "@@ -76,6 +76,101 @@ float complex clog10f(float complex);\n double complex clog10(double complex);\n long double complex clog10l(long double complex);\n \n+\n+/* Wrappers for systems without the various C99 single precision Bessel\n+   functions.  */\n+\n+#if defined(HAVE_J0) && ! defined(HAVE_J0F)\n+#define HAVE_J0F 1\n+extern float j0f (float);\n+\n+float\n+j0f (float x)\n+{\n+  return (float) j0 ((double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_J1) && !defined(HAVE_J1F)\n+#define HAVE_J1F 1\n+extern float j1f (float);\n+\n+float j1f (float x)\n+{\n+  return (float) j1 ((double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_JN) && !defined(HAVE_JNF)\n+#define HAVE_JNF 1\n+extern float jnf (int, float);\n+\n+float\n+jnf (int n, float x)\n+{\n+  return (float) jn (n, (double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_Y0) && !defined(HAVE_Y0F)\n+#define HAVE_Y0F 1\n+extern float y0f (float);\n+\n+float\n+y0f (float x)\n+{\n+  return (float) y0 ((double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_Y1) && !defined(HAVE_Y1F)\n+#define HAVE_Y1F 1\n+extern float y1f (float);\n+\n+float\n+y1f (float x)\n+{\n+  return (float) y1 ((double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_YN) && !defined(HAVE_YNF)\n+#define HAVE_YNF 1\n+extern float ynf (int, float);\n+\n+float\n+ynf (int n, float x)\n+{\n+  return (float) yn (n, (double) x);\n+}\n+#endif\n+\n+\n+/* Wrappers for systems without the C99 erff() and erfcf() functions.  */\n+\n+#if defined(HAVE_ERF) && !defined(HAVE_ERFF)\n+#define HAVE_ERFF 1\n+extern float erff (float);\n+\n+float\n+erff (float x)\n+{\n+  return (float) erf ((double) x);\n+}\n+#endif\n+\n+#if defined(HAVE_ERFC) && !defined(HAVE_ERFCF)\n+#define HAVE_ERFCF 1\n+extern float erfcf (float);\n+\n+float\n+erfcf (float x)\n+{\n+  return (float) erfc ((double) x);\n+}\n+#endif\n+\n+\n #ifndef HAVE_ACOSF\n #define HAVE_ACOSF 1\n float"}, {"sha": "bf9ecca8985b9a146bc966bd88003bdde65407ef", "filename": "libgfortran/intrinsics/erf.c", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9406549c9ff749822cba6ea283708ef950d70ab3/libgfortran%2Fintrinsics%2Ferf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9406549c9ff749822cba6ea283708ef950d70ab3/libgfortran%2Fintrinsics%2Ferf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferf.c?ref=9406549c9ff749822cba6ea283708ef950d70ab3", "patch": "@@ -1,48 +0,0 @@\n-/* Wrapper for systems without the C99 erff() and erfcf() functions\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-#if HAVE_ERF && !HAVE_ERFF\n-float\n-erff (float x)\n-{\n-  return (float) erf ((double) x);\n-}\n-#endif\n-\n-#if HAVE_ERFC && !HAVE_ERFCF\n-float\n-erfcf (float x)\n-{\n-  return (float) erfc ((double) x);\n-}\n-#endif"}]}