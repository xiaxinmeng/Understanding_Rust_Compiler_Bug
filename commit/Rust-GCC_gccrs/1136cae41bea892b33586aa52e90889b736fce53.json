{"sha": "1136cae41bea892b33586aa52e90889b736fce53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzNmNhZTQxYmVhODkyYjMzNTg2YWE1MmU5MDg4OWI3MzZmY2U1Mw==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-05-02T16:14:53Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-05-02T16:14:53Z"}, "message": "tree-ssa-loop-ivopts.c (struct iv_ca): Rename n_regs to n_invs.\n\n\t* tree-ssa-loop-ivopts.c (struct iv_ca): Rename n_regs to n_invs.\n\t(ivopts_global_cost_for_size): Rename parameter and update uses.\n\t(iv_ca_recount_cost): Update uses.\n\t(iv_ca_set_remove_invs, iv_ca_set_no_cp): Record invariants and\n\tcandidates seperately in n_invs and n_cands.\n\t(iv_ca_set_add_invs, iv_ca_set_cp, iv_ca_new): Ditto.\n\nFrom-SVN: r247515", "tree": {"sha": "74d3c208eed8ea77322baacc135dfa7b9a8161fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74d3c208eed8ea77322baacc135dfa7b9a8161fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1136cae41bea892b33586aa52e90889b736fce53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1136cae41bea892b33586aa52e90889b736fce53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1136cae41bea892b33586aa52e90889b736fce53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1136cae41bea892b33586aa52e90889b736fce53/comments", "author": null, "committer": null, "parents": [{"sha": "1c52c69ff0c82a27d8a6884310861138ef708ca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c52c69ff0c82a27d8a6884310861138ef708ca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c52c69ff0c82a27d8a6884310861138ef708ca2"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "04323a3cfc1ca62a081660b6cffbf4152b0ff680", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1136cae41bea892b33586aa52e90889b736fce53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1136cae41bea892b33586aa52e90889b736fce53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1136cae41bea892b33586aa52e90889b736fce53", "patch": "@@ -1,3 +1,12 @@\n+2017-05-02  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (struct iv_ca): Rename n_regs to n_invs.\n+\t(ivopts_global_cost_for_size): Rename parameter and update uses.\n+\t(iv_ca_recount_cost): Update uses.\n+\t(iv_ca_set_remove_invs, iv_ca_set_no_cp): Record invariants and\n+\tcandidates seperately in n_invs and n_cands.\n+\t(iv_ca_set_add_invs, iv_ca_set_cp, iv_ca_new): Ditto.\n+\n 2017-05-02  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (struct walk_tree_data): New."}, {"sha": "409a35dea737d8ff029f49960ab8f19e6597dcad", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1136cae41bea892b33586aa52e90889b736fce53/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1136cae41bea892b33586aa52e90889b736fce53/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=1136cae41bea892b33586aa52e90889b736fce53", "patch": "@@ -612,8 +612,9 @@ struct iv_ca\n   /* The number of candidates in the set.  */\n   unsigned n_cands;\n \n-  /* Total number of registers needed.  */\n-  unsigned n_regs;\n+  /* The number of invariants needed, including both invariant variants and\n+     invariant expressions.  */\n+  unsigned n_invs;\n \n   /* Total cost of expressing uses.  */\n   comp_cost cand_use_cost;\n@@ -5989,15 +5990,17 @@ determine_iv_costs (struct ivopts_data *data)\n     fprintf (dump_file, \"\\n\");\n }\n \n-/* Calculates cost for having SIZE induction variables.  */\n+/* Calculates cost for having N_REGS registers.  This number includes\n+   induction variables, invariant variables and invariant expressions.  */\n \n static unsigned\n-ivopts_global_cost_for_size (struct ivopts_data *data, unsigned size)\n+ivopts_global_cost_for_size (struct ivopts_data *data, unsigned n_regs)\n {\n-  /* We add size to the cost, so that we prefer eliminating ivs\n-     if possible.  */\n-  return size + estimate_reg_pressure_cost (size, data->regs_used, data->speed,\n-\t\t\t\t\t    data->body_includes_call);\n+  unsigned cost = estimate_reg_pressure_cost (n_regs,\n+\t\t\t\t\t      data->regs_used, data->speed,\n+\t\t\t\t\t      data->body_includes_call);\n+  /* Add n_regs to the cost, so that we prefer eliminating ivs if possible.  */\n+  return n_regs + cost;\n }\n \n /* For each size of the induction variable set determine the penalty.  */\n@@ -6100,9 +6103,7 @@ iv_ca_recount_cost (struct ivopts_data *data, struct iv_ca *ivs)\n   comp_cost cost = ivs->cand_use_cost;\n \n   cost += ivs->cand_cost;\n-\n-  cost += ivopts_global_cost_for_size (data, ivs->n_regs);\n-\n+  cost += ivopts_global_cost_for_size (data, ivs->n_invs + ivs->n_cands);\n   ivs->cost = cost;\n }\n \n@@ -6123,7 +6124,7 @@ iv_ca_set_remove_invs (struct iv_ca *ivs, bitmap invs, unsigned *n_inv_uses)\n     {\n       n_inv_uses[iid]--;\n       if (n_inv_uses[iid] == 0)\n-\tivs->n_regs--;\n+\tivs->n_invs--;\n     }\n }\n \n@@ -6148,10 +6149,8 @@ iv_ca_set_no_cp (struct ivopts_data *data, struct iv_ca *ivs,\n   if (ivs->n_cand_uses[cid] == 0)\n     {\n       bitmap_clear_bit (ivs->cands, cid);\n-      ivs->n_regs--;\n       ivs->n_cands--;\n       ivs->cand_cost -= cp->cand->cost;\n-\n       iv_ca_set_remove_invs (ivs, cp->cand->inv_vars, ivs->n_inv_var_uses);\n     }\n \n@@ -6178,7 +6177,7 @@ iv_ca_set_add_invs (struct iv_ca *ivs, bitmap invs, unsigned *n_inv_uses)\n     {\n       n_inv_uses[iid]++;\n       if (n_inv_uses[iid] == 1)\n-\tivs->n_regs++;\n+\tivs->n_invs++;\n     }\n }\n \n@@ -6206,10 +6205,8 @@ iv_ca_set_cp (struct ivopts_data *data, struct iv_ca *ivs,\n       if (ivs->n_cand_uses[cid] == 1)\n \t{\n \t  bitmap_set_bit (ivs->cands, cid);\n-\t  ivs->n_regs++;\n \t  ivs->n_cands++;\n \t  ivs->cand_cost += cp->cand->cost;\n-\n \t  iv_ca_set_add_invs (ivs, cp->cand->inv_vars, ivs->n_inv_var_uses);\n \t}\n \n@@ -6421,7 +6418,7 @@ iv_ca_new (struct ivopts_data *data)\n   nw->n_cand_uses = XCNEWVEC (unsigned, data->vcands.length ());\n   nw->cands = BITMAP_ALLOC (NULL);\n   nw->n_cands = 0;\n-  nw->n_regs = 0;\n+  nw->n_invs = 0;\n   nw->cand_use_cost = no_cost;\n   nw->cand_cost = 0;\n   nw->n_inv_var_uses = XCNEWVEC (unsigned, data->max_inv_var_id + 1);"}]}