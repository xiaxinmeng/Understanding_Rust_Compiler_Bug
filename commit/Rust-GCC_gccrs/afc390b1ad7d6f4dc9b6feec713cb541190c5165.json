{"sha": "afc390b1ad7d6f4dc9b6feec713cb541190c5165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjMzkwYjFhZDdkNmY0ZGM5YjZmZWVjNzEzY2I1NDExOTBjNTE2NQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-12-06T19:31:25Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-12-06T19:31:25Z"}, "message": "jcf-write.c (generate_byecode_insns): Fixed indentation for COMPOUND_EXPR and FIX_TRUNC_EXPR cases.\n\nTue Nov 30 12:28:34 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * jcf-write.c (generate_byecode_insns): Fixed indentation for\n        COMPOUND_EXPR and FIX_TRUNC_EXPR cases.\n\n        * parse.y (patch_assignment): Removed bogus final class test on\n        lhs when checking on whether to emit an ArrayStoreException runtime\n        check.\n        * expr.c (expand_java_arraystore): Likewise.\n\nFrom-SVN: r30806", "tree": {"sha": "44b6a0178108cbc0e3a663d4073804dd8a72a7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b6a0178108cbc0e3a663d4073804dd8a72a7a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc390b1ad7d6f4dc9b6feec713cb541190c5165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc390b1ad7d6f4dc9b6feec713cb541190c5165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc390b1ad7d6f4dc9b6feec713cb541190c5165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc390b1ad7d6f4dc9b6feec713cb541190c5165/comments", "author": null, "committer": null, "parents": [{"sha": "04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04572513c7bf1b351b95c2f6ecf78fec8cbe306a"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "276dbd45947d7bb47f9a5dbee5f15e2d8e5eb189", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=afc390b1ad7d6f4dc9b6feec713cb541190c5165", "patch": "@@ -1,3 +1,13 @@\n+Tue Nov 30 12:28:34 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+        * jcf-write.c (generate_byecode_insns): Fixed indentation for\n+        COMPOUND_EXPR and FIX_TRUNC_EXPR cases.\n+\n+        * parse.y (patch_assignment): Removed bogus final class test on\n+        lhs when checking on whether to emit an ArraySoreException runtime\n+        check.\n+        * expr.c (expand_java_arraystore): Likewise. \n+\n 1999-11-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* except.c (emit_handlers): Zero catch_clauses after emitting them."}, {"sha": "1b1cad2eeafbcc653c35638265f296cdd7adf119", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=afc390b1ad7d6f4dc9b6feec713cb541190c5165", "patch": "@@ -874,8 +874,7 @@ expand_java_arraystore (rhs_type_node)\n   index = save_expr (index);\n   array = save_expr (array);\n \n-  if (TREE_CODE (rhs_type_node) == POINTER_TYPE\n-      && !CLASS_FINAL (TYPE_NAME (TREE_TYPE (rhs_type_node))))\n+  if (TREE_CODE (rhs_type_node) == POINTER_TYPE)\n     {\n       tree check = build (CALL_EXPR, void_type_node,\n \t\t\t  build_address_of (soft_checkarraystore_node),"}, {"sha": "a3710416ee697b787b8566af20818dc18799ce92", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=afc390b1ad7d6f4dc9b6feec713cb541190c5165", "patch": "@@ -1462,8 +1462,8 @@ generate_bytecode_insns (exp, target, state)\n \t}\n       break;\n       case COMPOUND_EXPR:\t\n-\tgenerate_bytecode_insns (TREE_OPERAND (exp, 0), IGNORE_TARGET, state);\n-\tgenerate_bytecode_insns (TREE_OPERAND (exp, 1), target, state);\n+      generate_bytecode_insns (TREE_OPERAND (exp, 0), IGNORE_TARGET, state);\n+      generate_bytecode_insns (TREE_OPERAND (exp, 1), target, state);\n       break;\n     case EXPR_WITH_FILE_LOCATION:\n       {\n@@ -2140,7 +2140,8 @@ generate_bytecode_insns (exp, target, state)\n \t  {\n \t    if (TREE_CODE (exp) == CONVERT_EXPR)\n \t      {\n-\t\tint index = find_class_constant (&state->cpool, TREE_TYPE (dst_type));\n+\t\tint index = find_class_constant (&state->cpool, \n+\t\t\t\t\t\t TREE_TYPE (dst_type));\n \t\tRESERVE (3);\n \t\tOP1 (OPCODE_checkcast);\n \t\tOP2 (index);"}, {"sha": "65a3f0935580b6ba9fe343838ec7e6229eb2c029", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc390b1ad7d6f4dc9b6feec713cb541190c5165/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=afc390b1ad7d6f4dc9b6feec713cb541190c5165", "patch": "@@ -9193,8 +9193,7 @@ patch_assignment (node, wfl_op1, wfl_op2)\n   if (!flag_emit_class_files\n       && !flag_emit_xref\n       && lvalue_from_array \n-      && JREFERENCE_TYPE_P (TYPE_ARRAY_ELEMENT (lhs_type))\n-      && !CLASS_FINAL (TYPE_NAME (GET_SKIP_TYPE (rhs_type))))\n+      && JREFERENCE_TYPE_P (TYPE_ARRAY_ELEMENT (lhs_type)))\n     {\n       tree check;\n       tree base = lvalue;"}]}