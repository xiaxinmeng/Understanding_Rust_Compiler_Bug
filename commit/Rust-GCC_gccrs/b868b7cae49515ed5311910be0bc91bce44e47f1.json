{"sha": "b868b7cae49515ed5311910be0bc91bce44e47f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2OGI3Y2FlNDk1MTVlZDUzMTE5MTBiZTBiYzkxYmNlNDRlNDdmMQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-28T14:40:08Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-28T14:40:08Z"}, "message": "i386.md (prefetch): Allow TARGET_AVX512PF.\n\n        * config/i386/i386.md (prefetch): Allow TARGET_AVX512PF.\n        (*prefetch_avx512pf_<mode>): New.\n        * config/i386/sse.md (avx512f_vmcmp<mode>3): Ditto.\n        (avx512f_maskcmp<mode>3): Ditto.\n        (vashrv16si3): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r204130", "tree": {"sha": "4b5b7439ec69c9d1bee286053d86438a406fdcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b5b7439ec69c9d1bee286053d86438a406fdcd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b868b7cae49515ed5311910be0bc91bce44e47f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b868b7cae49515ed5311910be0bc91bce44e47f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b868b7cae49515ed5311910be0bc91bce44e47f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b868b7cae49515ed5311910be0bc91bce44e47f1/comments", "author": null, "committer": null, "parents": [{"sha": "c003c6d6c3398cd119bbbaf2a2bb8a6134022ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c003c6d6c3398cd119bbbaf2a2bb8a6134022ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c003c6d6c3398cd119bbbaf2a2bb8a6134022ff8"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "1834b46a2b868dcfe6994e11e745b31e012b848b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b868b7cae49515ed5311910be0bc91bce44e47f1", "patch": "@@ -1,3 +1,19 @@\n+2013-10-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.md (prefetch): Allow TARGET_AVX512PF.\n+\t(*prefetch_avx512pf_<mode>): New.\n+\t* config/i386/sse.md (avx512f_vmcmp<mode>3): Ditto.\n+\t(avx512f_maskcmp<mode>3): Ditto.\n+\t(vashrv16si3): Ditto.\n+\n 2013-10-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "79db5f82f24bce805faa0961d7b4112db67296dc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b868b7cae49515ed5311910be0bc91bce44e47f1", "patch": "@@ -17627,7 +17627,7 @@\n   [(prefetch (match_operand 0 \"address_operand\")\n \t     (match_operand:SI 1 \"const_int_operand\")\n \t     (match_operand:SI 2 \"const_int_operand\"))]\n-  \"TARGET_PREFETCH_SSE || TARGET_PRFCHW\"\n+  \"TARGET_PREFETCH_SSE || TARGET_PRFCHW || TARGET_AVX512PF\"\n {\n   bool write = INTVAL (operands[1]) != 0;\n   int locality = INTVAL (operands[2]);\n@@ -17638,7 +17638,9 @@\n      supported by SSE counterpart or the SSE prefetch is not available\n      (K6 machines).  Otherwise use SSE prefetch as it allows specifying\n      of locality.  */\n-  if (TARGET_PRFCHW && (write || !TARGET_PREFETCH_SSE))\n+  if (TARGET_AVX512PF && write)\n+    operands[2] = const1_rtx;\n+  else if (TARGET_PRFCHW && (write || !TARGET_PREFETCH_SSE))\n     operands[2] = GEN_INT (3);\n   else\n     operands[1] = const0_rtx;\n@@ -17681,6 +17683,18 @@\n \t(symbol_ref \"memory_address_length (operands[0], false)\"))\n    (set_attr \"memory\" \"none\")])\n \n+(define_insn \"*prefetch_avx512pf_<mode>\"\n+  [(prefetch (match_operand:P 0 \"address_operand\" \"p\")\n+\t     (const_int 1)\n+\t     (const_int 1))]\n+  \"TARGET_AVX512PF\"\n+  \"prefetchwt1\\t%a0\";\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set (attr \"length_address\")\n+\t(symbol_ref \"memory_address_length (operands[0], false)\"))\n+   (set_attr \"memory\" \"none\")])\n+\n (define_expand \"stack_protect_set\"\n   [(match_operand 0 \"memory_operand\")\n    (match_operand 1 \"memory_operand\")]"}, {"sha": "041ca64749328179a21e95c1e82b88ebe6c70856", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b868b7cae49515ed5311910be0bc91bce44e47f1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b868b7cae49515ed5311910be0bc91bce44e47f1", "patch": "@@ -2010,6 +2010,34 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"avx512f_vmcmp<mode>3\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n+\t(and:<avx512fmaskmode>\n+\t  (unspec:<avx512fmaskmode>\n+\t    [(match_operand:VF_128 1 \"register_operand\" \"v\")\n+\t     (match_operand:VF_128 2 \"nonimmediate_operand\" \"vm\")\n+\t     (match_operand:SI 3 \"const_0_to_31_operand\" \"n\")]\n+\t    UNSPEC_PCMP)\n+\t  (const_int 1)))]\n+  \"TARGET_AVX512F\"\n+  \"vcmp<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n+\n+(define_insn \"avx512f_maskcmp<mode>3\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n+\t(match_operator:<avx512fmaskmode> 3 \"sse_comparison_operator\"\n+\t  [(match_operand:VF 1 \"register_operand\" \"v\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \"vm\")]))]\n+  \"TARGET_SSE\"\n+  \"vcmp%D3<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"<sse>_comi\"\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n@@ -12148,6 +12176,12 @@\n     }\n })\n \n+(define_expand \"vashrv16si3\"\n+  [(set (match_operand:V16SI 0 \"register_operand\")\n+\t(ashiftrt:V16SI (match_operand:V16SI 1 \"register_operand\")\n+\t\t        (match_operand:V16SI 2 \"nonimmediate_operand\")))]\n+  \"TARGET_AVX512F\")\n+\n (define_expand \"vashrv8si3\"\n   [(set (match_operand:V8SI 0 \"register_operand\")\n \t(ashiftrt:V8SI (match_operand:V8SI 1 \"register_operand\")"}]}