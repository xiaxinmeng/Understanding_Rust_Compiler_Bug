{"sha": "a22455dfa1b41a8be2dd496a997ac13426f2f00f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIyNDU1ZGZhMWI0MWE4YmUyZGQ0OTZhOTk3YWMxMzQyNmYyZjAwZg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2001-12-01T12:04:16Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-12-01T12:04:16Z"}, "message": "unroll.c (loop_iterations): Give up on jumps with null JUMP_LABEL while scanning for multiple back edges.\n\n\t2001-12-01  Olivier Hainque <hainque@act-europe.fr>\n\n\t* unroll.c (loop_iterations): Give up on jumps with null JUMP_LABEL\n\twhile scanning for multiple back edges.\n\nFrom-SVN: r47510", "tree": {"sha": "4ba91b53f21ba59b9d363a851eb062923b73296e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba91b53f21ba59b9d363a851eb062923b73296e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a22455dfa1b41a8be2dd496a997ac13426f2f00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22455dfa1b41a8be2dd496a997ac13426f2f00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22455dfa1b41a8be2dd496a997ac13426f2f00f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22455dfa1b41a8be2dd496a997ac13426f2f00f/comments", "author": null, "committer": null, "parents": [{"sha": "8a155ecc2aff1c9ae5ebccaf6dd116e064442fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a155ecc2aff1c9ae5ebccaf6dd116e064442fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a155ecc2aff1c9ae5ebccaf6dd116e064442fb2"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "45aea6a3409701c9646a2702d637f8a6d6b9bf6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a22455dfa1b41a8be2dd496a997ac13426f2f00f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a22455dfa1b41a8be2dd496a997ac13426f2f00f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a22455dfa1b41a8be2dd496a997ac13426f2f00f", "patch": "@@ -1,3 +1,8 @@\n+2001-12-01  Olivier Hainque <hainque@act-europe.fr>\n+\n+\t* unroll.c (loop_iterations): Give up on jumps with null JUMP_LABEL\n+\twhile scanning for multiple back edges.\n+\n 2001-12-01  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* ginclude/ppc-asm.h (JUMP_TARGET): New macro."}, {"sha": "6502614daf46970f189aa393251888a3529cf3d0", "filename": "gcc/unroll.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a22455dfa1b41a8be2dd496a997ac13426f2f00f/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a22455dfa1b41a8be2dd496a997ac13426f2f00f/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=a22455dfa1b41a8be2dd496a997ac13426f2f00f", "patch": "@@ -3551,18 +3551,31 @@ loop_iterations (loop)\n \n       do\n \t{\n-\t  if (GET_CODE (temp) == JUMP_INSN\n-\t      /* Previous unrolling may have generated new insns not covered\n-\t\t by the uid_luid array.  */\n-\t      && INSN_UID (JUMP_LABEL (temp)) < max_uid_for_loop\n-\t      /* Check if we jump back into the loop body.  */\n-\t      && INSN_LUID (JUMP_LABEL (temp)) > INSN_LUID (loop->top)\n-\t      && INSN_LUID (JUMP_LABEL (temp)) < INSN_LUID (loop->cont))\n+\t  if (GET_CODE (temp) == JUMP_INSN)\n \t    {\n-\t      if (loop_dump_stream)\n-\t\tfprintf (loop_dump_stream,\n-\t\t\t \"Loop iterations: Loop has multiple back edges.\\n\");\n-\t      return 0;\n+\t      /* There are some kinds of jumps we can't deal with easily.  */\n+\t      if (JUMP_LABEL (temp) == 0)\n+\t\t{\n+\t\t  if (loop_dump_stream)\n+\t\t    fprintf\n+\t\t      (loop_dump_stream,\n+\t\t       \"Loop iterations: Jump insn has null JUMP_LABEL.\\n\");\n+\t\t  return 0;\n+\t\t}\n+\n+\t      if (/* Previous unrolling may have generated new insns not\n+\t\t     covered by the uid_luid array.  */\n+\t\t  INSN_UID (JUMP_LABEL (temp)) < max_uid_for_loop\n+\t\t  /* Check if we jump back into the loop body.  */\n+\t\t  && INSN_LUID (JUMP_LABEL (temp)) > INSN_LUID (loop->top)\n+\t\t  && INSN_LUID (JUMP_LABEL (temp)) < INSN_LUID (loop->cont))\n+\t\t{\n+\t\t  if (loop_dump_stream)\n+\t\t    fprintf \n+\t\t      (loop_dump_stream,\n+\t\t       \"Loop iterations: Loop has multiple back edges.\\n\");\n+\t\t  return 0;\n+\t\t}\n \t    }\n \t}\n       while ((temp = PREV_INSN (temp)) != loop->cont);"}]}