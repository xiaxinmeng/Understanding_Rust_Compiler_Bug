{"sha": "51287c1498c0fad7f7a794e4b170d229ecfce295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyODdjMTQ5OGMwZmFkN2Y3YTc5NGU0YjE3MGQyMjllY2ZjZTI5NQ==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2003-12-18T12:00:08Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2003-12-18T12:00:08Z"}, "message": "re PR c++/9154 (poor error message for \">>\" vs. \"> >\" for nested template args)\n\n\tPR c++/9154\n\t* g++.dg/template/error10.C: New test.\n\nFrom-SVN: r74777", "tree": {"sha": "5a2011429c610954669d35a7c112d14e1d1c9a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a2011429c610954669d35a7c112d14e1d1c9a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51287c1498c0fad7f7a794e4b170d229ecfce295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51287c1498c0fad7f7a794e4b170d229ecfce295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51287c1498c0fad7f7a794e4b170d229ecfce295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51287c1498c0fad7f7a794e4b170d229ecfce295/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d5297fad469676a2ac36f512fdcc6ef9eb7e251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d5297fad469676a2ac36f512fdcc6ef9eb7e251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d5297fad469676a2ac36f512fdcc6ef9eb7e251"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "d4524f3aabdf97f9d75cff94776597767c8a180a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51287c1498c0fad7f7a794e4b170d229ecfce295/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51287c1498c0fad7f7a794e4b170d229ecfce295/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51287c1498c0fad7f7a794e4b170d229ecfce295", "patch": "@@ -1,3 +1,8 @@\n+2003-12-18  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/9154\n+\t* g++.dg/template/error10.C: New test.\n+\n 2003-12-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/eh/simd-1.C: XFAIL on SPARC."}, {"sha": "a25c4bbddb976ac4e24d5d8fd0cd7fdcac14b1e8", "filename": "gcc/testsuite/g++.dg/template/error10.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51287c1498c0fad7f7a794e4b170d229ecfce295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51287c1498c0fad7f7a794e4b170d229ecfce295/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror10.C?ref=51287c1498c0fad7f7a794e4b170d229ecfce295", "patch": "@@ -0,0 +1,70 @@\n+// { dg-do compile }\n+// Origin: <tilps at hotmail dot com>\n+// c++/9154: poor error message for \">>\" vs \"> >\" in template argument list\n+\n+\n+/*\n+ * Test that the error message is issued properly\n+ */\n+template <class T>\n+class A {};\n+\n+A<A<int>> blah;  // { dg-error \"should be `> >' within\" }\n+A<int>> blah2; // { dg-error \"spurious `>>'\" }\n+\n+\n+/*\n+ * Test that a few valid constructs containing a \">>\" token in a\n+ * template argument list are handled correctly.\n+ */\n+template <int N>\n+void B(void) {}\n+\n+int Btest()\n+{\n+  B<256 >> 4>();\n+}\n+\n+template <int N = 123>>4>\n+struct C {};\n+\n+template <int>      struct D {};\n+template <typename> struct E {};\n+\n+E<D< 1>>2 > > E1;\n+\n+const int x = 0;\n+E<D< 1>>x > > E2;\n+\n+template <int> struct F {\n+  typedef int I;\n+};\n+\n+template <typename T = F< 1>>2 >::I>\n+struct G {};\n+\n+/*\n+ * In this special case, a valid type-id (H() is a function type) is followed\n+ * by '>>', but the argument should still be parsed as an expression, which\n+ * will then be rejected as non-constant expression.\n+ */\n+struct H\n+{\n+  int operator >>(int);\n+};\n+\n+template <int V> struct L {};\n+L<H() >> 5> l;  // { dg-error \"\" \"non-constant\" }\n+\n+\n+/*\n+ * This case used to not emit the nice error message because of a typo\n+ *  in the code.\n+ */\n+template <void (*)(void)>\n+struct K {};\n+\n+void KFunc(void);\n+\n+A<K<&KFunc>> k1;  // { dg-error \"should be `> >' within\" }\n+K<&KFunc>> k2; // { dg-error \"spurious `>>'\" }"}]}