{"sha": "f96af171bee93486896407ccad0e1e4dc200bc0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk2YWYxNzFiZWU5MzQ4Njg5NjQwN2NjYWQwZTFlNGRjMjAwYmMwYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-22T10:06:50Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-22T10:06:50Z"}, "message": "contrib: script to create a new vendor branch\n\nThis script is intended to create a new vendor branch.  Doing so is\nnot completely obvious if you are not familiar with the upstream\nstructure, so this takes the pain out of getting it right.\n\nIt doesn't check out the branch locally, but does set everything up so\nthat, if you have push enabled for your vendor branches, then\n\n  git push vendors/<vendor> <branch>\n\nwill work as expected.\n\nRun the script as\n\n  contrib/git-add-vendor-branch.sh <vendor>/<branch> <start-point>\n\nthe <vendor> space must have previously been set up in the way\ngit-fetch-vendor.sh expects.\n\n    * git-add-vendor-branch.sh: New file.", "tree": {"sha": "4afef3154d64f3e1600efd4a8f512c780e6ccff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4afef3154d64f3e1600efd4a8f512c780e6ccff7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f96af171bee93486896407ccad0e1e4dc200bc0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96af171bee93486896407ccad0e1e4dc200bc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96af171bee93486896407ccad0e1e4dc200bc0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96af171bee93486896407ccad0e1e4dc200bc0c/comments", "author": null, "committer": null, "parents": [{"sha": "c892d8f58f6fed46c343bdb6dd4d365f08f801b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c892d8f58f6fed46c343bdb6dd4d365f08f801b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c892d8f58f6fed46c343bdb6dd4d365f08f801b8"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "c5e4604d6f5f2b3c6366faa5c338ee2a79502539", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f96af171bee93486896407ccad0e1e4dc200bc0c/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f96af171bee93486896407ccad0e1e4dc200bc0c/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=f96af171bee93486896407ccad0e1e4dc200bc0c", "patch": "@@ -1,3 +1,7 @@\n+2020-01-22  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* git-add-vendor-branch.sh: New file.\n+\n 2020-01-20  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc-git-customization.sh: Check that user-supplied remote"}, {"sha": "8fa86682151384297a7dce76aa681ffbc0c5c5e6", "filename": "contrib/git-add-vendor-branch.sh", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f96af171bee93486896407ccad0e1e4dc200bc0c/contrib%2Fgit-add-vendor-branch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f96af171bee93486896407ccad0e1e4dc200bc0c/contrib%2Fgit-add-vendor-branch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-add-vendor-branch.sh?ref=f96af171bee93486896407ccad0e1e4dc200bc0c", "patch": "@@ -0,0 +1,48 @@\n+#! /bin/sh -e\n+\n+# Create a new upstream vendor branch.\n+\n+# Usage:\n+#  contrib/git-add-vendor-branch.sh <vendor>/<branch-name> <base>\n+\n+usage ()\n+{\n+    echo \"Usage:\"\n+    echo \"  $0 <vendor>/<branch-name> <start-point>\"\n+    echo\n+    echo \"<vendor> must have already been set up using contrib/git-fetch-vendor.sh\"\n+    exit 1\n+}\n+\n+if [ $# != 2 ]\n+then\n+    usage\n+fi\n+\n+vendor=$(echo \"$1\" | sed -r \"s:([^/]*)/.*$:\\1:\")\n+branch=$(echo \"$1\" | sed -r \"s:[^/]*/(.*)$:\\1:\")\n+start=$2\n+\n+# Sanity check the new branch argument.  If there is no '/', then the\n+# vendor will be the same as the entire first argument.\n+if [ -z \"$vendor\" -o -z \"$branch\" -o ${vendor} = $1 ]\n+then\n+    usage\n+fi\n+\n+# Check that we know about the vendor\n+url=$(git config --get \"remote.vendors/${vendor}.url\"||true)\n+if [ -z \"$url\" ]\n+then\n+    echo \"Cannot locate remote data for vendor ${vendor}.  Have you set it up?\"\n+    exit 1\n+fi\n+\n+git branch --no-track ${vendor}/${branch} ${start}\n+git push vendors/${vendor} ${vendor}/${branch}:refs/vendors/${vendor}/heads/${branch}\n+git fetch -q vendors/${vendor}\n+git branch --set-upstream-to=remotes/vendors/${vendor}/${branch} ${vendor}/$branch\n+echo \"You are now ready to check out ${vendor}/${branch}\"\n+echo \"To push the branch upstream, use:\"\n+echo\n+echo \"git push vendors/${vendor} ${vendor}/${branch}\""}]}