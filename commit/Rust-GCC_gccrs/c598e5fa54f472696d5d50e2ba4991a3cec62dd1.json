{"sha": "c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5OGU1ZmE1NGY0NzI2OTZkNWQ1MGUyYmE0OTkxYTNjZWM2MmRkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-17T22:00:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-17T22:00:47Z"}, "message": "re PR c++/47504 ([C++0x] some constexpr calculations erroneously overflow when using negative numbers)\n\n\tPR c++/47504\n\t* semantics.c (cxx_eval_constant_expression) [NOP_EXPR]: Don't let\n\tthe conversion set TREE_OVERFLOW.\n\nFrom-SVN: r171116", "tree": {"sha": "01325d328412e2fe507949df5ebe3ca0566672e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01325d328412e2fe507949df5ebe3ca0566672e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b29c87a61bf1ea9aa4691dd3c07ef79119d790a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b29c87a61bf1ea9aa4691dd3c07ef79119d790a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b29c87a61bf1ea9aa4691dd3c07ef79119d790a"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "51535f5168bc91f862210f316b66d2f609d027f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "patch": "@@ -1,5 +1,9 @@\n 2011-03-17  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47504\n+\t* semantics.c (cxx_eval_constant_expression) [NOP_EXPR]: Don't let\n+\tthe conversion set TREE_OVERFLOW.\n+\n \tCore 1212\n \t* semantics.c (finish_decltype_type): Return T&& for xvalue.\n \t* typeck.c (unlowered_expr_type): Preserve cv-quals."}, {"sha": "b6d1008b490dce728fa2a31427a3e247d14bbdaa", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "patch": "@@ -6991,6 +6991,11 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n \t     conversion.  */\n \t  return fold (t);\n \tr = fold_build1 (TREE_CODE (t), to, op);\n+\t/* Conversion of an out-of-range value has implementation-defined\n+\t   behavior; the language considers it different from arithmetic\n+\t   overflow, which is undefined.  */\n+\tif (TREE_OVERFLOW_P (r) && !TREE_OVERFLOW_P (op))\n+\t  TREE_OVERFLOW (r) = false;\n       }\n       break;\n "}, {"sha": "c72c0e48cd1eacc896948fc9e1b1772909d7a60b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "patch": "@@ -1,3 +1,8 @@\n+2011-03-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-overflow2.C: New.\n+\t* g++.dg/cpp0x/constexpr-data2.C: Remove FIXME.\n+\n 2011-03-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/elab2.ads: New test."}, {"sha": "2d614ec32edacc3dd8a474ba29d1d44d006c34f7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-data2.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C?ref=c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "patch": "@@ -44,5 +44,4 @@ extern template struct A3<int, 510>;\n \n // Use.\n A3<int, 1111> a31;\n-// FIXME should this be an error?\n A3<char, 9999> a32;\t\t// { dg-warning \"overflow\" }"}, {"sha": "5d5749ce2c3af6f7c435cb5bd798a67baa5f7a00", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-overflow2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c598e5fa54f472696d5d50e2ba4991a3cec62dd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-overflow2.C?ref=c598e5fa54f472696d5d50e2ba4991a3cec62dd1", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/47504\n+// { dg-options -std=c++0x }\n+\n+char constexpr sub(char arg)\n+{ return char(arg - char(1)); }\n+\n+int main()\n+{ static char constexpr m = sub(-1); }"}]}