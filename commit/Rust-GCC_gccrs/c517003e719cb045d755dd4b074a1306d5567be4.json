{"sha": "c517003e719cb045d755dd4b074a1306d5567be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxNzAwM2U3MTljYjA0NWQ3NTVkZDRiMDc0YTEzMDZkNTU2N2JlNA==", "commit": {"author": {"name": "zhengnannan", "email": "zhengnannan@huawei.com", "date": "2020-10-30T10:22:30Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-10-30T10:22:30Z"}, "message": "AArch64: Add FLAG for float conversion intrinsics [PR94442]\n\n2020-10-30  Zhiheng Xie  <xiezhiheng@huawei.com>\n\t    Nannan Zheng  <zhengnannan@huawei.com>\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd-builtins.def: Add proper FLAG\n\tfor conversion intrinsics.", "tree": {"sha": "9f6d7ab02f984864ae6eeb0d619e325315fb3d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f6d7ab02f984864ae6eeb0d619e325315fb3d1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c517003e719cb045d755dd4b074a1306d5567be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c517003e719cb045d755dd4b074a1306d5567be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c517003e719cb045d755dd4b074a1306d5567be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c517003e719cb045d755dd4b074a1306d5567be4/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0bfd9672e19caf08e45afeb4277f848488ced2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0bfd9672e19caf08e45afeb4277f848488ced2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0bfd9672e19caf08e45afeb4277f848488ced2b"}], "stats": {"total": 74, "additions": 37, "deletions": 37}, "files": [{"sha": "eb8e6f7b3d83da0b391bb6f7d5fc4c7ea454dbe3", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c517003e719cb045d755dd4b074a1306d5567be4/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c517003e719cb045d755dd4b074a1306d5567be4/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=c517003e719cb045d755dd4b074a1306d5567be4", "patch": "@@ -430,17 +430,17 @@\n   VAR1 (UNOPUS, lfrintnudf, 2, FP, di)\n \n   /* Implemented by <optab><fcvt_target><VDQF:mode>2.  */\n-  VAR1 (UNOP, floatv4hi, 2, ALL, v4hf)\n-  VAR1 (UNOP, floatv8hi, 2, ALL, v8hf)\n-  VAR1 (UNOP, floatv2si, 2, ALL, v2sf)\n-  VAR1 (UNOP, floatv4si, 2, ALL, v4sf)\n-  VAR1 (UNOP, floatv2di, 2, ALL, v2df)\n-\n-  VAR1 (UNOP, floatunsv4hi, 2, ALL, v4hf)\n-  VAR1 (UNOP, floatunsv8hi, 2, ALL, v8hf)\n-  VAR1 (UNOP, floatunsv2si, 2, ALL, v2sf)\n-  VAR1 (UNOP, floatunsv4si, 2, ALL, v4sf)\n-  VAR1 (UNOP, floatunsv2di, 2, ALL, v2df)\n+  VAR1 (UNOP, floatv4hi, 2, FP, v4hf)\n+  VAR1 (UNOP, floatv8hi, 2, FP, v8hf)\n+  VAR1 (UNOP, floatv2si, 2, FP, v2sf)\n+  VAR1 (UNOP, floatv4si, 2, FP, v4sf)\n+  VAR1 (UNOP, floatv2di, 2, FP, v2df)\n+\n+  VAR1 (UNOP, floatunsv4hi, 2, FP, v4hf)\n+  VAR1 (UNOP, floatunsv8hi, 2, FP, v8hf)\n+  VAR1 (UNOP, floatunsv2si, 2, FP, v2sf)\n+  VAR1 (UNOP, floatunsv4si, 2, FP, v4sf)\n+  VAR1 (UNOP, floatunsv2di, 2, FP, v2df)\n \n   VAR5 (UNOPU, bswap, 2, ALL, v4hi, v8hi, v2si, v4si, v2di)\n \n@@ -469,13 +469,13 @@\n   BUILTIN_VHSDF (UNOP, abs, 2, ALL)\n   VAR1 (UNOP, abs, 2, ALL, hf)\n \n-  BUILTIN_VQ_HSF (UNOP, vec_unpacks_hi_, 10, ALL)\n-  VAR1 (BINOP, float_truncate_hi_, 0, ALL, v4sf)\n-  VAR1 (BINOP, float_truncate_hi_, 0, ALL, v8hf)\n+  BUILTIN_VQ_HSF (UNOP, vec_unpacks_hi_, 10, FP)\n+  VAR1 (BINOP, float_truncate_hi_, 0, FP, v4sf)\n+  VAR1 (BINOP, float_truncate_hi_, 0, FP, v8hf)\n \n-  VAR1 (UNOP, float_extend_lo_, 0, ALL, v2df)\n-  VAR1 (UNOP, float_extend_lo_,  0, ALL, v4sf)\n-  BUILTIN_VDF (UNOP, float_truncate_lo_, 0, ALL)\n+  VAR1 (UNOP, float_extend_lo_, 0, FP, v2df)\n+  VAR1 (UNOP, float_extend_lo_,  0, FP, v4sf)\n+  BUILTIN_VDF (UNOP, float_truncate_lo_, 0, FP)\n \n   /* Implemented by aarch64_ld1<VALL_F16:mode>.  */\n   BUILTIN_VALL_F16 (LOAD1, ld1, 0, ALL)\n@@ -619,18 +619,18 @@\n   VAR1 (UNOP, sqrt, 2, ALL, hf)\n \n   /* Implemented by <optab><mode>hf2.  */\n-  VAR1 (UNOP, floatdi, 2, ALL, hf)\n-  VAR1 (UNOP, floatsi, 2, ALL, hf)\n-  VAR1 (UNOP, floathi, 2, ALL, hf)\n-  VAR1 (UNOPUS, floatunsdi, 2, ALL, hf)\n-  VAR1 (UNOPUS, floatunssi, 2, ALL, hf)\n-  VAR1 (UNOPUS, floatunshi, 2, ALL, hf)\n-  BUILTIN_GPI_I16 (UNOP, fix_trunchf, 2, ALL)\n-  BUILTIN_GPI (UNOP, fix_truncsf, 2, ALL)\n-  BUILTIN_GPI (UNOP, fix_truncdf, 2, ALL)\n-  BUILTIN_GPI_I16 (UNOPUS, fixuns_trunchf, 2, ALL)\n-  BUILTIN_GPI (UNOPUS, fixuns_truncsf, 2, ALL)\n-  BUILTIN_GPI (UNOPUS, fixuns_truncdf, 2, ALL)\n+  VAR1 (UNOP, floatdi, 2, FP, hf)\n+  VAR1 (UNOP, floatsi, 2, FP, hf)\n+  VAR1 (UNOP, floathi, 2, FP, hf)\n+  VAR1 (UNOPUS, floatunsdi, 2, FP, hf)\n+  VAR1 (UNOPUS, floatunssi, 2, FP, hf)\n+  VAR1 (UNOPUS, floatunshi, 2, FP, hf)\n+  BUILTIN_GPI_I16 (UNOP, fix_trunchf, 2, FP)\n+  BUILTIN_GPI (UNOP, fix_truncsf, 2, FP)\n+  BUILTIN_GPI (UNOP, fix_truncdf, 2, FP)\n+  BUILTIN_GPI_I16 (UNOPUS, fixuns_trunchf, 2, FP)\n+  BUILTIN_GPI (UNOPUS, fixuns_truncsf, 2, FP)\n+  BUILTIN_GPI (UNOPUS, fixuns_truncdf, 2, FP)\n \n   /* Implemented by aarch64_sm3ss1qv4si.  */\n   VAR1 (TERNOPU, sm3ss1q, 0, ALL, v4si)\n@@ -701,10 +701,10 @@\n   VAR1 (QUADOP_LANE, fmlslq_laneq_high, 0, ALL, v4sf)\n \n   /* Implemented by aarch64_<frintnzs_op><mode>.  */\n-  BUILTIN_VSFDF (UNOP, frint32z, 0, ALL)\n-  BUILTIN_VSFDF (UNOP, frint32x, 0, ALL)\n-  BUILTIN_VSFDF (UNOP, frint64z, 0, ALL)\n-  BUILTIN_VSFDF (UNOP, frint64x, 0, ALL)\n+  BUILTIN_VSFDF (UNOP, frint32z, 0, FP)\n+  BUILTIN_VSFDF (UNOP, frint32x, 0, FP)\n+  BUILTIN_VSFDF (UNOP, frint64z, 0, FP)\n+  BUILTIN_VSFDF (UNOP, frint64x, 0, FP)\n \n   /* Implemented by aarch64_bfdot{_lane}{q}<mode>.  */\n   VAR2 (TERNOP, bfdot, 0, ALL, v2sf, v4sf)\n@@ -728,7 +728,7 @@\n   VAR1 (TERNOP_SSUS, simd_usmmla, 0, NONE, v16qi)\n \n   /* Implemented by aarch64_bfcvtn{q}{2}<mode>  */\n-  VAR1 (UNOP, bfcvtn, 0, ALL, v4bf)\n-  VAR1 (UNOP, bfcvtn_q, 0, ALL, v8bf)\n-  VAR1 (BINOP, bfcvtn2, 0, ALL, v8bf)\n-  VAR1 (UNOP, bfcvt, 0, ALL, bf)\n+  VAR1 (UNOP, bfcvtn, 0, FP, v4bf)\n+  VAR1 (UNOP, bfcvtn_q, 0, FP, v8bf)\n+  VAR1 (BINOP, bfcvtn2, 0, FP, v8bf)\n+  VAR1 (UNOP, bfcvt, 0, FP, bf)"}]}