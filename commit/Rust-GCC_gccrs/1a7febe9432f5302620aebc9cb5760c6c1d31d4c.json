{"sha": "1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3ZmViZTk0MzJmNTMwMjYyMGFlYmM5Y2I1NzYwYzZjMWQzMWQ0Yw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-07-27T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-07-27T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "2241db8bf4a8cedc7ecded3c01f8e9a1fd4af495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2241db8bf4a8cedc7ecded3c01f8e9a1fd4af495"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/comments", "author": null, "committer": null, "parents": [{"sha": "d5a8c1382718ae084d46ff9b8a26d6b1d0cb684c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a8c1382718ae084d46ff9b8a26d6b1d0cb684c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a8c1382718ae084d46ff9b8a26d6b1d0cb684c"}], "stats": {"total": 174, "additions": 173, "deletions": 1}, "files": [{"sha": "fd68e247297745d3d3eb169d21190aa8c8196b0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,79 @@\n+2021-07-26  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/78888\n+\t* gimple-range-fold.cc (get_letter_range): New.\n+\t(fold_using_range::range_of_builtin_call): Call get_letter_range.\n+\n+2021-07-26  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/78888\n+\t* gimple-range-fold.cc (fold_using_range::range_of_builtin_call): Add cases\n+\tfor CFN_BUILT_IN_TOUPPER and CFN_BUILT_IN_TOLOWER.\n+\n+2021-07-26  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* match.pd (rotate): Simplify equality/inequality of rotations.\n+\t(bswap): Simplify equality/inequality tests of byte swapping.\n+\n+2021-07-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op.cc (operator_bitwise_xor::op1_op2_relation_effect):\n+\tNew.\n+\n+2021-07-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op.cc (operator_lshift::fold_range): Pass rel to\n+\tbase class fold_range.\n+\t(operator_rshift::fold_range): Same.\n+\n+2021-07-26  Ashimida  <ashimida@linux.alibaba.com>\n+\n+\tPR driver/101447\n+\t* toplev.h (min_align_loops_log): Remove declaration.\n+\t(min_align_jumps_log, min_align_labels_log): Likewise.\n+\t(min_align_functions_log): Likewise.\n+\n+2021-07-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (vrp_simplify_cond_using_ranges): Rename vr_values\n+\twith range_query.\n+\t(execute_vrp): Abstract out simplification of conditionals...\n+\t(simplify_casted_conds): ...here.\n+\n+2021-07-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-array-bounds.cc (array_bounds_checker::get_value_range):\n+\tAdd gimple argument.\n+\t(array_bounds_checker::check_array_ref): Same.\n+\t(array_bounds_checker::check_addr_expr): Same.\n+\t(array_bounds_checker::check_array_bounds): Pass statement to\n+\tcheck_array_bounds and check_addr_expr.\n+\t* gimple-array-bounds.h (check_array_bounds): Add gimple argument.\n+\t(check_addr_expr): Same.\n+\t(get_value_range): Same.\n+\n+2021-07-26  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def (sdot, udot): Rename to..\n+\t(sdot_prod, udot_prod): ... This.\n+\t* config/aarch64/aarch64-simd.md (aarch64_<sur>dot<vsi2qi>): Merged\n+\tinto...\n+\t(<sur>dot_prod<vsi2qi>): ... this.\n+\t(aarch64_<sur>dot_lane<vsi2qi>, aarch64_<sur>dot_laneq<vsi2qi>):\n+\tChange operands order.\n+\t(<sur>sadv16qi): Use new operands order.\n+\t* config/aarch64/arm_neon.h (vdot_u32, vdotq_u32, vdot_s32,\n+\tvdotq_s32): Use new RTL ordering.\n+\n+2021-07-26  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c (TYPES_TERNOP_SUSS,\n+\taarch64_types_ternop_suss_qualifiers): New.\n+\t* config/aarch64/aarch64-simd-builtins.def (usdot_prod): Use it.\n+\t* config/aarch64/aarch64-simd.md (usdot_prod<vsi2qi>): Re-organize RTL.\n+\t* config/aarch64/arm_neon.h (vusdot_s32, vusdotq_s32): Use it.\n+\n 2021-07-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/101562"}, {"sha": "781a3b12ece495e4158d9a37a30b6bec579ebe5d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1 +1 @@\n-20210726\n+20210727"}, {"sha": "3234732b99a3b0e4bfbc5c977e56221be663b1e4", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,8 @@\n+2021-07-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* region-model.cc (region_model::on_call_pre): Always set conjured\n+\tLHS, not just for SSA names.\n+\n 2021-07-23  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-manager.cc"}, {"sha": "6f8c4f0e66d4b5f3963388e2cd141674bf63a3d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,16 @@\n+2021-07-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parser.h (struct cp_lexer): Add orphan_p member.\n+\t* parser.c (cp_parser_statement): Don't change in_omp_attribute_pragma\n+\tupon restart from CPP_PRAGMA handling.  Fix up condition when a lexer\n+\tshould be destroyed and adjust saved_tokens if it records tokens from\n+\tthe to be destroyed lexer.\n+\t(cp_parser_omp_section_scan): New function.\n+\t(cp_parser_omp_scan_loop_body): Use it.  If\n+\tparser->lexer->in_omp_attribute_pragma, allow optional comma\n+\tafter scan.\n+\t(cp_parser_omp_sections_scope): Use cp_parser_omp_section_scan.\n+\n 2021-07-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.h (struct cp_parser): Add omp_attrs_forbidden_p member."}, {"sha": "af9f6b5d03367e7e2439dc916652b8ea77dfdf3d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,17 @@\n+2021-07-26  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93308\n+\tPR fortran/93963\n+\tPR fortran/94327\n+\tPR fortran/94331\n+\tPR fortran/97046\n+\t* trans-decl.c (convert_CFI_desc): Only copy out the descriptor\n+\tif necessary.\n+\t* trans-expr.c (gfc_conv_gfc_desc_to_cfi_desc): Updated attribute\n+\thandling which reflect a previous intermediate version of the\n+\tstandard. Only copy out the descriptor if necessary.\n+\n 2021-07-23  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/101536"}, {"sha": "4504e4e2530ce852dd23cfc1f4293bc51a13e6c3", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,7 @@\n+2021-07-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2021-05-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* ja.po: Update."}, {"sha": "88f5812a79eafddfa0fff93f26cffb52ce00716e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,47 @@\n+2021-07-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/sock-1.c: New test.\n+\t* gcc.dg/analyzer/sock-2.c: New test.\n+\n+2021-07-26  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/pr78888.c: New.\n+\n+2021-07-26  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/fold-eqrotate-1.c: New test case.\n+\t* gcc.dg/fold-eqbswap-1.c: New test case.\n+\n+2021-07-26  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93308\n+\tPR fortran/93963\n+\tPR fortran/94327\n+\tPR fortran/94331\n+\tPR fortran/97046\n+\t* gfortran.dg/ISO_Fortran_binding_1.f90: Add pointer attribute,\n+\tthis test is still erroneous but now it compiles.\n+\t* gfortran.dg/bind_c_array_params_2.f90: Update regex to match\n+\tcode changes.\n+\t* gfortran.dg/PR93308.f90: New test.\n+\t* gfortran.dg/PR93963.f90: New test.\n+\t* gfortran.dg/PR94327.c: New test.\n+\t* gfortran.dg/PR94327.f90: New test.\n+\t* gfortran.dg/PR94331.c: New test.\n+\t* gfortran.dg/PR94331.f90: New test.\n+\t* gfortran.dg/PR97046.f90: New test.\n+\n+2021-07-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/gomp/attrs-1.C: Use attribute syntax even for section\n+\tand scan directives.\n+\t* g++.dg/gomp/attrs-2.C: Likewise.\n+\t* g++.dg/gomp/attrs-6.C: New test.\n+\t* g++.dg/gomp/attrs-7.C: New test.\n+\t* g++.dg/gomp/attrs-8.C: New test.\n+\n 2021-07-23  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/101536"}, {"sha": "0b97583e120666acb48ce231634c6348bfd45fda", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,7 @@\n+2021-07-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2021-03-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sr.po: Update."}, {"sha": "f67f1258fc310dbea01c4b454ad607982a9bba90", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7febe9432f5302620aebc9cb5760c6c1d31d4c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1a7febe9432f5302620aebc9cb5760c6c1d31d4c", "patch": "@@ -1,3 +1,15 @@\n+2021-07-26  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93308\n+\tPR fortran/93963\n+\tPR fortran/94327\n+\tPR fortran/94331\n+\tPR fortran/97046\n+\t* runtime/ISO_Fortran_binding.c (cfi_desc_to_gfc_desc): Add code\n+\tto verify the descriptor. Correct bounds calculation.\n+\t(gfc_desc_to_cfi_desc): Add code to verify the descriptor.\n+\n 2021-07-22  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* runtime/ISO_Fortran_binding.c (CFI_allocate): Don't use elem_len"}]}