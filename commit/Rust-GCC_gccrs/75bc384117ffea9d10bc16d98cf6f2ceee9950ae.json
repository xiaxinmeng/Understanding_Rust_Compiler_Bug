{"sha": "75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViYzM4NDExN2ZmZWE5ZDEwYmMxNmQ5OGNmNmYyY2VlZTk5NTBhZQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2012-08-10T12:11:29Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2012-08-10T12:11:29Z"}, "message": "sourcebuild.texi: Document long_neq_int effective target.\n\ngcc:\n\n2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* doc/sourcebuild.texi: Document long_neq_int effective target.\n\n\ntestsuite:\n\n2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* lib/target-supports.exp (check_effective_target_long_neq_int): New.\n\t* gcc.dg/tree-ssa/slsr-30.c: Check for long_neq_int effective target.\n\nFrom-SVN: r190293", "tree": {"sha": "7a76fdfc6ec9287572fbca97acb1ab14bb48d0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a76fdfc6ec9287572fbca97acb1ab14bb48d0a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab509eb53521c9d33eeae505dffbb8977c77aca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab509eb53521c9d33eeae505dffbb8977c77aca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab509eb53521c9d33eeae505dffbb8977c77aca0"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "1050c568d07175a2997544c0da17648d0357e1e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "patch": "@@ -1,3 +1,7 @@\n+2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* doc/sourcebuild.texi: Document long_neq_int effective target.\n+\n 2012-08-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/54109"}, {"sha": "7e9dbe31c2d96b10ece1383af2746f0574435cbc", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "patch": "@@ -1303,6 +1303,9 @@ Target has @code{int} that is at 32 bits or longer.\n @item int16\n Target has @code{int} that is 16 bits or shorter.\n \n+@item long_neq_int\n+Target has @code{int} and @code{long} with different sizes.\n+\n @item large_double\n Target supports @code{double} that is longer than @code{float}.\n "}, {"sha": "c9e312d0ec55806b61766a4a62bbc776c9ebee5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "patch": "@@ -1,3 +1,8 @@\n+2012-08-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_long_neq_int): New.\n+\t* gcc.dg/tree-ssa/slsr-30.c: Check for long_neq_int effective target.\n+\n 2012-08-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/54109"}, {"sha": "9620f224115ae6e94c62e911b58d27f5189cb7c1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/slsr-30.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-30.c?ref=75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "patch": "@@ -1,7 +1,7 @@\n /* Verify straight-line strength reduction fails for simple integer addition\n    with casts thrown in when -fwrapv is used.  */\n \n-/* { dg-do compile { target { ! { ilp32 } } } } */\n+/* { dg-do compile { target { long_neq_int } } } */\n /* { dg-options \"-O3 -fdump-tree-dom2 -fwrapv\" } */\n \n long"}, {"sha": "bc81a6115af03602cb6a792df63e05b42b72a43b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc384117ffea9d10bc16d98cf6f2ceee9950ae/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=75bc384117ffea9d10bc16d98cf6f2ceee9950ae", "patch": "@@ -1689,6 +1689,15 @@ proc check_effective_target_llp64 { } {\n     }]\n }\n \n+# Return 1 if long and int have different sizes,\n+# 0 otherwise.\n+\n+proc check_effective_target_long_neq_int { } {\n+    return [check_no_compiler_messages long_ne_int object {\n+\tint dummy[sizeof (int) != sizeof (long) ? 1 : -1];\n+    }]\n+}\n+\n # Return 1 if the target supports long double larger than double,\n # 0 otherwise.\n "}]}