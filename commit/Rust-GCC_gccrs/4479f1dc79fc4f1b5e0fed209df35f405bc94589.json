{"sha": "4479f1dc79fc4f1b5e0fed209df35f405bc94589", "node_id": "C_kwDOANBUbNoAKDQ0NzlmMWRjNzlmYzRmMWI1ZTBmZWQyMDlkZjM1ZjQwNWJjOTQ1ODk", "commit": {"author": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2021-05-08T09:45:53Z"}, "committer": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2022-10-25T08:44:09Z"}, "message": "MIPS: Not trigger error for pre-R6 and -mcompact-branches=always\n\nFor MIPSr6, we may wish to use compact-branches only.\nCurrently, we have to use `always' option, while it is mark as conflict\nwith pre-R6.\n  cc1: error: unsupported combination: \u2018mips32r2\u2019 -mcompact-branches=always\nJust ignore -mcompact-branches=always for pre-R6.\n\nThis patch also defines\n    __mips_compact_branches_never\n    __mips_compact_branches_always\n    __mips_compact_branches_optimal\npredefined macros\n\ngcc/ChangeLog:\n\t* config/mips/mips.cc (mips_option_override): not trigger error\n\tfor compact-branches=always for pre-R6.\n\t* config/mips/mips.h (TARGET_RTP_PIC): not trigger error for\n\tcompact-branches=always for pre-R6.\n\t(TARGET_CB_NEVER): Likewise.\n\t(TARGET_CB_ALWAYS): Likewise.\n\t(struct mips_cpu_info): define macros for compact branch policy.\n\t* doc/invoke.texi: Document \"always\" with pre-R6.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/mips/compact-branches-1.c: add isa_rev>=6.\n\t* gcc.target/mips/mips.exp: don't add -mipsXXr6 option for\n\t-mcompact-branches=always. It is usable for pre-R6 now.\n\t* gcc.target/mips/compact-branches-8.c: New test.\n\t* gcc.target/mips/compact-branches-9.c: New test.", "tree": {"sha": "ede450fd98bcdba7902a3d01ca0759c5f5a9a2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ede450fd98bcdba7902a3d01ca0759c5f5a9a2e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4479f1dc79fc4f1b5e0fed209df35f405bc94589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4479f1dc79fc4f1b5e0fed209df35f405bc94589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4479f1dc79fc4f1b5e0fed209df35f405bc94589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4479f1dc79fc4f1b5e0fed209df35f405bc94589/comments", "author": null, "committer": null, "parents": [{"sha": "7d888535f7ab80e9b08a633bfd774a923b311cde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d888535f7ab80e9b08a633bfd774a923b311cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d888535f7ab80e9b08a633bfd774a923b311cde"}], "stats": {"total": 66, "additions": 43, "deletions": 23}, "files": [{"sha": "699ea6cc128b7ceeb962fb72e77e21d4fdb014c5", "filename": "gcc/config/mips/mips.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fconfig%2Fmips%2Fmips.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fconfig%2Fmips%2Fmips.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.cc?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -20277,13 +20277,7 @@ mips_option_override (void)\n       target_flags |= MASK_ODD_SPREG;\n     }\n \n-  if (!ISA_HAS_COMPACT_BRANCHES && mips_cb == MIPS_CB_ALWAYS)\n-    {\n-      error (\"unsupported combination: %qs%s %s\",\n-\t      mips_arch_info->name, TARGET_MICROMIPS ? \" -mmicromips\" : \"\",\n-\t      \"-mcompact-branches=always\");\n-    }\n-  else if (!ISA_HAS_DELAY_SLOTS && mips_cb == MIPS_CB_NEVER)\n+  if (!ISA_HAS_DELAY_SLOTS && mips_cb == MIPS_CB_NEVER)\n     {\n       error (\"unsupported combination: %qs%s %s\",\n \t      mips_arch_info->name, TARGET_MICROMIPS ? \" -mmicromips\" : \"\","}, {"sha": "ed058b5db5f3044ed20976b31531011dd8984947", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -120,11 +120,9 @@ struct mips_cpu_info {\n #define TARGET_RTP_PIC (TARGET_VXWORKS_RTP && flag_pic)\n \n /* Compact branches must not be used if the user either selects the\n-   'never' policy or the 'optimal' policy on a core that lacks\n+   'never' policy or the 'optimal' / 'always' policy on a core that lacks\n    compact branch instructions.  */\n-#define TARGET_CB_NEVER (mips_cb == MIPS_CB_NEVER\t\\\n-\t\t\t || (mips_cb == MIPS_CB_OPTIMAL \\\n-\t\t\t     && !ISA_HAS_COMPACT_BRANCHES))\n+#define TARGET_CB_NEVER (mips_cb == MIPS_CB_NEVER || !ISA_HAS_COMPACT_BRANCHES)\n \n /* Compact branches may be used if the user either selects the\n    'always' policy or the 'optimal' policy on a core that supports\n@@ -134,10 +132,11 @@ struct mips_cpu_info {\n \t\t\t     && ISA_HAS_COMPACT_BRANCHES))\n \n /* Compact branches must always be generated if the user selects\n-   the 'always' policy or the 'optimal' policy om a core that\n-   lacks delay slot branch instructions.  */\n-#define TARGET_CB_ALWAYS (mips_cb == MIPS_CB_ALWAYS\t\\\n-\t\t\t || (mips_cb == MIPS_CB_OPTIMAL \\\n+   the 'always' policy on a core support compact branches,\n+   or the 'optimal' policy on a core that lacks delay slot branch instructions.  */\n+#define TARGET_CB_ALWAYS ((mips_cb == MIPS_CB_ALWAYS\t  \\\n+\t\t\t     && ISA_HAS_COMPACT_BRANCHES) \\\n+\t\t\t || (mips_cb == MIPS_CB_OPTIMAL   \\\n \t\t\t     && !ISA_HAS_DELAY_SLOTS))\n \n /* Special handling for JRC that exists in microMIPSR3 as well as R6\n@@ -677,6 +676,13 @@ struct mips_cpu_info {\n \tbuiltin_define (\"__mips_no_lxc1_sxc1\");\t\t\t\t\\\n       if (!ISA_HAS_UNFUSED_MADD4 && !ISA_HAS_FUSED_MADD4)\t\t\\\n \tbuiltin_define (\"__mips_no_madd4\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (TARGET_CB_NEVER)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mips_compact_branches_never\");\t\t\\\n+      else if (TARGET_CB_ALWAYS)\t\t\t\t\t\\\n+\tbuiltin_define (\"__mips_compact_branches_always\");\t\t\\\n+      else \t\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mips_compact_branches_optimal\");\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "64f77e8367ac4240a70577defb13a6c67269cf92", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -27091,11 +27091,13 @@ The @option{-mcompact-branches=never} option ensures that compact branch\n instructions will never be generated.\n \n The @option{-mcompact-branches=always} option ensures that a compact\n-branch instruction will be generated if available.  If a compact branch\n-instruction is not available, a delay slot form of the branch will be\n-used instead.\n+branch instruction will be generated if available for MIPS Release 6 onwards.\n+If a compact branch instruction is not available (or pre-R6),\n+a delay slot form of the branch will be used instead.\n \n-This option is supported from MIPS Release 6 onwards.\n+If it is used for MIPS16/microMIPS targets, it will be just ignored now.\n+The behaviour for MIPS16/microMIPS may change in future,\n+since they do have some compact branch instructions.\n \n The @option{-mcompact-branches=optimal} option will cause a delay slot\n branch to be used if one is available in the current ISA and the delay"}, {"sha": "6b8e1978d87cc32b99c549a4c81ffa53ecea39b3", "filename": "gcc/testsuite/gcc.target/mips/compact-branches-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-1.c?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-mcompact-branches=always -mno-micromips\" } */\n+/* { dg-options \"-mcompact-branches=always -mno-micromips isa_rev>=6\" } */\n int glob;\n \n void"}, {"sha": "1290cedf4b5c2132460c9f37bdfb203f54bf5beb", "filename": "gcc/testsuite/gcc.target/mips/compact-branches-8.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-8.c?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-options \"-mno-abicalls -mcompact-branches=always isa_rev<=5\" } */\n+void bar (int);\n+\n+void\n+foo ()\n+{\n+  bar (1);\n+}\n+\n+/* { dg-final { scan-assembler \"\\t(j|jal)\\t\" } } */"}, {"sha": "4b23bf456d1177b0398117a3adcb6fdf7e69b92e", "filename": "gcc/testsuite/gcc.target/mips/compact-branches-9.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcompact-branches-9.c?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-options \"-mno-abicalls -fno-PIC -mcompact-branches=always isa_rev>=6\" } */\n+void bar (int);\n+\n+void\n+foo ()\n+{\n+  bar (1);\n+}\n+\n+/* { dg-final { scan-assembler \"\\t(bc|balc)\\t\" } } */"}, {"sha": "c89626a50fa5472e7bb7ff81210247c076534420", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4479f1dc79fc4f1b5e0fed209df35f405bc94589/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=4479f1dc79fc4f1b5e0fed209df35f405bc94589", "patch": "@@ -1167,10 +1167,8 @@ proc mips-dg-options { args } {\n \t# We need a revision 6 or better ISA for:\n \t#\n \t#   - When the LSA instruction is required\n-\t#   - When only using compact branches\n \tif { $isa_rev < 6\n-\t     && ([mips_have_test_option_p options \"HAS_LSA\"]\n-\t\t || [mips_have_test_option_p options \"-mcompact-branches=always\"]) } {\n+\t     && ([mips_have_test_option_p options \"HAS_LSA\"]) } {\n \t    if { $gp_size == 32 } {\n \t\tmips_make_test_option options \"-mips32r6\"\n \t    } else {"}]}