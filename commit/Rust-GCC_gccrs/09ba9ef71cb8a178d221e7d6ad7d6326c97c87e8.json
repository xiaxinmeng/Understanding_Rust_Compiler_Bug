{"sha": "09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliYTllZjcxY2I4YTE3OGQyMjFlN2Q2YWQ3ZDYzMjZjOTdjODdlOA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2015-10-06T15:09:43Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2015-10-06T15:09:43Z"}, "message": "Fix PR c/65345 for AArch64 \n\n\n\n2015-10-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\tPR c/65345\n\t* config/aarch64/aarch64-builtins.c (aarch64_atomic_assign_expand_fenv):\n\tUse create_tmp_var_raw instead of create_tmp_var.\n\nFrom-SVN: r228526", "tree": {"sha": "0d541978359a42b1b82b90946182ad5c27ff48e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d541978359a42b1b82b90946182ad5c27ff48e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8/comments", "author": null, "committer": null, "parents": [{"sha": "2d83470f102057c45b076e6bc7474dc04fe2b685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d83470f102057c45b076e6bc7474dc04fe2b685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d83470f102057c45b076e6bc7474dc04fe2b685"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "89e3bafccad254970fdcfa81dde0c3316f49d240", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "patch": "@@ -1,3 +1,9 @@\n+2015-10-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\tPR c/65345\n+\t* config/aarch64/aarch64-builtins.c (aarch64_atomic_assign_expand_fenv):\n+\tUse create_tmp_var_raw instead of create_tmp_var.\n+\n 2015-10-06  Alexander Fomin  <alexander.fomin@intel.com>\n \n \tPR target/67849"}, {"sha": "716ed6e627260a19296246783d47787979b98017", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=09ba9ef71cb8a178d221e7d6ad7d6326c97c87e8", "patch": "@@ -1462,8 +1462,8 @@ aarch64_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n        __builtin_aarch64_set_cr (masked_cr);\n        __builtin_aarch64_set_sr (masked_sr);  */\n \n-  fenv_cr = create_tmp_var (unsigned_type_node);\n-  fenv_sr = create_tmp_var (unsigned_type_node);\n+  fenv_cr = create_tmp_var_raw (unsigned_type_node);\n+  fenv_sr = create_tmp_var_raw (unsigned_type_node);\n \n   get_fpcr = aarch64_builtin_decls[AARCH64_BUILTIN_GET_FPCR];\n   set_fpcr = aarch64_builtin_decls[AARCH64_BUILTIN_SET_FPCR];\n@@ -1476,9 +1476,9 @@ aarch64_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n \t\t\t   ~(AARCH64_FE_ALL_EXCEPT));\n \n   ld_fenv_cr = build2 (MODIFY_EXPR, unsigned_type_node,\n-\t\t    fenv_cr, build_call_expr (get_fpcr, 0));\n+\t\t       fenv_cr, build_call_expr (get_fpcr, 0));\n   ld_fenv_sr = build2 (MODIFY_EXPR, unsigned_type_node,\n-\t\t    fenv_sr, build_call_expr (get_fpsr, 0));\n+\t\t       fenv_sr, build_call_expr (get_fpsr, 0));\n \n   masked_fenv_cr = build2 (BIT_AND_EXPR, unsigned_type_node, fenv_cr, mask_cr);\n   masked_fenv_sr = build2 (BIT_AND_EXPR, unsigned_type_node, fenv_sr, mask_sr);\n@@ -1509,7 +1509,7 @@ aarch64_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n \n        __atomic_feraiseexcept (new_fenv_var);  */\n \n-  new_fenv_var = create_tmp_var (unsigned_type_node);\n+  new_fenv_var = create_tmp_var_raw (unsigned_type_node);\n   reload_fenv = build2 (MODIFY_EXPR, unsigned_type_node,\n \t\t\tnew_fenv_var, build_call_expr (get_fpsr, 0));\n   restore_fnenv = build_call_expr (set_fpsr, 1, fenv_sr);"}]}