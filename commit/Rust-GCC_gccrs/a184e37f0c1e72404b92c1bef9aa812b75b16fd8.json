{"sha": "a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4NGUzN2YwYzFlNzI0MDRiOTJjMWJlZjlhYTgxMmI3NWIxNmZkOA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-26T18:44:36Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-26T18:44:36Z"}, "message": "re PR fortran/77420 (gfortran and equivalence produces internal compiler error)\n\n2016-09-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77420\n\t* trans-common.c:  Handle array elements in equivalence when\n\tthe lower and upper bounds of array spec are NULL.\n \n2016-09-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77420\n\t* gfortran.dg/pr77420_1.f90: New test.\n\t* gfortran.dg/pr77420_2.f90: Ditto.\n\t* gfortran.dg/pr77420_3.f90: New test. Requires ...\n\t* gfortran.dg/pr77420_4.f90: this file.\n\nFrom-SVN: r240506", "tree": {"sha": "ddb32dcdd7307b2df869dadab1a06b1ab3b299be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddb32dcdd7307b2df869dadab1a06b1ab3b299be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/comments", "author": null, "committer": null, "parents": [{"sha": "8be59d19f27684eed54b611dcf68f590553d8386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be59d19f27684eed54b611dcf68f590553d8386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be59d19f27684eed54b611dcf68f590553d8386"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "c6bc662202b2d6839044776f37bdf4f33b5c0dc3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -1,3 +1,9 @@\n+2016-09-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77420\n+\t* trans-common.c:  Handle array elements in equivalence when\n+\tthe lower and upper bounds of array spec are NULL.\n+\n 2016-09-26  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/48298"}, {"sha": "ee12fa22dc052bc0b46952584dab3d838bc22b75", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -805,13 +805,21 @@ element_number (gfc_array_ref *ar)\n       if (ar->dimen_type[i] != DIMEN_ELEMENT)\n         gfc_internal_error (\"element_number(): Bad dimension type\");\n \n-      mpz_sub (n, *get_mpz (ar->start[i]), *get_mpz (as->lower[i]));\n+      if (as && as->lower[i])\n+\tmpz_sub (n, *get_mpz (ar->start[i]), *get_mpz (as->lower[i]));\n+      else\n+\tmpz_sub_ui (n, *get_mpz (ar->start[i]), 1);\n  \n       mpz_mul (n, n, multiplier);\n       mpz_add (offset, offset, n);\n  \n-      mpz_sub (extent, *get_mpz (as->upper[i]), *get_mpz (as->lower[i]));\n-      mpz_add_ui (extent, extent, 1);\n+      if (as && as->upper[i] && as->lower[i])\n+\t{\n+\t  mpz_sub (extent, *get_mpz (as->upper[i]), *get_mpz (as->lower[i]));\n+\t  mpz_add_ui (extent, extent, 1);\n+\t}\n+      else\n+\tmpz_set_ui (extent, 0);\n  \n       if (mpz_sgn (extent) < 0)\n         mpz_set_ui (extent, 0);"}, {"sha": "446848f2760ecfeea470661ea41775fa90d51b6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -1,3 +1,11 @@\n+2016-09-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77420\n+\t* gfortran.dg/pr77420_1.f90: New test.\n+\t* gfortran.dg/pr77420_2.f90: Ditto.\n+\t* gfortran.dg/pr77420_3.f90: New test. Requires ...\n+\t* gfortran.dg/pr77420_4.f90: this file.\n+\n 2016-09-26  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/77719"}, {"sha": "7652d6950fa2f41e910caeb3f1d9333477f7e87e", "filename": "gcc/testsuite/gfortran.dg/pr77420_1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_1.f90?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+module test_equivalence\n+  real, private :: array1(100)\n+  real, private :: array2(100)\n+  equivalence(array1(3),array2(3))\n+end module test_equivalence\n+\n+module mymodule\n+  use test_equivalence\n+  real, dimension(:), allocatable :: array1\n+end module mymodule\n+\n+program test\n+  use mymodule\n+end program test"}, {"sha": "4826801a2dcecbcbf54cd8feca8151e8f70a52d4", "filename": "gcc/testsuite/gfortran.dg/pr77420_2.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_2.f90?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+module test_equivalence\n+  real, private :: array1(100)\n+  real, private :: array2(100)\n+  equivalence(array1,array2)\n+end module test_equivalence\n+\n+module mymodule\n+  use test_equivalence\n+  real, dimension(:), allocatable :: array1\n+end module mymodule\n+\n+program test\n+  use mymodule\n+end program test"}, {"sha": "cf95ac05f83d1f2e3feeba0d3e26a9863d3a810d", "filename": "gcc/testsuite/gfortran.dg/pr77420_3.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do link }\n+! { dg-additional-sources pr77420_4.f90 }\n+!\n+module h5global\n+  implicit none\n+  integer :: h5p_default_f, h5p_flags\n+  equivalence(h5p_flags, h5p_default_f)\n+end module h5global\n+! { dg-final { cleanup-modules \"h5global\" } }"}, {"sha": "5eee0986b809806b127477ae63996d8926cb70c5", "filename": "gcc/testsuite/gfortran.dg/pr77420_4.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a184e37f0c1e72404b92c1bef9aa812b75b16fd8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_4.f90?ref=a184e37f0c1e72404b92c1bef9aa812b75b16fd8", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile { target { ! *-*-* } } }\n+!\n+program bug\n+  use H5GLOBAL\n+  implicit none\n+  integer :: i\n+  i=H5P_DEFAULT_F\n+end program bug"}]}