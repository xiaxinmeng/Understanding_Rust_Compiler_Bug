{"sha": "921f11c8cc2c5a170c405286eaf931f7b2ca8428", "node_id": "C_kwDOANBUbNoAKDkyMWYxMWM4Y2MyYzVhMTcwYzQwNTI4NmVhZjkzMWY3YjJjYTg0Mjg", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:24:29Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vzext.vf2 C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vzext_vf2-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf2_tumu-3.C: New test.", "tree": {"sha": "ce5cc3d74e1d39351094fa9961e8d7a7cca1a88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce5cc3d74e1d39351094fa9961e8d7a7cca1a88c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/921f11c8cc2c5a170c405286eaf931f7b2ca8428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921f11c8cc2c5a170c405286eaf931f7b2ca8428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921f11c8cc2c5a170c405286eaf931f7b2ca8428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921f11c8cc2c5a170c405286eaf931f7b2ca8428/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a"}], "stats": {"total": 1980, "additions": 1980, "deletions": 0}, "files": [{"sha": "4e9c81cf87f5f79ca3a9662655db60ce9122371b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "13a0756d03e740eba3eae747269fab31eea0da59", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "fdc37d18ee2e4fa25dab5a5f26d15794dd9d2824", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(op1,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vzext_vf2(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "fc136be7d9507cbf12c4a46fa8ec936a1ce0e85a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "08649144f7dc719124894e48a82a891d7f2c3bb6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "fceecc16742c23c65d45df23d1c451ec82ada35c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "a01c708cf4d316c3788b329fcbad4590f17b4f16", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "cd76d77233f01efce8e1fbaaf18be2687dbce832", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "c33e78d47c26952111ed20218858acdb065d075c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "953e4a14edadce038eec83cdbe116d04fe55f66e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4ef3abd0aca77b3fddf16c7804bc6ff11a28d0d2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8bc1c93bbac12750db132b767b4748eecd85e713", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "febc64c5b3aa53e123cad40d7a6cab4b18731300", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ba33ba5b22751096d64126189b336f64cee1ec10", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d8b8b77f2072ceca06f85f6a5aa836b944167cff", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf2_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921f11c8cc2c5a170c405286eaf931f7b2ca8428/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.C?ref=921f11c8cc2c5a170c405286eaf931f7b2ca8428", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}]}