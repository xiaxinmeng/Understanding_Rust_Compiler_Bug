{"sha": "9966b3915fad5ca4e14abc347ec22c3b0a9e159a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2NmIzOTE1ZmFkNWNhNGUxNGFiYzM0N2VjMjJjM2IwYTllMTU5YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T23:09:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T23:09:17Z"}, "message": "(create_definition): Eliminate whitespace before and after macro\ndefinitions.\n\nFrom-SVN: r7568", "tree": {"sha": "282e9081f6ca963a42c4844c3c68a9066d9b28b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/282e9081f6ca963a42c4844c3c68a9066d9b28b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9966b3915fad5ca4e14abc347ec22c3b0a9e159a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9966b3915fad5ca4e14abc347ec22c3b0a9e159a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9966b3915fad5ca4e14abc347ec22c3b0a9e159a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9966b3915fad5ca4e14abc347ec22c3b0a9e159a/comments", "author": null, "committer": null, "parents": [{"sha": "25212cdd8a3de4c7b21a04d638bb4cb8cea1fe9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25212cdd8a3de4c7b21a04d638bb4cb8cea1fe9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25212cdd8a3de4c7b21a04d638bb4cb8cea1fe9b"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "beabe383b2476512ca4e4134053f1ea3d6914784", "filename": "gcc/cccp.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9966b3915fad5ca4e14abc347ec22c3b0a9e159a/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9966b3915fad5ca4e14abc347ec22c3b0a9e159a/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=9966b3915fad5ca4e14abc347ec22c3b0a9e159a", "patch": "@@ -5333,8 +5333,9 @@ create_definition (buf, limit, op)\n     }\n \n     ++bp;\t\t\t/* skip paren */\n-    /* Skip exactly one space or tab if any.  */\n-    if (bp < limit && (*bp == ' ' || *bp == '\\t')) ++bp;\n+    /* Skip spaces and tabs if any.  */\n+    while (bp < limit && (*bp == ' ' || *bp == '\\t'))\n+      ++bp;\n     /* now everything from bp before limit is the definition. */\n     defn = collect_expansion (bp, limit, argno, arg_ptrs);\n     defn->rest_args = rest_args;\n@@ -5357,10 +5358,12 @@ create_definition (buf, limit, op)\n       defn->args.argnames[i] = 0;\n     }\n   } else {\n-    /* simple expansion or empty definition; gobble it */\n-    if (is_hor_space[*bp])\n-      ++bp;\t\t/* skip exactly one blank/tab char */\n-    /* now everything from bp before limit is the definition. */\n+    /* Simple expansion or empty definition.  */\n+\n+    /* Skip spaces and tabs if any.  */\n+    while (bp < limit && (*bp == ' ' || *bp == '\\t'))\n+      ++bp;\n+    /* Now everything from bp before limit is the definition. */\n     defn = collect_expansion (bp, limit, -1, NULL_PTR);\n     defn->args.argnames = (U_CHAR *) \"\";\n   }\n@@ -5818,20 +5821,6 @@ collect_expansion (buf, end, nargs, arglist)\n     }\n   }\n \n-  if (limit < end) {\n-    /* Convert trailing whitespace to Newline-markers.  */\n-    while (limit < end && is_space[*limit]) {\n-      *exp_p++ = '\\n';\n-      *exp_p++ = *limit++;\n-    }\n-  } else if (!traditional && expected_delimiter == 0) {\n-    /* There is no trailing whitespace, so invent some in ANSI mode.\n-       But not if \"inside a string\" (which in ANSI mode\n-       happens only for -D option).  */\n-    *exp_p++ = '\\n';\n-    *exp_p++ = ' ';\n-  }\n-\n   *exp_p = '\\0';\n \n   defn->length = exp_p - defn->expansion;"}]}