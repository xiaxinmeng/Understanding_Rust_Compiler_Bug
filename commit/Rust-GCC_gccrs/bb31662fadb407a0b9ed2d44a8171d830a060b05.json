{"sha": "bb31662fadb407a0b9ed2d44a8171d830a060b05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIzMTY2MmZhZGI0MDdhMGI5ZWQyZDQ0YTgxNzFkODMwYTA2MGIwNQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-02T12:20:34Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-02T12:20:34Z"}, "message": "Optimize: `return (a ? b : c)' as: `if (a) return b; else return c;'.\n\n\t\n\tOptimize: `return (a ? b : c)' as: `if (a) return b; else return c;'.\n\t* jcf-write.c (generate_bytecode_return):  New function.\n\t(generate_bytecode_insns):  Use it, for RETURN_EXPR.\n\t* jcf-write.c (generate_bytecode_insns):  For REAL_CST that is 0 or 1,\n\tgenerate special [fd]const_[01] instructions.\n\t* jcf-parse.c (yyparse):  Don't emit_register_classes if -fsyntax-only.\n\t* verify.c (verify_jvm_instructions):  Do INVALIDATE_PC after\n\thandling OPCODE_lookupswitch or OPCODE_tableswitch.\n\nFrom-SVN: r24970", "tree": {"sha": "356e1e499a8298fbc7c62d9854aefcaea9fbff2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356e1e499a8298fbc7c62d9854aefcaea9fbff2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb31662fadb407a0b9ed2d44a8171d830a060b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb31662fadb407a0b9ed2d44a8171d830a060b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb31662fadb407a0b9ed2d44a8171d830a060b05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb31662fadb407a0b9ed2d44a8171d830a060b05/comments", "author": null, "committer": null, "parents": [{"sha": "f044fba91499e83ed708cacffe65ad142d87e5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f044fba91499e83ed708cacffe65ad142d87e5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f044fba91499e83ed708cacffe65ad142d87e5f9"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "292cf4ca4b3b0c0d9eafd9046b24db0819b545b3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb31662fadb407a0b9ed2d44a8171d830a060b05/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb31662fadb407a0b9ed2d44a8171d830a060b05/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=bb31662fadb407a0b9ed2d44a8171d830a060b05", "patch": "@@ -1,3 +1,17 @@\n+Tue Feb  2 10:39:47 1999  Per Bothner  <bothner@cygnus.com>\n+\n+\tOptimize: `return (a ? b : c)' as: `if (a) return b; else return c;'.\n+\t* jcf-write.c (generate_bytecode_return):  New function.\n+\t(generate_bytecode_insns):  Use it, for RETURN_EXPR.\n+\n+\t* jcf-write.c (generate_bytecode_insns):  For REAL_CST that is 0 or 1,\n+\tgenerate special [fd]const_[01] instructions.\n+\t\n+\t* jcf-parse.c (yyparse):  Don't emit_register_classes if -fsyntax-only.\n+\n+\t* verify.c (verify_jvm_instructions):  Do INVALIDATE_PC after\n+\thandling OPCODE_lookupswitch or OPCODE_tableswitch.\n+\n Mon Feb  1 20:44:47 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* parse.y (patch_method_invocation):  Handle calling static methods,"}]}