{"sha": "4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQzYzc5OGQzZjBiN2EyZTJlYzRjNTc3YzhlNTQ5ZDkxNWU0YWIzNw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-08-23T17:48:37Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-08-23T17:48:37Z"}, "message": "re PR middle-end/23517 (can't cast between generic vector types and target supported vector types)\n\n2005-08-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR middle-end/23517\n\t* fold-const.c (fold_convert): Use VIEW_CONVERT_EXPR to convert\n\tbetween vectors.\n\t* convert.c (convert_to_integer, convert_to_vector): Likewise.\n\t* tree-vect-generic.c (tree_vec_extract, expand_vector_operations_1):\n\tLikewise.\n\nFrom-SVN: r103406", "tree": {"sha": "4c0428b73658184eadcaa843efb1e394f6f5bb89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c0428b73658184eadcaa843efb1e394f6f5bb89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28d0e143fe4a942b5c29b087db18107664e0809f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d0e143fe4a942b5c29b087db18107664e0809f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28d0e143fe4a942b5c29b087db18107664e0809f"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "9595e9aa0d4fd156154eb05ae02c3aa3ffa3c573", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "patch": "@@ -1,3 +1,12 @@\n+2005-08-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR middle-end/23517\n+\t* fold-const.c (fold_convert): Use VIEW_CONVERT_EXPR to convert\n+\tbetween vectors.\n+\t* convert.c (convert_to_integer, convert_to_vector): Likewise.\n+\t* tree-vect-generic.c (tree_vec_extract, expand_vector_operations_1):\n+\tLikewise.\n+\n 2005-08-23  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* config/rs6000/predicates.md (equality_operator): New."}, {"sha": "e5f8dcd76de235129672c535abf0eaa13ce8f1f7", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "patch": "@@ -684,7 +684,7 @@ convert_to_integer (tree type, tree expr)\n \t  error (\"can't convert between vector values of different size\");\n \t  return error_mark_node;\n \t}\n-      return build1 (NOP_EXPR, type, expr);\n+      return build1 (VIEW_CONVERT_EXPR, type, expr);\n \n     default:\n       error (\"aggregate value used where an integer was expected\");\n@@ -760,7 +760,7 @@ convert_to_vector (tree type, tree expr)\n \t  error (\"can't convert between vector values of different size\");\n \t  return error_mark_node;\n \t}\n-      return build1 (NOP_EXPR, type, expr);\n+      return build1 (VIEW_CONVERT_EXPR, type, expr);\n \n     default:\n       error (\"can't convert value to a vector\");"}, {"sha": "28d97df862acece7c706c23589a4d01a86ce28ac", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "patch": "@@ -2019,7 +2019,7 @@ fold_convert (tree type, tree arg)\n       gcc_assert (tree_int_cst_equal (TYPE_SIZE (type), TYPE_SIZE (orig)));\n       gcc_assert (INTEGRAL_TYPE_P (orig) || POINTER_TYPE_P (orig)\n \t\t  || TREE_CODE (orig) == VECTOR_TYPE);\n-      return fold_build1 (NOP_EXPR, type, arg);\n+      return fold_build1 (VIEW_CONVERT_EXPR, type, arg);\n \n     case VOID_TYPE:\n       return fold_build1 (CONVERT_EXPR, type, fold_ignored_result (arg));"}, {"sha": "463b161a434cdb4285a34c796873e2ecdedbdaa9", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=4d3c798d3f0b7a2e2ec4c577c8e549d915e4ab37", "patch": "@@ -106,13 +106,8 @@ tree_vec_extract (block_stmt_iterator *bsi, tree type,\n {\n   if (bitpos)\n     return gimplify_build3 (bsi, BIT_FIELD_REF, type, t, bitsize, bitpos);\n-\n-  /* Build a conversion; VIEW_CONVERT_EXPR is very expensive unless T will\n-     anyway be stored in memory, so prefer NOP_EXPR.  */\n-  else if (TYPE_MODE (type) == BLKmode)\n-    return gimplify_build1 (bsi, VIEW_CONVERT_EXPR, type, t);\n   else\n-    return gimplify_build1 (bsi, NOP_EXPR, type, t);\n+    return gimplify_build1 (bsi, VIEW_CONVERT_EXPR, type, t);\n }\n \n static tree\n@@ -455,16 +450,7 @@ expand_vector_operations_1 (block_stmt_iterator *bsi)\n   if (lang_hooks.types_compatible_p (TREE_TYPE (lhs), TREE_TYPE (rhs)))\n     *p_rhs = rhs;\n   else\n-    {\n-      /* Build a conversion; VIEW_CONVERT_EXPR is very expensive unless T will\n-         be stored in memory anyway, so prefer NOP_EXPR.  We should also try\n-\t performing the VIEW_CONVERT_EXPR on the left side of the\n-\t assignment.  */\n-      if (TYPE_MODE (TREE_TYPE (rhs)) == BLKmode)\n-        *p_rhs = gimplify_build1 (bsi, VIEW_CONVERT_EXPR, TREE_TYPE (lhs), rhs);\n-      else\n-\t*p_rhs = gimplify_build1 (bsi, NOP_EXPR, TREE_TYPE (lhs), rhs);\n-    }\n+    *p_rhs = gimplify_build1 (bsi, VIEW_CONVERT_EXPR, TREE_TYPE (lhs), rhs);\n \n   mark_stmt_modified (bsi_stmt (*bsi));\n }"}]}