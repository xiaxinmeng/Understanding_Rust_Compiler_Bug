{"sha": "e169e8b0ca1540ca16140b7576ca6324a566228f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE2OWU4YjBjYTE1NDBjYTE2MTQwYjc1NzZjYTYzMjRhNTY2MjI4Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-11T17:04:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-11T17:04:42Z"}, "message": "compiler: Improve handling of invalid ASCII characters in identifiers.\n\nFrom-SVN: r203450", "tree": {"sha": "faca9fbb9a77f74bdf00ff5c082b3032b8c2397e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faca9fbb9a77f74bdf00ff5c082b3032b8c2397e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e169e8b0ca1540ca16140b7576ca6324a566228f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e169e8b0ca1540ca16140b7576ca6324a566228f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e169e8b0ca1540ca16140b7576ca6324a566228f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e169e8b0ca1540ca16140b7576ca6324a566228f/comments", "author": null, "committer": null, "parents": [{"sha": "20e8fa532721590da0c89a8f442a9d1197eb2083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e8fa532721590da0c89a8f442a9d1197eb2083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20e8fa532721590da0c89a8f442a9d1197eb2083"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "1616963473372bfba89e29ddc24843f2d4a97f27", "filename": "gcc/go/gofrontend/lex.cc", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e169e8b0ca1540ca16140b7576ca6324a566228f/gcc%2Fgo%2Fgofrontend%2Flex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e169e8b0ca1540ca16140b7576ca6324a566228f/gcc%2Fgo%2Fgofrontend%2Flex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.cc?ref=e169e8b0ca1540ca16140b7576ca6324a566228f", "patch": "@@ -873,7 +873,28 @@ Lex::gather_identifier()\n \t      && (cc < 'a' || cc > 'z')\n \t      && cc != '_'\n \t      && (cc < '0' || cc > '9'))\n-\t    break;\n+\t    {\n+\t      // Check for an invalid character here, as we get better\n+\t      // error behaviour if we swallow them as part of the\n+\t      // identifier we are building.\n+\t      if ((cc >= ' ' && cc < 0x7f)\n+\t\t  || cc == '\\t'\n+\t\t  || cc == '\\r'\n+\t\t  || cc == '\\n')\n+\t\tbreak;\n+\n+\t      this->lineoff_ = p - this->linebuf_;\n+\t      error_at(this->location(),\n+\t\t       \"invalid character 0x%x in identifier\",\n+\t\t       cc);\n+\t      if (!has_non_ascii_char)\n+\t\t{\n+\t\t  buf.assign(pstart, p - pstart);\n+\t\t  has_non_ascii_char = true;\n+\t\t}\n+\t      if (!Lex::is_invalid_identifier(buf))\n+\t\tbuf.append(\"$INVALID$\");\n+\t    }\n \t  ++p;\n \t  if (is_first)\n \t    {"}]}