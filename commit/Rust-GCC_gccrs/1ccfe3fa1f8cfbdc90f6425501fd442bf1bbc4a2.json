{"sha": "1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNjZmUzZmExZjhjZmJkYzkwZjY0MjU1MDFmZDQ0MmJmMWJiYzRhMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-09T03:42:29Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-09T03:42:29Z"}, "message": "Indentation fix\n\nFrom-SVN: r38146", "tree": {"sha": "8145d1556f32f321def36824930563872c49e96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8145d1556f32f321def36824930563872c49e96d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2/comments", "author": null, "committer": null, "parents": [{"sha": "bd8757b313518d151d28fff18f4d7958b5cb7ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8757b313518d151d28fff18f4d7958b5cb7ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8757b313518d151d28fff18f4d7958b5cb7ba3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fbe5fe513c1e28657b6df5204c1d6e014f3a9e3a", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1ccfe3fa1f8cfbdc90f6425501fd442bf1bbc4a2", "patch": "@@ -4545,7 +4545,7 @@ store_constructor (exp, target, align, cleared, size)\n \t  store_constructor_field (to_rtx, bitsize, bitpos, mode,\n \t\t\t\t   TREE_VALUE (elt), type, align, cleared,\n \t\t\t\t   (DECL_NONADDRESSABLE_P (field)\n-\t\t\t\t   && GET_CODE (to_rtx) == MEM)\n+\t\t\t\t    && GET_CODE (to_rtx) == MEM)\n \t\t\t\t   ? MEM_ALIAS_SET (to_rtx)\n \t\t\t\t   : get_alias_set (TREE_TYPE (field)));\n \t}"}]}