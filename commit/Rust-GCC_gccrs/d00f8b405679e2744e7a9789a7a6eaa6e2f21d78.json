{"sha": "d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwZjhiNDA1Njc5ZTI3NDRlN2E5Nzg5YTdhNmVhYTZlMmYyMWQ3OA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-02-18T09:59:56Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-14T17:38:38Z"}, "message": "Fallback to default CPP spec for C++ on VxWorks\n\nArrange to inhibit the effects of CPLUSPLUS_CPP_SPEC in gnu-user.h,\nwhich #defines _GNU_SOURCE, which is invalid for VxWorks (possibly\nnot providing ::mkstemp, for example).\n\n2020-10-14  Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* config/vxworks.h: #undef CPLUSPLUS_CPP_SPEC.", "tree": {"sha": "41bedb10224ce7584c75960c0a7ead914abbcba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41bedb10224ce7584c75960c0a7ead914abbcba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69d6b3f650e73f272766a0c370b246a86c6a8d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d6b3f650e73f272766a0c370b246a86c6a8d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d6b3f650e73f272766a0c370b246a86c6a8d39"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "d3c417e7f5ae931b89d29c3bca77301f64234bae", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "patch": "@@ -70,6 +70,12 @@ along with GCC; see the file COPYING3.  If not see\n \n #endif\n \n+/* Our ports rely on gnu-user.h, which #defines _POSIX_SOURCE for\n+   C++ by default.  VxWorks doesn't provide 100% of what this implies\n+   (e.g. ::mkstemp), so, arrange to prevent that by falling back to\n+   the default CPP spec for C++ as well.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+\n /* For VxWorks static rtps, the system provides libc_internal.a, a superset of\n    libgcc.a that we need to use e.g. to satisfy references to __init and\n    __fini.  We still want our libgcc to prevail for symbols it would provide"}]}