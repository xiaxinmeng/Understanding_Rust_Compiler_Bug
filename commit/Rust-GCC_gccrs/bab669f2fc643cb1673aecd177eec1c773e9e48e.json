{"sha": "bab669f2fc643cb1673aecd177eec1c773e9e48e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiNjY5ZjJmYzY0M2NiMTY3M2FlY2QxNzdlZWMxYzc3M2U5ZTQ4ZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-01-29T16:29:25Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-02-01T15:09:11Z"}, "message": "c++: Improve sorry for __builtin_has_attribute [PR98355]\n\n__builtin_has_attribute doesn't work in templates yet (bug 92104), so\nin r11-471 I added a sorry.  But that only caught type-dependent\nexpressions and we also want to sorry on value-dependent expressions.\nThis patch uses uses_template_parms, but guarded with p_t_d, because\nu_t_p sets p_t_d and then v_d_e_p considers variables with reference\ntypes value-dependent, which breaks builtin-has-attribute-6.c.\n\nThis is a regression and I also plan to apply this to gcc-10.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/98355\n\t* parser.c (cp_parser_has_attribute_expression): Use\n\tuses_template_parms instead of type_dependent_expression_p.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/98355\n\t* g++.dg/ext/builtin-has-attribute2.C: New test.", "tree": {"sha": "510fff973e5d9d15d39ea43a78c6e8129700086b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/510fff973e5d9d15d39ea43a78c6e8129700086b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bab669f2fc643cb1673aecd177eec1c773e9e48e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab669f2fc643cb1673aecd177eec1c773e9e48e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab669f2fc643cb1673aecd177eec1c773e9e48e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab669f2fc643cb1673aecd177eec1c773e9e48e/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0a231a4aa2407bb7167daf98a37795a67364d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0a231a4aa2407bb7167daf98a37795a67364d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0a231a4aa2407bb7167daf98a37795a67364d8"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "abadaf972d60e4b76b2f81e31db844f1dfc00091", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab669f2fc643cb1673aecd177eec1c773e9e48e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab669f2fc643cb1673aecd177eec1c773e9e48e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=bab669f2fc643cb1673aecd177eec1c773e9e48e", "patch": "@@ -8934,7 +8934,7 @@ cp_parser_has_attribute_expression (cp_parser *parser)\n     {\n       if (oper == error_mark_node)\n \t/* Nothing.  */;\n-      else if (type_dependent_expression_p (oper))\n+      else if (processing_template_decl && uses_template_parms (oper))\n \tsorry_at (atloc, \"%<__builtin_has_attribute%> with dependent argument \"\n \t\t  \"not supported yet\");\n       else"}, {"sha": "aba7932a136365d57639493f21e23d53cd78c72e", "filename": "gcc/testsuite/g++.dg/ext/builtin-has-attribute2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab669f2fc643cb1673aecd177eec1c773e9e48e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-has-attribute2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab669f2fc643cb1673aecd177eec1c773e9e48e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-has-attribute2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-has-attribute2.C?ref=bab669f2fc643cb1673aecd177eec1c773e9e48e", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/98355\n+// { dg-do compile { target c++11 } }\n+\n+struct S { int a; };\n+template <int> struct T\n+{\n+  static_assert (!__builtin_has_attribute (((S*)0) -> a, packed), \"\"); // { dg-message \"sorry, unimplemented: .__builtin_has_attribute. with dependent argument not supported yet\" }\n+};"}]}