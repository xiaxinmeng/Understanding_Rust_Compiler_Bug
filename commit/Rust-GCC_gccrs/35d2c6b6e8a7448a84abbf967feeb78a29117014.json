{"sha": "35d2c6b6e8a7448a84abbf967feeb78a29117014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVkMmM2YjZlOGE3NDQ4YTg0YWJiZjk2N2ZlZWI3OGEyOTExNzAxNA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-10-04T18:24:29Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-10-04T18:24:29Z"}, "message": "PR fortran/97272 - Wrong answer from MAXLOC with character arg\n\nThe optional KIND argument to the MINLOC/MAXLOC intrinsic must not be\npassed to the library function, as the kind conversion of the result\nis treated explicitly elsewhere.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/97272\n\t* trans-intrinsic.c (strip_kind_from_actual): Helper function for\n\tremoval of KIND argument.\n\t(gfc_conv_intrinsic_minmaxloc): Ignore KIND argument here, as it\n\tis treated elsewhere.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/97272\n\t* gfortran.dg/pr97272.f90: New test.", "tree": {"sha": "25db061b1843c6b8c520ace515a1d3df3f050350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25db061b1843c6b8c520ace515a1d3df3f050350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35d2c6b6e8a7448a84abbf967feeb78a29117014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d2c6b6e8a7448a84abbf967feeb78a29117014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d2c6b6e8a7448a84abbf967feeb78a29117014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d2c6b6e8a7448a84abbf967feeb78a29117014/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11bd94806d488416dfad1b1ff2ff0f98001cd0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bd94806d488416dfad1b1ff2ff0f98001cd0ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11bd94806d488416dfad1b1ff2ff0f98001cd0ca"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "8729bc12152a972b11545627bcec6aaa12d13939", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d2c6b6e8a7448a84abbf967feeb78a29117014/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d2c6b6e8a7448a84abbf967feeb78a29117014/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=35d2c6b6e8a7448a84abbf967feeb78a29117014", "patch": "@@ -5073,6 +5073,24 @@ gfc_conv_intrinsic_dot_product (gfc_se * se, gfc_expr * expr)\n }\n \n \n+/* Remove unneeded kind= argument from actual argument list when the\n+   result conversion is dealt with in a different place.  */\n+\n+static void\n+strip_kind_from_actual (gfc_actual_arglist * actual)\n+{\n+  for (gfc_actual_arglist *a = actual; a; a = a->next)\n+    {\n+      gfc_actual_arglist *b = a->next;\n+      if (b && b->name && strcmp (b->name, \"kind\") == 0)\n+\t{\n+\t  a->next = b->next;\n+\t  b->next = NULL;\n+\t  gfc_free_actual_arglist (b);\n+\t}\n+    }\n+}\n+\n /* Emit code for minloc or maxloc intrinsic.  There are many different cases\n    we need to handle.  For performance reasons we sometimes create two\n    loops instead of one, where the second one is much simpler.\n@@ -5208,6 +5226,7 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n     {\n       gfc_actual_arglist *a, *b;\n       a = actual;\n+      strip_kind_from_actual (a);\n       while (a->next)\n \t{\n \t  b = a->next;"}, {"sha": "e81903860ead1eb04252f9f7393a020b3b36363f", "filename": "gcc/testsuite/gfortran.dg/pr97272.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d2c6b6e8a7448a84abbf967feeb78a29117014/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97272.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d2c6b6e8a7448a84abbf967feeb78a29117014/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97272.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97272.f90?ref=35d2c6b6e8a7448a84abbf967feeb78a29117014", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! PR fortran/97272 - Wrong answer from MAXLOC with character arg\n+\n+program test\n+  implicit none\n+  integer :: i, j, k, l = 10\n+  character, allocatable :: a(:)\n+  allocate (a(l))\n+  a(:) = 'a'\n+  l = l - 1\n+  a(l) = 'b'\n+  i = maxloc (a, dim=1)\n+  j = maxloc (a, dim=1, kind=2)\n+  k = maxloc (a, dim=1, kind=8, back=.true.)\n+! print *, 'i = ', i, 'a(i) = ', a(i)\n+! print *, 'j = ', j, 'a(j) = ', a(j)\n+! print *, 'k = ', k, 'a(k) = ', a(k)\n+  if (i /= l .or. j /= l .or. k /= l) stop 1\n+end"}]}