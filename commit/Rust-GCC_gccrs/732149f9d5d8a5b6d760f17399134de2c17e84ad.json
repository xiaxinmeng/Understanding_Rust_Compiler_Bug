{"sha": "732149f9d5d8a5b6d760f17399134de2c17e84ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyMTQ5ZjlkNWQ4YTViNmQ3NjBmMTczOTkxMzRkZTJjMTdlODRhZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T00:11:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T00:11:19Z"}, "message": "(init_decl_processing): Implement built-in functions fabsf, sqrtf,\n\nsinf, cosf, fabsl, sqrtl, sinl, cosl.\n\nFrom-SVN: r8619", "tree": {"sha": "ac7c4d67618d024b8a584cbb7c98c067eec2b0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac7c4d67618d024b8a584cbb7c98c067eec2b0fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/732149f9d5d8a5b6d760f17399134de2c17e84ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732149f9d5d8a5b6d760f17399134de2c17e84ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732149f9d5d8a5b6d760f17399134de2c17e84ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732149f9d5d8a5b6d760f17399134de2c17e84ad/comments", "author": null, "committer": null, "parents": [{"sha": "136cf361d69346b82a69b41ed98931c9e364c7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136cf361d69346b82a69b41ed98931c9e364c7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136cf361d69346b82a69b41ed98931c9e364c7a1"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "8feae27b8c7c9bf6b101fd1d7b8671e4aecfe87d", "filename": "gcc/c-decl.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732149f9d5d8a5b6d760f17399134de2c17e84ad/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732149f9d5d8a5b6d760f17399134de2c17e84ad/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=732149f9d5d8a5b6d760f17399134de2c17e84ad", "patch": "@@ -178,6 +178,8 @@ tree default_function_type;\n \n tree double_ftype_double, double_ftype_double_double;\n tree int_ftype_int, long_ftype_long;\n+tree float_ftype_float;\n+tree ldouble_ftype_ldouble;\n \n /* Function type `void (void *, void *, int)' and similar ones */\n \n@@ -2916,10 +2918,19 @@ init_decl_processing ()\n   void_ftype_any\n     = build_function_type (void_type_node, NULL_TREE);\n \n+  float_ftype_float\n+    = build_function_type (float_type_node,\n+\t\t\t   tree_cons (NULL_TREE, float_type_node, endlink));\n+\n   double_ftype_double\n     = build_function_type (double_type_node,\n \t\t\t   tree_cons (NULL_TREE, double_type_node, endlink));\n \n+  ldouble_ftype_ldouble\n+    = build_function_type (long_double_type_node,\n+\t\t\t   tree_cons (NULL_TREE, long_double_type_node,\n+\t\t\t\t      endlink));\n+\n   double_ftype_double_double\n     = build_function_type (double_type_node,\n \t\t\t   tree_cons (NULL_TREE, double_type_node,\n@@ -3037,8 +3048,12 @@ init_decl_processing ()\n     }\n \n   builtin_function (\"__builtin_abs\", int_ftype_int, BUILT_IN_ABS, NULL_PTR);\n+  builtin_function (\"__builtin_fabsf\", float_ftype_float, BUILT_IN_FABS,\n+\t\t    NULL_PTR);\n   builtin_function (\"__builtin_fabs\", double_ftype_double, BUILT_IN_FABS,\n \t\t    NULL_PTR);\n+  builtin_function (\"__builtin_fabsl\", ldouble_ftype_ldouble, BUILT_IN_FABS,\n+\t\t    NULL_PTR);\n   builtin_function (\"__builtin_labs\", long_ftype_long, BUILT_IN_LABS,\n \t\t    NULL_PTR);\n   builtin_function (\"__builtin_saveregs\",\n@@ -3099,12 +3114,24 @@ init_decl_processing ()\n \t\t    BUILT_IN_STRCPY, \"strcpy\");\n   builtin_function (\"__builtin_strlen\", strlen_ftype,\n \t\t    BUILT_IN_STRLEN, \"strlen\");\n+  builtin_function (\"__builtin_sqrtf\", float_ftype_float, \n+\t\t    BUILT_IN_FSQRT, \"sqrtf\");\n   builtin_function (\"__builtin_fsqrt\", double_ftype_double, \n \t\t    BUILT_IN_FSQRT, \"sqrt\");\n+  builtin_function (\"__builtin_sqrtl\", ldouble_ftype_ldouble, \n+\t\t    BUILT_IN_FSQRT, \"sqrtl\");\n+  builtin_function (\"__builtin_sinf\", float_ftype_float, \n+\t\t    BUILT_IN_SIN, \"sinf\");\n   builtin_function (\"__builtin_sin\", double_ftype_double, \n \t\t    BUILT_IN_SIN, \"sin\");\n+  builtin_function (\"__builtin_sinl\", ldouble_ftype_ldouble, \n+\t\t    BUILT_IN_SIN, \"sinl\");\n+  builtin_function (\"__builtin_cosf\", float_ftype_float, \n+\t\t    BUILT_IN_COS, \"cosf\");\n   builtin_function (\"__builtin_cos\", double_ftype_double, \n \t\t    BUILT_IN_COS, \"cos\");\n+  builtin_function (\"__builtin_cosl\", ldouble_ftype_ldouble, \n+\t\t    BUILT_IN_COS, \"cosl\");\n \n   /* In an ANSI C program, it is okay to supply built-in meanings\n      for these functions, since applications cannot validly use them\n@@ -3113,7 +3140,10 @@ init_decl_processing ()\n   if (!flag_no_builtin)\n     {\n       builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS, NULL_PTR);\n+      builtin_function (\"fabsf\", float_ftype_float, BUILT_IN_FABS, NULL_PTR);\n       builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS, NULL_PTR);\n+      builtin_function (\"fabsl\", ldouble_ftype_ldouble, BUILT_IN_FABS,\n+\t\t\tNULL_PTR);\n       builtin_function (\"labs\", long_ftype_long, BUILT_IN_LABS, NULL_PTR);\n       builtin_function (\"memcpy\", memcpy_ftype, BUILT_IN_MEMCPY, NULL_PTR);\n       builtin_function (\"memcmp\", int_ftype_cptr_cptr_sizet, BUILT_IN_MEMCMP,\n@@ -3123,9 +3153,16 @@ init_decl_processing ()\n       builtin_function (\"strcpy\", string_ftype_ptr_ptr, BUILT_IN_STRCPY,\n \t\t\tNULL_PTR);\n       builtin_function (\"strlen\", strlen_ftype, BUILT_IN_STRLEN, NULL_PTR);\n+      builtin_function (\"sqrtf\", float_ftype_float, BUILT_IN_FSQRT, NULL_PTR);\n       builtin_function (\"sqrt\", double_ftype_double, BUILT_IN_FSQRT, NULL_PTR);\n+      builtin_function (\"sqrtl\", ldouble_ftype_ldouble, BUILT_IN_FSQRT,\n+\t\t\tNULL_PTR);\n+      builtin_function (\"sinf\", float_ftype_float, BUILT_IN_SIN, NULL_PTR);\n       builtin_function (\"sin\", double_ftype_double, BUILT_IN_SIN, NULL_PTR);\n+      builtin_function (\"sinl\", ldouble_ftype_ldouble, BUILT_IN_SIN, NULL_PTR);\n+      builtin_function (\"cosf\", float_ftype_float, BUILT_IN_COS, NULL_PTR);\n       builtin_function (\"cos\", double_ftype_double, BUILT_IN_COS, NULL_PTR);\n+      builtin_function (\"cosl\", ldouble_ftype_ldouble, BUILT_IN_COS, NULL_PTR);\n \n       /* Declare these functions volatile\n \t to avoid spurious \"control drops through\" warnings.  */"}]}