{"sha": "460dcab481fb441d1b9d12a006519dbb75bc25f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYwZGNhYjQ4MWZiNDQxZDFiOWQxMmEwMDY1MTlkYmI3NWJjMjVmNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-14T21:34:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-14T21:34:01Z"}, "message": "(find_a_file): Try EXECUTABLE_SUFFIX first, then file without the\nsuffix.\n\nFrom-SVN: r7459", "tree": {"sha": "f395d7fbb93aac78a88c62d9762e97c26627960a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f395d7fbb93aac78a88c62d9762e97c26627960a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/460dcab481fb441d1b9d12a006519dbb75bc25f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460dcab481fb441d1b9d12a006519dbb75bc25f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460dcab481fb441d1b9d12a006519dbb75bc25f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460dcab481fb441d1b9d12a006519dbb75bc25f7/comments", "author": null, "committer": null, "parents": [{"sha": "d008e26c417d2a4d950185001cfb89edc18c4923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d008e26c417d2a4d950185001cfb89edc18c4923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d008e26c417d2a4d950185001cfb89edc18c4923"}], "stats": {"total": 60, "additions": 37, "deletions": 23}, "files": [{"sha": "57e9bde5e451ae15e7c102e26bc5e6b3df5d2bc8", "filename": "gcc/gcc.c", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460dcab481fb441d1b9d12a006519dbb75bc25f7/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460dcab481fb441d1b9d12a006519dbb75bc25f7/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=460dcab481fb441d1b9d12a006519dbb75bc25f7", "patch": "@@ -1626,19 +1626,13 @@ find_a_file (pprefix, name, mode)\n       {\n \tif (machine_suffix)\n \t  {\n-\t    strcpy (temp, pl->prefix);\n-\t    strcat (temp, machine_suffix);\n-\t    strcat (temp, name);\n-\t    if (access (temp, mode) == 0)\n-\t      {\n-\t\tif (pl->used_flag_ptr != 0)\n-\t\t  *pl->used_flag_ptr = 1;\n-\t\treturn temp;\n-\t      }\n \t    /* Some systems have a suffix for executable files.\n-\t       So try appending that.  */\n+\t       So try appending that first.  */\n \t    if (file_suffix[0] != 0)\n \t      {\n+\t\tstrcpy (temp, pl->prefix);\n+\t\tstrcat (temp, machine_suffix);\n+\t\tstrcat (temp, name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access (temp, mode) == 0)\n \t\t  {\n@@ -1647,24 +1641,30 @@ find_a_file (pprefix, name, mode)\n \t\t    return temp;\n \t\t  }\n \t      }\n-\t  }\n-\t/* Certain prefixes are tried with just the machine type,\n-\t   not the version.  This is used for finding as, ld, etc.  */\n-\tif (just_machine_suffix && pl->require_machine_suffix == 2)\n-\t  {\n+\n+\t    /* Now try just the name.  */\n \t    strcpy (temp, pl->prefix);\n-\t    strcat (temp, just_machine_suffix);\n+\t    strcat (temp, machine_suffix);\n \t    strcat (temp, name);\n \t    if (access (temp, mode) == 0)\n \t      {\n \t\tif (pl->used_flag_ptr != 0)\n \t\t  *pl->used_flag_ptr = 1;\n \t\treturn temp;\n \t      }\n+\t  }\n+\n+\t/* Certain prefixes are tried with just the machine type,\n+\t   not the version.  This is used for finding as, ld, etc.  */\n+\tif (just_machine_suffix && pl->require_machine_suffix == 2)\n+\t  {\n \t    /* Some systems have a suffix for executable files.\n-\t       So try appending that.  */\n+\t       So try appending that first.  */\n \t    if (file_suffix[0] != 0)\n \t      {\n+\t\tstrcpy (temp, pl->prefix);\n+\t\tstrcat (temp, just_machine_suffix);\n+\t\tstrcat (temp, name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access (temp, mode) == 0)\n \t\t  {\n@@ -1673,23 +1673,28 @@ find_a_file (pprefix, name, mode)\n \t\t    return temp;\n \t\t  }\n \t      }\n-\t  }\n-\t/* Certain prefixes can't be used without the machine suffix\n-\t   when the machine or version is explicitly specified.  */\n-\tif (!pl->require_machine_suffix)\n-\t  {\n+\n \t    strcpy (temp, pl->prefix);\n+\t    strcat (temp, just_machine_suffix);\n \t    strcat (temp, name);\n \t    if (access (temp, mode) == 0)\n \t      {\n \t\tif (pl->used_flag_ptr != 0)\n \t\t  *pl->used_flag_ptr = 1;\n \t\treturn temp;\n \t      }\n+\t  }\n+\n+\t/* Certain prefixes can't be used without the machine suffix\n+\t   when the machine or version is explicitly specified.  */\n+\tif (!pl->require_machine_suffix)\n+\t  {\n \t    /* Some systems have a suffix for executable files.\n-\t       So try appending that.  */\n+\t       So try appending that first.  */\n \t    if (file_suffix[0] != 0)\n \t      {\n+\t\tstrcpy (temp, pl->prefix);\n+\t\tstrcat (temp, name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access (temp, mode) == 0)\n \t\t  {\n@@ -1698,6 +1703,15 @@ find_a_file (pprefix, name, mode)\n \t\t    return temp;\n \t\t  }\n \t      }\n+\n+\t    strcpy (temp, pl->prefix);\n+\t    strcat (temp, name);\n+\t    if (access (temp, mode) == 0)\n+\t      {\n+\t\tif (pl->used_flag_ptr != 0)\n+\t\t  *pl->used_flag_ptr = 1;\n+\t\treturn temp;\n+\t      }\n \t  }\n       }\n "}]}