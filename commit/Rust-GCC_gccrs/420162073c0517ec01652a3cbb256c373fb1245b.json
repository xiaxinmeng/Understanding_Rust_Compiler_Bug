{"sha": "420162073c0517ec01652a3cbb256c373fb1245b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwMTYyMDczYzA1MTdlYzAxNjUyYTNjYmIyNTZjMzczZmIxMjQ1Yg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-05-13T00:16:08Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-05-13T00:16:08Z"}, "message": "compatibility.cc (_ZTIe, [...]): Change type to const void * const.\n\n\t* src/compatibility.cc (_ZTIe, _ZTIPe, _ZTIPKe): Change type to\n\tconst void * const.\n\nFrom-SVN: r147455", "tree": {"sha": "a7c3e3900ccdb3d71037d83691d316568ed18930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7c3e3900ccdb3d71037d83691d316568ed18930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/420162073c0517ec01652a3cbb256c373fb1245b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420162073c0517ec01652a3cbb256c373fb1245b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/420162073c0517ec01652a3cbb256c373fb1245b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420162073c0517ec01652a3cbb256c373fb1245b/comments", "author": null, "committer": null, "parents": [{"sha": "2b703e1aa2bba418175450095bfed7e38da8eeab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b703e1aa2bba418175450095bfed7e38da8eeab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b703e1aa2bba418175450095bfed7e38da8eeab"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "f95f724428ead3e303a808ece47d1735eaba1d21", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/420162073c0517ec01652a3cbb256c373fb1245b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/420162073c0517ec01652a3cbb256c373fb1245b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=420162073c0517ec01652a3cbb256c373fb1245b", "patch": "@@ -1,3 +1,8 @@\n+2009-05-13  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* src/compatibility.cc (_ZTIe, _ZTIPe, _ZTIPKe): Change type to\n+\tconst void * const.\n+\n 2009-05-12  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n         * doc/xml/manual/status_cxx200x.xml: Note missing constexpr for\n@@ -19,7 +24,7 @@\n \n 2009-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n-\t* include/ext/throw_allocator.h: Remove redundante include.\n+\t* include/ext/throw_allocator.h: Remove redundant include.\n \n 2009-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n@@ -45,10 +50,10 @@\n \n 2009-05-06  Johannes Singler  <singler@ira.uka.de>\n \n-        PR libstdc++/39546\n-        * include/parallel/algo.h (find_switch):\n-        Parametrize binder2nd with const T& instead of T.\n-        * testsuite/25_algorithms/find/39546.cc: new test case\n+\tPR libstdc++/39546\n+\t* include/parallel/algo.h (find_switch):\n+\tParametrize binder2nd with const T& instead of T.\n+\t* testsuite/25_algorithms/find/39546.cc: new test case\n \n 2009-05-06  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "8889749eed80b876453f4ce52c5cd81f2cbaf53f", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/420162073c0517ec01652a3cbb256c373fb1245b/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/420162073c0517ec01652a3cbb256c373fb1245b/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=420162073c0517ec01652a3cbb256c373fb1245b", "patch": "@@ -502,13 +502,13 @@ extern void *_ZTVN10__cxxabiv119__pointer_type_infoE[];\n extern __attribute__((used, weak)) const char _ZTSe[2] = \"e\";\n extern __attribute__((used, weak)) const char _ZTSPe[3] = \"Pe\";\n extern __attribute__((used, weak)) const char _ZTSPKe[4] = \"PKe\";\n-extern __attribute__((used, weak)) const void *_ZTIe[2]\n+extern __attribute__((used, weak)) const void * const _ZTIe[2]\n   = { (void *) &_ZTVN10__cxxabiv123__fundamental_type_infoE[2],\n       (void *) _ZTSe };\n-extern __attribute__((used, weak)) const void *_ZTIPe[4]\n+extern __attribute__((used, weak)) const void * const _ZTIPe[4]\n   = { (void *) &_ZTVN10__cxxabiv119__pointer_type_infoE[2],\n       (void *) _ZTSPe, (void *) 0L, (void *) _ZTIe };\n-extern __attribute__((used, weak)) const void *_ZTIPKe[4]\n+extern __attribute__((used, weak)) const void * const _ZTIPKe[4]\n   = { (void *) &_ZTVN10__cxxabiv119__pointer_type_infoE[2],\n       (void *) _ZTSPKe, (void *) 1L, (void *) _ZTIe };\n #endif // _GLIBCXX_LONG_DOUBLE_COMPAT"}]}