{"sha": "238b11b597a0d7e5dd60422ba68d0c013040464e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4YjExYjU5N2EwZDdlNWRkNjA0MjJiYTY4ZDBjMDEzMDQwNDY0ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-02-02T16:33:03Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-02T16:33:03Z"}, "message": "* doc/invoke.texi (SPARC options): Further improve.\n\nFrom-SVN: r77124", "tree": {"sha": "534a977d607f30da253bc760622a963263dd4d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/534a977d607f30da253bc760622a963263dd4d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/238b11b597a0d7e5dd60422ba68d0c013040464e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238b11b597a0d7e5dd60422ba68d0c013040464e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/238b11b597a0d7e5dd60422ba68d0c013040464e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238b11b597a0d7e5dd60422ba68d0c013040464e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ed23e25a8971c36e4e47f70a756772a27cfddcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed23e25a8971c36e4e47f70a756772a27cfddcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed23e25a8971c36e4e47f70a756772a27cfddcd"}], "stats": {"total": 77, "additions": 44, "deletions": 33}, "files": [{"sha": "d3203c584e30f2257c3d0cbcbd93ded88010bba2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238b11b597a0d7e5dd60422ba68d0c013040464e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238b11b597a0d7e5dd60422ba68d0c013040464e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=238b11b597a0d7e5dd60422ba68d0c013040464e", "patch": "@@ -1,3 +1,7 @@\n+2004-02-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* doc/invoke.texi (SPARC options): Further improve.\n+\n 2004-02-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/arm/arm.md, config/c4x/c4x.md, config/cris/cris.md,"}, {"sha": "ae45439a81c595a718ba159100d9191d82bb6da8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 40, "deletions": 33, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238b11b597a0d7e5dd60422ba68d0c013040464e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238b11b597a0d7e5dd60422ba68d0c013040464e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=238b11b597a0d7e5dd60422ba68d0c013040464e", "patch": "@@ -6275,18 +6275,6 @@ This option is only available on SunOS and Solaris.\n @opindex mv8\n @opindex msparclite\n These two options select variations on the SPARC architecture.\n-\n-By default (unless specifically configured for the Fujitsu SPARClite),\n-GCC generates code for the V7 variant of the SPARC architecture.\n-\n-@option{-mv8} will give you SPARC-V8 code.  The only difference from V7\n-code is that the compiler emits the integer multiply and integer\n-divide instructions which exist in SPARC-V8 but not in SPARC-V7.\n-\n-@option{-msparclite} will give you SPARClite code.  This adds the integer\n-multiply, integer divide step and scan (@code{ffs}) instructions which\n-exist in SPARClite but not in SPARC-V7.\n-\n These options are deprecated and will be deleted in a future GCC release.\n They have been replaced with @option{-mcpu=xxx}.\n \n@@ -6299,23 +6287,6 @@ They have been replaced with @option{-mcpu=xxx}.\n @opindex -mf930\n @opindex -mf934\n These four options select the processor for which the code is optimized.\n-\n-With @option{-mcypress} (the default), the compiler optimizes code for the\n-Cypress CY7C602 chip, as used in the SPARCStation/SPARCServer 3xx series.\n-This is also appropriate for the older SPARCStation 1, 2, IPX etc.\n-\n-With @option{-msupersparc} the compiler optimizes code for the SuperSPARC cpu, as\n-used in the SPARCStation 10, 1000 and 2000 series.  This flag also enables use\n-of the SPARC-V8 instruction set.\n-\n-With @option{-mf930} the compiler optimizes code for the Fujitsu MB86930 chip,\n-which is the original SPARClite, with no FPU.  This flag also enables use\n-of the SPARClite instruction set and disables the FPU support.\n-\n-With @option{-mf934} the compiler optimizes code for the Fujitsu MB86934 chip,\n-which is the more recent SPARClite with FPU.  This flag also enables use\n-of the SPARClite instruction set and enables the FPU support.\n-\n These options are deprecated and will be deleted in a future GCC release.\n They have been replaced with @option{-mcpu=xxx}.\n \n@@ -6343,6 +6314,41 @@ implementations.\n     v9:             ultrasparc, ultrasparc3\n @end smallexample\n \n+By default (unless configured otherwise), GCC generates code for the V7\n+variant of the SPARC architecture.  With @option{-mcpu=cypress}, the compiler\n+additionally optimizes it for the Cypress CY7C602 chip, as used in the\n+SPARCStation/SPARCServer 3xx series.  This is also appropriate for the older\n+SPARCStation 1, 2, IPX etc.\n+\n+With @option{-mcpu=v8}, GCC generates code for the V8 variant of the SPARC\n+architecture.  The only difference from V7 code is that the compiler emits\n+the integer multiply and integer divide instructions which exist in SPARC-V8\n+but not in SPARC-V7.  With @option{-mcpu=supersparc}, the compiler additionally\n+optimizes it for the SuperSPARC chip, as used in the SPARCStation 10, 1000 and\n+2000 series.\n+\n+With @option{-mcpu=sparclite}, GCC generates code for the SPARClite variant of\n+the SPARC architecture.  This adds the integer multiply, integer divide step\n+and scan (@code{ffs}) instructions which exist in SPARClite but not in SPARC-V7.\n+With @option{-mcpu=f930}, the compiler additionally optimizes it for the\n+Fujitsu MB86930 chip, which is the original SPARClite, with no FPU.  With\n+@option{-mcpu=f934}, the compiler additionally optimizes it for the Fujitsu\n+MB86934 chip, which is the more recent SPARClite with FPU.\n+\n+With @option{-mcpu=sparclet}, GCC generates code for the SPARClet variant of\n+the SPARC architecture.  This adds the integer multiply, multiply/accumulate,\n+integer divide step and scan (@code{ffs}) instructions which exist in SPARClet\n+but not in SPARC-V7.  With @option{-mcpu=tsc701}, the compiler additionally\n+optimizes it for the TEMIC SPARClet chip.\n+\n+With @option{-mcpu=v9}, GCC generates code for the V9 variant of the SPARC\n+architecture.  This adds 64-bit integer and floating-point move instructions,\n+3 additional floating-point condition code registers and conditional move\n+instructions.  With @option{-mcpu=ultrasparc}, the compiler additionally\n+optimizes it for the Sun UltraSPARC I/II chips.  With\n+@option{-mcpu=ultrasparc3}, the compiler additionally optimizes it for the\n+Sun UltraSPARC III chip.\n+\n @item -mtune=@var{cpu_type}\n @opindex mtune\n Set the instruction scheduling parameters for machine type\n@@ -6360,15 +6366,16 @@ that select a particular cpu implementation.  Those are @samp{cypress},\n @itemx -mno-v8plus\n @opindex -mv8plus\n @opindex -mno-v8plus\n-@option{-mv8plus} will give you SPARC-V8+ code.  The difference from V8 is\n-that the global and out registers are considered 64-bit wide.  This is the\n-default on Solaris in 32-bit mode for all SPARC-V9 processors.\n+With @option{-mv8plus}, GCC generates code for the SPARC-V8+ ABI.  The\n+difference from the V8 ABI is that the global and out registers are\n+considered 64-bit wide.  This is enabled by default on Solaris in 32-bit\n+mode for all SPARC-V9 processors.\n \n @item -mvis\n @itemx -mno-vis\n @opindex -mvis\n @opindex -mno-vis\n-@option{-mvis} will give you code that takes advantage of the UltraSPARC\n+With @option{-mvis}, GCC generates code that takes advantage of the UltraSPARC\n Visual Instruction Set extensions.  The default is @option{-mno-vis}.\n @end table\n "}]}