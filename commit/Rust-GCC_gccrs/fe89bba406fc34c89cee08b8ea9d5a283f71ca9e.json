{"sha": "fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU4OWJiYTQwNmZjMzRjODljZWUwOGI4ZWE5ZDVhMjgzZjcxY2E5ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-02-11T18:59:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-02-11T18:59:24Z"}, "message": "re PR target/59927 (ICE sorry, unimplemented: ms_abi attribute requires -maccumulate-outgoing-args or subtarget optimization implying it)\n\n\tPR target/59927\n\tRevert\n\t2013-12-15  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR testsuite/58630\n\t* gcc.target/i386/pr43662.c (dg-options):\n\tAdd -maccumulate-outgoing-args.\n\t* gcc.target/i386/pr43869.c (dg-options): Ditto.\n\t* gcc.target/i386/pr57003.c (dg-options): Ditto.\n\t* gcc.target/i386/avx-vzeroupper-16.c (dg-options):\n\tRemove -mtune=generic and add -maccumulate-outgoing-args instead.\n\t* gcc.target/i386/avx-vzeroupper-17.c (dg-options): Ditto.\n\t* gcc.target/i386/avx-vzeroupper-18.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-1.c (dg-options):\n\tAdd -maccumulate-outgoing-args.\n\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-2b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect-2b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/leaf-1.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/leaf-2.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/pr38891.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-1.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-2.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-3.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-4b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-5b.c (dg-options): Ditto.\n\nFrom-SVN: r207697", "tree": {"sha": "85496786a2f4fbf8a20b63fac92173cff4461b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85496786a2f4fbf8a20b63fac92173cff4461b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6521b2e96c1a95ae3ebf0b093d0755fb65d45c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6521b2e96c1a95ae3ebf0b093d0755fb65d45c81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6521b2e96c1a95ae3ebf0b093d0755fb65d45c81"}], "stats": {"total": 76, "additions": 54, "deletions": 22}, "files": [{"sha": "6d3743afddb79116d99145aecedb2d06f498833f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,3 +1,36 @@\n+2014-02-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/59927\n+\tRevert\n+\t2013-12-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR testsuite/58630\n+\t* gcc.target/i386/pr43662.c (dg-options):\n+\tAdd -maccumulate-outgoing-args.\n+\t* gcc.target/i386/pr43869.c (dg-options): Ditto.\n+\t* gcc.target/i386/pr57003.c (dg-options): Ditto.\n+\t* gcc.target/i386/avx-vzeroupper-16.c (dg-options):\n+\tRemove -mtune=generic and add -maccumulate-outgoing-args instead.\n+\t* gcc.target/i386/avx-vzeroupper-17.c (dg-options): Ditto.\n+\t* gcc.target/i386/avx-vzeroupper-18.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-1.c (dg-options):\n+\tAdd -maccumulate-outgoing-args.\n+\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-2b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect-2b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/leaf-1.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/leaf-2.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/pr38891.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-1.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-2.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-3.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-4b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-5b.c (dg-options): Ditto.\n+\n 2014-02-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.dg/vect/pr56787.c: Mark as xfail for vect_no_align."}, {"sha": "66c8446686cf718b227214e760160a3c1dab96ac", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n+/* { dg-options \"-O2 -mavx -mabi=ms -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "acb432945ec1cb782df828ff8eaf5614675dc75b", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n+/* { dg-options \"-O2 -mavx -mabi=ms -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "6f67f3ee322fa7d696a5ed4891955d6d6a62cbfc", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O0 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n+/* { dg-options \"-O0 -mavx -mabi=ms -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "2896a1a52c37ed69055c17f5646f7cc881887dbe", "filename": "gcc/testsuite/gcc.target/i386/pr43662.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2 -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2\" } */\n \n void __attribute__ ((ms_abi)) foo (void)\n {"}, {"sha": "4157db1d16854248e0b3cb638e6c9d5283eeac6c", "filename": "gcc/testsuite/gcc.target/i386/pr43869.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-maccumulate-outgoing-args\" } */\n \n int __attribute__((__noinline__))\n bugged(float f1, float f2, float f3, float f4,"}, {"sha": "dfa6b8b50959cfe19b205ede633f85908ba368ba", "filename": "gcc/testsuite/gcc.target/i386/pr57003.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,6 +1,6 @@\n /* PR rtl-optimization/57003 */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2\" } */\n \n #define N 2001\n unsigned short *b, *c, *d;"}, {"sha": "7d0b5063637b2c67447d0e15916937e69acfd85f", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -ffast-math -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-std=gnu99 -ffast-math\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "513f5619a2ee58d5b94e7d4489d0f52bbcf0823a", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi standard calls.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n /* { dg-additional-sources \"func-2b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "fe85dd1860d2b2495ead3e392bb02858cc8f8bfb", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-2b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls.  */\n-/* { dg-options \"-mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n \n long double func_cross (long double a, double b, float c, long d, int e,\n \t\t\tchar f)"}, {"sha": "e1ff8f83374653b19dd244adbd224c22a7ee3212", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi standard calls via variable.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n /* { dg-additional-sources \"func-indirect-2b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "1a9fccd97f6a2f8194f3d205d39e8a13e6c32ee5", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect-2b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls via variable.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n \n typedef int (*func)(void *, char *, char *, short, long long);\n "}, {"sha": "0c0cbb271cad9107d6252bb6295a4edb29fa7f09", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -ffast-math -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-std=gnu99 -ffast-math\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "35f8b53cac1e876c9145ff1cd8334e9bbaa9db40", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/leaf-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mabi=sysv -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=sysv\" } */\n \n __attribute__ ((ms_abi))\n int foo (void)"}, {"sha": "2a54bc89cfc2abb5204228182aaed42013036988", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/leaf-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mabi=sysv -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=sysv\" } */\n \n extern int glb1, gbl2, gbl3;\n "}, {"sha": "d31b8c3774cb81e97969afd88260f6e4d2013c07", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/pr38891.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,7 +1,7 @@\n /* Test for cross x86_64<->w64 abi standard calls.\n */\n /* { dg-do compile } */\n-/* { dg-options \"-mno-sse -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-mno-sse\" } */\n #include \"callabi.h\"\n \n long double"}, {"sha": "a6d8463ed5c386bd3530ef653a46715c95c71f31", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-std=gnu99\" } */\n #include \"callabi.h\"\n \n extern __SIZE_TYPE__ strlen (const char *);"}, {"sha": "e281e860f780bdfc628b51e07db07212b88bcc2b", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-std=gnu99\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "7cca7ac871806862b4315100f2f0eb4e15c0b330", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-std=gnu99\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "36bd3483f6af114a29cd53a8abe52facc2d8ac25", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-4a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n /* { dg-additional-sources \"vaarg-4b.c\" } */\n \n extern __SIZE_TYPE__ __attribute__ ((sysv_abi)) strlen (const char *);"}, {"sha": "f33906bd29356b919a672e7256166761b4309141", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-4b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n \n #include <stdarg.h>\n "}, {"sha": "fa85677797b82b9d05764ad3b7aba767c8a41dcb", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-5a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n /* { dg-additional-sources \"vaarg-5b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "e5dd4727bdd48545e9b2521375f11a2623a28332", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-5b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe89bba406fc34c89cee08b8ea9d5a283f71ca9e/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c?ref=fe89bba406fc34c89cee08b8ea9d5a283f71ca9e", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n \n #include <stdarg.h>\n "}]}