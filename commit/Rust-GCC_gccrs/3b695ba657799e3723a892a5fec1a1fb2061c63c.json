{"sha": "3b695ba657799e3723a892a5fec1a1fb2061c63c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2OTViYTY1Nzc5OWUzNzIzYTg5MmE1ZmVjMWExZmIyMDYxYzYzYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-08T18:18:42Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-08T18:18:42Z"}, "message": "re PR target/70998 (ICE in pre_and_rev_post_order_compute, at cfganal.c)\n\n\tPR target/70998\n\t* config/i386/sse.md (*sse2_vd_cvtsd2ss): New insn pattern.\n\t(*sse2_vd_cvtss2sd): Ditto.\n\t* config/i386/i386.md\n\t(TARGET_SSE_PARTIAL_REG_DEPENDENCY float_truncate df->sf splitter):\n\tGenerate *sse2_vd_cvtsd2ss pattern.\n\t(TARGET_SSE_PARTIAL_REG_DEPENDENCY float_extend sf->df splitter):\n\tGenerate *sse2_vd_cvtss2sd pattern.\n\nFrom-SVN: r236011", "tree": {"sha": "a372696671e6a6fadfd9efed22ebf995a5e46a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a372696671e6a6fadfd9efed22ebf995a5e46a4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b695ba657799e3723a892a5fec1a1fb2061c63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b695ba657799e3723a892a5fec1a1fb2061c63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b695ba657799e3723a892a5fec1a1fb2061c63c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b695ba657799e3723a892a5fec1a1fb2061c63c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0983497fad139a95bc9d9e8c1ea7a5d377ae273e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0983497fad139a95bc9d9e8c1ea7a5d377ae273e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0983497fad139a95bc9d9e8c1ea7a5d377ae273e"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "c562800bee187357263523b2c14d9e3dc49672e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b695ba657799e3723a892a5fec1a1fb2061c63c", "patch": "@@ -1,3 +1,14 @@\n+2016-05-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70998\n+\t* config/i386/sse.md (*sse2_vd_cvtsd2ss): New insn pattern.\n+\t(*sse2_vd_cvtss2sd): Ditto.\n+\t* config/i386/i386.md\n+\t(TARGET_SSE_PARTIAL_REG_DEPENDENCY float_truncate df->sf splitter):\n+\tGenerate *sse2_vd_cvtsd2ss pattern.\n+\t(TARGET_SSE_PARTIAL_REG_DEPENDENCY float_extend sf->df splitter):\n+\tGenerate *sse2_vd_cvtss2sd pattern.\n+\n 2016-05-08  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.h (GET_SH_ARG_CLASS): Convert macro into ..."}, {"sha": "f450cf2760c5b67c199be15e387446605316f2e2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3b695ba657799e3723a892a5fec1a1fb2061c63c", "patch": "@@ -5192,13 +5192,12 @@\n   [(set (match_dup 0)\n \t(vec_merge:V4SF\n \t  (vec_duplicate:V4SF\n-\t    (float_truncate:V2SF\n+\t    (float_truncate:SF\n \t      (match_dup 1)))\n \t  (match_dup 0)\n \t  (const_int 1)))]\n {\n   operands[0] = lowpart_subreg (V4SFmode, operands[0], SFmode);\n-  operands[1] = lowpart_subreg (V2DFmode, operands[1], DFmode);\n   emit_move_insn (operands[0], CONST0_RTX (V4SFmode));\n })\n \n@@ -5219,15 +5218,13 @@\n        || TARGET_AVX512VL)\"\n   [(set (match_dup 0)\n         (vec_merge:V2DF\n-          (float_extend:V2DF\n-            (vec_select:V2SF\n-              (match_dup 1)\n-              (parallel [(const_int 0) (const_int 1)])))\n-          (match_dup 0)\n+\t  (vec_duplicate:V2DF\n+\t    (float_extend:DF\n+\t      (match_dup 1)))\n+\t  (match_dup 0)\n           (const_int 1)))]\n {\n   operands[0] = lowpart_subreg (V2DFmode, operands[0], DFmode);\n-  operands[1] = lowpart_subreg (V4SFmode, operands[1], SFmode);\n   emit_move_insn (operands[0], CONST0_RTX (V2DFmode));\n })\n "}, {"sha": "411f78e0ede43b3ff0f647d31a2255b961135980", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b695ba657799e3723a892a5fec1a1fb2061c63c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3b695ba657799e3723a892a5fec1a1fb2061c63c", "patch": "@@ -4949,6 +4949,27 @@\n    (set_attr \"prefix\" \"orig,orig,<round_prefix>\")\n    (set_attr \"mode\" \"SF\")])\n \n+(define_insn \"*sse2_vd_cvtsd2ss\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x,v\")\n+\t(vec_merge:V4SF\n+\t  (vec_duplicate:V4SF\n+\t    (float_truncate:SF (match_operand:DF 2 \"nonimmediate_operand\" \"x,m,vm\")))\n+\t  (match_operand:V4SF 1 \"register_operand\" \"0,0,v\")\n+\t  (const_int 1)))]\n+  \"TARGET_SSE2\"\n+  \"@\n+   cvtsd2ss\\t{%2, %0|%0, %2}\n+   cvtsd2ss\\t{%2, %0|%0, %2}\n+   vcvtsd2ss\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")\n+   (set_attr \"type\" \"ssecvt\")\n+   (set_attr \"athlon_decode\" \"vector,double,*\")\n+   (set_attr \"amdfam10_decode\" \"vector,double,*\")\n+   (set_attr \"bdver1_decode\" \"direct,direct,*\")\n+   (set_attr \"btver2_decode\" \"double,double,double\")\n+   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"mode\" \"SF\")])\n+\n (define_insn \"sse2_cvtss2sd<round_saeonly_name>\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x,v\")\n \t(vec_merge:V2DF\n@@ -4972,6 +4993,27 @@\n    (set_attr \"prefix\" \"orig,orig,<round_saeonly_prefix>\")\n    (set_attr \"mode\" \"DF\")])\n \n+(define_insn \"*sse2_vd_cvtss2sd\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x,v\")\n+\t(vec_merge:V2DF\n+\t  (vec_duplicate:V2DF\n+\t    (float_extend:DF (match_operand:SF 2 \"nonimmediate_operand\" \"x,m,vm\")))\n+\t  (match_operand:V2DF 1 \"register_operand\" \"0,0,v\")\n+\t  (const_int 1)))]\n+  \"TARGET_SSE2\"\n+  \"@\n+   cvtss2sd\\t{%2, %0|%0, %2}\n+   cvtss2sd\\t{%2, %0|%0, %2}\n+   vcvtss2sd\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")\n+   (set_attr \"type\" \"ssecvt\")\n+   (set_attr \"amdfam10_decode\" \"vector,double,*\")\n+   (set_attr \"athlon_decode\" \"direct,direct,*\")\n+   (set_attr \"bdver1_decode\" \"direct,direct,*\")\n+   (set_attr \"btver2_decode\" \"double,double,double\")\n+   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"mode\" \"DF\")])\n+\n (define_insn \"<mask_codefor>avx512f_cvtpd2ps512<mask_name><round_name>\"\n   [(set (match_operand:V8SF 0 \"register_operand\" \"=v\")\n \t(float_truncate:V8SF"}]}