{"sha": "ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyMWI0YTUxYzhlMWM2ZjZmMzYxODhkZDgyYmUwNTk2YmExNzIyZg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2001-02-06T22:19:50Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-02-06T22:19:50Z"}, "message": "do not rely on load_file_data() to close file pointer\n\nFrom-SVN: r39501", "tree": {"sha": "61c3341761015a5904b857610bc777c9eb7649a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c3341761015a5904b857610bc777c9eb7649a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c8465d07749a7f4ce6337d65f609bcef43ef890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8465d07749a7f4ce6337d65f609bcef43ef890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c8465d07749a7f4ce6337d65f609bcef43ef890"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "0937f2473b01298ac743273345f453760b47bf4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "patch": "@@ -1,3 +1,10 @@\n+2001-01-30  Bruce Korb  <bkorb@gnu.org>\n+\n+        fixinc/fixincl.c(process):  Emit error message only if appropriate :)\n+        (load_file): do not rely on load_file_data() to close file pointer\n+        fixinc/fixlib.c(load_file_data): do not close passed in file pointer\n+\tfixinc/inclhack.def(irix_limits_const): add test_text\n+\n 2001-02-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cppexp.c (parse_defined): Improve diagnostics for invalid"}, {"sha": "bd134255b8f5438e3de7e24231eeaf4bcf81c81c", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "patch": "@@ -364,14 +364,13 @@ load_file ( fname )\n     res = (char*)mmap ((void*)NULL, data_map_size, PROT_READ,\n                        MAP_PRIVATE, data_map_fd, 0);\n   if (res == (char*)BAD_ADDR)\n+#endif\n     {\n+      FILE* fp = fdopen (data_map_fd, \"r\");\n       curr_data_mapped = BOOL_FALSE;\n-      res = load_file_data ( fdopen (data_map_fd, \"r\"));\n+      res = load_file_data (fp);\n+      fclose (fp);\n     }\n-#else\n-  curr_data_mapped = BOOL_FALSE;\n-  res = load_file_data ( fdopen (data_map_fd, \"r\"));\n-#endif\n \n   return res;\n }\n@@ -1431,8 +1430,9 @@ process ()\n   read_fd = open (pz_temp_file, O_RDONLY);\n   if (read_fd < 0)\n     {\n-      fprintf (stderr, \"error %d (%s) opening output (%s) for read\\n\",\n-               errno, xstrerror (errno), pz_temp_file);\n+      if (errno != ENOENT)\n+        fprintf (stderr, \"error %d (%s) opening output (%s) for read\\n\",\n+                 errno, xstrerror (errno), pz_temp_file);\n     }\n   else\n     {"}, {"sha": "647d2b379686f765028b25c56e37d2bb7ae87a60", "filename": "gcc/fixinc/fixlib.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Ffixlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Ffixlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.c?ref=ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "patch": "@@ -39,6 +39,9 @@ load_file_data (fp)\n   int    space_left = -1;  /* allow for terminating NUL */\n   size_t space_used = 0;\n \n+  if (fp == (FILE*)NULL)\n+    return pz_data;\n+\n   do\n     {\n       size_t  size_read;\n@@ -62,7 +65,6 @@ load_file_data (fp)\n                 fprintf (stderr, \"error %d (%s) reading input\\n\", err,\n                          xstrerror (err));\n               free ((void *) pz_data);\n-              fclose (fp);\n               return (char *) NULL;\n             }\n         }\n@@ -73,7 +75,6 @@ load_file_data (fp)\n \n   pz_data = xrealloc ((void*)pz_data, space_used+1 );\n   pz_data[ space_used ] = NUL;\n-  fclose (fp);\n \n   return pz_data;\n }"}, {"sha": "40332750c1dfe61e9d5139ec845bbe84a0ec18f1", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca21b4a51c8e1c6f6f36188dd82be0596ba1722f/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=ca21b4a51c8e1c6f6f36188dd82be0596ba1722f", "patch": "@@ -1292,6 +1292,7 @@ fix = {\n     select\t= \"^extern const \";\n     c_fix\t= format;\n     c_fix_arg\t= \"extern __const \";\n+    test_text   = \"extern const char limit; /* test\\n\\tlimits */\";\n };\n \n "}]}