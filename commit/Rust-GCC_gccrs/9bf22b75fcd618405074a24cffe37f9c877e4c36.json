{"sha": "9bf22b75fcd618405074a24cffe37f9c877e4c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJmMjJiNzVmY2Q2MTg0MDUwNzRhMjRjZmZlMzdmOWM4NzdlNGMzNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T12:29:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T12:29:18Z"}, "message": "(force_to_mode, case ASHIFTRT): Verify mode bitsize is within\nHOST_BITS_PER_WIDE_INT before shifting by it.\n\nFrom-SVN: r10513", "tree": {"sha": "948671afd902167dca035b4fd41da2029e0f7cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/948671afd902167dca035b4fd41da2029e0f7cac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bf22b75fcd618405074a24cffe37f9c877e4c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf22b75fcd618405074a24cffe37f9c877e4c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf22b75fcd618405074a24cffe37f9c877e4c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf22b75fcd618405074a24cffe37f9c877e4c36/comments", "author": null, "committer": null, "parents": [{"sha": "e82ee4ccb6c344f5525e0c640e9f279d7d1013c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82ee4ccb6c344f5525e0c640e9f279d7d1013c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82ee4ccb6c344f5525e0c640e9f279d7d1013c0"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "a7d6ff4d721c9f6221f50742132758224bfc134b", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf22b75fcd618405074a24cffe37f9c877e4c36/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf22b75fcd618405074a24cffe37f9c877e4c36/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9bf22b75fcd618405074a24cffe37f9c877e4c36", "patch": "@@ -6018,8 +6018,9 @@ force_to_mode (x, mode, mask, reg, just_select)\n     case ASHIFTRT:\n       /* If we are just looking for the sign bit, we don't need this shift at\n \t all, even if it has a variable count.  */\n-      if (mask == ((HOST_WIDE_INT) 1\n-\t\t   << (GET_MODE_BITSIZE (GET_MODE (x)) - 1)))\n+      if (GET_MODE_BITSIZE (GET_MODE (x)) <= HOST_BITS_PER_WIDE_INT\n+\t  && (mask == ((HOST_WIDE_INT) 1\n+\t\t       << (GET_MODE_BITSIZE (GET_MODE (x)) - 1))))\n \treturn force_to_mode (XEXP (x, 0), mode, mask, reg, next_select);\n \n       /* If this is a shift by a constant, get a mask that contains those bits"}]}