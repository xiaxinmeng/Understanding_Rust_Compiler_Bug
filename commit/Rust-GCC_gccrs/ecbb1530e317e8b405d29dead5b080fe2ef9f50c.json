{"sha": "ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiYjE1MzBlMzE3ZThiNDA1ZDI5ZGVhZDViMDgwZmUyZWY5ZjUwYw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-03-26T14:40:06Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-03-26T14:40:06Z"}, "message": "d/dmd: Merge upstream dmd ab702e73e\n\nFixes memory leak in the front-end symbol mangler, and introduces\nrecognition and rejection of a few more C types and directives.\n\nReviewed-on: https://github.com/dlang/dmd/pull/9492\n\nFrom-SVN: r269945", "tree": {"sha": "999523995b74fc9b4bf531a6cabba421735f4b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/999523995b74fc9b4bf531a6cabba421735f4b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/comments", "author": null, "committer": null, "parents": [{"sha": "465b8e7f4ecb9af118419dbf14a43cb95e1d12dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465b8e7f4ecb9af118419dbf14a43cb95e1d12dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465b8e7f4ecb9af118419dbf14a43cb95e1d12dd"}], "stats": {"total": 101, "additions": 84, "deletions": 17}, "files": [{"sha": "ffad6cb524d9b63b1265326cf752e4a4339164cb", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -1,4 +1,4 @@\n-74ac873be1862090b7ec0e4a876fd1b758520359\n+ab702e73e56aefb3b77b8f8f42da94bc22143eeb\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "44f4f826b4189ac32c86522c54432f35b7ea3ec1", "filename": "gcc/d/dmd/dmangle.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fdmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fdmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmangle.c?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -306,8 +306,9 @@ class Mangler : public Visitor\n         buf2.reserve(32);\n         Mangler v(&buf2);\n         v.paramsToDecoBuffer(t->arguments);\n+        const char *s = buf2.peekString();\n         int len = (int)buf2.offset;\n-        buf->printf(\"%d%.*s\", len, len, buf2.extractData());\n+        buf->printf(\"%d%.*s\", len, len, s);\n     }\n \n     void visit(TypeNull *t)"}, {"sha": "def448a2408080c694e05710748dc527fb112a91", "filename": "gcc/d/dmd/dscope.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fdscope.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fdscope.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdscope.c?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -685,14 +685,16 @@ Dsymbol *Scope::search_correct(Identifier *ident)\n const char *Scope::search_correct_C(Identifier *ident)\n {\n     TOK tok;\n-    if (ident == Id::_NULL)\n+    if (ident == Id::C_NULL)\n         tok = TOKnull;\n-    else if (ident == Id::_TRUE)\n+    else if (ident == Id::C_TRUE)\n         tok = TOKtrue;\n-    else if (ident == Id::_FALSE)\n+    else if (ident == Id::C_FALSE)\n         tok = TOKfalse;\n-    else if (ident == Id::_unsigned)\n+    else if (ident == Id::C_unsigned)\n         tok = TOKuns32;\n+    else if (ident == Id::C_wchar_t)\n+        tok = global.params.isWindows ? TOKwchar : TOKdchar;\n     else\n         return NULL;\n     return Token::toChars(tok);"}, {"sha": "e75004893aa25d13cd2cf404904a8062293cd594", "filename": "gcc/d/dmd/idgen.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fidgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fidgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidgen.c?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -374,10 +374,11 @@ Msgtable msgtable[] =\n     { \"udaSelector\", \"selector\" },\n \n     // C names, for undefined identifier error messages\n-    { \"_NULL\", \"NULL\" },\n-    { \"_TRUE\", \"TRUE\" },\n-    { \"_FALSE\", \"FALSE\" },\n-    { \"_unsigned\", \"unsigned\" },\n+    { \"C_NULL\", \"NULL\" },\n+    { \"C_TRUE\", \"TRUE\" },\n+    { \"C_FALSE\", \"FALSE\" },\n+    { \"C_unsigned\", \"unsigned\" },\n+    { \"C_wchar_t\", \"wchar_t\" },\n };\n \n "}, {"sha": "8a2c90f1dfd2c6507ced714b42d065ff52b7abaf", "filename": "gcc/d/dmd/lexer.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Flexer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Flexer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Flexer.c?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -901,16 +901,25 @@ void Lexer::scan(Token *t)\n                 p++;\n                 Token n;\n                 scan(&n);\n-                if (n.value == TOKidentifier && n.ident == Id::line)\n+                if (n.value == TOKidentifier)\n                 {\n-                    poundLine();\n-                    continue;\n+                   if (n.ident == Id::line)\n+                   {\n+                       poundLine();\n+                       continue;\n+                   }\n+                   else\n+                   {\n+                       const Loc locx = loc();\n+                       warning(locx, \"C preprocessor directive `#%s` is not supported\", n.ident->toChars());\n+                   }\n                 }\n-                else\n+                else if (n.value == TOKif)\n                 {\n-                    t->value = TOKpound;\n-                    return;\n+                    error(\"C preprocessor directive `#if` is not supported, use `version` or `static if`\");\n                 }\n+                t->value = TOKpound;\n+                return;\n             }\n \n             default:"}, {"sha": "3afdbc257f80b4a8f720931cf679315be60d6147", "filename": "gcc/d/dmd/parse.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Fd%2Fdmd%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.c?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -3076,7 +3076,23 @@ Type *Parser::parseBasicType(bool dontLookDotIdents)\n         case TOKuns16:   t = Type::tuns16; goto LabelX;\n         case TOKint32:   t = Type::tint32; goto LabelX;\n         case TOKuns32:   t = Type::tuns32; goto LabelX;\n-        case TOKint64:   t = Type::tint64; goto LabelX;\n+        case TOKint64:\n+            t = Type::tint64;\n+            nextToken();\n+            if (token.value == TOKint64)    // if `long long`\n+            {\n+                error(\"use `long` for a 64 bit integer instead of `long long`\");\n+                nextToken();\n+            }\n+            else if (token.value == TOKfloat64) // if `long double`\n+            {\n+                error(\"use `real` instead of `long double`\");\n+                t = Type::tfloat80;\n+                nextToken();\n+\n+            }\n+            break;\n+\n         case TOKuns64:   t = Type::tuns64; goto LabelX;\n         case TOKint128:  t = Type::tint128; goto LabelX;\n         case TOKuns128:  t = Type::tuns128; goto LabelX;"}, {"sha": "3d69d415e2b86325d05b8b505675a012baa7158e", "filename": "gcc/testsuite/gdc.test/fail_compilation/cerrors.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcerrors.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcerrors.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fcerrors.d?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -0,0 +1,15 @@\n+/* REQUIRED_ARGS: -wi\n+TEST_OUTPUT:\n+---\n+fail_compilation/cerrors.d(11): Error: C preprocessor directive `#if` is not supported, use `version` or `static if`\n+fail_compilation/cerrors.d(11): Error: declaration expected, not `#`\n+fail_compilation/cerrors.d(15): Warning: C preprocessor directive `#endif` is not supported\n+fail_compilation/cerrors.d(15): Error: declaration expected, not `#`\n+---\n+*/\n+\n+#if 1\n+\n+void test(wchar_t u);\n+\n+#endif"}, {"sha": "9f5ff18f7515b365d26634d25bcd4726ee5475df", "filename": "gcc/testsuite/gdc.test/fail_compilation/ctypes.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fctypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fctypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fctypes.d?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -0,0 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ctypes.d(11): Error: use `real` instead of `long double`\n+fail_compilation/ctypes.d(12): Error: use `long` for a 64 bit integer instead of `long long`\n+---\n+*/\n+\n+void test()\n+{\n+    long double r;\n+    long long ll;\n+}"}, {"sha": "ccfc47aa817fad619180d2c84f11d8689ae986b9", "filename": "gcc/testsuite/gdc.test/fail_compilation/widechars.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fwidechars.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecbb1530e317e8b405d29dead5b080fe2ef9f50c/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fwidechars.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fwidechars.d?ref=ecbb1530e317e8b405d29dead5b080fe2ef9f50c", "patch": "@@ -0,0 +1,10 @@\n+\n+/*\n+DISABLED: win32 win64\n+TEST_OUTPUT:\n+---\n+fail_compilation/widechars.d(10): Error: undefined identifier `wchar_t`, did you mean `dchar`?\n+---\n+*/\n+\n+wchar_t x;"}]}