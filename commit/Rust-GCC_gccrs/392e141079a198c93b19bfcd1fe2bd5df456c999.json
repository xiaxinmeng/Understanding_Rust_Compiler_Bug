{"sha": "392e141079a198c93b19bfcd1fe2bd5df456c999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyZTE0MTA3OWExOThjOTNiMTliZmNkMWZlMmJkNWRmNDU2Yzk5OQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-29T18:26:06Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-29T23:14:18Z"}, "message": "libiberty: Add support for demangling local D template declarations\n\nThe D language now allows multiple different template declarations in\nthe same function that have the same mangled name.  To make the mangled\nnames unique, a fake parent in the form `__Sddd' is added to the symbol.\nThis information is not important for the user, so the demangler now\nhandles and ignores it.\n\nlibiberty/ChangeLog:\n\n\t* d-demangle.c (dlang_identifier): Skip over fake parent manglings.\n\t* testsuite/d-demangle-expected: Add tests.", "tree": {"sha": "7a7790433e9748898047357b4ea5c74fbf680e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7790433e9748898047357b4ea5c74fbf680e2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/392e141079a198c93b19bfcd1fe2bd5df456c999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392e141079a198c93b19bfcd1fe2bd5df456c999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392e141079a198c93b19bfcd1fe2bd5df456c999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392e141079a198c93b19bfcd1fe2bd5df456c999/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f3e0657a1fa976d989b22d18b3b2adf6ddd59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f3e0657a1fa976d989b22d18b3b2adf6ddd59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34f3e0657a1fa976d989b22d18b3b2adf6ddd59b"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "a2152cc65518e468fd5d8ba254c011449fca2b8e", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392e141079a198c93b19bfcd1fe2bd5df456c999/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392e141079a198c93b19bfcd1fe2bd5df456c999/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=392e141079a198c93b19bfcd1fe2bd5df456c999", "patch": "@@ -1044,6 +1044,25 @@ dlang_identifier (string *decl, const char *mangled, struct dlang_info *info)\n       && (mangled[2] == 'T' || mangled[2] == 'U'))\n     return dlang_parse_template (decl, mangled, info, len);\n \n+  /* There can be multiple different declarations in the same function that have\n+     the same mangled name.  To make the mangled names unique, a fake parent in\n+     the form `__Sddd' is added to the symbol.  */\n+  if (len >= 4 && mangled[0] == '_' && mangled[1] == '_' && mangled[2] == 'S')\n+    {\n+      const char *numptr = mangled + 3;\n+      while (numptr < (mangled + len) && ISDIGIT (*numptr))\n+\tnumptr++;\n+\n+      if (mangled + len == numptr)\n+\t{\n+\t  /* Skip over the fake parent.  */\n+\t  mangled += len;\n+\t  return dlang_identifier (decl, mangled, info);\n+\t}\n+\n+      /* else demangle it as a plain identifier.  */\n+    }\n+\n   return dlang_lname (decl, mangled, len);\n }\n "}, {"sha": "c35185c3e1e3a2345a368e5cd4786d69583c56ae", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392e141079a198c93b19bfcd1fe2bd5df456c999/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392e141079a198c93b19bfcd1fe2bd5df456c999/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=392e141079a198c93b19bfcd1fe2bd5df456c999", "patch": "@@ -1420,5 +1420,29 @@ _D3std3uni__T6toCaseS_DQvQt12toLowerIndexFNaNbNiNewZtVii1043S_DQCjQCi10toLowerTa\n std.uni.toCase!(std.uni.toLowerIndex(dchar), 1043, std.uni.toLowerTab(ulong), std.ascii.toLower, immutable(char)[]).toCase(immutable(char)[]).__foreachbody2(ref ulong, ref dchar).__foreachbody3(ref dchar)\n #\n --format=dlang\n+_D8demangle4mainFZ1xi\n+demangle.main().x\n+#\n+--format=dlang\n+_D8demangle4mainFZ4__S11xi\n+demangle.main().x\n+#\n+--format=dlang\n+_D8demangle4mainFZ1fMFNaNbNiNfZv\n+demangle.main().f()\n+#\n+--format=dlang\n+_D8demangle4mainFZ4__S11fMFNaNbNiNfZv\n+demangle.main().f()\n+#\n+--format=dlang\n+_D3mod4funcFZ__T6nestedTiZQkMFNaNbNiNfZi\n+mod.func().nested!(int).nested()\n+#\n+--format=dlang\n+_D3mod4funcFZ__T6nestedTiZ4__S1QpMFNaNbNiNfZi\n+mod.func().nested!(int).nested()\n+#\n+--format=dlang\n _D6mangle__T8fun21753VSQv6S21753S1f_DQBj10__lambda71MFNaNbNiNfZvZQCbQp\n mangle.fun21753!(mangle.S21753(mangle.__lambda71())).fun21753"}]}