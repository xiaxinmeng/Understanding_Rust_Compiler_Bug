{"sha": "688a482d6359352c16efb6eee97a29894eb3ba37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4YTQ4MmQ2MzU5MzUyYzE2ZWZiNmVlZTk3YTI5ODk0ZWIzYmEzNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-13T10:07:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-13T10:07:47Z"}, "message": "re PR middle-end/42678 (ICE with lto1 in expand_mult, at expmed.c:3253)\n\n2010-01-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/42678\n\t* tree-pass.h (PROP_gimple_lcx): New.\n\t* cfgexpand.c (pass_expand): Require PROP_gimple_lcx.\n\t* passes.c (init_optimization_passes): Move pass_lower_complex_O0\n\tbefore the final cleanup_eh.\n\t(dump_properties): Dump PROP_gimple_lcx.\n\t* tree-complex.c (pass_lower_complex): Provide PROP_gimple_lcx.\n\t(tree_lower_complex_O0): Remove.\n\t(gate_no_optimization): Run if PROP_gimple_lcx is not set.\n\t(pass_lower_complex_O0): Provide PROP_gimple_lcx.  Run\n\ttree_lower_complex, schedule TODO_update_ssa.\n\t* lto-streamer-out.c (output_function): Stream the functions\n\tproperties.\n\t* lto-streamer-in.c (input_function): Likewise.\n\t(lto_read_body): Do not override them here.\n\n\t* gfortran.dg/lto/20100110-1_0.f90: New testcase.\n\nFrom-SVN: r155853", "tree": {"sha": "76a66b356728d78d55e273dfdd2f9ffb112f4a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76a66b356728d78d55e273dfdd2f9ffb112f4a4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688a482d6359352c16efb6eee97a29894eb3ba37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a482d6359352c16efb6eee97a29894eb3ba37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688a482d6359352c16efb6eee97a29894eb3ba37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a482d6359352c16efb6eee97a29894eb3ba37/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "288de41a81d13fcc90d611d3c2b9c1fe7b0d09a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288de41a81d13fcc90d611d3c2b9c1fe7b0d09a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288de41a81d13fcc90d611d3c2b9c1fe7b0d09a7"}], "stats": {"total": 98, "additions": 62, "deletions": 36}, "files": [{"sha": "985ec60e90eb0414379afadae8eec5662d87a2a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -1,3 +1,21 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/42678\n+\t* tree-pass.h (PROP_gimple_lcx): New.\n+\t* cfgexpand.c (pass_expand): Require PROP_gimple_lcx.\n+\t* passes.c (init_optimization_passes): Move pass_lower_complex_O0\n+\tbefore the final cleanup_eh.\n+\t(dump_properties): Dump PROP_gimple_lcx.\n+\t* tree-complex.c (pass_lower_complex): Provide PROP_gimple_lcx.\n+\t(tree_lower_complex_O0): Remove.\n+\t(gate_no_optimization): Run if PROP_gimple_lcx is not set.\n+\t(pass_lower_complex_O0): Provide PROP_gimple_lcx.  Run\n+\ttree_lower_complex, schedule TODO_update_ssa.\n+\t* lto-streamer-out.c (output_function): Stream the functions\n+\tproperties.\n+\t* lto-streamer-in.c (input_function): Likewise.\n+\t(lto_read_body): Do not override them here.\n+\n 2010-01-12  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/42708"}, {"sha": "70d2b355aa1df64c7b4c71005a0719aa33330343", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -3743,7 +3743,8 @@ struct rtl_opt_pass pass_expand =\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n   TV_EXPAND,\t\t\t\t/* tv_id */\n-  PROP_ssa | PROP_gimple_leh | PROP_cfg,/* properties_required */\n+  PROP_ssa | PROP_gimple_leh | PROP_cfg\n+    | PROP_gimple_lcx,\t\t\t/* properties_required */\n   PROP_rtl,                             /* properties_provided */\n   PROP_ssa | PROP_trees,\t\t/* properties_destroyed */\n   TODO_verify_ssa | TODO_verify_flow"}, {"sha": "f316459e083a377c194bf426611e4d1084fda7f5", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -1291,6 +1291,9 @@ input_function (tree fn_decl, struct data_in *data_in,\n   fn->va_list_gpr_size = bp_unpack_value (bp, 8);\n   bitpack_delete (bp);\n \n+  /* Input the current IL state of the function.  */\n+  fn->curr_properties = lto_input_uleb128 (ib);\n+\n   /* Read the static chain and non-local goto save area.  */\n   fn->static_chain_decl = lto_input_tree (ib, data_in);\n   fn->nonlocal_goto_save_area = lto_input_tree (ib, data_in);\n@@ -1466,14 +1469,6 @@ lto_read_body (struct lto_file_decl_data *file_data, tree fn_decl,\n       /* We should now be in SSA.  */\n       cfun->gimple_df->in_ssa_p = true;\n \n-      /* Fill in properties we know hold for the rebuilt CFG.  */\n-      cfun->curr_properties = PROP_ssa\n-\t\t\t      | PROP_cfg\n-\t\t\t      | PROP_gimple_any\n-\t\t\t      | PROP_gimple_lcf\n-\t\t\t      | PROP_gimple_leh\n-\t\t\t      | PROP_referenced_vars;\n-\n       /* Restore decl state */\n       file_data->current_decl_state = file_data->global_decl_state;\n "}, {"sha": "d5431ba5a6e914053c04a345d28c108bf8415c0a", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -1872,6 +1872,9 @@ output_function (struct cgraph_node *node)\n   lto_output_bitpack (ob->main_stream, bp);\n   bitpack_delete (bp);\n \n+  /* Output current IL state of the function.  */\n+  output_uleb128 (ob, fn->curr_properties);\n+\n   /* Output the static chain and non-local goto save area.  */\n   lto_output_tree_ref (ob, fn->static_chain_decl);\n   lto_output_tree_ref (ob, fn->nonlocal_goto_save_area);"}, {"sha": "a04a5eff92a834e08fb2a6ce2805d00cb0726430", "filename": "gcc/passes.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -728,7 +728,6 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_refactor_eh);\n   NEXT_PASS (pass_lower_eh);\n   NEXT_PASS (pass_build_cfg);\n-  NEXT_PASS (pass_lower_complex_O0);\n   NEXT_PASS (pass_lower_vector);\n   NEXT_PASS (pass_warn_function_return);\n   NEXT_PASS (pass_build_cgraph_edges);\n@@ -943,6 +942,7 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_uncprop);\n       NEXT_PASS (pass_local_pure_const);\n     }\n+  NEXT_PASS (pass_lower_complex_O0);\n   NEXT_PASS (pass_cleanup_eh);\n   NEXT_PASS (pass_lower_resx);\n   NEXT_PASS (pass_nrv);\n@@ -1883,6 +1883,8 @@ dump_properties (FILE *dump, unsigned int props)\n     fprintf (dump, \"PROP_rtl\\n\");\n   if (props & PROP_gimple_lomp)\n     fprintf (dump, \"PROP_gimple_lomp\\n\");\n+  if (props & PROP_gimple_lcx)\n+    fprintf (dump, \"PROP_gimple_lcx\\n\");\n }\n \n void"}, {"sha": "f8532afa361eb8c9bb2bb84a1cefbf8ac941584c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -1,3 +1,8 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/42678\n+\t* gfortran.dg/lto/20100110-1_0.f90: New testcase.\n+\n 2010-01-12  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/42708"}, {"sha": "d3caa61da2894ab441e39d2180380a82970e1411", "filename": "gcc/testsuite/gfortran.dg/lto/20100110-1_0.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20100110-1_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20100110-1_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20100110-1_0.f90?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -0,0 +1,19 @@\n+! { dg-lto-do link }\n+! { dg-lto-options {{ -O1 -flto }} }\n+! { dg-suppress-ld-options \"-O1\" }\n+\n+      SUBROUTINE ylm4(ylm)\n+      COMPLEX, INTENT (OUT):: ylm(1)\n+      INTEGER l,m\n+      COMPLEX ylms\n+      REAL, ALLOCATABLE, SAVE  :: ynorm(:)\n+      ylms = 0\n+      DO m = 1, 1\n+         DO l = m, 1\n+            ylm(m) = conjg(ylms)*ynorm(m)\n+         ENDDO\n+      ENDDO\n+      END SUBROUTINE ylm4\n+\n+      PROGRAM test\n+      END"}, {"sha": "ea0a651bfea54dcb566477a663599e69fd9ec3b8", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 8, "deletions": 26, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -1622,7 +1622,7 @@ struct gimple_opt_pass pass_lower_complex =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n-  0,\t\t\t\t\t/* properties_provided */\n+  PROP_gimple_lcx,\t\t\t/* properties_provided */\n   0,                       \t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   TODO_dump_func\n@@ -1633,32 +1633,12 @@ struct gimple_opt_pass pass_lower_complex =\n };\n \n \f\n-/* Entry point for complex operation lowering without optimization.  */\n-\n-static unsigned int\n-tree_lower_complex_O0 (void)\n-{\n-  int old_last_basic_block = last_basic_block;\n-  gimple_stmt_iterator gsi;\n-  basic_block bb;\n-\n-  FOR_EACH_BB (bb)\n-    {\n-      if (bb->index >= old_last_basic_block)\n-\tcontinue;\n-\n-      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\texpand_complex_operations_1 (&gsi);\n-    }\n-  return 0;\n-}\n-\n static bool\n gate_no_optimization (void)\n {\n   /* With errors, normal optimization passes are not run.  If we don't\n      lower complex operations at all, rtl expansion will abort.  */\n-  return optimize == 0 || sorrycount || errorcount;\n+  return !(cfun->curr_properties & PROP_gimple_lcx);\n }\n \n struct gimple_opt_pass pass_lower_complex_O0 =\n@@ -1667,16 +1647,18 @@ struct gimple_opt_pass pass_lower_complex_O0 =\n   GIMPLE_PASS,\n   \"cplxlower0\",\t\t\t\t/* name */\n   gate_no_optimization,\t\t\t/* gate */\n-  tree_lower_complex_O0,\t\t/* execute */\n+  tree_lower_complex,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n-  0,\t\t\t\t\t/* properties_provided */\n+  PROP_gimple_lcx,\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func | TODO_ggc_collect\n-    | TODO_verify_stmts,\t\t/* todo_flags_finish */\n+  TODO_dump_func\n+    | TODO_ggc_collect\n+    | TODO_update_ssa\n+    | TODO_verify_stmts\t \t\t/* todo_flags_finish */\n  }\n };"}, {"sha": "383a164004c89790c8020f253e5a93d65e605408", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688a482d6359352c16efb6eee97a29894eb3ba37/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=688a482d6359352c16efb6eee97a29894eb3ba37", "patch": "@@ -226,6 +226,7 @@ struct dump_file_info\n #define PROP_rtl\t\t(1 << 7)\n #define PROP_gimple_lomp\t(1 << 8)\t/* lowered OpenMP directives */\n #define PROP_cfglayout\t \t(1 << 9)\t/* cfglayout mode on RTL */\n+#define PROP_gimple_lcx\t\t(1 << 10)       /* lowered complex */\n \n #define PROP_trees \\\n   (PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh | PROP_gimple_lomp)"}]}