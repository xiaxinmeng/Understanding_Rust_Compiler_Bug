{"sha": "ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0YmYxZGQ0Mzk4ZGM2NWQ4ZmZmOGI5ZjVjNjc3MzM3MjljZWU5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-21T13:17:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-21T13:17:10Z"}, "message": "testsuite: Add -fchecking to dg-ice tests\n\nIn --enable-checking=release builds (which is the default on release\nbranches), I'm getting various extra FAILs that don't appear in\n--enable-checking=yes builds.\n\nXPASS: g++.dg/cpp0x/constexpr-52830.C  -std=c++14 (internal compiler error)\nFAIL: g++.dg/cpp0x/constexpr-52830.C  -std=c++14 (test for excess errors)\nXPASS: g++.dg/cpp0x/constexpr-52830.C  -std=c++17 (internal compiler error)\nFAIL: g++.dg/cpp0x/constexpr-52830.C  -std=c++17 (test for excess errors)\nXPASS: g++.dg/cpp0x/constexpr-52830.C  -std=c++2a (internal compiler error)\nFAIL: g++.dg/cpp0x/constexpr-52830.C  -std=c++2a (test for excess errors)\nFAIL: g++.dg/cpp0x/vt-88982.C  -std=c++14 (test for excess errors)\nFAIL: g++.dg/cpp0x/vt-88982.C  -std=c++17 (test for excess errors)\nFAIL: g++.dg/cpp0x/vt-88982.C  -std=c++2a (test for excess errors)\nFAIL: g++.dg/cpp1y/auto-fn61.C  -std=c++14 (test for excess errors)\nFAIL: g++.dg/cpp1y/auto-fn61.C  -std=c++17 (test for excess errors)\nFAIL: g++.dg/cpp1y/auto-fn61.C  -std=c++2a (test for excess errors)\nFAIL: g++.dg/cpp1z/constexpr-lambda26.C  -std=c++17 (test for excess errors)\nFAIL: g++.dg/cpp1z/constexpr-lambda26.C  -std=c++2a (test for excess errors)\nFAIL: g++.dg/cpp2a/nontype-class39.C  -std=c++2a (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c  -std=c++14 (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c  -std=c++17 (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c  -std=c++2a (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c  -std=c++98 (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-2.c  -std=c++14 (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-2.c  -std=c++17 (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-2.c  -std=c++2a (test for excess errors)\nFAIL: c-c++-common/goacc/kernels-decompose-ice-2.c  -std=c++98 (test for excess errors)\n\nThese are tests that have dg-ice and most of those ICEs are checking ICEs\nwhich go away in release checking when -fno-checking is the default.\n\nThe following patch adds -fchecking option to those.\n\n2021-04-21  Jakub Jelinek  <jakub@redhat.com>\n\n\t* g++.dg/cpp1z/constexpr-lambda26.C: Add dg-additional-options\n\t-fchecking.\n\t* g++.dg/cpp1y/auto-fn61.C: Likewise.\n\t* g++.dg/cpp2a/nontype-class39.C: Likewise.\n\t* g++.dg/cpp0x/constexpr-52830.C: Likewise.\n\t* g++.dg/cpp0x/vt-88982.C: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-ice-1.c: Add -fchecking to\n\tdg-additional-options.\n\t* c-c++-common/goacc/kernels-decompose-ice-2.c: Likewise.", "tree": {"sha": "5b91c0790f19ddbb02d74edd4448e4b3b688a7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b91c0790f19ddbb02d74edd4448e4b3b688a7a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8c6cc2ca35489bc41bb58ec96c1195928826922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c6cc2ca35489bc41bb58ec96c1195928826922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c6cc2ca35489bc41bb58ec96c1195928826922"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8c3884bdc00edf4a1be00fba48f41fa7a18cf641", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-ice-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-1.c?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,7 +1,7 @@\n /* Test OpenACC 'kernels' construct decomposition.  */\n \n /* { dg-additional-options \"-fopt-info-omp-all\" } */\n-/* { dg-additional-options \"--param=openacc-kernels=decompose\" } */\n+/* { dg-additional-options \"-fchecking --param=openacc-kernels=decompose\" } */\n /* { dg-ice \"TODO\" }\n    { dg-prune-output \"during GIMPLE pass: omplower\" } */\n "}, {"sha": "8bf60a9a50999ca94d6ed19bb7918e706785403c", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-ice-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-ice-2.c?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,6 +1,6 @@\n /* Test OpenACC 'kernels' construct decomposition.  */\n \n-/* { dg-additional-options \"--param=openacc-kernels=decompose\" } */\n+/* { dg-additional-options \"-fchecking --param=openacc-kernels=decompose\" } */\n /* { dg-ice \"TODO\" }\n    { dg-prune-output \"during GIMPLE pass: omplower\" } */\n "}, {"sha": "eae0d8c377b8efcfe353a0962bc6099312907dc5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-52830.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52830.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52830.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-52830.C?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,5 +1,6 @@\n // PR c++/52830\n // { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fchecking\" }\n // { dg-ice \"comptypes\" }\n \n template<bool b> struct eif { typedef void type; };"}, {"sha": "7a868233d73c539b733d84a2471ab14cd40f4ac6", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-88982.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-88982.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-88982.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-88982.C?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,5 +1,6 @@\n // PR c++/88982\n // { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fchecking\" }\n // { dg-ice \"tsubst_pack_expansion\" }\n \n template<typename...Ts> struct A {"}, {"sha": "bed5ea0cfc0371f0c50bab9c0a3c27c1a18bbcfb", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn61.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn61.C?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,5 +1,6 @@\n // PR c++/88003\n // { dg-do compile { target c++14 } }\n+// { dg-additional-options \"-fchecking\" }\n // { dg-ice \"poplevel_class\" }\n \n auto test() {"}, {"sha": "0cdb400d21c4f3fca5561a4c87835a10a69bee4d", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda26.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda26.C?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,5 +1,6 @@\n // PR c++/87765\n // { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-fchecking\" }\n // { dg-ice \"cxx_eval_constant_expression\" }\n \n template <int N>"}, {"sha": "512afad8e4faa439385947a5341c821331acc7b4", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class39.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca4bf1dd4398dc65d8fff8b9f5c67733729cee95/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class39.C?ref=ca4bf1dd4398dc65d8fff8b9f5c67733729cee95", "patch": "@@ -1,5 +1,6 @@\n // PR c++/89565\n // { dg-do compile { target c++20 } }\n+// { dg-additional-options \"-fchecking\" }\n // { dg-ice \"resolve_args\" }\n \n template <auto>"}]}