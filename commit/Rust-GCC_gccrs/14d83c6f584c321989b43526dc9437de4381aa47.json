{"sha": "14d83c6f584c321989b43526dc9437de4381aa47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRkODNjNmY1ODRjMzIxOTg5YjQzNTI2ZGM5NDM3ZGU0MzgxYWE0Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-10-14T21:19:39Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-10-14T21:36:24Z"}, "message": "PR middle-end/97391 - bogus -Warray-bounds accessing a multidimensional array parameter\n\ngcc/ChangeLog:\n\n\tPR middle-end/97391\n\t* builtins.c (gimple_parm_array_size): Peel off one less layer\n\tof array types.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/97391\n\t* gcc.dg/Warray-bounds-68.c: New test.", "tree": {"sha": "51e8512a715afcef812ff500efd1bac8d7c0b808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e8512a715afcef812ff500efd1bac8d7c0b808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14d83c6f584c321989b43526dc9437de4381aa47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d83c6f584c321989b43526dc9437de4381aa47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d83c6f584c321989b43526dc9437de4381aa47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d83c6f584c321989b43526dc9437de4381aa47/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34efa5c2a84a8c7c7beb855dec24a321eebcbd6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34efa5c2a84a8c7c7beb855dec24a321eebcbd6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34efa5c2a84a8c7c7beb855dec24a321eebcbd6b"}], "stats": {"total": 125, "additions": 120, "deletions": 5}, "files": [{"sha": "72627b5b85947d9da74c9f3e76a6ec94ae07f111", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d83c6f584c321989b43526dc9437de4381aa47/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d83c6f584c321989b43526dc9437de4381aa47/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=14d83c6f584c321989b43526dc9437de4381aa47", "patch": "@@ -4493,12 +4493,9 @@ gimple_parm_array_size (tree ptr, wide_int rng[2],\n \n   rng[0] = wi::zero (prec);\n   rng[1] = wi::uhwi (access->minsize, prec);\n-  /* If the PTR argument points to an array multiply MINSIZE by the size\n-     of array element type.  Otherwise, multiply it by the size of what\n-     the pointer points to.  */\n+  /* Multiply the array bound encoded in the attribute by the size\n+     of what the pointer argument to which it decays points to.  */\n   tree eltype = TREE_TYPE (TREE_TYPE (ptr));\n-  if (TREE_CODE (eltype) == ARRAY_TYPE)\n-    eltype = TREE_TYPE (eltype);\n   tree size = TYPE_SIZE_UNIT (eltype);\n   if (!size || TREE_CODE (size) != INTEGER_CST)\n     return NULL_TREE;"}, {"sha": "d6616695471b299167bd8972ed4952f79f7ef46e", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-68.c", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d83c6f584c321989b43526dc9437de4381aa47/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d83c6f584c321989b43526dc9437de4381aa47/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-68.c?ref=14d83c6f584c321989b43526dc9437de4381aa47", "patch": "@@ -0,0 +1,118 @@\n+/* PR middle-end/97391 - bogus -Warray-bounds accessing a multidimensional\n+   array parameter\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+\n+void nowarn_access_loop_idx (char a[3][5])\n+{\n+  for (int i = 0; i < 3; i++)\n+    for (int j = 0; j < 5; j++)\n+      a[i][j] = 0;\n+}\n+\n+void warn_access_loop_idx (char a[3][5])\n+{\n+  for (int i = 0; i < 3; i++)\n+    for (int j = 0; j < 5; j++)\n+      a[j][i] = 0;            // { dg-warning \"\\\\\\[-Warray-bounds\" }\n+}\n+\n+\n+void nowarn_access_cst_idx (int a[5][7][9])\n+{\n+  a[0][0][0] = __LINE__;\n+  a[0][0][8] = __LINE__;\n+\n+  a[0][6][0] = __LINE__;\n+  a[0][6][8] = __LINE__;\n+\n+  a[4][0][0] = __LINE__;\n+  a[4][0][8] = __LINE__;\n+  a[4][6][8] = __LINE__;\n+}\n+\n+\n+void test_ptr_access_cst_idx (int a[5][7][9])\n+{\n+  int *p = &a[0][0][0];\n+\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+\n+  /* The following access should trigger a warning but it's represented\n+     the same  as the valid access in\n+       p = a[0][1][0];\n+       p[1] = __LINE__;\n+     both as\n+       MEM[(int *)a_1(D) + 36B] = __LINE__;  */\n+\n+  p[9] = __LINE__;            // { dg-warning \"\\\\\\[-Warray-bounds\" \"pr?????\" { xfail *-*-* } }\n+\n+  p[315] = __LINE__;\n+  // { dg-warning \"subscript 315 is outside array bounds of 'int\\\\\\[5]\\\\\\[7]\\\\\\[9]'\" \"pr97425\" { xfail *-*-* } .-1 }\n+  // { dg-warning \"subscript 315 is outside array bounds \" \"\" { target *-*-* } .-2 }\n+\n+  p = &a[0][6][0];\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+\n+  p = &a[4][6][0];\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+}\n+\n+\n+void warn_access_cst_idx (int a[5][7][9])\n+{\n+  a[0][0][9] = __LINE__;      // { dg-warning \"subscript 9 is above array bounds of 'int\\\\\\[9]'\" }\n+  a[0][7][0] = __LINE__;      // { dg-warning \"subscript 7 is above array bounds of 'int\\\\\\[7]\\\\\\[9]'\" }\n+  a[5][0][0] = __LINE__;\n+  // { dg-warning \"subscript 5 is outside array bounds of 'int\\\\\\[5]\\\\\\[7]\\\\\\[9]'\" \"pr97425\" { xfail *-*-* } .-1 }\n+  // { dg-warning \"subscript \\\\d+ is outside array bounds\" \"\" { target *-*-* } .-2 }\n+}\n+\n+\n+void test_ptrarray_access_cst_idx (int (*pa)[5][7][9])\n+{\n+  (*pa)[0][0][0] = __LINE__;\n+  (*pa)[0][0][8] = __LINE__;\n+  (*pa)[0][0][9] = __LINE__;  // { dg-warning \"subscript 9 is above array bounds of 'int\\\\\\[9]'\" }\n+\n+  (*pa)[0][6][0] = __LINE__;\n+  (*pa)[0][7][0] = __LINE__;  // { dg-warning \"subscript 7 is above array bounds of 'int\\\\\\[7]\\\\\\[9]'\" }\n+  (*pa)[0][8][0] = __LINE__;  // { dg-warning \"subscript 8 is above array bounds of 'int\\\\\\[7]\\\\\\[9]'\" }\n+\n+  (*pa)[4][6][8] = __LINE__;\n+  (*pa)[5][0][0] = __LINE__;  // { dg-warning \"subscript 5 is above array bounds of 'int\\\\\\[5]\\\\\\[7]\\\\\\[9]'\" }\n+}\n+\n+\n+void test_ptr_ptrarray_access_cst_idx (int (*pa)[5][7][9])\n+{\n+  int *p = &(*pa)[0][0][0];\n+\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+\n+  /* The following access should trigger a warning but it's represented\n+     the same  as the valid access in\n+       p = a[0][1][0];\n+       p[1] = __LINE__;\n+     both as\n+       MEM[(int *)a_1(D) + 36B] = __LINE__;  */\n+\n+  p[9] = __LINE__;            // { dg-warning \"\\\\\\[-Warray-bounds\" \"pr?????\" { xfail *-*-* } }\n+\n+  p[315] = __LINE__;          // { dg-warning \"\\\\\\[-Warray-bounds\" \"pr97429\" { xfail *-*-* } }\n+\n+  p = &(*pa)[0][6][0];\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+\n+  p = &(*pa)[4][6][0];\n+  p[0] = __LINE__;\n+  p[8] = __LINE__;\n+}\n+\n+"}]}