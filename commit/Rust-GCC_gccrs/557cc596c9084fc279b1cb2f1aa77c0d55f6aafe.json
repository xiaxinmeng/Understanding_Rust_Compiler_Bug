{"sha": "557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3Y2M1OTZjOTA4NGZjMjc5YjFjYjJmMWFhNzdjMGQ1NWY2YWFmZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2009-04-08T16:59:25Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2009-04-08T16:59:25Z"}, "message": "config.gcc (aix tm_file): Add aix-stdint.h.\n\n        * config.gcc (aix tm_file):  Add aix-stdint.h.\n        (aix tm clause use_gcc_stdint):  Set to wrap.\n        * config/rs6000/aix-stdint.h:  New file.\n\nFrom-SVN: r145760", "tree": {"sha": "05bf706d2db14c71ffb6f85692952c287dfe6c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05bf706d2db14c71ffb6f85692952c287dfe6c8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/comments", "author": null, "committer": null, "parents": [{"sha": "f9bfed2243864c72c8a7822ce0ec9b7a1f2a35c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9bfed2243864c72c8a7822ce0ec9b7a1f2a35c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9bfed2243864c72c8a7822ce0ec9b7a1f2a35c8"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "38ac46d1338655a10f21d05477ccac4ac5a5998b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "patch": "@@ -1,3 +1,9 @@\n+2009-04-08  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config.gcc (aix tm_file):  Add aix-stdint.h.\n+\t(aix tm clause use_gcc_stdint):  Set to wrap.\n+\t* config/rs6000/aix-stdint.h:  New file.\n+\t\n 2009-04-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36291"}, {"sha": "224742455208aca5cd2caaac4307611c022d4459", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "patch": "@@ -1905,43 +1905,48 @@ powerpc-xilinx-eabi*)\n \tuse_gcc_stdint=wrap\n   \t;;\n rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h\"\n+\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=rs6000/t-aix43\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n+\tuse_gcc_stdint=provide\n \textra_headers=\n \t;;\n rs6000-ibm-aix5.1.* | powerpc-ibm-aix5.1.*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix51.h rs6000/xcoff.h\"\n+\ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix51.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \ttmake_file=rs6000/t-aix43\n \tuse_collect2=yes\n \tthread_file='aix'\n+\tuse_gcc_stdint=wrap\n \textra_headers=\n \t;;\n rs6000-ibm-aix5.2.* | powerpc-ibm-aix5.2.*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix52.h rs6000/xcoff.h\"\n+\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix52.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=rs6000/t-aix52\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n+\tuse_gcc_stdint=wrap\n \textra_headers=\n \t;;\n rs6000-ibm-aix5.3.* | powerpc-ibm-aix5.3.*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix53.h rs6000/xcoff.h\"\n+\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix53.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=rs6000/t-aix52\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n+\tuse_gcc_stdint=wrap\n \textra_headers=altivec.h\n \t;;\n rs6000-ibm-aix[6789].* | powerpc-ibm-aix[6789].*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix61.h rs6000/xcoff.h\"\n+\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix61.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=rs6000/t-aix52\n \textra_options=\"${extra_options} rs6000/aix64.opt\"\n \tuse_collect2=yes\n \tthread_file='aix'\n+\tuse_gcc_stdint=wrap\n \textra_headers=altivec.h\n \t;;\n s390-*-linux*)"}, {"sha": "8b20c152a4ed484f0922aa2f6f546c655a1c864d", "filename": "gcc/config/rs6000/aix-stdint.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2Fconfig%2Frs6000%2Faix-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557cc596c9084fc279b1cb2f1aa77c0d55f6aafe/gcc%2Fconfig%2Frs6000%2Faix-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix-stdint.h?ref=557cc596c9084fc279b1cb2f1aa77c0d55f6aafe", "patch": "@@ -0,0 +1,51 @@\n+/* Definitions for <stdint.h> types on systems using AIX.\n+   Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define SIG_ATOMIC_TYPE \"int\"\n+\n+#define INT8_TYPE \"signed char\"\n+#define INT16_TYPE \"short int\"\n+#define INT32_TYPE \"int\"\n+#define INT64_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"long long int\")\n+#define UINT8_TYPE \"unsigned char\"\n+#define UINT16_TYPE \"short unsigned int\"\n+#define UINT32_TYPE \"unsigned int\"\n+#define UINT64_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"long long unsigned int\")\n+\n+#define INT_LEAST8_TYPE \"signed char\"\n+#define INT_LEAST16_TYPE \"short int\"\n+#define INT_LEAST32_TYPE \"int\"\n+#define INT_LEAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"long long int\")\n+#define UINT_LEAST8_TYPE \"unsigned char\"\n+#define UINT_LEAST16_TYPE \"short unsigned int\"\n+#define UINT_LEAST32_TYPE \"unsigned int\"\n+#define UINT_LEAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"long long unsigned int\")\n+\n+#define INT_FAST8_TYPE \"signed char\"\n+#define INT_FAST16_TYPE \"short int\"\n+#define INT_FAST32_TYPE \"int\"\n+#define INT_FAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"long long int\")\n+#define UINT_FAST8_TYPE \"unsigned char\"\n+#define UINT_FAST16_TYPE \"short unsigned int\"\n+#define UINT_FAST32_TYPE \"unsigned int\"\n+#define UINT_FAST64_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"long long unsigned int\")\n+\n+#define INTPTR_TYPE \"long int\"\n+#define UINTPTR_TYPE \"long unsigned int\"\n+"}]}