{"sha": "8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3YTZlZDY4YzE4MTE3YjBiMjQ4YmNjZDkzMmI1YTQ3N2QyZjhjMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-10T22:08:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-10T22:08:02Z"}, "message": "sparc.c (sparc_delegitimize_address): New function.\n\n\t* config/sparc/sparc.c (sparc_delegitimize_address): New function.\n\t(TARGET_DELEGITIMIZE_ADDRESS): Define to above.\n\nFrom-SVN: r166563", "tree": {"sha": "e7a992f6a52ec72ded4feb8bd83d59305db148f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a992f6a52ec72ded4feb8bd83d59305db148f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2/comments", "author": null, "committer": null, "parents": [{"sha": "94d13ad18df325e53e10c4ed44dde8b60c4f6708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94d13ad18df325e53e10c4ed44dde8b60c4f6708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94d13ad18df325e53e10c4ed44dde8b60c4f6708"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "037598e03e9e96e7296fb26bba763c9285a13e2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_delegitimize_address): New function.\n+\t(TARGET_DELEGITIMIZE_ADDRESS): Define to above.\n+\n 2010-11-10  Quentin Neill  <quentin.neill.gnu@gmail.com>\n \n \t* config.gcc (i[34567]86-*-*): Include tbmintrin.h."}, {"sha": "d9b1323ff21e78de0ecd5fd0a5a232f4af61df3e", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7a6ed68c18117b0b248bccd932b5a477d2f8c2/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=8e7a6ed68c18117b0b248bccd932b5a477d2f8c2", "patch": "@@ -420,6 +420,7 @@ static bool sparc_tls_referenced_p (rtx);\n static rtx sparc_legitimize_tls_address (rtx);\n static rtx sparc_legitimize_pic_address (rtx, rtx);\n static rtx sparc_legitimize_address (rtx, rtx, enum machine_mode);\n+static rtx sparc_delegitimize_address (rtx);\n static bool sparc_mode_dependent_address_p (const_rtx);\n static bool sparc_pass_by_reference (CUMULATIVE_ARGS *,\n \t\t\t\t     enum machine_mode, const_tree, bool);\n@@ -524,6 +525,8 @@ static const struct default_options sparc_option_optimization_table[] =\n \n #undef TARGET_LEGITIMIZE_ADDRESS\n #define TARGET_LEGITIMIZE_ADDRESS sparc_legitimize_address\n+#undef TARGET_DELEGITIMIZE_ADDRESS\n+#define TARGET_DELEGITIMIZE_ADDRESS sparc_delegitimize_address\n #undef TARGET_MODE_DEPENDENT_ADDRESS_P\n #define TARGET_MODE_DEPENDENT_ADDRESS_P sparc_mode_dependent_address_p\n \n@@ -3568,6 +3571,24 @@ sparc_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n   return x;\n }\n \n+/* Delegitimize an address that was legitimized by the above function.  */\n+\n+static rtx\n+sparc_delegitimize_address (rtx x)\n+{\n+  x = delegitimize_mem_from_attrs (x);\n+\n+  if (GET_CODE (x) == LO_SUM\n+      && GET_CODE (XEXP (x, 1)) == UNSPEC\n+      && XINT (XEXP (x, 1), 1) == UNSPEC_TLSLE)\n+    {\n+      x = XVECEXP (XEXP (x, 1), 0, 0);\n+      gcc_assert (GET_CODE (x) == SYMBOL_REF);\n+    }\n+\n+  return x;\n+}\n+\n /* SPARC implementation of LEGITIMIZE_RELOAD_ADDRESS.  Returns a value to\n    replace the input X, or the original X if no replacement is called for.\n    The output parameter *WIN is 1 if the calling macro should goto WIN,"}]}