{"sha": "0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwN2FmNTNkZDM2YzI1YmY0ZGJiYzE4ZjJlOGY0ZDFjZjBiNzA5Mg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-31T09:52:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T09:52:57Z"}, "message": "sem_util.adb, [...]: Minor reformatting.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb, a-ngelfu.ads, prj-nmsc.adb, prj-conf.adb: Minor\n\treformatting.\n\nFrom-SVN: r213332", "tree": {"sha": "dfa6de9848ee69af2bc9f4566536e092805db364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfa6de9848ee69af2bc9f4566536e092805db364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/comments", "author": null, "committer": null, "parents": [{"sha": "3affd6d4eb5f48941a138390b1bc3c8d3a22a60b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3affd6d4eb5f48941a138390b1bc3c8d3a22a60b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3affd6d4eb5f48941a138390b1bc3c8d3a22a60b"}], "stats": {"total": 91, "additions": 52, "deletions": 39}, "files": [{"sha": "444aed206bac9ce777810adba21e581f3ffd28e1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb, a-ngelfu.ads, prj-nmsc.adb, prj-conf.adb: Minor\n+\treformatting.\n+\n 2014-07-31  Pascal Obry  <obry@adacore.com>\n \n \t* prj-nmsc.adb: Minor reformatting."}, {"sha": "fba557f5f6129c0e08f618292df14e3ca0cbef76", "filename": "gcc/ada/a-ngelfu.ads", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fa-ngelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fa-ngelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.ads?ref=0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "patch": "@@ -41,20 +41,23 @@ package Ada.Numerics.Generic_Elementary_Functions is\n \n    function Sqrt (X : Float_Type'Base) return Float_Type'Base with\n      Post => Sqrt'Result >= 0.0\n-\n        and then (if X = 0.0 then Sqrt'Result = 0.0)\n-\n        and then (if X = 1.0 then Sqrt'Result = 1.0)\n \n-       --  If X is positive, the result of Sqrt is positive. This property is\n-       --  useful in particular for static analysis. The property that X is\n-       --  positive is not expressed as (X > 0), as the value X may be held in\n-       --  registers that have larger range and precision on some architecture\n+       --  Finally if X is positive, the result of Sqrt is positive (because\n+       --  the sqrt of numbers greater than 1 is greater than or equal to 1,\n+       --  and the sqrt of numbers less than 1 is greater than the argument).\n+\n+       --  This property is useful in particular for static analysis. The\n+       --  property that X is positive is not expressed as (X > 0), as\n+       --  the value X may be held in registers that have larger range and\n+       --  precision on some architecture (for example, on x86 using x387\n+       --  FPU, as opposed to SSE2). So, it might be possible for X to be\n+       --  2.0**(-5000) or so, which could cause the number to compare as\n+       --  greater than 0, but Sqrt would still return a zero result.\n \n-       --  (for example, on x86 using x387 FPU, as opposed to SSE2). So, it\n-       --  might be possible for X to be 2.0**(-5000) or so, which could cause\n-       --  the number to compare as greater than 0, but Sqrt would still return\n-       --  a zero result.\n+       --  Note: we use the comparison with Succ (0.0) here because this is\n+       --  more amenable to CodePeer analysis than the use of 'Machine.\n \n        and then (if X >= Float_Type'Succ (0.0) then Sqrt'Result > 0.0);\n \n@@ -70,26 +73,26 @@ package Ada.Numerics.Generic_Elementary_Functions is\n \n    function \"**\" (Left, Right : Float_Type'Base) return Float_Type'Base with\n      Post => \"**\"'Result >= 0.0\n-               and then (if Right = 0.0 then \"**\"'Result = 1.0)\n-               and then (if Right = 1.0 then \"**\"'Result = Left)\n-               and then (if Left = 1.0 then \"**\"'Result = 1.0)\n-               and then (if Left = 0.0 then \"**\"'Result = 0.0);\n+       and then (if Right = 0.0 then \"**\"'Result = 1.0)\n+       and then (if Right = 1.0 then \"**\"'Result = Left)\n+       and then (if Left  = 1.0 then \"**\"'Result = 1.0)\n+       and then (if Left  = 0.0 then \"**\"'Result = 0.0);\n \n    function Sin (X : Float_Type'Base) return Float_Type'Base with\n      Post => Sin'Result in -1.0 .. 1.0\n-               and then (if X = 0.0 then Sin'Result = 0.0);\n+       and then (if X = 0.0 then Sin'Result = 0.0);\n \n    function Sin (X, Cycle : Float_Type'Base) return Float_Type'Base with\n      Post => Sin'Result in -1.0 .. 1.0\n-               and then (if X = 0.0 then Sin'Result = 0.0);\n+       and then (if X = 0.0 then Sin'Result = 0.0);\n \n    function Cos (X : Float_Type'Base) return Float_Type'Base with\n      Post => Cos'Result in -1.0 .. 1.0\n-               and then (if X = 0.0 then Cos'Result = 1.0);\n+       and then (if X = 0.0 then Cos'Result = 1.0);\n \n    function Cos (X, Cycle : Float_Type'Base) return Float_Type'Base with\n      Post => Cos'Result in -1.0 .. 1.0\n-               and then (if X = 0.0 then Cos'Result = 1.0);\n+       and then (if X = 0.0 then Cos'Result = 1.0);\n \n    function Tan (X : Float_Type'Base) return Float_Type'Base with\n      Post => (if X = 0.0 then Tan'Result = 0.0);\n@@ -144,11 +147,11 @@ package Ada.Numerics.Generic_Elementary_Functions is\n \n    function Cosh (X : Float_Type'Base) return Float_Type'Base with\n      Post => Cosh'Result >= 1.0\n-               and then (if X = 0.0 then Cosh'Result = 1.0);\n+       and then (if X = 0.0 then Cosh'Result = 1.0);\n \n    function Tanh (X : Float_Type'Base) return Float_Type'Base with\n      Post => Tanh'Result in -1.0 .. 1.0\n-               and then (if X = 0.0 then Tanh'Result = 0.0);\n+       and then (if X = 0.0 then Tanh'Result = 0.0);\n \n    function Coth (X : Float_Type'Base) return Float_Type'Base with\n      Post => abs Coth'Result >= 1.0;\n@@ -158,7 +161,7 @@ package Ada.Numerics.Generic_Elementary_Functions is\n \n    function Arccosh (X : Float_Type'Base) return Float_Type'Base with\n      Post => Arccosh'Result >= 0.0\n-               and then (if X = 1.0 then Arccosh'Result = 0.0);\n+       and then (if X = 1.0 then Arccosh'Result = 0.0);\n \n    function Arctanh (X : Float_Type'Base) return Float_Type'Base with\n      Post => (if X = 0.0 then Arctanh'Result = 0.0);"}, {"sha": "c6163fbcad9931366b792145938e1ca99589beb7", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "patch": "@@ -65,8 +65,8 @@ package body Prj.Conf is\n    --  set from a --RTS command line option.\n \n    procedure Locate_Runtime\n-     (Language     : Name_Id;\n-      Env          : Prj.Tree.Environment);\n+     (Language : Name_Id;\n+      Env      : Prj.Tree.Environment);\n    --  If RTS_Name is a base name (a name without path separator), then\n    --  do nothing. Otherwise, convert it to an absolute path (possibly by\n    --  searching it in the project path) and call Set_Runtime_For with the\n@@ -1525,8 +1525,8 @@ package body Prj.Conf is\n    --------------------\n \n    procedure Locate_Runtime\n-     (Language     : Name_Id;\n-      Env          : Prj.Tree.Environment)\n+     (Language : Name_Id;\n+      Env      : Prj.Tree.Environment)\n    is\n       function Is_Base_Name (Path : String) return Boolean;\n       --  Returns True if Path has no directory separator"}, {"sha": "7d8678aff50dcac681e4d7410d4b69c74d5eb58d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "patch": "@@ -3029,58 +3029,62 @@ package body Prj.Nmsc is\n       --  Check if an imported or extended project if also a library project\n \n       procedure Check_Aggregate_Library_Dirs;\n+      --  Check that the library directory and the library ALI directory of\n+      --  an aggregate library project are not the same as the object directory\n+      --  or the library directory of any of its aggregated projects.\n \n       ----------------------------------\n       -- Check_Aggregate_Library_Dirs --\n       ----------------------------------\n \n       procedure Check_Aggregate_Library_Dirs is\n-\n          procedure Process_Aggregate (Proj : Project_Id);\n+         --  Recursive procedure to check the aggregated projects, as they may\n+         --  also be aggregated library projects.\n \n          -----------------------\n          -- Process_Aggregate --\n          -----------------------\n \n          procedure Process_Aggregate (Proj : Project_Id) is\n-\n-            Agg : Aggregated_Project_List := Proj.Aggregated_Projects;\n+            Agg : Aggregated_Project_List;\n \n          begin\n+            Agg := Proj.Aggregated_Projects;\n             while Agg /= null loop\n                Error_Msg_Name_1 := Agg.Project.Name;\n \n-               if Agg.Project.Qualifier /= Aggregate_Library and then\n-                 Project.Library_ALI_Dir.Name\n-                 = Agg.Project.Object_Directory.Name\n+               if Agg.Project.Qualifier /= Aggregate_Library\n+                 and then Project.Library_ALI_Dir.Name =\n+                                        Agg.Project.Object_Directory.Name\n                then\n                   Error_Msg\n                     (Data.Flags,\n                      \"aggregate library 'A'L'I directory cannot be shared with\"\n                      & \" object directory of aggregated project %%\",\n                      The_Lib_Kind.Location, Project);\n \n-               elsif Project.Library_ALI_Dir.Name\n-                 = Agg.Project.Library_Dir.Name\n+               elsif Project.Library_ALI_Dir.Name =\n+                                        Agg.Project.Library_Dir.Name\n                then\n                   Error_Msg\n                     (Data.Flags,\n                      \"aggregate library 'A'L'I directory cannot be shared with\"\n                      & \" library directory of aggregated project %%\",\n                      The_Lib_Kind.Location, Project);\n \n-               elsif Agg.Project.Qualifier /= Aggregate_Library and then\n-                 Project.Library_Dir.Name\n-                 = Agg.Project.Object_Directory.Name\n+               elsif Agg.Project.Qualifier /= Aggregate_Library\n+                 and then Project.Library_Dir.Name =\n+                                        Agg.Project.Object_Directory.Name\n                then\n                   Error_Msg\n                     (Data.Flags,\n                      \"aggregate library directory cannot be shared with\"\n                      & \" object directory of aggregated project %%\",\n                      The_Lib_Kind.Location, Project);\n \n-               elsif Project.Library_Dir.Name\n-                 = Agg.Project.Library_Dir.Name\n+               elsif Project.Library_Dir.Name =\n+                                        Agg.Project.Library_Dir.Name\n                then\n                   Error_Msg\n                     (Data.Flags,\n@@ -3097,6 +3101,8 @@ package body Prj.Nmsc is\n             end loop;\n          end Process_Aggregate;\n \n+      --  Start of processing for Check_Aggregate_Library_Dirs\n+\n       begin\n          if Project.Qualifier = Aggregate_Library then\n             Process_Aggregate (Project);"}, {"sha": "8f24046042a1de33a3104fc5297333fb6d1c2d38", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0407af53dd36c25bf4dbbc18f2e8f4d1cf0b7092", "patch": "@@ -16459,7 +16459,6 @@ package body Sem_Util is\n          Stmt := Original_Node (N);\n       end if;\n \n-      --    and then Ekind (Entity (Identifier (Stmt))) = E_Loop\n       return\n         Nkind (Stmt) = N_Loop_Statement\n           and then Present (Identifier (Stmt))"}]}