{"sha": "dd3dba526f93ec79a1998a9c1845833087d0b134", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzZGJhNTI2ZjkzZWM3OWExOTk4YTljMTg0NTgzMzA4N2QwYjEzNA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-06-03T17:59:14Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-06-03T17:59:14Z"}, "message": "In libobjc/: 2011-06-03 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* Makefile.in (OBJC_H): Removed hash.h and sarray.h.\n\t(OBJC_DEPRECATED_H): Likewise.\n\t* libobjc.def (objc_hash_new, objc_hash_delete, objc_hash_add,\n\tobjc_hash_remove, objc_hash_next, objc_hash_value_for_key,\n\tobjc_hash_is_key_in_hash, hash_add, hash_delete, hash_new,\n\thash_next, hash_remove, hash_value_for_key, hash_is_key_in_hash,\n\tsarray_at_put, sarray_at_put_safe, sarray_free, sarray_lazy_copy,\n\tsarray_new, sarray_realloc, sarray_remove_garbage): Removed.\n\t* objc/sarray.h: Removed.\n\t* objc/hash.h: Removed.\n\t* objc/deprecated/sarray.h: Removed.\n\t* objc/deprecated/hash.h: Removed.\n\t* objc/Object.h: Do not include objc/deprecated/hash.h\n\t* Object.m: Include string.h.\n\t* objc/objc-api.h: Do not include objc/deprecated/hash.h.\n\t* objc-private/common.h (GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF):\n\tRemoved.\n\nIn gcc/testsuite/:\n2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/headers.m: Do not include sarray.h and hash.h.\n\nFrom-SVN: r174610", "tree": {"sha": "20d48a962fa9b0476ccec284d69d7ffab4decc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20d48a962fa9b0476ccec284d69d7ffab4decc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd3dba526f93ec79a1998a9c1845833087d0b134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3dba526f93ec79a1998a9c1845833087d0b134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3dba526f93ec79a1998a9c1845833087d0b134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3dba526f93ec79a1998a9c1845833087d0b134/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b7a0148f070deb07455f06a15ff13834c92f17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7a0148f070deb07455f06a15ff13834c92f17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7a0148f070deb07455f06a15ff13834c92f17b"}], "stats": {"total": 520, "additions": 26, "deletions": 494}, "files": [{"sha": "91bed17a4c711b1d07340948e77dca328f96db77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -1,3 +1,7 @@\n+2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/headers.m: Do not include sarray.h and hash.h.\n+\n 2011-06-03  Richard Henderson  <rth@redhat.com>\n \t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n "}, {"sha": "c20b36ac1115e42dc0303506932be9c61ca4ad2d", "filename": "gcc/testsuite/objc.dg/headers.m", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -14,13 +14,11 @@\n #include <objc/objc-runtime.h>\n #else\n #include <objc/encoding.h>\n-#include <objc/hash.h>\n #endif\n \n #include <objc/objc-api.h>\n #include <objc/objc.h>\n \n #ifndef __NEXT_RUNTIME__\n-#include <objc/sarray.h>\n #include <objc/thr.h>\n #endif"}, {"sha": "4de6621eea5c4ff830bd4f737def7248e63b46e1", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -1,3 +1,23 @@\n+2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* Makefile.in (OBJC_H): Removed hash.h and sarray.h.\n+\t(OBJC_DEPRECATED_H): Likewise.\n+\t* libobjc.def (objc_hash_new, objc_hash_delete, objc_hash_add,\n+\tobjc_hash_remove, objc_hash_next, objc_hash_value_for_key,\n+\tobjc_hash_is_key_in_hash, hash_add, hash_delete, hash_new,\n+\thash_next, hash_remove, hash_value_for_key, hash_is_key_in_hash,\n+\tsarray_at_put, sarray_at_put_safe, sarray_free, sarray_lazy_copy,\n+\tsarray_new, sarray_realloc, sarray_remove_garbage): Removed.\n+\t* objc/sarray.h: Removed.\n+\t* objc/hash.h: Removed.\n+\t* objc/deprecated/sarray.h: Removed.\n+\t* objc/deprecated/hash.h: Removed.\n+\t* objc/Object.h: Do not include objc/deprecated/hash.h\n+\t* Object.m: Include string.h.\n+\t* objc/objc-api.h: Do not include objc/deprecated/hash.h.\n+\t* objc-private/common.h (GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF):\n+\tRemoved.\n+\n 2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* Object.m ([-forward::]): Removed."}, {"sha": "a9658061a8fa9f0019847510102df49505bd29f0", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -122,10 +122,7 @@ OBJC_H = \\\n   objc-api.h \\\n   objc-decls.h \\\n   runtime.h \\\n-  thr.h \\\n-  \\\n-  hash.h \\\n-  sarray.h\n+  thr.h\n \n # User-visible header files containing deprecated APIs, from the\n # objc/deprecated directory\n@@ -135,14 +132,12 @@ OBJC_DEPRECATED_H = \\\n   Object.h \\\n   Protocol.h \\\n   STR.h \\\n-  hash.h \\\n   objc_get_uninstalled_dtable.h \\\n   objc_malloc.h \\\n   objc_msg_sendv.h \\\n   objc_object_alloc.h \\\n   objc_unexpected_exception.h \\\n   objc_valloc.h \\\n-  sarray.h \\\n   struct_objc_category.h \\\n   struct_objc_class.h \\\n   struct_objc_ivar.h \\"}, {"sha": "9781fad1d7fc8d95eda85087753f2ea59d4fe11b", "filename": "libobjc/Object.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FObject.m?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -25,6 +25,7 @@\n \n #include \"objc-private/common.h\"\n #include <stdarg.h>\n+#include <string.h> /* For strcmp.  */\n #include <errno.h>\n #include \"objc/Object.h\"\n #include \"objc/Protocol.h\""}, {"sha": "a478f76665f13b651bace1a53e27a431995df92b", "filename": "libobjc/libobjc.def", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Flibobjc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Flibobjc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Flibobjc.def?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -23,8 +23,6 @@ LIBRARY libobjc\n EXPORTS\n search_for_method_in_list\n objc_get_uninstalled_dtable\n-objc_hash_is_key_in_hash\n-hash_is_key_in_hash\n _objc_load_callback\n objc_malloc\n objc_atomic_malloc\n@@ -106,22 +104,3 @@ objc_get_class\n objc_get_meta_class\n objc_lookup_class\n objc_next_class\n-sarray_at_put\n-sarray_at_put_safe\n-sarray_free\n-sarray_lazy_copy\n-sarray_new\n-sarray_realloc\n-sarray_remove_garbage\n-objc_hash_add\n-hash_add\n-objc_hash_delete\n-hash_delete\n-objc_hash_new\n-hash_new\n-objc_hash_next\n-hash_next\n-objc_hash_remove\n-hash_remove\n-objc_hash_value_for_key\n-hash_value_for_key"}, {"sha": "d1f071114ecb47c92fbf3e67769527443adafaee", "filename": "libobjc/objc-private/common.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc-private%2Fcommon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc-private%2Fcommon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc-private%2Fcommon.h?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -28,11 +28,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* This file contains definitions that should be included by all .c\n    and .m files in libobjc.  */\n \n-/* This variable allows the public headers to determine when they are\n-   being included by a file inside libobjc itself, or when they are\n-   being included by an external file.  */\n-#define GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF 1\n-\n /* When debugging libobjc, add\n \n    #define DEBUG 1"}, {"sha": "11c4617a98c58befbee60f1be00ea465cf441c21", "filename": "libobjc/objc/Object.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FObject.h?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -57,7 +57,6 @@ extern \"C\" {\n \n /* All of the following includes were deprecated in GCC 4.6 and will\n    be removed in the next release.  */\n-#include \"deprecated/hash.h\"\n #include \"deprecated/Object.h\"\n \n #ifdef __cplusplus"}, {"sha": "8b718a4417d295b9e2b76565adbd87c7d3574fc5", "filename": "libobjc/objc/deprecated/hash.h", "status": "removed", "additions": 0, "deletions": 211, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fdeprecated%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fdeprecated%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fhash.h?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,211 +0,0 @@\n-/* Hash tables for Objective C method dispatch.\n-   Copyright (C) 1993, 1995, 1996, 2004, 2009 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-\n-\n-#ifndef __hash_INCLUDE_GNU\n-#define __hash_INCLUDE_GNU\n-\n-#include <stddef.h>\n-#include <string.h>\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif /* __cplusplus */\n-\n-/*\n- * This data structure is used to hold items\n- *  stored in a hash table.  Each node holds \n- *  a key/value pair.\n- *\n- * Items in the cache are really of type void *.\n- */\n-typedef struct cache_node\n-{\n-  struct cache_node *next;\t/* Pointer to next entry on the list.\n-\t\t\t\t   NULL indicates end of list. */\n-  const void *key;\t\t/* Key used to locate the value.  Used\n-\t\t\t\t   to locate value when more than one\n-\t\t\t\t   key computes the same hash\n-\t\t\t\t   value. */\n-  void *value;\t\t\t/* Value stored for the key. */\n-} *node_ptr;\n-\n-\n-/*\n- * This data type is the function that computes a hash code given a key.\n- * Therefore, the key can be a pointer to anything and the function specific\n- * to the key type. \n- *\n- * Unfortunately there is a mutual data structure reference problem with this\n- * typedef.  Therefore, to remove compiler warnings the functions passed to\n- * objc_hash_new will have to be casted to this type. \n- */\n-typedef unsigned int (*hash_func_type) (void *, const void *);\n-\n-/*\n- * This data type is the function that compares two hash keys and returns an\n- * integer greater than, equal to, or less than 0, according as the first\n- * parameter is lexicographically greater than, equal to, or less than the\n- * second. \n- */\n-\n-typedef int (*compare_func_type) (const void *, const void *);\n-\n-\n-/*\n- * This data structure is the cache.\n- *\n- * It must be passed to all of the hashing routines\n- *   (except for new).\n- */\n-typedef struct cache\n-{\n-  /* Variables used to implement the hash itself.  */\n-  node_ptr *node_table; /* Pointer to an array of hash nodes.  */\n-  /* Variables used to track the size of the hash table so to determine\n-    when to resize it.  */\n-  unsigned int size; /* Number of buckets allocated for the hash table\n-\t\t\t(number of array entries allocated for\n-\t\t\t\"node_table\").  Must be a power of two.  */\n-  unsigned int used; /* Current number of entries in the hash table.  */\n-  unsigned int mask; /* Precomputed mask.  */\n-\n-  /* Variables used to implement indexing through the hash table.  */\n-\n-  unsigned int last_bucket; /* Tracks which entry in the array where\n-\t\t\t       the last value was returned.  */\n-  /* Function used to compute a hash code given a key. \n-     This function is specified when the hash table is created.  */\n-  hash_func_type    hash_func;\n-  /* Function used to compare two hash keys to see if they are equal.  */\n-  compare_func_type compare_func;\n-} *cache_ptr;\n-\n-\n-/* Allocate and initialize a hash table.  */ \n-\n-cache_ptr objc_hash_new (unsigned int size,\n-\t\t\t hash_func_type hash_func,\n-\t\t\t compare_func_type compare_func);\n-                       \n-/* Deallocate all of the hash nodes and the cache itself.  */\n-\n-void objc_hash_delete (cache_ptr cache);\n-\n-/* Add the key/value pair to the hash table.  If the\n-   hash table reaches a level of fullness then it will be resized. \n-                                                   \n-   assert if the key is already in the hash.  */\n-\n-void objc_hash_add (cache_ptr *cachep, const void *key, void *value);\n-     \n-/* Remove the key/value pair from the hash table.  \n-   assert if the key isn't in the table.  */\n-\n-void objc_hash_remove (cache_ptr cache, const void *key);\n-\n-/* Used to index through the hash table.  Start with NULL\n-   to get the first entry.\n-                                                  \n-   Successive calls pass the value returned previously.\n-   ** Don't modify the hash during this operation *** \n-                                                  \n-   Cache nodes are returned such that key or value can\n-   be extracted.  */\n-\n-node_ptr objc_hash_next (cache_ptr cache, node_ptr node);\n-\n-/* Used to return a value from a hash table using a given key.  */\n-\n-void *objc_hash_value_for_key (cache_ptr cache, const void *key);\n-\n-/* Used to determine if the given key exists in the hash table */\n-\n-BOOL objc_hash_is_key_in_hash (cache_ptr cache, const void *key);\n-\n-/************************************************\n-\n-        Useful hashing functions.  \n-        \n-        Declared inline for your pleasure.\n-        \n-************************************************/\n-\n-/* Calculate a hash code by performing some \n-   manipulation of the key pointer.  (Use the lowest bits\n-   except for those likely to be 0 due to alignment.)  */\n-\n-static inline unsigned int\n-objc_hash_ptr (cache_ptr cache, const void *key)\n-{\n-  return ((size_t)key / sizeof (void *)) & cache->mask;\n-}\n-\n-\n-/* Calculate a hash code by iterating over a NULL \n-   terminate string.  */\n-static inline unsigned int \n-objc_hash_string (cache_ptr cache, const void *key)\n-{\n-  unsigned int ret = 0;\n-  unsigned int ctr = 0;\n-  const char *ckey = (const char *) key;\n-        \n-  while (*ckey) {\n-    ret ^= *ckey++ << ctr;\n-    ctr = (ctr + 1) % sizeof (void *);\n-  }\n-\n-  return ret & cache->mask;\n-}\n-\n-\n-/* Compare two pointers for equality.  */\n-static inline int \n-objc_compare_ptrs (const void *k1, const void *k2)\n-{\n-  return (k1 == k2);\n-}\n-\n-\n-/* Compare two strings.  */\n-static inline int \n-objc_compare_strings (const void *k1, const void *k2)\n-{\n-  if (k1 == k2)\n-    return 1;\n-  else if (k1 == 0 || k2 == 0)\n-    return 0;\n-  else\n-    return ! strcmp ((const char *) k1, (const char *) k2);\n-}\n-\n-\n-#ifdef __cplusplus\n-}\n-#endif /* __cplusplus */\n-\n-\n-#endif /* not __hash_INCLUDE_GNU */"}, {"sha": "aa2f3350a456288fb8a9da0baf5bed6f71a793d1", "filename": "libobjc/objc/deprecated/sarray.h", "status": "removed", "additions": 0, "deletions": 240, "changes": 240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fdeprecated%2Fsarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fdeprecated%2Fsarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fsarray.h?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,240 +0,0 @@\n-/* Sparse Arrays for Objective C dispatch tables\n-   Copyright (C) 1993, 1995, 1996, 2004, 2009 Free Software Foundation, Inc.\n-   Contributed by Kresten Krab Thorup.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-\n-#ifndef __sarray_INCLUDE_GNU\n-#define __sarray_INCLUDE_GNU\n-\n-#define OBJC_SPARSE2\t\t/* 2-level sparse array */\n-/* #define OBJC_SPARSE3 */      /* 3-level sparse array */\n-\n-#ifdef OBJC_SPARSE2\n-extern const char* __objc_sparse2_id;\n-#endif\n-\n-#ifdef OBJC_SPARSE3\n-extern const char* __objc_sparse3_id;\n-#endif\n-\n-#include <stddef.h>\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif /* __cplusplus */\n-\n-extern int nbuckets;\t\t/* for stats */\n-extern int nindices;\n-extern int narrays;\n-extern int idxsize;\n-\n-/* An unsigned integer of same size as a pointer */\n-#define SIZET_BITS (sizeof(size_t)*8)\n-\n-#if defined(__sparc__) || defined(OBJC_SPARSE2)\n-#define PRECOMPUTE_SELECTORS\n-#endif\n-\n-#ifdef OBJC_SPARSE3\n-\n-/* Buckets are 8 words each */\n-#define BUCKET_BITS 3\n-#define BUCKET_SIZE (1<<BUCKET_BITS)\n-#define BUCKET_MASK (BUCKET_SIZE-1)\n-\n-/* Indices are 16 words each */\n-#define INDEX_BITS 4\n-#define INDEX_SIZE (1<<INDEX_BITS)\n-#define INDEX_MASK (INDEX_SIZE-1)\n-\n-#define INDEX_CAPACITY (BUCKET_SIZE*INDEX_SIZE)\n-\n-#else /* OBJC_SPARSE2 */\n-\n-/* Buckets are 32 words each */\n-#define BUCKET_BITS 5\n-#define BUCKET_SIZE (1<<BUCKET_BITS)\n-#define BUCKET_MASK (BUCKET_SIZE-1)\n-\n-#endif /* OBJC_SPARSE2 */\n-\n-typedef size_t sidx;\n-\n-#ifdef PRECOMPUTE_SELECTORS\n-\n-struct soffset {\n-#ifdef OBJC_SPARSE3\n-  unsigned int unused : SIZET_BITS/4;\n-  unsigned int eoffset : SIZET_BITS/4;\n-  unsigned int boffset : SIZET_BITS/4;\n-  unsigned int ioffset : SIZET_BITS/4;\n-#else /* OBJC_SPARSE2 */\n-#ifdef __sparc__\n-  unsigned long boffset : (SIZET_BITS - 2) - BUCKET_BITS;\n-  unsigned int eoffset : BUCKET_BITS;\n-  unsigned int unused  : 2;\n-#else\n-  unsigned int boffset : SIZET_BITS/2;\n-  unsigned int eoffset : SIZET_BITS/2;\n-#endif\n-#endif /* OBJC_SPARSE2 */\n-};\n-\n-union sofftype {\n-  struct soffset off;\n-  sidx idx;\n-};\n-\n-#endif /* not PRECOMPUTE_SELECTORS */\n-\n-union sversion {\n-  int\tversion;\n-  void *next_free;\n-};\n-\n-struct sbucket {\n-  void* elems[BUCKET_SIZE];\t/* elements stored in array */\n-  union sversion\tversion;\t\t/* used for copy-on-write */\n-};\n-\n-#ifdef OBJC_SPARSE3\n-\n-struct sindex {\n-  struct sbucket* buckets[INDEX_SIZE];\n-  union sversion\tversion;\t\t/* used for copy-on-write */\n-};\n-\n-#endif /* OBJC_SPARSE3 */\n-\n-struct sarray {\n-#ifdef OBJC_SPARSE3\n-  struct sindex** indices;\n-  struct sindex* empty_index;\n-#else /* OBJC_SPARSE2 */\n-  struct sbucket** buckets;\n-#endif  /* OBJC_SPARSE2 */\n-  struct sbucket* empty_bucket;\n-  union sversion\tversion;\t\t/* used for copy-on-write */\n-  short ref_count;\n-  struct sarray* is_copy_of;\n-  size_t capacity;\n-};\n-\n-struct sarray* sarray_new(int, void* default_element);\n-void sarray_free(struct sarray*);\n-struct sarray* sarray_lazy_copy(struct sarray*);\n-void sarray_realloc(struct sarray*, int new_size);\n-void sarray_at_put(struct sarray*, sidx indx, void* elem);\n-void sarray_at_put_safe(struct sarray*, sidx indx, void* elem);\n-\n-struct sarray* sarray_hard_copy(struct sarray*); /* ... like the name? */\n-void sarray_remove_garbage(void);\n-\f\n-\n-#ifdef PRECOMPUTE_SELECTORS\n-/* Transform soffset values to ints and vica verca */\n-static inline unsigned int\n-soffset_decode(sidx indx)\n-{\n-  union sofftype x;\n-  x.idx = indx;\n-#ifdef OBJC_SPARSE3\n-  return x.off.eoffset\n-    + (x.off.boffset*BUCKET_SIZE)\n-      + (x.off.ioffset*INDEX_CAPACITY);\n-#else /* OBJC_SPARSE2 */\n-  return x.off.eoffset + (x.off.boffset*BUCKET_SIZE);\n-#endif /* OBJC_SPARSE2 */\n-}\n-\n-static inline sidx\n-soffset_encode(size_t offset)\n-{\n-  union sofftype x;\n-  x.off.eoffset = offset%BUCKET_SIZE;\n-#ifdef OBJC_SPARSE3\n-  x.off.boffset = (offset/BUCKET_SIZE)%INDEX_SIZE;\n-  x.off.ioffset = offset/INDEX_CAPACITY;\n-#else /* OBJC_SPARSE2 */\n-  x.off.boffset = offset/BUCKET_SIZE;\n-#endif\n-  return (sidx)x.idx;\n-}\n-\n-#else /* not PRECOMPUTE_SELECTORS */\n-\n-static inline size_t\n-soffset_decode(sidx indx)\n-{\n-  return indx;\n-}\n-\n-static inline sidx\n-soffset_encode(size_t offset)\n-{\n-  return offset;\n-}\n-#endif /* not PRECOMPUTE_SELECTORS */\n-\n-/* Get element from the Sparse array `array' at offset `indx' */\n-\n-static inline void* sarray_get(struct sarray* array, sidx indx)\n-{\n-#ifdef PRECOMPUTE_SELECTORS\n-  union sofftype x;\n-  x.idx = indx;\n-#ifdef OBJC_SPARSE3\n-  return \n-    array->\n-      indices[x.off.ioffset]->\n-\tbuckets[x.off.boffset]->\n-\t  elems[x.off.eoffset];\n-#else /* OBJC_SPARSE2 */\n-  return array->buckets[x.off.boffset]->elems[x.off.eoffset];\n-#endif /* OBJC_SPARSE2 */\n-#else /* not PRECOMPUTE_SELECTORS */\n-#ifdef OBJC_SPARSE3\n-  return array->\n-    indices[indx/INDEX_CAPACITY]->\n-      buckets[(indx/BUCKET_SIZE)%INDEX_SIZE]->\n-\telems[indx%BUCKET_SIZE];\n-#else /* OBJC_SPARSE2 */\n-  return array->buckets[indx/BUCKET_SIZE]->elems[indx%BUCKET_SIZE];\n-#endif /* not OBJC_SPARSE3 */\n-#endif /* not PRECOMPUTE_SELECTORS */\n-}\n-\n-static inline void* sarray_get_safe(struct sarray* array, sidx indx)\n-{\n-  if(soffset_decode(indx) < array->capacity)\n-    return sarray_get(array, indx);\n-  else\n-    return (array->empty_bucket->elems[0]);\n-}\n-\n-#ifdef __cplusplus\n-}\n-#endif /* __cplusplus */\n-\n-#endif /* __sarray_INCLUDE_GNU */"}, {"sha": "8225a0992e4593f214bf258f4c8a341e1b423eea", "filename": "libobjc/objc/hash.h", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fhash.h?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,3 +0,0 @@\n-#include \"objc.h\"\n-#include \"deprecated/hash.h\"\n-"}, {"sha": "411f4b2aaead621ca4f5c3528ea53e36f904ff17", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3dba526f93ec79a1998a9c1845833087d0b134/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=dd3dba526f93ec79a1998a9c1845833087d0b134", "patch": "@@ -49,9 +49,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* TODO: A deprecation warning any time the file is included ? */\n \n #include \"objc.h\"\n-#ifndef GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF\n-# include \"deprecated/hash.h\"\n-#endif\n #include \"thr.h\"\n #include \"objc-decls.h\"\n #include <stdio.h>"}, {"sha": "ff51e47f918d018f8393630802ab694c96a35536", "filename": "libobjc/objc/sarray.h", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fsarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7a0148f070deb07455f06a15ff13834c92f17b/libobjc%2Fobjc%2Fsarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fsarray.h?ref=1b7a0148f070deb07455f06a15ff13834c92f17b", "patch": "@@ -1,2 +0,0 @@\n-#include \"deprecated/sarray.h\"\n-"}]}