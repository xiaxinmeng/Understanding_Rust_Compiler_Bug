{"sha": "11492349fe6f6a568b3aecdc1a503f80b8848070", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0OTIzNDlmZTZmNmE1NjhiM2FlY2RjMWE1MDNmODBiODg0ODA3MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-01-05T07:19:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-01-05T07:19:30Z"}, "message": "re PR fortran/41872 (wrong-code: Issues with allocatable scalars)\n\n2010-01-05  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41872\n        * trans-expr.c (gfc_conv_procedure_call): Nullify\n        return value for allocatable-scalar character functions.\n\n2010-01-05  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41872\n        * gfortran.dg/allocatable_scalar_8.f90: New.\n\nFrom-SVN: r155639", "tree": {"sha": "2ae149e5997603aff8300a6d2a76abd2638c2a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ae149e5997603aff8300a6d2a76abd2638c2a1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11492349fe6f6a568b3aecdc1a503f80b8848070", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11492349fe6f6a568b3aecdc1a503f80b8848070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11492349fe6f6a568b3aecdc1a503f80b8848070", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11492349fe6f6a568b3aecdc1a503f80b8848070/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab90dbeb085f5ed52528878686c7ba9113d25bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab90dbeb085f5ed52528878686c7ba9113d25bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab90dbeb085f5ed52528878686c7ba9113d25bc4"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "6a594255dfe49d262443860bb9a42767e9bc370f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=11492349fe6f6a568b3aecdc1a503f80b8848070", "patch": "@@ -1,3 +1,9 @@\n+2010-01-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41872\n+\t* trans-expr.c (gfc_conv_procedure_call): Nullify\n+\treturn value for allocatable-scalar character functions.\n+\n 2010-01-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36161"}, {"sha": "e5fce02c6c7780c13c55af6e54569ce74b548abf", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=11492349fe6f6a568b3aecdc1a503f80b8848070", "patch": "@@ -3351,6 +3351,12 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t    {\n \t      var = gfc_create_var (type, \"pstr\");\n \n+\t      if ((!comp && sym->attr.allocatable)\n+\t\t  || (comp && comp->attr.allocatable))\n+\t\tgfc_add_modify (&se->pre, var,\n+\t\t\t\tfold_convert (TREE_TYPE (var),\n+\t\t\t\t\t      null_pointer_node));\n+\n \t      /* Provide an address expression for the function arguments.  */\n \t      var = gfc_build_addr_expr (NULL_TREE, var);\n \t    }"}, {"sha": "08622cb1fda2522c162572cf78eae37954091c25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11492349fe6f6a568b3aecdc1a503f80b8848070", "patch": "@@ -1,3 +1,8 @@\n+2010-01-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41872\n+\t* gfortran.dg/allocatable_scalar_8.f90: New.\n+\n 2010-01-04  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/42398"}, {"sha": "f7940ede5750210787c9ec7d426e7806b4b11d02", "filename": "gcc/testsuite/gfortran.dg/allocatable_scalar_8.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11492349fe6f6a568b3aecdc1a503f80b8848070/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_8.f90?ref=11492349fe6f6a568b3aecdc1a503f80b8848070", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do run }\n+!\n+! PR fortran/41872\n+!\n+! Character functions returning allocatable scalars\n+!\n+program test\n+  implicit none\n+  if (func () /= 'abc') call abort ()\n+contains\n+  function func() result (str)\n+    character(len=3), allocatable :: str\n+    if (allocated (str)) call abort ()\n+    allocate (str)\n+    str = 'abc'\n+  end function func\n+end program test"}]}