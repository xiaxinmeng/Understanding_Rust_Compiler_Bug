{"sha": "cca38f293d982cb057d5ad000cdf1a0cf51558bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhMzhmMjkzZDk4MmNiMDU3ZDVhZDAwMGNkZjFhMGNmNTE1NThiYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-03-24T10:50:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-03-24T10:50:36Z"}, "message": "re PR c++/59988 (Failing to specialize template class)\n\n2015-03-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59988\n\t* g++.dg/cpp0x/vt-59988.C: New.\n\nFrom-SVN: r221623", "tree": {"sha": "5af1f769caca7d031758a91ff5a5f027cffaa9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af1f769caca7d031758a91ff5a5f027cffaa9c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca38f293d982cb057d5ad000cdf1a0cf51558bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca38f293d982cb057d5ad000cdf1a0cf51558bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca38f293d982cb057d5ad000cdf1a0cf51558bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca38f293d982cb057d5ad000cdf1a0cf51558bb/comments", "author": null, "committer": null, "parents": [{"sha": "e72baed7e945f47609207ec8be4994e586e70649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72baed7e945f47609207ec8be4994e586e70649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72baed7e945f47609207ec8be4994e586e70649"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ab611f5d865f339750eef70e5e8b8dfb57c3fc3d", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-59988.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca38f293d982cb057d5ad000cdf1a0cf51558bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59988.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca38f293d982cb057d5ad000cdf1a0cf51558bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59988.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-59988.C?ref=cca38f293d982cb057d5ad000cdf1a0cf51558bb", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/59988\n+// { dg-do compile { target c++11 } }\n+\n+template<template<typename...> class C, typename... T>\n+struct is_valid_specialization {\n+  typedef struct { char _; } yes;\n+  typedef struct { yes _[2]; } no;\n+\n+  template<template<typename...> class D, typename... U>\n+  static yes test(D<U...>*);\n+  template<template<typename...> class D, typename... U>\n+  static no test(...);\n+\n+  constexpr static bool value = (sizeof(test<C, T...>(0)) == sizeof(yes));\n+};\n+\n+template<typename T>\n+struct Test1 { };\n+\n+template<typename T1, typename T2>\n+struct Test2 { };\n+\n+template<typename...>\n+struct TestV { };\n+\n+static_assert(!is_valid_specialization<Test1, int>::value, \"\");\n+static_assert(!is_valid_specialization<Test2, int>::value, \"\");\n+static_assert(!is_valid_specialization<TestV, int>::value, \"\");"}]}