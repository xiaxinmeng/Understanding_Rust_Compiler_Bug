{"sha": "874a07447a882ce3de66a718c9f945767ae06dd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0YTA3NDQ3YTg4MmNlM2RlNjZhNzE4YzlmOTQ1NzY3YWUwNmRkMQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-02T01:07:59Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-02T01:07:59Z"}, "message": "Move -mrelocatable word before function prologue.\n\nFrom-SVN: r9105", "tree": {"sha": "2d0b13727d6d8ba9e21fba9bf3d93d613ce3056f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d0b13727d6d8ba9e21fba9bf3d93d613ce3056f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874a07447a882ce3de66a718c9f945767ae06dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a07447a882ce3de66a718c9f945767ae06dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874a07447a882ce3de66a718c9f945767ae06dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a07447a882ce3de66a718c9f945767ae06dd1/comments", "author": null, "committer": null, "parents": [{"sha": "a6d8d7ae867253efb2b4aca11ed92855266f3a71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d8d7ae867253efb2b4aca11ed92855266f3a71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d8d7ae867253efb2b4aca11ed92855266f3a71"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "d726f82c828ab90ee44f119b02254a593edd7cb7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874a07447a882ce3de66a718c9f945767ae06dd1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874a07447a882ce3de66a718c9f945767ae06dd1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=874a07447a882ce3de66a718c9f945767ae06dd1", "patch": "@@ -63,6 +63,12 @@ static int common_mode_defined;\n \n rtx rs6000_compare_op0, rs6000_compare_op1;\n int rs6000_compare_fp_p;\n+\n+#ifdef USING_SVR4_H\n+/* Label number of label created for -mrelocatable, to call to so we can\n+   get the address of the GOT section */\n+int rs6000_pic_labelno;\n+#endif\n \f\n /* Override command line options.  Mostly we process the processor\n    type and sometimes adjust other TARGET_ options.  */\n@@ -1588,6 +1594,7 @@ output_prolog (file, size)\n   int first_fp_reg = first_fp_reg_to_save ();\n   int basic_size = rs6000_sa_size ();\n   int total_size = (basic_size + size + current_function_outgoing_args_size);\n+  char buf[256];\n \n   /* Round size to multiple of 8 bytes.  */\n   total_size = (total_size + 7) & ~7;\n@@ -1701,24 +1708,30 @@ output_prolog (file, size)\n #ifdef USING_SVR4_H\n       if (TARGET_RELOCATABLE)\n \t{\n-\t  static int labelno = 0;\n-\n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", labelno);\n+\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n \t  fprintf (file, \"\\tbl \");\n \t  assemble_name (file, buf);\n \t  fprintf (file, \"\\n\");\n \n-\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\n-\t  fprintf (file, (TARGET_POWERPC64) ? \"\\t.quad \" : \"\\t.long \");\n-\t  assemble_name (file, buf);\n-\t  fprintf (file, \"-.\\n\");\n-\n-\t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LCF\", labelno);\n+\t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LCF\", rs6000_pic_labelno);\n \t  fprintf (file, \"\\tmflr 30\\n\");\n \n-\t  asm_fprintf (file, (TARGET_POWERPC64) ? \"\\tld 0,0(30)\\n\" : \"\\t{l|lwz} 0,0(30)\\n\");\n+\t  if (TARGET_POWERPC64)\n+\t    fprintf (file, \"\\tld 0,\");\n+\t  else if (TARGET_NEW_MNEMONICS)\n+\t    fprintf (file, \"\\tlwz 0,\");\n+\t  else\n+\t    fprintf (file, \"\\tl 0,\");\n+\n+\t  fprintf (file, \"(\");\n+\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCL\", rs6000_pic_labelno);\n+\t  assemble_name (file, buf);\n+\t  fprintf (file, \"-\");\n+\t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n+\t  assemble_name (file, buf);\n+\t  fprintf (file, \")(30)\\n\");\n \t  asm_fprintf (file, \"\\t{cax|add} 30,0,30\\n\");\n-\t  labelno++;\n+\t  rs6000_pic_labelno++;\n \t}\n       else\n #endif /* USING_SVR4_H */"}, {"sha": "378a20892079cb3764e1aa48d1c6decc1262a9e7", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874a07447a882ce3de66a718c9f945767ae06dd1/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874a07447a882ce3de66a718c9f945767ae06dd1/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=874a07447a882ce3de66a718c9f945767ae06dd1", "patch": "@@ -188,10 +188,27 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n    function's return value.  We allow for that here.  */\n \n extern void svr4_traceback ();\n+extern int rs6000_pic_labelno;\n \n #undef\tASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_RELOCATABLE && get_pool_size () != 0)\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar buf[256];\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"LCL\", rs6000_pic_labelno);\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\t\t\t\\\n+\tfprintf (FILE, (TARGET_POWERPC64) ? \"\\t.quad \" : \"\\t.long \");\t\\\n+\tassemble_name (FILE, buf);\t\t\t\t\t\\\n+\tputc ('-', FILE);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\t\\\n+\tassemble_name (FILE, buf);\t\t\t\t\t\\\n+\tputc ('\\n', FILE);\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     putc (',', FILE);\t\t\t\t\t\t\t\\"}]}