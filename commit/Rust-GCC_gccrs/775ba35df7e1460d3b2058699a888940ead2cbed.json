{"sha": "775ba35df7e1460d3b2058699a888940ead2cbed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1YmEzNWRmN2UxNDYwZDNiMjA1ODY5OWE4ODg5NDBlYWQyY2JlZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T22:30:48Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T22:30:48Z"}, "message": "(debug_real): New function.\n\nFrom-SVN: r5742", "tree": {"sha": "280fe37adfd0a8749585d574dfe23658d33609fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/280fe37adfd0a8749585d574dfe23658d33609fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/775ba35df7e1460d3b2058699a888940ead2cbed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775ba35df7e1460d3b2058699a888940ead2cbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775ba35df7e1460d3b2058699a888940ead2cbed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775ba35df7e1460d3b2058699a888940ead2cbed/comments", "author": null, "committer": null, "parents": [{"sha": "8dc0b179fdba835b29eb3285062e31cd991d6197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc0b179fdba835b29eb3285062e31cd991d6197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc0b179fdba835b29eb3285062e31cd991d6197"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "3b1f1653a58c708922e27d739d5afb6c9137f6be", "filename": "gcc/real.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775ba35df7e1460d3b2058699a888940ead2cbed/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775ba35df7e1460d3b2058699a888940ead2cbed/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=775ba35df7e1460d3b2058699a888940ead2cbed", "patch": "@@ -57,7 +57,7 @@ _Methods and Programs for Mathematical Functions_, Prentice-Hall\n or Simon & Schuster Int'l, 1989.  A library of XFmode elementary\n transcendental functions can be obtained by ftp from\n research.att.com: netlib/cephes/ldouble.shar.Z  */\n-\n+\f\n /* Type of computer arithmetic.\n  * Only one of DEC, IBM, MIEEE, IBMPC, or UNK should get defined.\n  */\n@@ -166,7 +166,7 @@ unknown arithmetic type\n #define INFINITY\n #endif\n #endif\n-\n+\f\n /* Find a host integer type that is at least 16 bits wide,\n    and another type at least twice whatever that size is. */\n \n@@ -325,7 +325,7 @@ void mtherr (), make_nan ();\n void enan ();\n extern unsigned EMUSHORT ezero[], ehalf[], eone[], etwo[];\n extern unsigned EMUSHORT elog2[], esqrt2[];\n-\n+\f\n /* Pack output array with 32-bit numbers obtained from\n    array containing 16-bit numbers, swapping ends if required. */\n void \n@@ -883,6 +883,20 @@ real_value_truncate (mode, arg)\n \n #endif /* REAL_ARITHMETIC defined */\n \n+/* Used for debugging--print the value of R in human-readable format\n+   on stderr.  */\n+\n+void\n+debug_real (r)\n+     REAL_VALUE_TYPE r;\n+{\n+  char dstr[30];\n+\n+  REAL_VALUE_TO_DECIMAL (r, \"%.20g\", dstr);\n+  fprintf (stderr, \"%s\", dstr);\n+}  \n+\n+\f\n /* Target values are arrays of host longs. A long is guaranteed\n    to be at least 32 bits wide. */\n \n@@ -970,7 +984,7 @@ ereal_isneg (x)\n }\n \n /* End of REAL_ARITHMETIC interface */\n-\n+\f\n /*\t\t\t\t\t\t\tieee.c\n  *\n  *    Extended precision IEEE binary floating point arithmetic routines"}]}