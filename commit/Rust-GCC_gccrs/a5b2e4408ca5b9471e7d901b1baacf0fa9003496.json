{"sha": "a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViMmU0NDA4Y2E1Yjk0NzFlN2Q5MDFiMWJhYWNmMGZhOTAwMzQ5Ng==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-01-11T08:52:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:52:12Z"}, "message": "[Ada] Update description of restriction SPARK_05 with SPARK 2014\n\n2018-01-11  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_rm/standard_and_implementation_defined_restrictions.rst:\n\tUpdate description of restriction SPARK_05 with SPARK 2014.\n\t* gnat_rm.texi: Regenerate.\n\nFrom-SVN: r256498", "tree": {"sha": "93384fd1e900c56edcdecaeb50c6fcfaab16ecc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93384fd1e900c56edcdecaeb50c6fcfaab16ecc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "151af7d208dbfd34df6d8e28aab78175f49bcce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151af7d208dbfd34df6d8e28aab78175f49bcce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/151af7d208dbfd34df6d8e28aab78175f49bcce9"}], "stats": {"total": 86, "additions": 58, "deletions": 28}, "files": [{"sha": "fc7573112c7f56f8abe3c31ba7226eeceae49b8c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* doc/gnat_rm/standard_and_implementation_defined_restrictions.rst:\n+\tUpdate description of restriction SPARK_05 with SPARK 2014.\n+\t* gnat_rm.texi: Regenerate.\n+\n 2018-01-11  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst: Fix layout."}, {"sha": "0b9f6dc30a6588c1c2680f1ba581326786593f52", "filename": "gcc/ada/doc/gnat_rm/standard_and_implementation_defined_restrictions.rst", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst?ref=a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "patch": "@@ -999,37 +999,46 @@ SPARK_05\n --------\n .. index:: SPARK_05\n \n-[GNAT] This restriction checks at compile time that some constructs\n-forbidden in SPARK 2005 are not present. Error messages related to\n-SPARK restriction have the form:\n+[GNAT] This restriction checks at compile time that some constructs forbidden\n+in SPARK 2005 are not present. Note that SPARK 2005 has been superseded by\n+SPARK 2014, whose restrictions are checked by the tool GNATprove. To check that\n+a codebase respects SPARK 2014 restrictions, mark the code with pragma or\n+aspect ``SPARK_Mode``, and run the tool GNATprove at Stone assurance level, as\n+follows::\n \n+  gnatprove -P project.gpr --mode=stone\n+\n+or equivalently::\n+\n+  gnatprove -P project.gpr --mode=check_all\n+\n+With restriction ``SPARK_05``, error messages related to SPARK 2005 restriction\n+have the form:\n \n ::\n \n   violation of restriction \"SPARK_05\" at <source-location>\n    <error message>\n \n-\n .. index:: SPARK\n \n-The restriction ``SPARK`` is recognized as a\n-synonym for ``SPARK_05``. This is retained for historical\n-compatibility purposes (and an unconditional warning will be generated\n-for its use, advising replacement by ``SPARK``).\n+The restriction ``SPARK`` is recognized as a synonym for ``SPARK_05``. This is\n+retained for historical compatibility purposes (and an unconditional warning\n+will be generated for its use, advising replacement by ``SPARK_05``).\n \n This is not a replacement for the semantic checks performed by the\n SPARK Examiner tool, as the compiler currently only deals with code,\n not SPARK 2005 annotations, and does not guarantee catching all\n cases of constructs forbidden by SPARK 2005.\n \n Thus it may well be the case that code which passes the compiler with\n-the SPARK restriction is rejected by the SPARK Examiner, e.g. due to\n+the SPARK 2005 restriction is rejected by the SPARK Examiner, e.g. due to\n the different visibility rules of the Examiner based on SPARK 2005\n ``inherit`` annotations.\n \n This restriction can be useful in providing an initial filter for code\n developed using SPARK 2005, or in examining legacy code to see how far\n-it is from meeting SPARK restrictions.\n+it is from meeting SPARK 2005 restrictions.\n \n The list below summarizes the checks that are performed when this\n restriction is in force:\n@@ -1084,7 +1093,7 @@ restriction is in force:\n * Subprogram declaration only allowed in package spec (unless followed by import)\n * Access types not allowed\n * Incomplete type declaration not allowed\n-* Object and subtype declarations must respect SPARK restrictions\n+* Object and subtype declarations must respect SPARK 2005 restrictions\n * Digits or delta constraint not allowed\n * Decimal fixed point type not allowed\n * Aliasing of objects not allowed\n@@ -1093,7 +1102,7 @@ restriction is in force:\n * Unary operators not allowed on modular types (except not)\n * Untagged record cannot be null\n * No class-wide operations\n-* Initialization expressions must respect SPARK restrictions\n+* Initialization expressions must respect SPARK 2005 restrictions\n * Nonstatic ranges not allowed except in iteration schemes\n * String subtypes must have lower bound of 1\n * Subtype of Boolean cannot have constraint\n@@ -1117,7 +1126,7 @@ strict that the latest SPARK 2005 language definition:\n This list summarises the main SPARK 2005 language rules that are not\n currently checked by the SPARK_05 restriction:\n \n-* SPARK annotations are treated as comments so are not checked at all\n+* SPARK 2005 annotations are treated as comments so are not checked at all\n * Based real literals not allowed\n * Objects cannot be initialized at declaration by calls to user-defined functions\n * Objects cannot be initialized at declaration by assignments from variables\n@@ -1142,6 +1151,6 @@ currently checked by the SPARK_05 restriction:\n * Pragma import must be immediately after entity it names\n * No mutual recursion between multiple units (this can be checked with gnatcheck)\n \n-Note that if a unit is compiled in Ada 95 mode with the SPARK restriction,\n+Note that if a unit is compiled in Ada 95 mode with the SPARK 2005 restriction,\n violations will be reported for constructs forbidden in SPARK 95,\n instead of SPARK 2005."}, {"sha": "50eac85c045290ba434ebc175ef957528c62b591", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2e4408ca5b9471e7d901b1baacf0fa9003496/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=a5b2e4408ca5b9471e7d901b1baacf0fa9003496", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Dec 15, 2017\n+GNAT Reference Manual , Jan 10, 2018\n \n AdaCore\n \n@@ -13152,9 +13152,25 @@ associated with dispatch tables can be placed in read-only memory.\n \n @geindex SPARK_05\n \n-[GNAT] This restriction checks at compile time that some constructs\n-forbidden in SPARK 2005 are not present. Error messages related to\n-SPARK restriction have the form:\n+[GNAT] This restriction checks at compile time that some constructs forbidden\n+in SPARK 2005 are not present. Note that SPARK 2005 has been superseded by\n+SPARK 2014, whose restrictions are checked by the tool GNATprove. To check that\n+a codebase respects SPARK 2014 restrictions, mark the code with pragma or\n+aspect @code{SPARK_Mode}, and run the tool GNATprove at Stone assurance level, as\n+follows:\n+\n+@example\n+gnatprove -P project.gpr --mode=stone\n+@end example\n+\n+or equivalently:\n+\n+@example\n+gnatprove -P project.gpr --mode=check_all\n+@end example\n+\n+With restriction @code{SPARK_05}, error messages related to SPARK 2005 restriction\n+have the form:\n \n @example\n violation of restriction \"SPARK_05\" at <source-location>\n@@ -13163,24 +13179,23 @@ violation of restriction \"SPARK_05\" at <source-location>\n \n @geindex SPARK\n \n-The restriction @code{SPARK} is recognized as a\n-synonym for @code{SPARK_05}. This is retained for historical\n-compatibility purposes (and an unconditional warning will be generated\n-for its use, advising replacement by @code{SPARK}).\n+The restriction @code{SPARK} is recognized as a synonym for @code{SPARK_05}. This is\n+retained for historical compatibility purposes (and an unconditional warning\n+will be generated for its use, advising replacement by @code{SPARK_05}).\n \n This is not a replacement for the semantic checks performed by the\n SPARK Examiner tool, as the compiler currently only deals with code,\n not SPARK 2005 annotations, and does not guarantee catching all\n cases of constructs forbidden by SPARK 2005.\n \n Thus it may well be the case that code which passes the compiler with\n-the SPARK restriction is rejected by the SPARK Examiner, e.g. due to\n+the SPARK 2005 restriction is rejected by the SPARK Examiner, e.g. due to\n the different visibility rules of the Examiner based on SPARK 2005\n @code{inherit} annotations.\n \n This restriction can be useful in providing an initial filter for code\n developed using SPARK 2005, or in examining legacy code to see how far\n-it is from meeting SPARK restrictions.\n+it is from meeting SPARK 2005 restrictions.\n \n The list below summarizes the checks that are performed when this\n restriction is in force:\n@@ -13339,7 +13354,7 @@ Access types not allowed\n Incomplete type declaration not allowed\n \n @item \n-Object and subtype declarations must respect SPARK restrictions\n+Object and subtype declarations must respect SPARK 2005 restrictions\n \n @item \n Digits or delta constraint not allowed\n@@ -13366,7 +13381,7 @@ Untagged record cannot be null\n No class-wide operations\n \n @item \n-Initialization expressions must respect SPARK restrictions\n+Initialization expressions must respect SPARK 2005 restrictions\n \n @item \n Nonstatic ranges not allowed except in iteration schemes\n@@ -13428,7 +13443,7 @@ currently checked by the SPARK_05 restriction:\n @itemize *\n \n @item \n-SPARK annotations are treated as comments so are not checked at all\n+SPARK 2005 annotations are treated as comments so are not checked at all\n \n @item \n Based real literals not allowed\n@@ -13500,7 +13515,7 @@ Pragma import must be immediately after entity it names\n No mutual recursion between multiple units (this can be checked with gnatcheck)\n @end itemize\n \n-Note that if a unit is compiled in Ada 95 mode with the SPARK restriction,\n+Note that if a unit is compiled in Ada 95 mode with the SPARK 2005 restriction,\n violations will be reported for constructs forbidden in SPARK 95,\n instead of SPARK 2005.\n "}]}