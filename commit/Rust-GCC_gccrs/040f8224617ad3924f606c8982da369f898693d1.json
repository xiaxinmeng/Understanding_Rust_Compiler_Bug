{"sha": "040f8224617ad3924f606c8982da369f898693d1", "node_id": "C_kwDOANBUbNoAKDA0MGY4MjI0NjE3YWQzOTI0ZjYwNmM4OTgyZGEzNjlmODk4NjkzZDE", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-06-17T13:25:51Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-06-17T13:27:01Z"}, "message": "arm: fix checking ICE in arm_print_operand [PR106004]\n\nSigh, another instance where I incorrectly used XUINT instead of\nUINTVAL.\n\nI've also made the code here a little more robust (although I think\nthis case can't in fact be reached) if the 32-bit clear mask includes\nbit 31.  This case, if reached, would print out an out-of-range value\nbased on the size of the compiler's HOST_WIDE_INT type due to\nsign-extension.  We avoid this by masking the value after inversion.\n\ngcc/ChangeLog:\n\tPR target/106004\n\t* config/arm/arm.cc (arm_print_operand, case 'V'): Use UINTVAL.\n\tClear bits in the mask above bit 31.", "tree": {"sha": "e878e63450d684959f71d8f71aecdd79ae76351b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e878e63450d684959f71d8f71aecdd79ae76351b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040f8224617ad3924f606c8982da369f898693d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040f8224617ad3924f606c8982da369f898693d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040f8224617ad3924f606c8982da369f898693d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040f8224617ad3924f606c8982da369f898693d1/comments", "author": null, "committer": null, "parents": [{"sha": "0f96ac43fa0a5fdbfce317b274233852d5b46d23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f96ac43fa0a5fdbfce317b274233852d5b46d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f96ac43fa0a5fdbfce317b274233852d5b46d23"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "33fb98d5cad600c885de0a79c900856845d42260", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040f8224617ad3924f606c8982da369f898693d1/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040f8224617ad3924f606c8982da369f898693d1/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=040f8224617ad3924f606c8982da369f898693d1", "patch": "@@ -24199,7 +24199,8 @@ arm_print_operand (FILE *stream, rtx x, int code)\n \t    return;\n \t  }\n \n-\tunsigned HOST_WIDE_INT val = ~XUINT (x, 0);\n+\tunsigned HOST_WIDE_INT val\n+\t  = ~UINTVAL (x) & HOST_WIDE_INT_UC (0xffffffff);\n \tint lsb = exact_log2 (val & -val);\n \tasm_fprintf (stream, \"#%d, #%d\", lsb,\n \t\t     (exact_log2 (val + (val & -val)) - lsb));"}]}