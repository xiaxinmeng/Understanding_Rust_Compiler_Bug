{"sha": "22918034f8e5ff75c20da27f988301b23a531975", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5MTgwMzRmOGU1ZmY3NWMyMGRhMjdmOTg4MzAxYjIzYTUzMTk3NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-01-13T14:30:08Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-01-13T14:30:08Z"}, "message": "re PR tree-optimization/24365 (statement makes a memory store with complex)\n\n2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/24365\n        * tree-inline.c (declare_return_variable): If the return variable\n        was marked as a non gimple complex, set the return slot variable\n        to be a non gimple comple variable.\n\n2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/24365\n        * g++.dg/opt/complex5.C: New test.\n\nFrom-SVN: r109667", "tree": {"sha": "f95b531d44ac7c3090bea861e22dc740f822e104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f95b531d44ac7c3090bea861e22dc740f822e104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22918034f8e5ff75c20da27f988301b23a531975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22918034f8e5ff75c20da27f988301b23a531975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22918034f8e5ff75c20da27f988301b23a531975", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22918034f8e5ff75c20da27f988301b23a531975/comments", "author": null, "committer": null, "parents": [{"sha": "690c6eacb13e30f624963ce2abbbbeae0f25dcb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690c6eacb13e30f624963ce2abbbbeae0f25dcb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690c6eacb13e30f624963ce2abbbbeae0f25dcb3"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "42e8a7a5ab2a6c835b69f54f79f50fc9d3de54fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22918034f8e5ff75c20da27f988301b23a531975/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22918034f8e5ff75c20da27f988301b23a531975/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22918034f8e5ff75c20da27f988301b23a531975", "patch": "@@ -1,3 +1,10 @@\n+2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/24365\n+\t* tree-inline.c (declare_return_variable): If the return variable\n+\twas marked as a non gimple complex, set the return slot variable\n+\tto be a non gimple comple variable.\n+\n 2006-01-13  Richard Guenther  <rguenther@suse.de>\n \n \t* builtins.c (expand_builtin_sincos): New function."}, {"sha": "593db14ca5477f1d440e969256266805c4c6d18e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22918034f8e5ff75c20da27f988301b23a531975", "patch": "@@ -1,3 +1,8 @@\n+2006-01-13  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/24365\n+\t* g++.dg/opt/complex5.C: New test.\n+\n 2006-01-13  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.target/i386/387-9.c: New testcase."}, {"sha": "0da0738b327eb318d2febe7eda759d8046fe960e", "filename": "gcc/testsuite/g++.dg/opt/complex5.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex5.C?ref=22918034f8e5ff75c20da27f988301b23a531975", "patch": "@@ -0,0 +1,16 @@\n+// PR 24365\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+typedef __complex__ double cdouble;\n+inline cdouble to_complex(double r) {\n+  cdouble z;\n+  __real__ z = r;\n+  return z;\n+}\n+cdouble elt_zero() {\n+  cdouble a = to_complex(0.0);\n+  a+=1.0;\n+  return a;\n+}\n+"}, {"sha": "fd3f159f0b1de3df5f0b1dcaaf16e2bd8e3816a3", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22918034f8e5ff75c20da27f988301b23a531975/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=22918034f8e5ff75c20da27f988301b23a531975", "patch": "@@ -1233,6 +1233,10 @@ declare_return_variable (inline_data *id, tree return_slot_addr,\n \tvar = return_slot_addr;\n       else\n \tvar = build_fold_indirect_ref (return_slot_addr);\n+      if (TREE_CODE (TREE_TYPE (result)) == COMPLEX_TYPE\n+\t  && !DECL_COMPLEX_GIMPLE_REG_P (result)\n+\t  && DECL_P (var))\n+\tDECL_COMPLEX_GIMPLE_REG_P (var) = 0;\n       use = NULL;\n       goto done;\n     }"}]}