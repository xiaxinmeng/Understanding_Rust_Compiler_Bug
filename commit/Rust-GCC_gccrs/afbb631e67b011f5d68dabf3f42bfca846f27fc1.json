{"sha": "afbb631e67b011f5d68dabf3f42bfca846f27fc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZiYjYzMWU2N2IwMTFmNWQ2OGRhYmYzZjQyYmZjYTg0NmYyN2ZjMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-10-30T19:51:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-10-30T19:51:23Z"}, "message": "semantics.c (finish_compound_literal): Don't create a static variable inside cp_unevaluated_operand.\n\n\t* semantics.c (finish_compound_literal): Don't create a static variable\n\tinside cp_unevaluated_operand.\n\nFrom-SVN: r204228", "tree": {"sha": "966c81e45bdd23a66bd29a87d334ad73ae3ed845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966c81e45bdd23a66bd29a87d334ad73ae3ed845"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afbb631e67b011f5d68dabf3f42bfca846f27fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbb631e67b011f5d68dabf3f42bfca846f27fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afbb631e67b011f5d68dabf3f42bfca846f27fc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbb631e67b011f5d68dabf3f42bfca846f27fc1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc7f44e4c4be38a8c7832fff204cd0f4a61aad6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc7f44e4c4be38a8c7832fff204cd0f4a61aad6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc7f44e4c4be38a8c7832fff204cd0f4a61aad6b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "ba55d805f9ea9be46c240418b4758b0e6f4817f8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbb631e67b011f5d68dabf3f42bfca846f27fc1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbb631e67b011f5d68dabf3f42bfca846f27fc1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=afbb631e67b011f5d68dabf3f42bfca846f27fc1", "patch": "@@ -1,5 +1,8 @@\n 2013-10-30  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (finish_compound_literal): Don't create a static variable\n+\tinside cp_unevaluated_operand.\n+\n \t* init.c (push_base_cleanups): Check ANON_AGGR_TYPE_P.\n \n 2013-10-30  Tobias Burnus  <burnus@net-b.de>"}, {"sha": "bbdf81ad961e600430b33d292cfc901bb00a1729", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbb631e67b011f5d68dabf3f42bfca846f27fc1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbb631e67b011f5d68dabf3f42bfca846f27fc1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=afbb631e67b011f5d68dabf3f42bfca846f27fc1", "patch": "@@ -2516,6 +2516,7 @@ finish_compound_literal (tree type, tree compound_literal,\n   if ((!at_function_scope_p () || CP_TYPE_CONST_P (type))\n       && TREE_CODE (type) == ARRAY_TYPE\n       && !TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type)\n+      && !cp_unevaluated_operand\n       && initializer_constant_valid_p (compound_literal, type))\n     {\n       tree decl = create_temporary_var (type);"}]}