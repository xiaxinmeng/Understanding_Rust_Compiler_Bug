{"sha": "a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA3YzllMmI0NTlhMTlkNjE4ZWU0OWUwYTcyZDdiNjgyYjFmZmJjNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-26T21:24:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-26T21:24:58Z"}, "message": "char *version_string = \"egcs-2.91.33 19980526 (gcc2 ss-980502 experimental)\";\n\nFrom-SVN: r20068", "tree": {"sha": "045975f692546a387945c41503575175b08527f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/045975f692546a387945c41503575175b08527f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7/comments", "author": null, "committer": null, "parents": [{"sha": "a8f3f283e03813795fb8467e488c93045c8fcbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f3f283e03813795fb8467e488c93045c8fcbca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f3f283e03813795fb8467e488c93045c8fcbca"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "14c2398db774fe19600a13580dc1e89fc9baf4c5", "filename": "gcc/reload1.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=a07c9e2b459a19d618ee49e0a72d7b682b1ffbc7", "patch": "@@ -4726,15 +4726,19 @@ reload_reg_free_before_p (regno, opnum, type)\n       return ! TEST_HARD_REG_BIT (reload_reg_used_in_other_addr, regno);\n \n     case RELOAD_FOR_INPUT:\n-      /* The only things earlier are the address for this and\n-\t earlier inputs, other inputs (which we know we don't conflict\n-\t with), and addresses of RELOAD_OTHER objects.  */\n+      /* The only things earlier are the address for this and earlier inputs,\n+\t earlier inputs, and addresses of RELOAD_OTHER objects.  */\n \n-      for (i = 0; i <= opnum; i++)\n+      for (i = 0; i < opnum; i++)\n \tif (TEST_HARD_REG_BIT (reload_reg_used_in_input_addr[i], regno)\n-\t    || TEST_HARD_REG_BIT (reload_reg_used_in_inpaddr_addr[i], regno))\n+\t    || TEST_HARD_REG_BIT (reload_reg_used_in_inpaddr_addr[i], regno)\n+\t    || TEST_HARD_REG_BIT (reload_reg_used_in_input[i], regno))\n \t  return 0;\n \n+      if (TEST_HARD_REG_BIT (reload_reg_used_in_input_addr[opnum], regno)\n+\t  || TEST_HARD_REG_BIT (reload_reg_used_in_inpaddr_addr[opnum], regno))\n+\treturn 0;\n+\n       return ! TEST_HARD_REG_BIT (reload_reg_used_in_other_addr, regno);\n \n     case RELOAD_FOR_INPUT_ADDRESS:"}]}