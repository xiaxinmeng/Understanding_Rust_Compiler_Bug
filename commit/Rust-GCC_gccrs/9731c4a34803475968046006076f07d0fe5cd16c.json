{"sha": "9731c4a34803475968046006076f07d0fe5cd16c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTczMWM0YTM0ODAzNDc1OTY4MDQ2MDA2MDc2ZjA3ZDBmZTVjZDE2Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-09-06T14:53:26Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-09-06T14:53:26Z"}, "message": "libgfortran.h (likely,unlikely): New makros.\n\n2008-09-06  Tobias Burnus  <burnus@net-b.de>\n\n\t* libgfortran.h (likely,unlikely): New makros.\n\t(runtime_warning_at,__mingw_snprintf): Add __attribute__(format()).\n\t* m4/spread.m4 (spread_'rtype_code`): Use unlikely for bounds_check.\n\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code): Ditto.\n\t* m4/matmull.m4 (matmul_'rtype_code`): Ditto.\n\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Ditto.\n\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Ditto.\n\t* m4/matmul.m4 (matmul_'rtype_code`): Ditto.\n\n\t* generated/minval_r8.c: Regenerated.\n\t* generated/spread_r10.c: Regenerated.\n\t* generated/minloc1_16_r16.c: Regenerated.\n\t* generated/maxloc1_4_r8.c: Regenerated.\n\t* generated/sum_i8.c: Regenerated.\n\t* generated/any_l16.c: Regenerated.\n\t* generated/spread_i8.c: Regenerated.\n\t* generated/maxval_i2.c: Regenerated.\n\t* generated/any_l2.c: Regenerated.\n\t* generated/product_r4.c: Regenerated.\n\t* generated/maxloc1_8_i4.c: Regenerated.\n\t* generated/maxloc0_4_r4.c: Regenerated.\n\t* generated/all_l1.c: Regenerated.\n\t* generated/matmul_r8.c: Regenerated.\n\t* generated/product_i2.c: Regenerated.\n\t* generated/minloc0_4_r16.c: Regenerated.\n\t* generated/minloc0_4_i1.c: Regenerated.\n\t* generated/maxloc0_4_r16.c: Regenerated.\n\t* generated/maxloc0_4_i2.c: Regenerated.\n\t* generated/minloc1_8_r16.c: Regenerated.\n\t* generated/maxloc1_8_r16.c: Regenerated.\n\t* generated/maxloc0_8_i8.c: Regenerated.\n\t* generated/sum_r16.c: Regenerated.\n\t* generated/sum_i1.c: Regenerated.\n\t* generated/minloc1_4_r8.c: Regenerated.\n\t* generated/maxloc1_16_r16.c: Regenerated.\n\t* generated/minloc1_16_i4.c: Regenerated.\n\t* generated/maxloc1_16_i4.c: Regenerated.\n\t* generated/minloc0_16_i8.c: Regenerated.\n\t* generated/spread_i1.c: Regenerated.\n\t* generated/maxloc0_16_i8.c: Regenerated.\n\t* generated/maxval_r16.c: Regenerated.\n\t* generated/product_c10.c: Regenerated.\n\t* generated/minloc1_8_i4.c: Regenerated.\n\t* generated/minloc0_16_i16.c: Regenerated.\n\t* generated/matmul_r16.c: Regenerated.\n\t* generated/minloc0_4_r4.c: Regenerated.\n\t* generated/all_l2.c: Regenerated.\n\t* generated/product_c4.c: Regenerated.\n\t* generated/sum_r4.c: Regenerated.\n\t* generated/minloc0_4_i2.c: Regenerated.\n\t* generated/spread_c10.c: Regenerated.\n\t* generated/maxloc0_8_i1.c: Regenerated.\n\t* generated/spread_r4.c: Regenerated.\n\t* generated/minloc0_8_i8.c: Regenerated.\n\t* generated/matmul_c8.c: Regenerated.\n\t* generated/all_l16.c: Regenerated.\n\t* generated/minloc1_16_r10.c: Regenerated.\n\t* generated/sum_i2.c: Regenerated.\n\t* generated/minloc0_16_i1.c: Regenerated.\n\t* generated/maxloc0_16_i1.c: Regenerated.\n\t* generated/maxloc1_8_r8.c: Regenerated.\n\t* generated/minval_i16.c: Regenerated.\n\t* generated/spread_i2.c: Regenerated.\n\t* generated/maxval_i4.c: Regenerated.\n\t* generated/minval_i8.c: Regenerated.\n\t* generated/any_l4.c: Regenerated.\n\t* generated/maxloc1_4_i8.c: Regenerated.\n\t* generated/maxloc0_16_i16.c: Regenerated.\n\t* generated/maxloc0_8_r4.c: Regenerated.\n\t* generated/minloc1_4_i16.c: Regenerated.\n\t* generated/maxloc1_4_i16.c: Regenerated.\n\t* generated/minloc0_4_r10.c: Regenerated.\n\t* generated/minloc0_8_i16.c: Regenerated.\n\t* generated/maxloc0_4_r10.c: Regenerated.\n\t* generated/maxloc0_8_i16.c: Regenerated.\n\t* generated/minloc1_8_r10.c: Regenerated.\n\t* generated/product_i4.c: Regenerated.\n\t* generated/minloc0_16_r4.c: Regenerated.\n\t* generated/sum_c16.c: Regenerated.\n\t* generated/maxloc1_8_r10.c: Regenerated.\n\t* generated/maxloc0_16_r4.c: Regenerated.\n\t* generated/minloc1_16_r8.c: Regenerated.\n\t* generated/minloc0_8_i1.c: Regenerated.\n\t* generated/maxloc0_4_i4.c: Regenerated.\n\t* generated/maxloc1_16_r8.c: Regenerated.\n\t* generated/maxloc0_8_i2.c: Regenerated.\n\t* generated/sum_r10.c: Regenerated.\n\t* generated/count_4_l.c: Regenerated.\n\t* generated/sum_c4.c: Regenerated.\n\t* generated/count_8_l.c: Regenerated.\n\t* generated/maxloc1_16_r10.c: Regenerated.\n\t* generated/matmul_i8.c: Regenerated.\n\t* generated/minloc0_16_i2.c: Regenerated.\n\t* generated/minloc1_8_r8.c: Regenerated.\n\t* generated/maxloc0_16_i2.c: Regenerated.\n\t* generated/spread_c4.c: Regenerated.\n\t* generated/matmul_c16.c: Regenerated.\n\t* generated/maxval_r10.c: Regenerated.\n\t* generated/minval_i1.c: Regenerated.\n\t* generated/maxloc1_4_i1.c: Regenerated.\n\t* generated/matmul_r10.c: Regenerated.\n\t* generated/minloc1_4_i8.c: Regenerated.\n\t* generated/minloc0_8_r4.c: Regenerated.\n\t* generated/matmul_l4.c: Regenerated.\n\t* generated/product_i16.c: Regenerated.\n\t* generated/minloc0_16_r16.c: Regenerated.\n\t* generated/all_l4.c: Regenerated.\n\t* generated/minloc0_4_i4.c: Regenerated.\n\t* generated/minloc0_8_i2.c: Regenerated.\n\t* generated/matmul_i1.c: Regenerated.\n\t* generated/minval_r4.c: Regenerated.\n\t* generated/maxloc1_4_r4.c: Regenerated.\n\t* generated/spread_i16.c: Regenerated.\n\t* generated/sum_i4.c: Regenerated.\n\t* generated/maxval_r8.c: Regenerated.\n\t* generated/spread_i4.c: Regenerated.\n\t* generated/minloc1_4_i1.c: Regenerated.\n\t* generated/minval_r16.c: Regenerated.\n\t* generated/minval_i2.c: Regenerated.\n\t* generated/maxloc1_4_i2.c: Regenerated.\n\t* generated/product_r8.c: Regenerated.\n\t* generated/maxloc1_8_i8.c: Regenerated.\n\t* generated/maxloc0_4_r8.c: Regenerated.\n\t* generated/maxloc0_16_r16.c: Regenerated.\n\t* generated/matmul_r4.c: Regenerated.\n\t* generated/sum_c10.c: Regenerated.\n\t* generated/minloc1_4_r16.c: Regenerated.\n\t* generated/maxloc1_4_r16.c: Regenerated.\n\t* generated/minloc0_8_r16.c: Regenerated.\n\t* generated/maxloc0_8_r16.c: Regenerated.\n\t* generated/count_1_l.c: Regenerated.\n\t* generated/maxloc0_8_i4.c: Regenerated.\n\t* generated/matmul_i2.c: Regenerated.\n\t* generated/minloc1_4_r4.c: Regenerated.\n\t* generated/matmul_c10.c: Regenerated.\n\t* generated/minloc0_16_i4.c: Regenerated.\n\t* generated/maxloc0_16_i4.c: Regenerated.\n\t* generated/minloc1_16_i8.c: Regenerated.\n\t* generated/maxloc1_16_i8.c: Regenerated.\n\t* generated/minloc1_4_i2.c: Regenerated.\n\t* generated/matmul_l16.c: Regenerated.\n\t* generated/maxloc1_8_i1.c: Regenerated.\n\t* generated/minloc0_16_r10.c: Regenerated.\n\t* generated/minloc1_8_i8.c: Regenerated.\n\t* generated/minloc0_4_r8.c: Regenerated.\n\t* generated/product_r16.c: Regenerated.\n\t* generated/product_c8.c: Regenerated.\n\t* generated/sum_r8.c: Regenerated.\n\t* generated/minloc0_8_i4.c: Regenerated.\n\t* generated/matmul_c4.c: Regenerated.\n\t* generated/minloc1_16_i16.c: Regenerated.\n\t* generated/spread_r8.c: Regenerated.\n\t* generated/maxloc1_8_r4.c: Regenerated.\n\t* generated/minloc1_16_i1.c: Regenerated.\n\t* generated/maxloc1_16_i1.c: Regenerated.\n\t* generated/spread_r16.c: Regenerated.\n\t* generated/minval_r10.c: Regenerated.\n\t* generated/count_16_l.c: Regenerated.\n\t* generated/minval_i4.c: Regenerated.\n\t* generated/minloc1_8_i1.c: Regenerated.\n\t* generated/maxloc1_4_i4.c: Regenerated.\n\t* generated/maxloc1_8_i2.c: Regenerated.\n\t* generated/maxval_i8.c: Regenerated.\n\t* generated/any_l8.c: Regenerated.\n\t* generated/maxloc0_16_r10.c: Regenerated.\n\t* generated/minloc0_4_i16.c: Regenerated.\n\t* generated/maxloc0_8_r8.c: Regenerated.\n\t* generated/maxloc0_4_i16.c: Regenerated.\n\t* generated/minloc1_4_r10.c: Regenerated.\n\t* generated/minloc1_8_i16.c: Regenerated.\n\t* generated/maxloc1_4_r10.c: Regenerated.\n\t* generated/maxloc1_8_i16.c: Regenerated.\n\t* generated/minloc0_8_r10.c: Regenerated.\n\t* generated/maxloc0_8_r10.c: Regenerated.\n\t* generated/minloc1_16_r4.c: Regenerated.\n\t* generated/maxloc1_16_r4.c: Regenerated.\n\t* generated/minloc0_16_r8.c: Regenerated.\n\t* generated/product_i8.c: Regenerated.\n\t* generated/maxloc0_16_r8.c: Regenerated.\n\t* generated/sum_i16.c: Regenerated.\n\t* generated/count_2_l.c: Regenerated.\n\t* generated/maxloc0_4_i8.c: Regenerated.\n\t* generated/maxloc1_16_i16.c: Regenerated.\n\t* generated/matmul_i4.c: Regenerated.\n\t* generated/minloc1_8_r4.c: Regenerated.\n\t* generated/sum_c8.c: Regenerated.\n\t* generated/minloc1_16_i2.c: Regenerated.\n\t* generated/maxloc1_16_i2.c: Regenerated.\n\t* generated/maxval_i16.c: Regenerated.\n\t* generated/spread_c8.c: Regenerated.\n\t* generated/matmul_i16.c: Regenerated.\n\t* generated/minloc1_4_i4.c: Regenerated.\n\t* generated/maxval_i1.c: Regenerated.\n\t* generated/minloc1_8_i2.c: Regenerated.\n\t* generated/any_l1.c: Regenerated.\n\t* generated/product_c16.c: Regenerated.\n\t* generated/minloc0_8_r8.c: Regenerated.\n\t* generated/matmul_l8.c: Regenerated.\n\t* generated/product_r10.c: Regenerated.\n\t* generated/product_i1.c: Regenerated.\n\t* generated/all_l8.c: Regenerated.\n\t* generated/maxloc0_4_i1.c: Regenerated.\n\t* generated/minloc0_4_i8.c: Regenerated.\n\t* generated/spread_c16.c: Regenerated.\n\t* generated/maxval_r4.c: Regenerated.\n\nFrom-SVN: r140060", "tree": {"sha": "ef8239f6691e3a5dea7a9ec83e125b8d037797f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8239f6691e3a5dea7a9ec83e125b8d037797f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9731c4a34803475968046006076f07d0fe5cd16c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9731c4a34803475968046006076f07d0fe5cd16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9731c4a34803475968046006076f07d0fe5cd16c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9731c4a34803475968046006076f07d0fe5cd16c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf9000971330edf49616839494cb049b07d2485d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9000971330edf49616839494cb049b07d2485d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9000971330edf49616839494cb049b07d2485d"}], "stats": {"total": 1239, "additions": 727, "deletions": 512}, "files": [{"sha": "30b91d10f908bebff6666889da9341aa5b1ad7aa", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 208, "deletions": 0, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -1,3 +1,211 @@\n+2008-09-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libgfortran.h (likely,unlikely): New makros.\n+\t(runtime_warning_at,__mingw_snprintf): Add __attribute__(format()).\n+\t* m4/spread.m4 (spread_'rtype_code`): Use unlikely for bounds_check.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/matmull.m4 (matmul_'rtype_code`): Ditto.\n+\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/matmul.m4 (matmul_'rtype_code`): Ditto.\n+\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\n 2008-09-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/37301"}, {"sha": "e74748142f4c3dc5ba6009aae2c6f284aa9f7602", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "05c24f0d4227abf3065e619819e80eb1dd726566", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "3e03bcb24e40f20025d2fc1ee155f085d2d8ef39", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "dab900061d05cdf0bc306b2e2d767ea88a73d778", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "18c900c157185c5593e54e43999773c89a6a6240", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "3b2be3ebbe616699a5bca07a72793d25a495ad6b", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "bbe9bc3c69a8ac28a0471fe015908ec708f01e4f", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "ad2a5d02226fa8cd667b695e12019b0f3049d787", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "cb9d339d10f4f66b78f6752f553816d3327a5946", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c7fe8f4fa5c1ee92ea421b9ac27743dd72b45981", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "b8946e727926f6516a516cfeea128332d670b4ff", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c803a0d26d6ec8da0e468515fa8ac3e29af60ce7", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "12a72f090d810c4e0b73cfa195978a48823f7f31", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "ddc42f8ae0048a8b684a388937f10fc3bc77cdc4", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "63c7aa4bcb2a2ba8d6bbcb9272580a78da01fbb2", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -127,7 +127,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "bc24557c3d112fc2aa9b5287636b60b5d7879bca", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_COMPLEX_10) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "bfe553eb005f4ff433ec24ca55ea55beef04e379", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_COMPLEX_16) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "dc67fc4897f74203da4b9c188811c7bf1ee38890", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_COMPLEX_4) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "8b05b4f8756cdb40eb3f426eb697604109763202", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_COMPLEX_8) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "71572d76d4aa2a9f938f97e6bcca333c40c280f2", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_INTEGER_1) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "f6e570d78bd671da8d7761f924a6e1e8a996a8ad", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_INTEGER_16) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "0ed9df01bd23454bc3e3d4990a141f0f2a9c1cde", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_INTEGER_2) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "ba5f24adaa139b4aa0b07544790ea0414d16e660", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_INTEGER_4) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "255094c357c06dc1063ccfaf127b92cd1e190c6c", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_INTEGER_8) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "02b6e142ad4bd5f8f1f675a47e88f1696e4b9af2", "filename": "libgfortran/generated/matmul_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -99,7 +99,7 @@ matmul_l16 (gfc_array_l16 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_LOGICAL_16) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "159b1f31f9e21b288bb73b40d5f472c630b085b0", "filename": "libgfortran/generated/matmul_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -99,7 +99,7 @@ matmul_l4 (gfc_array_l4 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_LOGICAL_4) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "16e7b36ec6b60965ee4acf0c5ffd310b36b959fb", "filename": "libgfortran/generated/matmul_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -99,7 +99,7 @@ matmul_l8 (gfc_array_l8 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_LOGICAL_8) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "d764450657872710ef8d53c7f66f912c24a8d924", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_REAL_10) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "1d0c31af998a35fb1f8b74415f8f4ee7b04f7a18", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_REAL_16) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "8224862963860e2284063789c0a3af6c082ed47b", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_REAL_4) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "4134fad3f6db1c0deddb214e284f13211cdf8827", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -135,7 +135,7 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n \t= internal_malloc_size (sizeof (GFC_REAL_8) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "2ff0b6d55ec76ba1eee01d64ef5b8b529325b8c5", "filename": "libgfortran/generated/maxloc0_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "b3c5cc294148298672ae432ef087b6c8a2541883", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "f403471d229e6a825c8338ccef56dca17d368386", "filename": "libgfortran/generated/maxloc0_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "c6bcc276712e1b04c98fab33262f566ac9c5a633", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "237b9fefd83ec748aa43cd41e1f95687c8c73b57", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "479191c0792e6d9a8f990471dc891a8321e73833", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "02e4bf28109f43f9138e7bcab0614e4ea36aa118", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "710edce3aa9e9e2e0b0ef663eb448165f29b59a3", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "d91c8d21839f54e449521a87aa4b9e036df2bf52", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "8a6275919a3dd47cafb1ba37ef06dc0c3288c416", "filename": "libgfortran/generated/maxloc0_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "2e3a1ea786f555d0dfc28547c0944a3aa82f024f", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "34317c9752547d7f72c8f907b69c4519225ce903", "filename": "libgfortran/generated/maxloc0_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "e65737da2151b8ffbcb1f989fe8430cf29b82214", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "695ef0f93c52ece78268867968a27bf60ca47deb", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "c0fea80e69c80042753537d078e71a453b4cbe0d", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "e872949c8f01d0f1bd019b8627bc4c8018220985", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "0267f970643a7032c2a4b94cc9d9779b7c5a9cb3", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "43131b30a64a3dfa65f96e492fefc11e72117de6", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "f20eda20ac883e46b203204110b43b521785329e", "filename": "libgfortran/generated/maxloc0_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "27cfe2e3c9e88308dbebe28a9091dbd038c7cc44", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "75bfe6d898a3ff469d011723541483788ea05087", "filename": "libgfortran/generated/maxloc0_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "e04f0cb49e90646593e926152b53218d52152dd9", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "8218951d3a1758af0e8c5f24af0737708053ad77", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "7e77fadad5f63c51ee33601bababea82a470dc8c", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "9f12cca6d100136b46ceecdc84a933a61bebc247", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "b7c3eb583d39d1fe343640f59447fa5d18c44c56", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "e59f813b86012a57e27355617fa0b362894cf0e5", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ smaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "fff25ed61009834d455c112bb53650052649fc17", "filename": "libgfortran/generated/maxloc1_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "9c8b5f929402cc9738f99e528213285e30fb79e0", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e341d9b9122926cdf4b93e98a1e7970e808986ac", "filename": "libgfortran/generated/maxloc1_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "af1802eb03a90428df87029ec64ed2d6af4a1af8", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c449fc4fd20be1b8e7dc8a813e9cbe18b4223c76", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "729b2534dec522a774377af7c54f729a16b70d0b", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "88c7e39ce1a245c830cfaa34bf06537e9b2ee750", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c2fdd89d58bb5b0470f7e48224f48e5b0938a1ad", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e4c8efeb59e3bbe19cd01bc8c91254214fba3136", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "d34c22d49763b56ee7b1a0ef4e4c6c64cf0f3b35", "filename": "libgfortran/generated/maxloc1_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "ec83fed83be8bfac60ac6a63b899ee9a3e546ad1", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "bd3f158e685f72014894e31e75d37bf35786dfec", "filename": "libgfortran/generated/maxloc1_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "bacdbb41d9b323801bea3b7e4930d6d4c34a9b14", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "a4304e414ee113f68d8752bc3f955ae23f7a9e72", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "693b8b519257360841819b1d2ecb7685297a0506", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "cfae0223e60a9197fb06dcfb2d941a92f5e30a7b", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "31eaf8e24dddd35d506e6dbb64c6d97355841e18", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "f75a98ec7c70a2a5b8a7790d5e03e5982ade0182", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "781432318a8d2ccbea831249de2da7fc0acc0a11", "filename": "libgfortran/generated/maxloc1_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "bff447fb65a782d0726c8b9c769b6cef036c00d5", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "eb9b59a28ab2f9e4888784028a53c770f6af0823", "filename": "libgfortran/generated/maxloc1_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "469a480629c4ed89f8dd56233f2a77909dec2545", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c5b08e395af07b5a48667df6a830a9578353470d", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "61a6eccf46ea5ccb84b4b6e6f1738dc8a5cbc8ad", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "f397661c6344e79c982f2b89d768136b4b489905", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c192e3b3890d8992c99d3727dd774518300e9bc2", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "ef5d86f3fe28a500b1f21ecf7bb78811305fb3af", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ smaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "961c32a8f26024d47f45ccea9f73970cd3d606fa", "filename": "libgfortran/generated/maxval_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_i1 (gfc_array_i1 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "03cd671f51f3c2a81226c0078240a222f352a959", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "8b87f6bce80990b610a107eab14b27755b94fe51", "filename": "libgfortran/generated/maxval_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_i2 (gfc_array_i2 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "b35fa7b57bbf75d9b40d3c3ab004ca5bd51d48ae", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "2c407b49f7e4c2769466772dd63637ddd8b2777b", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "03aa6234c7b1361f4a936678c9d200f0eb92294b", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_r10 (gfc_array_r10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "98bce6e2e4d63ab5284d7a152c4005ff139bccbe", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_r16 (gfc_array_r16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c57d55875706cf2fbb2f637a55e234ffff67f6e5", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_r4 (gfc_array_r4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "2afe75462300ef3a9a93bbf6996baa085fe4a533", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mmaxval_r8 (gfc_array_r8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MAXVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ smaxval_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "401b0a167086ef8a1f840c20eed159025850d7c5", "filename": "libgfortran/generated/minloc0_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "bd96534227ec826863aed079f324568cfdf75412", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "329d8b1886d712b2eb5fb9bb6972c3e70e04ca4d", "filename": "libgfortran/generated/minloc0_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "4afea1e667756a3fe473ee7bf3f881a8aeb3bd72", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "9492ecd77a4359315f187f6331e16946cef9c97f", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "002fb8a4c8c50eca7c738e49c7f3451e290d28b7", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "d950e203d30b05e051ccc697914bc259b374a25e", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "7fbb2c0ef2cee3ae54a31ee9101eaf6c5b58f3d4", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "83485251e5374e54b9f1c4d2fa73b941ba33b647", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "50dc87d533d92d3711a39232e89ba870c81f5ca4", "filename": "libgfortran/generated/minloc0_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "ab7fd86a2b1eb0f4282007e18fd8264c9dbf0411", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "cd9ec26ab243288e8ed2b74054e42dfcb61b1a24", "filename": "libgfortran/generated/minloc0_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "932110843a8975ebeb4f0126d5adfe03f5e9265d", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "8a2256b96344af8fcf9b7a6b89a81c41b65f8527", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "792a9e1db168b7a95105799223641f67ccd872b9", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "01424dc748a59477a28e5ef0bea1eda269a2c22e", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "88b4917f2e8befbbf155d4e23bec849f7ef00c7c", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "5d353145cd0f6e884ac253f61fcbc11ae148021a", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "a70533e2ceec62112577cb72c84d7e314f090e38", "filename": "libgfortran/generated/minloc0_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "364d75d4b383f268a1a3814049f0c0badb4a46c1", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "7b5d8ab01e8b739b3dcce5a9679a2697397763e8", "filename": "libgfortran/generated/minloc0_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "9f40ec47b64a95317103ac0e44db83e984f53804", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "36306fbe8ae7ccb2833b9c018e7faaeb99866732", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "b085afddeac89d101ef4d4387b8938dfc3d24a9b", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "7a78fc5246f0e901e7655ee10fe99a630f1f3cd0", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "53eb53e58c88f3804e1e2a051b63b4ecf4200d97", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "f583f8b9478bcc9227956b02218185a95e25fd74", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -69,7 +69,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -193,7 +193,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -353,7 +353,7 @@ sminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "165646ffa6ea17c31b97234dc6980f4894fd4f75", "filename": "libgfortran/generated/minloc1_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "b6e1cb528b5ec3d1d5b7c750db26f89620e698b3", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "8b1389279032bfe327447c278f41afee6b0f84ca", "filename": "libgfortran/generated/minloc1_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e97b0dc13bae08b452920731d7ccfe5c590c73cb", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "3760b206e581c66b4b4f84dd2a6e999ef743433c", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "abc568978de42097a9e53c05a0dca9123f2628c3", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "3e2e8fa74a57270cc36a136abd415fe608371a1d", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "542932f5c34bd521fc9a49a3a78330b18c4d72fe", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "5d96aea4218657dbaec62a103c95f8cff8414d8c", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "daddbbf954c7f39588484d9c5e49216326d1815c", "filename": "libgfortran/generated/minloc1_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "4861f188af664d67f71f4bb04864c5ae4c3bc731", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "09e15204dafa6aaf4f6ad0accf941d34486b0676", "filename": "libgfortran/generated/minloc1_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "d7c07297097f2be99a144003dd37777c60773a59", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "10ffa36b6a9b125bc5d9c108678d3b8bff5a4bf2", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "67d5b0380c070a15f04a61e9481cb40d2117d33b", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "0358183b76c63f6bd741d53e9c09f9fcc3008587", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "f029ecb99134c1c0c76a6defb87e5f0c62953dfe", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "8b5972855c5e2939659af4e173225aef53ceba8c", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e56b156ef1a0c41f72b2bf806f820f968dc4b8f0", "filename": "libgfortran/generated/minloc1_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "82e550e081dbbaccbe67e8cfcdf5d3a42b89c8dd", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "2812b2a204aca3309cdba23a3b64a59d443ad057", "filename": "libgfortran/generated/minloc1_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "6a8505ea598347fe50eaa1bb2b888dacc59fa8b0", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "efc7ef0e344363c51edc86ecb01e120c1e9591a1", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e3c727a3b69be0894a8460ea3ae9b9192d88091d", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "734a3a875eae874338a890b9e753c31dfe15604a", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "253dc86bc4faf4d00d94a32870fb80e24198364f", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "dc9288e441e775c7626bd7fc3aa0ca8124b2e6c3", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -124,7 +124,7 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -318,7 +318,7 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINLOC intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -508,7 +508,7 @@ sminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c0c9fffa555ccd2b73b780785954c067b80d7309", "filename": "libgfortran/generated/minval_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_i1 (gfc_array_i1 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "7abe358e125cb7d6c37bedc1be06f1af0e10231e", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c782c3640c53a3179c31f401be6441ba534a8ec4", "filename": "libgfortran/generated/minval_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_i2 (gfc_array_i2 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "13506a24576e7f9f89051699c9496a2718878178", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "dbad3ce0bc466e1b4c19132c6348b6709da1c145", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "6091a2e6c4b86169c2bceb54178e88d45992cede", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_r10 (gfc_array_r10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "87518bf59007bb6720294081ff90865f2f0f3a21", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_r16 (gfc_array_r16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "8511795b12cdfe02cdda0543468b366859d775a8", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_r4 (gfc_array_r4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "fcfbdc79f865e2de661fa612ace7f715855d34ef", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -312,7 +312,7 @@ mminval_r8 (gfc_array_r8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in MINVAL intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -497,7 +497,7 @@ sminval_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "7ff7270290c2d49fa1c17c1f0fa5f95624f65ad8", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_c10 (gfc_array_c10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_c10 (gfc_array_c10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "9f9d6c9a0de0b4acc3719e98e33b6fae21ac9269", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_c16 (gfc_array_c16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_c16 (gfc_array_c16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "8a1f7a56fadac99bd45ff40096dcf080f1e9f323", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_c4 (gfc_array_c4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_c4 (gfc_array_c4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "e8416b39875cd76c98d734ac0940879f71517cde", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_c8 (gfc_array_c8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_c8 (gfc_array_c8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "01f13f54976dc2196e6bff956724440e328518fe", "filename": "libgfortran/generated/product_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_i1 (gfc_array_i1 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "a2e2c6484f201aaa4a54d4d762ed2c3d3a9cae79", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "f18e5c78e4ec11bd7b8df0edd989ec9054f7dc71", "filename": "libgfortran/generated/product_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_i2 (gfc_array_i2 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "fb3caa2e4aac6bc585c0552a74eb2904cbc5657d", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "5a2c78b4bf65980932a27478d5ec3334390ddb63", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "0052fcaabf7461f1f425975afb0fcd77661339b1", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_r10 (gfc_array_r10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "f5b0886d80d0273e625d5c697cbdce0e6b1b67ba", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_r16 (gfc_array_r16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "9f9787b5c407c9513dc47479e37e477bcb3f7354", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_r4 (gfc_array_r4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "5eec583cefa1cc5be2635446a364f7b3af699283", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ mproduct_r8 (gfc_array_r8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in PRODUCT intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ sproduct_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "89734909b99ae80b8c72488935194b74850274cd", "filename": "libgfortran/generated/spread_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_c10 (gfc_array_c10 *ret, const gfc_array_c10 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "4a6110f52609ebc221ec562fb301e0e62f4ca925", "filename": "libgfortran/generated/spread_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_c16 (gfc_array_c16 *ret, const gfc_array_c16 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "45415e429e4a55706c8d3f41b4d89e23a593e670", "filename": "libgfortran/generated/spread_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_c4 (gfc_array_c4 *ret, const gfc_array_c4 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "abbf1869a0db5a0084c008087a666632934af66a", "filename": "libgfortran/generated/spread_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_c8 (gfc_array_c8 *ret, const gfc_array_c8 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "f9c864b38883bc8f3da698e26712b43ce48b460a", "filename": "libgfortran/generated/spread_i1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_i1 (gfc_array_i1 *ret, const gfc_array_i1 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "a2e87ad18ecb943f89bf62d2d5b74bfd54c117bb", "filename": "libgfortran/generated/spread_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_i16 (gfc_array_i16 *ret, const gfc_array_i16 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "83d42130376cd17913daee66e83e1185ce6625fe", "filename": "libgfortran/generated/spread_i2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_i2 (gfc_array_i2 *ret, const gfc_array_i2 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "1d3408b95dd8c92962213dfe4caa1b65da7f89a9", "filename": "libgfortran/generated/spread_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_i4 (gfc_array_i4 *ret, const gfc_array_i4 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "7f77c43f73910aded6c483a918755e653220ccb0", "filename": "libgfortran/generated/spread_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_i8 (gfc_array_i8 *ret, const gfc_array_i8 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "90b0d906d9e1efb40e6321d5b9715b2fd2bb0add", "filename": "libgfortran/generated/spread_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_r10 (gfc_array_r10 *ret, const gfc_array_r10 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "2c78cd4e90eafbbb45739726247335370590ae3a", "filename": "libgfortran/generated/spread_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_r16 (gfc_array_r16 *ret, const gfc_array_r16 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "c151df3122a0e0fd5e8324060889c38ac36f539a", "filename": "libgfortran/generated/spread_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_r4 (gfc_array_r4 *ret, const gfc_array_r4 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "de50b2fc64a28d7638a85ed255684697c3352b6e", "filename": "libgfortran/generated/spread_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fspread_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -121,7 +121,7 @@ spread_r8 (gfc_array_r8 *ret, const gfc_array_r8 *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}, {"sha": "e31efbbc8541331824c7647361c1e3fa58a6e96c", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_c10 (gfc_array_c10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_c10 (gfc_array_c10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "81397829cd01782f14fb2564f9b308731ab2c29e", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_c16 (gfc_array_c16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_c16 (gfc_array_c16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "1f1bd38b15a59e085aa2faff0896e2222c92cd9b", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_c4 (gfc_array_c4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_c4 (gfc_array_c4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "2b37bbc48b095b5e9a2b56469e817ba3cf69608e", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_c8 (gfc_array_c8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_c8 (gfc_array_c8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "fabb610146b1a94682e624d9a4710cb3d4c921f6", "filename": "libgfortran/generated/sum_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i1.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_i1 (gfc_array_i1 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_i1 (gfc_array_i1 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "c41e497d07dc8bc6852df0cbbe7ba010e4630468", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_i16 (gfc_array_i16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_i16 (gfc_array_i16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "4703e41710c72f8a4c268170b7a541c36b547abb", "filename": "libgfortran/generated/sum_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i2.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_i2 (gfc_array_i2 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_i2 (gfc_array_i2 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "5a4725c4bf4480a7e546f1a5e41ae10e13f6a7e3", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_i4 (gfc_array_i4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_i4 (gfc_array_i4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "9bc4e6792a8acf1ec3e183562a1e491469c532d1", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_i8 (gfc_array_i8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_i8 (gfc_array_i8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "801761fcd68625361944ee75e168ae49397e5875", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_r10 (gfc_array_r10 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_r10 (gfc_array_r10 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "9d53286ca3f7ffe315c830010a6987eb701311b9", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_r16 (gfc_array_r16 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_r16 (gfc_array_r16 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "84341e5a680d948aa8059024d4e470a0ffb1fea2", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_r4 (gfc_array_r4 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_r4 (gfc_array_r4 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "6e2fad3f2b0a78eacc79749b3f737fa885515571", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -123,7 +123,7 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -311,7 +311,7 @@ msum_r8 (gfc_array_r8 * const restrict retarray,\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in SUM intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -496,7 +496,7 @@ ssum_r8 (gfc_array_r8 * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "d1a7df93ecdd1a2ce62228619aa63884dae5716a", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -68,6 +68,11 @@ typedef off_t gfc_offset;\n \n #ifndef __GNUC__\n #define __attribute__(x)\n+#define likely(x)       (x)\n+#define unlikely(x)     (x)\n+#else\n+#define likely(x)       __builtin_expect(!!(x), 1)\n+#define unlikely(x)     __builtin_expect(!!(x), 0)\n #endif\n \n \n@@ -107,7 +112,8 @@ typedef off_t gfc_offset;\n    mingw provides, __mingw_snprintf().  We also provide a prototype for\n    __mingw_snprintf(), because the mingw headers currently don't have one.  */\n #if HAVE_MINGW_SNPRINTF\n-extern int __mingw_snprintf (char *, size_t, const char *, ...);\n+extern int __mingw_snprintf (char *, size_t, const char *, ...)\n+     __attribute__ ((format (printf, 3, 4)));\n #undef snprintf\n #define snprintf __mingw_snprintf\n #endif\n@@ -649,7 +655,8 @@ extern void runtime_error_at (const char *, const char *, ...)\n      __attribute__ ((noreturn, format (printf, 2, 3)));\n iexport_proto(runtime_error_at);\n \n-extern void runtime_warning_at (const char *, const char *, ...);\n+extern void runtime_warning_at (const char *, const char *, ...)\n+     __attribute__ ((format (printf, 2, 3)));\n iexport_proto(runtime_warning_at);\n \n extern void internal_error (st_parameter_common *, const char *)"}, {"sha": "b620c653f1a41e7f5d3fed73513b88459aab8bbd", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -36,7 +36,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;\n@@ -152,7 +152,7 @@ void\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank, mask_rank;\n \t  index_type ret_extent;\n@@ -311,7 +311,7 @@ void\n     }\n   else\n     {\n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  int ret_rank;\n \t  index_type ret_extent;"}, {"sha": "e0c168e2e489350061175ba71447a608e1af90b1", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -106,7 +106,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -294,7 +294,7 @@ void\n       if (rank != GFC_DESCRIPTOR_RANK (retarray))\n \truntime_error (\"rank of return array incorrect in u_name intrinsic\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {\n@@ -478,7 +478,7 @@ void\n \t\t       (long int) (GFC_DESCRIPTOR_RANK (retarray)),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "da6b4ae2640fc70994c98e75b335f284bdf30960", "filename": "libgfortran/m4/ifunction_logical.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fifunction_logical.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fifunction_logical.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction_logical.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -110,7 +110,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n \t\t       (long int) GFC_DESCRIPTOR_RANK (retarray),\n \t\t       (long int) rank);\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n=0; n < rank; n++)\n \t    {"}, {"sha": "d8621fa2b35224d96153f166a6cab5ee923178b9", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -136,7 +136,7 @@ matmul_'rtype_code` ('rtype` * const restrict retarray,\n \t= internal_malloc_size (sizeof ('rtype_name`) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "78fb3fb9ad4aec08dadca5a80d2bd58de98a73eb", "filename": "libgfortran/m4/matmull.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fmatmull.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fmatmull.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmull.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -100,7 +100,7 @@ matmul_'rtype_code` ('rtype` * const restrict retarray,\n \t= internal_malloc_size (sizeof ('rtype_name`) * size0 ((array_t *) retarray));\n       retarray->offset = 0;\n     }\n-    else if (compile_options.bounds_check)\n+    else if (unlikely (compile_options.bounds_check))\n       {\n \tindex_type ret_extent, arg_extent;\n "}, {"sha": "54ec68cf295d224f24e80a3b0aa20f610d4e91fa", "filename": "libgfortran/m4/spread.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fspread.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9731c4a34803475968046006076f07d0fe5cd16c/libgfortran%2Fm4%2Fspread.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspread.m4?ref=9731c4a34803475968046006076f07d0fe5cd16c", "patch": "@@ -122,7 +122,7 @@ spread_'rtype_code` ('rtype` *ret, const 'rtype` *source,\n       if (GFC_DESCRIPTOR_RANK(ret) != rrank)\n \truntime_error (\"rank mismatch in spread()\");\n \n-      if (compile_options.bounds_check)\n+      if (unlikely (compile_options.bounds_check))\n \t{\n \t  for (n = 0; n < rrank; n++)\n \t    {"}]}