{"sha": "e4dd71deb765f87955ae21da06e75de7871c1e41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkZDcxZGViNzY1Zjg3OTU1YWUyMWRhMDZlNzVkZTc4NzFjMWU0MQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2005-01-26T20:36:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2005-01-26T20:36:07Z"}, "message": "invoke.texi: Document -mTLS.\n\n\t* doc/invoke.texi: Document -mTLS.\n\n\t* testsuite/gcc.target/frv/all-tls-global-dynamic.c: New.\n\t* testsuite/gcc.target/frv/all-tls-initial-exec.c: New.\n\t* testsuite/gcc.target/frv/all-tls-initial-exec-pic.c: New.\n\t* testsuite/gcc.target/frv/all-tls-local-dynamic.c: New.\n\t* testsuite/gcc.target/frv/all-tls-local-dynamic-plt.c: New.\n\t* testsuite/gcc.target/frv/all-tls-local-dynamic-plt-pic.c: New.\n\t* testsuite/gcc.target/frv/all-tls-local-exec.c: New.\n\t* testsuite/gcc.target/frv/all-tls-local-exec-TLS.c: New.\n\n\t* configure.ac: Check for a TLS capable gas.\n\n\t* configure: Regenerate.\n\nFrom-SVN: r94283", "tree": {"sha": "b748bff788bf3e80d6ef0a86bc289b4fad31dbf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b748bff788bf3e80d6ef0a86bc289b4fad31dbf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4dd71deb765f87955ae21da06e75de7871c1e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dd71deb765f87955ae21da06e75de7871c1e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4dd71deb765f87955ae21da06e75de7871c1e41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dd71deb765f87955ae21da06e75de7871c1e41/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55e79aef81371abf4c07885fbbd748078d695209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e79aef81371abf4c07885fbbd748078d695209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e79aef81371abf4c07885fbbd748078d695209"}], "stats": {"total": 143, "additions": 143, "deletions": 0}, "files": [{"sha": "51d5111b9b2ede3daa9067bbdc0cd4c8ec4f059a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -1,3 +1,19 @@\n+2005-01-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* doc/invoke.texi: Document -mTLS.\n+\n+\t* testsuite/gcc.target/frv/all-tls-global-dynamic.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-initial-exec.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-initial-exec-pic.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-local-dynamic.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-local-dynamic-plt.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-local-dynamic-plt-pic.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-local-exec.c: New.\n+\t* testsuite/gcc.target/frv/all-tls-local-exec-TLS.c: New.\n+\n+\t* configure.ac: Check for a TLS capable gas.\n+\n+\t* configure: Regenerate.\n 2005-01-26  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/18008"}, {"sha": "08868418fd2b41f3f86c204d5e0e19ad35aebc5f", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -13690,6 +13690,15 @@ foo:\t.long\t25\n \ttls_first_minor=13\n \ttls_as_opt=--fatal-warnings\n \t;;\n+  frv*-*-*)\n+    conftest_s='\n+\t.section \".tdata\",\"awT\",@progbits\n+x:      .long   25\n+        .text\n+        call    #gettlsoff(x)'\n+\ttls_first_major=2\n+\ttls_first_minor=14\n+\t;;\n   i[34567]86-*-*)\n     conftest_s='\n \t.section \".tdata\",\"awT\",@progbits"}, {"sha": "937676a573f7d17b7dffd3174803d50aff59e882", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -2279,6 +2279,15 @@ foo:\t.long\t25\n \ttls_first_minor=13\n \ttls_as_opt=--fatal-warnings\n \t;;\n+  frv*-*-*)\n+    conftest_s='\n+\t.section \".tdata\",\"awT\",@progbits\n+x:      .long   25\n+        .text\n+        call    #gettlsoff(x)'\n+\ttls_first_major=2\n+\ttls_first_minor=14\n+\t;;\n   i[34567]86-*-*)\n     conftest_s='\n \t.section \".tdata\",\"awT\",@progbits"}, {"sha": "a48fac1142d98f35c9303f5f0501c79f6da85a7c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -461,6 +461,7 @@ Objective-C and Objective-C++ Dialects}.\n -mvliw-branch  -mno-vliw-branch @gol\n -mmulti-cond-exec  -mno-multi-cond-exec  -mnested-cond-exec @gol\n -mno-nested-cond-exec  -mtomcat-stats @gol\n+-mTLS -mtls @gol\n -mcpu=@var{cpu}}\n \n @emph{H8/300 Options}\n@@ -7872,6 +7873,16 @@ shared libraries (i.e., @option{-fPIC} or @option{-fpic}), or when an\n optimization option such as @option{-O3} or above is present in the\n command line.\n \n+@item -mTLS\n+@opindex TLS\n+\n+Assume a large TLS segment when generating thread-local code.\n+\n+@item -mtls\n+@opindex tls\n+\n+Do not assume a large TLS segment when generating thread-local code.\n+\n @item -mgprel-ro\n @opindex mgprel-ro\n "}, {"sha": "2135090f134485b4af0e3c44ffa4d8215b1a04cb", "filename": "gcc/testsuite/gcc.target/frv/all-tls-global-dynamic.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-global-dynamic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-global-dynamic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-global-dynamic.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=global-dynamic -fpic -mfdpic -mno-inline-plt\" } */\n+/* { dg-do compile } */\n+extern __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"call #gettlsoff.x.\" } } */"}, {"sha": "b51e34df63c63a851d5e05d585ba4bc8244f2540", "filename": "gcc/testsuite/gcc.target/frv/all-tls-initial-exec-pic.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec-pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec-pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec-pic.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=initial-exec -fpic -mfdpic\" } */\n+/* { dg-do compile } */\n+extern __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"ld.*#gottlsoff12\" } } */"}, {"sha": "fa755a2991c7f8d24d728fd8912370301983cce5", "filename": "gcc/testsuite/gcc.target/frv/all-tls-initial-exec.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-initial-exec.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=initial-exec -mfdpic\" } */\n+/* { dg-do compile } */\n+extern __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"ld.*#tlsoff.x.@\" } } */"}, {"sha": "3eabe1c6bf0ceecd87cc6fd3efab2431c170dc3d", "filename": "gcc/testsuite/gcc.target/frv/all-tls-local-dynamic-plt-pic.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt-pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt-pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt-pic.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-ftls-model=local-dynamic -minline-plt -fpic -mfdpic\" } */\n+/* { dg-do compile } */\n+static __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"lddi.*gottlsdesc12\" } } */\n+/* { dg-final { scan-assembler \"calll.*#gettlsoff\\\\(0\\\\)\" } } */"}, {"sha": "5c2de93847f421a737cba5a3c4628c52a79ded07", "filename": "gcc/testsuite/gcc.target/frv/all-tls-local-dynamic-plt.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic-plt.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=local-dynamic -minline-plt -fPIC -mfdpic\" } */\n+/* { dg-do compile } */\n+static __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"ldd.*tlsdesc\\\\(0\\\\)@\" } } */"}, {"sha": "4680a98f4eaf359de8fa10323084b1de04087fce", "filename": "gcc/testsuite/gcc.target/frv/all-tls-local-dynamic.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-dynamic.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-options \"-ftls-model=local-dynamic -fpic -mfdpic\" } */\n+/* { dg-do compile } */\n+static __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"gettlsoff\\\\(0\\\\)\" } } */\n+/* { dg-final { scan-assembler \"tlsmoff12\" } } */"}, {"sha": "83f78de4e7665d276dca466c907f5765c5ba27b7", "filename": "gcc/testsuite/gcc.target/frv/all-tls-local-exec-TLS.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec-TLS.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec-TLS.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec-TLS.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=local-exec -mfdpic -mTLS\" } */\n+/* { dg-do compile } */\n+static __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \"sethi.*tlsmoffhi\\\\(x\\\\),\" } } */"}, {"sha": "dd1b86a05568d7de3c5875d2f39596a0d826d69e", "filename": "gcc/testsuite/gcc.target/frv/all-tls-local-exec.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dd71deb765f87955ae21da06e75de7871c1e41/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-tls-local-exec.c?ref=e4dd71deb765f87955ae21da06e75de7871c1e41", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-ftls-model=local-exec -mfdpic\" } */\n+/* { dg-do compile } */\n+static __thread int x;\n+extern void bar ();\n+int *y;\n+\n+void foo (void)\n+{\n+  bar ();\n+  y = &x;\n+}\n+/* { dg-final { scan-assembler \".*tlsmoff12\" } } */"}]}