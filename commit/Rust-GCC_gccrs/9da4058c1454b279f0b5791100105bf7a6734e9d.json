{"sha": "9da4058c1454b279f0b5791100105bf7a6734e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRhNDA1OGMxNDU0YjI3OWYwYjU3OTExMDAxMDViZjdhNjczNGU5ZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-07-06T05:25:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-07-06T05:25:57Z"}, "message": "tree-ssa-dce.c (cfg_altered): New global.\n\n        * tree-ssa-dce.c (cfg_altered): New global.\n        (tree_dce_init): Initialize cfg_altered.\n        (remove_dead_stmt): If we remove an edge in the CFG, then set\n        CFG_ALTERED.\n        (perform_tree_ssa_dce): If we altered the CFG, then invalidate\n        the dominators.\n\n        * gcc.c-torture/compile/pr21356.c: New test.\n\nFrom-SVN: r101652", "tree": {"sha": "bfc350f65435feb35c717dcc4a70bc5ec1f0e24d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfc350f65435feb35c717dcc4a70bc5ec1f0e24d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9da4058c1454b279f0b5791100105bf7a6734e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da4058c1454b279f0b5791100105bf7a6734e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da4058c1454b279f0b5791100105bf7a6734e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da4058c1454b279f0b5791100105bf7a6734e9d/comments", "author": null, "committer": null, "parents": [{"sha": "1538fc3c3efe8163132b43fb446b15f3fb9be72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1538fc3c3efe8163132b43fb446b15f3fb9be72c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1538fc3c3efe8163132b43fb446b15f3fb9be72c"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "fa01f3162eb009d3856dba38c42c899a5906e9fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9da4058c1454b279f0b5791100105bf7a6734e9d", "patch": "@@ -1,3 +1,12 @@\n+2005-07-06  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dce.c (cfg_altered): New global.\n+\t(tree_dce_init): Initialize cfg_altered.\n+\t(remove_dead_stmt): If we remove an edge in the CFG, then set\n+\tCFG_ALTERED.\n+\t(perform_tree_ssa_dce): If we altered the CFG, then invalidate\n+\tthe dominators.\n+\n 2005-07-06  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* Makefile.in (stamp-collect-ld): Use"}, {"sha": "b70b33024a93896540ae04e5414de672843cca35", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9da4058c1454b279f0b5791100105bf7a6734e9d", "patch": "@@ -1,3 +1,7 @@\n+2005-07-06  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/compile/pr21356.c: New test.\n+\n 2005-07-05  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/22013"}, {"sha": "b072b5165188287c907f6fc7a24524920103021f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr21356.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21356.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21356.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr21356.c?ref=9da4058c1454b279f0b5791100105bf7a6734e9d", "patch": "@@ -0,0 +1,13 @@\n+int a;\n+void* p;\n+\n+void foo (void)\n+{\n+  switch (a)\n+  {\n+    a0: case 0:   p = &&a1;\n+    a1: case 1:   p = &&a2;\n+    a2: default:  p = &&a1;\n+  }\n+  goto *p;\n+}"}, {"sha": "abd4d7ae77a75d52140a59a809e43dee042de167", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9da4058c1454b279f0b5791100105bf7a6734e9d/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=9da4058c1454b279f0b5791100105bf7a6734e9d", "patch": "@@ -96,6 +96,13 @@ static bitmap *control_dependence_map;\n    processed that it is control dependent on.  */\n static sbitmap visited_control_parents;\n \n+/* TRUE if this pass alters the CFG (by removing control statements).\n+   FALSE otherwise.\n+\n+   If this pass alters the CFG, then it will arrange for the dominators\n+   to be recomputed.  */\n+static bool cfg_altered;\n+\n /* Execute CODE for each edge (given number EDGE_NUMBER within the CODE)\n    for which the block with index N is control dependent.  */\n #define EXECUTE_IF_CONTROL_DEPENDENT(N, EDGE_NUMBER, CODE)\t\t      \\\n@@ -774,7 +781,15 @@ remove_dead_stmt (block_stmt_iterator *i, basic_block bb)\n \n       /* Remove the remaining the outgoing edges.  */\n       while (!single_succ_p (bb))\n-        remove_edge (EDGE_SUCC (bb, 1));\n+\t{\n+\t  /* FIXME.  When we remove the edge, we modify the CFG, which\n+\t     in turn modifies the dominator and post-dominator tree.\n+\t     Is it safe to postpone recomputing the dominator and\n+\t     post-dominator tree until the end of this pass given that\n+\t     the post-dominators are used above?  */\n+\t  cfg_altered = true;\n+          remove_edge (EDGE_SUCC (bb, 1));\n+\t}\n     }\n   \n   FOR_EACH_SSA_DEF_OPERAND (def_p, t, iter, SSA_OP_VIRTUAL_DEFS)\n@@ -833,6 +848,7 @@ tree_dce_init (bool aggressive)\n   sbitmap_zero (processed);\n \n   worklist = VEC_alloc (tree, heap, 64);\n+  cfg_altered = false;\n }\n \n /* Cleanup after this pass.  */\n@@ -903,6 +919,12 @@ perform_tree_ssa_dce (bool aggressive)\n   if (aggressive)\n     free_dominance_info (CDI_POST_DOMINATORS);\n \n+  /* If we removed paths in the CFG, then we need to update\n+     dominators as well.  I haven't investigated the possibility\n+     of incrementally updating dominators.  */\n+  if (cfg_altered)\n+    free_dominance_info (CDI_DOMINATORS);\n+\n   /* Debugging dumps.  */\n   if (dump_file)\n     print_stats ();"}]}