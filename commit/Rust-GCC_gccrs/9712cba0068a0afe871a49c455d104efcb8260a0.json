{"sha": "9712cba0068a0afe871a49c455d104efcb8260a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxMmNiYTAwNjhhMGFmZTg3MWE0OWM0NTVkMTA0ZWZjYjgyNjBhMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-16T17:14:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-16T17:14:30Z"}, "message": "re PR debug/46893 (ICE: in trunc_int_for_mode, at explow.c:56 with -O -g)\n\n\tPR debug/46893\n\t* cfgexpand.c (expand_debug_expr): If GET_MODE (op0) is VOIDmode,\n\tuse TYPE_MODE (TREE_TYPE (tem)) instead of mode1.\n\n\t* gcc.dg/pr46893.c: New test.\n\nFrom-SVN: r167949", "tree": {"sha": "de478140bbdd4bf6281015cd3100d7c793239653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de478140bbdd4bf6281015cd3100d7c793239653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9712cba0068a0afe871a49c455d104efcb8260a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9712cba0068a0afe871a49c455d104efcb8260a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9712cba0068a0afe871a49c455d104efcb8260a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9712cba0068a0afe871a49c455d104efcb8260a0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f2cbdcac708467b11b9c8d5405a18bd1a8f3ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2cbdcac708467b11b9c8d5405a18bd1a8f3ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2cbdcac708467b11b9c8d5405a18bd1a8f3ba3"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "7a64192a6d7a8642ec416860e87c62176988473d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9712cba0068a0afe871a49c455d104efcb8260a0", "patch": "@@ -1,3 +1,9 @@\n+2010-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46893\n+\t* cfgexpand.c (expand_debug_expr): If GET_MODE (op0) is VOIDmode,\n+\tuse TYPE_MODE (TREE_TYPE (tem)) instead of mode1.\n+\n 2010-12-16  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR target/46883"}, {"sha": "a3940d01775fa0cdd58b84fbed31e865db99c7bb", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=9712cba0068a0afe871a49c455d104efcb8260a0", "patch": "@@ -2703,7 +2703,7 @@ expand_debug_expr (tree exp)\n \t    enum machine_mode opmode = GET_MODE (op0);\n \n \t    if (opmode == VOIDmode)\n-\t      opmode = mode1;\n+\t      opmode = TYPE_MODE (TREE_TYPE (tem));\n \n \t    /* This condition may hold if we're expanding the address\n \t       right past the end of an array that turned out not to\n@@ -2724,7 +2724,8 @@ expand_debug_expr (tree exp)\n \t\t\t\t     ? SIGN_EXTRACT\n \t\t\t\t     : ZERO_EXTRACT, mode,\n \t\t\t\t     GET_MODE (op0) != VOIDmode\n-\t\t\t\t     ? GET_MODE (op0) : mode1,\n+\t\t\t\t     ? GET_MODE (op0)\n+\t\t\t\t     : TYPE_MODE (TREE_TYPE (tem)),\n \t\t\t\t     op0, GEN_INT (bitsize), GEN_INT (bitpos));\n       }\n "}, {"sha": "df48e936b24e57f78a6047ec8f0a11ca7c94c7fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9712cba0068a0afe871a49c455d104efcb8260a0", "patch": "@@ -1,3 +1,8 @@\n+2010-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46893\n+\t* gcc.dg/pr46893.c: New test.\n+\n 2010-12-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/46976"}, {"sha": "ef97e2edfd2a5bf84f39dc1b7b9042bbaa88317f", "filename": "gcc/testsuite/gcc.dg/pr46893.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46893.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9712cba0068a0afe871a49c455d104efcb8260a0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46893.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46893.c?ref=9712cba0068a0afe871a49c455d104efcb8260a0", "patch": "@@ -0,0 +1,13 @@\n+/* PR debug/46893 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -g\" } */\n+\n+void\n+foo (void)\n+{\n+  union { unsigned long long l; double d; } u = { 0x7ff0000000000000ULL };\n+  double v = 0, w = -u.d;\n+\n+  if (w)\n+    w = v;\n+}"}]}