{"sha": "473fb060f3609f51fc4e1711297f3600e15ed7c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczZmIwNjBmMzYwOWY1MWZjNGUxNzExMjk3ZjM2MDBlMTVlZDdjMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-10-29T11:45:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-10-29T11:45:45Z"}, "message": "basic-block.h (purge_all_dead_edges): Add update_life_p argument.\n\n\t* basic-block.h (purge_all_dead_edges): Add update_life_p argument.\n\t* cfgcleanup.c (merge_blocks): Update the life flag after merging;\n\tfix warning.\n\t* cfgrtl.c (purge_all_dead_edges): Allow updating of liveness.\n\t(life_analysis): call purge_all_dead_edges after deleting noops.\n\t(delete_noop_move): Do not purge CFG.\n\t* toplev.c (rest_of_compilation): Update purge_all_dead_edges call.\n\nFrom-SVN: r46605", "tree": {"sha": "91cc2113797ecc74514f6de4826f7f7c19e0e549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91cc2113797ecc74514f6de4826f7f7c19e0e549"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/473fb060f3609f51fc4e1711297f3600e15ed7c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473fb060f3609f51fc4e1711297f3600e15ed7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473fb060f3609f51fc4e1711297f3600e15ed7c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473fb060f3609f51fc4e1711297f3600e15ed7c0/comments", "author": null, "committer": null, "parents": [{"sha": "4fdaa8786fe048b12597a2055370044e16a37e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fdaa8786fe048b12597a2055370044e16a37e1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fdaa8786fe048b12597a2055370044e16a37e1f"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "2dd564ac08e8a1b209bec708c31ec45fce690b10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -1,3 +1,13 @@\n+Mon Oct 29 12:43:06 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* basic-block.h (purge_all_dead_edges): Add update_life_p argument.\n+\t* cfgcleanup.c (merge_blocks): Update the life flag after merging;\n+\tfix warning.\n+\t* cfgrtl.c (purge_all_dead_edges): Allow updating of liveness.\n+\t(life_analysis): call purge_all_dead_edges after deleting noops.\n+\t(delete_noop_move): Do not purge CFG.\n+\t* toplev.c (rest_of_compilation): Update purge_all_dead_edges call.\n+\n 2001-10-28  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/aix31.h (ASM_OUTPUT_EXTERNAL): Use assemble_name."}, {"sha": "4eba1e49c273b77adb5307e03ec03c99688b39c0", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -638,7 +638,7 @@ extern basic_block force_nonfallthru\tPARAMS ((edge));\n extern bool redirect_edge_and_branch\tPARAMS ((edge, basic_block));\n extern rtx block_label\t\t\tPARAMS ((basic_block));\n extern bool forwarder_block_p\t\tPARAMS ((basic_block));\n-extern bool purge_all_dead_edges\tPARAMS ((void));\n+extern bool purge_all_dead_edges\tPARAMS ((bool));\n extern bool purge_dead_edges\t\tPARAMS ((basic_block));\n extern void find_sub_basic_blocks\tPARAMS ((basic_block));\n extern void find_many_sub_basic_blocks\tPARAMS ((sbitmap));"}, {"sha": "6919e0fdb14cb4897b670e18dbfec978358ec78f", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -433,6 +433,12 @@ merge_blocks (e, b, c, mode)\n   /* If B has a fallthru edge to C, no need to move anything.  */\n   if (e->flags & EDGE_FALLTHRU)\n     {\n+      /* We need to update liveness in case C already has broken liveness\n+\t or B ends by conditional jump to next instructions that will be\n+\t removed.  */\n+      if ((BB_FLAGS (c) & BB_UPDATE_LIFE)\n+\t  || GET_CODE (b->end) == JUMP_INSN)\n+\tBB_SET_FLAG (b, BB_UPDATE_LIFE);\n       merge_blocks_nomove (b, c);\n       update_forwarder_flag (b);\n \n@@ -490,7 +496,7 @@ merge_blocks (e, b, c, mode)\n \n       if (b_has_incoming_fallthru)\n \t{\n-\t  rtx bb;\n+\t  basic_block bb;\n \t  if (b_fallthru_edge->src == ENTRY_BLOCK_PTR)\n \t    return false;\n \t  bb = force_nonfallthru (b_fallthru_edge);"}, {"sha": "16fca3919aad0a35b3c9125002ca887de2f1f0ea", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -1923,10 +1923,30 @@ purge_dead_edges (bb)\n  */\n \n bool\n-purge_all_dead_edges ()\n+purge_all_dead_edges (update_life_p)\n+     bool update_life_p;\n {\n   int i, purged = false;\n+  sbitmap blocks;\n+\n+  if (update_life_p)\n+    {\n+      blocks = sbitmap_alloc (n_basic_blocks);\n+      sbitmap_zero (blocks);\n+    }\n   for (i = 0; i < n_basic_blocks; i++)\n-    purged |= purge_dead_edges (BASIC_BLOCK (i));\n+    {\n+      bool purged_here;\n+      purged_here = purge_dead_edges (BASIC_BLOCK (i));\n+      purged |= purged_here;\n+      if (purged_here && update_life_p)\n+\tSET_BIT (blocks, i);\n+    }\n+  if (update_life_p && purged)\n+    update_life_info (blocks, UPDATE_LIFE_GLOBAL,\n+\t\t      PROP_DEATH_NOTES | PROP_SCAN_DEAD_CODE\n+\t\t      | PROP_KILL_DEAD_CODE);\n+  if (update_life_p)\n+    sbitmap_free (blocks);\n   return purged;\n }"}, {"sha": "50e7494e39f743170e5d53a71a5cb07f925d14d5", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -456,6 +456,7 @@ life_analysis (f, file, flags)\n   /* Always remove no-op moves.  Do this before other processing so\n      that we don't have to keep re-scanning them.  */\n   delete_noop_moves (f);\n+  purge_all_dead_edges (false);\n \n   /* Some targets can emit simpler epilogues if they know that sp was\n      not ever modified during the function.  After reload, of course,\n@@ -803,8 +804,6 @@ delete_noop_moves (f)\n \t      PUT_CODE (insn, NOTE);\n \t      NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n \t      NOTE_SOURCE_FILE (insn) = 0;\n-\t      if (insn == bb->end)\n-\t\tpurge_dead_edges (bb);\n \t    }\n \t}\n     }"}, {"sha": "e8184aae0199fa6ec8b959cc33fd0a753dad6e75", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fb060f3609f51fc4e1711297f3600e15ed7c0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=473fb060f3609f51fc4e1711297f3600e15ed7c0", "patch": "@@ -3301,7 +3301,7 @@ rest_of_compilation (decl)\n \n       /* Always purge dead edges, as we may eliminate an insn throwing\n          exception.  */\n-      rebuild_jump_labels_after_combine |= purge_all_dead_edges ();\n+      rebuild_jump_labels_after_combine |= purge_all_dead_edges (true);\n \n       /* Combining insns may have turned an indirect jump into a\n \t direct jump.  Rebuid the JUMP_LABEL fields of jumping"}]}