{"sha": "a6dbe5a07db08ea1276071b82152f7c971077b87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZkYmU1YTA3ZGIwOGVhMTI3NjA3MWI4MjE1MmY3Yzk3MTA3N2I4Nw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-01-06T19:44:43Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-01-06T19:44:43Z"}, "message": "Recreate x-iris file.\n\nFrom-SVN: r3126", "tree": {"sha": "bf29b27e02564790b63b5b356438d49c9a53deb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf29b27e02564790b63b5b356438d49c9a53deb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6dbe5a07db08ea1276071b82152f7c971077b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6dbe5a07db08ea1276071b82152f7c971077b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6dbe5a07db08ea1276071b82152f7c971077b87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6dbe5a07db08ea1276071b82152f7c971077b87/comments", "author": null, "committer": null, "parents": [{"sha": "19386a3e5a82a8b136855783a24ac033632aadc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19386a3e5a82a8b136855783a24ac033632aadc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19386a3e5a82a8b136855783a24ac033632aadc3"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "85f1e236828586699dae1a58cdf4c66e7f2ed12d", "filename": "gcc/config/mips/x-iris", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6dbe5a07db08ea1276071b82152f7c971077b87/gcc%2Fconfig%2Fmips%2Fx-iris", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6dbe5a07db08ea1276071b82152f7c971077b87/gcc%2Fconfig%2Fmips%2Fx-iris", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-iris?ref=a6dbe5a07db08ea1276071b82152f7c971077b87", "patch": "@@ -0,0 +1,25 @@\n+# Define CC and OLDCC as the same, so that the tests:\n+#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n+#\n+# will succeed (if OLDCC != CC, it is assumed that GCC is\n+# being used in secondary stage builds).  We need to pass\n+# the -Wf,-XNg1500 option so the compiler can compile the\n+# G++ file cp-parse.c.  Otherwise it complains about\n+# too many case statements.  -Olimit is so the user\n+# can use -O2.  Down with fixed size tables!\n+# The -cckr is to turn off strict ANSI checking.\n+\n+CC\t\t= $(OLDCC)\n+OPT\t\t= -O1\n+OLDCC\t\t= cc -Wf,-XNg1500 -Olimit 3000 -cckr $(OPT)\n+\n+# The bison output files are machine-indep,\n+# so different flags for a particular machine are not useful.\n+#BISONFLAGS\t= -l\n+\n+# -lmld is so we can link collect2 running native.\n+# -lmalloc is supposed to be faster than the normal malloc\n+CLIB\t\t= -lmld -lmalloc\n+\n+# Show we need to use the C version of ALLOCA\n+ALLOCA\t\t= alloca.o"}]}