{"sha": "79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzliMWQzNmNkZGUyZWYxYzU4NmFkYTJiNThmNWIyZDE0NDFkZDgyZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-01-03T17:47:20Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-01-03T17:47:20Z"}, "message": "re PR fortran/38594 (module function name mangled improperly if contained function of same name exists)\n\n2009-01-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38594\n\t* resolve.c (resolve_call): When searching for proper host\n\tassociation, use symtree rather than symbol.  For everything\n\texcept generic subroutines, substitute the symtree in the call\n\trather than the symbol.\n\n2009-01-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38594\n\t* gfortran.dg/host_assoc_call_3.f90: Make sure that the generic\n\tinterface still works, in addition to original tests.\n\t* gfortran.dg/host_assoc_call_6.f90: New test.\n\nFrom-SVN: r143032", "tree": {"sha": "eec8656e222be9daf737566c62d8865eb03a690c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec8656e222be9daf737566c62d8865eb03a690c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/comments", "author": null, "committer": null, "parents": [{"sha": "493aa551b29a64091d07e3a0736b5cd3b84e94a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493aa551b29a64091d07e3a0736b5cd3b84e94a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/493aa551b29a64091d07e3a0736b5cd3b84e94a4"}], "stats": {"total": 8329, "additions": 4192, "deletions": 4137}, "files": [{"sha": "738209bb992b1b6b27355b4583e3fbcfd08c52f6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 4134, "changes": 4140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f"}, {"sha": "d1135b35dfc08eec965049c3dd1babbca95299fe", "filename": "gcc/fortran/ChangeLog-2008", "status": "added", "additions": 4135, "deletions": 0, "changes": 4135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2FChangeLog-2008", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2FChangeLog-2008", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog-2008?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f"}, {"sha": "18a81e951cb5d779d4c0b0cdfe8137dc727562e6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "patch": "@@ -2944,15 +2944,20 @@ resolve_call (gfc_code *c)\n \n   if (csym && gfc_current_ns->parent && csym->ns != gfc_current_ns)\n     {\n-      gfc_find_symbol (csym->name, gfc_current_ns, 1, &sym);\n+      gfc_symtree *st;\n+      gfc_find_sym_tree (csym->name, gfc_current_ns, 1, &st);\n+      sym = st ? st->n.sym : NULL;\n       if (sym && csym != sym\n \t      && sym->ns == gfc_current_ns\n \t      && sym->attr.flavor == FL_PROCEDURE\n \t      && sym->attr.contained)\n \t{\n \t  sym->refs++;\n-\t  csym = sym;\n-\t  c->symtree->n.sym = sym;\n+\t  if (csym->attr.generic)\n+\t    c->symtree->n.sym = sym;\n+\t  else\n+\t    c->symtree = st;\n+\t  csym = c->symtree->n.sym;\n \t}\n     }\n "}, {"sha": "fe53d67cfe8baed72ed0f1bd6081140a7b79ceee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "patch": "@@ -1,3 +1,10 @@\n+2009-01-03  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/38594\n+\t* gfortran.dg/host_assoc_call_3.f90: Make sure that the generic\n+\tinterface still works, in addition to original tests.\n+\t* gfortran.dg/host_assoc_call_6.f90: New test.\n+\n 2009-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38705"}, {"sha": "379b228e4cf1a4d1efccaf4881ef49399edc597d", "filename": "gcc/testsuite/gfortran.dg/host_assoc_call_3.f90", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_3.f90?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "patch": "@@ -11,8 +11,10 @@ MODULE M1\n   END INTERFACE\n CONTAINS\n   SUBROUTINE S1(I)\n+      i = 3\n   END SUBROUTINE\n   SUBROUTINE S2(F)\n+      f = 4.0\n   END SUBROUTINE\n END MODULE\n \n@@ -36,9 +38,18 @@ SUBROUTINE putaline(x)\n       end if\n     END SUBROUTINE\n   END SUBROUTINE\n+  subroutine S4\n+    integer :: check = 0\n+    REAL :: rcheck = 0.0\n+    call putaline(check)\n+    if (check .ne. 3) call abort\n+    call putaline(rcheck)\n+    if (rcheck .ne. 4.0) call abort\n+  end subroutine s4\n END MODULE\n \n   USE M2\n   CALL S3\n+  call S4\n END\n ! { dg-final { cleanup-modules \"M1 M2\" } }"}, {"sha": "60a5edc53c1d29be0ced97e0923ae3fdfb686472", "filename": "gcc/testsuite/gfortran.dg/host_assoc_call_6.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhost_assoc_call_6.f90?ref=79b1d36cdde2ef1c586ada2b58f5b2d1441dd82f", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+!\n+! PR fortran/38594, in which the symtree for the first\n+! 'g' was being attached to the second. This is necessary\n+! for generic interfaces(eg. hosts_call_3.f90) but makes\n+! a mess otherwise.\n+!\n+! Contributed by Daniel Franke <dfranke@gcc.gnu.org>\n+!\n+MODULE m\n+CONTAINS\n+  SUBROUTINE g()\n+  END SUBROUTINE\n+  SUBROUTINE f()\n+    CALL g()\n+  CONTAINS\n+    SUBROUTINE g()\n+    END SUBROUTINE\n+  END SUBROUTINE\n+END MODULE\n+\n+  USE m\n+  CALL g()\n+END\n+! { dg-final { cleanup-modules \"m\" } }"}]}