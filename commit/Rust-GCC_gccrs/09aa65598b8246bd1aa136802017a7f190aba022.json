{"sha": "09aa65598b8246bd1aa136802017a7f190aba022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlhYTY1NTk4YjgyNDZiZDFhYTEzNjgwMjAxN2E3ZjE5MGFiYTAyMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-25T21:17:59Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-25T21:17:59Z"}, "message": "(output_load_address, output_size_for_block_move,\n\noutput_block_move): Ifdef out.\n\nFrom-SVN: r4219", "tree": {"sha": "74bae8e4648b2cc428502e020ca18552d6cabb5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74bae8e4648b2cc428502e020ca18552d6cabb5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09aa65598b8246bd1aa136802017a7f190aba022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09aa65598b8246bd1aa136802017a7f190aba022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09aa65598b8246bd1aa136802017a7f190aba022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09aa65598b8246bd1aa136802017a7f190aba022/comments", "author": null, "committer": null, "parents": [{"sha": "9bb7ffda7088261370a2b954b137f4ddb467c038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb7ffda7088261370a2b954b137f4ddb467c038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bb7ffda7088261370a2b954b137f4ddb467c038"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f75d69a3e32d9ebb2ffeaaa32e8dcbc464196aab", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09aa65598b8246bd1aa136802017a7f190aba022/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09aa65598b8246bd1aa136802017a7f190aba022/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=09aa65598b8246bd1aa136802017a7f190aba022", "patch": "@@ -1549,6 +1549,18 @@ output_move_with_extension (operands)\n     abort ();\n }\n \f\n+#if 0\n+/* ??? These are only used by the movstrsi pattern, but we get better code\n+   in general without that, because emit_block_move can do just as good a\n+   job as this function does when alignment and size are known.  When they\n+   aren't known, a call to strcpy may be faster anyways, because it is\n+   likely to be carefully crafted assembly language code, and below we just\n+   do a byte-wise copy.\n+\n+   Also, emit_block_move expands into multiple read/write RTL insns, which\n+   can then be optimized, whereas our movstrsi pattern can not be optimized\n+   at all.  */\n+\n /* Load the address specified by OPERANDS[3] into the register\n    specified by OPERANDS[0].\n \n@@ -1825,6 +1837,7 @@ output_block_move (operands)\n \n   return \"\";\n }\n+#endif\n \f\n /* Output reasonable peephole for set-on-condition-code insns.\n    Note that these insns assume a particular way of defining"}]}