{"sha": "6a3d1d4957e60027cf5ab581bf260f50441cdd52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzZDFkNDk1N2U2MDAyN2NmNWFiNTgxYmYyNjBmNTA0NDFjZGQ1Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2008-01-04T10:26:41Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-01-04T10:26:41Z"}, "message": "mips.md (sqrt_condition): Tweak comment.\n\ngcc/\n\t* config/mips/mips.md (sqrt_condition): Tweak comment.\n\t(recip_condition): Likewise.  Require TARGET_FLOAT64 for DFmode.\n\ngcc/testsuite/\n\t* gcc.target/mips/rsqrt-1.c: Require -mgp64.\n\t* gcc.target/mips/rsqrt-2.c: Likewise.\n\t* gcc.target/mips/rsqrt-4.c: New test.\n\nFrom-SVN: r131318", "tree": {"sha": "575dcbb02d909df984752fa2e9b85d4f03b2c446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/575dcbb02d909df984752fa2e9b85d4f03b2c446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a3d1d4957e60027cf5ab581bf260f50441cdd52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3d1d4957e60027cf5ab581bf260f50441cdd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3d1d4957e60027cf5ab581bf260f50441cdd52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3d1d4957e60027cf5ab581bf260f50441cdd52/comments", "author": null, "committer": null, "parents": [{"sha": "3c7215130f7f1c4677597a3882430fc65e2dba0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7215130f7f1c4677597a3882430fc65e2dba0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7215130f7f1c4677597a3882430fc65e2dba0c"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "6dd3f1591504001749acc0ac3ae954c13640e75c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -1,3 +1,8 @@\n+2008-01-04  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.md (sqrt_condition): Tweak comment.\n+\t(recip_condition): Likewise.  Require TARGET_FLOAT64 for DFmode.\n+\n 2008-01-03  Tom Tromey  <tromey@redhat.com>\n \n \tPR c/34457:"}, {"sha": "864013a01bf8b6cf6d1da0d194f90694498cf4be", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -583,14 +583,19 @@\n   [DF (SF \"!TARGET_FIX_SB1 || flag_unsafe_math_optimizations\")\n    (V2SF \"TARGET_SB1 && (!TARGET_FIX_SB1 || flag_unsafe_math_optimizations)\")])\n \n-; This attribute gives the condition for which sqrt instructions exist.\n+;; This attribute gives the conditions under which SQRT.fmt instructions\n+;; can be used.\n (define_mode_attr sqrt_condition\n   [(SF \"!ISA_MIPS1\") (DF \"!ISA_MIPS1\") (V2SF \"TARGET_SB1\")])\n \n-; This attribute gives the condition for which recip and rsqrt instructions\n-; exist.\n+;; This attribute gives the conditions under which RECIP.fmt and RSQRT.fmt\n+;; instructions can be used.  The MIPS32 and MIPS64 ISAs say that RECIP.D\n+;; and RSQRT.D are unpredictable when doubles are stored in pairs of FPRs,\n+;; so for safety's sake, we apply this restriction to all targets.\n (define_mode_attr recip_condition\n-  [(SF \"ISA_HAS_FP4\") (DF \"ISA_HAS_FP4\") (V2SF \"TARGET_SB1\")])\n+  [(SF \"ISA_HAS_FP4\")\n+   (DF \"ISA_HAS_FP4 && TARGET_FLOAT64\")\n+   (V2SF \"TARGET_SB1\")])\n \n ;; This code iterator allows all branch instructions to be generated from\n ;; a single define_expand template."}, {"sha": "c027dbae2f814535a44361d6a3b6544ae1532c58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -1,3 +1,9 @@\n+2008-01-04  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* gcc.target/mips/rsqrt-1.c: Require -mgp64.\n+\t* gcc.target/mips/rsqrt-2.c: Likewise.\n+\t* gcc.target/mips/rsqrt-4.c: New test.\n+\n 2008-01-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34557"}, {"sha": "4cc6212c351d1bce23eeef34cafe913c4b351e08", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float\" } */\n+/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float -mgp64\" } */\n /* { dg-final { scan-assembler \"rsqrt.d\" } } */\n /* { dg-final { scan-assembler \"rsqrt.s\" } } */\n "}, {"sha": "03a001356f0b6074277daf629c2cda7cbd18e62d", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float\" } */\n+/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float -mgp64\" } */\n /* { dg-final { scan-assembler \"rsqrt.d\" } } */\n /* { dg-final { scan-assembler \"rsqrt.s\" } } */\n "}, {"sha": "7f7da6452edf8393d60304f959720ffa9d7d9c3c", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-4.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d1d4957e60027cf5ab581bf260f50441cdd52/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c?ref=6a3d1d4957e60027cf5ab581bf260f50441cdd52", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -ffast-math -mips64 -mhard-float -mgp32\" } */\n+/* { dg-final { scan-assembler-not \"\\trsqrt.d\\t\" } } */\n+/* { dg-final { scan-assembler-times \"\\trsqrt.s\\t\" 2 } } */\n+\n+extern double sqrt(double);\n+extern float sqrtf(float);\n+\n+NOMIPS16 double f1 (double x)\n+{\n+  return 1.0 / sqrt (x);\n+}\n+\n+NOMIPS16 double f2 (double x)\n+{\n+  return sqrt (1.0 / x);\n+}\n+\n+NOMIPS16 float f3 (float x)\n+{\n+  return 1.0f / sqrtf (x);\n+}\n+\n+NOMIPS16 float f4 (float x)\n+{\n+  return sqrtf (1.0f / x);\n+}"}]}