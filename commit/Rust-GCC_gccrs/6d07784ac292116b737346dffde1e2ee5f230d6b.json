{"sha": "6d07784ac292116b737346dffde1e2ee5f230d6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwNzc4NGFjMjkyMTE2YjczNzM0NmRmZmRlMWUyZWU1ZjIzMGQ2Yg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-06-03T17:18:00Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-06-03T17:18:00Z"}, "message": "configure.in (gcc_cv_as_hidden): Disable .hidden completely on IRIX 6 without GNU ld.\n\n\t* configure.in (gcc_cv_as_hidden): Disable .hidden completely on\n\tIRIX 6 without GNU ld.\n\t* configure: Regenerate.\n\nFrom-SVN: r67390", "tree": {"sha": "1386ef870fd0233320f022b8557e7f3cdd4d7bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1386ef870fd0233320f022b8557e7f3cdd4d7bcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d07784ac292116b737346dffde1e2ee5f230d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d07784ac292116b737346dffde1e2ee5f230d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d07784ac292116b737346dffde1e2ee5f230d6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d07784ac292116b737346dffde1e2ee5f230d6b/comments", "author": null, "committer": null, "parents": [{"sha": "a79b3dc7c8d3e9c7cdd5bab9f8f5ae3841a95764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79b3dc7c8d3e9c7cdd5bab9f8f5ae3841a95764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79b3dc7c8d3e9c7cdd5bab9f8f5ae3841a95764"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "6181a01ab49486a39f51a5b809e2f088096ecdb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d07784ac292116b737346dffde1e2ee5f230d6b", "patch": "@@ -1,3 +1,9 @@\n+2003-06-03  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* configure.in (gcc_cv_as_hidden): Disable .hidden completely on\n+\tIRIX 6 without GNU ld.\n+\t* configure: Regenerate.\n+\n 2003-06-03  Roger Sayle  <roger@eyesopen.com>\n \n \t* expr.c (emit_move_insn_1): Use emit_move_insn to move the parts"}, {"sha": "71f2da13557e8f3b34255878f275131b1e3557e9", "filename": "gcc/configure", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6d07784ac292116b737346dffde1e2ee5f230d6b", "patch": "@@ -2434,7 +2434,7 @@ fi\n \n \n # Find some useful tools\n-for ac_prog in gawk mawk nawk awk\n+for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7918,14 +7918,6 @@ elif test x$gcc_cv_as != x; then\n \t\tfi\n \tfi\n fi\n-if test x\"$gcc_cv_as_hidden\" = xyes; then\n-\tcat >> confdefs.h <<\\EOF\n-#define HAVE_GAS_HIDDEN 1\n-EOF\n-\n-fi\n-echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n-libgcc_visibility=$gcc_cv_as_hidden\n case \"$target\" in\n   mips-sgi-irix6*)\n     if test x\"$gnu_ld_flag\" = x\"no\"; then\n@@ -7935,10 +7927,18 @@ case \"$target\" in\n       # -call_shared (passed by default to the linker) and -r (used to\n       # link the object file generated without .hidden directives with\n       # one that hides symbols), so we also lose.\n-      libgcc_visibility=no\n+      gcc_cv_as_hidden=no\n     fi\n     ;;\n esac\n+if test x\"$gcc_cv_as_hidden\" = xyes; then\n+\tcat >> confdefs.h <<\\EOF\n+#define HAVE_GAS_HIDDEN 1\n+EOF\n+\n+fi\n+echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n+libgcc_visibility=$gcc_cv_as_hidden\n \n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6"}, {"sha": "4f430bfb90a60389220946cfaf8cdc11dc11d243", "filename": "gcc/configure.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d07784ac292116b737346dffde1e2ee5f230d6b/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=6d07784ac292116b737346dffde1e2ee5f230d6b", "patch": "@@ -1874,12 +1874,6 @@ changequote(,)dnl\n changequote([,])dnl\n \tfi\n fi\n-if test x\"$gcc_cv_as_hidden\" = xyes; then\n-\tAC_DEFINE(HAVE_GAS_HIDDEN, 1,\n-\t\t[Define if your assembler supports .hidden.])\n-fi\n-AC_MSG_RESULT($gcc_cv_as_hidden)\n-libgcc_visibility=$gcc_cv_as_hidden\n case \"$target\" in\n   mips-sgi-irix6*)\n     if test x\"$gnu_ld_flag\" = x\"no\"; then\n@@ -1889,10 +1883,16 @@ case \"$target\" in\n       # -call_shared (passed by default to the linker) and -r (used to\n       # link the object file generated without .hidden directives with\n       # one that hides symbols), so we also lose.\n-      libgcc_visibility=no\n+      gcc_cv_as_hidden=no\n     fi\n     ;;\n esac\n+if test x\"$gcc_cv_as_hidden\" = xyes; then\n+\tAC_DEFINE(HAVE_GAS_HIDDEN, 1,\n+\t\t[Define if your assembler supports .hidden.])\n+fi\n+AC_MSG_RESULT($gcc_cv_as_hidden)\n+libgcc_visibility=$gcc_cv_as_hidden\n AC_SUBST(libgcc_visibility)\n \n AC_MSG_CHECKING(assembler leb128 support)"}]}