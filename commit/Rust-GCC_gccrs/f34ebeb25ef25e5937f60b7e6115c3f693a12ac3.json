{"sha": "f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0ZWJlYjI1ZWYyNWU1OTM3ZjYwYjdlNjExNWMzZjY5M2ExMmFjMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-31T08:53:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-31T08:53:00Z"}, "message": "Do UBSAN sanitization just when current_function_decl != NULL_TREE (PR sanitize/81530).\n\n2017-07-31  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitize/81530\n\t* cp-gimplify.c (cp_genericize): Guard condition with flag_sanitize_p\n\talso with current_function_decl non-null equality.\n\t* cp-ubsan.c (cp_ubsan_instrument_vptr_p): Likewise.\n\t* decl.c (compute_array_index_type): Likewise.\n\t* init.c (finish_length_check): Likewise.\n\t* typeck.c (cp_build_binary_op): Likewise.\n2017-07-31  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitize/81530\n\t* c-convert.c (convert): Guard condition with flag_sanitize_p\n\talso with current_function_decl non-null equality.\n\t* c-decl.c (grokdeclarator): Likewise.\n\t* c-typeck.c (build_binary_op): Likewise.\n2017-07-31  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitize/81530\n\t* convert.c (convert_to_integer_1): Guard condition with flag_sanitize_p\n\talso with current_function_decl non-null equality.\n2017-07-31  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitize/81530\n\t* c-ubsan.c (ubsan_maybe_instrument_array_ref):\n\tGuard condition with flag_sanitize_p also with current_function_decl\n\tnon-null equality.\n\t(ubsan_maybe_instrument_reference_or_call): Likewise.\n2017-07-31  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitize/81530\n\t* g++.dg/ubsan/pr81530.C: New test.\n\nFrom-SVN: r250730", "tree": {"sha": "bbf935d2f3780cbc507657f93feae23ae87fbd39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbf935d2f3780cbc507657f93feae23ae87fbd39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "066bbc5721fbda2affe061fc4025a622bf30d5b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066bbc5721fbda2affe061fc4025a622bf30d5b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066bbc5721fbda2affe061fc4025a622bf30d5b5"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "7da2b65fdc2b9b2be5c8a135122a21aa8ee64ade", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1,3 +1,9 @@\n+2017-07-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitize/81530\n+\t* convert.c (convert_to_integer_1): Guard condition with flag_sanitize_p\n+\talso with current_function_decl non-null equality.\n+\n 2017-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81604"}, {"sha": "1b6d7cfb903eea16f9c1bc890748e40255f0aea7", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1,3 +1,11 @@\n+2017-07-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitize/81530\n+\t* c-ubsan.c (ubsan_maybe_instrument_array_ref):\n+\tGuard condition with flag_sanitize_p also with current_function_decl\n+\tnon-null equality.\n+\t(ubsan_maybe_instrument_reference_or_call): Likewise.\n+\n 2017-07-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* c-format.c (asm_fprintf_char_table): Add 'z' to format_chars."}, {"sha": "541b53009c2bb64c76513dcae3e619a6e055bb40", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -373,7 +373,8 @@ void\n ubsan_maybe_instrument_array_ref (tree *expr_p, bool ignore_off_by_one)\n {\n   if (!ubsan_array_ref_instrumented_p (*expr_p)\n-      && sanitize_flags_p (SANITIZE_BOUNDS | SANITIZE_BOUNDS_STRICT))\n+      && sanitize_flags_p (SANITIZE_BOUNDS | SANITIZE_BOUNDS_STRICT)\n+      && current_function_decl != NULL_TREE)\n     {\n       tree op0 = TREE_OPERAND (*expr_p, 0);\n       tree op1 = TREE_OPERAND (*expr_p, 1);\n@@ -393,7 +394,8 @@ static tree\n ubsan_maybe_instrument_reference_or_call (location_t loc, tree op, tree ptype,\n \t\t\t\t\t  enum ubsan_null_ckind ckind)\n {\n-  if (!sanitize_flags_p (SANITIZE_ALIGNMENT | SANITIZE_NULL))\n+  if (!sanitize_flags_p (SANITIZE_ALIGNMENT | SANITIZE_NULL)\n+      || current_function_decl == NULL_TREE)\n     return NULL_TREE;\n \n   tree type = TREE_TYPE (ptype);"}, {"sha": "ab2a4c88ceebb502d9580a4fdfbac0e870ba9984", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1,3 +1,11 @@\n+2017-07-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitize/81530\n+\t* c-convert.c (convert): Guard condition with flag_sanitize_p\n+\talso with current_function_decl non-null equality.\n+\t* c-decl.c (grokdeclarator): Likewise.\n+\t* c-typeck.c (build_binary_op): Likewise.\n+\n 2017-07-25  Marek Polacek  <polacek@redhat.com>\n \n \t* c-decl.c (grokfield): Remove local variable."}, {"sha": "bc649178f4c5d60eacf696fc3224e3808bf6a0ab", "filename": "gcc/c/c-convert.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-convert.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -108,6 +108,7 @@ convert (tree type, tree expr)\n     case INTEGER_TYPE:\n     case ENUMERAL_TYPE:\n       if (sanitize_flags_p (SANITIZE_FLOAT_CAST)\n+\t  && current_function_decl != NULL_TREE\n \t  && TREE_CODE (TREE_TYPE (expr)) == REAL_TYPE\n \t  && COMPLETE_TYPE_P (type))\n \t{"}, {"sha": "a54e12184342289890c613118dc7c02fefce6a76", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -6052,6 +6052,7 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t    this_size_varies = size_varies = true;\n \t\t    warn_variable_length_array (name, size);\n \t\t    if (sanitize_flags_p (SANITIZE_VLA)\n+\t\t\t&& current_function_decl != NULL_TREE\n \t\t\t&& decl_context == NORMAL)\n \t\t      {\n \t\t\t/* Evaluate the array size only once.  */"}, {"sha": "7451f3249fd1ac6cb030ce845f85acf9cc2eaef3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -11838,6 +11838,7 @@ build_binary_op (location_t location, enum tree_code code,\n \n   if (sanitize_flags_p ((SANITIZE_SHIFT\n \t\t\t | SANITIZE_DIVIDE | SANITIZE_FLOAT_DIVIDE))\n+      && current_function_decl != NULL_TREE\n       && (doing_div_or_mod || doing_shift)\n       && !require_constant_value)\n     {"}, {"sha": "58d8054a724cfa690a69047c0ff3878820c09cac", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -938,7 +938,8 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n       return build1 (CONVERT_EXPR, type, expr);\n \n     case REAL_TYPE:\n-      if (sanitize_flags_p (SANITIZE_FLOAT_CAST))\n+      if (sanitize_flags_p (SANITIZE_FLOAT_CAST)\n+\t  && current_function_decl != NULL_TREE)\n \t{\n \t  expr = save_expr (expr);\n \t  tree check = ubsan_instrument_float_cast (loc, type, expr);"}, {"sha": "6d9ff79c974981697fb92470b318a9fd10a451d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1,3 +1,13 @@\n+2017-07-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitize/81530\n+\t* cp-gimplify.c (cp_genericize): Guard condition with flag_sanitize_p\n+\talso with current_function_decl non-null equality.\n+\t* cp-ubsan.c (cp_ubsan_instrument_vptr_p): Likewise.\n+\t* decl.c (compute_array_index_type): Likewise.\n+\t* init.c (finish_length_check): Likewise.\n+\t* typeck.c (cp_build_binary_op): Likewise.\n+\n 2017-07-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-objcp-common.c (cp_decl_dwarf_attribute): Handle"}, {"sha": "a9563b1a8cdff4dba169464290487bd0c67d3073", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1668,7 +1668,8 @@ cp_genericize (tree fndecl)\n      walk_tree's hash functionality.  */\n   cp_genericize_tree (&DECL_SAVED_TREE (fndecl), true);\n \n-  if (sanitize_flags_p (SANITIZE_RETURN))\n+  if (sanitize_flags_p (SANITIZE_RETURN)\n+      && current_function_decl != NULL_TREE)\n     cp_ubsan_maybe_instrument_return (fndecl);\n \n   /* Do everything else.  */"}, {"sha": "3be607c0a42edaa0efd00c26232a271b2a6f8ef8", "filename": "gcc/cp/cp-ubsan.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fcp-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fcp-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-ubsan.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -36,6 +36,9 @@ cp_ubsan_instrument_vptr_p (tree type)\n   if (!sanitize_flags_p (SANITIZE_VPTR))\n     return false;\n \n+  if (current_function_decl == NULL_TREE)\n+    return false;\n+\n   if (type)\n     {\n       type = TYPE_MAIN_VARIANT (type);"}, {"sha": "4ec38b82aa98f640a14bd7eccaa348e4011955d5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -9482,7 +9482,8 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n \n \t  stabilize_vla_size (itype);\n \n-\t  if (sanitize_flags_p (SANITIZE_VLA))\n+\t  if (sanitize_flags_p (SANITIZE_VLA)\n+\t      && current_function_decl != NULL_TREE)\n \t    {\n \t      /* We have to add 1 -- in the ubsan routine we generate\n \t\t LE_EXPR rather than LT_EXPR.  */"}, {"sha": "3fe8f18b2a944cf3a827d1a0daea54fc31453228", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -3910,7 +3910,8 @@ finish_length_check (tree atype, tree iterator, tree obase, unsigned n)\n \t}\n       /* Don't check an array new when -fno-exceptions.  */\n     }\n-  else if (sanitize_flags_p (SANITIZE_BOUNDS))\n+  else if (sanitize_flags_p (SANITIZE_BOUNDS)\n+\t   && current_function_decl != NULL_TREE)\n     {\n       /* Make sure the last element of the initializer is in bounds. */\n       finish_expr_stmt"}, {"sha": "3dc64045e1a7b44f73f3de8277f25ee67aec3f25", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -5256,6 +5256,7 @@ cp_build_binary_op (location_t location,\n \n   if (sanitize_flags_p ((SANITIZE_SHIFT\n \t\t\t | SANITIZE_DIVIDE | SANITIZE_FLOAT_DIVIDE))\n+      && current_function_decl != NULL_TREE\n       && !processing_template_decl\n       && (doing_div_or_mod || doing_shift))\n     {"}, {"sha": "f0ef3ade89963c67d5db6eae2bfa98b0975357b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -1,3 +1,8 @@\n+2017-07-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitize/81530\n+\t* g++.dg/ubsan/pr81530.C: New test.\n+\n 2017-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81604"}, {"sha": "e21724686c4ae11c7aa23628d10b3af0cf0ddfe1", "filename": "gcc/testsuite/g++.dg/ubsan/pr81530.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81530.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ebeb25ef25e5937f60b7e6115c3f693a12ac3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81530.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81530.C?ref=f34ebeb25ef25e5937f60b7e6115c3f693a12ac3", "patch": "@@ -0,0 +1,6 @@\n+/* PR sanitizer/81530 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined\" } */\n+\n+int a[(long) 4e20]; /* { dg-error \"overflow in constant expression\" } */\n+/* { dg-error \"size of array .a. is too large\" \"\" { target *-*-* } .-1 } */"}]}