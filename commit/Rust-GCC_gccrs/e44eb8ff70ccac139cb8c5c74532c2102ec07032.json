{"sha": "e44eb8ff70ccac139cb8c5c74532c2102ec07032", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0ZWI4ZmY3MGNjYWMxMzljYjhjNWM3NDUzMmMyMTAyZWMwNzAzMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-06-10T18:28:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-06-10T18:28:02Z"}, "message": "decl2.c (clear_decl_external): New functoin.\n\n\t* decl2.c (clear_decl_external): New functoin.\n\t(cp_write_global_declarations): Use it.\n\nFrom-SVN: r174922", "tree": {"sha": "9fa02cc0537003d6df4984db08d3496296b1de14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fa02cc0537003d6df4984db08d3496296b1de14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e44eb8ff70ccac139cb8c5c74532c2102ec07032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44eb8ff70ccac139cb8c5c74532c2102ec07032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44eb8ff70ccac139cb8c5c74532c2102ec07032", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44eb8ff70ccac139cb8c5c74532c2102ec07032/comments", "author": null, "committer": null, "parents": [{"sha": "264404492618e038a4686e6fd50d18802b2f9fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264404492618e038a4686e6fd50d18802b2f9fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264404492618e038a4686e6fd50d18802b2f9fa0"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "c10db6cf57646ef855ad85776115e301a8539537", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44eb8ff70ccac139cb8c5c74532c2102ec07032/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44eb8ff70ccac139cb8c5c74532c2102ec07032/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e44eb8ff70ccac139cb8c5c74532c2102ec07032", "patch": "@@ -1,3 +1,8 @@\n+2011-06-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* decl2.c (clear_decl_external): New functoin.\n+\t(cp_write_global_declarations): Use it.\n+\n 2011-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* cp-tree.h (error_operand_p): Remove."}, {"sha": "82d0b11e04024e494dc280f2bed8109fdfce28af", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44eb8ff70ccac139cb8c5c74532c2102ec07032/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44eb8ff70ccac139cb8c5c74532c2102ec07032/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e44eb8ff70ccac139cb8c5c74532c2102ec07032", "patch": "@@ -3635,6 +3635,15 @@ collect_all_refs (const char *source_file)\n   collect_ada_namespace (global_namespace, source_file);\n }\n \n+/* Clear DECL_EXTERNAL for NODE.  */\n+\n+static bool\n+clear_decl_external (struct cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n+{\n+  DECL_EXTERNAL (node->decl) = 0;\n+  return false;\n+}\n+\n /* This routine is called at the end of compilation.\n    Its job is to create all the code needed to initialize and\n    destroy the global aggregates.  We do the destruction\n@@ -3857,34 +3866,21 @@ cp_write_global_declarations (void)\n \t      && DECL_INITIAL (decl)\n \t      && decl_needed_p (decl))\n \t    {\n-\t      struct cgraph_node *node = cgraph_get_node (decl), *alias, *next;\n+\t      struct cgraph_node *node, *next;\n \n-\t      DECL_EXTERNAL (decl) = 0;\n-\t      /* If we mark !DECL_EXTERNAL one of the same body aliases,\n-\t\t we need to mark all of them that way.  */\n-\t      if (node && node->same_body)\n-\t\t{\n-\t\t  DECL_EXTERNAL (node->decl) = 0;\n-\t\t  for (alias = node->same_body; alias; alias = alias->next)\n-\t\t    DECL_EXTERNAL (alias->decl) = 0;\n-\t\t}\n+\t      node = cgraph_get_node (decl);\n+\n+\t      cgraph_for_node_and_aliases (node, clear_decl_external,\n+\t\t\t\t\t   NULL, true);\n \t      /* If we mark !DECL_EXTERNAL one of the symbols in some comdat\n \t\t group, we need to mark all symbols in the same comdat group\n \t\t that way.  */\n \t      if (node->same_comdat_group)\n \t\tfor (next = node->same_comdat_group;\n \t\t     next != node;\n \t\t     next = next->same_comdat_group)\n-\t\t  {\n-\t\t    DECL_EXTERNAL (next->decl) = 0;\n-\t\t    if (next->same_body)\n-\t\t      {\n-\t\t\tfor (alias = next->same_body;\n-\t\t\t     alias;\n-\t\t\t     alias = alias->next)\n-\t\t\t  DECL_EXTERNAL (alias->decl) = 0;\n-\t\t      }\n-\t\t  }\n+\t          cgraph_for_node_and_aliases (next, clear_decl_external,\n+\t\t\t\t\t       NULL, true);\n \t    }\n \n \t  /* If we're going to need to write this function out, and"}]}