{"sha": "24357840f1d9fbeb5f604b33b541479786d9910a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzNTc4NDBmMWQ5ZmJlYjVmNjA0YjMzYjU0MTQ3OTc4NmQ5OTEwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-10T09:58:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T09:58:35Z"}, "message": "sem_aux.ads, [...] (Nearest_Current_Scope): New function.\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aux.ads, sem_aux.adb (Nearest_Current_Scope): New function.\n\n\t* sem_res.adb (Resolve_Call): Fix test for\n\tSuppress_Value_Tracking_On_Call (was wrong for the case of a call from\n\ta non-dynamic scope).\n\nFrom-SVN: r145881", "tree": {"sha": "60b600a4905a739ecc00f1a2f5f76492813fd691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b600a4905a739ecc00f1a2f5f76492813fd691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24357840f1d9fbeb5f604b33b541479786d9910a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24357840f1d9fbeb5f604b33b541479786d9910a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24357840f1d9fbeb5f604b33b541479786d9910a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24357840f1d9fbeb5f604b33b541479786d9910a/comments", "author": null, "committer": null, "parents": [{"sha": "4f64abad80d072773ac390c9a93470dd57da4c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64abad80d072773ac390c9a93470dd57da4c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f64abad80d072773ac390c9a93470dd57da4c31"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "4aced676bd3417987a2d9d7f5f9a4e68fb257263", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24357840f1d9fbeb5f604b33b541479786d9910a", "patch": "@@ -1,3 +1,11 @@\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aux.ads, sem_aux.adb (Nearest_Current_Scope): New function.\n+\n+\t* sem_res.adb (Resolve_Call): Fix test for\n+\tSuppress_Value_Tracking_On_Call (was wrong for the case of a call from\n+\ta non-dynamic scope).\n+\n 2009-04-10  Robert Dewar  <dewar@adacore.com>\n \n \t* make.adb: Add comment."}, {"sha": "94db312c2e1e9f3d9707d79d42ed0fad4c88ec25", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=24357840f1d9fbeb5f604b33b541479786d9910a", "patch": "@@ -158,7 +158,7 @@ package body Sem_Aux is\n    -----------------------------\n \n    function Enclosing_Dynamic_Scope (Ent : Entity_Id) return Entity_Id is\n-      S  : Entity_Id;\n+      S : Entity_Id;\n \n    begin\n       --  The following test is an error defense against some syntax\n@@ -710,6 +710,19 @@ package body Sem_Aux is\n       end if;\n    end Is_Limited_Type;\n \n+   ---------------------------\n+   -- Nearest_Dynamic_Scope --\n+   ---------------------------\n+\n+   function Nearest_Dynamic_Scope (Ent : Entity_Id) return Entity_Id is\n+   begin\n+      if Is_Dynamic_Scope (Ent) then\n+         return Ent;\n+      else\n+         return Enclosing_Dynamic_Scope (Ent);\n+      end if;\n+   end Nearest_Dynamic_Scope;\n+\n    ------------------------\n    -- Next_Tag_Component --\n    ------------------------"}, {"sha": "f8467446130db723a34b6bd50a7610a882b3e782", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=24357840f1d9fbeb5f604b33b541479786d9910a", "patch": "@@ -180,6 +180,11 @@ package Sem_Aux is\n    --  composite containing a limited component, or a subtype of any of\n    --  these types).\n \n+   function Nearest_Dynamic_Scope (Ent : Entity_Id) return Entity_Id;\n+   --  This is similar to Enclosing_Dynamic_Scope except that if Ent is itself\n+   --  a dynamic scope, then it is returned. Otherwise the result is the same\n+   --  as that returned by Enclosing_Dynamic_Scope.\n+\n    function Next_Tag_Component (Tag : Entity_Id) return Entity_Id;\n    --  Tag must be an entity representing a _Tag field of a tagged record.\n    --  The result returned is the next _Tag field in this record, or Empty"}, {"sha": "a6c5aad9e593ebdf2869480813ac0473380dfeda", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24357840f1d9fbeb5f604b33b541479786d9910a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=24357840f1d9fbeb5f604b33b541479786d9910a", "patch": "@@ -5150,7 +5150,8 @@ package body Sem_Res is\n \n       if Inside_Freezing_Actions = 0\n         and then (not Is_Library_Level_Entity (Nam)\n-                   or else Suppress_Value_Tracking_On_Call (Current_Scope))\n+                   or else Suppress_Value_Tracking_On_Call\n+                             (Nearest_Dynamic_Scope (Current_Scope)))\n         and then (Comes_From_Source (Nam)\n                    or else (Present (Alias (Nam))\n                              and then Comes_From_Source (Alias (Nam))))"}]}