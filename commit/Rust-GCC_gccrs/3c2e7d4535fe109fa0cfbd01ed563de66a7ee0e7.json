{"sha": "3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyZTdkNDUzNWZlMTA5ZmEwY2ZiZDAxZWQ1NjNkZTY2YTdlZTBlNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-10-08T21:54:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-10-08T21:54:16Z"}, "message": "lto-elf.c (init_shdr##BITS, [...]): Remove trailing \".\" from diagnostics.\n\n\t* lto-elf.c (init_shdr##BITS, lto_elf_begin_section_with_type,\n\tinit_ehdr##BITS, lto_elf_file_close): Remove trailing \".\" from\n\tdiagnostics.\n\t* lto-lang.c (lto_post_options): Remove trailing \".\" from\n\tdiagnostics.\n\nFrom-SVN: r152579", "tree": {"sha": "490d7142e46f95eaef6c652fef5c03e5e2acaeb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/490d7142e46f95eaef6c652fef5c03e5e2acaeb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23cd46a1dfc8f4ddf072ca8a2dd1435118c5013b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cd46a1dfc8f4ddf072ca8a2dd1435118c5013b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cd46a1dfc8f4ddf072ca8a2dd1435118c5013b"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "f2eb1a2c8b8e1056bcd71e7f2599dc82078d7d87", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "patch": "@@ -1,3 +1,11 @@\n+2009-10-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lto-elf.c (init_shdr##BITS, lto_elf_begin_section_with_type,\n+\tinit_ehdr##BITS, lto_elf_file_close): Remove trailing \".\" from\n+\tdiagnostics.\n+\t* lto-lang.c (lto_post_options): Remove trailing \".\" from\n+\tdiagnostics.\n+\n 2009-10-08  Richard Guenther  <rguenther@suse.de>\n \n \t* lto.c (read_cgraph_and_symbols): Free the gimple type merging"}, {"sha": "28c26c768b615e80ebdb358a1c79df41790edd49", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "patch": "@@ -235,7 +235,7 @@ init_shdr##BITS (Elf_Scn *scn, size_t sh_name, size_t sh_type)\t      \\\n \t\t\t\t\t\t\t\t      \\\n   shdr = elf##BITS##_getshdr (scn);\t\t\t\t      \\\n   if (!shdr)\t\t\t\t\t\t\t      \\\n-    fatal_error (\"elf\"#BITS\"_getshdr() failed: %s.\", elf_errmsg (-1));\\\n+    fatal_error (\"elf\"#BITS\"_getshdr() failed: %s\", elf_errmsg (-1));\\\n \t\t\t\t\t\t\t\t      \\\n   shdr->sh_name = sh_name;\t\t\t\t\t      \\\n   shdr->sh_type = sh_type;\t\t\t\t\t      \\\n@@ -268,7 +268,7 @@ lto_elf_begin_section_with_type (const char *name, size_t type)\n   /* Create a new section.  */\n   scn = elf_newscn (file->elf);\n   if (!scn)\n-    fatal_error (\"could not create a new ELF section: %s.\", elf_errmsg (-1));\n+    fatal_error (\"could not create a new ELF section: %s\", elf_errmsg (-1));\n   file->scn = scn;\n \n   /* Add a string table entry and record the offset.  */\n@@ -486,7 +486,7 @@ init_ehdr##BITS (lto_elf_file *elf_file)\t\t\t      \\\n \t\t\t\t\t\t\t\t      \\\n   ehdr = elf##BITS##_newehdr (elf_file->elf);\t\t\t      \\\n   if (!ehdr)\t\t\t\t\t\t\t      \\\n-    fatal_error (\"elf\"#BITS\"_newehdr() failed: %s.\", elf_errmsg (-1));\\\n+    fatal_error (\"elf\"#BITS\"_newehdr() failed: %s\", elf_errmsg (-1));\\\n \t\t\t\t\t\t\t\t      \\\n   memcpy (ehdr->e_ident, cached_file_attrs.elf_ident,\t\t      \\\n \t  sizeof cached_file_attrs.elf_ident);\t\t\t      \\\n@@ -601,7 +601,7 @@ lto_elf_file_close (lto_file *file)\n       lto_elf_begin_section_with_type (\".shstrtab\", SHT_STRTAB);\n       ehdr_p = gelf_getehdr (elf_file->elf, &ehdr_buf);\n       if (ehdr_p == NULL)\n-\tfatal_error (\"gelf_getehdr() failed: %s.\", elf_errmsg (-1));\n+\tfatal_error (\"gelf_getehdr() failed: %s\", elf_errmsg (-1));\n       strtab = elf_ndxscn (elf_file->scn);\n       if (strtab < SHN_LORESERVE)\n \tehdr_p->e_shstrndx = strtab;\n@@ -610,25 +610,25 @@ lto_elf_file_close (lto_file *file)\n \t  GElf_Shdr *shdr_p, shdr_buf;\n \t  Elf_Scn *scn_p = elf_getscn (elf_file->elf, 0);\n \t  if (scn_p == NULL)\n-\t    fatal_error (\"elf_getscn() failed: %s.\", elf_errmsg (-1));\n+\t    fatal_error (\"elf_getscn() failed: %s\", elf_errmsg (-1));\n \t  shdr_p = gelf_getshdr (scn_p, &shdr_buf);\n \t  if (shdr_p == NULL)\n-\t    fatal_error (\"gelf_getshdr() failed: %s.\", elf_errmsg (-1));\n+\t    fatal_error (\"gelf_getshdr() failed: %s\", elf_errmsg (-1));\n \t  shdr_p->sh_link = strtab;\n \t  if (gelf_update_shdr (scn_p, shdr_p) == 0)\n-\t    fatal_error (\"gelf_update_shdr() failed: %s.\", elf_errmsg (-1));\n+\t    fatal_error (\"gelf_update_shdr() failed: %s\", elf_errmsg (-1));\n \t  ehdr_p->e_shstrndx = SHN_XINDEX;\n \t}\n       if (gelf_update_ehdr (elf_file->elf, ehdr_p) == 0)\n-\tfatal_error (\"gelf_update_ehdr() failed: %s.\", elf_errmsg (-1));\n+\tfatal_error (\"gelf_update_ehdr() failed: %s\", elf_errmsg (-1));\n       lto_write_stream (elf_file->shstrtab_stream);\n       lto_elf_end_section ();\n \n       lto_set_current_out_file (old_file);\n       free (elf_file->shstrtab_stream);\n \n       if (elf_update (elf_file->elf, ELF_C_WRITE) < 0)\n-\tfatal_error (\"elf_update() failed: %s.\", elf_errmsg (-1));\n+\tfatal_error (\"elf_update() failed: %s\", elf_errmsg (-1));\n     }\n \n   if (elf_file->elf)"}, {"sha": "04d423076566334ae87ffab83771f5e6c650fe13", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=3c2e7d4535fe109fa0cfbd01ed563de66a7ee0e7", "patch": "@@ -657,7 +657,7 @@ lto_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n \n   /* -fltrans and -fwpa are mutually exclusive.  Check for that here.  */\n   if (flag_wpa && flag_ltrans)\n-    error (\"-fwpa and -fltrans are mutually exclusive.\");\n+    error (\"-fwpa and -fltrans are mutually exclusive\");\n \n   if (flag_ltrans)\n     {"}]}