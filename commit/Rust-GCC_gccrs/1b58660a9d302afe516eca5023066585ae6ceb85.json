{"sha": "1b58660a9d302afe516eca5023066585ae6ceb85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1ODY2MGE5ZDMwMmFmZTUxNmVjYTUwMjMwNjY1ODVhZTZjZWI4NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-03-28T01:52:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-28T01:52:55Z"}, "message": "instantiate1.C: Use scan-assembler, not link errors.\n\n        * g++.dg/ext/instantiate1.C: Use scan-assembler, not link errors.\n        * g++.dg/ext/instantiate2.C, g++.dg/ext/instantiate3.C: Likewise;\n        move from g++.old-deja/g++.ext/.\n\nFrom-SVN: r51491", "tree": {"sha": "734401ad3e345fed9d99a621834a4497df7065b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734401ad3e345fed9d99a621834a4497df7065b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b58660a9d302afe516eca5023066585ae6ceb85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b58660a9d302afe516eca5023066585ae6ceb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b58660a9d302afe516eca5023066585ae6ceb85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b58660a9d302afe516eca5023066585ae6ceb85/comments", "author": null, "committer": null, "parents": [{"sha": "55a2ea2a340cd1d029b8025dd58695703a4e18f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a2ea2a340cd1d029b8025dd58695703a4e18f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a2ea2a340cd1d029b8025dd58695703a4e18f0"}], "stats": {"total": 100, "additions": 40, "deletions": 60}, "files": [{"sha": "5cf57802e03911d3b409cabbb30c08cb79418b1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b58660a9d302afe516eca5023066585ae6ceb85", "patch": "@@ -1,3 +1,9 @@\n+2002-03-27  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.dg/ext/instantiate1.C: Use scan-assembler, not link errors.\n+\t* g++.dg/ext/instantiate2.C, g++.dg/ext/instantiate3.C: Likewise;\n+\tmove from g++.old-deja/g++.ext/.\n+\n 2002-03-27  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/init/new2.C: New test."}, {"sha": "04d740029ccadf1ecc49b0766760e6cfd49e3c84", "filename": "gcc/testsuite/g++.dg/ext/instantiate1.C", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate1.C?ref=1b58660a9d302afe516eca5023066585ae6ceb85", "patch": "@@ -1,5 +1,5 @@\n // Test that 'extern template' suppresses instantiations.\n-// { dg-do link }\n+// { dg-do compile }\n // { dg-options \"\" }\n \n template <class T> void f (T) { }\n@@ -11,22 +11,14 @@ template <class T> struct A {\n template <class T> void A<T>::f () { }\n extern template struct A<int>;\n \n-// { dg-error \"void f<int>\\\\(int\\\\)\" \"suppressing f<int>\" { target *-*-* } \"0\" }\n+// { dg-final { scan-assembler-not \"\\n_?_Z1fIiEvT_(:|\\n)\" } }\n void test_f_int () { f(42); } \n \n-// { dg-error \"A<int>::f\\\\(\\\\)\" \"suppressing A<int>\" { target *-*-* } \"0\" }\n+// { dg-final { scan-assembler-not \"\\n_?_ZN1AIiE1fEv(:|\\n)\" } }\n void test_A_int_f () { A<int> a; a.f (); }\n \n-// { dg-bogus \"void f<double>\\\\(double\\\\)\" \"f<double>\" { target *-*-* } \"0\" }\n+// { dg-final { scan-assembler \"\\n_?_Z1fIdEvT_(:|\\n)\" } }\n void test_f_double () { f (2.0); }\n \n-// { dg-bogus \"A<double>::f\\\\(\\\\)\" \"A<double>\" { target *-*-* } \"0\" }\n+// { dg-final { scan-assembler \"\\n_?_ZN1AIdE1fEv(:|\\n)\" } }\n void test_A_double_f () { A<double> b; b.f (); }\n-\n-int main ()\n-{\n-  test_f_int ();\n-  test_A_int_f ();\n-  test_f_double ();\n-  test_A_double_f ();\n-}"}, {"sha": "c812dba85dbc8238b8787fa4676ab5e877ada454", "filename": "gcc/testsuite/g++.dg/ext/instantiate2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C?ref=1b58660a9d302afe516eca5023066585ae6ceb85", "patch": "@@ -0,0 +1,15 @@\n+// Test that 'static template' instantiates statics.\n+// { dg-do compile }\n+// { dg-options \"-fno-implicit-templates\" }\n+\n+template <class T> struct A {\n+  static T t;\n+};\n+template <class T> T A<T>::t = 0;\n+static template struct A<int>;\n+\n+// { dg-final { scan-assembler \"\\n_?_ZN1AIiE1tE(:|\\n)\" } }\n+void test_int() { A<int>::t = 42; }\n+\n+// { dg-final { scan-assembler-not \"\\n_?_ZN1AIcE1tE(:|\\n)\" } }\n+void test_char() { A<char>::t = 42; }"}, {"sha": "c0f61fcef97c8a8cc0ac8e7b74698cc3e2e0abe6", "filename": "gcc/testsuite/g++.dg/ext/instantiate3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b58660a9d302afe516eca5023066585ae6ceb85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate3.C?ref=1b58660a9d302afe516eca5023066585ae6ceb85", "patch": "@@ -0,0 +1,14 @@\n+// Test that 'inline template' instantiates the vtable.\n+// { dg-do compile }\n+// { dg-options \"-O -fno-implicit-templates\" }\n+\n+template <class T> struct A {\n+  virtual void f () { }\n+};\n+inline template struct A<int>;\n+\n+// { dg-final { scan-assembler \"\\n_?_ZTV1AIiE(:|\\n)\" } }\n+A<int> a;\n+\n+// { dg-final { scan-assembler-not \"\\n_?_ZTV1AIcE(:|\\n)\" } }\n+A<char> b;"}, {"sha": "805233248b24319db2db69030eb6740a06e2b049", "filename": "gcc/testsuite/g++.old-deja/g++.ext/instantiate2.C", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a2ea2a340cd1d029b8025dd58695703a4e18f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a2ea2a340cd1d029b8025dd58695703a4e18f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate2.C?ref=55a2ea2a340cd1d029b8025dd58695703a4e18f0", "patch": "@@ -1,27 +0,0 @@\n-// Test that 'static template' instantiates statics.\n-// Special g++ Options: -g -fno-implicit-templates\n-\n-// Ignore the 'ld returned 1' message from collect2.\n-// excess errors test - XFAIL *-*-*\n-\n-template <class T> struct A {\n-  static T t;\n-};\n-template <class T> T A<T>::t = 0;\n-static template struct A<int>;\n-\n-// These functions must be defined in a single line, so that, even if\n-// constants or pointers are placed in the code section (for example,\n-// on the SH), we still get the same line numbers.\n-\n-void test_int() { A<int>::t = 42; } // gets bogus error\n-\n-void test_char() { A<char>::t = 42; } // ERROR - not instantiated XFAIL *-*-irix* *-*-hpux*\n-// Irix's default linker does not produce line numbers so XFAIL it.\n-// Similarly for HP's linker\n-\n-int main ()\n-{\n-  test_int ();\n-  test_char ();\n-}"}, {"sha": "f3149d1caa7cd5650de8a534b87d4addd445067e", "filename": "gcc/testsuite/g++.old-deja/g++.ext/instantiate3.C", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a2ea2a340cd1d029b8025dd58695703a4e18f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a2ea2a340cd1d029b8025dd58695703a4e18f0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finstantiate3.C?ref=55a2ea2a340cd1d029b8025dd58695703a4e18f0", "patch": "@@ -1,20 +0,0 @@\n-// Test that 'inline template' instantiates the vtable.\n-// Special g++ Options: -g -O -fno-implicit-templates\n-\n-// Ignore the 'ld returned 1' message from collect2.\n-// excess errors test - XFAIL *-*-*\n-\n-template <class T> struct A {\n-  virtual void f () { }\n-};\n-inline template struct A<int>;\n-\n-A<int> a;\t\t\t// gets bogus error\n-A<char> b;\t\t\t// ERROR - not instantiated XFAIL mips*-*-* *-*-hpux* i?86-pc-cygwin\n-\t\t\t\t// Irix's default linker does not\n-\t\t\t\t// produce line numbers so XFAIL it.\n-\t\t\t\t// Similarly for HPUX.\n-\n-int main ()\n-{\n-}"}]}