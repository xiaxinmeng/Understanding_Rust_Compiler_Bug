{"sha": "23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjZGY4ZThmNmYxMTk1Nzg4ZTgxOTk1YmM5Y2Y1OTk3YjVjZTFmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-03-11T01:51:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-03-11T01:51:59Z"}, "message": "complex (operator+(const complex<>&, const _Tp&), [...]): Do not assume real() returns a reference (against DR 387).\n\n2009-03-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/complex (operator+(const complex<>&, const _Tp&),\n\toperator+(const _Tp&, const complex<>&),\n\toperator-(const complex<>&, const _Tp&),\n\toperator-(const _Tp&, const complex<>&)): Do not assume real()\n\treturns a reference (against DR 387).\n\t* testsuite/26_numerics/complex/dr387_2.cc: New.\n\nFrom-SVN: r144770", "tree": {"sha": "4c922c198e69b52071e20c908358a0f09da2b218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c922c198e69b52071e20c908358a0f09da2b218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/comments", "author": null, "committer": null, "parents": [{"sha": "b1ab21e7f5ef455590b2be094997f976883c1e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ab21e7f5ef455590b2be094997f976883c1e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ab21e7f5ef455590b2be094997f976883c1e6e"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "8d326b3b33539cbe86689bda966aad73a32c42ac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "patch": "@@ -1,3 +1,12 @@\n+2009-03-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/complex (operator+(const complex<>&, const _Tp&),\n+\toperator+(const _Tp&, const complex<>&),\n+\toperator-(const complex<>&, const _Tp&),\n+\toperator-(const _Tp&, const complex<>&)): Do not assume real()\n+\treturns a reference (against DR 387).\n+\t* testsuite/26_numerics/complex/dr387_2.cc: New.\n+\n 2009-03-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/thread/pthread4.cc: Move..."}, {"sha": "e5c583554c178dabda22195111800909542d66b5", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "patch": "@@ -333,7 +333,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator+(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n-      __r.real() += __y;\n+      __r += __y;\n       return __r;\n     }\n \n@@ -342,7 +342,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator+(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __y;\n-      __r.real() += __x;\n+      __r += __x;\n       return __r;\n     }\n   //@}\n@@ -363,7 +363,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator-(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n-      __r.real() -= __y;\n+      __r -= __y;\n       return __r;\n     }\n \n@@ -372,7 +372,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator-(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r(__x, -__y.imag());\n-      __r.real() -= __y.real();\n+      __r -= __y.real();\n       return __r;\n     }\n   //@}"}, {"sha": "33a502f0892318aa43f15daf70d3985f449380fc", "filename": "libstdc++-v3/testsuite/26_numerics/complex/dr387_2.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr387_2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr387_2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr387_2.cc?ref=23cdf8e8f6f1195788e81995bc9cf5997b5ce1fc", "patch": "@@ -0,0 +1,31 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+//\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <complex>\n+\n+// DR 387. std::complex over-encapsulated.\n+// http://gcc.gnu.org/ml/gcc/2009-03/msg00264.html\n+typedef std::complex<double> C;\n+\n+C f1(C& c) { return c+1.0; }\n+C f2(C& c) { return c-1.0; }\n+C f3(C& c) { return 1.0+c; }\n+C f4(C& c) { return 1.0-c; }"}]}