{"sha": "9ad2334b60dab68c60b33bb2c87b9590c6a4002a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkMjMzNGI2MGRhYjY4YzYwYjMzYmIyYzg3Yjk1OTBjNmE0MDAyYQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-05T07:16:53Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-05T07:16:53Z"}, "message": "sparc.md (*cmp{si,di}_insn): %r0 -> %0.\n\n\t* sparc/sparc.md (*cmp{si,di}_insn): %r0 -> %0.\n\t(DFmode move split): Ensure registers not extended v9 fp regs.\n\t(*mov{sf,df,tf}_cc_reg_sp64): %r3 -> %3.\n\nFrom-SVN: r11437", "tree": {"sha": "93a7432b6adc943a70e6e312281a9c12c34bfc75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93a7432b6adc943a70e6e312281a9c12c34bfc75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ad2334b60dab68c60b33bb2c87b9590c6a4002a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad2334b60dab68c60b33bb2c87b9590c6a4002a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad2334b60dab68c60b33bb2c87b9590c6a4002a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad2334b60dab68c60b33bb2c87b9590c6a4002a/comments", "author": null, "committer": null, "parents": [{"sha": "7ea7263d65d04281dde9edbe5d1c9cc4edb0918e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea7263d65d04281dde9edbe5d1c9cc4edb0918e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea7263d65d04281dde9edbe5d1c9cc4edb0918e"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "0cd7ddb9f06ed73168ea570cd5506d785178ca2b", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad2334b60dab68c60b33bb2c87b9590c6a4002a/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad2334b60dab68c60b33bb2c87b9590c6a4002a/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=9ad2334b60dab68c60b33bb2c87b9590c6a4002a", "patch": "@@ -348,7 +348,7 @@\n \t(compare:CC (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t    (match_operand:SI 1 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"cmp %r0,%1\"\n+  \"cmp %0,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n (define_insn \"*cmpsf_fpe_sp32\"\n@@ -404,7 +404,7 @@\n \t(compare:CCX (match_operand:DI 0 \"register_operand\" \"r\")\n \t\t     (match_operand:DI 1 \"arith_double_operand\" \"rHI\")))]\n   \"TARGET_ARCH64\"\n-  \"cmp %r0,%1\"\n+  \"cmp %0,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n (define_insn \"*cmpsf_fpe_sp64\"\n@@ -2183,11 +2183,13 @@\n \n ;; Must handle overlapping registers here, since parameters can be unaligned\n ;; in registers.\n-;; ??? Do we need a v9 version of this?\n+\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(match_operand:DF 1 \"register_operand\" \"\"))]\n-  \"! TARGET_ARCH64 && reload_completed\"\n+  \"! TARGET_ARCH64 && reload_completed\n+   && REGNO (operands[0]) < SPARC_FIRST_V9_FP_REG\n+   && REGNO (operands[1]) < SPARC_FIRST_V9_FP_REG\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 4) (match_dup 5))]\n   \"\n@@ -2575,7 +2577,7 @@\n \t\t      (match_operand:SF 3 \"register_operand\" \"f\")\n \t\t      (match_operand:SF 4 \"register_operand\" \"0\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n-  \"fmovrs%D1 %2,%r3,%0\"\n+  \"fmovrs%D1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"*movdf_cc_reg_sp64\"\n@@ -2586,7 +2588,7 @@\n \t\t      (match_operand:DF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n-  \"fmovrd%D1 %2,%r3,%0\"\n+  \"fmovrd%D1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"*movtf_cc_reg_sp64\"\n@@ -2597,7 +2599,7 @@\n \t\t      (match_operand:TF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 4 \"register_operand\" \"0\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n-  \"fmovrq%D1 %2,%r3,%0\"\n+  \"fmovrq%D1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"*movsf_ccfp_sp64\""}]}