{"sha": "3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkMjQ5YjljNzE5MTFhYjczNWY3ZWE0ZTQzYTBiM2ZhNmY0ODUxMw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-07-14T13:32:26Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-07-14T13:32:26Z"}, "message": "Include <cstring> and <cstdlib>.\n\nFrom-SVN: r69329", "tree": {"sha": "951f2ab2eed0e05c0afe4a704d1009f1de6ba648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/951f2ab2eed0e05c0afe4a704d1009f1de6ba648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ece1b348b5c67402a6efa630dacfbba0bcf7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ece1b348b5c67402a6efa630dacfbba0bcf7cb"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "78d4852d2abe2ea6ad72bb8c09f225c777b0b2fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "patch": "@@ -1,3 +1,8 @@\n+2003-07-14  Gabriel Dos Reis  <gcc@integrable-solutions.net>\n+\n+\t* config/locale/gnu/c_locale.h (__convert_from_v): Include\n+\t<cstring> and <cstdlib>. Qualify names.\n+\n 2003-07-13  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/locale/generic/c_locale.h: Include <cstdlib> and"}, {"sha": "5ead068ea04a141d7713318b33e0afbfb125454d", "filename": "libstdc++-v3/config/locale/gnu/c_locale.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad249b9c71911ab735f7ea4e43a0b3fa6f48513/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h?ref=3ad249b9c71911ab735f7ea4e43a0b3fa6f48513", "patch": "@@ -38,6 +38,8 @@\n \n #pragma GCC system_header\n \n+#include <cstring>              // get std::strlen\n+#include <cstdlib>              // get std::malloc\n #include <clocale>\n #include <langinfo.h>\t\t// For codecvt\n #include <iconv.h>\t\t// For codecvt using iconv, iconv_t\n@@ -73,10 +75,10 @@ namespace std\n \t\t     _Tv __v, const __c_locale&, int __prec = -1)\n     {\n       char* __old = setlocale(LC_ALL, NULL);\n-      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n+      char* __sav = static_cast<char*>(std::malloc(std::strlen(__old) + 1));\n       if (__sav)\n-        strcpy(__sav, __old);\n-      setlocale(LC_ALL, \"C\");\n+        std::strcpy(__sav, __old);\n+      std::setlocale(LC_ALL, \"C\");\n #endif\n \n       int __ret;\n@@ -87,16 +89,16 @@ namespace std\n         __ret = snprintf(__out, __size, __fmt, __v);\n #else\n       if (__prec >= 0)\n-        __ret = sprintf(__out, __fmt, __prec, __v);\n+        __ret = std::sprintf(__out, __fmt, __prec, __v);\n       else\n-        __ret = sprintf(__out, __fmt, __v);\n+        __ret = std::sprintf(__out, __fmt, __v);\n #endif\n \n #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)\n       __gnu_cxx::__uselocale(__old);\n #else\n-      setlocale(LC_ALL, __sav);\n-      free(__sav);\n+      std::setlocale(LC_ALL, __sav);\n+      std::free(__sav);\n #endif\n       return __ret;\n     }"}]}