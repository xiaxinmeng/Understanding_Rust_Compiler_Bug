{"sha": "1f8a09d2f3c69fff32729c4fa0680c4621babb83", "node_id": "C_kwDOANBUbNoAKDFmOGEwOWQyZjNjNjlmZmYzMjcyOWM0ZmEwNjgwYzQ2MjFiYWJiODM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-15T00:16:41Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-15T00:16:41Z"}, "message": "Daily bump.", "tree": {"sha": "a72f01dbe752a0e7294b2eca11a57c47245eab48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a72f01dbe752a0e7294b2eca11a57c47245eab48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8a09d2f3c69fff32729c4fa0680c4621babb83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8a09d2f3c69fff32729c4fa0680c4621babb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8a09d2f3c69fff32729c4fa0680c4621babb83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8a09d2f3c69fff32729c4fa0680c4621babb83/comments", "author": null, "committer": null, "parents": [{"sha": "7a1b179b08bc802280ca90ed4c6c8d8b25503e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1b179b08bc802280ca90ed4c6c8d8b25503e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1b179b08bc802280ca90ed4c6c8d8b25503e66"}], "stats": {"total": 123, "additions": 122, "deletions": 1}, "files": [{"sha": "a8e9992156d0a0f07683a1f6028f15a89f9d70c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,40 @@\n+2022-02-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/104355\n+\t* doc/invoke.texi (-Warray-bounds): Update documentation.\n+\n+2022-02-14  Michael Meissner  <meissner@the-meissners.org>\n+\n+\tPR target/104253\n+\t* config/rs6000/rs6000.cc (init_float128_ibm): Update the\n+\tconversion functions used to convert IFmode types.\n+\n+2022-02-14  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn.cc (gcn_expand_reduc_scalar): Use force_reg.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104528\n+\t* tree-ssa.h (find_released_ssa_name): Declare.\n+\t* tree-ssa.cc (find_released_ssa_name): Export.\n+\t* cfgloop.cc (verify_loop_structure): Look for released\n+\tSSA names in loops nb_iterations.\n+\t* tree-ssa-dse.cc (pass_dse::execute): Release number of iteration\n+\testimates.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104511\n+\t* tree-ssa-forwprop.cc (simplify_vector_constructor): Avoid\n+\ttouching DFP <-> FP conversions.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104497\n+\t* gimplify.cc (gimplify_compound_lval): Make sure the\n+\tbase is a non-register if needed and possible.\n+\n 2022-02-13  liuhongt  <hongtao.liu@intel.com>\n \n \tPR target/103771"}, {"sha": "e2cc64fb4402b0a68e2357d6b176e79aaa349f0e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1 +1 @@\n-20220214\n+20220215"}, {"sha": "340e2c0d298f84f28cc094b81b2484bc9b0cc18b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,9 @@\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/104505\n+\t* c-pretty-print.cc (c_pretty_printer::postfix_expression): Handle\n+\tinternal function calls.\n+\n 2022-02-11  Richard Biener  <rguenther@suse.de>\n \n \t* c-attribs.cc (c_common_attribute_table): Add entry for"}, {"sha": "f27a791591bf49175a16aae6e42f2e9bd8ac81b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,9 @@\n+2022-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104513\n+\t* constexpr.cc (potential_constant_expression_1) <case GOTO_EXPR>:\n+\tDon't punt if returns (target).\n+\n 2022-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/104472"}, {"sha": "6f468359a08d3402a8dd7a7e35854f9d73877b68", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,9 @@\n+2022-02-14  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104211\n+\t* expr.cc (find_array_section): Replace assertion by error\n+\trecovery when encountering bad array constructor.\n+\n 2022-02-13  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/104228"}, {"sha": "b6d9786141782c57517d2fd6c37513bae0d4f017", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,39 @@\n+2022-02-14  Michael Meissner  <meissner@the-meissners.org>\n+\n+\tPR target/104253\n+\t* gcc.target/powerpc/pr104253.c: New test.\n+\n+2022-02-14  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104211\n+\t* gfortran.dg/pr104211.f90: New test.\n+\n+2022-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104513\n+\t* g++.dg/cpp1y/constexpr-104513.C: New test.\n+\t* g++.dg/cpp2a/constexpr-dtor12.C: New test.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104528\n+\t* gfortran.dg/pr104528.f: New testcase.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104511\n+\t* gcc.dg/pr104511.c: New testcase.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/104505\n+\t* c-c++-common/pr104505.c: New testcase.\n+\n+2022-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104497\n+\t* c-c++-common/torture/pr104497.c: New testcase.\n+\n 2022-02-13  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/104228"}, {"sha": "195c4702bad441a3ca447ea6e88d8effeb2471d8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a09d2f3c69fff32729c4fa0680c4621babb83/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a09d2f3c69fff32729c4fa0680c4621babb83/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f8a09d2f3c69fff32729c4fa0680c4621babb83", "patch": "@@ -1,3 +1,33 @@\n+2022-02-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100912\n+\t* config/locale/gnu/c_locale.h (__convert_from_v): Use inline\n+\tnamespace for IEEE128 long double mode.\n+\t* config/os/gnu-linux/ldbl-ieee128-extra.ver: Add new symbol\n+\tversion and export __gnu_cxx_ieee128::__convert_from_v.\n+\t* include/bits/locale_facets_nonio.tcc (money_put::__do_put):\n+\tMake __ibm128 overload use snprintf directly\n+\t* testsuite/util/testsuite_abi.cc: Add new symbol version.\n+\tRemove stable IEEE128/LDBL versions.\n+\n+2022-02-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103891\n+\t* include/bits/c++config (_GLIBCXX_HAVE_COND_TRIVIAL_SPECIAL_MEMBERS):\n+\tRemove.\n+\t* include/std/variant: Check feature test macros instead.\n+\t* include/std/version: Likewise.\n+\n+2022-02-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/unsynchronized_pool_resource/allocate.cc:\n+\tFix typo.\n+\n+2022-02-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++17/floating_to_chars.cc (FLOAT128_TO_CHARS): Depend on\n+\tLONG_DOUBLE_ALT128_COMPAT instead of USE_FLOAT128.\n+\n 2022-02-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/20_util/temporary_buffer.cc: Fix dg-warning target"}]}