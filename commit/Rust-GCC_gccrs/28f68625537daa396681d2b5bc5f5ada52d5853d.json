{"sha": "28f68625537daa396681d2b5bc5f5ada52d5853d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmNjg2MjU1MzdkYWEzOTY2ODFkMmI1YmM1ZjVhZGE1MmQ1ODUzZA==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2008-04-22T18:04:32Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2008-04-22T18:04:32Z"}, "message": "cpplib.h (cpp_define_formatted): New.\n\n2008-04-22  Daniel Franke  <franke.daniel@gmail.com>\n\n        * include/cpplib.h (cpp_define_formatted): New.\n        * directives.c (cpp_define_formatted): New.\n\nFrom-SVN: r134564", "tree": {"sha": "ada84af9f669b80ebfb7743802f328e8b26b93e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ada84af9f669b80ebfb7743802f328e8b26b93e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28f68625537daa396681d2b5bc5f5ada52d5853d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f68625537daa396681d2b5bc5f5ada52d5853d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f68625537daa396681d2b5bc5f5ada52d5853d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f68625537daa396681d2b5bc5f5ada52d5853d/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ca1c37cdb07ca6f8e6e608dae53ea89a1c5b3e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca1c37cdb07ca6f8e6e608dae53ea89a1c5b3e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca1c37cdb07ca6f8e6e608dae53ea89a1c5b3e8"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "d850eb5938981a531166dd628a40607130286379", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=28f68625537daa396681d2b5bc5f5ada52d5853d", "patch": "@@ -1,3 +1,8 @@\n+2008-04-22  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* include/cpplib.h (cpp_define_formatted): New.\n+\t* directives.c (cpp_define_formatted): New.\n+\n 2008-04-21  Tom Tromey  <tromey@redhat.com>\n \n \tPR libcpp/33415:"}, {"sha": "bac08ad2f4601e8c479b4865a326baa5fa7075f1", "filename": "libcpp/directives.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=28f68625537daa396681d2b5bc5f5ada52d5853d", "patch": "@@ -2123,6 +2123,26 @@ cpp_define (cpp_reader *pfile, const char *str)\n   run_directive (pfile, T_DEFINE, buf, count);\n }\n \n+\n+/* Use to build macros to be run through cpp_define() as\n+   described above.\n+   Example: cpp_define_formatted (pfile, \"MACRO=%d\", value);  */\n+\n+void\n+cpp_define_formatted (cpp_reader *pfile, const char *fmt, ...)\n+{\n+  char *ptr = NULL;\n+\n+  va_list ap;\n+  va_start (ap, fmt);\n+  vasprintf (&ptr, fmt, ap);\n+  va_end (ap);\n+\n+  cpp_define (pfile, ptr);\n+  free (ptr);\n+}\n+\n+\n /* Slight variant of the above for use by initialize_builtins.  */\n void\n _cpp_define_builtin (cpp_reader *pfile, const char *str)"}, {"sha": "46ab14603ed5611e61dc0a73d9a5556d697f7d46", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f68625537daa396681d2b5bc5f5ada52d5853d/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=28f68625537daa396681d2b5bc5f5ada52d5853d", "patch": "@@ -730,6 +730,8 @@ extern cppchar_t cpp_host_to_exec_charset (cpp_reader *, cppchar_t);\n /* Used to register macros and assertions, perhaps from the command line.\n    The text is the same as the command line argument.  */\n extern void cpp_define (cpp_reader *, const char *);\n+extern void cpp_define_formatted (cpp_reader *pfile, \n+\t\t\t\t  const char *fmt, ...) ATTRIBUTE_PRINTF_2;\n extern void cpp_assert (cpp_reader *, const char *);\n extern void cpp_undef (cpp_reader *, const char *);\n extern void cpp_unassert (cpp_reader *, const char *);\n@@ -838,7 +840,7 @@ extern void cpp_errno (cpp_reader *, int, const char *msgid);\n extern void cpp_error_with_line (cpp_reader *, int, source_location, unsigned,\n \t\t\t\t const char *msgid, ...) ATTRIBUTE_PRINTF_5;\n \n-/* In cpplex.c */\n+/* In lex.c */\n extern int cpp_ideq (const cpp_token *, const char *);\n extern void cpp_output_line (cpp_reader *, FILE *);\n extern void cpp_output_token (const cpp_token *, FILE *);\n@@ -851,7 +853,7 @@ extern const char *cpp_type2name (enum cpp_ttype);\n extern cppchar_t cpp_parse_escape (cpp_reader *, const unsigned char ** pstr,\n \t\t\t\t   const unsigned char *limit, int wide);\n \n-/* In cpphash.c */\n+/* In hash.c */\n \n /* Lookup an identifier in the hashtable.  Puts the identifier in the\n    table if it is not already there.  */\n@@ -861,13 +863,13 @@ extern cpp_hashnode *cpp_lookup (cpp_reader *, const unsigned char *,\n typedef int (*cpp_cb) (cpp_reader *, cpp_hashnode *, void *);\n extern void cpp_forall_identifiers (cpp_reader *, cpp_cb, void *);\n \n-/* In cppmacro.c */\n+/* In macro.c */\n extern void cpp_scan_nooutput (cpp_reader *);\n extern int  cpp_sys_macro_p (cpp_reader *);\n extern unsigned char *cpp_quote_string (unsigned char *, const unsigned char *,\n \t\t\t\t\tunsigned int);\n \n-/* In cppfiles.c */\n+/* In files.c */\n extern bool cpp_included (cpp_reader *, const char *);\n extern bool cpp_included_before (cpp_reader *, const char *, source_location);\n extern void cpp_make_system_header (cpp_reader *, int, int);\n@@ -880,7 +882,7 @@ extern struct _cpp_file *cpp_get_file (cpp_buffer *);\n extern cpp_buffer *cpp_get_prev (cpp_buffer *);\n extern void cpp_clear_file_cache (cpp_reader *);\n \n-/* In cpppch.c */\n+/* In pch.c */\n struct save_macro_data;\n extern int cpp_save_state (cpp_reader *, FILE *);\n extern int cpp_write_pch_deps (cpp_reader *, FILE *);"}]}