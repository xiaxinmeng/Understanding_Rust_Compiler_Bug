{"sha": "9736a42e1fb8df30d72cf28594d9046bf50200c1", "node_id": "C_kwDOANBUbNoAKDk3MzZhNDJlMWZiOGRmMzBkNzJjZjI4NTk0ZDkwNDZiZjUwMjAwYzE", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-11T19:02:23Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-11T19:02:23Z"}, "message": "c++ modules: ICE with templated friend and std namespace [PR100134]\n\nThe function depset::hash::add_binding_entity has an assert verifying\nthat if a namespace contains an exported entity, then the namespace must\nhave been opened in the module purview:\n\n  if (data->hash->add_namespace_entities (decl, data->partitions))\n    {\n      /* It contains an exported thing, so it is exported.  */\n      gcc_checking_assert (DECL_MODULE_PURVIEW_P (decl));\n      DECL_MODULE_EXPORT_P (decl) = true;\n    }\n\nWe're tripping over this assert in the below testcase because by\ninstantiating and exporting std::A<int>, we in turn define and export the\nhidden friend std::f(A<int>) without ever having opened the enclosing\nnamespace std within the module purview, and thus DECL_MODULE_PURVIEW_P\nfor std is false.\n\nIt's important that the enclosing namespace is std here: if we use\na different namespace then the ICE disappears.  This probably has\nsomething to do with us predefining std via push_namespace from\ncxx_init_decl_processing (which makes it look like we've opened it\nwithin the TU), whereas with another namespace we would instead lazily\ncreate its NAMESPACE_DECL from add_imported_namespace.\n\nSince templated friend functions are special in that they give us a way\nto introduce a namespace-scope function without having to explicitly\nopen the namespace, this patch proposes to fix this ICE by propagating\nDECL_MODULE_PURVIEW_P from the introduced function to the enclosing\nnamespace during tsubst_friend_function.\n\n\tPR c++/100134\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (tsubst_friend_function): Propagate DECL_MODULE_PURVIEW_P\n\tfrom the introduced namespace-scope function to the namespace.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/modules/tpl-friend-8_a.H: New test.\n\t* g++.dg/modules/tpl-friend-8_b.C: New test.", "tree": {"sha": "479a0ee754f228f76d48a4adb13d3e96fadb28a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/479a0ee754f228f76d48a4adb13d3e96fadb28a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9736a42e1fb8df30d72cf28594d9046bf50200c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9736a42e1fb8df30d72cf28594d9046bf50200c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9736a42e1fb8df30d72cf28594d9046bf50200c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9736a42e1fb8df30d72cf28594d9046bf50200c1/comments", "author": null, "committer": null, "parents": [{"sha": "2ceb4d531a303f3e70d8bb218c8759e6c0688f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ceb4d531a303f3e70d8bb218c8759e6c0688f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ceb4d531a303f3e70d8bb218c8759e6c0688f62"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "b80e7ff18455275da21fcefe2fce10169536f917", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=9736a42e1fb8df30d72cf28594d9046bf50200c1", "patch": "@@ -11448,6 +11448,14 @@ tsubst_friend_function (tree decl, tree args)\n \t     by duplicate_decls.  */\n \t  new_friend = old_decl;\n \t}\n+\n+      /* We've just introduced a namespace-scope function in the purview\n+\t without necessarily having opened the enclosing namespace, so\n+\t make sure the namespace is in the purview now too.  */\n+      if (modules_p ()\n+\t  && DECL_MODULE_PURVIEW_P (STRIP_TEMPLATE (new_friend))\n+\t  && TREE_CODE (DECL_CONTEXT (new_friend)) == NAMESPACE_DECL)\n+\tDECL_MODULE_PURVIEW_P (DECL_CONTEXT (new_friend)) = true;\n     }\n   else\n     {"}, {"sha": "bd2290460b5a3cbe1da0605ee78dbe6ed66a2505", "filename": "gcc/testsuite/g++.dg/modules/tpl-friend-8_a.H", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_a.H?ref=9736a42e1fb8df30d72cf28594d9046bf50200c1", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/100134\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+namespace std {\n+  template<class T> struct A {\n+    friend void f(A) { }\n+  };\n+}"}, {"sha": "76d7447c2ebcb14fa9b517f70e30f45667b1414d", "filename": "gcc/testsuite/g++.dg/modules/tpl-friend-8_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9736a42e1fb8df30d72cf28594d9046bf50200c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ftpl-friend-8_b.C?ref=9736a42e1fb8df30d72cf28594d9046bf50200c1", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/100134\n+// { dg-additional-options -fmodules-ts }\n+// { dg-module-cmi pr100134 }\n+export module pr100134;\n+\n+import \"tpl-friend-8_a.H\";\n+\n+export std::A<int> a;"}]}