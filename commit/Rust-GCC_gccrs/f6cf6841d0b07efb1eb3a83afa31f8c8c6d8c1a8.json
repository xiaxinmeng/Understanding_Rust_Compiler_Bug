{"sha": "f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjZjY4NDFkMGIwN2VmYjFlYjNhODNhZmEzMWY4YzhjNmQ4YzFhOA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-10-04T21:45:50Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-10-04T21:45:50Z"}, "message": "target-supports.exp (check_effective_target_fortran_large_real, [...]): Replace cached result when target changes.\n\n\t* lib/target-supports.exp (check_effective_target_fortran_large_real,\n\tcheck_effective_target_fortran_large_int): Replace cached result\n\twhen target changes.\n\nFrom-SVN: r104959", "tree": {"sha": "af81be7901fa0e892adda6e3137f36a215ddfe20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af81be7901fa0e892adda6e3137f36a215ddfe20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8/comments", "author": null, "committer": null, "parents": [{"sha": "a04deb83faf6ea6a12a72c39d7b3b3c12c864f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04deb83faf6ea6a12a72c39d7b3b3c12c864f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04deb83faf6ea6a12a72c39d7b3b3c12c864f8e"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "dd5d17330ac913ffcb5b6259579579930a877684", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "patch": "@@ -1,3 +1,9 @@\n+2005-10-04  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_fortran_large_real,\n+\tcheck_effective_target_fortran_large_int): Replace cached result\n+\twhen target changes.\n+\n 2005-10-04  Devang Patel  <dpatel@apple.com>\n \n \t* gcc.dg/i386-sse-vect-types.c: New."}, {"sha": "b98e3ceb94f1ed558c2d43a3988026c2ae91ac30", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f6cf6841d0b07efb1eb3a83afa31f8c8c6d8c1a8", "patch": "@@ -411,12 +411,30 @@ proc check_named_sections_available { } {\n }\n \n # Return 1 if the target supports Fortran real kinds larger than real(8),\n-# 0 otherwise.  Cache the result.\n+# 0 otherwise.\n+#\n+# When the target name changes, replace the cached result.\n \n proc check_effective_target_fortran_large_real { } {\n     global et_fortran_large_real_saved\n+    global et_fortran_large_real_target_name\n     global tool\n \n+    if { ![info exists et_fortran_large_real_target_name] } {\n+\tset et_fortran_large_real_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_fortran_large_real_target_name } {\n+\tverbose \"check_effective_target_fortran_large_real: `$et_fortran_large_real_target_name' `$current_target'\" 2\n+\tset et_fortran_large_real_target_name $current_target\n+\tif [info exists et_fortran_large_real_saved] {\n+\t    verbose \"check_effective_target_fortran_large_real: removing cached result\" 2\n+\t    unset et_fortran_large_real_saved\n+\t}\n+    }\n+\n     if [info exists et_fortran_large_real_saved] {\n \tverbose \"check_effective_target_fortran_large_real returning saved $et_fortran_large_real_saved\" 2\n     } else {\n@@ -449,12 +467,30 @@ proc check_effective_target_fortran_large_real { } {\n }\n \n # Return 1 if the target supports Fortran integer kinds larger than\n-# integer(8), 0 otherwise.  Cache the result.\n+# integer(8), 0 otherwise.\n+#\n+# When the target name changes, replace the cached result.\n \n proc check_effective_target_fortran_large_int { } {\n     global et_fortran_large_int_saved\n+    global et_fortran_large_int_target_name\n     global tool\n \n+    if { ![info exists et_fortran_large_int_target_name] } {\n+\tset et_fortran_large_int_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_fortran_large_int_target_name } {\n+\tverbose \"check_effective_target_fortran_large_int: `$et_fortran_large_int_target_name' `$current_target'\" 2\n+\tset et_fortran_large_int_target_name $current_target\n+\tif [info exists et_fortran_large_int_saved] {\n+\t    verbose \"check_effective_target_fortran_large_int: removing cached result\" 2\n+\t    unset et_fortran_large_int_saved\n+\t}\n+    }\n+\n     if [info exists et_fortran_large_int_saved] {\n \tverbose \"check_effective_target_fortran_large_int returning saved $et_fortran_large_int_saved\" 2\n     } else {"}]}