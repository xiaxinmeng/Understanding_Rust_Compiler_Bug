{"sha": "2b6cd962513387303661614b292397cb6432590c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI2Y2Q5NjI1MTMzODczMDM2NjE2MTRiMjkyMzk3Y2I2NDMyNTkwYw==", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2019-09-18T08:31:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:31:32Z"}, "message": "[Ada] Fix style issues in functional maps\n\nRename global constants from I to J. No functional changes.\n\n2019-09-18  Claire Dross  <dross@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-cofuma.adb (Remove, Elements_Equal_Except,\n\tKeys_Included, Keys_Included_Except): Rename loop indexes and\n\tglobal constants from I to J.\n\nFrom-SVN: r275838", "tree": {"sha": "84e895553b5adc6f6fb6884b44894d0512cbda31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84e895553b5adc6f6fb6884b44894d0512cbda31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b6cd962513387303661614b292397cb6432590c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6cd962513387303661614b292397cb6432590c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6cd962513387303661614b292397cb6432590c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6cd962513387303661614b292397cb6432590c/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2778553904f1653be5f90679570f8a60eabf2cfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2778553904f1653be5f90679570f8a60eabf2cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2778553904f1653be5f90679570f8a60eabf2cfc"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "8906ea1b537a835a89f28f5aa342488c1a114e6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b6cd962513387303661614b292397cb6432590c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b6cd962513387303661614b292397cb6432590c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2b6cd962513387303661614b292397cb6432590c", "patch": "@@ -1,3 +1,9 @@\n+2019-09-18  Claire Dross  <dross@adacore.com>\n+\n+\t* libgnat/a-cofuma.adb (Remove, Elements_Equal_Except,\n+\tKeys_Included, Keys_Included_Except): Rename loop indexes and\n+\tglobal constants from I to J.\n+\n 2019-09-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_unst.adb (Unnest_Subprograms): Refine previous change."}, {"sha": "e8da18701b0f7261c5bfc4ce29c043208e46a08e", "filename": "gcc/ada/libgnat/a-cofuma.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b6cd962513387303661614b292397cb6432590c/gcc%2Fada%2Flibgnat%2Fa-cofuma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b6cd962513387303661614b292397cb6432590c/gcc%2Fada%2Flibgnat%2Fa-cofuma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofuma.adb?ref=2b6cd962513387303661614b292397cb6432590c", "patch": "@@ -88,15 +88,15 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n       New_Key : Key_Type) return Boolean\n    is\n    begin\n-      for I in 1 .. Length (Left.Keys) loop\n+      for J in 1 .. Length (Left.Keys) loop\n          declare\n-            K : constant Key_Type := Get (Left.Keys, I);\n+            K : constant Key_Type := Get (Left.Keys, J);\n          begin\n             if not Equivalent_Keys (K, New_Key)\n               and then\n                 (Find (Right.Keys, K) = 0\n                   or else Get (Right.Elements, Find (Right.Keys, K)) /=\n-                          Get (Left.Elements, I))\n+                          Get (Left.Elements, J))\n             then\n                return False;\n             end if;\n@@ -112,16 +112,16 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n       Y     : Key_Type) return Boolean\n    is\n    begin\n-      for I in 1 .. Length (Left.Keys) loop\n+      for J in 1 .. Length (Left.Keys) loop\n          declare\n-            K : constant Key_Type := Get (Left.Keys, I);\n+            K : constant Key_Type := Get (Left.Keys, J);\n          begin\n             if not Equivalent_Keys (K, X)\n               and then not Equivalent_Keys (K, Y)\n               and then\n                 (Find (Right.Keys, K) = 0\n                   or else Get (Right.Elements, Find (Right.Keys, K)) /=\n-                          Get (Left.Elements, I))\n+                          Get (Left.Elements, J))\n             then\n                return False;\n             end if;\n@@ -173,9 +173,9 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n \n    function Keys_Included (Left : Map; Right : Map) return Boolean is\n    begin\n-      for I in 1 .. Length (Left.Keys) loop\n+      for J in 1 .. Length (Left.Keys) loop\n          declare\n-            K : constant Key_Type := Get (Left.Keys, I);\n+            K : constant Key_Type := Get (Left.Keys, J);\n          begin\n             if Find (Right.Keys, K) = 0 then\n                return False;\n@@ -196,9 +196,9 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n       New_Key : Key_Type) return Boolean\n    is\n    begin\n-      for I in 1 .. Length (Left.Keys) loop\n+      for J in 1 .. Length (Left.Keys) loop\n          declare\n-            K : constant Key_Type := Get (Left.Keys, I);\n+            K : constant Key_Type := Get (Left.Keys, J);\n          begin\n             if not Equivalent_Keys (K, New_Key)\n               and then Find (Right.Keys, K) = 0\n@@ -218,9 +218,9 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n       Y     : Key_Type) return Boolean\n    is\n    begin\n-      for I in 1 .. Length (Left.Keys) loop\n+      for J in 1 .. Length (Left.Keys) loop\n          declare\n-            K : constant Key_Type := Get (Left.Keys, I);\n+            K : constant Key_Type := Get (Left.Keys, J);\n          begin\n             if not Equivalent_Keys (K, X)\n               and then not Equivalent_Keys (K, Y)\n@@ -248,11 +248,11 @@ package body Ada.Containers.Functional_Maps with SPARK_Mode => Off is\n    ------------\n \n    function Remove (Container : Map; Key : Key_Type) return Map is\n-      I : constant Extended_Index := Find (Container.Keys, Key);\n+      J : constant Extended_Index := Find (Container.Keys, Key);\n    begin\n       return\n-        (Keys     => Remove (Container.Keys, I),\n-         Elements => Remove (Container.Elements, I));\n+        (Keys     => Remove (Container.Keys, J),\n+         Elements => Remove (Container.Elements, J));\n    end Remove;\n \n    ---------------"}]}