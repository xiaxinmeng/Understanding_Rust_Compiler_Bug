{"sha": "ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUxM2JkYzdjYjhiMzczNzI1NjNjMGMwYWQ5NDgyYzEyNDlhNmYyNg==", "commit": {"author": {"name": "Sergey Rybin", "email": "rybin@adacore.com", "date": "2010-01-27T11:58:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-27T11:58:53Z"}, "message": "gnat_rm.texi, [...]: Update gnatcheck doc.\n\n2010-01-27  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_rm.texi, gnat_ugn.texi: Update gnatcheck doc.\n\nFrom-SVN: r156279", "tree": {"sha": "b8fac0ebde05707062d9e9cce1edd34c15d14561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8fac0ebde05707062d9e9cce1edd34c15d14561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/comments", "author": null, "committer": null, "parents": [{"sha": "5c39d89f38f15656fa6383af8eecbaaf975ec91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c39d89f38f15656fa6383af8eecbaaf975ec91e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c39d89f38f15656fa6383af8eecbaaf975ec91e"}], "stats": {"total": 212, "additions": 211, "deletions": 1}, "files": [{"sha": "9674a209777d89d134ff541b5757997ff2cc338f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "patch": "@@ -1,3 +1,7 @@\n+2010-01-27  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi: Update gnatcheck doc.\n+\n 2010-01-27  Robert Dewar  <dewar@adacore.com>\n \n \t* sinput.ads, sinput.adb (Sloc_Range): Applies to all nodes, formal"}, {"sha": "abfb4ee0634616c4b4913d9a22ca08153070239a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "patch": "@@ -16454,7 +16454,7 @@ package_spec ::=\n package_identifier ::=\n   @code{Naming} | @code{Builder} | @code{Compiler} | @code{Binder} |\n   @code{Linker} | @code{Finder}  | @code{Cross_Reference} |\n-  @code{gnatls} | @code{IDE}     | @code{Pretty_Printer}\n+  @code{gnatls} | @code{IDE}     | @code{Pretty_Printer} | @code{Check}\n @end smallexample\n \n @subsection Package Naming\n@@ -16775,6 +16775,25 @@ be called with the options specified by Default_Switches of its language,\n if defined.\n @end table\n \n+@subsection package Check\n+\n+@noindent\n+The attributes of package @code{Check}\n+specify the checking rule options to be used\n+when invoking the checking tool @command{gnatcheck}.\n+The following attributes apply to package @code{Check}:\n+\n+@table @code\n+@item     Default_switches\n+This is an associative array attribute. Its\n+domain is a set of language names. Its range is a string list that\n+specifies options to be used when calling @command{gnatcheck} on a source\n+written in that language. The first string in the range should always be\n+@code{\"-rules\"} to specify that all the other options belong to the\n+@code{-rules} section of the parameters of @command{gnatcheck} call.\n+\n+@end table\n+\n @subsection package Pretty_Printer\n \n @noindent"}, {"sha": "ab52d637c95760857c4c678536bcbd2147684f71", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee13bdc7cb8b37372563c0c0ad9482c1249a6f26/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=ee13bdc7cb8b37372563c0c0ad9482c1249a6f26", "patch": "@@ -492,6 +492,7 @@ Verifying Properties Using gnatcheck\n * Project-Wide Checks::\n * Rule exemption::\n * Predefined Rules::\n+* Example of gnatcheck Usage::\n \n Sample Bodies Using gnatstub\n \n@@ -12719,6 +12720,8 @@ case insensitive. The following package names are legal:\n @item\n @code{Cross_Reference}\n @item\n+@code{Check}\n+@item\n @code{Eliminate}\n @item\n @code{Pretty_Printer}\n@@ -14925,6 +14928,10 @@ package @code{Gnatstub} for command STUB\n @item\n package @code{Linker} for command LINK (invoking @code{^gnatlink^gnatlink^})\n \n+@item\n+package @code{Check} for command CHECK\n+(invoking @code{^gnatcheck^gnatcheck^})\n+\n @item\n package @code{Metrics} for command METRIC\n (invoking @code{^gnatmetric^gnatmetric^})\n@@ -20736,6 +20743,7 @@ supplied.\n * Project-Wide Checks::\n * Rule exemption::\n * Predefined Rules::\n+* Example of gnatcheck Usage::\n @end menu\n \n @node Format of the Report File\n@@ -22933,6 +22941,185 @@ Only variable declarations, and not constant declarations, are checked.\n \n This rule has no parameters.\n \n+@node Example of gnatcheck Usage\n+@section Example of @command{gnatcheck} Usage\n+\n+@noindent\n+Here is a simple example. Suppose that in the current directory we have a\n+project file named @file{gnatcheck_example.gpr} with the following content:\n+\n+@smallexample @c projectfile\n+project Gnatcheck_Example is\n+\n+   for Source_Dirs use (\"src\");\n+   for Object_Dir use \"obj\";\n+   for Main use (\"main.adb\");\n+\n+   package Check is\n+      for Default_Switches (\"ada\") use (\"-rules\", \"-from=coding_standard\");\n+   end Check;\n+\n+end Gnatcheck_Example;\n+@end smallexample\n+\n+@noindent\n+And the file named @file{coding_standard} is also located in the current\n+directory and has the following content:\n+\n+@smallexample\n+-----------------------------------------------------\n+-- This is a sample gnatcheck coding standard file --\n+-----------------------------------------------------\n+\n+--  First, turning on rules, that are directly implemented in gnatcheck\n++RAbstract_Type_Declarations\n++RAnonymous_Arrays\n++RLocal_Packages\n++RFloat_Equality_Checks\n++REXIT_Statements_With_No_Loop_Name\n+\n+--  Then, activating compiler checks of interest:\n++RStyle_Checks:e\n+--  This style check checks if a unit name is present on END keyword that\n+--  is the end of the unit declaration\n+@end smallexample\n+\n+@noindent\n+And the subdirectory @file{src} contains the following Ada sources:\n+\n+@file{pack.ads}:\n+\n+@smallexample @c ada\n+package Pack is\n+   type T is abstract tagged private;\n+   procedure P (X : T) is abstract;\n+\n+   package Inner is\n+      type My_Float is digits 8;\n+      function Is_Equal (L, R : My_Float) return Boolean;\n+   end Inner;\n+private\n+   type T is abstract tagged null record;\n+end;\n+@end smallexample\n+\n+@noindent\n+@file{pack.adb}:\n+\n+@smallexample @c ada\n+package body Pack is\n+   package body Inner is\n+      function Is_Equal (L, R : My_Float) return Boolean is\n+      begin\n+         return L = R;\n+      end;\n+   end Inner;\n+end Pack;\n+@end smallexample\n+\n+@noindent\n+and @file{main.adb}\n+\n+@smallexample @c ada\n+with Pack; use Pack;\n+procedure Main is\n+\n+   pragma Annotate\n+     (gnatcheck, Exempt_On, \"Anonymous_Arrays\", \"this one is fine\");\n+   Float_Array : array (1 .. 10) of Inner.My_Float;\n+   pragma Annotate (gnatcheck, Exempt_Off, \"Anonymous_Arrays\");\n+\n+   Another_Float_Array : array (1 .. 10) of Inner.My_Float;\n+\n+   use Inner;\n+\n+   B : Boolean := False;\n+\n+begin\n+   for J in Float_Array'Range loop\n+      if Is_Equal (Float_Array (J), Another_Float_Array (J)) then\n+         B := True;\n+         exit;\n+      end if;\n+   end loop;\n+end Main;\n+@end smallexample\n+\n+@noindent\n+And suppose we call @command{gnatcheck} from the current directory using\n+the @command{gnat} driver:\n+\n+@smallexample\n+   gnat check -Pgnatcheck_example.gpr\n+@end smallexample\n+\n+@noindent\n+As a result, @command{gnatcheck} is called to check all the files from the\n+project @file{gnatcheck_example.gpr} using the coding standard defined by\n+the file @file{coding_standard}. As the result, the @command{gnatcheck}\n+report file named @file{gnatcheck.out} will be created in the current\n+directory, and it will have the following content:\n+\n+@smallexample\n+RULE CHECKING REPORT\n+\n+1. OVERVIEW\n+\n+Date and time of execution: 2009.10.28 14:17\n+Tool version: GNATCHECK (built with ASIS 2.0.R for GNAT Pro 6.3.0w (20091016))\n+Command line:\n+\n+gnatcheck -files=.../GNAT-TEMP-000004.TMP -cargs -gnatec=.../GNAT-TEMP-000003.TMP -rules -from=coding_standard\n+\n+Coding standard (applied rules):\n+   Abstract_Type_Declarations\n+   Anonymous_Arrays\n+   EXIT_Statements_With_No_Loop_Name\n+   Float_Equality_Checks\n+   Local_Packages\n+\n+   Compiler style checks: -gnatye\n+\n+Number of coding standard violations: 6\n+Number of exempted coding standard violations: 1\n+\n+2. DETECTED RULE VIOLATIONS\n+\n+2.1. NON-EXEMPTED VIOLATIONS\n+\n+Source files with non-exempted violations\n+   pack.ads\n+   pack.adb\n+   main.adb\n+\n+List of violations grouped by files, and ordered by increasing source location:\n+\n+pack.ads:2:4: declaration of abstract type\n+pack.ads:5:4: declaration of local package\n+pack.ads:10:30: declaration of abstract type\n+pack.ads:11:1: (style) \"end Pack\" required\n+pack.adb:5:19: use of equality operation for float values\n+pack.adb:6:7: (style) \"end Is_Equal\" required\n+main.adb:9:26: anonymous array type\n+main.adb:19:10: exit statement with no loop name\n+\n+2.2. EXEMPTED VIOLATIONS\n+\n+Source files with exempted violations\n+   main.adb\n+\n+List of violations grouped by files, and ordered by increasing source location:\n+\n+main.adb:6:18: anonymous array type\n+   (this one is fine)\n+\n+2.3. SOURCE FILES WITH NO VIOLATION\n+\n+   No files without violations\n+\n+END OF REPORT\n+@end smallexample\n+\n \n @c *********************************\n @node Creating Sample Bodies Using gnatstub"}]}