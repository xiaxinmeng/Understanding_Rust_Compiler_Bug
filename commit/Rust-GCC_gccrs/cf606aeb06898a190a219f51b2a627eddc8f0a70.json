{"sha": "cf606aeb06898a190a219f51b2a627eddc8f0a70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2MDZhZWIwNjg5OGExOTBhMjE5ZjUxYjJhNjI3ZWRkYzhmMGE3MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-21T23:33:52Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-21T23:33:52Z"}, "message": "Avoid deadlock when finalizer lock is held during gc.\n\nFrom-SVN: r169112", "tree": {"sha": "e329a7851e062128fbf36f866fbdbcf94c2831cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e329a7851e062128fbf36f866fbdbcf94c2831cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf606aeb06898a190a219f51b2a627eddc8f0a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf606aeb06898a190a219f51b2a627eddc8f0a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf606aeb06898a190a219f51b2a627eddc8f0a70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf606aeb06898a190a219f51b2a627eddc8f0a70/comments", "author": null, "committer": null, "parents": [{"sha": "723553bdc16695ecc686a2ffdff6d15bd600b676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/723553bdc16695ecc686a2ffdff6d15bd600b676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/723553bdc16695ecc686a2ffdff6d15bd600b676"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "7c5f40de5efeb0e1869419ae0ab74b69fd5aba52", "filename": "libgo/runtime/go-go.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fgo-go.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fgo-go.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-go.c?ref=cf606aeb06898a190a219f51b2a627eddc8f0a70", "patch": "@@ -315,6 +315,15 @@ gc_stop_handler (int sig __attribute__ ((unused)))\n       return;\n     }\n \n+  if (__sync_bool_compare_and_swap (&pm->holds_finlock, 1, 1))\n+    {\n+      /* Similarly, we can't interrupt the thread while it holds the\n+\t finalizer lock.  Otherwise we can get into a deadlock when\n+\t mark calls runtime_walkfintab.  */\n+      __sync_bool_compare_and_swap (&pm->gcing_for_finlock, 0, 1);\n+      return;\n+    }\n+\n   stop_for_gc ();\n }\n "}, {"sha": "23c0d7a16636d64e313190266be4106038c513b6", "filename": "libgo/runtime/mfinal.c", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fmfinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fmfinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmfinal.c?ref=cf606aeb06898a190a219f51b2a627eddc8f0a70", "patch": "@@ -106,22 +106,26 @@ runtime_addfinalizer(void *p, void (*f)(void*), const struct __go_func_type *ft)\n \t\te->ft = ft;\n \t}\n \n+\tif(!__sync_bool_compare_and_swap(&m->holds_finlock, 0, 1))\n+\t\truntime_throw(\"finalizer deadlock\");\n+\n \truntime_lock(&finlock);\n \tif(!runtime_mlookup(p, &base, nil, nil, &ref) || p != base) {\n \t\truntime_unlock(&finlock);\n+\t\t__sync_bool_compare_and_swap(&m->holds_finlock, 1, 0);\n \t\truntime_throw(\"addfinalizer on invalid pointer\");\n \t}\n \tif(f == nil) {\n \t\tif(*ref & RefHasFinalizer) {\n \t\t\tlookfintab(&fintab, p, 1);\n \t\t\t*ref &= ~RefHasFinalizer;\n \t\t}\n-\t\truntime_unlock(&finlock);\n-\t\treturn;\n+\t\tgoto unlock;\n \t}\n \n \tif(*ref & RefHasFinalizer) {\n \t\truntime_unlock(&finlock);\n+\t\t__sync_bool_compare_and_swap(&m->holds_finlock, 1, 0);\n \t\truntime_throw(\"double finalizer\");\n \t}\n \t*ref |= RefHasFinalizer;\n@@ -156,7 +160,14 @@ runtime_addfinalizer(void *p, void (*f)(void*), const struct __go_func_type *ft)\n \t}\n \n \taddfintab(&fintab, p, e);\n+ unlock:\n \truntime_unlock(&finlock);\n+\n+\t__sync_bool_compare_and_swap(&m->holds_finlock, 1, 0);\n+\n+\tif(__sync_bool_compare_and_swap(&m->gcing_for_finlock, 1, 0)) {\n+\t\t__go_run_goroutine_gc(200);\n+\t}\n }\n \n // get finalizer; if del, delete finalizer.\n@@ -166,9 +177,18 @@ runtime_getfinalizer(void *p, bool del)\n {\n \tFinalizer *f;\n \t\n+\tif(!__sync_bool_compare_and_swap(&m->holds_finlock, 0, 1))\n+\t\truntime_throw(\"finalizer deadlock\");\n+\n \truntime_lock(&finlock);\n \tf = lookfintab(&fintab, p, del);\n \truntime_unlock(&finlock);\n+\n+\t__sync_bool_compare_and_swap(&m->holds_finlock, 1, 0);\n+\tif(__sync_bool_compare_and_swap(&m->gcing_for_finlock, 1, 0)) {\n+\t\t__go_run_goroutine_gc(201);\n+\t}\n+\n \treturn f;\n }\n \n@@ -178,6 +198,9 @@ runtime_walkfintab(void (*fn)(void*), void (*scan)(byte *, int64))\n \tvoid **key;\n \tvoid **ekey;\n \n+\tif(!__sync_bool_compare_and_swap(&m->holds_finlock, 0, 1))\n+\t\truntime_throw(\"finalizer deadlock\");\n+\n \tscan((byte*)&fintab, sizeof fintab);\n \truntime_lock(&finlock);\n \tkey = fintab.key;\n@@ -186,4 +209,9 @@ runtime_walkfintab(void (*fn)(void*), void (*scan)(byte *, int64))\n \t\tif(*key != nil && *key != ((void*)-1))\n \t\t\tfn(*key);\n \truntime_unlock(&finlock);\n+\n+\t__sync_bool_compare_and_swap(&m->holds_finlock, 1, 0);\n+\tif(__sync_bool_compare_and_swap(&m->gcing_for_finlock, 1, 0)) {\n+\t\truntime_throw(\"walkfintab not called from gc\");\n+\t}\n }"}, {"sha": "e43177fef59a7bb9bc2c00a13309dfd807f50267", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf606aeb06898a190a219f51b2a627eddc8f0a70/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=cf606aeb06898a190a219f51b2a627eddc8f0a70", "patch": "@@ -97,6 +97,8 @@ struct\tM\n \tint32\tlocks;\n \tint32\tnomemprof;\n \tint32\tgcing_for_prof;\n+\tint32\tholds_finlock;\n+\tint32\tgcing_for_finlock;\n \tMCache\t*mcache;\n \n \t/* For the list of all threads.  */"}]}