{"sha": "04fc13943f17cca7158731e464da904577ff6163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRmYzEzOTQzZjE3Y2NhNzE1ODczMWU0NjRkYTkwNDU3N2ZmNjE2Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-02-20T21:06:42Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-02-20T21:06:42Z"}, "message": "money_put_members_char.cc: Fix.\n\n\n2002-02-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/22_locale/money_put_members_char.cc: Fix.\n\t* testsuite/22_locale/money_put_members_wchar_t.cc: Fix.\n\n\t* testsuite/27_io/standard_manipulators.cc: New file.\n\n\t* testsuite/27_io/ios_manip_basefield.cc: Check results, now failing.\n\t* testsuite/27_io/ios_manip_fmtflags.cc: Use locale::classic().\n\nFrom-SVN: r49910", "tree": {"sha": "3efc2c1f6522ce939327daf4218495ed1ad6ad03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3efc2c1f6522ce939327daf4218495ed1ad6ad03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04fc13943f17cca7158731e464da904577ff6163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fc13943f17cca7158731e464da904577ff6163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04fc13943f17cca7158731e464da904577ff6163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fc13943f17cca7158731e464da904577ff6163/comments", "author": null, "committer": null, "parents": [{"sha": "9fe2cc05565353eb61325cf3a87f8fc78335d98c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe2cc05565353eb61325cf3a87f8fc78335d98c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe2cc05565353eb61325cf3a87f8fc78335d98c"}], "stats": {"total": 169, "additions": 134, "deletions": 35}, "files": [{"sha": "2e92e2d764ed550386136aa1cccbf4c68586c03b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -1,3 +1,13 @@\n+2002-02-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/22_locale/money_put_members_char.cc: Fix.\t\n+\t* testsuite/22_locale/money_put_members_wchar_t.cc: Fix.\n+\n+\t* testsuite/27_io/standard_manipulators.cc: New file.\n+\n+\t* testsuite/27_io/ios_manip_basefield.cc: Check results, now failing.\n+\t* testsuite/27_io/ios_manip_fmtflags.cc: Use locale::classic().\n+\t\n 2002-02-20  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/os/mingw32/bits/ctype_noninline.h"}, {"sha": "c894b1851ac004f68392fee93b1c842fc4949e12", "filename": "libstdc++-v3/testsuite/22_locale/money_put_members_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -315,7 +315,7 @@ struct My_money_io : public std::moneypunct<char,false>\n \n   pattern do_neg_format() const\n   {\n-    static pattern pat = { { symbol, space, sign, value } };\n+    pattern pat = { { symbol, space, sign, value } };\n     return pat;\n   }\n };"}, {"sha": "09feadd7a9df4eecf5fa39cc819694db9a2c2735", "filename": "libstdc++-v3/testsuite/22_locale/money_put_members_wchar_t.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -315,7 +315,7 @@ struct My_money_io : public std::moneypunct<wchar_t,false>\n \n   pattern do_neg_format() const\n   {\n-    static pattern pat = { { symbol, space, sign, value } };\n+    pattern pat = { { symbol, space, sign, value } };\n     return pat;\n   }\n };"}, {"sha": "e84d2e6705cfab0bf1873a9a37ea441e18bda59e", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_basefield.cc", "status": "modified", "additions": 35, "deletions": 31, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -1,6 +1,6 @@\n // 981027 ncm work with libstdc++v3\n \n-// Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,7 +27,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <iostream>\n #include <sstream>\n #include <locale>\n #include <iomanip>\n@@ -45,31 +44,36 @@ char   MyNP::do_thousands_sep() const { return ' '; }\n int\n test01()\n {\n-  std::cout.imbue(std::locale(std::locale(), new MyNP));\n-  std::cout << std::oct << std::showbase;\n-  std::cout << -0123456l << std::endl;\n-\n-  std::cout << \":\" << std::setw(11);\n-  std::cout << -01234567l << \":\" << std::endl;\n-\n-  std::cout << \":\" << std::setw(11) << std::left;\n-  std::cout << -0123456l << \":\" << std::endl;\n-\n-  std::cout << \":\" << std::setw(11) << std::right;\n-  std::cout << -012345l << \":\" << std::endl;\n-\n-  std::cout << \":\" << std::setw(11) << std::internal;\n-  std::cout << -01234l << \":\" << std::endl;\n-\n-  std::cout << std::hex;\n-  std::cout << std::setfill('0');\n-  std::cout << std::internal;\n-  std::cout << std::showbase;\n-  std::cout << std::setw(16);\n-  std::cout << 0x12345678l << std::endl;\n-#ifdef DEBUG_ASSERT\n-  assert (std::cout.good());\n-#endif\n+  bool test = true;\n+  const char lit[] = \"-0 123 456\\n:-01 234 567:\\n:-0 123 456 :\"\n+                     \"\\n:   -012 345:\\n:-    01 234:\\n0x000012 345 678\";\n+  std::ostringstream oss;\n+  oss.imbue(std::locale(std::locale(), new MyNP));\n+  oss << std::oct << std::showbase;\n+  oss << -0123456l << std::endl;\n+\n+  oss << \":\" << std::setw(11);\n+  oss << -01234567l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::left;\n+  oss << -0123456l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::right;\n+  oss << -012345l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::internal;\n+  oss << -01234l << \":\" << std::endl;\n+\n+  oss << std::hex;\n+  oss << std::setfill('0');\n+  oss << std::internal;\n+  oss << std::showbase;\n+  oss << std::setw(16);\n+  oss << 0x12345678l << std::endl;\n+\n+  VERIFY( oss.good() );\n+  VERIFY( oss.str() == lit );\n+\n   return 0;\n }\n \n@@ -94,14 +98,13 @@ test02()\n   VERIFY( strbuf.str() == \"cisco \" ); \n   strbuf.str(str_blank);\n \n-#ifdef DEBUG_ASSERT\n-  assert (test);\n-#endif\n+  VERIFY( test );\n   return 0;\n }\n \n int \n-main() {\n+main() \n+{\n   test01();\n   test02();\n   return 0;\n@@ -116,3 +119,4 @@ main() {\n :-    01 234:\n 0x000012 345 678\n */\n+"}, {"sha": "64b1b85f6d26ce804a09d4d6fb689d509641f6a0", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_fmtflags.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -1,6 +1,7 @@\n // 981027 ncm work with libstdc++v3\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -69,7 +70,7 @@ test01()\n   oss << \":\" << std::setw(3) << std::left << true << \":\" << std::endl;\n   oss << \":\" << std::setw(3) << std::right << false << \":\" << std::endl;\n \n-  std::locale loc = std::locale (std::locale(), new MyNP);\n+  std::locale loc = std::locale (std::locale::classic(), new MyNP);\n   oss.imbue(loc);\n \n   oss << std::boolalpha;"}, {"sha": "71822372fc83d8e085b9cd0755f183cae5837bea", "filename": "libstdc++-v3/testsuite/27_io/standard_manipulators.cc", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstandard_manipulators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fc13943f17cca7158731e464da904577ff6163/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstandard_manipulators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstandard_manipulators.cc?ref=04fc13943f17cca7158731e464da904577ff6163", "patch": "@@ -0,0 +1,84 @@\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.3 - Standard manipulators\n+\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  string s(\"john coltrane, a love supreme\");\n+  istringstream  iss(s);\n+  ostringstream  oss;\n+\n+  // resetiosflags\n+  resetiosflags(ios_base::boolalpha);\n+  iss >> resetiosflags(ios_base::boolalpha);\n+  VERIFY(iss.good());\n+  oss << resetiosflags(ios_base::boolalpha);\n+  VERIFY(oss.good());\n+\n+  // setiosflags\n+  setiosflags(ios_base::skipws);\n+  iss >> setiosflags(ios_base::skipws);\n+  VERIFY(iss.good());\n+  oss << setiosflags(ios_base::skipws);\n+  VERIFY(oss.good());\n+\n+  // setbase\n+  setbase(8);\n+  iss >> setbase(8);\n+  VERIFY(iss.good());\n+  oss << setbase(8);\n+  VERIFY(oss.good());\n+\n+  // setfil\n+  setfill('a');\n+  iss >>  setfill('a');\n+  VERIFY(iss.good());\n+  oss << setfill('a');\n+  VERIFY(oss.good());\n+ \n+  // setprecision\n+  setprecision(4);\n+  iss >> setprecision(4);\n+  VERIFY(iss.good());\n+  oss << setprecision(4);\n+  VERIFY(oss.good());\n+  \n+  // setprecision\n+  setw(7);\n+  iss >> setw(7);\n+  VERIFY(iss.good());\n+  oss << setw(7);\n+  VERIFY(oss.good());\n+}\n+\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}