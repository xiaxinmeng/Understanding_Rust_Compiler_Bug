{"sha": "af116cae675e31b999844b7243c01bed9517c51c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYxMTZjYWU2NzVlMzFiOTk5ODQ0YjcyNDNjMDFiZWQ5NTE3YzUxYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-06T15:47:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-06T15:47:12Z"}, "message": "re PR debug/59992 (Compilation of insn-recog.c too slow due to var-tracking)\n\n\tPR debug/59992\n\t* var-tracking.c (adjust_mems): Before adding a SET\n\tto amd->side_effects, adjust it's SET_SRC using\n\tsimplify_replace_fn_rtx.\n\n\t* gcc.dg/pr59992.c: New test.\n\nFrom-SVN: r207562", "tree": {"sha": "8de46f81cd70d54fc09484c5fbcc0e6550226bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8de46f81cd70d54fc09484c5fbcc0e6550226bb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af116cae675e31b999844b7243c01bed9517c51c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af116cae675e31b999844b7243c01bed9517c51c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af116cae675e31b999844b7243c01bed9517c51c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af116cae675e31b999844b7243c01bed9517c51c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f5e5e02b74643e16969a2a6e4bbee77185efaf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f5e5e02b74643e16969a2a6e4bbee77185efaf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f5e5e02b74643e16969a2a6e4bbee77185efaf0"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "fcbc4567793dfe01b09ffcd879cfa22f85e527e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af116cae675e31b999844b7243c01bed9517c51c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af116cae675e31b999844b7243c01bed9517c51c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af116cae675e31b999844b7243c01bed9517c51c", "patch": "@@ -1,3 +1,10 @@\n+2014-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/59992\n+\t* var-tracking.c (adjust_mems): Before adding a SET\n+\tto amd->side_effects, adjust it's SET_SRC using\n+\tsimplify_replace_fn_rtx.\n+\n 2014-02-06  Alan Modra  <amodra@gmail.com>\n \n \tPR target/60032"}, {"sha": "e0daf52824c2df658c935f7e3877f8ab35de0def", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af116cae675e31b999844b7243c01bed9517c51c", "patch": "@@ -1,3 +1,8 @@\n+2014-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/59992\n+\t* gcc.dg/pr59992.c: New test.\n+\n 2014-02-06  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* g++.dg/cpp0x/constexpr-attribute2.C: Restrict to target"}, {"sha": "5434a2fe93532078f762264cee9a74a5692453bb", "filename": "gcc/testsuite/gcc.dg/pr59992.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59992.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59992.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59992.c?ref=af116cae675e31b999844b7243c01bed9517c51c", "patch": "@@ -0,0 +1,17 @@\n+/* PR debug/59992 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target run_expensive_tests } */\n+/* { dg-options \"-O2 -g\" } */\n+/* { dg-timeout-factor 16.0 } */\n+\n+#define A(n) if (p[n]) { extern void foo##n (int, int, double, int, int); foo##n (p[n], 5, 8.0, p[n] + p[n + 1], 9); return; }\n+#define B(n) A(n##0) A(n##1) A(n##2) A(n##3) A(n##4) A(n##5) A(n##6) A(n##7) A(n##8) A(n##9)\n+#define C(n) B(n##0) B(n##1) B(n##2) B(n##3) B(n##4) B(n##5) B(n##6) B(n##7) B(n##8) B(n##9)\n+#define D(n) C(n##0) C(n##1) C(n##2) C(n##3) C(n##4) C(n##5) C(n##6) C(n##7) C(n##8) C(n##9)\n+#define E(n) D(n##0) D(n##1) D(n##2) D(n##3) D(n##4) D(n##5) D(n##6) D(n##7) D(n##8) D(n##9)\n+\n+void\n+foo (int *p)\n+{\n+  E(1)\n+}"}, {"sha": "a13cac79f37b1690b70f0c403d157c057810a08e", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af116cae675e31b999844b7243c01bed9517c51c/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=af116cae675e31b999844b7243c01bed9517c51c", "patch": "@@ -1067,10 +1067,13 @@ adjust_mems (rtx loc, const_rtx old_rtx, void *data)\n \t\t\t\t\t? GET_MODE_SIZE (amd->mem_mode)\n \t\t\t\t\t: -GET_MODE_SIZE (amd->mem_mode),\n \t\t\t\t\tGET_MODE (loc)));\n+      store_save = amd->store;\n+      amd->store = false;\n+      tem = simplify_replace_fn_rtx (tem, old_rtx, adjust_mems, data);\n+      amd->store = store_save;\n       amd->side_effects = alloc_EXPR_LIST (0,\n \t\t\t\t\t   gen_rtx_SET (VOIDmode,\n-\t\t\t\t\t\t\tXEXP (loc, 0),\n-\t\t\t\t\t\t\ttem),\n+\t\t\t\t\t\t\tXEXP (loc, 0), tem),\n \t\t\t\t\t   amd->side_effects);\n       return addr;\n     case PRE_MODIFY:\n@@ -1080,10 +1083,14 @@ adjust_mems (rtx loc, const_rtx old_rtx, void *data)\n \taddr = XEXP (loc, 0);\n       gcc_assert (amd->mem_mode != VOIDmode);\n       addr = simplify_replace_fn_rtx (addr, old_rtx, adjust_mems, data);\n+      store_save = amd->store;\n+      amd->store = false;\n+      tem = simplify_replace_fn_rtx (XEXP (loc, 1), old_rtx,\n+\t\t\t\t     adjust_mems, data);\n+      amd->store = store_save;\n       amd->side_effects = alloc_EXPR_LIST (0,\n \t\t\t\t\t   gen_rtx_SET (VOIDmode,\n-\t\t\t\t\t\t\tXEXP (loc, 0),\n-\t\t\t\t\t\t\tXEXP (loc, 1)),\n+\t\t\t\t\t\t\tXEXP (loc, 0), tem),\n \t\t\t\t\t   amd->side_effects);\n       return addr;\n     case SUBREG:"}]}