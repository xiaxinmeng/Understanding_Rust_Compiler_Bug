{"sha": "941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxY2MwNWFmZDgzYjJhMWFmNDRhOThkN2M2NTk4Yzk0N2VhNmEzZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-05-23T01:44:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-23T01:44:05Z"}, "message": "alpha.c (alpha_fnname): New static variable.\n\n\t* config/alpha/alpha.c (alpha_fnname): New static variable.\n\t(print_operand, case '~'): New case.\n\t(alpha_expand_prologue): Emit prologue_ldgp insn if needed.\n\t(alpha_start_function): Set alpha_fnname.\n\tWrite \"ng\" label if no ldgp; don't write ldgp insn.\n\t* config/alpha/alpha.h (PRINT_OPERAND_PUNCT_VALID_P): New case '~'.\n\t* config/alpha/alpha.md (prologue_ldgp): New define_insn.\n\nFrom-SVN: r34097", "tree": {"sha": "77a4dc76d082a4cc5b7802cec5c706d80b7e7a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77a4dc76d082a4cc5b7802cec5c706d80b7e7a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/comments", "author": null, "committer": null, "parents": [{"sha": "421844e7209277ce775c5b635a5cc76906df94e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/421844e7209277ce775c5b635a5cc76906df94e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/421844e7209277ce775c5b635a5cc76906df94e9"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "ab84d2460a8c875fc03854c12f16aa1543511ff3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "patch": "@@ -1,3 +1,13 @@\n+Mon May 22 21:49:00 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* config/alpha/alpha.c (alpha_fnname): New static variable.\n+\t(print_operand, case '~'): New case.\n+\t(alpha_expand_prologue): Emit prologue_ldgp insn if needed.\n+\t(alpha_start_function): Set alpha_fnname.\n+\tWrite \"ng\" label if no ldgp; don't write ldgp insn.\n+\t* config/alpha/alpha.h (PRINT_OPERAND_PUNCT_VALID_P): New case '~'.\n+\t* config/alpha/alpha.md (prologue_ldgp): New define_insn.\n+\n Mon May 22 11:30:48 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \n \t* jump.c (jump_optimize_1): Don't increment LABEL_NUSES"}, {"sha": "483ae69274c22f261f52a90a54520269f82faa4c", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "patch": "@@ -97,6 +97,10 @@ static int alpha_function_needs_gp;\n \n static int alpha_sr_alias_set;\n \n+/* The assembler name of the current function.  */\n+\n+static const char *alpha_fnname;\n+\n /* Declarations of static functions.  */\n static void alpha_set_memflags_1\n   PARAMS ((rtx, int, int, int));\n@@ -3243,6 +3247,11 @@ print_operand (file, x, code)\n \n   switch (code)\n     {\n+    case '~':\n+      /* Print the assembler name of the current function.  */\n+      assemble_name (file, alpha_fnname);\n+      break;\n+\n     case '&':\n       /* Generates fp-rounding mode suffix: nothing for normal, 'c' for\n \t chopped, 'm' for minus-infinity, and 'd' for dynamic rounding\n@@ -4144,6 +4153,14 @@ alpha_expand_prologue ()\n \n   alpha_sa_mask (&imask, &fmask);\n \n+  /* Emit an insn to reload GP, if needed.  */\n+  if (!TARGET_OPEN_VMS && !TARGET_WINDOWS_NT)\n+    {\n+      alpha_function_needs_gp = alpha_does_function_need_gp ();\n+      if (alpha_function_needs_gp)\n+\temit_insn (gen_prologue_ldgp ());\n+    }\n+\n   /* Adjust the stack by the frame size.  If the frame size is > 4096\n      bytes, we need to be sure we probe somewhere in the first and last\n      4096 bytes (we can probably get away without the latter test) and\n@@ -4369,6 +4386,7 @@ alpha_start_function (file, fnname, decl)\n   char *entry_label = (char *) alloca (strlen (fnname) + 6);\n   int i;\n \n+  alpha_fnname = fnname;\n   sa_size = alpha_sa_size ();\n \n   frame_size = get_frame_size ();\n@@ -4413,6 +4431,15 @@ alpha_start_function (file, fnname, decl)\n       fputs (\"\\t.ent \", file);\n       assemble_name (file, fnname);\n       putc ('\\n', file);\n+\n+      /* If the function needs GP, we'll write the \"..ng\" label there.\n+\t Otherwise, do it here.  */\n+      if (! alpha_function_needs_gp)\n+\t{\n+\t  putc ('$', file);\n+\t  assemble_name (file, fnname);\n+\t  fputs (\"..ng:\\n\", file);\n+\t}\n     }\n \n   strcpy (entry_label, fnname);\n@@ -4494,20 +4521,6 @@ alpha_start_function (file, fnname, decl)\n \t}\n     }\n \n-  /* Emit GP related things.  It is rather unfortunate about the alignment\n-     issues surrounding a CODE_LABEL that forces us to do the label in \n-     plain text.  */\n-  if (!TARGET_OPEN_VMS && !TARGET_WINDOWS_NT)\n-    {\n-      alpha_function_needs_gp = alpha_does_function_need_gp ();\n-      if (alpha_function_needs_gp)\n-\tfputs (\"\\tldgp $29,0($27)\\n\", file);\n-\n-      putc ('$', file);\n-      assemble_name (file, fnname);\n-      fputs (\"..ng:\\n\", file);\n-    }\n-\n #ifdef OPEN_VMS\n   /* Ifdef'ed cause readonly_section and link_section are only\n      available then.  */"}, {"sha": "2d9be06f17fdd07189123c9556aea757b1f06193", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "patch": "@@ -2270,9 +2270,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define PRINT_OPERAND(FILE, X, CODE)  print_operand (FILE, X, CODE)\n \n /* Determine which codes are valid without a following integer.  These must\n-   not be alphabetic (the characters are chosen so that\n-   PRINT_OPERAND_PUNCT_VALID_P translates into a simple range change when\n-   using ASCII).\n+   not be alphabetic.\n+\n+   ~    Generates the name of the current function.\n \n    &\tGenerates fp-rounding mode suffix: nothing for normal, 'c' for\n    \tchopped, 'm' for minus-infinity, and 'd' for dynamic rounding\n@@ -2304,7 +2304,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define PRINT_OPERAND_PUNCT_VALID_P(CODE)\t\t\t\t\\\n   ((CODE) == '&' || (CODE) == '`' || (CODE) == '\\'' || (CODE) == '('\t\\\n-   || (CODE) == ')' || (CODE) == '+' || (CODE) == ',' || (CODE) == '-')\n+   || (CODE) == ')' || (CODE) == '+' || (CODE) == ',' || (CODE) == '-'\t\\\n+   || (CODE) == '~')\n \f\n /* Print a memory address as an operand to reference that memory location.  */\n "}, {"sha": "835ffee14f2ae14e96d3a16f7ef1a7fcb4cadb24", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941cc05afd83b2a1af44a98d7c6598c947ea6a3d/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=941cc05afd83b2a1af44a98d7c6598c947ea6a3d", "patch": "@@ -5487,7 +5487,16 @@\n (define_expand \"prologue\"\n   [(clobber (const_int 0))]\n   \"\"\n-  \"alpha_expand_prologue (); DONE;\")\n+  \"\n+{\n+  alpha_expand_prologue ();\n+  DONE;\n+}\")\n+\n+(define_insn \"prologue_ldgp\"\n+  [(unspec_volatile [(const_int 0)] 9)]\n+  \"\"\n+  \"ldgp $29,0($27)\\\\n$%~..ng:\")\n \n (define_insn \"init_fp\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}]}