{"sha": "2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmNTZhNDFlNmEyYjM3ZWQ3YTYzOGE3OWEyZjkyMGZlOTE0OTU1MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-04-11T15:48:45Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-04-11T15:48:45Z"}, "message": "* sparc-protos.h: Delete redundant prototypes.\n\nFrom-SVN: r41255", "tree": {"sha": "520ebf2a186b0d7194dbcba598f97220cca1030d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/520ebf2a186b0d7194dbcba598f97220cca1030d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef56a41e6a2b37ed7a638a79a2f920fe9149551/comments", "author": null, "committer": null, "parents": [{"sha": "550d7942979e6c4cb110978096f1c86cb99098a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550d7942979e6c4cb110978096f1c86cb99098a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550d7942979e6c4cb110978096f1c86cb99098a3"}], "stats": {"total": 45, "additions": 4, "deletions": 41}, "files": [{"sha": "4331df151689d711f60d766c11198b73210ccd05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef56a41e6a2b37ed7a638a79a2f920fe9149551/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef56a41e6a2b37ed7a638a79a2f920fe9149551/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "patch": "@@ -1,3 +1,7 @@\n+2001-04-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* sparc-protos.h: Delete redundant prototypes.\n+\n 2001-04-11  Vladimir Makarov  <vmakarov@toke.toronto.redhat.com>\n \n \t* reload.c (push_reload): Add condition missed in SUBREG byte"}, {"sha": "523be16cc959747fcdc9215d78c11651b036c163", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef56a41e6a2b37ed7a638a79a2f920fe9149551/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef56a41e6a2b37ed7a638a79a2f920fe9149551/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=2ef56a41e6a2b37ed7a638a79a2f920fe9149551", "patch": "@@ -67,7 +67,6 @@ extern void sparc_function_profiler PARAMS ((FILE *, int));\n extern void sparc_function_block_profiler PARAMS ((FILE *, int));\n extern void sparc_block_profiler PARAMS ((FILE *, int));\n extern void sparc_function_block_profiler_exit PARAMS ((FILE *));\n-extern int compute_frame_size PARAMS ((int, int));\n extern void sparc_override_options PARAMS ((void));\n extern int leaf_return_peephole_ok PARAMS ((void));\n extern void sparc_output_scratch_registers PARAMS ((FILE *));\n@@ -102,69 +101,29 @@ extern void emit_v9_brxx_insn PARAMS ((enum rtx_code, rtx, rtx));\n extern void output_double_int PARAMS ((FILE *, rtx));\n extern void print_operand PARAMS ((FILE *, rtx, int));\n extern int addrs_ok_for_ldd_peep PARAMS ((rtx, rtx));\n-extern int arith10_double_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith10_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith11_double_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith11_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith_double_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_double_4096_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith_double_add_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_4096_operand PARAMS ((rtx, enum machine_mode));\n-extern int arith_add_operand PARAMS ((rtx, enum machine_mode));\n-extern int call_operand_address PARAMS ((rtx, enum machine_mode));\n-extern int input_operand PARAMS ((rtx, enum machine_mode));\n extern int zero_operand PARAMS ((rtx, enum machine_mode));\n-extern int const64_operand PARAMS ((rtx, enum machine_mode));\n-extern int const64_high_operand PARAMS ((rtx, enum machine_mode));\n-extern int cc_arithop PARAMS ((rtx, enum machine_mode));\n-extern int cc_arithopn PARAMS ((rtx, enum machine_mode));\n-extern int data_segment_operand PARAMS ((rtx, enum machine_mode));\n extern int eligible_for_epilogue_delay PARAMS ((rtx, int));\n extern int eligible_for_return_delay PARAMS ((rtx));\n extern int eligible_for_sibcall_delay PARAMS ((rtx));\n extern int emit_move_sequence PARAMS ((rtx, enum machine_mode));\n-extern int extend_op PARAMS ((rtx, enum machine_mode));\n-extern int fcc_reg_operand PARAMS ((rtx, enum machine_mode));\n-extern int fp_zero_operand PARAMS ((rtx, enum machine_mode));\n extern int fp_sethi_p PARAMS ((rtx));\n extern int fp_mov_p PARAMS ((rtx));\n extern int fp_high_losum_p PARAMS ((rtx));\n-extern int icc_or_fcc_reg_operand PARAMS ((rtx, enum machine_mode));\n-extern int label_ref_operand PARAMS ((rtx, enum machine_mode));\n extern int mem_min_alignment PARAMS ((rtx, int));\n-extern int noov_compare_op PARAMS ((rtx, enum machine_mode));\n extern int pic_address_needs_scratch PARAMS ((rtx));\n-extern int reg_or_0_operand PARAMS ((rtx, enum machine_mode));\n-extern int reg_or_nonsymb_mem_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_unused_after PARAMS ((rtx, rtx));\n extern int register_ok_for_ldd PARAMS ((rtx));\n extern int registers_ok_for_ldd_peep PARAMS ((rtx, rtx));\n-extern int restore_operand PARAMS ((rtx, enum machine_mode));\n-extern int small_int PARAMS ((rtx, enum machine_mode));\n-extern int small_int_or_double PARAMS ((rtx, enum machine_mode));\n-extern int sp64_medium_pic_operand PARAMS ((rtx, enum machine_mode));\n extern int sparc_flat_eligible_for_epilogue_delay PARAMS ((rtx, int));\n-extern int splittable_immediate_memory_operand PARAMS ((rtx, enum machine_mode));\n-extern int splittable_symbolic_memory_operand PARAMS ((rtx, enum machine_mode));\n extern int sparc_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n-extern int symbolic_memory_operand PARAMS ((rtx, enum machine_mode));\n-extern int symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int text_segment_operand PARAMS ((rtx, enum machine_mode));\n-extern int uns_small_int PARAMS ((rtx, enum machine_mode));\n-extern int v9_regcmp_op PARAMS ((rtx, enum machine_mode));\n extern int v9_regcmp_p PARAMS ((enum rtx_code));\n extern char *sparc_v8plus_shift PARAMS ((rtx *, rtx, const char *));\n /* Function used for V8+ code generation.  Returns 1 if the high\n    32 bits of REG are 0 before INSN.  */   \n extern int sparc_check_64 PARAMS ((rtx, rtx));\n extern int sparc_return_peephole_ok PARAMS ((rtx, rtx));\n-extern int intreg_operand PARAMS ((rtx, enum machine_mode));\n-extern int call_operand PARAMS ((rtx, enum machine_mode));\n-extern int eq_or_neq PARAMS ((rtx, enum machine_mode));\n-extern int normal_comp_operator PARAMS ((rtx, enum machine_mode));\n-extern int uns_arith_operand PARAMS ((rtx, enum machine_mode));\n-extern int clobbered_register PARAMS ((rtx, enum machine_mode));\n extern rtx gen_df_reg PARAMS ((rtx, int));\n #endif /* RTX_CODE */\n "}]}