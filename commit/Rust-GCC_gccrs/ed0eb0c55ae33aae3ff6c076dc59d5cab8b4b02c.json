{"sha": "ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwZWIwYzU1YWUzM2FhZTNmZjZjMDc2ZGM1OWQ1Y2FiOGI0YjAyYw==", "commit": {"author": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-19T12:46:26Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-19T12:46:26Z"}, "message": "Improve gimple.vim syntax file.\n\nFrom-SVN: r261742", "tree": {"sha": "4da70689a62024bfef27d51651d4d5eb9faf9f5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4da70689a62024bfef27d51651d4d5eb9faf9f5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c/comments", "author": null, "committer": null, "parents": [{"sha": "58508d3f3a9986157d57dca0cc154137bd99d9b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58508d3f3a9986157d57dca0cc154137bd99d9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58508d3f3a9986157d57dca0cc154137bd99d9b6"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "bee1319e57593196d64787a92308044c24d526dd", "filename": "contrib/gimple.vim", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c/contrib%2Fgimple.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c/contrib%2Fgimple.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgimple.vim?ref=ed0eb0c55ae33aae3ff6c076dc59d5cab8b4b02c", "patch": "@@ -89,6 +89,14 @@ if s:unknown_tree_is_error\n     syn match   gimpleUnknownTree   \"\\vUnknown tree: \\w+\"\n end\n \n+\" Ignore probability of edges and basic blocks\n+\"  <bb 2> [70.00%]:\n+syn match   gimpleFrequency     \" \\[\\d*\\.\\d*%\\]\"\n+\n+\" Ignore basic block with a count\n+\"  <bb 10> [local count: 118111601]:\n+syn match   gimpleBBCount       \"\\v\\[(local )?count: \\d+\\]\"\n+\n \" Numbers\n syn match   gimpleNumber        \"\\v([^.a-zA-Z0-9_])\\zs-?\\d+B?\"\n syn match   gimpleFloat         \"\\v\\W\\zs-?\\d*\\.\\d+(e\\+\\d+)?\"\n@@ -109,6 +117,13 @@ syn match   gimpleGotoLabel     \"\\v<bb \\d+\\>[^:]\"\n \" Line numbers, generated with -fdump-tree-*-lineno\n syn match   gimpleLineNo        \"\\v\\[[^\\]]+:\\d+:\\d+\\]\"\n \n+\" DEBUG statements\n+syn match   gimpleDebug         \"\\v# DEBUG.*\"\n+\n+\" GIMPLE predict statement\n+syn match   gimplePrediction    \"\\v\\/\\/ predicted.*\"\n+\n+\n \" Misc C/C++-like keywords\n syn keyword gimpleStructure     struct union enum typedef class\n syn keyword gimpleStorageClass  static register auto volatile extern const\n@@ -134,6 +149,10 @@ hi def link gimpleAnnotationOp  Debug\n hi def link gimpleAnnotationMark Debug\n hi def link gimpleString        String\n hi def link gimpleUnknownTree   Error\n+hi def link gimpleDebug         Debug\n+hi def link gimplePrediction    Debug\n+hi def link gimpleFrequency     Debug\n+hi def link gimpleBBCount       Debug\n \n let b:current_syntax = \"gimple\"\n "}]}