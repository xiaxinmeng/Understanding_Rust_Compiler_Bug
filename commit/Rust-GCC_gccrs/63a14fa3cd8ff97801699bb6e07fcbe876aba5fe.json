{"sha": "63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhMTRmYTNjZDhmZjk3ODAxNjk5YmI2ZTA3ZmNiZTg3NmFiYTVmZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-10-04T14:19:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-10-04T14:19:48Z"}, "message": "tree-ssa-sccvn.c (vn_reference_op_eq): Use types_compatible_p instead of pointer equality.\n\n2008-10-04  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (vn_reference_op_eq): Use types_compatible_p\n\tinstead of pointer equality.\n\t(vn_nary_op_eq): Likewise.\n\n\t* gcc.dg/tree-ssa/ssa-pre-21.c: New testcase.\n\nFrom-SVN: r140868", "tree": {"sha": "2dd072aa0bde225c3eaae2c8ac93ae95850b97da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd072aa0bde225c3eaae2c8ac93ae95850b97da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f913dcd658ab79063f58fde617c2c86ab15733ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f913dcd658ab79063f58fde617c2c86ab15733ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f913dcd658ab79063f58fde617c2c86ab15733ec"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "30fe2452a8a26fab7bd4e27022f4798b39c8ab0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "patch": "@@ -1,3 +1,9 @@\n+2008-10-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (vn_reference_op_eq): Use types_compatible_p\n+\tinstead of pointer equality.\n+\t(vn_nary_op_eq): Likewise.\n+\n 2008-10-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config/rs6000/rs6000.md (fseldfsf4): Add TARGET_SINGLE_FLOAT "}, {"sha": "c0687c9866bc04a9ec139a597370097bd3b34b0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "patch": "@@ -1,3 +1,7 @@\n+2008-10-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-pre-21.c: New testcase.\n+\n 2008-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/37726"}, {"sha": "65a73d2a0f3edd33e93fb0518754f1c3327a30cb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-21.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-21.c?ref=63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-pre\" } */\n+\n+long\n+NumSift (long *array, unsigned long k)\n+{\n+  if (array[k] < array[k + 1L])\n+    ++k;\n+  return array[k];\n+}\n+\n+/* There should be only two loads left.  */\n+\n+/* { dg-final { scan-tree-dump-times \"= \\\\\\*D\" 2 \"pre\" } } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "082a2785ff7a5a30f69f05f716d8a3bc7825fff1", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a14fa3cd8ff97801699bb6e07fcbe876aba5fe/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=63a14fa3cd8ff97801699bb6e07fcbe876aba5fe", "patch": "@@ -387,7 +387,7 @@ vn_reference_op_eq (const void *p1, const void *p2)\n   const_vn_reference_op_t const vro1 = (const_vn_reference_op_t) p1;\n   const_vn_reference_op_t const vro2 = (const_vn_reference_op_t) p2;\n   return vro1->opcode == vro2->opcode\n-    && vro1->type == vro2->type\n+    && types_compatible_p (vro1->type, vro2->type)\n     && expressions_equal_p (vro1->op0, vro2->op0)\n     && expressions_equal_p (vro1->op1, vro2->op1)\n     && expressions_equal_p (vro1->op2, vro2->op2);\n@@ -1184,7 +1184,7 @@ vn_nary_op_eq (const void *p1, const void *p2)\n   unsigned i;\n \n   if (vno1->opcode != vno2->opcode\n-      || vno1->type != vno2->type)\n+      || !types_compatible_p (vno1->type, vno2->type))\n     return false;\n \n   for (i = 0; i < vno1->length; ++i)"}]}