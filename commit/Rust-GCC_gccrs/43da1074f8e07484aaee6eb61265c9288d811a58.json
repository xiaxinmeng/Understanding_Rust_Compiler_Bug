{"sha": "43da1074f8e07484aaee6eb61265c9288d811a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNkYTEwNzRmOGUwNzQ4NGFhZWU2ZWI2MTI2NWM5Mjg4ZDgxMWE1OA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:21:53Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:21:53Z"}, "message": "[ARM/AArch64][testsuite] Add vmull_lane tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmull_lane.c: New file.\n\nFrom-SVN: r219943", "tree": {"sha": "d2c2573cfce7a0914197069cc3224c95698154bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2c2573cfce7a0914197069cc3224c95698154bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43da1074f8e07484aaee6eb61265c9288d811a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43da1074f8e07484aaee6eb61265c9288d811a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43da1074f8e07484aaee6eb61265c9288d811a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43da1074f8e07484aaee6eb61265c9288d811a58/comments", "author": null, "committer": null, "parents": [{"sha": "e5584668dc90a4fe5e605f1a35415c976d3c8a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5584668dc90a4fe5e605f1a35415c976d3c8a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5584668dc90a4fe5e605f1a35415c976d3c8a01"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "d60a74ca28681d1a1ef27b85cdd453c5b9f12ec5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43da1074f8e07484aaee6eb61265c9288d811a58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43da1074f8e07484aaee6eb61265c9288d811a58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43da1074f8e07484aaee6eb61265c9288d811a58", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmull_lane.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmull.c: New file."}, {"sha": "d3aa879c2e1a6c238ff91c7c8a573e83f004ae58", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmull_lane.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43da1074f8e07484aaee6eb61265c9288d811a58/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43da1074f8e07484aaee6eb61265c9288d811a58/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_lane.c?ref=43da1074f8e07484aaee6eb61265c9288d811a58", "patch": "@@ -0,0 +1,66 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x4000, 0x4000, 0x4000, 0x4000 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x2000, 0x2000 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x4000, 0x4000, 0x4000, 0x4000 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x2000, 0x2000 };\n+\n+#define TEST_MSG \"VMULL_LANE\"\n+void exec_vmull_lane (void)\n+{\n+  /* vector_res = vmull_lane(vector,vector2,lane), then store the result.  */\n+#define TEST_VMULL_LANE(T1, T2, W, W2, N, L)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    vmull##_lane_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t\t VECT_VAR(vector2, T1, W, N),\t\t\t\\\n+\t\t\t L);\t\t\t\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize vector.  */\n+  VDUP(vector, , int, s, 16, 4, 0x1000);\n+  VDUP(vector, , int, s, 32, 2, 0x1000);\n+  VDUP(vector, , uint, u, 16, 4, 0x1000);\n+  VDUP(vector, , uint, u, 32, 2, 0x1000);\n+\n+  /* Initialize vector2.  */\n+  VDUP(vector2, , int, s, 16, 4, 0x4);\n+  VDUP(vector2, , int, s, 32, 2, 0x2);\n+  VDUP(vector2, , uint, u, 16, 4, 0x4);\n+  VDUP(vector2, , uint, u, 32, 2, 0x2);\n+\n+  /* Choose lane arbitrarily.  */\n+  TEST_VMULL_LANE(int, s, 16, 32, 4, 2);\n+  TEST_VMULL_LANE(int, s, 32, 64, 2, 1);\n+  TEST_VMULL_LANE(uint, u, 16, 32, 4, 2);\n+  TEST_VMULL_LANE(uint, u, 32, 64, 2, 1);\n+\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vmull_lane ();\n+  return 0;\n+}"}]}