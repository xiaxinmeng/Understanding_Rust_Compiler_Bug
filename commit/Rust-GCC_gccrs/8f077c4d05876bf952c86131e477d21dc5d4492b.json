{"sha": "8f077c4d05876bf952c86131e477d21dc5d4492b", "node_id": "C_kwDOANBUbNoAKDhmMDc3YzRkMDU4NzZiZjk1MmM4NjEzMWU0NzdkMjFkYzVkNDQ5MmI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-09-25T08:43:27Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:32Z"}, "message": "ada: Allow reuse of Enclosing_Declaration_Or_Statement by GNATprove\n\nMove routine Enclosing_Declaration_Or_Statement from body of Sem_Res to spec\nof Sem_Util, so it can be reused. In particular, GNATprove needs this\nfunctionality to climb from an arbitrary subexpression with target_name (@)\nto the enclosing assignment statement. Behaviour of the compiler is\nunaffected.\n\ngcc/ada/\n\n\t* sem_res.adb (Enclosing_Declaration_Or_Statement): Moved to\n\tSem_Util.\n\t* sem_util.ads (Enclosing_Declaration_Or_Statement): Moved from\n\tSem_Res.\n\t* sem_util.adb (Enclosing_Declaration_Or_Statement): Likewise.", "tree": {"sha": "a0a1ff0b0855c48d0e44929b186cd3e4fc452dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0a1ff0b0855c48d0e44929b186cd3e4fc452dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f077c4d05876bf952c86131e477d21dc5d4492b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f077c4d05876bf952c86131e477d21dc5d4492b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f077c4d05876bf952c86131e477d21dc5d4492b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f077c4d05876bf952c86131e477d21dc5d4492b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f073f3355643587073ce224563f509332043c381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f073f3355643587073ce224563f509332043c381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f073f3355643587073ce224563f509332043c381"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "402da430b2fe834c6b2cb4f2237809d7162699e6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=8f077c4d05876bf952c86131e477d21dc5d4492b", "patch": "@@ -895,10 +895,6 @@ package body Sem_Res is\n    ------------------------------\n \n    function Check_Infinite_Recursion (Call : Node_Id) return Boolean is\n-      function Enclosing_Declaration_Or_Statement (N : Node_Id) return Node_Id;\n-      --  Return the nearest enclosing declaration or statement that houses\n-      --  arbitrary node N.\n-\n       function Invoked_With_Different_Arguments (N : Node_Id) return Boolean;\n       --  Determine whether call N invokes the related enclosing subprogram\n       --  with actuals that differ from the subprogram's formals.\n@@ -934,33 +930,6 @@ package body Sem_Res is\n       --  Determine whether arbitrary node N appears within a conditional\n       --  construct.\n \n-      ----------------------------------------\n-      -- Enclosing_Declaration_Or_Statement --\n-      ----------------------------------------\n-\n-      function Enclosing_Declaration_Or_Statement\n-        (N : Node_Id) return Node_Id\n-      is\n-         Par : Node_Id;\n-\n-      begin\n-         Par := N;\n-         while Present (Par) loop\n-            if Is_Declaration (Par) or else Is_Statement (Par) then\n-               return Par;\n-\n-            --  Prevent the search from going too far\n-\n-            elsif Is_Body_Or_Package_Declaration (Par) then\n-               exit;\n-            end if;\n-\n-            Par := Parent (Par);\n-         end loop;\n-\n-         return N;\n-      end Enclosing_Declaration_Or_Statement;\n-\n       --------------------------------------\n       -- Invoked_With_Different_Arguments --\n       --------------------------------------"}, {"sha": "5965fa1fbb777dcac4667924957591601b889897", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8f077c4d05876bf952c86131e477d21dc5d4492b", "patch": "@@ -8271,6 +8271,33 @@ package body Sem_Util is\n       return Decl;\n    end Enclosing_Declaration;\n \n+   ----------------------------------------\n+   -- Enclosing_Declaration_Or_Statement --\n+   ----------------------------------------\n+\n+   function Enclosing_Declaration_Or_Statement\n+     (N : Node_Id) return Node_Id\n+   is\n+      Par : Node_Id;\n+\n+   begin\n+      Par := N;\n+      while Present (Par) loop\n+         if Is_Declaration (Par) or else Is_Statement (Par) then\n+            return Par;\n+\n+         --  Prevent the search from going too far\n+\n+         elsif Is_Body_Or_Package_Declaration (Par) then\n+            exit;\n+         end if;\n+\n+         Par := Parent (Par);\n+      end loop;\n+\n+      return N;\n+   end Enclosing_Declaration_Or_Statement;\n+\n    ----------------------------\n    -- Enclosing_Generic_Body --\n    ----------------------------"}, {"sha": "5c08cb8b9ab4328fcdd1487fc442754317e51f86", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f077c4d05876bf952c86131e477d21dc5d4492b/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=8f077c4d05876bf952c86131e477d21dc5d4492b", "patch": "@@ -809,6 +809,10 @@ package Sem_Util is\n    --  Returns the declaration node enclosing N (including possibly N itself),\n    --  if any, or Empty otherwise.\n \n+   function Enclosing_Declaration_Or_Statement (N : Node_Id) return Node_Id;\n+   --  Return the nearest enclosing declaration or statement that houses\n+   --  arbitrary node N.\n+\n    function Enclosing_Generic_Body (N : Node_Id) return Node_Id;\n    --  Returns the Node_Id associated with the innermost enclosing generic\n    --  body, if any. If none, then returns Empty."}]}