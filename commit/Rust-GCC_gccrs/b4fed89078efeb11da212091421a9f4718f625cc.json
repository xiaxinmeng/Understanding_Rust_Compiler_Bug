{"sha": "b4fed89078efeb11da212091421a9f4718f625cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRmZWQ4OTA3OGVmZWIxMWRhMjEyMDkxNDIxYTlmNDcxOGY2MjVjYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2017-09-12T16:30:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-09-12T16:30:28Z"}, "message": "Add -static-pie to GCC driver to create static PIE\n\nThis patch adds -static-pie to GCC driver to create static PIE.  A static\nposition independent executable (PIE) is similar to static executable,\nbut can be loaded at any address without a dynamic linker.  All linker\ninput files must be compiled with -fpie or -fPIE and linker must support\n--no-dynamic-linker to avoid linking with dynamic linker.  \"-z text\" is\nalso needed to prevent dynamic relocations in read-only segments.\n\n\tPR driver/81498\n\t* common.opt (-static-pie): New alias.\n\t(shared): Negate static-pie.\n\t(-no-pie): Update help text.\n\t(-pie): Likewise.\n\t(static-pie): New option.\n\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Add\n\t-static-pie support.\n\t(GNU_USER_TARGET_ENDFILE_SPEC): Likewise.\n\t(LINK_EH_SPEC): Likewise.\n\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n\t* config/i386/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): Likewise.\n\t* config/i386/gnu-user64.h (GNU_USER_TARGET_LINK_SPEC): Likewise.\n\t* gcc.c (LINK_COMMAND_SPEC): Likewise.\n\t(init_gcc_specs): Likewise.\n\t(init_spec): Likewise.\n\t(display_help): Update help message for -pie.\n\t* doc/invoke.texi: Update -pie, -no-pie and -static.  Document\n\t-static-pie.\n\nFrom-SVN: r252034", "tree": {"sha": "991254b7281354b7923b50ba07c1114a2364c58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991254b7281354b7923b50ba07c1114a2364c58f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4fed89078efeb11da212091421a9f4718f625cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fed89078efeb11da212091421a9f4718f625cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fed89078efeb11da212091421a9f4718f625cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fed89078efeb11da212091421a9f4718f625cc/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff76f0b5f6e6a4144fabb9ae984a9ee9dcaa2d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff76f0b5f6e6a4144fabb9ae984a9ee9dcaa2d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff76f0b5f6e6a4144fabb9ae984a9ee9dcaa2d08"}], "stats": {"total": 112, "additions": 79, "deletions": 33}, "files": [{"sha": "766dd64403107f462fc826ed78c5a124d891f7f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -1,3 +1,25 @@\n+2017-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR driver/81498\n+\t* common.opt (-static-pie): New alias.\n+\t(shared): Negate static-pie.\n+\t(-no-pie): Update help text.\n+\t(-pie): Likewise.\n+\t(static-pie): New option.\n+\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Add\n+\t-static-pie support.\n+\t(GNU_USER_TARGET_ENDFILE_SPEC): Likewise.\n+\t(LINK_EH_SPEC): Likewise.\n+\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n+\t* config/i386/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): Likewise.\n+\t* config/i386/gnu-user64.h (GNU_USER_TARGET_LINK_SPEC): Likewise.\n+\t* gcc.c (LINK_COMMAND_SPEC): Likewise.\n+\t(init_gcc_specs): Likewise.\n+\t(init_spec): Likewise.\n+\t(display_help): Update help message for -pie.\n+\t* doc/invoke.texi: Update -pie, -no-pie and -static.  Document\n+\t-static-pie.\n+\n 2017-09-12  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.md (movsi_aarch64): Remove all '*'."}, {"sha": "1581ca885e51b5d520ef860905af9fd519ddb2c6", "filename": "gcc/common.opt", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -352,6 +352,9 @@ Common Alias(pedantic-errors)\n -pie\n Driver Alias(pie)\n \n+-static-pie\n+Driver Alias(static-pie)\n+\n -pipe\n Driver Alias(pipe)\n \n@@ -3065,7 +3068,7 @@ x\n Driver Joined Separate\n \n shared\n-Driver RejectNegative Negative(pie)\n+Driver RejectNegative Negative(static-pie)\n Create a shared library.\n \n shared-libgcc\n@@ -3111,11 +3114,15 @@ Driver\n \n no-pie\n Driver RejectNegative Negative(shared)\n-Don't create a position independent executable.\n+Don't create a dynamically linked position independent executable.\n \n pie\n Driver RejectNegative Negative(no-pie)\n-Create a position independent executable.\n+Create a dynamically linked position independent executable.\n+\n+static-pie\n+Driver RejectNegative Negative(pie)\n+Create a static position independent executable.\n \n z\n Driver Joined Separate"}, {"sha": "a967b69a3500a94736c32c5541c77ec2bcc729ab", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -53,11 +53,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   \"%{shared:; \\\n      pg|p|profile:gcrt1.o%s; \\\n      static:crt1.o%s; \\\n-     \" PIE_SPEC \":Scrt1.o%s; \\\n+     static-pie|\" PIE_SPEC \":Scrt1.o%s; \\\n      :crt1.o%s} \\\n    crti.o%s \\\n    %{static:crtbeginT.o%s; \\\n-     shared|\" PIE_SPEC \":crtbeginS.o%s; \\\n+     shared|static-pie|\" PIE_SPEC \":crtbeginS.o%s; \\\n      :crtbegin.o%s} \\\n    %{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n@@ -70,7 +70,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n      :crt1.o%s} \\\n    crti.o%s \\\n    %{static:crtbeginT.o%s; \\\n-     shared|pie:crtbeginS.o%s; \\\n+     shared|pie|static-pie:crtbeginS.o%s; \\\n      :crtbegin.o%s} \\\n    %{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n@@ -92,7 +92,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n      fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n      fvtable-verify=std:vtv_end.o%s} \\\n    %{static:crtend.o%s; \\\n-     shared|\" PIE_SPEC \":crtendS.o%s; \\\n+     shared|static-pie|\" PIE_SPEC \":crtendS.o%s; \\\n      :crtend.o%s} \\\n    crtn.o%s \\\n    \" CRTOFFLOADEND\n@@ -102,7 +102,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n      fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n      fvtable-verify=std:vtv_end.o%s} \\\n    %{static:crtend.o%s; \\\n-     shared|pie:crtendS.o%s; \\\n+     shared|pie|static-pie:crtendS.o%s; \\\n      :crtend.o%s} \\\n    crtn.o%s \\\n    \" CRTOFFLOADEND\n@@ -132,12 +132,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LIB_SPEC GNU_USER_TARGET_LIB_SPEC\n \n #if defined(HAVE_LD_EH_FRAME_HDR)\n-#define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n+#define LINK_EH_SPEC \"%{!static|static-pie:--eh-frame-hdr} \"\n #endif\n \n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n+  \"%{static|static-pie:--start-group} %G %L \\\n+   %{static|static-pie:--end-group}%{!static:%{!static-pie:%G}}\"\n \n /* Use --as-needed -lgcc_s for eh support.  */\n #ifdef HAVE_LD_AS_NEEDED"}, {"sha": "8983dc9ecd74e25dd348bae8cc7302ed17290fe8", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -77,9 +77,10 @@ along with GCC; see the file COPYING3.  If not see\n #define GNU_USER_TARGET_LINK_SPEC \"-m %(link_emulation) %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n-      %{rdynamic:-export-dynamic} \\\n-      -dynamic-linker %(dynamic_linker)} \\\n-      %{static:-static}}\"\n+      %{!static-pie: \\\n+\t%{rdynamic:-export-dynamic} \\\n+\t-dynamic-linker %(dynamic_linker)}} \\\n+      %{static:-static} %{static-pie:-static -pie --no-dynamic-linker -z text}}\"\n \n #undef\tLINK_SPEC\n #define LINK_SPEC GNU_USER_TARGET_LINK_SPEC"}, {"sha": "6fc9eae6f6b9ffeaf1b290e610dec832b8804d8d", "filename": "gcc/config/i386/gnu-user64.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user64.h?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -59,11 +59,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n-      %{rdynamic:-export-dynamic} \\\n-      %{\" SPEC_32 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"} \\\n-      %{\" SPEC_64 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"} \\\n-      %{\" SPEC_X32 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKERX32 \"}} \\\n-    %{static:-static}}\"\n+      %{!static-static: \\\n+\t%{rdynamic:-export-dynamic} \\\n+\t%{\" SPEC_32 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"} \\\n+\t%{\" SPEC_64 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"} \\\n+\t%{\" SPEC_X32 \":-dynamic-linker \" GNU_USER_DYNAMIC_LINKERX32 \"}}} \\\n+    %{static:-static} %{static-pie:-static -pie --no-dynamic-linker -z text}}\"\n \n #undef\tLINK_SPEC\n #define LINK_SPEC GNU_USER_TARGET_LINK_SPEC"}, {"sha": "e4cacf26bdb53b4d94ba6ba03a41b1470aa965a4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -497,7 +497,7 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Link Options,,Options for Linking}.\n @gccoptlist{@var{object-file-name}  -fuse-ld=@var{linker}  -l@var{library} @gol\n -nostartfiles  -nodefaultlibs  -nostdlib  -pie  -pthread  -rdynamic @gol\n--s  -static  -static-libgcc  -static-libstdc++ @gol\n+-s  -static -static-pie -static-libgcc  -static-libstdc++ @gol\n -static-libasan  -static-libtsan  -static-liblsan  -static-libubsan @gol\n -static-libmpx  -static-libmpxwrappers @gol\n -shared  -shared-libgcc  -symbolic @gol\n@@ -11825,14 +11825,23 @@ GNU Compiler Collection (GCC) Internals}.)\n \n @item -pie\n @opindex pie\n-Produce a position independent executable on targets that support it.\n-For predictable results, you must also specify the same set of options\n-used for compilation (@option{-fpie}, @option{-fPIE},\n+Produce a dynamically linked position independent executable on targets\n+that support it.  For predictable results, you must also specify the same\n+set of options used for compilation (@option{-fpie}, @option{-fPIE},\n or model suboptions) when you specify this linker option.\n \n @item -no-pie\n @opindex no-pie\n-Don't produce a position independent executable.\n+Don't produce a dynamically linked position independent executable.\n+\n+@item -static-pie\n+@opindex static-pie\n+Produce a static position independent executable on targets that support\n+it.  A static position independent executable is similar to a static\n+executable, but can be loaded at any address without a dynamic linker.\n+For predictable results, you must also specify the same set of options\n+used for compilation (@option{-fpie}, @option{-fPIE}, or model\n+suboptions) when you specify this linker option.\n \n @item -pthread\n @opindex pthread\n@@ -11856,8 +11865,9 @@ Remove all symbol table and relocation information from the executable.\n \n @item -static\n @opindex static\n-On systems that support dynamic linking, this prevents linking with the shared\n-libraries.  On other systems, this option has no effect.\n+On systems that support dynamic linking, this overrides @option{-pie}\n+and prevents linking with the shared libraries.  On other systems, this\n+option has no effect.\n \n @item -shared\n @opindex shared"}, {"sha": "cec3ed5be5f13a6dec23ad690ad30c5a5303ba75", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fed89078efeb11da212091421a9f4718f625cc/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b4fed89078efeb11da212091421a9f4718f625cc", "patch": "@@ -1015,9 +1015,10 @@ proper position among the other output files.  */\n #endif\n \n /* -u* was put back because both BSD and SysV seem to support it.  */\n-/* %{static|no-pie:} simply prevents an error message:\n+/* %{static|no-pie|static-pie:} simply prevents an error message:\n    1. If the target machine doesn't handle -static.\n    2. If PIE isn't enabled by default.\n+   3. If the target machine doesn't handle -static-pie.\n  */\n /* We want %{T*} after %{L*} and %D so that it can be used to specify linker\n    scripts which exist in user specified directories, or in standard\n@@ -1035,7 +1036,7 @@ proper position among the other output files.  */\n    \"%{fuse-ld=*:-fuse-ld=%*} \" LINK_COMPRESS_DEBUG_SPEC \\\n    \"%X %{o*} %{e*} %{N} %{n} %{r}\\\n     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}} \\\n-    %{static|no-pie:} %{L*} %(mfwrap) %(link_libgcc) \" \\\n+    %{static|no-pie|static-pie:} %{L*} %(mfwrap) %(link_libgcc) \" \\\n     VTABLE_VERIFICATION_SPEC \" \" SANITIZER_EARLY_SPEC \" %o \" CHKP_SPEC \" \\\n     %{fopenacc|fopenmp|%:gt(%{ftree-parallelize-loops=*:%*} 1):\\\n \t%:include(libgomp.spec)%(link_gomp)}\\\n@@ -1670,17 +1671,19 @@ init_gcc_specs (struct obstack *obstack, const char *shared_name,\n {\n   char *buf;\n \n-  buf = concat (\"%{static|static-libgcc:\", static_name, \" \", eh_name, \"}\"\n-\t\t\"%{!static:%{!static-libgcc:\"\n #if USE_LD_AS_NEEDED\n+  buf = concat (\"%{static|static-libgcc|static-pie:\", static_name, \" \", eh_name, \"}\"\n+\t\t\"%{!static:%{!static-libgcc:%{!static-pie:\"\n \t\t\"%{!shared-libgcc:\",\n \t\tstatic_name, \" \" LD_AS_NEEDED_OPTION \" \",\n \t\tshared_name, \" \" LD_NO_AS_NEEDED_OPTION\n \t\t\"}\"\n \t\t\"%{shared-libgcc:\",\n \t\tshared_name, \"%{!shared: \", static_name, \"}\"\n-\t\t\"}\"\n+\t\t\"}}\"\n #else\n+  buf = concat (\"%{static|static-libgcc:\", static_name, \" \", eh_name, \"}\"\n+\t\t\"%{!static:%{!static-libgcc:\"\n \t\t\"%{!shared:\"\n \t\t\"%{!shared-libgcc:\", static_name, \" \", eh_name, \"}\"\n \t\t\"%{shared-libgcc:\", shared_name, \" \", static_name, \"}\"\n@@ -1788,8 +1791,8 @@ init_spec (void)\n \t\t\t    \"-lgcc_eh\"\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n # ifdef HAVE_LD_STATIC_DYNAMIC\n-\t\t\t    \" %{!static:\" LD_STATIC_OPTION \"} -lunwind\"\n-\t\t\t    \" %{!static:\" LD_DYNAMIC_OPTION \"}\"\n+\t\t\t    \" %{!static:%{!static-pie:\" LD_STATIC_OPTION \"}} -lunwind\"\n+\t\t\t    \" %{!static:%{!static-pie:\" LD_DYNAMIC_OPTION \"}}\"\n # else\n \t\t\t    \" -lunwind\"\n # endif\n@@ -3478,7 +3481,8 @@ display_help (void)\n   fputs (_(\"  -S                       Compile only; do not assemble or link.\\n\"), stdout);\n   fputs (_(\"  -c                       Compile and assemble, but do not link.\\n\"), stdout);\n   fputs (_(\"  -o <file>                Place the output into <file>.\\n\"), stdout);\n-  fputs (_(\"  -pie                     Create a position independent executable.\\n\"), stdout);\n+  fputs (_(\"  -pie                     Create a dynamically linked position independent\\n\\\n+                           executable.\\n\"), stdout);\n   fputs (_(\"  -shared                  Create a shared library.\\n\"), stdout);\n   fputs (_(\"\\\n   -x <language>            Specify the language of the following input files.\\n\\"}]}