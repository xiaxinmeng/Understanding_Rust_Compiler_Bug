{"sha": "f724acb8aa16d01f998e27bc1822a3f8981a82ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcyNGFjYjhhYTE2ZDAxZjk5OGUyN2JjMTgyMmEzZjg5ODFhODJmZg==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2002-09-09T17:56:37Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-09-09T17:56:37Z"}, "message": "parse.y (DIR_SEPARATOR): Don't define.\n\n2002-09-09  Ranjit Mathew  <rmathew@hotmail.com>\n\n\t* parse.y (DIR_SEPARATOR): Don't define.\n\t(check_class_interface_creation): Use IS_DIR_SEPARATOR.\n\nFrom-SVN: r56973", "tree": {"sha": "b2e6d968b57914b1172d96a3e996ef9f4ac49b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2e6d968b57914b1172d96a3e996ef9f4ac49b52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f724acb8aa16d01f998e27bc1822a3f8981a82ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f724acb8aa16d01f998e27bc1822a3f8981a82ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f724acb8aa16d01f998e27bc1822a3f8981a82ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f724acb8aa16d01f998e27bc1822a3f8981a82ff/comments", "author": null, "committer": null, "parents": [{"sha": "7ec70495eaf949ca89abf196cc59a881e6f1b03a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec70495eaf949ca89abf196cc59a881e6f1b03a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec70495eaf949ca89abf196cc59a881e6f1b03a"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b95e8aec40b07c594007b620a9e5dd9d32cbea04", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724acb8aa16d01f998e27bc1822a3f8981a82ff/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724acb8aa16d01f998e27bc1822a3f8981a82ff/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f724acb8aa16d01f998e27bc1822a3f8981a82ff", "patch": "@@ -1,3 +1,8 @@\n+2002-09-09  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\t* parse.y (DIR_SEPARATOR): Don't define.\n+\t(check_class_interface_creation): Use IS_DIR_SEPARATOR.\n+\n 2002-08-28  Andrew Haley  <aph@redhat.com>\n \n \t* verify.c (verify_jvm_instructions): Allow exception handler"}, {"sha": "aa593f9f072d2664a666d45a60c47dc5d4e35a3b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f724acb8aa16d01f998e27bc1822a3f8981a82ff/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f724acb8aa16d01f998e27bc1822a3f8981a82ff/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f724acb8aa16d01f998e27bc1822a3f8981a82ff", "patch": "@@ -69,10 +69,6 @@ definitions and other extensions.  */\n #include \"debug.h\"\n #include \"tree-inline.h\"\n \n-#ifndef DIR_SEPARATOR\n-#define DIR_SEPARATOR '/'\n-#endif\n-\n /* Local function prototypes */\n static char *java_accstring_lookup PARAMS ((int));\n static void  classitf_redefinition_error PARAMS ((const char *,tree, tree, tree));\n@@ -3449,12 +3445,11 @@ check_class_interface_creation (is_interface, flags, raw_name, qualified_name, d\n     {\n       const char *f;\n \n-      /* Contains OS dependent assumption on path separator. FIXME */\n       for (f = &input_filename [strlen (input_filename)];\n-\t   f != input_filename && f[0] != '/' && f[0] != DIR_SEPARATOR;\n+\t   f != input_filename && ! IS_DIR_SEPARATOR (f[0]);\n \t   f--)\n \t;\n-      if (f[0] == '/' || f[0] == DIR_SEPARATOR)\n+      if (IS_DIR_SEPARATOR (f[0]))\n \tf++;\n       if (strncmp (IDENTIFIER_POINTER (raw_name),\n \t\t   f , IDENTIFIER_LENGTH (raw_name)) ||\n@@ -12916,7 +12911,7 @@ try_builtin_assignconv (wfl_op1, lhs_type, rhs)\n \n   /* Try a narrowing primitive conversion (5.1.3):\n        - expression is a constant expression of type byte, short, char,\n-       \ufffd\ufffdor int, AND\n+         or int, AND\n        - variable is byte, short or char AND\n        - The value of the expression is representable in the type of the\n          variable */"}]}