{"sha": "ae9dc93157d8325d75ceaf961e2b255de5370b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5ZGM5MzE1N2Q4MzI1ZDc1Y2VhZjk2MWUyYjI1NWRlNTM3MGI0MQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-03T09:01:44Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-03T09:01:44Z"}, "message": "Makefile.am (mkinstalldirs): Set.\n\n\n2001-02-03  Alexandre Oliva  <aoliva@redhat.com>\n            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n\n        * Makefile.am (mkinstalldirs): Set.\n        * src/Makefile.am (mkinstalldirs): Set.\n        * libmath/Makefile.am (mkinstalldirs): Set.\n        * libsup++/Makefile.am (mkinstalldirs): Set.\n        * libio/Makefile.am (mkinstalldirs): Set.\n\t* */Makefile.in: Regenerate.\n\nFrom-SVN: r39430", "tree": {"sha": "41e2878472869f664757f7e9bbc54708a379e17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41e2878472869f664757f7e9bbc54708a379e17c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae9dc93157d8325d75ceaf961e2b255de5370b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9dc93157d8325d75ceaf961e2b255de5370b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9dc93157d8325d75ceaf961e2b255de5370b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9dc93157d8325d75ceaf961e2b255de5370b41/comments", "author": null, "committer": null, "parents": [{"sha": "4201c8909da24f1db614f18ef064f480a13a9e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4201c8909da24f1db614f18ef064f480a13a9e1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4201c8909da24f1db614f18ef064f480a13a9e1c"}], "stats": {"total": 1982, "additions": 909, "deletions": 1073}, "files": [{"sha": "43b1cf9f46746d896444fd687c2a852ea8561253", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -1,3 +1,13 @@\n+2001-02-03  Alexandre Oliva  <aoliva@redhat.com>\n+            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+        * Makefile.am (mkinstalldirs): Set.\n+        * src/Makefile.am (mkinstalldirs): Set.\n+        * libmath/Makefile.am (mkinstalldirs): Set.\n+        * libsup++/Makefile.am (mkinstalldirs): Set.\n+        * libio/Makefile.am (mkinstalldirs): Set.\t\n+\t* */Makefile.in: Regenerate.\n+\n 2001-02-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_threads.h (struct _STL_mutex_lock): Same."}, {"sha": "95994dbc5a156774e4d139aae97fb391b339a2a5", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the toplevel directory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 1997,1998, 1999, 2000 Free Software Foundation, Inc.\n+## Copyright (C) 1997,1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -26,6 +26,8 @@ MAINT_CHARSET = latin1\n \n SUBDIRS = libio libmath libsupc++ src\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Use $${builddir} instead of $(top_builddir) for arguments to \"mkcheck\"\n # because then the paths will be full pathnames, not relative\n # pathnames. (-Wl,--rpath seems to like this better.)"}, {"sha": "3c0a1b0ccec3e4dc8691711fd4760769abaf8fe1", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 3, "deletions": 43, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -123,6 +123,8 @@ MAINT_CHARSET = latin1\n \n SUBDIRS = libio libmath libsupc++ src\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Multilib support.\n MAKEOVERRIDES = \n \n@@ -137,51 +139,9 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS = \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n-\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n-\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n-\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n-\t\"INSTALL=$(INSTALL)\" \\\n-\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n-\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n-\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n-\t\"LDFLAGS=$(LDFLAGS)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\"MAKE=$(MAKE)\" \\\n-\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n-\t\"SHELL=$(SHELL)\" \\\n-\t\"EXPECT=$(EXPECT)\" \\\n-\t\"RUNTEST=$(RUNTEST)\" \\\n-\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n-\t\"exec_prefix=$(exec_prefix)\" \\\n-\t\"infodir=$(infodir)\" \\\n-\t\"libdir=$(libdir)\" \\\n-\t\"includedir=$(includedir)\" \\\n-\t\"prefix=$(prefix)\" \\\n-\t\"tooldir=$(tooldir)\" \\\n-\t\"AR=$(AR)\" \\\n-\t\"AS=$(AS)\" \\\n-\t\"CC=$(CC)\" \\\n-\t\"CXX=$(CXX)\" \\\n-\t\"LD=$(LD)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"RANLIB=$(RANLIB)\" \\\n-\t\"NM=$(NM)\" \\\n-\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n-\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\" \\\n-\t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = config.h\n CONFIG_CLEAN_FILES =  tests_flags mkcheck\n DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \\"}, {"sha": "48fecb8e5a808bf4eaee56dd3a472be54957da8b", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 801, "deletions": 812, "changes": 1613, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41"}, {"sha": "86c09034435d8812c7fc56c27b62f714f5402c46", "filename": "libstdc++-v3/libio/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FChangeLog?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -1,4 +1,9 @@\n-2001-01-28  benjamin kosnik  <bkoz@fillmore.constant.com>\n+2001-02-03  Alexandre Oliva  <aoliva@redhat.com>\n+            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+        * Makefile.am (mkinstalldirs): Set.\n+\n+2001-01-28  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* Makefile.am (LIBIO_SRCS): Remove stdio.c.\n "}, {"sha": "3d81530a2ff90d305c31b962866b89eda8309b0b", "filename": "libstdc++-v3/libio/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.am?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the libio subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+## Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -23,6 +23,8 @@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n if GLIBCPP_BUILD_LIBIO\n noinst_LTLIBRARIES = libio.la\n else"}, {"sha": "7a703ac3696a4a995d71ea86f0a2b59dd09d46f2", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -113,7 +113,9 @@ libstdcxx_interface = @libstdcxx_interface@\n toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n-@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = @GLIBCPP_BUILD_LIBIO_TRUE@libio.la\n+\n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = libio.la\n @GLIBCPP_BUILD_LIBIO_FALSE@noinst_LTLIBRARIES = \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -125,29 +127,21 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n CSHADOW_INCLUDES = @CSHADOW_INCLUDES@\n \n-INCLUDES = \\\n-\t-nostdinc++ \\\n-\t-I$(top_builddir)/include -I$(GLIBCPP_INCLUDE_DIR) \\\n-\t$(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n+INCLUDES =  \t-nostdinc++ \t-I$(top_builddir)/include -I$(GLIBCPP_INCLUDE_DIR) \t$(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n \n \n-libio_headers = \\\n-        libio.h libioP.h iolibio.h\n+libio_headers =          libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \\\n-@GLIBCPP_NEED_LIBIO_TRUE@\tiofclose.c iofopen.c \n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \tiofclose.c iofopen.c \n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = @GLIBCPP_NEED_WLIBIO_TRUE@\\\n-@GLIBCPP_NEED_WLIBIO_TRUE@\twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n \n EXTRA_DIST = iostreamP.h\n \n libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS)\n \n AM_CFLAGS = -D_GNU_SOURCE @DEBUG_FLAGS@ \n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES)"}, {"sha": "f8554b66abd270aa3cd371a098ad8db73f1c579d", "filename": "libstdc++-v3/libmath/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibmath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibmath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.am?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -23,6 +23,8 @@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n noinst_LTLIBRARIES = libmath.la\n \n EXTRA_LONG_DOUBLE_yes = \\"}, {"sha": "a6815e1acdc39afbdfa0ada6b2d5bb4785493101", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -114,26 +114,22 @@ toplevel_srcdir = @toplevel_srcdir@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n noinst_LTLIBRARIES = libmath.la\n \n-EXTRA_LONG_DOUBLE_yes = \\\n-\thypotl.c signbitl.c\n+EXTRA_LONG_DOUBLE_yes =  \thypotl.c signbitl.c\n \n \n-EXTRA_DIST = \\\n-\thypot.c hypotf.c atan2f.c expf.c \\\n-\t$(EXTRA_LONG_DOUBLE_yes) \n+EXTRA_DIST =  \thypot.c hypotf.c atan2f.c expf.c \t$(EXTRA_LONG_DOUBLE_yes) \n \n \n-libmath_la_LIBADD = \\\n-\t@LIBMATHOBJS@ \\\n-\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n \n-libmath_la_SOURCES = \\\n-\tsignbit.c signbitf.c\n+libmath_la_SOURCES =  \tsignbit.c signbitf.c\n \n \n LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n@@ -147,11 +143,8 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n CSHADOW_INCLUDES = @CSHADOW_INCLUDES@\n \n-INCLUDES = \\\n-\t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \\\n-\t$(TOPLEVEL_INCLUDES) \n+INCLUDES =  \t-I$(GLIBCPP_INCLUDE_DIR) -I$(top_builddir)/include  \t$(TOPLEVEL_INCLUDES) \n \n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES)"}, {"sha": "32511dbd4798e81acabad251c3c1f2700c441c61", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -24,6 +24,8 @@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Cross compiler and multilib support.\n # Install a library built with a cross compiler in tooldir, not libdir.\n if USE_LIBDIR"}, {"sha": "2552f21f0053841c04a20665b0df167447db711a", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 20, "deletions": 47, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -111,14 +111,16 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Cross compiler and multilib support.\n # Install a library built with a cross compiler in tooldir, not libdir.\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@gcc_version = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@@gcc_version@\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexecdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@$(libdir)/gcc-lib/$(target_alias)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@$(toolexecdir)/$(gcc_version)\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@toolexeclibdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@gcc_version = @gcc_version@\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexecdir = $(libdir)/gcc-lib/$(target_alias)\n+@USE_LIBDIR_FALSE@toolexecdir = $(exec_prefix)/$(target_alias)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexeclibdir = $(toolexecdir)/$(gcc_version)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@toolexeclibdir = $(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n \n # Need this library to both be part of libstdc++.a, and installed\n # separately too.\n@@ -134,13 +136,11 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS = \\\n-\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -152,38 +152,20 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES = \\\n-\t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \\\n-\t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \\\n-\t $(LIBSUPCXX_INCLUDES)\n+INCLUDES =  \t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t $(LIBSUPCXX_INCLUDES)\n \n \n-headers = \\\n-\tcxxabi.h exception new typeinfo\n+headers =  \tcxxabi.h exception new typeinfo\n \n \n-sources = \\\n-\tdel_op.cc \\\n-\tdel_opnt.cc \\\n-\tdel_opv.cc \\\n-\tdel_opvnt.cc \\\n-\texception_support.cc \\\n-\tnew_handler.cc \\\n-\tnew_op.cc \\\n-\tnew_opnt.cc \\\n-\tnew_opv.cc \\\n-\tnew_opvnt.cc \\\n-\tpure.cc \\\n-\ttinfo.cc \\\n-\ttinfo2.cc \\\n-\tvec.cc\n+sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \texception_support.cc \tnew_handler.cc \tnew_op.cc \tnew_opnt.cc \tnew_opv.cc \tnew_opvnt.cc \tpure.cc \ttinfo.cc \ttinfo2.cc \tvec.cc\n \n \n libsupc___la_SOURCES = $(sources)\n libsupc__convenience_la_SOURCES = $(sources)\n-@GXX_INCLUDE_DIR_TRUE@glibcppinstalldir = @GXX_INCLUDE_DIR_TRUE@@gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@glibcppinstalldir = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@$(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@glibcppinstalldir = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@$(prefix)/include/g++-@libstdcxx_interface@\n+@GXX_INCLUDE_DIR_TRUE@glibcppinstalldir = @gxx_include_dir@\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@glibcppinstalldir = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@glibcppinstalldir = $(prefix)/include/g++-@libstdcxx_interface@\n \n glibcppinstall_HEADERS = $(headers)\n \n@@ -196,12 +178,7 @@ LIBSUPCXX_CXXFLAGS = -prefer-pic\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_CXXFLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -225,19 +202,15 @@ AM_CXXFLAGS = \\\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n-               --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow CXX to\n # be used in libtool since this would add -lstdc++ to the link line\n # which of course is problematic at this point.\n-CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \\\n-\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n@@ -262,7 +235,7 @@ CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS\n CXXLD = $(CXX)\n HEADERS =  $(glibcppinstall_HEADERS)\n \n-DIST_COMMON =  Makefile.am Makefile.in configure configure.in\n+DIST_COMMON =  Makefile.am Makefile.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)"}, {"sha": "7b4110bb358f7bc106725a41195711967bda639b", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -21,11 +21,13 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.65 2001/01/25 22:39:28 mmitchel Exp $\n+## $Id: Makefile.am,v 1.66 2001/01/30 09:18:51 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Cross compiler and multilib support.\n # Install a library built with a cross compiler in tooldir, not libdir.\n if USE_LIBDIR"}, {"sha": "8261f7e1e467f3700e53a88be2c73c8d0472b8fe", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 42, "deletions": 140, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9dc93157d8325d75ceaf961e2b255de5370b41/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=ae9dc93157d8325d75ceaf961e2b255de5370b41", "patch": "@@ -111,14 +111,16 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n \n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+\n # Cross compiler and multilib support.\n # Install a library built with a cross compiler in tooldir, not libdir.\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@gcc_version = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@@gcc_version@\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexecdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@$(libdir)/gcc-lib/$(target_alias)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@$(toolexecdir)/$(gcc_version)\n-@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@toolexeclibdir = @USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@gcc_version = @gcc_version@\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexecdir = $(libdir)/gcc-lib/$(target_alias)\n+@USE_LIBDIR_FALSE@toolexecdir = $(exec_prefix)/$(target_alias)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_TRUE@toolexeclibdir = $(toolexecdir)/$(gcc_version)\n+@USE_LIBDIR_TRUE@@VERSION_SPECIFIC_LIBS_FALSE@toolexeclibdir = $(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n \n toolexeclib_LTLIBRARIES = libstdc++.la\n EXTRA_LTLIBRARIES = libinst-string.la libinst-wstring.la\n@@ -130,13 +132,11 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS = \\\n-\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -148,122 +148,35 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES = \\\n-\t-nostdinc++ \\\n-\t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \\\n-\t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \\\n-\t$(TOPLEVEL_INCLUDES)\t\n-\n-\n-base_headers = \\\n-\tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \\\n-\tbits/std_string.h bits/basic_string.h bits/basic_string.tcc \\\n-\tbits/generic_shadow.h bits/std_utility.h \\\n-\tbits/std_complex.h \\\n-\tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \\\n-\tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \\\n-\tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \\\n-\tbits/exception_support.h \\\n-\tbits/std_fstream.h bits/std_iomanip.h \\\n-\tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \\\n-\tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \\\n-\tbits/std_istream.h bits/istream.tcc bits/std_locale.h \\\n-\tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \\\n-\tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \\\n-\tbits/streambuf.tcc bits/basic_file.h \\\n-\tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \\\n-\tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \\\n-\tbits/stl_threads.h bits/stl_iterator_base.h \\\n-\tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \\\n-\tbits/std_iterator.h bits/std_list.h \\\n-\tbits/std_map.h bits/std_memory.h bits/std_numeric.h \\\n-\tbits/std_queue.h bits/std_set.h bits/std_stack.h \\\n-\tbits/std_stdexcept.h bits/std_vector.h \\\n-\tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \\\n-\tbits/stl_deque.h bits/stl_function.h \\\n-\tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \\\n-\tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \\\n-\tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \\\n-\tbits/stl_relops.h bits/stl_set.h \\\n-\tbits/stl_stack.h bits/stl_string_fwd.h bits/stl_tempbuf.h \\\n-\tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \\\n-\tbits/type_traits.h bits/stl_range_errors.h bits/std_algorithm.h \\\n-\tbits/concept_checks.h bits/container_concepts.h \\\n-\tbits/sequence_concepts.h bits/stl_config.h bits/stl_construct.h\n-\n-\n-backward_headers = \\\n-\tbackward/complex.h backward/iomanip.h backward/istream.h \\\n-\tbackward/ostream.h backward/stream.h backward/streambuf.h \\\n-\tbackward/algo.h backward/algobase.h backward/alloc.h \\\n-\tbackward/bvector.h backward/defalloc.h backward/deque.h \\\n-\tbackward/function.h backward/hash_map.h backward/hash_set.h \\\n-\tbackward/hashtable.h backward/heap.h backward/iterator.h \\\n-\tbackward/list.h backward/map.h backward/multimap.h backward/new.h \\\n-\tbackward/multiset.h backward/pair.h backward/iostream.h \\\n-\tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \\\n-\tbackward/tempbuf.h backward/tree.h backward/vector.h \\\n-\tbackward/fstream.h backward/strstream.h backward/strstream\n-\n-\n-ext_headers = \\\n-\text/ropeimpl.h ext/stl_rope.h \\\n-\text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \\\n-\text/hash_map ext/hash_set ext/rope ext/slist \\\n-\text/tree ext/bvector \n-\n-\n-c_base_headers = \\\n-\tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \\\n-\tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \\\n-\tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \\\n-\tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \\\n-\tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \\\n-\tbits/std_cwchar.h bits/std_cwctype.h bits/cmath.tcc\n-\n-@GLIBCPP_USE_CSHADOW_TRUE@c_shadow_headers = @GLIBCPP_USE_CSHADOW_TRUE@\\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tfeatures.h langinfo.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tbits/wrap_features.h bits/wrap_langinfo.h \\\n-@GLIBCPP_USE_CSHADOW_TRUE@\tsys/cdefs.h \n+INCLUDES =  \t-nostdinc++ \t-I$(GLIBCPP_INCLUDE_DIR) $(CSTD_INCLUDES) -I$(top_builddir)/include \t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\t\n+\n+\n+base_headers =  \tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \tbits/std_string.h bits/basic_string.h bits/basic_string.tcc \tbits/generic_shadow.h bits/std_utility.h \tbits/std_complex.h \tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \tbits/exception_support.h \tbits/std_fstream.h bits/std_iomanip.h \tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \tbits/std_istream.h bits/istream.tcc bits/std_locale.h \tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \tbits/streambuf.tcc bits/basic_file.h \tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \tbits/stl_threads.h bits/stl_iterator_base.h \tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \tbits/std_iterator.h bits/std_list.h \tbits/std_map.h bits/std_memory.h bits/std_numeric.h \tbits/std_queue.h bits/std_set.h bits/std_stack.h \tbits/std_stdexcept.h bits/std_vector.h \tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \tbits/stl_deque.h bits/stl_function.h \tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \tbits/stl_relops.h bits/stl_set.h \tbits/stl_stack.h bits/stl_string_fwd.h bits/stl_tempbuf.h \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \tbits/type_traits.h bits/stl_range_errors.h bits/std_algorithm.h \tbits/concept_checks.h bits/container_concepts.h \tbits/sequence_concepts.h bits/stl_config.h bits/stl_construct.h\n+\n+\n+backward_headers =  \tbackward/complex.h backward/iomanip.h backward/istream.h \tbackward/ostream.h backward/stream.h backward/streambuf.h \tbackward/algo.h backward/algobase.h backward/alloc.h \tbackward/bvector.h backward/defalloc.h backward/deque.h \tbackward/function.h backward/hash_map.h backward/hash_set.h \tbackward/hashtable.h backward/heap.h backward/iterator.h \tbackward/list.h backward/map.h backward/multimap.h backward/new.h \tbackward/multiset.h backward/pair.h backward/iostream.h \tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \tbackward/tempbuf.h backward/tree.h backward/vector.h \tbackward/fstream.h backward/strstream.h backward/strstream\n+\n+\n+ext_headers =  \text/ropeimpl.h ext/stl_rope.h \text/stl_bvector.h ext/stl_hashtable.h ext/stl_hash_fun.h \text/hash_map ext/hash_set ext/rope ext/slist \text/tree ext/bvector \n+\n+\n+c_base_headers =  \tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \tbits/std_cwchar.h bits/std_cwctype.h bits/cmath.tcc\n+\n+@GLIBCPP_USE_CSHADOW_TRUE@c_shadow_headers = \tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \tfeatures.h langinfo.h \tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \tbits/wrap_features.h bits/wrap_langinfo.h \tsys/cdefs.h \n @GLIBCPP_USE_CSHADOW_FALSE@c_shadow_headers = \n \n-std_headers = \\\n-\talgorithm bitset complex deque fstream functional \\\n-\tiomanip ios iosfwd iostream istream iterator limits list locale \\\n-\tmap memory numeric ostream queue set sstream stack stdexcept \\\n-\tstreambuf string utility valarray vector \\\n-\tcassert cctype cerrno cfloat climits clocale ciso646 \\\n-\tcmath csetjmp csignal cstdarg cstddef cstdio cstdlib \\\n-\tcstring ctime cwchar cwctype\n-\n-@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n+std_headers =  \talgorithm bitset complex deque fstream functional \tiomanip ios iosfwd iostream istream iterator limits list locale \tmap memory numeric ostream queue set sstream stack stdexcept \tstreambuf string utility valarray vector \tcassert cctype cerrno cfloat climits clocale ciso646 \tcmath csetjmp csignal cstdarg cstddef cstdio cstdlib \tcstring ctime cwchar cwctype\n+\n+@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = \t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n @GLIBCPP_NEED_LIBIO_FALSE@libio_headers = \n \n-build_headers = \\\n-\tbits/std_limits.h \\\n-\tbits/c++config.h bits/c++io.h bits/c++locale.h bits/c++threads.h \\\n-\tbits/atomicity.h bits/os_defines.h \\\n-\tbits/ctype_base.h bits/ctype_noninline.h bits/ctype_inline.h \n+build_headers =  \tbits/std_limits.h \tbits/c++config.h bits/c++io.h bits/c++locale.h bits/c++threads.h \tbits/atomicity.h bits/os_defines.h \tbits/ctype_base.h bits/ctype_noninline.h bits/ctype_inline.h \n \n \n-sources = \\\n-\tlimitsMEMBERS.cc \\\n-\tcomplex_io.cc \\\n-\tstdexcept.cc bitset.cc \\\n-        globals.cc \\\n-\tc++io.cc ios.cc strstream.cc \\\n-\tc++locale.cc locale.cc localename.cc codecvt.cc \\\n-\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n+sources =  \tlimitsMEMBERS.cc \tcomplex_io.cc \tstdexcept.cc bitset.cc         globals.cc \tc++io.cc ios.cc strstream.cc \tc++locale.cc locale.cc localename.cc codecvt.cc \tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n \n \n-wstring_sources = \\\n-\twstring-inst.cc\n+wstring_sources =  \twstring-inst.cc\n \n VPATH =  $(top_srcdir) $(top_srcdir)/src $(GLIBCPP_INCLUDE_DIR)  $(GLIBCPP_INCLUDE_DIR)/std $(C_INCLUDE_DIR)\n \n@@ -274,23 +187,20 @@ libstdc___la_SOURCES = $(sources)\n \n libinst_wstring_la_SOURCES = $(wstring_sources)\n \n-libstdc___la_LIBADD = \\\n-\t../libmath/libmath.la @libio_la@ \\\n-\t../libsupc++/libsupc++convenience.la \\\n-\t@libinst_wstring_la@\n+libstdc___la_LIBADD =  \t../libmath/libmath.la @libio_la@ \t../libsupc++/libsupc++convenience.la \t@libinst_wstring_la@\n \n \n libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n \n libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n-@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = @GLIBCPP_USE_CSHADOW_TRUE@$(top_builddir)/stamp-cshadow\n+@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = $(top_builddir)/stamp-cshadow\n @GLIBCPP_USE_CSHADOW_FALSE@CSHADOW_H = \n-@GXX_INCLUDE_DIR_TRUE@myincludep = @GXX_INCLUDE_DIR_TRUE@@gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@myincludep = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@$(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@myincludep = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@$(prefix)/include/g++-@libstdcxx_interface@\n-@GXX_INCLUDE_DIR_TRUE@targetincludep = @GXX_INCLUDE_DIR_TRUE@@gxx_include_dir@\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@targetincludep = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@$(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n-@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@targetincludep = @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@@gxx_target_include_dir@\n+@GXX_INCLUDE_DIR_TRUE@myincludep = @gxx_include_dir@\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@myincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@myincludep = $(prefix)/include/g++-@libstdcxx_interface@\n+@GXX_INCLUDE_DIR_TRUE@targetincludep = @gxx_include_dir@\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@targetincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n+@GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@targetincludep = @gxx_target_include_dir@\n \n # NB: As libio_headers may be empty, need this to make sure bash doesn't\n # choke on an empty for... loop by using libio_headers_install\n@@ -304,12 +214,7 @@ c_incdir = @C_INCLUDE_DIR@\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_CXXFLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -330,18 +235,15 @@ AM_CXXFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We have a problem when building the shared libstdc++ object if\n # the rules automake generates would be used.  We cannot allow CXX to\n # be used in libtool since this would add -lstdc++ to the link line\n # which of course is problematic at this point.\n-CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \\\n-\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n-mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(toolexeclib_LTLIBRARIES)"}]}