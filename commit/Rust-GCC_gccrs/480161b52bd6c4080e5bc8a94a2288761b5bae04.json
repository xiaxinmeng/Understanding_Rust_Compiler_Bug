{"sha": "480161b52bd6c4080e5bc8a94a2288761b5bae04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgwMTYxYjUyYmQ2YzQwODBlNWJjOGE5NGEyMjg4NzYxYjViYWUwNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-18T14:18:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-18T14:18:51Z"}, "message": "tree-ssa-uninit.c (find_uninit_use): Disregard debug stmts, use operand helpers.\n\n2010-08-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-uninit.c (find_uninit_use): Disregard debug stmts,\n\tuse operand helpers.\n\nFrom-SVN: r163340", "tree": {"sha": "3d8541382eaec83fad8a9bad31639e0b8331e36f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8541382eaec83fad8a9bad31639e0b8331e36f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/480161b52bd6c4080e5bc8a94a2288761b5bae04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480161b52bd6c4080e5bc8a94a2288761b5bae04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480161b52bd6c4080e5bc8a94a2288761b5bae04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480161b52bd6c4080e5bc8a94a2288761b5bae04/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5f5fa2da0a140f132a7d69a715160698272de64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f5fa2da0a140f132a7d69a715160698272de64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f5fa2da0a140f132a7d69a715160698272de64"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "341820d7103360ea092a0ab136e29bcb1fadfd47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480161b52bd6c4080e5bc8a94a2288761b5bae04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480161b52bd6c4080e5bc8a94a2288761b5bae04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=480161b52bd6c4080e5bc8a94a2288761b5bae04", "patch": "@@ -1,3 +1,8 @@\n+2010-08-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-uninit.c (find_uninit_use): Disregard debug stmts,\n+\tuse operand helpers.\n+\n 2010-08-18  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR middle-end/45292"}, {"sha": "4398db7c6d2e8468c035bafee802af5b3b848042", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480161b52bd6c4080e5bc8a94a2288761b5bae04/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480161b52bd6c4080e5bc8a94a2288761b5bae04/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=480161b52bd6c4080e5bc8a94a2288761b5bae04", "patch": "@@ -1598,27 +1598,17 @@ find_uninit_use (gimple phi, unsigned uninit_opnds,\n       struct pointer_set_t *visited_phis;\n       basic_block use_bb;\n \n-      use_stmt = use_p->loc.stmt;\n+      use_stmt = USE_STMT (use_p);\n+      if (is_gimple_debug (use_stmt))\n+\tcontinue;\n \n       visited_phis = pointer_set_create ();\n \n-      use_bb = gimple_bb (use_stmt);\n       if (gimple_code (use_stmt) == GIMPLE_PHI)\n-        {\n-\t  unsigned i, n;\n-          n = gimple_phi_num_args (use_stmt);\n-\n-          /* Find the matching phi argument of the use.  */\n-          for (i = 0; i < n; ++i)\n-            {\n-               if (gimple_phi_arg_def_ptr (use_stmt, i) == use_p->use)\n-\t         {\n-\t\t    edge e = gimple_phi_arg_edge (use_stmt, i);\n-\t\t    use_bb = e->src;\n-                    break;\n-\t\t }\n-\t    }\n-\t}\n+\tuse_bb = gimple_phi_arg_edge (use_stmt,\n+\t\t\t\t      PHI_ARG_INDEX_FROM_USE (use_p))->src;\n+      else\n+\tuse_bb = gimple_bb (use_stmt);\n \n       if (is_use_properly_guarded (use_stmt,\n                                    use_bb, "}]}