{"sha": "bf9b2cc9250862b15f7520c70d689def2cec77c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5YjJjYzkyNTA4NjJiMTVmNzUyMGM3MGQ2ODlkZWYyY2VjNzdjNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-02-05T08:28:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-02-05T08:28:18Z"}, "message": "pr31863.C: Generalize dg-timeout-factor.\n\n\t* g++.dg/torture/pr31863.C: Generalize dg-timeout-factor.\n\nFrom-SVN: r143958", "tree": {"sha": "24f2935c46e3b745b64d9fd813da4ad01db62722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24f2935c46e3b745b64d9fd813da4ad01db62722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf9b2cc9250862b15f7520c70d689def2cec77c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9b2cc9250862b15f7520c70d689def2cec77c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf9b2cc9250862b15f7520c70d689def2cec77c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9b2cc9250862b15f7520c70d689def2cec77c6/comments", "author": null, "committer": null, "parents": [{"sha": "08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e14b2a1ae412910176b09d6b90dadc1b16e0f1"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "24623034bc83ccf84f0fb89c05c2846f6bd348b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf9b2cc9250862b15f7520c70d689def2cec77c6", "patch": "@@ -60,8 +60,7 @@\n \n \tPR tree-optimization/38977\n \tPR gcov-profile/38292\n-\t* calls.c (special_function_p): Disregard __builtin_\n-\tprefix.\n+\t* calls.c (special_function_p): Disregard __builtin_ prefix.\n \n 2009-02-04  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n@@ -113,8 +112,7 @@\n \n 2009-02-02  Catherine Moore  <clm@codesourcery.com>\n \n-\t* sde.h (SUBTARGET_ARM_SPEC): Don;t assemble -fpic code as\n-\t-mabicalls.\n+\t* sde.h (SUBTARGET_ARM_SPEC): Don;t assemble -fpic code as -mabicalls.\n \n 2009-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -181,8 +179,7 @@\n \n \tPR target/38952\n \t* config/i386/i386.c (ix86_builtin_setjmp_frame_value): New.\n-\t(TARGET_BUILTIN_SETJMP_FRAME_VALUE): Override default to point\n-\tat it.\n+\t(TARGET_BUILTIN_SETJMP_FRAME_VALUE): Override default to point at it.\n \n 2009-01-31  Richard Guenther  <rguenther@suse.de>\n \n@@ -271,8 +268,7 @@\n \n \t* caller-save.c (setup_save_areas): Remove flag_ira.\n \n-\t* ira-color.c (ira_reuse_stack_slot, ira_mark_new_stack_slot):\n-\tDitto.\n+\t* ira-color.c (ira_reuse_stack_slot, ira_mark_new_stack_slot): Ditto.\n \n \t* global.c: Remove the file.\n \n@@ -303,7 +299,7 @@\n \tno_equiv, recorded_label_ref): Move from local-alloc.c.\n \t(update_equiv_regs): Ditto.  Make it static.\n \t(print_insn_chain, print_insn_chains): Move it from global.c.\n-\tpseudo_for_reload_consideration_p): Ditto.  Remove flag_ira.\n+\t(pseudo_for_reload_consideration_p): Ditto.  Remove flag_ira.\n \t(build_insn_chain): Ditto.  Make it static.\n \t(ra_init_live_subregs): Move from ra-conflict.c.  Make it static.\n \tRename to init_live_subregs.\n@@ -318,8 +314,7 @@\n \t(init_regs): Remove init_reg_autoinc.\n \t(struct costs, costs, init_cost, ok_for_index_p_nonstrict,\n \tok_for_base_p_nonstrict): Remove.\n-\t(regclass_init): Rename to reginfo_init.  Don't initialize\n-\tinit_cost.\n+\t(regclass_init): Rename to reginfo_init.  Don't initialize init_cost.\n \t(pass_regclass_init): Rename to pass_reginfo_init.  Modify\n \tcorresponding entries.\n \t(dump_regclass, record_operand_costs, scan_one_insn,\n@@ -328,8 +323,7 @@\n \t(gt-regclass.h): Rename to gt-reginfo.h.\n \n \t* rtl.h (dump_global_regs, retry_global_alloc,\n-\tbuild_insn_chain, dump_local_alloc, update_equiv_regs):\n-\tRemove.\n+\tbuild_insn_chain, dump_local_alloc, update_equiv_regs): Remove.\n \n \t* Makefile.in (RA_H): Remove.\n \t(OBJS-common): Remove global.o, local-alloc.o, and ra-conflict.o.\n@@ -340,8 +334,7 @@\n \t(GTFILES): Rename regclass.c to\treginfo.c.\n \n \t* passes.c (init_optimization_passes): Remove pass_local_alloc and\n-\tpass_global_alloc.  Rename pass_regclass_init to\n-\tpass_reginfo_init.\n+\tpass_global_alloc.  Rename pass_regclass_init to pass_reginfo_init.\n \n \t* reload1.c (compute_use_by_pseudos, reload, count_pseudo,\n \tcount_spilled_pseudo, find_reg, alter_reg, delete_output_reload):\n@@ -463,7 +456,7 @@\n \n \tRevert\n \t2008-08-21  Richard Guenther  <rguenther@suse.de>\n-  \n+\n \t* tree-ssa-pre.c (insert_into_preds_of_block): Before inserting\n \ta PHI ask VN if it is already available.\n \t* tree-ssa-sccvn.h (vn_phi_lookup): Declare.\n@@ -1114,7 +1107,7 @@\n \n 2009-01-09  Diego Novillo  <dnovillo@google.com>\n \n-\t* gimple.h (struct gimple_statement_base)<uid>: Document\n+\t* gimple.h (struct gimple_statement_base) <uid>: Document\n \tthe restrictions on its use.\n \t(gimple_uid): Tidy.\n \t(gimple_set_uid): Tidy."}, {"sha": "03813874062722aba5fb863fd3d4ff3c1c473fdd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf9b2cc9250862b15f7520c70d689def2cec77c6", "patch": "@@ -1,3 +1,7 @@\n+2009-02-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* g++.dg/torture/pr31863.C: Generalize dg-timeout-factor.\n+\n 2009-02-05  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* gcc.c-torture/execute/pr39100.c: New.\n@@ -107,8 +111,8 @@\n \n 2009-02-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n-        PR c++/39053\n-        * g++.dg/parse/crash52.C: New.\n+\tPR c++/39053\n+\t* g++.dg/parse/crash52.C: New.\n \n 2009-01-30  Richard Guenther  <rguenther@suse.de>\n \n@@ -148,7 +152,8 @@\n 2009-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR middle-end/35854\n-\t* gcc.dg/lower-subreg-1.c: Renamed dump pass from \"subreg\" to \"subreg1\"\t\t\n+\t* gcc.dg/lower-subreg-1.c: Renamed dump pass from \"subreg\"\n+\tto \"subreg1\".\n \t\n 2009-01-29  Steve Ellcey  <sje@cup.hp.com>\n \n@@ -916,7 +921,8 @@\n \tin trunk.\n \t* testsuite/gcc.dg/graphite/block-0.c: Update test.\n \t* testsuite/gcc.dg/graphite/block-1.c: Same.\n-\t* testsuite/gcc.dg/graphite/block-2.c: Remove xfail and test for blocking.\n+\t* testsuite/gcc.dg/graphite/block-2.c: Remove xfail and test\n+\tfor blocking.\n \t* testsuite/gcc.dg/graphite/block-4.c: Remove test for strip mine.\n \t* testsuite/gcc.dg/graphite/block-3.c: New.\n \t* testsuite/gcc.dg/graphite/pr38498.c: New.\n@@ -1012,7 +1018,7 @@\n \n 2009-01-05  Laurent GUERBY  <laurent@guerby.net>\n \n-\t* gcc.c-torture/compile/20001226-1.c: Generalize \n+\t* gcc.c-torture/compile/20001226-1.c: Generalize\n \tdg-timeout-factor.\n \t* gcc.c-torture/compile/limits-fnargs.c: Add\n \tdg-timeout-factor."}, {"sha": "8d8ccc43ad3059b1dc0f0a31ffe97933516afc0a", "filename": "gcc/testsuite/g++.dg/torture/pr31863.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr31863.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf9b2cc9250862b15f7520c70d689def2cec77c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr31863.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr31863.C?ref=bf9b2cc9250862b15f7520c70d689def2cec77c6", "patch": "@@ -1,7 +1,5 @@\n /* { dg-do link } */\n-/* If list of targets on dg-timeout-factor grows to 3, make it unconditional  \n-   for all targets.  */\n-/* { dg-timeout-factor 2.0 { target hppa*-*-* } } */\n+/* { dg-timeout-factor 2.0 } */\n \n namespace Loki\n {"}]}