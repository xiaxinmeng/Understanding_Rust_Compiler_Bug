{"sha": "fbb3e275ab0ddbe1413b7f18fc25249fdb46a275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJiM2UyNzVhYjBkZGJlMTQxM2I3ZjE4ZmMyNTI0OWZkYjQ2YTI3NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-11T10:59:02Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-11T10:59:02Z"}, "message": "Fix spelling.\n\ngcc/ChangeLog:\n\n\t* tree.c (copy_node): Fix spelling.", "tree": {"sha": "6d8c4f4f75bdcc3a7ba221f14080d719d1a37d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8c4f4f75bdcc3a7ba221f14080d719d1a37d16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57f076655eaaa03ae4b63408e25438d3caa20b4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f076655eaaa03ae4b63408e25438d3caa20b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f076655eaaa03ae4b63408e25438d3caa20b4d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1d4a1dabef5accb81d0608368d4151801486d1f3", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb3e275ab0ddbe1413b7f18fc25249fdb46a275/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=fbb3e275ab0ddbe1413b7f18fc25249fdb46a275", "patch": "@@ -1241,7 +1241,7 @@ copy_node (tree node MEM_STAT_DECL)\n \t  SET_DECL_VALUE_EXPR (t, DECL_VALUE_EXPR (node));\n \t  DECL_HAS_VALUE_EXPR_P (t) = 1;\n \t}\n-      /* DECL_DEBUG_EXPR is copied explicitely by callers.  */\n+      /* DECL_DEBUG_EXPR is copied explicitly by callers.  */\n       if (VAR_P (node))\n \t{\n \t  DECL_HAS_DEBUG_EXPR_P (t) = 0;"}]}