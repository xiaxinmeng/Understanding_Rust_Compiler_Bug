{"sha": "2fc6e3d55f6080da3a43243f595bd1266595127d", "node_id": "C_kwDOANBUbNoAKDJmYzZlM2Q1NWY2MDgwZGEzYTQzMjQzZjU5NWJkMTI2NjU5NTEyN2Q", "commit": {"author": {"name": "Haochen Gui", "email": "guihaoc@gcc.gnu.org", "date": "2022-06-09T05:24:15Z"}, "committer": {"name": "Haochen Gui", "email": "guihaoc@gcc.gnu.org", "date": "2022-06-09T05:31:09Z"}, "message": "This patch replaces shift and ior insns with one rotate and mask insn for the split patterns which are for DI byte swap on Power6.\n\ngcc/\n\t* config/rs6000/rs6000.md (define_split for bswapdi load): Merge shift\n\tand ior insns to one rotate and mask insn.\n\t(define_split for bswapdi register): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/pr93453-1.c: New.", "tree": {"sha": "f345204828ff53a0bb4f10ed1a47c0d8c84dfd7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f345204828ff53a0bb4f10ed1a47c0d8c84dfd7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fc6e3d55f6080da3a43243f595bd1266595127d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc6e3d55f6080da3a43243f595bd1266595127d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc6e3d55f6080da3a43243f595bd1266595127d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc6e3d55f6080da3a43243f595bd1266595127d/comments", "author": null, "committer": null, "parents": [{"sha": "02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b4e2de3204e74ce06d2d46bc8ee30ac93ce9fb"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "1c125f07e8955d6d6c9dc281bb6f2b0b2aee10ef", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fc6e3d55f6080da3a43243f595bd1266595127d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fc6e3d55f6080da3a43243f595bd1266595127d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=2fc6e3d55f6080da3a43243f595bd1266595127d", "patch": "@@ -2841,8 +2841,8 @@\n       emit_insn (gen_bswapsi2 (dest_32, word2));\n     }\n \n-  emit_insn (gen_ashldi3 (op3, op3, GEN_INT (32)));\n-  emit_insn (gen_iordi3 (dest, dest, op3));\n+  emit_insn (gen_rotldi3_insert_3 (dest, op3, GEN_INT (32), dest,\n+\t\t\t\t   GEN_INT (0xffffffff)));\n   DONE;\n })\n \n@@ -2927,10 +2927,10 @@\n   rtx op3_si  = simplify_gen_subreg (SImode, op3, DImode, lo_off);\n \n   emit_insn (gen_lshrdi3 (op2, src, GEN_INT (32)));\n-  emit_insn (gen_bswapsi2 (dest_si, src_si));\n-  emit_insn (gen_bswapsi2 (op3_si, op2_si));\n-  emit_insn (gen_ashldi3 (dest, dest, GEN_INT (32)));\n-  emit_insn (gen_iordi3 (dest, dest, op3));\n+  emit_insn (gen_bswapsi2 (op3_si, src_si));\n+  emit_insn (gen_bswapsi2 (dest_si, op2_si));\n+  emit_insn (gen_rotldi3_insert_3 (dest, op3, GEN_INT (32), dest,\n+\t\t\t\t   GEN_INT (0xffffffff)));\n   DONE;\n })\n "}, {"sha": "b396458ba12d4c48dcbd721cc37659c5b6c2f75f", "filename": "gcc/testsuite/gcc.target/powerpc/pr93453-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fc6e3d55f6080da3a43243f595bd1266595127d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93453-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fc6e3d55f6080da3a43243f595bd1266595127d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93453-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93453-1.c?ref=2fc6e3d55f6080da3a43243f595bd1266595127d", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target has_arch_ppc64 } } */\n+/* { dg-options \"-mdejagnu-cpu=power6 -O2\" } */\n+\n+unsigned long load_byte_reverse (unsigned long *in)\n+{\n+   return __builtin_bswap64 (*in);\n+}\n+\n+unsigned long byte_reverse (unsigned long in)\n+{\n+   return __builtin_bswap64 (in);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mrldimi\\M} 2 } } */"}]}