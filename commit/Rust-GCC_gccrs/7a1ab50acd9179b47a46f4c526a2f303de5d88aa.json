{"sha": "7a1ab50acd9179b47a46f4c526a2f303de5d88aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExYWI1MGFjZDkxNzliNDdhNDZmNGM1MjZhMmYzMDNkZTVkODhhYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-07T20:30:00Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-07T20:30:00Z"}, "message": "(emit_move_insn): Do return a value, in complex case.\n\nFrom-SVN: r2712", "tree": {"sha": "1cbc590eef7093b9928b5d913bde864b217e9d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cbc590eef7093b9928b5d913bde864b217e9d17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a1ab50acd9179b47a46f4c526a2f303de5d88aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1ab50acd9179b47a46f4c526a2f303de5d88aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1ab50acd9179b47a46f4c526a2f303de5d88aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1ab50acd9179b47a46f4c526a2f303de5d88aa/comments", "author": null, "committer": null, "parents": [{"sha": "c75b6ee3bdcfb28594b907debc2a651c70dbe91b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75b6ee3bdcfb28594b907debc2a651c70dbe91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75b6ee3bdcfb28594b907debc2a651c70dbe91b"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "375637e5d5b232817eeb58cf04f57546f241a53f", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a1ab50acd9179b47a46f4c526a2f303de5d88aa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a1ab50acd9179b47a46f4c526a2f303de5d88aa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7a1ab50acd9179b47a46f4c526a2f303de5d88aa", "patch": "@@ -1476,6 +1476,8 @@ emit_move_insn (x, y)\n \t\t  gen_lowpart (submode, y)));\n \n       group_insns (prev);\n+\n+      return get_last_insn ();\n     }\n \n   /* This will handle any multi-word mode that lacks a move_insn pattern."}]}