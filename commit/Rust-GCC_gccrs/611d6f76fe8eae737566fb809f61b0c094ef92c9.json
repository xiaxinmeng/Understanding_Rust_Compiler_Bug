{"sha": "611d6f76fe8eae737566fb809f61b0c094ef92c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExZDZmNzZmZThlYWU3Mzc1NjZmYjgwOWY2MWIwYzA5NGVmOTJjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-24T18:38:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-24T18:38:16Z"}, "message": "re PR c++/41510 ([C++0x] std::complex vs. initialization lists)\n\n\tPR c++/41510\n\t* decl.c (check_initializer): Don't wrap an init-list in a\n\tTREE_LIST.\n\t* init.c (build_aggr_init): Don't assume copy-initialization if\n\tinit has CONSTRUCTOR_IS_DIRECT_INIT.\n\t* call.c (build_new_method_call): Sanity check.\n\nFrom-SVN: r159792", "tree": {"sha": "538a9f415da25d0233304dc40b74faf54a537d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/538a9f415da25d0233304dc40b74faf54a537d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/611d6f76fe8eae737566fb809f61b0c094ef92c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611d6f76fe8eae737566fb809f61b0c094ef92c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611d6f76fe8eae737566fb809f61b0c094ef92c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611d6f76fe8eae737566fb809f61b0c094ef92c9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e20463aaf048d91eee354cc784819d1988abd2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20463aaf048d91eee354cc784819d1988abd2c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20463aaf048d91eee354cc784819d1988abd2c2"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "2a3a8a06fcfc51db676b362c5d7d1a7a0f868c60", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -1,3 +1,12 @@\n+2010-05-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41510\n+\t* decl.c (check_initializer): Don't wrap an init-list in a\n+\tTREE_LIST.\n+\t* init.c (build_aggr_init): Don't assume copy-initialization if\n+\tinit has CONSTRUCTOR_IS_DIRECT_INIT.\n+\t* call.c (build_new_method_call): Sanity check.\n+\n 2010-05-24  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* rtti.c (tinfo_base_init): Use build_constructor instead of"}, {"sha": "890ab885f88b2cfb2049b27cc18e1db459403070", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -6350,7 +6350,8 @@ build_new_method_call (tree instance, tree fns, VEC(tree,gc) **args,\n       && BRACE_ENCLOSED_INITIALIZER_P (VEC_index (tree, *args, 0))\n       && CONSTRUCTOR_IS_DIRECT_INIT (VEC_index (tree, *args, 0)))\n     {\n-      gcc_assert (VEC_length (tree, *args) == 1);\n+      gcc_assert (VEC_length (tree, *args) == 1\n+\t\t  && !(flags & LOOKUP_ONLYCONVERTING));\n       list = VEC_index (tree, *args, 0);\n \n       if (TYPE_HAS_LIST_CTOR (basetype))"}, {"sha": "5420f71ecdfaa0e6eeb656f3554846208760a5ac", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -5278,7 +5278,6 @@ check_initializer (tree decl, tree init, int flags, tree *cleanup)\n \t\terror (\"in C++98 %qD must be initialized by constructor, \"\n \t\t       \"not by %<{...}%>\",\n \t\t       decl);\n-\t      init = build_tree_list (NULL_TREE, init);\n \t    }\n \t  else if (TREE_CODE (type) == VECTOR_TYPE && TYPE_VECTOR_OPAQUE (type))\n \t    {"}, {"sha": "bf80c096d7e840b42c28d96bea0b418f68be6f63", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -1240,7 +1240,9 @@ build_aggr_init (tree exp, tree init, int flags, tsubst_flags_t complain)\n   TREE_READONLY (exp) = 0;\n   TREE_THIS_VOLATILE (exp) = 0;\n \n-  if (init && TREE_CODE (init) != TREE_LIST)\n+  if (init && TREE_CODE (init) != TREE_LIST\n+      && !(BRACE_ENCLOSED_INITIALIZER_P (init)\n+\t   && CONSTRUCTOR_IS_DIRECT_INIT (init)))\n     flags |= LOOKUP_ONLYCONVERTING;\n \n   if (TREE_CODE (type) == ARRAY_TYPE)"}, {"sha": "eb1361dd7f052a3d7eb14c047035001acb058aea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -1,3 +1,9 @@\n+2010-05-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41510\n+\t* g++.dg/cpp0x/initlist35.C: New.\n+\t* g++.dg/init/brace6.C: Adjust.\n+\n 2010-05-24  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.target/arm/frame-pointer-1.c: New test."}, {"sha": "e5b7cb4bd52003d3a5f26d2af3771c4336d324f9", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist35.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist35.C?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/41510\n+// { dg-options \"-std=c++0x\" }\n+\n+struct B\n+{\n+  B(int, int);\n+};\n+struct A\n+{\n+  A(int, int);\n+  A(const B&);\n+};\n+\n+void f()\n+{\n+  A a = { 1, 2 };\n+};\n+\n+template <class T> void g()\n+{\n+  A a = { 1, 2 };\n+};\n+\n+template void g<int>();"}, {"sha": "96b35b0d7115ffb9a99d08da10a53be7bec92ea9", "filename": "gcc/testsuite/g++.dg/init/brace6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d6f76fe8eae737566fb809f61b0c094ef92c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C?ref=611d6f76fe8eae737566fb809f61b0c094ef92c9", "patch": "@@ -6,7 +6,7 @@ struct A {\n };\n \n struct B {\n-   B(const B&);\t\t\t// { dg-message \"candidate\" }\n+   B(const B&);\n    int b;\n };\n \n@@ -19,7 +19,7 @@ int main()\n    int i = { 1 };\n    int j = { 1, 2 }; /* { dg-error \"requires one element\" } */\n    A a = { 6 }; /* { dg-error \"initialize\" } */\n-   B b = { 6 }; /* { dg-error \"initialize\" } */\n+   B b = { 6 }; /* { dg-error \"\" } */\n    C c = { 6 }; /* { dg-error \"too many initializers\" } */\n    D d = { 6 };\n }"}]}