{"sha": "8613329216196f7f36857b4c24040c1358cf14c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxMzMyOTIxNjE5NmY3ZjM2ODU3YjRjMjQwNDBjMTM1OGNmMTRjNQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-01-11T12:50:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-01-11T12:50:18Z"}, "message": "* Band-aid until haifa's bitset implementation is nuked.\n\n        * haifa-sched.c (extract_bitlst): New parameter for size of the\n        bitset in bits.  All callers changed.  Avoid looking at undefined\n        bits in the bitset.\n        (edgeset_bitsize): New variable.\n        (schedule_region): Initialize edgeset_bitsize.\n\nFrom-SVN: r31322", "tree": {"sha": "52c6c1a113e6fc4a9bbd6399959e875035490b81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52c6c1a113e6fc4a9bbd6399959e875035490b81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8613329216196f7f36857b4c24040c1358cf14c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8613329216196f7f36857b4c24040c1358cf14c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8613329216196f7f36857b4c24040c1358cf14c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8613329216196f7f36857b4c24040c1358cf14c5/comments", "author": null, "committer": null, "parents": [{"sha": "c6f3ffc624dd1b90f7e366f5e85098e38ab8f614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f3ffc624dd1b90f7e366f5e85098e38ab8f614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f3ffc624dd1b90f7e366f5e85098e38ab8f614"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "efa7406db27713def192539eff67d54fec5b9eb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8613329216196f7f36857b4c24040c1358cf14c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8613329216196f7f36857b4c24040c1358cf14c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8613329216196f7f36857b4c24040c1358cf14c5", "patch": "@@ -1,3 +1,12 @@\n+Tue Jan 11 05:49:01 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Band-aid until haifa's bitset implementation is nuked.\n+\t* haifa-sched.c (extract_bitlst): New parameter for size of the\n+\tbitset in bits.  All callers changed.  Avoid looking at undefined\n+\tbits in the bitset.\n+\t(edgeset_bitsize): New variable.\n+\t(schedule_region): Initialize edgeset_bitsize.\n+\n 2000-01-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (optabs.o): Depend on real.h"}, {"sha": "b677b045e7802ef99a04ccc984efbfc71f705166", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8613329216196f7f36857b4c24040c1358cf14c5/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8613329216196f7f36857b4c24040c1358cf14c5/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=8613329216196f7f36857b4c24040c1358cf14c5", "patch": "@@ -594,7 +594,7 @@ static int bitlst_table_size;\n static int *bitlst_table;\n \n static char bitset_member PROTO ((bitset, int, int));\n-static void extract_bitlst PROTO ((bitset, int, bitlst *));\n+static void extract_bitlst PROTO ((bitset, int, int, bitlst *));\n \n /* Target info declarations.\n \n@@ -680,6 +680,9 @@ static int *rgn_edges;\n /* Number of words in an edgeset.  */\n static int edgeset_size;\n \n+/* Number of bits in an edgeset.  */\n+static int edgeset_bitsize;\n+\n /* Mapping from each edge in the graph to its number in the rgn.  */\n static int *edge_to_bit;\n #define EDGE_TO_BIT(edge) (edge_to_bit[edge])\n@@ -1216,7 +1219,7 @@ bitset_member (set, index, len)\n /* Translate a bit-set SET to a list BL of the bit-set members.  */\n \n static void\n-extract_bitlst (set, len, bl)\n+extract_bitlst (set, len, bitlen, bl)\n      bitset set;\n      int len;\n      bitlst *bl;\n@@ -1230,11 +1233,15 @@ extract_bitlst (set, len, bl)\n   bl->first_member = &bitlst_table[bitlst_table_last];\n   bl->nr_members = 0;\n \n+  /* Iterate over each word in the bitset.  */\n   for (i = 0; i < len; i++)\n     {\n       word = set[i];\n       offset = i * HOST_BITS_PER_WIDE_INT;\n-      for (j = 0; word; j++)\n+\n+      /* Iterate over each bit in the word, but do not\n+\t go beyond the end of the defined bits.  */\n+      for (j = 0; offset < bitlen && word; j++)\n \t{\n \t  if (word & 1)\n \t    {\n@@ -1884,12 +1891,12 @@ split_edges (bb_src, bb_trg, bl)\n      edgelst *bl;\n {\n   int es = edgeset_size;\n-  edgeset src = (edgeset) xmalloc (es * sizeof (HOST_WIDE_INT));\n+  edgeset src = (edgeset) xcalloc (es, sizeof (HOST_WIDE_INT));\n \n   while (es--)\n     src[es] = (pot_split[bb_src])[es];\n   BITSET_DIFFER (src, pot_split[bb_trg], edgeset_size);\n-  extract_bitlst (src, edgeset_size, bl);\n+  extract_bitlst (src, es, edgeset_bitsize, bl);\n   free (src);\n }\n \n@@ -6673,6 +6680,7 @@ schedule_region (rgn)\n \n       /* Split edges.  */\n       edgeset_size = rgn_nr_edges / HOST_BITS_PER_WIDE_INT + 1;\n+      edgeset_bitsize = rgn_nr_edges;\n       pot_split = (edgeset *) xmalloc (current_nr_blocks * sizeof (edgeset));\n       ancestor_edges \n \t= (edgeset *) xmalloc (current_nr_blocks * sizeof (edgeset));"}]}