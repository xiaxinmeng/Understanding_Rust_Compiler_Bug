{"sha": "31a909712014b75fc6ae2ca5eaa425f218bb5f32", "node_id": "C_kwDOANBUbNoAKDMxYTkwOTcxMjAxNGI3NWZjNmFlMmNhNWVhYTQyNWYyMThiYjVmMzI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-03-29T21:16:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-03-29T23:06:25Z"}, "message": "libstdc++: Use std::remove_cv_t in std::optional::transform [PR109340]\n\nWe need to strip cv-qualifiers from the result of the callable passed to\nstd::optional::transform.\n\nFor std::expected::transform and std::expected::transform_error I\nnoticed we were stripping cv-qualifiers but were also incorrectly\nstripping references.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/109340\n\t* include/std/expected (expected::transform): Use\n\tstd::remove_cv_t instead of std::remove_cvref_t.\n\t(expected::transform_error): Likewise.\n\t(expected<cv void, E>::transform): Likewise.\n\t(expected<cv void, E>::transform_error): Likewise.\n\t* include/std/optional (transform): Use std::remove_cv_t.\n\t* testsuite/20_util/optional/monadic/pr109340.cc: New test.", "tree": {"sha": "21d654fbcbcaf03eed0bc8422388f48154714d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21d654fbcbcaf03eed0bc8422388f48154714d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a909712014b75fc6ae2ca5eaa425f218bb5f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a909712014b75fc6ae2ca5eaa425f218bb5f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a909712014b75fc6ae2ca5eaa425f218bb5f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a909712014b75fc6ae2ca5eaa425f218bb5f32/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f50ba054079eccf9ac49997b92793e2a87b13c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f50ba054079eccf9ac49997b92793e2a87b13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f50ba054079eccf9ac49997b92793e2a87b13c"}], "stats": {"total": 79, "additions": 59, "deletions": 20}, "files": [{"sha": "cb5754e2a68be6c4bbd4f3de6b99597a52fac525", "filename": "libstdc++-v3/include/std/expected", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fexpected?ref=31a909712014b75fc6ae2ca5eaa425f218bb5f32", "patch": "@@ -154,8 +154,12 @@ namespace __expected\n \n   template<typename _Fn, typename _Tp>\n     using __result = remove_cvref_t<invoke_result_t<_Fn&&, _Tp&&>>;\n+  template<typename _Fn, typename _Tp>\n+    using __result_xform = remove_cv_t<invoke_result_t<_Fn&&, _Tp&&>>;\n   template<typename _Fn>\n     using __result0 = remove_cvref_t<invoke_result_t<_Fn&&>>;\n+  template<typename _Fn>\n+    using __result0_xform = remove_cv_t<invoke_result_t<_Fn&&>>;\n \n   template<typename _Er>\n     concept __can_be_unexpected\n@@ -953,7 +957,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) &\n \t{\n-\t  using _Up = __expected::__result<_Fn, _Tp&>;\n+\t  using _Up = __expected::__result_xform<_Fn, _Tp&>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -969,7 +973,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &\n \t{\n-\t  using _Up = __expected::__result<_Fn, const _Tp&>;\n+\t  using _Up = __expected::__result_xform<_Fn, const _Tp&>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -985,7 +989,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) &&\n \t{\n-\t  using _Up = __expected::__result<_Fn, _Tp>;\n+\t  using _Up = __expected::__result_xform<_Fn, _Tp>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1001,7 +1005,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &&\n \t{\n-\t  using _Up = __expected::__result<_Fn, const _Tp>;\n+\t  using _Up = __expected::__result_xform<_Fn, const _Tp>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1017,7 +1021,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) &\n \t{\n-\t  using _Gr = __expected::__result<_Fn, _Er&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, _Er&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1033,7 +1037,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) const &\n \t{\n-\t  using _Gr = __expected::__result<_Fn, const _Er&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, const _Er&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1049,7 +1053,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) &&\n \t{\n-\t  using _Gr = __expected::__result<_Fn, _Er&&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, _Er&&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1065,7 +1069,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) const &&\n \t{\n-\t  using _Gr = __expected::__result<_Fn, const _Er&&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, const _Er&&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1630,7 +1634,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) &\n \t{\n-\t  using _Up = __expected::__result0<_Fn>;\n+\t  using _Up = __expected::__result0_xform<_Fn>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1643,7 +1647,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &\n \t{\n-\t  using _Up = __expected::__result0<_Fn>;\n+\t  using _Up = __expected::__result0_xform<_Fn>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1656,7 +1660,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) &&\n \t{\n-\t  using _Up = __expected::__result0<_Fn>;\n+\t  using _Up = __expected::__result0_xform<_Fn>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1669,7 +1673,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &&\n \t{\n-\t  using _Up = __expected::__result0<_Fn>;\n+\t  using _Up = __expected::__result0_xform<_Fn>;\n \t  using _Res = expected<_Up, _Er>;\n \n \t  if (has_value())\n@@ -1682,7 +1686,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) &\n \t{\n-\t  using _Gr = __expected::__result<_Fn, _Er&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, _Er&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1698,7 +1702,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) const &\n \t{\n-\t  using _Gr = __expected::__result<_Fn, const _Er&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, const _Er&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1714,7 +1718,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) &&\n \t{\n-\t  using _Gr = __expected::__result<_Fn, _Er&&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, _Er&&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())\n@@ -1730,7 +1734,7 @@ namespace __expected\n \tconstexpr auto\n \ttransform_error(_Fn&& __f) const &&\n \t{\n-\t  using _Gr = __expected::__result<_Fn, const _Er&&>;\n+\t  using _Gr = __expected::__result_xform<_Fn, const _Er&&>;\n \t  using _Res = expected<_Tp, _Gr>;\n \n \t  if (has_value())"}, {"sha": "bcac15227014f19432215f372725a84b2cfa53c5", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=31a909712014b75fc6ae2ca5eaa425f218bb5f32", "patch": "@@ -1100,7 +1100,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconstexpr auto\n \ttransform(_Fn&& __f) &\n \t{\n-\t  using _Up = invoke_result_t<_Fn, _Tp&>;\n+\t  using _Up = remove_cv_t<invoke_result_t<_Fn, _Tp&>>;\n \t  if (has_value())\n \t    return optional<_Up>(_Optional_func<_Fn>{__f}, **this);\n \t  else\n@@ -1111,7 +1111,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &\n \t{\n-\t  using _Up = invoke_result_t<_Fn, const _Tp&>;\n+\t  using _Up = remove_cv_t<invoke_result_t<_Fn, const _Tp&>>;\n \t  if (has_value())\n \t    return optional<_Up>(_Optional_func<_Fn>{__f}, **this);\n \t  else\n@@ -1122,7 +1122,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconstexpr auto\n \ttransform(_Fn&& __f) &&\n \t{\n-\t  using _Up = invoke_result_t<_Fn, _Tp>;\n+\t  using _Up = remove_cv_t<invoke_result_t<_Fn, _Tp>>;\n \t  if (has_value())\n \t    return optional<_Up>(_Optional_func<_Fn>{__f}, std::move(**this));\n \t  else\n@@ -1133,7 +1133,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &&\n \t{\n-\t  using _Up = invoke_result_t<_Fn, const _Tp>;\n+\t  using _Up = remove_cv_t<invoke_result_t<_Fn, const _Tp>>;\n \t  if (has_value())\n \t    return optional<_Up>(_Optional_func<_Fn>{__f}, std::move(**this));\n \t  else"}, {"sha": "a25b6251589aff4be0870111ed3c8d917ae3d354", "filename": "libstdc++-v3/testsuite/20_util/optional/monadic/pr109340.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fpr109340.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a909712014b75fc6ae2ca5eaa425f218bb5f32/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fpr109340.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fpr109340.cc?ref=31a909712014b75fc6ae2ca5eaa425f218bb5f32", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++23\" }\n+// { dg-do compile { target c++23 } }\n+\n+#include <optional>\n+\n+// PR libstdc++/109242\n+// transform omits required std::remove_cv_t from return optional type\n+\n+struct A { };\n+struct B { };\n+struct C { };\n+struct D { };\n+\n+struct F\n+{\n+  const A operator()(int&);\n+  const B operator()(const int&);\n+  const C operator()(int&&);\n+  const D operator()(const int&&);\n+} f;\n+\n+std::optional<int> o;\n+const auto& co = o;\n+\n+auto o1 = o.transform(f);\n+static_assert(std::is_same_v<decltype(o1), std::optional<A>>);\n+\n+auto o2 = co.transform(f);\n+static_assert(std::is_same_v<decltype(o2), std::optional<B>>);\n+\n+auto o3 = std::move(o).transform(f);\n+static_assert(std::is_same_v<decltype(o3), std::optional<C>>);\n+\n+auto o4 = std::move(co).transform(f);\n+static_assert(std::is_same_v<decltype(o4), std::optional<D>>);"}]}