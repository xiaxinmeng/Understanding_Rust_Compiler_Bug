{"sha": "367aa58580632b0bef67f5bbcc41009eb8a09381", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY3YWE1ODU4MDYzMmIwYmVmNjdmNWJiY2M0MTAwOWViOGEwOTM4MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-08-02T11:52:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-08-02T11:52:38Z"}, "message": "semantics.c (expand_body): Do tree optimization in the function context, too.\n\n        * semantics.c (expand_body): Do tree optimization in the function\n        context, too.\n\nFrom-SVN: r55982", "tree": {"sha": "614fc3d0851f4bac9d99a7deabcd571259d62a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/614fc3d0851f4bac9d99a7deabcd571259d62a9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/367aa58580632b0bef67f5bbcc41009eb8a09381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367aa58580632b0bef67f5bbcc41009eb8a09381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/367aa58580632b0bef67f5bbcc41009eb8a09381", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367aa58580632b0bef67f5bbcc41009eb8a09381/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6be5aeed5b63c9e774110910a81b16a51b8f89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6be5aeed5b63c9e774110910a81b16a51b8f89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6be5aeed5b63c9e774110910a81b16a51b8f89d"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "f9e22ca2388ba4803b0d06f3b1257a032889ad9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/367aa58580632b0bef67f5bbcc41009eb8a09381/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/367aa58580632b0bef67f5bbcc41009eb8a09381/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=367aa58580632b0bef67f5bbcc41009eb8a09381", "patch": "@@ -1,3 +1,8 @@\n+2002-08-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (expand_body): Do tree optimization in the function\n+\tcontext, too.\n+\n 2002-08-01  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cp-tree.h: Move all warning and flag declarations to c-common.h."}, {"sha": "58d1647cd681e5d0ecb143718e41d8c653574cec", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/367aa58580632b0bef67f5bbcc41009eb8a09381/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/367aa58580632b0bef67f5bbcc41009eb8a09381/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=367aa58580632b0bef67f5bbcc41009eb8a09381", "patch": "@@ -2326,6 +2326,7 @@ expand_body (fn)\n {\n   int saved_lineno;\n   const char *saved_input_filename;\n+  tree saved_function;\n \n   /* When the parser calls us after finishing the body of a template\n      function, we don't really want to expand the body.  When we're\n@@ -2403,21 +2404,23 @@ expand_body (fn)\n   if (DECL_EXTERNAL (fn))\n     return;\n \n-  timevar_push (TV_INTEGRATION);\n-\n-  /* Optimize the body of the function before expanding it.  */\n-  optimize_function (fn);\n-\n-  timevar_pop (TV_INTEGRATION);\n-  timevar_push (TV_EXPAND);\n-\n   /* Save the current file name and line number.  When we expand the\n      body of the function, we'll set LINENO and INPUT_FILENAME so that\n      error-mesages come out in the right places.  */\n   saved_lineno = lineno;\n   saved_input_filename = input_filename;\n+  saved_function = current_function_decl;\n   lineno = DECL_SOURCE_LINE (fn);\n   input_filename = DECL_SOURCE_FILE (fn);\n+  current_function_decl = fn;\n+\n+  timevar_push (TV_INTEGRATION);\n+\n+  /* Optimize the body of the function before expanding it.  */\n+  optimize_function (fn);\n+\n+  timevar_pop (TV_INTEGRATION);\n+  timevar_push (TV_EXPAND);\n \n   genrtl_start_function (fn);\n   current_function_is_thunk = DECL_THUNK_P (fn);\n@@ -2450,6 +2453,7 @@ expand_body (fn)\n     DECL_SAVED_TREE (fn) = NULL_TREE;\n \n   /* And restore the current source position.  */\n+  current_function_decl = saved_function;\n   lineno = saved_lineno;\n   input_filename = saved_input_filename;\n   extract_interface_info ();"}]}