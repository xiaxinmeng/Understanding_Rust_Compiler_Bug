{"sha": "6611da37114cc6a8ba94f81ec6d7d95f729a2877", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYxMWRhMzcxMTRjYzZhOGJhOTRmODFlYzZkN2Q5NWY3MjlhMjg3Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T15:58:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T15:58:15Z"}, "message": "Update comments.\n\nFrom-SVN: r164196", "tree": {"sha": "c360f8fde3e8e54ef8fa11fb31e680cde1f9ca74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c360f8fde3e8e54ef8fa11fb31e680cde1f9ca74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6611da37114cc6a8ba94f81ec6d7d95f729a2877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6611da37114cc6a8ba94f81ec6d7d95f729a2877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6611da37114cc6a8ba94f81ec6d7d95f729a2877", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6611da37114cc6a8ba94f81ec6d7d95f729a2877/comments", "author": null, "committer": null, "parents": [{"sha": "f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e7ec1061fc4b2a73a0268d69c6f4a9611e1d35"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cbeae34fd985115f840335290a9a00f127f36f77", "filename": "gcc/ada/a-strunb-shared.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6611da37114cc6a8ba94f81ec6d7d95f729a2877/gcc%2Fada%2Fa-strunb-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6611da37114cc6a8ba94f81ec6d7d95f729a2877/gcc%2Fada%2Fa-strunb-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.ads?ref=6611da37114cc6a8ba94f81ec6d7d95f729a2877", "patch": "@@ -55,19 +55,19 @@\n \n    --   - Object mutation. Shared data object can be reused without memory\n    --     reallocation when all of the following requirements are met:\n-   --      - shared data object is no longer used by anyone else.\n-   --      - the size is sufficient to store new value.\n-   --      - the gap after reuse is less then a defined threashold.\n+   --      - the shared data object is no longer used by anyone else;\n+   --      - the size is sufficient to store the new value;\n+   --      - the gap after reuse is less then a defined threshold.\n \n    --   - Memory preallocation. Most of used memory allocation algorithms\n-   --     allign allocated segments on the some boundary, thus some amount of\n+   --     align allocated segments on the some boundary, thus some amount of\n    --     additional memory can be preallocated without any impact. Such\n    --     preallocated memory can used later by Append/Insert operations\n    --     without reallocation.\n \n    --  Reference counting uses GCC builtin atomic operations, which allows to\n-   --  safely share internal data between Ada tasks. Nevertheless, this not\n-   --  make objects of Unbounded_String thread-safe, so each instance can't be\n+   --  safely share internal data between Ada tasks. Nevertheless, this doesn't\n+   --  make objects of Unbounded_String thread-safe: each instance can't be\n    --  accessed by several tasks simulatenously.\n \n with Ada.Strings.Maps;"}]}