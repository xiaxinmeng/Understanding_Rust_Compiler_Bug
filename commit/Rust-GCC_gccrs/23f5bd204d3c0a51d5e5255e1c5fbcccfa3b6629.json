{"sha": "23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNmNWJkMjA0ZDNjMGE1MWQ1ZTUyNTVlMWM1ZmJjY2NmYTNiNjYyOQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-22T21:36:28Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-22T21:36:28Z"}, "message": "sched-rgn.c: Use rtx_insn in a couple of places\n\ngcc/\n2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n\n\t* sched-rgn.c (is_cfg_nonregular): Strengthen locals \"insn\" and\n\t\"next\" from rtx to rtx_insn *.\n\t(find_conditional_protection): Likewise for local \"next\".\n\t(is_conditionally_protected): Likewise for local \"insn1\".\n\t(is_pfree): Likewise for locals \"insn1\", \"insn2\".\n\nFrom-SVN: r214378", "tree": {"sha": "b55c4f3ce994c6cc3121da1f695a9ea09badbe19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55c4f3ce994c6cc3121da1f695a9ea09badbe19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66fcd40c62ed289e13886f11bc66e503456c3f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66fcd40c62ed289e13886f11bc66e503456c3f30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66fcd40c62ed289e13886f11bc66e503456c3f30"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "0e84fee1fa9bf7f1d4da779659ab4ad99f57baf0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "patch": "@@ -1,3 +1,11 @@\n+2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sched-rgn.c (is_cfg_nonregular): Strengthen locals \"insn\" and\n+\t\"next\" from rtx to rtx_insn *.\n+\t(find_conditional_protection): Likewise for local \"next\".\n+\t(is_conditionally_protected): Likewise for local \"insn1\".\n+\t(is_pfree): Likewise for locals \"insn1\", \"insn2\".\n+\n 2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sched-int.h (schedule_ebb): Strengthen params \"head\", \"tail\""}, {"sha": "fc8378b97f6bbfc55554859b0c639f200eb40168", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=23f5bd204d3c0a51d5e5255e1c5fbcccfa3b6629", "patch": "@@ -256,7 +256,7 @@ static int\n is_cfg_nonregular (void)\n {\n   basic_block b;\n-  rtx insn;\n+  rtx_insn *insn;\n \n   /* If we have a label that could be the target of a nonlocal goto, then\n      the cfg is not well structured.  */\n@@ -278,7 +278,8 @@ is_cfg_nonregular (void)\n   FOR_EACH_BB_FN (b, cfun)\n     FOR_BB_INSNS (b, insn)\n       {\n-\trtx note, next, set, dest;\n+\trtx note, set, dest;\n+\trtx_insn *next;\n \n \t/* If this function has a computed jump, then we consider the cfg\n \t   not well structured.  */\n@@ -1877,7 +1878,7 @@ find_conditional_protection (rtx insn, int load_insn_bb)\n   /* Iterate through DEF-USE forward dependences.  */\n   FOR_EACH_DEP (insn, SD_LIST_FORW, sd_it, dep)\n     {\n-      rtx next = DEP_CON (dep);\n+      rtx_insn *next = DEP_CON (dep);\n \n       if ((CONTAINING_RGN (BLOCK_NUM (next)) ==\n \t   CONTAINING_RGN (BB_TO_BLOCK (load_insn_bb)))\n@@ -1913,7 +1914,7 @@ is_conditionally_protected (rtx load_insn, int bb_src, int bb_trg)\n \n   FOR_EACH_DEP (load_insn, SD_LIST_BACK, sd_it, dep)\n     {\n-      rtx insn1 = DEP_PRO (dep);\n+      rtx_insn *insn1 = DEP_PRO (dep);\n \n       /* Must be a DEF-USE dependence upon non-branch.  */\n       if (DEP_TYPE (dep) != REG_DEP_TRUE\n@@ -1969,7 +1970,7 @@ is_pfree (rtx load_insn, int bb_src, int bb_trg)\n \n   FOR_EACH_DEP (load_insn, SD_LIST_BACK, back_sd_it, back_dep)\n     {\n-      rtx insn1 = DEP_PRO (back_dep);\n+      rtx_insn *insn1 = DEP_PRO (back_dep);\n \n       if (DEP_TYPE (back_dep) == REG_DEP_TRUE)\n \t/* Found a DEF-USE dependence (insn1, load_insn).  */\n@@ -1979,7 +1980,7 @@ is_pfree (rtx load_insn, int bb_src, int bb_trg)\n \n \t  FOR_EACH_DEP (insn1, SD_LIST_FORW, fore_sd_it, fore_dep)\n \t    {\n-\t      rtx insn2 = DEP_CON (fore_dep);\n+\t      rtx_insn *insn2 = DEP_CON (fore_dep);\n \n \t      if (DEP_TYPE (fore_dep) == REG_DEP_TRUE)\n \t\t{"}]}