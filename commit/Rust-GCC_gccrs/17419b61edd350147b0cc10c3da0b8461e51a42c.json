{"sha": "17419b61edd350147b0cc10c3da0b8461e51a42c", "node_id": "C_kwDOANBUbNoAKDE3NDE5YjYxZWRkMzUwMTQ3YjBjYzEwYzNkYTBiODQ2MWU1MWE0MmM", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-07-01T08:18:07Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-07-01T08:18:07Z"}, "message": "PR target/106122: Don't update %esp via the stack with -Oz on x86.\n\nWhen optimizing for size with -Oz, setting a register can be minimized by\npushing an immediate value to the stack and popping it to the destination.\nAlas the one general register that shouldn't be updated via the stack is\nthe stack pointer itself, where \"pop %esp\" can't be represented in GCC's\nRTL (\"use of a register mentioned in pre_inc, pre_dec, post_inc or\npost_dec is not permitted within the same instruction\").  This patch\nfixes PR target/106122 by explicitly checking for SP_REG in the\nproblematic peephole2.\n\n2022-07-01  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR target/106122\n\t* config/i386/i386.md (peephole2): Avoid generating pop %esp\n\twhen optimizing for size.\n\ngcc/testsuite/ChangeLog\n\tPR target/106122\n\t* gcc.target/i386/pr106122.c: New test case.", "tree": {"sha": "e6134b3fc69c61b4dd2a694bfc17f0b2f79b6366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6134b3fc69c61b4dd2a694bfc17f0b2f79b6366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17419b61edd350147b0cc10c3da0b8461e51a42c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17419b61edd350147b0cc10c3da0b8461e51a42c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17419b61edd350147b0cc10c3da0b8461e51a42c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17419b61edd350147b0cc10c3da0b8461e51a42c/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a46e5cdab500eadffc0a11850d074498b3c2b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a46e5cdab500eadffc0a11850d074498b3c2b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8a46e5cdab500eadffc0a11850d074498b3c2b2"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "34018144e5fd723ce2c3deb038c53714a515cc11", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17419b61edd350147b0cc10c3da0b8461e51a42c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17419b61edd350147b0cc10c3da0b8461e51a42c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=17419b61edd350147b0cc10c3da0b8461e51a42c", "patch": "@@ -2589,7 +2589,8 @@\n   \"optimize_insn_for_size_p () && optimize_size > 1\n    && operands[1] != const0_rtx\n    && IN_RANGE (INTVAL (operands[1]), -128, 127)\n-   && !ix86_red_zone_used\"\n+   && !ix86_red_zone_used\n+   && REGNO (operands[0]) != SP_REG\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (match_dup 3))]\n {"}, {"sha": "7d24ed3376dd324078429126b0ab7ee3984eb12a", "filename": "gcc/testsuite/gcc.target/i386/pr106122.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17419b61edd350147b0cc10c3da0b8461e51a42c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17419b61edd350147b0cc10c3da0b8461e51a42c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106122.c?ref=17419b61edd350147b0cc10c3da0b8461e51a42c", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/106122 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Oz\" } */\n+\n+register volatile int a __asm__(\"%esp\");\n+void foo (void *);\n+void bar (void *);\n+\n+void\n+baz (void)\n+{\n+  foo (__builtin_return_address (0));\n+  a = 0;\n+  bar (__builtin_return_address (0));\n+}"}]}