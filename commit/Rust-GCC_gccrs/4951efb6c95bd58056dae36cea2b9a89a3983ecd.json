{"sha": "4951efb6c95bd58056dae36cea2b9a89a3983ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk1MWVmYjZjOTViZDU4MDU2ZGFlMzZjZWEyYjlhODlhMzk4M2VjZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-16T23:25:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-16T23:25:52Z"}, "message": "pt.c (instantiate_class_template_1): If DECL_PRESERVE_P is set on a member function or static data member...\n\n\t* pt.c (instantiate_class_template_1): If DECL_PRESERVE_P is set\n\ton a member function or static data member, call mark_used.\n\nFrom-SVN: r177811", "tree": {"sha": "b8b069b2bb944d9161a0ef3d7864da6dc6f40a9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8b069b2bb944d9161a0ef3d7864da6dc6f40a9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4951efb6c95bd58056dae36cea2b9a89a3983ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951efb6c95bd58056dae36cea2b9a89a3983ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4951efb6c95bd58056dae36cea2b9a89a3983ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951efb6c95bd58056dae36cea2b9a89a3983ecd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "098416302ba1d50a7f183e8643a2563a255b744a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/098416302ba1d50a7f183e8643a2563a255b744a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/098416302ba1d50a7f183e8643a2563a255b744a"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "c06a3078e44030e0e886385bdcb21599e1e9219a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4951efb6c95bd58056dae36cea2b9a89a3983ecd", "patch": "@@ -1,5 +1,8 @@\n 2011-08-16  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (instantiate_class_template_1): If DECL_PRESERVE_P is set\n+\ton a member function or static data member, call mark_used.\n+\n \tPR c++/50054\n \t* typeck2.c (cxx_incomplete_type_diagnostic): Handle\n \tinit_list_type_node."}, {"sha": "9a4419a0783506244c7f86ef861cc84c784ee6c1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4951efb6c95bd58056dae36cea2b9a89a3983ecd", "patch": "@@ -8675,6 +8675,9 @@ instantiate_class_template_1 (tree type)\n \t\t--processing_template_decl;\n \t      set_current_access_from_decl (r);\n \t      finish_member_declaration (r);\n+\t      /* Instantiate members marked with attribute used.  */\n+\t      if (r != error_mark_node && DECL_PRESERVE_P (r))\n+\t\tmark_used (r);\n \t    }\n \t  else\n \t    {\n@@ -8724,6 +8727,9 @@ instantiate_class_template_1 (tree type)\n \t\t\t /*init_const_expr_p=*/false,\n \t\t\t /*asmspec_tree=*/NULL_TREE,\n \t\t\t /*flags=*/0);\n+\t\t      /* Instantiate members marked with attribute used.  */\n+\t\t      if (r != error_mark_node && DECL_PRESERVE_P (r))\n+\t\t\tmark_used (r);\n \t\t    }\n \t\t  else if (TREE_CODE (r) == FIELD_DECL)\n \t\t    {"}, {"sha": "786c18ddae2c8e0d6a81e91ab230b08bb55f0c58", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=4951efb6c95bd58056dae36cea2b9a89a3983ecd", "patch": "@@ -3647,6 +3647,10 @@ for the function even if it appears that the function is not referenced.\n This is useful, for example, when the function is referenced only in\n inline assembly.\n \n+When applied to a member function of a C++ class template, the\n+attribute also means that the function will be instantiated if the\n+class itself is instantiated.\n+\n @item version_id\n @cindex @code{version_id} attribute\n This IA64 HP-UX attribute, attached to a global variable or function, renames a\n@@ -4457,6 +4461,10 @@ variable.\n This attribute, attached to a variable, means that the variable must be\n emitted even if it appears that the variable is not referenced.\n \n+When applied to a static data member of a C++ class template, the\n+attribute also means that the member will be instantiated if the\n+class itself is instantiated.\n+\n @item vector_size (@var{bytes})\n This attribute specifies the vector size for the variable, measured in\n bytes.  For example, the declaration:"}, {"sha": "39107f93ee4dd46bc78c0942f9aab622e74b7a6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4951efb6c95bd58056dae36cea2b9a89a3983ecd", "patch": "@@ -1,5 +1,7 @@\n 2011-08-16  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/ext/attr-used-1.C: New.\n+\n \tPR c++/50054\n \t* g++.dg/cpp0x/initlist56.C: New.\n "}, {"sha": "6754c7ffb5090bb594d4308650187055ffe6badb", "filename": "gcc/testsuite/g++.dg/ext/attr-used-1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-used-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951efb6c95bd58056dae36cea2b9a89a3983ecd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-used-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-used-1.C?ref=4951efb6c95bd58056dae36cea2b9a89a3983ecd", "patch": "@@ -0,0 +1,17 @@\n+// Attribute used on a member function or static data member\n+// of a template should cause them to be instantiated along\n+// with the class itself.\n+\n+// { dg-final { scan-assembler \"_ZN1AIiE1fEv\" } }\n+// { dg-final { scan-assembler \"_ZN1AIiE1tE\" } }\n+\n+template <class T> struct A\n+{\n+  void f() __attribute ((used));\n+  static T t __attribute ((used));\n+};\n+\n+template <class T> void A<T>::f() { }\n+template <class T> T A<T>::t;\n+\n+A<int> a;"}]}