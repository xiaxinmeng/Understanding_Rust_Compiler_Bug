{"sha": "500ecf4abd0f29d0cb4555de105a3f4152b6c423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwZWNmNGFiZDBmMjlkMGNiNDU1NWRlMTA1YTNmNDE1MmI2YzQyMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-04-29T12:32:45Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-04-29T12:32:45Z"}, "message": "re PR sanitizer/70342 (g++ -fsanitize=undefined never finishes compiling (>24h) in qtxmlpatterns test suite)\n\n\tPR sanitizer/70342\n\t* fold-const.c (tree_single_nonzero_warnv_p): For TARGET_EXPR, use\n\tTARGET_EXPR_SLOT as a base.\n\n\t* g++.dg/ubsan/null-7.C: New test.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r235637", "tree": {"sha": "8749fd9d4a954d7caca29c71b93fd5d965172f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8749fd9d4a954d7caca29c71b93fd5d965172f0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500ecf4abd0f29d0cb4555de105a3f4152b6c423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500ecf4abd0f29d0cb4555de105a3f4152b6c423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500ecf4abd0f29d0cb4555de105a3f4152b6c423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500ecf4abd0f29d0cb4555de105a3f4152b6c423/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1f7021242e827f69cd1c2ed5d5eaf33ddfcd196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f7021242e827f69cd1c2ed5d5eaf33ddfcd196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f7021242e827f69cd1c2ed5d5eaf33ddfcd196"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "a6b6804577654cae6b5a386c47243f46c345455b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=500ecf4abd0f29d0cb4555de105a3f4152b6c423", "patch": "@@ -1,3 +1,10 @@\n+2016-04-29  Marek Polacek  <polacek@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/70342\n+\t* fold-const.c (tree_single_nonzero_warnv_p): For TARGET_EXPR, use\n+\tTARGET_EXPR_SLOT as a base.\n+\n 2016-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* config/arc/arc.md (*loadqi_update): Replace use of 'rI'"}, {"sha": "4aa24125440270e4759b2bb9107db2cf5c7f2213", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=500ecf4abd0f29d0cb4555de105a3f4152b6c423", "patch": "@@ -13534,6 +13534,9 @@ tree_single_nonzero_warnv_p (tree t, bool *strict_overflow_p)\n \tif (!DECL_P (base))\n \t  base = get_base_address (base);\n \n+\tif (base && TREE_CODE (base) == TARGET_EXPR)\n+\t  base = TARGET_EXPR_SLOT (base);\n+\n \tif (!base)\n \t  return false;\n "}, {"sha": "93e89d98fb772975d68470a90f2971ec377fab73", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=500ecf4abd0f29d0cb4555de105a3f4152b6c423", "patch": "@@ -1,3 +1,8 @@\n+2016-04-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/70342\n+\t* g++.dg/ubsan/null-7.C: New test.\n+\n 2016-04-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \tPR/69089"}, {"sha": "8284bc7ddfa8f00fe4b3ce6b3ca0e4872ce0690f", "filename": "gcc/testsuite/g++.dg/ubsan/null-7.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500ecf4abd0f29d0cb4555de105a3f4152b6c423/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fnull-7.C?ref=500ecf4abd0f29d0cb4555de105a3f4152b6c423", "patch": "@@ -0,0 +1,24 @@\n+// PR sanitizer/70342\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=null\" }\n+\n+class A {};\n+class B {\n+public:\n+  B(A);\n+};\n+class C {\n+public:\n+  C operator<<(B);\n+};\n+class D {\n+  D(const int &);\n+  C m_blackList;\n+};\n+D::D(const int &) {\n+  m_blackList << A() << A() << A() << A() << A() << A() << A() << A() << A()\n+              << A() << A() << A() << A() << A() << A() << A() << A() << A()\n+              << A() << A() << A() << A() << A() << A() << A() << A() << A()\n+              << A() << A() << A() << A() << A() << A() << A() << A() << A()\n+              << A() << A() << A() << A() << A() << A() << A() << A() << A();\n+}"}]}