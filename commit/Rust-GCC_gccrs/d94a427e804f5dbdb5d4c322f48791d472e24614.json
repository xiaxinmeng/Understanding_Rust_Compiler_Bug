{"sha": "d94a427e804f5dbdb5d4c322f48791d472e24614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0YTQyN2U4MDRmNWRiZGI1ZDRjMzIyZjQ4NzkxZDQ3MmUyNDYxNA==", "commit": {"author": {"name": "Arthur Loiret", "email": "aloiret@debian.org", "date": "2009-03-24T10:33:57Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2009-03-24T10:33:57Z"}, "message": "config.host (alpha*-*-linux*): Use driver-alpha.o and alpha/x-alpha.\n\n2009-03-24  Arthur Loiret  <aloiret@debian.org>\n\n\t* config.host (alpha*-*-linux*): Use driver-alpha.o and\n\talpha/x-alpha.\n\t* config/alpha/linux.h (host_detect_local_cpu): Declare, add to\n\tEXTRA_SPEC_FUNCTIONS.\n\t(MCPU_MTUNE_NATIVE_SPECS, DRIVER_SELF_SPECS): New macros.\n\t* config/alpha/driver-alpha.c, config/alpha/x-alpha: New.\n\t* doc/invoke.texi (DEC Alpha Options): Document 'native' value for\n\t-march and -mtune options.\n\nFrom-SVN: r145028", "tree": {"sha": "f8641df89601617667b5eb32e4dd05c034244718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8641df89601617667b5eb32e4dd05c034244718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d94a427e804f5dbdb5d4c322f48791d472e24614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94a427e804f5dbdb5d4c322f48791d472e24614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94a427e804f5dbdb5d4c322f48791d472e24614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94a427e804f5dbdb5d4c322f48791d472e24614/comments", "author": null, "committer": null, "parents": [{"sha": "92da2d44d665c5167a30634b574ca87edc3c45fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92da2d44d665c5167a30634b574ca87edc3c45fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92da2d44d665c5167a30634b574ca87edc3c45fb"}], "stats": {"total": 151, "additions": 148, "deletions": 3}, "files": [{"sha": "6974b1f802af898cddabdffa317189efef60c794", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -1,3 +1,14 @@\n+2009-03-24  Arthur Loiret  <aloiret@debian.org>\n+\n+\t* config.host (alpha*-*-linux*): Use driver-alpha.o and\n+\talpha/x-alpha.\n+\t* config/alpha/linux.h (host_detect_local_cpu): Declare, add to\n+\tEXTRA_SPEC_FUNCTIONS.\n+\t(MCPU_MTUNE_NATIVE_SPECS, DRIVER_SELF_SPECS): New macros.\n+\t* config/alpha/driver-alpha.c, config/alpha/x-alpha: New.\n+\t* doc/invoke.texi (DEC Alpha Options): Document 'native' value for\n+\t-march and -mtune options.\n+\n 2009-03-24  Ralf Cors\u00e9pius <ralf.corsepius@rtems.org>\n \n \t* config/m68k/t-rtems: Add m5329 multilib."}, {"sha": "b06d1648c73f4d9277a8ffcff6480d1f891faf2f", "filename": "gcc/config.host", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -94,6 +94,14 @@ case ${host} in\n esac\n \n case ${host} in\n+  alpha*-*-linux*)\n+    case ${target} in\n+      alpha*-*-linux*)\n+\thost_extra_gcc_objs=\"driver-alpha.o\"\n+\thost_xmake_file=\"${host_xmake_file} alpha/x-alpha\"\n+\t;;\n+    esac\n+    ;;\n   i[34567]86-*-* \\\n   | x86_64-*-* )\n     case ${target} in\n@@ -112,9 +120,6 @@ case ${host} in\n       ;;\n     esac\n     ;;\n-esac\n-\n-case ${host} in\n   rs6000-*-* \\\n   | powerpc*-*-* )\n     case ${target} in"}, {"sha": "d787886d1729add4887e7ae770f63bbcb2d8da5e", "filename": "gcc/config/alpha/driver-alpha.c", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Fdriver-alpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Fdriver-alpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fdriver-alpha.c?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -0,0 +1,100 @@\n+/* Subroutines for the gcc driver.\n+   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Contributed by Arthur Loiret <aloiret@debian.org>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+\n+/* This will be called by the spec parser in gcc.c when it sees\n+   a %:local_cpu_detect(args) construct.  Currently it will be called\n+   with either \"cpu\" or \"tune\" as argument depending on if -mcpu=native\n+   or -mtune=native is to be substituted.\n+\n+   It returns a string containing new command line parameters to be\n+   put at the place of the above two options, depending on what CPU\n+   this is executed.  E.g. \"-mcpu=ev6\" on an Alpha 21264 for\n+   -mcpu=native.  If the routine can't detect a known processor,\n+   the -mcpu or -mtune option is discarded.\n+\n+   ARGC and ARGV are set depending on the actual arguments given\n+   in the spec.  */\n+const char *\n+host_detect_local_cpu (int argc, const char **argv)\n+{\n+  const char *cpu = NULL;\n+  char buf[128];\n+  FILE *f;\n+\n+  static const struct cpu_names {\n+   const char *const name;\n+   const char *const cpu;\n+  } cpu_names[] = {\n+    { \"EV79\",\t\"ev67\" },\n+    { \"EV7\",\t\"ev67\" },\n+    { \"EV69\",\t\"ev67\" },\n+    { \"EV68CX\",\t\"ev67\" },\n+    { \"EV68CB\",\t\"ev67\" },\n+    { \"EV68AL\",\t\"ev67\" },\n+    { \"EV67\",\t\"ev67\" },\n+    { \"EV6\",\t\"ev6\" },\n+    { \"PCA57\",\t\"pca56\" },\n+    { \"PCA56\",\t\"pca56\" },\n+    { \"EV56\",\t\"ev56\" },\n+    { \"EV5\",\t\"ev5\" },\n+    { \"LCA45\",\t\"ev45\" },\n+    { \"EV45\",\t\"ev45\" },\n+    { \"LCA4\",\t\"ev4\" },\n+    { \"EV4\",\t\"ev4\" },\n+/*  { \"EV3\",\t\"ev3\" },  */\n+    { 0, 0 }\n+  };\n+\n+  int i;\n+\n+  if (argc < 1)\n+    return NULL;\n+\n+  if (strcmp (argv[0], \"cpu\") && strcmp (argv[0], \"tune\"))\n+    return NULL;\n+\n+  f = fopen (\"/proc/cpuinfo\", \"r\");\n+  if (f == NULL)\n+    return NULL;\n+\n+  while (fgets (buf, sizeof (buf), f) != NULL)\n+    if (strncmp (buf, \"cpu model\", sizeof (\"cpu model\") - 1) == 0)\n+      {\n+        for (i = 0; cpu_names [i].name; i++)\n+          if (strstr (buf, cpu_names [i].name) != NULL)\n+\t    {\n+\t      cpu = cpu_names [i].cpu;\n+\t      break;\n+\t    }\n+\tbreak;\n+      }\n+\n+  fclose (f);\n+\n+  if (cpu == NULL)\n+    return NULL;\n+\n+  return concat (\"-m\", argv[0], \"=\", cpu, NULL);\n+}"}, {"sha": "0a32479d5d7edc6f17430a1942abcd1b883fe8e1", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -85,3 +85,19 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Define if long doubles should be mangled as 'g'.  */\n #define TARGET_ALTERNATE_LONG_DOUBLE_MANGLING\n+\n+/* -mcpu=native handling only makes sense with compiler running on\n+   an Alpha chip.  */\n+#if defined(__alpha__) || defined(__alpha)\n+extern const char *host_detect_local_cpu (int argc, const char **argv);\n+# define EXTRA_SPEC_FUNCTIONS\t\t\t\t\t\t\\\n+  { \"local_cpu_detect\", host_detect_local_cpu },\n+\n+# define MCPU_MTUNE_NATIVE_SPECS\t\t\t\t\t\\\n+   \" %{mcpu=native:%<mcpu=native %:local_cpu_detect(cpu)}\"\t\t\\\n+   \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#else\n+# define MCPU_MTUNE_NATIVE_SPECS \"\"\n+#endif\n+\n+#define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS"}, {"sha": "27b5f46690317ecc2398c44ea81d38a3a70c562d", "filename": "gcc/config/alpha/x-alpha", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Fx-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fconfig%2Falpha%2Fx-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fx-alpha?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -0,0 +1,3 @@\n+driver-alpha.o: $(srcdir)/config/alpha/driver-alpha.c \\\n+  $(CONFIG_H) $(SYSTEM_H)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "40b72026ce20cb36c964967866cc9317f603a248", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94a427e804f5dbdb5d4c322f48791d472e24614/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d94a427e804f5dbdb5d4c322f48791d472e24614", "patch": "@@ -10212,11 +10212,21 @@ Schedules as an EV6 and supports the BWX, FIX, and MAX extensions.\n Schedules as an EV6 and supports the BWX, CIX, FIX, and MAX extensions.\n @end table\n \n+Native Linux/GNU toolchains also support the value @samp{native},\n+which selects the best architecture option for the host processor.\n+@option{-mcpu=native} has no effect if GCC does not recognize\n+the processor.\n+\n @item -mtune=@var{cpu_type}\n @opindex mtune\n Set only the instruction scheduling parameters for machine type\n @var{cpu_type}.  The instruction set is not changed.\n \n+Native Linux/GNU toolchains also support the value @samp{native},\n+which selects the best architecture option for the host processor.\n+@option{-mtune=native} has no effect if GCC does not recognize\n+the processor.\n+\n @item -mmemory-latency=@var{time}\n @opindex mmemory-latency\n Sets the latency the scheduler should assume for typical memory"}]}