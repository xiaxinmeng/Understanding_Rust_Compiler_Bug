{"sha": "22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiODc5OGNiZTNmNDE4MGQwZjA2OGZjYWMyMDJhYmMzZTVmOGRhMw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-05-03T15:50:51Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-05-03T15:50:51Z"}, "message": "rs6000.c (spe_init_builtins): Call build_function_type_list instead of build_function_type.\n\n\t* config/rs6000/rs6000.c (spe_init_builtins): Call\n\tbuild_function_type_list instead of build_function_type.\n\t(paired_init_builtins, altivec_init_builtins): Likewise.\n\t(builtin_function_type): Likewise.\n\nFrom-SVN: r173319", "tree": {"sha": "6360aa8ae029c21f5e7ed10d156fa985a48cf057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6360aa8ae029c21f5e7ed10d156fa985a48cf057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b8798cbe3f4180d0f068fcac202abc3e5f8da3/comments", "author": null, "committer": null, "parents": [{"sha": "4cb4452830cb94321f419f9cb82eced15878f19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb4452830cb94321f419f9cb82eced15878f19d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb4452830cb94321f419f9cb82eced15878f19d"}], "stats": {"total": 165, "additions": 79, "deletions": 86}, "files": [{"sha": "478a7ac951939a1966df9c73740bb7e41faf79f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b8798cbe3f4180d0f068fcac202abc3e5f8da3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b8798cbe3f4180d0f068fcac202abc3e5f8da3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "patch": "@@ -1,3 +1,10 @@\n+2011-05-03  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (spe_init_builtins): Call\n+\tbuild_function_type_list instead of build_function_type.\n+\t(paired_init_builtins, altivec_init_builtins): Likewise.\n+\t(builtin_function_type): Likewise.\n+\n 2011-05-03  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/sh/sh.c (sh_media_init_builtins): Call"}, {"sha": "fe61b2b05c448aaa23ef68465d12dfc6718c3782", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 72, "deletions": 86, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b8798cbe3f4180d0f068fcac202abc3e5f8da3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b8798cbe3f4180d0f068fcac202abc3e5f8da3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=22b8798cbe3f4180d0f068fcac202abc3e5f8da3", "patch": "@@ -12858,107 +12858,97 @@ enable_mask_for_builtins (struct builtin_description *desc, int size,\n static void\n spe_init_builtins (void)\n {\n-  tree endlink = void_list_node;\n   tree puint_type_node = build_pointer_type (unsigned_type_node);\n   tree pushort_type_node = build_pointer_type (short_unsigned_type_node);\n   struct builtin_description *d;\n   size_t i;\n \n   tree v2si_ftype_4_v2si\n-    = build_function_type\n-    (opaque_V2SI_type_node,\n-     tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\ttree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t\t\t endlink)))));\n+    = build_function_type_list (opaque_V2SI_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_V2SI_type_node,\n+                                NULL_TREE);\n \n   tree v2sf_ftype_4_v2sf\n-    = build_function_type\n-    (opaque_V2SF_type_node,\n-     tree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\ttree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\t\t\t\t\t endlink)))));\n+    = build_function_type_list (opaque_V2SF_type_node,\n+                                opaque_V2SF_type_node,\n+                                opaque_V2SF_type_node,\n+                                opaque_V2SF_type_node,\n+                                opaque_V2SF_type_node,\n+                                NULL_TREE);\n \n   tree int_ftype_int_v2si_v2si\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\ttree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      endlink))));\n+    = build_function_type_list (integer_type_node,\n+                                integer_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_V2SI_type_node,\n+                                NULL_TREE);\n \n   tree int_ftype_int_v2sf_v2sf\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\ttree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SF_type_node,\n-\t\t\t\t      endlink))));\n+    = build_function_type_list (integer_type_node,\n+                                integer_type_node,\n+                                opaque_V2SF_type_node,\n+                                opaque_V2SF_type_node,\n+                                NULL_TREE);\n \n   tree void_ftype_v2si_puint_int\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, puint_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (void_type_node,\n+                                opaque_V2SI_type_node,\n+                                puint_type_node,\n+                                integer_type_node,\n+                                NULL_TREE);\n \n   tree void_ftype_v2si_puint_char\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, puint_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (void_type_node,\n+                                opaque_V2SI_type_node,\n+                                puint_type_node,\n+                                char_type_node,\n+                                NULL_TREE);\n \n   tree void_ftype_v2si_pv2si_int\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (void_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_p_V2SI_type_node,\n+                                integer_type_node,\n+                                NULL_TREE);\n \n   tree void_ftype_v2si_pv2si_char\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (void_type_node,\n+                                opaque_V2SI_type_node,\n+                                opaque_p_V2SI_type_node,\n+                                char_type_node,\n+                                NULL_TREE);\n \n   tree void_ftype_int\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, integer_type_node, endlink));\n+    = build_function_type_list (void_type_node, integer_type_node, NULL_TREE);\n \n   tree int_ftype_void\n-    = build_function_type (integer_type_node, endlink);\n+    = build_function_type_list (integer_type_node, NULL_TREE);\n \n   tree v2si_ftype_pv2si_int\n-    = build_function_type (opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (opaque_V2SI_type_node,\n+                                opaque_p_V2SI_type_node,\n+                                integer_type_node,\n+                                NULL_TREE);\n \n   tree v2si_ftype_puint_int\n-    = build_function_type (opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, puint_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (opaque_V2SI_type_node,\n+                                puint_type_node,\n+                                integer_type_node,\n+                                NULL_TREE);\n \n   tree v2si_ftype_pushort_int\n-    = build_function_type (opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pushort_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (opaque_V2SI_type_node,\n+                                pushort_type_node,\n+                                integer_type_node,\n+                                NULL_TREE);\n \n   tree v2si_ftype_signed_char\n-    = build_function_type (opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, signed_char_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (opaque_V2SI_type_node,\n+                                signed_char_type_node,\n+                                NULL_TREE);\n \n   /* The initialization of the simple binary and unary builtins is\n      done in rs6000_common_init_builtins, but we have to enable the\n@@ -13080,15 +13070,13 @@ paired_init_builtins (void)\n {\n   const struct builtin_description *d;\n   size_t i;\n-  tree endlink = void_list_node;\n \n    tree int_ftype_int_v2sf_v2sf\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-                tree_cons (NULL_TREE, V2SF_type_node,\n-                           tree_cons (NULL_TREE, V2SF_type_node,\n-                                      endlink))));\n+    = build_function_type_list (integer_type_node,\n+                                integer_type_node,\n+                                V2SF_type_node,\n+                                V2SF_type_node,\n+                                NULL_TREE);\n   tree pcfloat_type_node =\n     build_pointer_type (build_qualified_type\n \t\t\t(float_type_node, TYPE_QUAL_CONST));\n@@ -13149,8 +13137,7 @@ altivec_init_builtins (void)\n     = build_function_type_list (integer_type_node,\n \t\t\t\topaque_V4SI_type_node, NULL_TREE);\n   tree opaque_ftype_opaque\n-    = build_function_type (integer_type_node,\n-\t\t\t\tNULL_TREE);\n+    = build_function_type_list (integer_type_node, NULL_TREE);\n   tree opaque_ftype_opaque_int\n     = build_function_type_list (opaque_V4SI_type_node,\n \t\t\t\topaque_V4SI_type_node, integer_type_node, NULL_TREE);\n@@ -13169,9 +13156,9 @@ altivec_init_builtins (void)\n   tree void_ftype_v4si\n     = build_function_type_list (void_type_node, V4SI_type_node, NULL_TREE);\n   tree v8hi_ftype_void\n-    = build_function_type (V8HI_type_node, void_list_node);\n+    = build_function_type_list (V8HI_type_node, NULL_TREE);\n   tree void_ftype_void\n-    = build_function_type (void_type_node, void_list_node);\n+    = build_function_type_list (void_type_node, NULL_TREE);\n   tree void_ftype_int\n     = build_function_type_list (void_type_node, integer_type_node, NULL_TREE);\n \n@@ -13634,7 +13621,6 @@ builtin_function_type (enum machine_mode mode_ret, enum machine_mode mode_arg0,\n   int i;\n   tree ret_type = NULL_TREE;\n   tree arg_type[3] = { NULL_TREE, NULL_TREE, NULL_TREE };\n-  tree args;\n \n   /* Create builtin_hash_table.  */\n   if (builtin_hash_table == NULL)\n@@ -13737,6 +13723,9 @@ builtin_function_type (enum machine_mode mode_ret, enum machine_mode mode_arg0,\n     fatal_error (\"internal error: builtin function %s had an unexpected \"\n \t\t \"return type %s\", name, GET_MODE_NAME (h.mode[0]));\n \n+  for (i = 0; i < (int) ARRAY_SIZE (arg_type); i++)\n+    arg_type[i] = NULL_TREE;\n+\n   for (i = 0; i < num_args; i++)\n     {\n       int m = (int) h.mode[i+1];\n@@ -13758,12 +13747,9 @@ builtin_function_type (enum machine_mode mode_ret, enum machine_mode mode_arg0,\n       h2 = ggc_alloc_builtin_hash_struct ();\n       *h2 = h;\n       *found = (void *)h2;\n-      args = void_list_node;\n-\n-      for (i = num_args - 1; i >= 0; i--)\n-\targs = tree_cons (NULL_TREE, arg_type[i], args);\n \n-      h2->type = build_function_type (ret_type, args);\n+      h2->type = build_function_type_list (ret_type, arg_type[0], arg_type[1],\n+\t\t\t\t\t   arg_type[2], NULL_TREE);\n     }\n \n   return ((struct builtin_hash_struct *)(*found))->type;"}]}