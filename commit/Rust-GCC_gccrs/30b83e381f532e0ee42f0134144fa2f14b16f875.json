{"sha": "30b83e381f532e0ee42f0134144fa2f14b16f875", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBiODNlMzgxZjUzMmUwZWU0MmYwMTM0MTQ0ZmEyZjE0YjE2Zjg3NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-04-05T21:55:18Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-04-05T21:55:18Z"}, "message": "m68k.c (m68k_handle_option): Don't handle OPT_m5200, OPT_m5206e, OPT_m528x, OPT_m5307, OPT_m5407 and OPT_mcfv4e.\n\n\t* config/m68k/m68k.c (m68k_handle_option): Don't handle OPT_m5200,\n\tOPT_m5206e, OPT_m528x, OPT_m5307, OPT_m5407 and OPT_mcfv4e.\n\t* config/m68k/m68k.h (OPTION_DEFAULT_SPECS, ASM_CPU_SPEC): Don't\n\thandle -m5200, -m5206e, -m528x, -m5307, -m5407 and -mcfv4e.\n\t* config/m68k/m68k.opt (m5200, m5206e, m528x, m5307, m5407,\n\tmcfv4e): Use Alias.\n\t* config/m68k/t-mlibs (MULTILIB_MATCHES): Don't map legacy\n\tColdFire options to -mcpu= options.\n\nFrom-SVN: r172005", "tree": {"sha": "19f10cfeabc4d99ade32874dfdaeed8391dff8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f10cfeabc4d99ade32874dfdaeed8391dff8aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30b83e381f532e0ee42f0134144fa2f14b16f875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b83e381f532e0ee42f0134144fa2f14b16f875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b83e381f532e0ee42f0134144fa2f14b16f875", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b83e381f532e0ee42f0134144fa2f14b16f875/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277a9aa5a1aebd2ccf58ca130ab8ecd450e2d089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277a9aa5a1aebd2ccf58ca130ab8ecd450e2d089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277a9aa5a1aebd2ccf58ca130ab8ecd450e2d089"}], "stats": {"total": 58, "additions": 23, "deletions": 35}, "files": [{"sha": "dff7d07e642432407e6f7fe9fca96bc5a1be1414", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30b83e381f532e0ee42f0134144fa2f14b16f875", "patch": "@@ -1,3 +1,14 @@\n+2011-04-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/m68k/m68k.c (m68k_handle_option): Don't handle OPT_m5200,\n+\tOPT_m5206e, OPT_m528x, OPT_m5307, OPT_m5407 and OPT_mcfv4e.\n+\t* config/m68k/m68k.h (OPTION_DEFAULT_SPECS, ASM_CPU_SPEC): Don't\n+\thandle -m5200, -m5206e, -m528x, -m5307, -m5407 and -mcfv4e.\n+\t* config/m68k/m68k.opt (m5200, m5206e, m528x, m5307, m5407,\n+\tmcfv4e): Use Alias.\n+\t* config/m68k/t-mlibs (MULTILIB_MATCHES): Don't map legacy\n+\tColdFire options to -mcpu= options.\n+\n 2011-04-05  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c (determine_bb_domination_status): Always"}, {"sha": "654b681eb8e2c4d626ac92a8620b09933137a621", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=30b83e381f532e0ee42f0134144fa2f14b16f875", "patch": "@@ -499,24 +499,6 @@ m68k_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n     case OPT_mtune_:\n       return m68k_find_selection (&m68k_tune_entry, all_microarchs, arg);\n \n-    case OPT_m5200:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"5206\");\n-\n-    case OPT_m5206e:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"5206e\");\n-\n-    case OPT_m528x:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"528x\");\n-\n-    case OPT_m5307:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"5307\");\n-\n-    case OPT_m5407:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"5407\");\n-\n-    case OPT_mcfv4e:\n-      return m68k_find_selection (&m68k_cpu_entry, all_devices, \"547x\");\n-\n     case OPT_m68000:\n     case OPT_mc68000:\n       return m68k_find_selection (&m68k_cpu_entry, all_devices, \"68000\");"}, {"sha": "d2805f3b424d7cf82d3073842c7d69ef1eb5063f", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=30b83e381f532e0ee42f0134144fa2f14b16f875", "patch": "@@ -31,9 +31,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Handle --with-cpu default option from configure script.  */\n #define OPTION_DEFAULT_SPECS\t\t\t\t\t\t\\\n   { \"cpu\",   \"%{!mc68000:%{!m68000:%{!m68302:%{!m68010:%{!mc68020:%{!m68020:\\\n-%{!m68030:%{!m68040:%{!m68020-40:%{!m68020-60:%{!m68060:%{!mcpu32:\\\n-%{!m68332:%{!m5200:%{!m5206e:%{!m528x:%{!m5307:%{!m5407:%{!mcfv4e:\\\n-%{!mcpu=*:%{!march=*:-%(VALUE)}}}}}}}}}}}}}}}}}}}}}\" },\n+%{!m68030:%{!m68040:%{!m68020-40:%{!m68020-60:%{!m68060:%{!mcpu32:%{!m68332:\\\n+%{!mcpu=*:%{!march=*:-%(VALUE)}}}}}}}}}}}}}}}\" },\n \n /* Pass flags to gas indicating which type of processor we have.  This\n    can be simplified when we can rely on the assembler supporting .cpu\n@@ -43,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n %{m68851}%{mno-68851} %{m68881}%{mno-68881} %{msoft-float:-mno-float} \\\n %{m68000}%{m68302}%{mc68000}%{m68010}%{m68020}%{mc68020}%{m68030}\\\n %{m68040}%{m68020-40:-m68040}%{m68020-60:-m68040}\\\n-%{m68060}%{mcpu32}%{m68332}%{m5200}%{m5206e}%{m528x}%{m5307}%{m5407}%{mcfv4e}\\\n+%{m68060}%{mcpu32}%{m68332}\\\n %{mcpu=*:-mcpu=%*}%{march=*:-march=%*}\\\n \"\n #define ASM_PCREL_SPEC \"%{fPIC|fpic|mpcrel:--pcrel} \\"}, {"sha": "d1a5e11825121ae507e527b64ec22dbff0509e2a", "filename": "gcc/config/m68k/m68k.opt", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.opt?ref=30b83e381f532e0ee42f0134144fa2f14b16f875", "patch": "@@ -1,6 +1,7 @@\n ; Options for the Motorola 68000 port of the compiler.\n \n-; Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2011\n+; Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -19,23 +20,23 @@\n ; <http://www.gnu.org/licenses/>.\n \n m5200\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 5206)\n Generate code for a 520X\n \n m5206e\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 5206e)\n Generate code for a 5206e\n \n m528x\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 528x)\n Generate code for a 528x\n \n m5307\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 5307)\n Generate code for a 5307\n \n m5407\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 5407)\n Generate code for a 5407\n \n m68000\n@@ -108,7 +109,7 @@ Target RejectNegative\n Generate code for a 68020\n \n mcfv4e\n-Target RejectNegative\n+Target RejectNegative Alias(mcpu=, 547x)\n Generate code for a ColdFire v4e\n \n mcpu="}, {"sha": "00fee73b7ea8e639aab3d55f61abe470105bebd4", "filename": "gcc/config/m68k/t-mlibs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Ft-mlibs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b83e381f532e0ee42f0134144fa2f14b16f875/gcc%2Fconfig%2Fm68k%2Ft-mlibs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-mlibs?ref=30b83e381f532e0ee42f0134144fa2f14b16f875", "patch": "@@ -1,6 +1,6 @@\n # multilibs  -*- mode:Makefile -*-\n #\n-# Copyright (C) 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2007, 2011 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -73,11 +73,6 @@ MULTILIB_MATCHES += m68000=mcpu?68000 m68000=march?68000 m68000=mc68000 \\\n endif\n \n ifneq ($(M68K_ARCH),m68k)\n-# Map the legacy ColdFire options to the new ones.\n-MULTILIB_MATCHES += mcpu?5206=m5200 mcpu?5206e=m5206e mcpu?5208=m528x \\\n-\t\t    mcpu?5307=m5300 mcpu?5307=m5307 \\\n-\t\t    mcpu?5407=m5400 mcpu?5407=m5407 \\\n-\t\t    mcpu?5475=mcfv4e\n # Map -march=* options to the representative -mcpu=* option.\n MULTILIB_MATCHES += mcpu?5206e=march?isaa mcpu?5208=march?isaaplus \\\n \t\t    mcpu?5407=march?isab"}]}