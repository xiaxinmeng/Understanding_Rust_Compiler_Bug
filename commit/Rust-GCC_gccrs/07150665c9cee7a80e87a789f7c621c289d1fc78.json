{"sha": "07150665c9cee7a80e87a789f7c621c289d1fc78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxNTA2NjVjOWNlZTdhODBlODdhNzg5ZjdjNjIxYzI4OWQxZmM3OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-09T23:55:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-09T23:55:57Z"}, "message": "(convert_to_complex): Avoid using comptypes.\n\nFrom-SVN: r3688", "tree": {"sha": "35fafcb653b74c7227781dfee89cca083bd65397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35fafcb653b74c7227781dfee89cca083bd65397"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07150665c9cee7a80e87a789f7c621c289d1fc78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07150665c9cee7a80e87a789f7c621c289d1fc78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07150665c9cee7a80e87a789f7c621c289d1fc78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07150665c9cee7a80e87a789f7c621c289d1fc78/comments", "author": null, "committer": null, "parents": [{"sha": "c3c03e50c045b741832f1dde0de3e1cf7f7882dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c03e50c045b741832f1dde0de3e1cf7f7882dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c03e50c045b741832f1dde0de3e1cf7f7882dd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "5ccce13882b049da9b34bccdd82dfdcd8a188c08", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07150665c9cee7a80e87a789f7c621c289d1fc78/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07150665c9cee7a80e87a789f7c621c289d1fc78/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=07150665c9cee7a80e87a789f7c621c289d1fc78", "patch": "@@ -397,7 +397,8 @@ convert_to_complex (type, expr)\n \n   if (form == COMPLEX_TYPE)\n     {\n-      if (comptypes (TREE_TYPE (type), TREE_TYPE (TREE_TYPE (expr))))\n+      tree elt_type = TREE_TYPE (TREE_TYPE (expr));\n+      if (TYPE_MAIN_VARIANT (elt_type) == TYPE_MAIN_VARIANT (TREE_TYPE (type)))\n \treturn expr;\n       else if (TREE_CODE (expr) == COMPLEX_EXPR)\n \treturn fold (build (COMPLEX_EXPR,"}]}