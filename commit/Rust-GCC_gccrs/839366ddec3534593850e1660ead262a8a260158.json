{"sha": "839366ddec3534593850e1660ead262a8a260158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5MzY2ZGRlYzM1MzQ1OTM4NTBlMTY2MGVhZDI2MmE4YTI2MDE1OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-29T17:18:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-29T17:18:07Z"}, "message": "mips.md (reload_{in,out}{si,di}): Emit a USE of HILO at the end of the sequences to reload the HILO register...\n\n        * mips.md (reload_{in,out}{si,di}): Emit a USE of HILO at the end\n        of the sequences to reload the HILO register which do not actually\n        reference HILO.\n\nFrom-SVN: r23430", "tree": {"sha": "2495469f2ea50e61a6bcc1f505aadd7160321678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2495469f2ea50e61a6bcc1f505aadd7160321678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/839366ddec3534593850e1660ead262a8a260158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839366ddec3534593850e1660ead262a8a260158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839366ddec3534593850e1660ead262a8a260158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839366ddec3534593850e1660ead262a8a260158/comments", "author": null, "committer": null, "parents": [{"sha": "60049c8def3e6e834f5cfaf9c0ff6de2e6e083b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60049c8def3e6e834f5cfaf9c0ff6de2e6e083b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60049c8def3e6e834f5cfaf9c0ff6de2e6e083b8"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "b67825de419f17efb48b314179273eb4c079347a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839366ddec3534593850e1660ead262a8a260158/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839366ddec3534593850e1660ead262a8a260158/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=839366ddec3534593850e1660ead262a8a260158", "patch": "@@ -1,3 +1,9 @@\n+Thu Oct 29 18:07:47 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* mips.md (reload_{in,out}{si,di}): Emit a USE of HILO at the end\n+\tof the sequences to reload the HILO register which do not actually\n+\treference HILO.\n+\n Thu Oct 29 12:39:35 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* c-common.c (c_get_alias_set): Handle ARRAY_REF of union field."}, {"sha": "847c5fb3ddbf7113bad55df8acbc3d75a563f808", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839366ddec3534593850e1660ead262a8a260158/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839366ddec3534593850e1660ead262a8a260158/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=839366ddec3534593850e1660ead262a8a260158", "patch": "@@ -4803,6 +4803,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_move_insn (gen_rtx (REG, SImode, 64), scratch);\n \t  emit_move_insn (scratch, loword);\n \t  emit_move_insn (gen_rtx (REG, SImode, 65), scratch);\n+          emit_insn (gen_rtx_USE (VOIDmode, operands[0]));\n \t}\n       else\n \t{\n@@ -4811,6 +4812,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_ashldi3 (scratch, operands[1], GEN_INT (32)));\n \t  emit_insn (gen_ashrdi3 (scratch, scratch, GEN_INT (32)));\n \t  emit_insn (gen_movdi (gen_rtx (REG, DImode, 65), scratch));\n+          emit_insn (gen_rtx_USE (VOIDmode, operands[0]));\n \t}\n       DONE;\n     }\n@@ -4822,6 +4824,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_movdi (operands[0], gen_rtx (REG, DImode, 64)));\n       emit_insn (gen_ashldi3 (operands[0], operands[0], GEN_INT (32)));\n       emit_insn (gen_iordi3 (operands[0], operands[0], scratch));\n+      emit_insn (gen_rtx_USE (VOIDmode, operands[1]));\n       DONE;\n     }\n   /* This handles moves between a float register and HI/LO.  */\n@@ -4851,6 +4854,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_ashldi3 (scratch, operands[1], GEN_INT (32)));\n       emit_insn (gen_ashrdi3 (scratch, scratch, GEN_INT (32)));\n       emit_insn (gen_movdi (gen_rtx (REG, DImode, 65), scratch));\n+      emit_insn (gen_rtx_USE (VOIDmode, operands[0]));\n       DONE;\n     }\n   if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) == HILO_REGNUM)\n@@ -4879,6 +4883,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_move_insn (hiword, scratch);\n \t  emit_move_insn (scratch, gen_rtx (REG, SImode, 65));\n \t  emit_move_insn (loword, scratch);\n+\t  emit_insn (gen_rtx_USE (VOIDmode, operands[1]));\n \t}\n       else if (TARGET_MIPS16 && ! M16_REG_P (REGNO (operands[0])))\n \t{\n@@ -4893,6 +4898,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_ashldi3 (scratch2, scratch2, GEN_INT (32)));\n \t  emit_insn (gen_iordi3 (scratch, scratch, scratch2));\n \t  emit_insn (gen_movdi (operands[0], scratch));\n+\t  emit_insn (gen_rtx_USE (VOIDmode, operands[1]));\n \t}\n       else\n \t{\n@@ -4902,6 +4908,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_movdi (operands[0], gen_rtx (REG, DImode, 64)));\n \t  emit_insn (gen_ashldi3 (operands[0], operands[0], GEN_INT (32)));\n \t  emit_insn (gen_iordi3 (operands[0], operands[0], scratch));\n+\t  emit_insn (gen_rtx_USE (VOIDmode, operands[1]));\n \t}\n       DONE;\n     }\n@@ -5225,6 +5232,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_movsi (gen_rtx (REG, SImode, 65), operands[1]));\n       emit_insn (gen_ashrsi3 (operands[2], operands[1], GEN_INT (31)));\n       emit_insn (gen_movsi (gen_rtx (REG, SImode, 64), operands[2]));\n+      emit_insn (gen_rtx_USE (VOIDmode, operands[0]));\n       DONE;\n     }\n   /* Use a mult to reload LO on mips16.  ??? This is hideous.  */"}]}