{"sha": "dec131b6add752c0d71cb6720de4ab154bf72411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjMTMxYjZhZGQ3NTJjMGQ3MWNiNjcyMGRlNGFiMTU0YmY3MjQxMQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-02-12T15:22:34Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-02-12T15:22:34Z"}, "message": "trans-array.c (gfc_walk_elemental_function_args, [...]): Move call to gfc_get_proc_ifc_for_expr out of gfc_walk_elemental_function_args.\n\n\t* trans-array.c (gfc_walk_elemental_function_args,\n\tgfc_walk_function_expr): Move call to gfc_get_proc_ifc_for_expr out\n\tof gfc_walk_elemental_function_args.\n\t* trans-stmt.c (gfc_trans_call): Ditto.\n\t* trans-array.h (gfc_get_proc_ifc_for_expr): New prototype.\n\t(gfc_walk_elemental_function_args): Update prototype.\n\nFrom-SVN: r184141", "tree": {"sha": "fb0fa263d8f3e8b171badc6c2396f4e6ae613ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0fa263d8f3e8b171badc6c2396f4e6ae613ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec131b6add752c0d71cb6720de4ab154bf72411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec131b6add752c0d71cb6720de4ab154bf72411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec131b6add752c0d71cb6720de4ab154bf72411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec131b6add752c0d71cb6720de4ab154bf72411/comments", "author": null, "committer": null, "parents": [{"sha": "3e4c98438ac27de89320fd253c3ea3d484b6a413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4c98438ac27de89320fd253c3ea3d484b6a413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4c98438ac27de89320fd253c3ea3d484b6a413"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "19db403dbf9f4cd1a44323d356541f37f0652409", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dec131b6add752c0d71cb6720de4ab154bf72411", "patch": "@@ -1,3 +1,12 @@\n+2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_walk_elemental_function_args,\n+\tgfc_walk_function_expr): Move call to gfc_get_proc_ifc_for_expr out\n+\tof gfc_walk_elemental_function_args.\n+\t* trans-stmt.c (gfc_trans_call): Ditto.\n+\t* trans-array.h (gfc_get_proc_ifc_for_expr): New prototype.\n+\t(gfc_walk_elemental_function_args): Update prototype.\n+\n 2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_get_proc_ifc_for_expr): New function."}, {"sha": "bbe5afeebbf3891a0de586c3c44947f132647f91", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=dec131b6add752c0d71cb6720de4ab154bf72411", "patch": "@@ -8463,9 +8463,8 @@ gfc_get_proc_ifc_for_expr (gfc_expr *procedure_ref)\n \n gfc_ss *\n gfc_walk_elemental_function_args (gfc_ss * ss, gfc_actual_arglist *arg,\n-\t\t\t\t  gfc_expr *proc_expr, gfc_ss_type type)\n+\t\t\t\t  gfc_symbol *proc_ifc, gfc_ss_type type)\n {\n-  gfc_symbol *proc_ifc;\n   gfc_formal_arglist *dummy_arg;\n   int scalar;\n   gfc_ss *head;\n@@ -8475,7 +8474,6 @@ gfc_walk_elemental_function_args (gfc_ss * ss, gfc_actual_arglist *arg,\n   head = gfc_ss_terminator;\n   tail = NULL;\n \n-  proc_ifc = gfc_get_proc_ifc_for_expr (proc_expr);\n   if (proc_ifc)\n     dummy_arg = proc_ifc->formal;\n   else\n@@ -8565,7 +8563,8 @@ gfc_walk_function_expr (gfc_ss * ss, gfc_expr * expr)\n      by reference.  */\n   if (sym->attr.elemental || (comp && comp->attr.elemental))\n     return gfc_walk_elemental_function_args (ss, expr->value.function.actual,\n-\t\t\t\t\t     expr, GFC_SS_REFERENCE);\n+\t\t\t\t\t     gfc_get_proc_ifc_for_expr (expr),\n+\t\t\t\t\t     GFC_SS_REFERENCE);\n \n   /* Scalar functions are OK as these are evaluated outside the scalarization\n      loop.  Pass back and let the caller deal with it.  */"}, {"sha": "9bafb9478d5ba2d42f905f2868becde8fef5269d", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=dec131b6add752c0d71cb6720de4ab154bf72411", "patch": "@@ -66,6 +66,8 @@ void gfc_trans_deferred_array (gfc_symbol *, gfc_wrapped_block *);\n /* Generate an initializer for a static pointer or allocatable array.  */\n void gfc_trans_static_array_pointer (gfc_symbol *);\n \n+/* Get the procedure interface for a function call.  */\n+gfc_symbol *gfc_get_proc_ifc_for_expr (gfc_expr *);\n /* Generate scalarization information for an expression.  */\n gfc_ss *gfc_walk_expr (gfc_expr *);\n /* Workhorse for gfc_walk_expr.  */\n@@ -74,7 +76,7 @@ gfc_ss *gfc_walk_subexpr (gfc_ss *, gfc_expr *);\n gfc_ss *gfc_walk_array_ref (gfc_ss *, gfc_expr *, gfc_ref * ref);\n /* Walk the arguments of an elemental function.  */\n gfc_ss *gfc_walk_elemental_function_args (gfc_ss *, gfc_actual_arglist *,\n-\t\t\t\t\t  gfc_expr *, gfc_ss_type);\n+\t\t\t\t\t  gfc_symbol *, gfc_ss_type);\n /* Walk an intrinsic function.  */\n gfc_ss *gfc_walk_intrinsic_function (gfc_ss *, gfc_expr *,\n \t\t\t\t     gfc_intrinsic_sym *);"}, {"sha": "bad0459d3e1e4c6c47ee46fae909c5f7ff8491fa", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec131b6add752c0d71cb6720de4ab154bf72411/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=dec131b6add752c0d71cb6720de4ab154bf72411", "patch": "@@ -372,7 +372,8 @@ gfc_trans_call (gfc_code * code, bool dependency_check,\n   ss = gfc_ss_terminator;\n   if (code->resolved_sym->attr.elemental)\n     ss = gfc_walk_elemental_function_args (ss, code->ext.actual,\n-\t\t\t\t\t   code->expr1, GFC_SS_REFERENCE);\n+\t\t\t\t\t   gfc_get_proc_ifc_for_expr (code->expr1),\n+\t\t\t\t\t   GFC_SS_REFERENCE);\n \n   /* Is not an elemental subroutine call with array valued arguments.  */\n   if (ss == gfc_ss_terminator)"}]}