{"sha": "a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3NjVhZTdhMDkwY2ZiYzEyYjQxZjY0MzkzOGZkZDE3YTNjMGRlYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2002-01-22T12:01:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-01-22T12:01:54Z"}, "message": "tree.c (int_fits_type_p): If bounds of a subtype are variable, see if fits in bounds of base type.\n\n\t* tree.c (int_fits_type_p): If bounds of a subtype are variable, see\n\tif fits in bounds of base type.\n\nFrom-SVN: r49070", "tree": {"sha": "d0b4885e9a5770fecec22272ef14c5026f470e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0b4885e9a5770fecec22272ef14c5026f470e13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8765ae7a090cfbc12b41f643938fdd17a3c0dec/comments", "author": null, "committer": null, "parents": [{"sha": "aea9695ca5c18f6aba6d429b0a593411f37b5c0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea9695ca5c18f6aba6d429b0a593411f37b5c0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea9695ca5c18f6aba6d429b0a593411f37b5c0f"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "fb10f397a6e4fa78c7969f91096464006a4cb60f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8765ae7a090cfbc12b41f643938fdd17a3c0dec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8765ae7a090cfbc12b41f643938fdd17a3c0dec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "patch": "@@ -1,5 +1,8 @@\n Tue Jan 22 06:26:33 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* tree.c (int_fits_type_p): If bounds of a subtype are variable, see\n+\tif fits in bounds of base type.\n+\n \t* dwarf2out.c (equate_decl_number_to_die): Add \"int\" to decls.\n \t(loc_descriptor_from_tree, case CALL_EXPR, case ADDR_EXPR): New.\n \t(add_bound_info, default): If can't find a context, make a"}, {"sha": "53d5889bbbd01005ce931e556a9a517c75fed9c8", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8765ae7a090cfbc12b41f643938fdd17a3c0dec/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8765ae7a090cfbc12b41f643938fdd17a3c0dec/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "patch": "@@ -4245,7 +4245,8 @@ int_fits_type_p (c, type)\n      tree c, type;\n {\n   /* If the bounds of the type are integers, we can check ourselves.\n-     Otherwise,. use force_fit_type, which checks against the precision.  */\n+     If not, but this type is a subtype, try checking against that.\n+     Otherwise, use force_fit_type, which checks against the precision.  */\n   if (TYPE_MAX_VALUE (type) != NULL_TREE\n       && TYPE_MIN_VALUE (type) != NULL_TREE\n       && TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n@@ -4264,6 +4265,8 @@ int_fits_type_p (c, type)\n \t\t&& ! (TREE_INT_CST_HIGH (c) < 0\n \t\t      && TREE_UNSIGNED (TREE_TYPE (c))));\n     }\n+  else if (TREE_CODE (type) == INTEGER_TYPE && TREE_TYPE (type) != 0)\n+    return int_fits_type_p (c, TREE_TYPE (type));\n   else\n     {\n       c = copy_node (c);"}]}