{"sha": "37953bd308af0b2ffe9205fbec12b40a0bf725a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc5NTNiZDMwOGFmMGIyZmZlOTIwNWZiZWMxMmI0MGEwYmY3MjVhMQ==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gcc.gnu.org", "date": "2013-04-30T04:07:23Z"}, "committer": {"name": "Mike Frysinger", "email": "vapier@gcc.gnu.org", "date": "2013-04-30T04:07:23Z"}, "message": "gcc: arm: linux-eabi: fix handling of armv4 bx fixups when linking\n\nThe bpabi.h header already sets up defines to automatically use the\n--fix-v4bx flag with the assembler & linker as needed, and creates a\ndefault assembly & linker spec which uses those.  Unfortunately, the\nlinux-eabi.h header clobbers the LINK_SPEC define and doesn't include\nthe v4bx define when setting up its own.  So while the assembler spec\nis retained and works fine to generate the right relocs, building for\narmv4 targets doesn't invoke the linker correctly so all the relocs\nget processed as if we had an armv4t target.\n\nYou can see this with -dumpspecs when configuring gcc for an armv4\ntarget and using --with-arch=armv4:\n$ armv4l-unknown-linux-gnueabi-gcc -dumpspecs |& grep -B 1 fix-v4bx\n*subtarget_extra_asm_spec:\n.... %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*|march=armv4|mcpu=fa526|mcpu=fa626:--fix-v4bx} ...\n\nWith this fix in place, we also get the link spec:\n$ armv4l-unknown-linux-gnueabi-gcc -dumpspecs |& grep -B 1 fix-v4bx\n*link:\n...  %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*|march=armv4|mcpu=fa526|mcpu=fa626:--fix-v4bx} ...\n\nAnd all my hello world tests / glibc builds automatically turn the\nbx insn into the 'mov pc, lr' insn and all is right in the world.\n\nSigned-off-by: Mike Frysinger <vapier@gentoo.org>\n\nFrom-SVN: r198438", "tree": {"sha": "f21ee9c2aa4e009fc4843bffb10b136117b8784e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21ee9c2aa4e009fc4843bffb10b136117b8784e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37953bd308af0b2ffe9205fbec12b40a0bf725a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37953bd308af0b2ffe9205fbec12b40a0bf725a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37953bd308af0b2ffe9205fbec12b40a0bf725a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37953bd308af0b2ffe9205fbec12b40a0bf725a1/comments", "author": null, "committer": null, "parents": [{"sha": "5eb8b03c897aba9796d421c160c65f1929fc6cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb8b03c897aba9796d421c160c65f1929fc6cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb8b03c897aba9796d421c160c65f1929fc6cf3"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "ed8f71976049ff812ac9fae192b7b0bab1971587", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37953bd308af0b2ffe9205fbec12b40a0bf725a1", "patch": "@@ -1,3 +1,10 @@\n+2013-04-29  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* config/arm/bpabi.h (EABI_LINK_SPEC): Define.\n+\t(BPABI_LINK_SPEC): Use new EABI_LINK_SPEC.\n+\t* config/arm/linux-eabi.h (LINK_SPEC): Replace BE8_LINK_SPEC\n+\twith EABI_LINK_SPEC.\n+\n 2013-04-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/44578\n@@ -7,7 +14,7 @@\n 2013-04-29  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/57097\n-        * lra-constraints.c (process_alt_operands): Discourage a bit more\n+\t* lra-constraints.c (process_alt_operands): Discourage a bit more\n \tusing memory for pseudos.  Print cost dump for alternatives.\n \tModify cost values for conflicts with early clobbers.\n \t(curr_insn_transform): Spill pseudos reassigned to NO_REGS."}, {"sha": "ff89633d788a2e0d9e047300e1101b01f94a9b80", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=37953bd308af0b2ffe9205fbec12b40a0bf725a1", "patch": "@@ -91,11 +91,15 @@\n #define SUBTARGET_EXTRA_LINK_SPEC \"\"\n #endif\n \n+/* Split out the EABI common values so other targets can use it.  */\n+#define EABI_LINK_SPEC \\\n+  TARGET_FIX_V4BX_SPEC BE8_LINK_SPEC\n+\n /* The generic link spec in elf.h does not support shared libraries.  */\n #define BPABI_LINK_SPEC \\\n   \"%{mbig-endian:-EB} %{mlittle-endian:-EL} \"\t\t\\\n   \"%{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} \"\t\\\n-  \"-X\" SUBTARGET_EXTRA_LINK_SPEC TARGET_FIX_V4BX_SPEC BE8_LINK_SPEC\n+  \"-X\" SUBTARGET_EXTRA_LINK_SPEC EABI_LINK_SPEC\n \n #undef  LINK_SPEC\n #define LINK_SPEC BPABI_LINK_SPEC"}, {"sha": "23671a788c23b5735494f95be69bad39f99c690f", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37953bd308af0b2ffe9205fbec12b40a0bf725a1/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=37953bd308af0b2ffe9205fbec12b40a0bf725a1", "patch": "@@ -80,7 +80,7 @@\n /* At this point, bpabi.h will have clobbered LINK_SPEC.  We want to\n    use the GNU/Linux version, not the generic BPABI version.  */\n #undef  LINK_SPEC\n-#define LINK_SPEC BE8_LINK_SPEC\t\t\t\t\t\t\\\n+#define LINK_SPEC EABI_LINK_SPEC\t\t\t\t\t\\\n   LINUX_OR_ANDROID_LD (LINUX_TARGET_LINK_SPEC,\t\t\t\t\\\n \t\t       LINUX_TARGET_LINK_SPEC \" \" ANDROID_LINK_SPEC)\n "}]}