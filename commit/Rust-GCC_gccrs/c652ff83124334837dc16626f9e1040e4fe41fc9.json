{"sha": "c652ff83124334837dc16626f9e1040e4fe41fc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY1MmZmODMxMjQzMzQ4MzdkYzE2NjI2ZjllMTA0MGU0ZmU0MWZjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-05-22T21:39:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-05-22T21:39:08Z"}, "message": "PR c++/20408 - unnecessary code for empty struct.\n\nHere initializing the argument from a TARGET_EXPR isn't an empty class\ncopy even though the type is !TREE_ADDRESSABLE, so we should check\nsimple_empty_class_p.\n\n\t* call.c (build_call_a): Use simple_empty_class_p.\n\nFrom-SVN: r271523", "tree": {"sha": "da16d1ea2a867756a78e819cf1274de329d6c07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da16d1ea2a867756a78e819cf1274de329d6c07b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c652ff83124334837dc16626f9e1040e4fe41fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c652ff83124334837dc16626f9e1040e4fe41fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c652ff83124334837dc16626f9e1040e4fe41fc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c652ff83124334837dc16626f9e1040e4fe41fc9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52ea1caf28cdcdff8c9b2be844e3f1be6c369f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ea1caf28cdcdff8c9b2be844e3f1be6c369f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ea1caf28cdcdff8c9b2be844e3f1be6c369f16"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "88baf8647b61e8dc3724f0d33f73d41c1a22a7d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c652ff83124334837dc16626f9e1040e4fe41fc9", "patch": "@@ -1,5 +1,8 @@\n 2019-05-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/20408 - unnecessary code for empty struct.\n+\t* call.c (build_call_a): Use simple_empty_class_p.\n+\n \tPR c++/86485 - -Wmaybe-unused with empty class ?:\n \t* cp-gimplify.c (simple_empty_class_p): Also true for MODIFY_EXPR.\n "}, {"sha": "4d9331f98c2bc6e340ecb8583b3351e45fd325b7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c652ff83124334837dc16626f9e1040e4fe41fc9", "patch": "@@ -393,7 +393,7 @@ build_call_a (tree function, int n, tree *argarray)\n       {\n \ttree arg = CALL_EXPR_ARG (function, i);\n \tif (is_empty_class (TREE_TYPE (arg))\n-\t    && ! TREE_ADDRESSABLE (TREE_TYPE (arg)))\n+\t    && simple_empty_class_p (TREE_TYPE (arg), arg, INIT_EXPR))\n \t  {\n \t    tree t = build0 (EMPTY_CLASS_EXPR, TREE_TYPE (arg));\n \t    arg = build2 (COMPOUND_EXPR, TREE_TYPE (t), arg, t);"}, {"sha": "7b9607dde1708e2ad8d5dcce721ed70d6e024390", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=c652ff83124334837dc16626f9e1040e4fe41fc9", "patch": "@@ -593,7 +593,7 @@ gimplify_must_not_throw_expr (tree *expr_p, gimple_seq *pre_p)\n    non-empty CONSTRUCTORs get reduced properly, and we leave the\n    return slot optimization alone because it isn't a copy.  */\n \n-static bool\n+bool\n simple_empty_class_p (tree type, tree op, tree_code code)\n {\n   if (TREE_CODE (op) == COMPOUND_EXPR)"}, {"sha": "7ad3c6b436d8ed14ec78db562b22990100028959", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c652ff83124334837dc16626f9e1040e4fe41fc9", "patch": "@@ -7581,6 +7581,7 @@ extern tree cp_fully_fold_init\t\t\t(tree);\n extern void clear_fold_cache\t\t\t(void);\n extern tree lookup_hotness_attribute\t\t(tree);\n extern tree process_stmt_hotness_attribute\t(tree, location_t);\n+extern bool simple_empty_class_p\t\t(tree, tree, tree_code);\n \n /* in name-lookup.c */\n extern tree strip_using_decl                    (tree);"}, {"sha": "f340bd4070bd2fea02bc4fb704088c1e3546f5b2", "filename": "gcc/testsuite/g++.dg/tree-ssa/empty-3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652ff83124334837dc16626f9e1040e4fe41fc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fempty-3.C?ref=c652ff83124334837dc16626f9e1040e4fe41fc9", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/20408\n+// { dg-additional-options -fdump-tree-gimple }\n+// { dg-final { scan-tree-dump-times \"struct Foo\" 2 \"gimple\" } }\n+\n+struct Foo {};\n+void foo(const Foo&);\n+void bar(Foo);\n+\n+void fooc(void)\n+{\n+        foo(Foo());\n+}\n+void barc(void)\n+{\n+        bar(Foo());\n+}"}]}