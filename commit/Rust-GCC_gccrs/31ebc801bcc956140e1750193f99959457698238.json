{"sha": "31ebc801bcc956140e1750193f99959457698238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlYmM4MDFiY2M5NTYxNDBlMTc1MDE5M2Y5OTk1OTQ1NzY5ODIzOA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2006-06-17T17:07:42Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2006-06-17T17:07:42Z"}, "message": "i386.c (legitimate_tls_address): Add tp after DTPOFF.\n\n* config/i386/i386.c (legitimate_tls_address)\n<TARGET_GNU2_TLS>: Add tp after DTPOFF.\n* config/i386/i386.md (*tls_dynamic_gnu2_combine_32): Adjust.\n(*tls_dynamic_gnu2_combine_64): Likewise.\n\nFrom-SVN: r114741", "tree": {"sha": "691b186465bbf8d7583f3c613e4c77998ad1ba49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691b186465bbf8d7583f3c613e4c77998ad1ba49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31ebc801bcc956140e1750193f99959457698238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ebc801bcc956140e1750193f99959457698238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ebc801bcc956140e1750193f99959457698238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ebc801bcc956140e1750193f99959457698238/comments", "author": null, "committer": null, "parents": [{"sha": "4dc3fbb0eb1e89262e6f49e0ee80381d94db5494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc3fbb0eb1e89262e6f49e0ee80381d94db5494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc3fbb0eb1e89262e6f49e0ee80381d94db5494"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "3cc56cc1d65244dbd488b7dca27060d2a3dc88d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ebc801bcc956140e1750193f99959457698238/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ebc801bcc956140e1750193f99959457698238/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31ebc801bcc956140e1750193f99959457698238", "patch": "@@ -1,3 +1,10 @@\n+2006-06-17  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/i386/i386.c (legitimate_tls_address)\n+\t<TARGET_GNU2_TLS>: Add tp after DTPOFF.\n+\t* config/i386/i386.md (*tls_dynamic_gnu2_combine_32): Adjust.\n+\t(*tls_dynamic_gnu2_combine_64): Likewise.\n+\n 2006-06-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/27116"}, {"sha": "4bea5fe1738c77054ab60207e700561dead5df7b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ebc801bcc956140e1750193f99959457698238/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ebc801bcc956140e1750193f99959457698238/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=31ebc801bcc956140e1750193f99959457698238", "patch": "@@ -6750,15 +6750,22 @@ legitimize_tls_address (rtx x, enum tls_model model, int for_mov)\n \t{\n \t  rtx x = ix86_tls_module_base ();\n \n-\t  base = force_reg (Pmode, gen_rtx_PLUS (Pmode, tp, base));\n-\n-\t  set_unique_reg_note (get_last_insn (), REG_EQUIV, x);\n+\t  set_unique_reg_note (get_last_insn (), REG_EQUIV,\n+\t\t\t       gen_rtx_MINUS (Pmode, x, tp));\n \t}\n \n       off = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, x), UNSPEC_DTPOFF);\n       off = gen_rtx_CONST (Pmode, off);\n \n       dest = force_reg (Pmode, gen_rtx_PLUS (Pmode, base, off));\n+\n+      if (TARGET_GNU2_TLS)\n+\t{\n+\t  dest = force_reg (Pmode, gen_rtx_PLUS (Pmode, dest, tp));\n+\n+\t  set_unique_reg_note (get_last_insn (), REG_EQUIV, x);\n+\t}\n+\n       break;\n \n     case TLS_MODEL_INITIAL_EXEC:"}, {"sha": "80c352c81d6862118c8ef868c717c3e07b5a78d2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 11, "deletions": 21, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ebc801bcc956140e1750193f99959457698238/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ebc801bcc956140e1750193f99959457698238/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=31ebc801bcc956140e1750193f99959457698238", "patch": "@@ -14434,24 +14434,19 @@\n (define_insn_and_split \"*tls_dynamic_gnu2_combine_32\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&a\")\n \t(plus:SI\n-\t (plus:SI (match_operand:SI 3 \"tp_or_register_operand\" \"ir\")\n-\t\t  (unspec:SI [(match_operand:SI 4 \"tls_modbase_operand\" \"\")\n-\t\t\t      (match_operand:SI 5 \"\" \"\")\n-\t\t\t      (match_operand:SI 2 \"register_operand\" \"b\")\n-\t\t\t      (reg:SI SP_REG)]\n-\t\t\t     UNSPEC_TLSDESC))\n+\t (unspec:SI [(match_operand:SI 3 \"tls_modbase_operand\" \"\")\n+\t\t     (match_operand:SI 4 \"\" \"\")\n+\t\t     (match_operand:SI 2 \"register_operand\" \"b\")\n+\t\t     (reg:SI SP_REG)]\n+\t\t    UNSPEC_TLSDESC)\n \t (const:SI (unspec:SI\n \t\t    [(match_operand:SI 1 \"tls_symbolic_operand\" \"\")]\n \t\t    UNSPEC_DTPOFF))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"!TARGET_64BIT && TARGET_GNU2_TLS\"\n   \"#\"\n   \"\"\n-  [(parallel\n-    [(set (match_dup 0)\n-\t  (plus:SI (match_dup 3)\n-\t\t   (match_dup 5)))\n-     (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_dup 0) (match_dup 5))]\n {\n   operands[5] = no_new_pseudos ? operands[0] : gen_reg_rtx (Pmode);\n   emit_insn (gen_tls_dynamic_gnu2_32 (operands[5], operands[1], operands[2]));\n@@ -14499,23 +14494,18 @@\n (define_insn_and_split \"*tls_dynamic_gnu2_combine_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&a\")\n \t(plus:DI\n-\t (plus:DI (match_operand:DI 2 \"tp_or_register_operand\" \"ir\")\n-\t\t  (unspec:DI [(match_operand:DI 3 \"tls_modbase_operand\" \"\")\n-\t\t\t      (match_operand:DI 4 \"\" \"\")\n-\t\t\t      (reg:DI SP_REG)]\n-\t\t\t      UNSPEC_TLSDESC))\n+\t (unspec:DI [(match_operand:DI 2 \"tls_modbase_operand\" \"\")\n+\t\t     (match_operand:DI 3 \"\" \"\")\n+\t\t     (reg:DI SP_REG)]\n+\t\t    UNSPEC_TLSDESC)\n \t (const:DI (unspec:DI\n \t\t    [(match_operand:DI 1 \"tls_symbolic_operand\" \"\")]\n \t\t    UNSPEC_DTPOFF))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && TARGET_GNU2_TLS\"\n   \"#\"\n   \"\"\n-  [(parallel\n-    [(set (match_dup 0)\n-\t  (plus:DI (match_dup 2)\n-\t\t   (match_dup 4)))\n-     (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_dup 0) (match_dup 4))]\n {\n   operands[4] = no_new_pseudos ? operands[0] : gen_reg_rtx (Pmode);\n   emit_insn (gen_tls_dynamic_gnu2_64 (operands[4], operands[1]));"}]}