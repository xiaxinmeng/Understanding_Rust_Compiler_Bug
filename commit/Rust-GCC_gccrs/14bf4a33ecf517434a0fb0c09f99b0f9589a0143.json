{"sha": "14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiZjRhMzNlY2Y1MTc0MzRhMGZiMGMwOWY5OWIwZjk1ODlhMDE0Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-04-27T06:05:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-04-27T06:05:55Z"}, "message": "Make args to jump_optimize symbolic\n\nFrom-SVN: r19421", "tree": {"sha": "c1efc0b7c5cb03c3e212ef650a53d511aa84eec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1efc0b7c5cb03c3e212ef650a53d511aa84eec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/comments", "author": null, "committer": null, "parents": [{"sha": "5d02ee6677b34d1ea94eb2a40993f3d61fc41b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d02ee6677b34d1ea94eb2a40993f3d61fc41b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d02ee6677b34d1ea94eb2a40993f3d61fc41b6e"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "ce90d34986111e09d6ddaed03a851075334ddf17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "patch": "@@ -1,3 +1,11 @@\n+Mon Apr 27 08:55:23 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rtl.h (JUMP_{CROSS_JUMP,NOOP_MOVES,AFTER_REGSCAN}):  New macros\n+\tfor calling jump_optimize.\n+\n+\t* toplev.c (rest_of_compilation): Call jump_optimize using JUMP_*\n+\tmacros, rather than 0/1's.\n+\n Sun Apr 26 23:19:10 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.h (CONST_COSTS): Zero is always free."}, {"sha": "60958954819a1c2aec41c9d5cdbdb4bff7582487", "filename": "gcc/rtl.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "patch": "@@ -1141,6 +1141,11 @@ extern int can_reverse_comparison_p\tPROTO ((rtx, rtx));\n extern void delete_for_peephole\t\tPROTO ((rtx, rtx));\n extern int condjump_in_parallel_p\tPROTO ((rtx));\n \n+/* Flags for jump_optimize() */\n+#define JUMP_CROSS_JUMP\t\t1\n+#define JUMP_NOOP_MOVES\t\t1\n+#define JUMP_AFTER_REGSCAN\t1\n+\n /* In emit-rtl.c. */\n extern int max_reg_num\t\t\t\tPROTO ((void));\n extern int max_label_num\t\t\tPROTO ((void));"}, {"sha": "5494db36dce75d817bfcf1af9c790edb5b8bf75d", "filename": "gcc/toplev.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bf4a33ecf517434a0fb0c09f99b0f9589a0143/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=14bf4a33ecf517434a0fb0c09f99b0f9589a0143", "patch": "@@ -3074,7 +3074,8 @@ rest_of_compilation (decl)\n \t      int saved_optimize = optimize;\n \t      optimize = 0;\n \t      find_exception_handler_labels ();\n-\t      jump_optimize (get_insns(), 0, 0, 0);\n+\t      jump_optimize (get_insns(), !JUMP_CROSS_JUMP, !JUMP_NOOP_MOVES,\n+\t\t\t     !JUMP_AFTER_REGSCAN);\n \t      optimize = saved_optimize;\n \t    }\n \n@@ -3208,7 +3209,8 @@ rest_of_compilation (decl)\n      are initialized and to compute whether control can drop off the end\n      of the function.  */\n   TIMEVAR (jump_time, reg_scan (insns, max_reg_num (), 0));\n-  TIMEVAR (jump_time, jump_optimize (insns, 0, 0, 1));\n+  TIMEVAR (jump_time, jump_optimize (insns, !JUMP_CROSS_JUMP, !JUMP_NOOP_MOVES,\n+\t\t\t\t     JUMP_AFTER_REGSCAN));\n \n   /* Now is when we stop if -fsyntax-only and -Wreturn-type.  */\n   if (rtl_dump_and_exit || flag_syntax_only || DECL_DEFER_OUTPUT (decl))\n@@ -3240,7 +3242,9 @@ rest_of_compilation (decl)\n       TIMEVAR (cse_time, delete_trivially_dead_insns (insns, max_reg_num ()));\n \n       if (tem || optimize > 1)\n-\tTIMEVAR (jump_time, jump_optimize (insns, 0, 0, 0));\n+\tTIMEVAR (jump_time, jump_optimize (insns, !JUMP_CROSS_JUMP,\n+\t\t\t\t\t   !JUMP_NOOP_MOVES,\n+\t\t\t\t\t   !JUMP_AFTER_REGSCAN));\n \n       /* Dump rtl code after cse, if we are doing that.  */\n       \n@@ -3303,13 +3307,17 @@ rest_of_compilation (decl)\n \t     max_reg_num so we must rerun reg_scan afterwards.\n \t     ??? Rework to not call reg_scan so often.  */\n \t  TIMEVAR (jump_time, reg_scan (insns, max_reg_num (), 0));\n-\t  TIMEVAR (jump_time, jump_optimize (insns, 0, 0, 1));\n+\t  TIMEVAR (jump_time, jump_optimize (insns, !JUMP_CROSS_JUMP,\n+\t\t\t\t\t     !JUMP_NOOP_MOVES,\n+\t\t\t\t\t     JUMP_AFTER_REGSCAN));\n \t  \n \t  TIMEVAR (cse2_time, reg_scan (insns, max_reg_num (), 0));\n \t  TIMEVAR (cse2_time, tem = cse_main (insns, max_reg_num (),\n \t\t\t\t\t      1, rtl_dump_file));\n \t  if (tem)\n-\t    TIMEVAR (jump_time, jump_optimize (insns, 0, 0, 0));\n+\t    TIMEVAR (jump_time, jump_optimize (insns, !JUMP_CROSS_JUMP,\n+\t\t\t\t\t       !JUMP_NOOP_MOVES,\n+\t\t\t\t\t       !JUMP_AFTER_REGSCAN));\n \t}\n \n       if (flag_thread_jumps)\n@@ -3530,7 +3538,9 @@ rest_of_compilation (decl)\n \n   if (optimize > 0)\n     {\n-      TIMEVAR (jump_time, jump_optimize (insns, 1, 1, 0));\n+      TIMEVAR (jump_time, jump_optimize (insns, JUMP_CROSS_JUMP,\n+\t\t\t\t\t JUMP_NOOP_MOVES,\n+\t\t\t\t\t !JUMP_AFTER_REGSCAN));\n       \n       /* Dump rtl code after jump, if we are doing that.  */\n "}]}