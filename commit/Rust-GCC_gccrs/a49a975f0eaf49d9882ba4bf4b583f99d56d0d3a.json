{"sha": "a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5YTk3NWYwZWFmNDlkOTg4MmJhNGJmNGI1ODNmOTlkNTZkMGQzYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-14T12:01:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-14T12:01:01Z"}, "message": "re PR rtl-optimization/88796 (-fstack-protector* kills RTL DSE opportunities)\n\n\tPR rtl-optimization/88796\n\t* emit-rtl.h (struct rtl_data): Add stack_protect_guard_decl field.\n\t* cfgexpand.c (stack_protect_prologue): Initialize\n\tcrtl->stack_protect_guard_decl.\n\t* function.c (stack_protect_epilogue): Use it instead of calling\n\ttargetm.stack_protect_guard again.\n\t* dse.c (check_mem_read_rtx): Ignore MEM_VOLATILE_P reads from\n\tMEMs with MEM_EXPR equal to crtl->stack_protect_guard or\n\tcrtl->stack_protect_guard_decl.\n\t* config/i386/i386.c (ix86_stack_protect_guard): Set TREE_THIS_VOLATILE\n\ton the returned MEM_EXPR.\n\n\t* gcc.target/i386/pr88796.c: New test.\n\nFrom-SVN: r267916", "tree": {"sha": "5d19df5d6e01eac1ed1c0504b50a318c3e91f688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d19df5d6e01eac1ed1c0504b50a318c3e91f688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7227b597ac26b10aa51d334d72bd74365047182c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7227b597ac26b10aa51d334d72bd74365047182c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7227b597ac26b10aa51d334d72bd74365047182c"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "c4a35e2980e648caf56d6708aa53d67cbacd2727", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -1,3 +1,17 @@\n+2019-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/88796\n+\t* emit-rtl.h (struct rtl_data): Add stack_protect_guard_decl field.\n+\t* cfgexpand.c (stack_protect_prologue): Initialize\n+\tcrtl->stack_protect_guard_decl.\n+\t* function.c (stack_protect_epilogue): Use it instead of calling\n+\ttargetm.stack_protect_guard again.\n+\t* dse.c (check_mem_read_rtx): Ignore MEM_VOLATILE_P reads from\n+\tMEMs with MEM_EXPR equal to crtl->stack_protect_guard or\n+\tcrtl->stack_protect_guard_decl.\n+\t* config/i386/i386.c (ix86_stack_protect_guard): Set TREE_THIS_VOLATILE\n+\ton the returned MEM_EXPR.\n+\n 2019-01-12  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): Alow setting"}, {"sha": "3b7a6e59c3bd9a908a62efeaebcf7371fb194dcf", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -6219,6 +6219,7 @@ stack_protect_prologue (void)\n   tree guard_decl = targetm.stack_protect_guard ();\n   rtx x, y;\n \n+  crtl->stack_protect_guard_decl = guard_decl;\n   x = expand_normal (crtl->stack_protect_guard);\n \n   if (targetm.have_stack_protect_combined_set () && guard_decl)"}, {"sha": "b0b758096b4ac821e7c81e9350392eb4be4d8d71", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -45094,6 +45094,7 @@ ix86_stack_protect_guard (void)\n \t  t = build_int_cst (asptrtype, ix86_stack_protector_guard_offset);\n \t  t = build2 (MEM_REF, asptrtype, t,\n \t\t      build_int_cst (asptrtype, 0));\n+\t  TREE_THIS_VOLATILE (t) = 1;\n \t}\n \n       return t;"}, {"sha": "6f6f768f37112df2b2aee18ce722bcc8865dd43c", "filename": "gcc/dse.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -2072,8 +2072,29 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n   insn_info = bb_info->last_insn;\n \n   if ((MEM_ALIAS_SET (mem) == ALIAS_SET_MEMORY_BARRIER)\n-      || (MEM_VOLATILE_P (mem)))\n+      || MEM_VOLATILE_P (mem))\n     {\n+      if (crtl->stack_protect_guard\n+\t  && (MEM_EXPR (mem) == crtl->stack_protect_guard\n+\t      || (crtl->stack_protect_guard_decl\n+\t\t  && MEM_EXPR (mem) == crtl->stack_protect_guard_decl))\n+\t  && MEM_VOLATILE_P (mem))\n+\t{\n+\t  /* This is either the stack protector canary on the stack,\n+\t     which ought to be written by a MEM_VOLATILE_P store and\n+\t     thus shouldn't be deleted and is read at the very end of\n+\t     function, but shouldn't conflict with any other store.\n+\t     Or it is __stack_chk_guard variable or TLS or whatever else\n+\t     MEM holding the canary value, which really shouldn't be\n+\t     ever modified in -fstack-protector* protected functions,\n+\t     otherwise the prologue store wouldn't match the epilogue\n+\t     check.  */\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    fprintf (dump_file, \" stack protector canary read ignored.\\n\");\n+\t  insn_info->cannot_delete = true;\n+\t  return;\n+\t}\n+\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \" adding wild read, volatile or barrier.\\n\");\n       add_wild_read (bb_info);"}, {"sha": "7b1cecd3c4458fcf9b86b77d9920ff707d4cc0cf", "filename": "gcc/emit-rtl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Femit-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Femit-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.h?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -87,6 +87,10 @@ struct GTY(()) rtl_data {\n      Used for detecting stack clobbers.  */\n   tree stack_protect_guard;\n \n+  /* The __stack_chk_guard variable or expression holding the stack\n+     protector canary value.  */\n+  tree stack_protect_guard_decl;\n+\n   /* List (chain of INSN_LIST) of labels heading the current handlers for\n      nonlocal gotos.  */\n   rtx_insn_list *x_nonlocal_goto_handler_labels;"}, {"sha": "1525d8bc29a38f571f118efa4da5c2e6e47818e2", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -4902,7 +4902,7 @@ init_function_start (tree subr)\n void\n stack_protect_epilogue (void)\n {\n-  tree guard_decl = targetm.stack_protect_guard ();\n+  tree guard_decl = crtl->stack_protect_guard_decl;\n   rtx_code_label *label = gen_label_rtx ();\n   rtx x, y;\n   rtx_insn *seq = NULL;"}, {"sha": "09ed22a909c36329fbb1e3dd7e6aaa604f822759", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -1,3 +1,8 @@\n+2019-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/88796\n+\t* gcc.target/i386/pr88796.c: New test.\n+\n 2019-01-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* gdc.dg/asm1.d: New test."}, {"sha": "f2ddbd5701256c8d8633cc893f79a8b398b1a626", "filename": "gcc/testsuite/gcc.target/i386/pr88796.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88796.c?ref=a49a975f0eaf49d9882ba4bf4b583f99d56d0d3a", "patch": "@@ -0,0 +1,8 @@\n+/* PR rtl-optimization/88796 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -fstack-protector-strong\" } */\n+/* { dg-require-effective-target fstack_protector } */\n+\n+#include \"pr87370.c\"\n+\n+/* { dg-final { scan-assembler-not \"xmm\" } } */"}]}