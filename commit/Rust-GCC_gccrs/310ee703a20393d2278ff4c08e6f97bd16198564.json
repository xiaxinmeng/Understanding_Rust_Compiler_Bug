{"sha": "310ee703a20393d2278ff4c08e6f97bd16198564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEwZWU3MDNhMjAzOTNkMjI3OGZmNGMwOGU2Zjk3YmQxNjE5ODU2NA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-09-14T10:46:35Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-09-14T10:46:35Z"}, "message": "tree-vrp.c (extract_range_from_binary_expr_1): Normalize VR_VARYING for PLUS/MINUS_EXPR.\n\n\t* tree-vrp.c (extract_range_from_binary_expr_1): Normalize\n\tVR_VARYING for PLUS/MINUS_EXPR.\n\nFrom-SVN: r264307", "tree": {"sha": "67c8f019d83e50371a82daad4559d565d051e3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67c8f019d83e50371a82daad4559d565d051e3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/310ee703a20393d2278ff4c08e6f97bd16198564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310ee703a20393d2278ff4c08e6f97bd16198564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/310ee703a20393d2278ff4c08e6f97bd16198564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310ee703a20393d2278ff4c08e6f97bd16198564/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2162daa937fd10ee8e7863f4390483fb7b5e428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2162daa937fd10ee8e7863f4390483fb7b5e428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2162daa937fd10ee8e7863f4390483fb7b5e428"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "b5fb359c768041b11064f7d50549df96cb0e7306", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/310ee703a20393d2278ff4c08e6f97bd16198564/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/310ee703a20393d2278ff4c08e6f97bd16198564/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=310ee703a20393d2278ff4c08e6f97bd16198564", "patch": "@@ -1,3 +1,8 @@\n+2018-09-14  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Normalize\n+\tVR_VARYING for PLUS/MINUS_EXPR.\n+\n 2018-09-14  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* config/s390/s390-passes.def (INSERT_PASS_BEFORE): Improve"}, {"sha": "1adb919a6dfdea20fe4e3043573b60cc4d8dca9c", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/310ee703a20393d2278ff4c08e6f97bd16198564/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/310ee703a20393d2278ff4c08e6f97bd16198564/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=310ee703a20393d2278ff4c08e6f97bd16198564", "patch": "@@ -1415,6 +1415,22 @@ extract_range_from_binary_expr_1 (value_range *vr,\n      range and see what we end up with.  */\n   if (code == PLUS_EXPR || code == MINUS_EXPR)\n     {\n+      /* This will normalize things such that calculating\n+\t [0,0] - VR_VARYING is not dropped to varying, but is\n+\t calculated as [MIN+1, MAX].  */\n+      if (vr0.type == VR_VARYING)\n+\t{\n+\t  vr0.type = VR_RANGE;\n+\t  vr0.min = vrp_val_min (expr_type);\n+\t  vr0.max = vrp_val_max (expr_type);\n+\t}\n+      if (vr1.type == VR_VARYING)\n+\t{\n+\t  vr1.type = VR_RANGE;\n+\t  vr1.min = vrp_val_min (expr_type);\n+\t  vr1.max = vrp_val_max (expr_type);\n+\t}\n+\n       const bool minus_p = (code == MINUS_EXPR);\n       tree min_op0 = vr0.min;\n       tree min_op1 = minus_p ? vr1.max : vr1.min;"}]}