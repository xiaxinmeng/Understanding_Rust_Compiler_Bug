{"sha": "1b78cca94b73f9b5343b395b9c96777741e4643a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3OGNjYTk0YjczZjliNTM0M2IzOTViOWM5Njc3Nzc0MWU0NjQzYQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2003-07-14T16:03:29Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2003-07-14T16:03:29Z"}, "message": "re PR rtl-optimization/11440 (gcc-3.3.1 miscompiles c++ code with -O2, -fno-gcse cures it)\n\n2003-07-14  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\tPR optimization/11440\n\t* gcc.c-torture/execute/20030714-1.c: New test.\n\nFrom-SVN: r69334", "tree": {"sha": "5d8c080a2b83612ceae3708a3dd5df68cb9ccc67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8c080a2b83612ceae3708a3dd5df68cb9ccc67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b78cca94b73f9b5343b395b9c96777741e4643a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b78cca94b73f9b5343b395b9c96777741e4643a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b78cca94b73f9b5343b395b9c96777741e4643a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b78cca94b73f9b5343b395b9c96777741e4643a/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c78647140445998403537fd79dc589281ef8deb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78647140445998403537fd79dc589281ef8deb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c78647140445998403537fd79dc589281ef8deb0"}], "stats": {"total": 198, "additions": 198, "deletions": 0}, "files": [{"sha": "c279efebd63c394e89a2629e258d0f281d55e69e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b78cca94b73f9b5343b395b9c96777741e4643a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b78cca94b73f9b5343b395b9c96777741e4643a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b78cca94b73f9b5343b395b9c96777741e4643a", "patch": "@@ -1,3 +1,8 @@\n+2003-07-14  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR optimization/11440\n+\t* gcc.c-torture/execute/20030714-1.c: New test.\n+\n 2003-07-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/11154"}, {"sha": "719baede26f5f70bffa1d87ce4be87e4f0934378", "filename": "gcc/testsuite/gcc.c-torture/execute/20030714-1.c", "status": "added", "additions": 193, "deletions": 0, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b78cca94b73f9b5343b395b9c96777741e4643a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030714-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b78cca94b73f9b5343b395b9c96777741e4643a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030714-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030714-1.c?ref=1b78cca94b73f9b5343b395b9c96777741e4643a", "patch": "@@ -0,0 +1,193 @@\n+/* derived from PR optimization/11440  */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+typedef _Bool bool;\n+const bool false = 0;\n+const bool true = 1;\n+\n+enum EPosition \n+{\n+  STATIC, RELATIVE, ABSOLUTE, FIXED\n+};\n+typedef enum EPosition EPosition;\n+\n+enum EFloat \n+{\n+  FNONE = 0, FLEFT, FRIGHT\n+};\n+typedef enum EFloat EFloat;\n+\n+struct RenderBox\n+{\n+  int unused[6];\n+  short m_verticalPosition;\n+  \n+  bool m_layouted : 1;\n+  bool m_unused : 1;\n+  bool m_minMaxKnown : 1;\n+  bool m_floating : 1;\n+  \n+  bool m_positioned : 1;\n+  bool m_overhangingContents : 1;\n+  bool m_relPositioned : 1;\n+  bool m_paintSpecial : 1;\n+  \n+  bool m_isAnonymous : 1;\n+  bool m_recalcMinMax : 1;\n+  bool m_isText : 1;\n+  bool m_inline : 1;\n+  \n+  bool m_replaced : 1;\n+  bool m_mouseInside : 1;\n+  bool m_hasFirstLine : 1;\n+  bool m_isSelectionBorder : 1;\n+  \n+  bool (*isTableCell) (struct RenderBox *this);\n+};\n+\n+typedef struct RenderBox RenderBox;\n+\n+struct RenderStyle\n+{\n+  struct NonInheritedFlags \n+    {\n+      union \n+\t{\n+\t  struct \n+\t    {\n+\t      unsigned int _display : 4;\n+\t      unsigned int _bg_repeat : 2;\n+\t      bool _bg_attachment : 1;\n+\t      unsigned int _overflow : 4 ;\n+\t      unsigned int _vertical_align : 4;\n+\t      unsigned int _clear : 2;\n+\t      EPosition _position : 2;\n+\t      EFloat _floating : 2;\n+\t      unsigned int _table_layout : 1;\n+\t      bool _flowAroundFloats :1;\n+\n+\t      unsigned int _styleType : 3;\n+\t      bool _hasHover : 1;\n+\t      bool _hasActive : 1;\n+\t      bool _clipSpecified : 1;\n+\t      unsigned int _unicodeBidi : 2;\n+\t      int _unused : 1;\n+\t    } f;\n+\t  int _niflags;\n+\t};\n+    } noninherited_flags;\n+};\n+\n+typedef struct RenderStyle RenderStyle;\n+\n+extern void RenderObject_setStyle(RenderBox *this, RenderStyle *_style);\n+extern void removeFromSpecialObjects(RenderBox *this);\n+\n+\n+\n+void RenderBox_setStyle(RenderBox *thisin, RenderStyle *_style)\n+{\n+  RenderBox *this = thisin;\n+  bool oldpos, tmp;\n+  EPosition tmppo;\n+  \n+  tmp = this->m_positioned;\n+\n+  oldpos = tmp;\n+\n+  RenderObject_setStyle(this, _style);\n+  \n+  tmppo = _style->noninherited_flags.f._position;\n+\n+  switch(tmppo)\n+    {\n+    case ABSOLUTE:\n+    case FIXED:\n+\t{\n+\t  bool ltrue = true;\n+\t  this->m_positioned = ltrue;\n+\t  break;\n+\t}\n+\n+    default:\n+\t{\n+\t  EFloat tmpf;\n+\t  EPosition tmpp;\n+\t  if (oldpos)\n+\t    {\n+\t      bool ltrue = true;\n+\t      this->m_positioned = ltrue;\n+\t      removeFromSpecialObjects(this);\n+\t    }\n+\t    {\n+\t      bool lfalse = false;\n+\t      this->m_positioned = lfalse;\n+\t    }\n+\n+\t  tmpf = _style->noninherited_flags.f._floating;\n+\n+\t  if(!this->isTableCell (this) && !(tmpf == FNONE)) \n+\t    {\n+\t      bool ltrue = true;\n+\t      this->m_floating = ltrue;\n+\t    }\n+\t  else \n+\t    {\n+\t      tmpp = _style->noninherited_flags.f._position;\n+\t      if (tmpp == RELATIVE)\n+\t\t{\n+\t\t  bool ltrue = true;\n+\t\t  this->m_relPositioned = ltrue;\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n+\n+\n+\n+RenderBox g_this;\n+RenderStyle g__style;\n+\n+void RenderObject_setStyle(RenderBox *this, RenderStyle *_style)\n+{\n+  (void) this;\n+  (void) _style;\n+}\n+\n+void removeFromSpecialObjects(RenderBox *this)\n+{\n+  (void) this;\n+}\n+\n+bool RenderBox_isTableCell (RenderBox *this)\n+{\n+  (void) this;\n+  return false;\n+}\n+\n+int main (void)\n+{\n+\n+  g_this.m_relPositioned = false;\n+  g_this.m_positioned = false;\n+  g_this.m_floating = false;\n+  g_this.isTableCell = RenderBox_isTableCell;\n+\n+  g__style.noninherited_flags.f._position = FIXED;\n+  g__style.noninherited_flags.f._floating = FNONE;\n+\n+  RenderBox_setStyle (&g_this, &g__style);\n+  \n+  if (g_this.m_positioned != true)\n+    abort ();\n+  if (g_this.m_relPositioned != false)\n+    abort ();\n+  if (g_this.m_floating != false)\n+    abort ();\n+\n+  exit (0);\n+}"}]}