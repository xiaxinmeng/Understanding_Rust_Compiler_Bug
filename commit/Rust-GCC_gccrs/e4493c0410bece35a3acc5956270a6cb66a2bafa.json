{"sha": "e4493c0410bece35a3acc5956270a6cb66a2bafa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0OTNjMDQxMGJlY2UzNWEzYWNjNTk1NjI3MGE2Y2I2NmEyYmFmYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-07T01:33:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-07T01:33:57Z"}, "message": "(expand_builtin, case BUILT_IN_NEXT_ARG): Test whether an argunment\nhas been passed to __builtin_next_arg; warn if not.\n\nFrom-SVN: r6994", "tree": {"sha": "ef5a2af4c3e210d085ab9612e4c996db2d49ba46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5a2af4c3e210d085ab9612e4c996db2d49ba46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4493c0410bece35a3acc5956270a6cb66a2bafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4493c0410bece35a3acc5956270a6cb66a2bafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4493c0410bece35a3acc5956270a6cb66a2bafa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4493c0410bece35a3acc5956270a6cb66a2bafa/comments", "author": null, "committer": null, "parents": [{"sha": "18e2b1c06ed8c34393fb517d1ff4d27bd04389f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e2b1c06ed8c34393fb517d1ff4d27bd04389f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e2b1c06ed8c34393fb517d1ff4d27bd04389f8"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "f8531ff8de04785a33336dfd8de3e9aaeb220710", "filename": "gcc/expr.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4493c0410bece35a3acc5956270a6cb66a2bafa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4493c0410bece35a3acc5956270a6cb66a2bafa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e4493c0410bece35a3acc5956270a6cb66a2bafa", "patch": "@@ -6961,8 +6961,6 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n     case BUILT_IN_NEXT_ARG:\n       {\n \ttree fntype = TREE_TYPE (current_function_decl);\n-\ttree last_parm = tree_last (DECL_ARGUMENTS (current_function_decl));\n-\ttree arg;\n \n \tif (TYPE_ARG_TYPES (fntype) == 0\n \t    || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n@@ -6973,15 +6971,24 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t    return const0_rtx;\n \t  }\n \n-\targ = TREE_VALUE (arglist);\n-\t/* Strip off all nops for the sake of the comparison.  This is not\n-\t   quite the same as STRIP_NOPS.  It does more.  */\n-\twhile (TREE_CODE (arg) == NOP_EXPR\n-\t       || TREE_CODE (arg) == CONVERT_EXPR\n-\t       || TREE_CODE (arg) == NON_LVALUE_EXPR)\n-\t  arg = TREE_OPERAND (arg, 0);\n-\tif (arg != last_parm)\n-\t  warning (\"second parameter of `va_start' not last named argument\");\n+\tif (arglist)\n+\t  {\n+\t    tree last_parm = tree_last (DECL_ARGUMENTS (current_function_decl));\n+\t    tree arg = TREE_VALUE (arglist);\n+\n+\t    /* Strip off all nops for the sake of the comparison.  This\n+\t       is not quite the same as STRIP_NOPS.  It does more.  */\n+\t    while (TREE_CODE (arg) == NOP_EXPR\n+\t\t   || TREE_CODE (arg) == CONVERT_EXPR\n+\t\t   || TREE_CODE (arg) == NON_LVALUE_EXPR)\n+\t      arg = TREE_OPERAND (arg, 0);\n+\t    if (arg != last_parm)\n+\t      warning (\"second parameter of `va_start' not last named argument\");\n+\t  }\n+\telse\n+\t  /* Evidently an out of date version of <stdarg.h>; can't validate\n+\t     va_start's second argument, but can still work as intended.  */\n+\t  warning (\"`__builtin_next_arg' called without an argument\");\n       }\n \n       return expand_binop (Pmode, add_optab,"}]}