{"sha": "3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0MWQ5ZDk4YzEwNDM3YTdmNGRjNGE4N2QxMzYyNDBjMDI0OGIxZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-12-01T20:56:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-12-01T20:56:21Z"}, "message": "re PR libfortran/59313 (gfortran.dg/erf_3.F90 FAILs on Solaris/SPARC)\n\n\tPR libfortran/59313\n\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Also provide for\n\tquadruple precision long double variant.\n\nFrom-SVN: r205574", "tree": {"sha": "1ff442c566c3f925f67f54bf23fc863ef83a86eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ff442c566c3f925f67f54bf23fc863ef83a86eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06623961c72590f9d58271ce9b1cb59c581867e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06623961c72590f9d58271ce9b1cb59c581867e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06623961c72590f9d58271ce9b1cb59c581867e1"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "a428205e5626cb5f94f70e67fe7ab5f26a43f5b0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "patch": "@@ -1,3 +1,9 @@\n+2013-12-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR libfortran/59313\n+\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Also provide for\n+\tquadruple precision long double variant.\n+\n 2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsics/erfc_scaled.c (erfc_scaled_r16): Don't define if"}, {"sha": "0498508a5bbcf7f8e909ed026e0d00c88be3b2ca", "filename": "libgfortran/intrinsics/erfc_scaled.c", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2Fintrinsics%2Ferfc_scaled.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2Fintrinsics%2Ferfc_scaled.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferfc_scaled.c?ref=3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "patch": "@@ -45,33 +45,50 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"erfc_scaled_inc.c\"\n #endif\n \n-#if defined(HAVE_GFC_REAL_16) && defined(GFC_REAL_16_IS_LONG_DOUBLE)\n-#undef KIND\n-#define KIND 16\n-#include \"erfc_scaled_inc.c\"\n-#endif\n+#ifdef HAVE_GFC_REAL_16\n \n+/* For quadruple-precision, netlib's implementation is\n+   not accurate enough.  We provide another one.  */\n \n #ifdef GFC_REAL_16_IS_FLOAT128\n \n-/* For quadruple-precision (__float128), netlib's implementation is\n-   not accurate enough.  We provide another one.  */\n+# define _THRESH -106.566990228185312813205074546585730Q\n+# define _M_2_SQRTPI M_2_SQRTPIq\n+# define _INF __builtin_infq()\n+# define _ERFC(x) erfcq(x)\n+# define _EXP(x) expq(x)\n+\n+#else\n+\n+# define _THRESH -106.566990228185312813205074546585730L\n+# define _M_2_SQRTPI M_2_SQRTPIl\n+# define _INF __builtin_infl()\n+# ifdef HAVE_ERFCL\n+#  define _ERFC(x) erfcl(x)\n+# endif\n+# ifdef HAVE_EXPL\n+#  define _EXP(x) expl(x)\n+# endif\n+\n+#endif\n+\n+#if defined(_ERFC) && defined(_EXP)\n \n extern GFC_REAL_16 erfc_scaled_r16 (GFC_REAL_16);\n export_proto(erfc_scaled_r16);\n \n GFC_REAL_16\n erfc_scaled_r16 (GFC_REAL_16 x)\n {\n-  if (x < -106.566990228185312813205074546585730Q)\n+  if (x < _THRESH)\n     {\n-      return __builtin_infq();\n+      return _INF;\n     }\n   if (x < 12)\n     {\n       /* Compute directly as ERFC_SCALED(x) = ERFC(x) * EXP(X**2).\n \t This is not perfect, but much better than netlib.  */\n-      return erfcq(x) * expq(x * x);\n+      return _ERFC(x) * _EXP(x * x);\n     }\n   else\n     {\n@@ -97,9 +114,10 @@ erfc_scaled_r16 (GFC_REAL_16 x)\n \t  n++;\n \t}\n \n-      return (1 + sum) / x * (M_2_SQRTPIq / 2);\n+      return (1 + sum) / x * (_M_2_SQRTPI / 2);\n     }\n }\n \n #endif\n \n+#endif"}, {"sha": "b643edf43a4802ab0a39d62c4ac21ce1919f602b", "filename": "libgfortran/intrinsics/erfc_scaled_inc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d41d9d98c10437a7f4dc4a87d136240c0248b1f/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c?ref=3d41d9d98c10437a7f4dc4a87d136240c0248b1f", "patch": "@@ -39,7 +39,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # define EXP(x) exp(x)\n # define TRUNC(x) trunc(x)\n \n-#elif (KIND == 10) || (KIND == 16 && defined(GFC_REAL_16_IS_LONG_DOUBLE))\n+#elif (KIND == 10)\n \n # ifdef HAVE_EXPL\n #  define EXP(x) expl(x)"}]}