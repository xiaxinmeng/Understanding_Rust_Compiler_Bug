{"sha": "4bbc35f33fe5fa9316a7bd18310302eb7616f158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiYzM1ZjMzZmU1ZmE5MzE2YTdiZDE4MzEwMzAyZWI3NjE2ZjE1OA==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2017-01-18T08:49:11Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2017-01-18T08:49:11Z"}, "message": "Fix PR70182 -- missing \"on\" in mangling of unresolved operators\n\nThe ABI says:\n\n<unresolved-name>\n   ::= [gs] <base-unresolved-name>\n   ::= sr <unresolved-type> <base-unresolved-name>\n   ::= srN <unresolved-type> <unresolved-qualifier-level>+ E <base-unresolved-name>\n   ::= [gs] sr <unresolved-qualifier-level>+ E <base-unresolved-name>\n\n<base-unresolved-name>\n   ::= <simple-id>\n   ::= on <operator-name>\n   ::= on <operator-name> <template-args>\n   ::= dn <destructor-name\n\nlibiberty:\n\n\tPR c++/70182\n\t* cp-demangle.c (d_unqualified_name): Handle \"on\" for\n\toperator names.\n\t* testsuite/demangle-expected: Add tests.\n\ngcc/cp:\n\n\tPR c++/70182\n\t* mangle.c (write_template_args): Add \"on\" for operator names.\n\ngcc:\n\n\tPR c++/70182\n\t* doc/invoke.texi (fabi-version): Mention mangling fix for\n\toperator names.\n\nFrom-SVN: r244567", "tree": {"sha": "d4fd72c31d0897c52a3930c438870be3b370022a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fd72c31d0897c52a3930c438870be3b370022a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bbc35f33fe5fa9316a7bd18310302eb7616f158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbc35f33fe5fa9316a7bd18310302eb7616f158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bbc35f33fe5fa9316a7bd18310302eb7616f158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbc35f33fe5fa9316a7bd18310302eb7616f158/comments", "author": null, "committer": null, "parents": [{"sha": "f6efea5163e7a321ecda80386ac23488e041ec2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6efea5163e7a321ecda80386ac23488e041ec2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6efea5163e7a321ecda80386ac23488e041ec2b"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "257a21d30cfaa4690dfacaf9756fcf0cf50f6b76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,3 +1,9 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR c++/70182\n+\t* doc/invoke.texi (fabi-version): Mention mangling fix for\n+\toperator names.\n+\n 2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR c++/77489"}, {"sha": "a42454a478a12afb21ff3825784d8cf0e2f42a70", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR c++/70182\n+\t* mangle.c (write_template_args): Add \"on\" for operator names.\n+\n 2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR c++/77489"}, {"sha": "d1b107cbb1d46d505ce4f13d44e83ac0fc562dce", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -2817,6 +2817,12 @@ write_template_args (tree args)\n static void\n write_member_name (tree member)\n {\n+  if (abi_version_at_least (11) && IDENTIFIER_OPNAME_P (member))\n+    {\n+      write_string (\"on\");\n+      if (abi_warn_or_compat_version_crosses (11))\n+\tG.need_abi_warning = 1;\n+    }\n   if (identifier_p (member))\n     write_unqualified_id (member);\n   else if (DECL_P (member))"}, {"sha": "06e3ae866648552813f621ea7a02b0d870285b2d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -2252,10 +2252,10 @@ attributes that affect type identity, such as ia32 calling convention\n attributes (e.g. @samp{stdcall}).\n \n Version 11, which first appeared in G++ 7, corrects the mangling of\n-sizeof... expressions.  For multiple entities with the same name within\n-a function, that are declared in different scopes, the mangling now\n-changes starting with the eighth occurence.  It also implies\n-@option{-fnew-inheriting-ctors}.\n+sizeof... expressions and operator names.  For multiple entities with\n+the same name within a function, that are declared in different scopes,\n+the mangling now changes starting with the eighth occurence.  It also\n+implies @option{-fnew-inheriting-ctors}.\n \n See also @option{-Wabi}.\n "}, {"sha": "c8822a34039ccbb34b30129fe7e334562c5ad7f0", "filename": "gcc/testsuite/g++.dg/abi/mangle13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle13.C?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-fabi-version=0\" }\n+// { dg-options \"-fabi-version=10\" }\n \n struct A {\n   template <typename T> int f ();"}, {"sha": "4dd87e84c108b4b0fde520e0fa8a6decaa2ac46e", "filename": "gcc/testsuite/g++.dg/abi/mangle37.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle37.C?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,5 +1,6 @@\n // Testcase for mangling of expressions involving operator names.\n // { dg-do compile { target c++11 } }\n+// { dg-options \"-fabi-version=10\" }\n // { dg-final { scan-assembler \"_Z1fI1AEDTclonplfp_fp_EET_\" } }\n // { dg-final { scan-assembler \"_Z1gI1AEDTclonplIT_Efp_fp_EES1_\" } }\n // { dg-final { scan-assembler \"_Z1hI1AEDTcldtfp_miEET_\" } }"}, {"sha": "d299362910c17df131d9df024b8d95fbb255c5aa", "filename": "gcc/testsuite/g++.dg/abi/pr70182.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr70182.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr70182.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr70182.C?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -0,0 +1,28 @@\n+// { dg-options \"-fabi-version=0\" }\n+\n+struct A {\n+  template <typename T> int f ();\n+  int operator+();\n+  operator int ();\n+  template <typename T> \n+  int operator-();\n+};\n+\n+typedef int (A::*P)();\n+\n+template <P> struct S {};\n+\n+template <typename T> void g (S<&T::template f<int> >) {}\n+template <typename T> void g (S<&T::operator+ >) {}\n+template <typename T> void g (S<&T::operator int>) {}\n+template <typename T> void g (S<&T::template operator- <double> >) {}\n+\n+template void g<A> (S<&A::f<int> >);\n+template void g<A> (S<&A::operator+>);\n+template void g<A> (S<&A::operator int>);\n+template void g<A> (S<&A::operator-<double> >);\n+\n+// { dg-final { scan-assembler _Z1gI1AEv1SIXadsrT_1fIiEEE } }\n+// { dg-final { scan-assembler _Z1gI1AEv1SIXadsrT_onplEE } }\n+// { dg-final { scan-assembler _Z1gI1AEv1SIXadsrT_oncviEE } }\n+// { dg-final { scan-assembler _Z1gI1AEv1SIXadsrT_onmiIdEEE } }"}, {"sha": "ee9644b27a5364dda5bd7fffd234550bd331b3c2", "filename": "gcc/testsuite/g++.dg/dfp/mangle-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-1.C?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile }\n+// { dg-options \"-fabi-version=10\" }\n \n // Mangling of classes from std::decimal are special-cased.\n // Derived from g++.dg/abi/mangle13.C."}, {"sha": "0c5972a184427c302c0dab3720182b8c54b9e0ab", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1,3 +1,10 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR PR c++/70182\n+\t* cp-demangle.c (d_unqualified_name): Handle \"on\" for\n+\toperator names.\n+\t* testsuite/demangle-expected: Add tests.\n+\n 2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR c++/77489"}, {"sha": "f0dbf9381c6becf02c89fc3df0dbd24bb71d7e9b", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -1594,6 +1594,8 @@ d_unqualified_name (struct d_info *di)\n     ret = d_source_name (di);\n   else if (IS_LOWER (peek))\n     {\n+      if (peek == 'o' && d_peek_next_char (di) == 'n')\n+\td_advance (di, 2);\n       ret = d_operator_name (di);\n       if (ret != NULL && ret->type == DEMANGLE_COMPONENT_OPERATOR)\n \t{"}, {"sha": "c1cfa1545ecaf8c945211b7d7b4088d9ea05e075", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbc35f33fe5fa9316a7bd18310302eb7616f158/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=4bbc35f33fe5fa9316a7bd18310302eb7616f158", "patch": "@@ -4682,3 +4682,10 @@ _ZZ3foovE8localVar__9_\n \n _ZZ3foovE8localVar__12\n _ZZ3foovE8localVar__12\n+\n+# PR 70182\n+_Z1gI1AEv1SIXadsrT_onplEE\n+void g<A>(S<&A::operator+>)\n+\n+_Z1gI1AEv1SIXadsrT_plEE\n+void g<A>(S<&A::operator+>)"}]}