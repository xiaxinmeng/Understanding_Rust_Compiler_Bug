{"sha": "605bf7304dfb93f73fb1be1729a4e137c7ee5d60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA1YmY3MzA0ZGZiOTNmNzNmYjFiZTE3MjlhNGUxMzdjN2VlNWQ2MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-15T17:31:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-15T17:31:49Z"}, "message": "(objc_{write,read}_type, case _C_STRUCT_B): Fix typo.\n\nFrom-SVN: r10990", "tree": {"sha": "522b842748ab1c74b249c9a9df6f663da47f5543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/522b842748ab1c74b249c9a9df6f663da47f5543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/605bf7304dfb93f73fb1be1729a4e137c7ee5d60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605bf7304dfb93f73fb1be1729a4e137c7ee5d60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/605bf7304dfb93f73fb1be1729a4e137c7ee5d60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605bf7304dfb93f73fb1be1729a4e137c7ee5d60/comments", "author": null, "committer": null, "parents": [{"sha": "3d27140a15ebf66af41c289758ccd3d2b1159edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d27140a15ebf66af41c289758ccd3d2b1159edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d27140a15ebf66af41c289758ccd3d2b1159edc"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "e9bdcbd17f1797c44662b28d75e56299d1307eb8", "filename": "gcc/objc/archive.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605bf7304dfb93f73fb1be1729a4e137c7ee5d60/gcc%2Fobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605bf7304dfb93f73fb1be1729a4e137c7ee5d60/gcc%2Fobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Farchive.c?ref=605bf7304dfb93f73fb1be1729a4e137c7ee5d60", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective C Runtime archiving\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n@@ -1025,7 +1025,8 @@ objc_write_type(TypedStream* stream, const char* type, const void* data)\n   case _C_ARY_B:\n     {\n       int len = atoi(type+1);\n-      while (isdigit(*++type));\n+      while (isdigit(*++type))\n+\t;\n       return objc_write_array (stream, type, len, data);\n     }\n     break; \n@@ -1034,8 +1035,9 @@ objc_write_type(TypedStream* stream, const char* type, const void* data)\n     {\n       int acc_size = 0;\n       int align;\n-      while (*type != _C_STRUCT_E && *type++ != '='); /* skip \"<name>=\" */\n-      while (*type != _C_STRUCT_E);\n+      while (*type != _C_STRUCT_E && *type++ != '=')\n+\t; /* skip \"<name>=\" */\n+      while (*type != _C_STRUCT_E)\n \t{\n \t  align = objc_alignof_type (type);       /* padd to alignment */\n \t  acc_size += ROUND (acc_size, align);\n@@ -1116,7 +1118,8 @@ objc_read_type(TypedStream* stream, const char* type, void* data)\n   case _C_ARY_B:\n     {\n       int len = atoi(type+1);\n-      while (isdigit(*++type));\n+      while (isdigit(*++type))\n+\t;\n       return objc_read_array (stream, type, len, data);\n     }\n     break; \n@@ -1125,8 +1128,9 @@ objc_read_type(TypedStream* stream, const char* type, void* data)\n     {\n       int acc_size = 0;\n       int align;\n-      while (*type != _C_STRUCT_E && *type++ != '='); /* skip \"<name>=\" */\n-      while (*type != _C_STRUCT_E);\n+      while (*type != _C_STRUCT_E && *type++ != '=')\n+\t; /* skip \"<name>=\" */\n+      while (*type != _C_STRUCT_E)\n \t{\n \t  align = objc_alignof_type (type);       /* padd to alignment */\n \t  acc_size += ROUND (acc_size, align);\n@@ -1229,7 +1233,8 @@ objc_write_types (TypedStream* stream, const char* type, ...)\n \t{\n \t  int len = atoi(c+1);\n \t  const char* t = c;\n-\t  while (isdigit(*++t));\n+\t  while (isdigit(*++t))\n+\t    ;\n \t  res = objc_write_array (stream, t, len, va_arg(args, void*));\n \t  t = objc_skip_typespec (t);\n \t  if (*t != _C_ARY_E)\n@@ -1320,7 +1325,8 @@ objc_read_types(TypedStream* stream, const char* type, ...)\n \t{\n \t  int len = atoi(c+1);\n \t  const char* t = c;\n-\t  while (isdigit(*++t));\n+\t  while (isdigit(*++t))\n+\t    ;\n \t  res = objc_read_array (stream, t, len, va_arg(args, void*));\n \t  t = objc_skip_typespec (t);\n \t  if (*t != _C_ARY_E)\n@@ -1422,7 +1428,8 @@ __objc_read_typed_stream_signature (TypedStream* stream)\n   int pos = 0;\n   do\n     (*stream->read)(stream->physical, buffer+pos, 1);\n-  while (buffer[pos++] != '\\0');\n+  while (buffer[pos++] != '\\0')\n+    ;\n   sscanf (buffer, \"GNU TypedStream %d\", &stream->version);\n   if (stream->version != OBJC_TYPED_STREAM_VERSION)\n     __objc_fatal (\"cannot handle TypedStream version %d\", stream->version);"}]}