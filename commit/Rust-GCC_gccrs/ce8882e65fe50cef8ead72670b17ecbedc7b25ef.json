{"sha": "ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U4ODgyZTY1ZmU1MGNlZjhlYWQ3MjY3MGIxN2VjYmVkYzdiMjVlZg==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-05-05T06:59:32Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-05-05T06:59:32Z"}, "message": "m68hc11.c (m68hc11_gen_movhi): Optimize moves between X and Y by using sequences of xgdx and xgdy.\n\n\t* config/m68hc11/m68hc11.c (m68hc11_gen_movhi): Optimize moves\n\tbetween X and Y by using sequences of xgdx and xgdy.\n\nFrom-SVN: r41861", "tree": {"sha": "41cbbaa6d83d836b54d01b8b95a04543040effdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41cbbaa6d83d836b54d01b8b95a04543040effdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8882e65fe50cef8ead72670b17ecbedc7b25ef/comments", "author": null, "committer": null, "parents": [{"sha": "a1fdc802bb9b01746af19487ef0ff6a60c90d844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fdc802bb9b01746af19487ef0ff6a60c90d844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1fdc802bb9b01746af19487ef0ff6a60c90d844"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "2692493a756d603974d10e1fa81ed7fdb9a4052c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce8882e65fe50cef8ead72670b17ecbedc7b25ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce8882e65fe50cef8ead72670b17ecbedc7b25ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "patch": "@@ -1,3 +1,8 @@\n+2001-05-05  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.c (m68hc11_gen_movhi): Optimize moves\n+\tbetween X and Y by using sequences of xgdx and xgdy.\n+\n 2001-05-05  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.md (\"*logicalsi3_silshr16\"): Use '?' instead"}, {"sha": "f9de2dcf6984b3d54d3e50e378701d0704bcd440", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce8882e65fe50cef8ead72670b17ecbedc7b25ef/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce8882e65fe50cef8ead72670b17ecbedc7b25ef/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=ce8882e65fe50cef8ead72670b17ecbedc7b25ef", "patch": "@@ -3135,8 +3135,20 @@ m68hc11_gen_movhi (insn, operands)\n \t    }\n \t  else if (Y_REG_P (operands[1]))\n \t    {\n-\t      output_asm_insn (\"sty\\t%t1\", operands);\n-\t      output_asm_insn (\"ldx\\t%t1\", operands);\n+              /* When both D and Y are dead, use the sequence xgdy, xgdx\n+                 to move Y into X.  The D and Y registers are modified.  */\n+              if (optimize && find_regno_note (insn, REG_DEAD, HARD_Y_REGNUM)\n+                  && dead_register_here (insn, d_reg))\n+                {\n+                  output_asm_insn (\"xgdy\", operands);\n+                  output_asm_insn (\"xgdx\", operands);\n+                  CC_STATUS_INIT;\n+                }\n+              else\n+                {\n+                  output_asm_insn (\"sty\\t%t1\", operands);\n+                  output_asm_insn (\"ldx\\t%t1\", operands);\n+                }\n \t    }\n \t  else if (SP_REG_P (operands[1]))\n \t    {\n@@ -3165,8 +3177,20 @@ m68hc11_gen_movhi (insn, operands)\n \t    }\n \t  else if (X_REG_P (operands[1]))\n \t    {\n-\t      output_asm_insn (\"stx\\t%t1\", operands);\n-\t      output_asm_insn (\"ldy\\t%t1\", operands);\n+              /* When both D and X are dead, use the sequence xgdx, xgdy\n+                 to move X into Y.  The D and X registers are modified.  */\n+              if (optimize && find_regno_note (insn, REG_DEAD, HARD_X_REGNUM)\n+                  && dead_register_here (insn, d_reg))\n+                {\n+                  output_asm_insn (\"xgdx\", operands);\n+                  output_asm_insn (\"xgdy\", operands);\n+                  CC_STATUS_INIT;\n+                }\n+              else\n+                {\n+                  output_asm_insn (\"stx\\t%t1\", operands);\n+                  output_asm_insn (\"ldy\\t%t1\", operands);\n+                }\n \t    }\n \t  else if (SP_REG_P (operands[1]))\n \t    {"}]}