{"sha": "c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlM2I2ZmM5NWIxMjcyMGRhNTNiODFlMDQ3ZTc3Y2ZlNjNhMmMzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-15T15:57:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-15T15:57:17Z"}, "message": "re PR c++/68847 (ICE in cxx_eval_constant_expression on __atomic_compare_exchange (constexpr.c:3719) in c++)\n\n\tPR c++/68847\n\t* call.c (build_cxx_call): Use fold_non_dependent_expr.\n\nFrom-SVN: r232438", "tree": {"sha": "29ff3b7bf31e6fe8061a910059153de98aa36691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29ff3b7bf31e6fe8061a910059153de98aa36691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f32550199459a387e1ece1b385460cb0603cb6d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f32550199459a387e1ece1b385460cb0603cb6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f32550199459a387e1ece1b385460cb0603cb6d5"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "0ad384a74abe5bbfc96f54ce60eeb9c14db03a18", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "patch": "@@ -1,5 +1,8 @@\n 2016-01-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/68847\n+\t* call.c (build_cxx_call): Use fold_non_dependent_expr.\n+\n \t* typeck2.c (cxx_incomplete_type_diagnostic): Use the location of\n \tvalue.\n "}, {"sha": "ce87be72c14f572748174a65d725b62e072771a5", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "patch": "@@ -7755,7 +7755,7 @@ build_cxx_call (tree fn, int nargs, tree *argarray,\n       /* We need to take care that values to BUILT_IN_NORMAL\n          are reduced.  */\n       for (i = 0; i < nargs; i++)\n-\targarray[i] = maybe_constant_value (argarray[i]);\n+\targarray[i] = fold_non_dependent_expr (argarray[i]);\n \n       if (!check_builtin_function_arguments (fndecl, nargs, argarray))\n \treturn error_mark_node;"}, {"sha": "32f4435d152b29fac5945c4ecd2bed5862b5a5ab", "filename": "gcc/testsuite/g++.dg/delayedfold/builtin1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdelayedfold%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e3b6fc95b12720da53b81e047e77cfe63a2c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdelayedfold%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdelayedfold%2Fbuiltin1.C?ref=c5e3b6fc95b12720da53b81e047e77cfe63a2c3c", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/68847\n+// { dg-do compile { target cas_int } }\n+\n+class RegionLock {\n+  template <unsigned long> void m_fn1();\n+  int spinlock;\n+} acquire_zero;\n+int acquire_one;\n+template <unsigned long> void RegionLock::m_fn1() {\n+  __atomic_compare_exchange(&spinlock, &acquire_zero, &acquire_one, false, 2, 2);\n+}"}]}