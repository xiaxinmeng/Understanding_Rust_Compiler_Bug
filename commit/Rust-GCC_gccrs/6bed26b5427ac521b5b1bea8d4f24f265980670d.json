{"sha": "6bed26b5427ac521b5b1bea8d4f24f265980670d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlZDI2YjU0MjdhYzUyMWI1YjFiZWE4ZDRmMjRmMjY1OTgwNjcwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T11:54:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-12T11:54:30Z"}, "message": "[multiple changes]\n\n2011-12-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (GNAT_Pragma): Check comes from source.\n\n2011-12-12  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatls.adb: Minor reformatting.\n\n2011-12-12  Javier Miranda  <miranda@adacore.com>\n\n\t* a-tags.ads (Alignment): New TSD field.\n\t(Max_Predef_Prims): Value lowered to 15 (or 9 in case of\n\tconfigurable runtime) Update documentation of predefined\n\tprimitives since Alignment has been removed.\n\t* exp_disp.ads Update documentation of slots of dispatching\n\tprimitives.\n\t* exp_disp.adb (Default_Prim_Op_Position): Update slot\n\tvalues since alignment is no longer a predefined primitive.\n\t(Is_Predefined_Dispatch_Operation): Remove _alignment.\n\t(Is_Predefined_Internal_Operation): Remove _alignment.\n\t(Make_DT): Update static test on the value stored in a-tags.ads\n\tfor Max_Predef_Prims; store the value of 'alignment in the TSD.\n\t* exp_atag.ads, exp_atag.adb (Build_Get_Alignment): New subprogram\n\tthat retrieves the alignment from the TSD\n\t* exp_util.adb (Build_Allocated_Deallocate_Proc): For deallocation\n\tof class-wide types obtain the value of alignment from the TSD.\n\t* exp_attr.adb (Expand_N_Attribute_Reference): For 'alignment\n\tapplied to a class-wide type invoke Build_Get_Alignment to\n\tgenerate code which retrieves the value of the alignment from\n\tthe TSD.\n\t* rtsfind.ads (RE_Alignment): New Ada.Tags entity\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): For tagged\n\ttypes if the value of the alignment is bigger than the Maximum\n\talignment then set the value of the alignment to the Maximum\n\talignment and report a warning.\n\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Do not generate\n\tspec of _alignment.\n\t(Predefined_Primitive_Bodies): Do not generate body of _alignment.\n\nFrom-SVN: r182229", "tree": {"sha": "e566c00a722d5b074112e751aaa53d7d1d10dfdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e566c00a722d5b074112e751aaa53d7d1d10dfdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bed26b5427ac521b5b1bea8d4f24f265980670d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bed26b5427ac521b5b1bea8d4f24f265980670d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bed26b5427ac521b5b1bea8d4f24f265980670d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bed26b5427ac521b5b1bea8d4f24f265980670d/comments", "author": null, "committer": null, "parents": [{"sha": "fe58fea70b2614f36fb9e1fde78af892426ad8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe58fea70b2614f36fb9e1fde78af892426ad8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe58fea70b2614f36fb9e1fde78af892426ad8a6"}], "stats": {"total": 297, "additions": 186, "deletions": 111}, "files": [{"sha": "6653a2f4ffac2df2ea3a756ff95f4e5100570d66", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -1,3 +1,42 @@\n+2011-12-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (GNAT_Pragma): Check comes from source.\n+\n+2011-12-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatls.adb: Minor reformatting.\n+\n+2011-12-12  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-tags.ads (Alignment): New TSD field.\n+\t(Max_Predef_Prims): Value lowered to 15 (or 9 in case of\n+\tconfigurable runtime) Update documentation of predefined\n+\tprimitives since Alignment has been removed.\n+\t* exp_disp.ads Update documentation of slots of dispatching\n+\tprimitives.\n+\t* exp_disp.adb (Default_Prim_Op_Position): Update slot\n+\tvalues since alignment is no longer a predefined primitive.\n+\t(Is_Predefined_Dispatch_Operation): Remove _alignment.\n+\t(Is_Predefined_Internal_Operation): Remove _alignment.\n+\t(Make_DT): Update static test on the value stored in a-tags.ads\n+\tfor Max_Predef_Prims; store the value of 'alignment in the TSD.\n+\t* exp_atag.ads, exp_atag.adb (Build_Get_Alignment): New subprogram\n+\tthat retrieves the alignment from the TSD\n+\t* exp_util.adb (Build_Allocated_Deallocate_Proc): For deallocation\n+\tof class-wide types obtain the value of alignment from the TSD.\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): For 'alignment\n+\tapplied to a class-wide type invoke Build_Get_Alignment to\n+\tgenerate code which retrieves the value of the alignment from\n+\tthe TSD.\n+\t* rtsfind.ads (RE_Alignment): New Ada.Tags entity\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): For tagged\n+\ttypes if the value of the alignment is bigger than the Maximum\n+\talignment then set the value of the alignment to the Maximum\n+\talignment and report a warning.\n+\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Do not generate\n+\tspec of _alignment.\n+\t(Predefined_Primitive_Bodies): Do not generate body of _alignment.\n+\n 2011-12-12  Gary Dismukes  <dismukes@adacore.com>\n \n \t* freeze.adb (Freeze_Expression): Allow freezing of static"}, {"sha": "6d94c3fa4d9fba9d9e7f005a5ebada3e11e47f11", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -98,6 +98,8 @@ private\n    --           :   primitive ops    :   +-------------------+\n    --           |      pointers      |   |   access level    |\n    --           +--------------------+   +-------------------+\n+   --                                    |     alignment     |\n+   --                                    +-------------------+\n    --                                    |   expanded name   |\n    --                                    +-------------------+\n    --                                    |   external tag    |\n@@ -269,6 +271,7 @@ private\n       --  function return, and class-wide stream I/O, the danger of objects\n       --  outliving their type declaration can be eliminated (Ada 2005: AI-344)\n \n+      Alignment     : Natural;\n       Expanded_Name : Cstring_Ptr;\n       External_Tag  : Cstring_Ptr;\n       HT_Link       : Tag_Ptr;\n@@ -545,25 +548,24 @@ private\n    procedure Unregister_Tag (T : Tag);\n    --  Remove a particular tag from the external tag hash table\n \n-   Max_Predef_Prims : constant Positive := 16;\n+   Max_Predef_Prims : constant Positive := 15;\n    --  Number of reserved slots for the following predefined ada primitives:\n    --\n    --    1. Size\n-   --    2. Alignment,\n-   --    3. Read\n-   --    4. Write\n-   --    5. Input\n-   --    6. Output\n-   --    7. \"=\"\n-   --    8. assignment\n-   --    9. deep adjust\n-   --   10. deep finalize\n-   --   11. async select\n-   --   12. conditional select\n-   --   13. prim_op kind\n-   --   14. task_id\n-   --   15. dispatching requeue\n-   --   16. timed select\n+   --    2. Read\n+   --    3. Write\n+   --    4. Input\n+   --    5. Output\n+   --    6. \"=\"\n+   --    7. assignment\n+   --    8. deep adjust\n+   --    9. deep finalize\n+   --   10. async select\n+   --   11. conditional select\n+   --   12. prim_op kind\n+   --   13. task_id\n+   --   14. dispatching requeue\n+   --   15. timed select\n    --\n    --  The compiler checks that the value here is correct\n "}, {"sha": "2b0a03824cff3b1b6f7248792d7a1921e29fa177", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -289,6 +289,25 @@ package body Exp_Atag is\n               (RTE_Record_Component (RE_Access_Level), Loc));\n    end Build_Get_Access_Level;\n \n+   -------------------------\n+   -- Build_Get_Alignment --\n+   -------------------------\n+\n+   function Build_Get_Alignment\n+     (Loc      : Source_Ptr;\n+      Tag_Node : Node_Id) return Node_Id\n+   is\n+   begin\n+      return\n+        Make_Selected_Component (Loc,\n+          Prefix =>\n+            Build_TSD (Loc,\n+              Unchecked_Convert_To (RTE (RE_Address), Tag_Node)),\n+          Selector_Name =>\n+            New_Reference_To\n+              (RTE_Record_Component (RE_Alignment), Loc));\n+   end Build_Get_Alignment;\n+\n    ------------------------------------------\n    -- Build_Get_Predefined_Prim_Op_Address --\n    ------------------------------------------"}, {"sha": "7544925d8a02e52a7f64946a80ddc2940cb75680", "filename": "gcc/ada/exp_atag.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_atag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_atag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.ads?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -66,6 +66,13 @@ package Exp_Atag is\n    --\n    --  Generates: TSD (Tag).Access_Level\n \n+   function Build_Get_Alignment\n+     (Loc      : Source_Ptr;\n+      Tag_Node : Node_Id) return Node_Id;\n+   --  Build code that retrieves the alignment of the tagged type.\n+   --\n+   --  Generates: TSD (Tag).Alignment\n+\n    procedure Build_Get_Predefined_Prim_Op_Address\n      (Loc      : Source_Ptr;\n       Position : Uint;"}, {"sha": "8258f7114faa0f1c803a496d2897dd0a424fc5b1", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -1120,19 +1120,11 @@ package body Exp_Attr is\n \n          elsif Is_Class_Wide_Type (Ptyp) then\n \n-            --  No need to do anything else compiling under restriction\n-            --  No_Dispatching_Calls. During the semantic analysis we\n-            --  already notified such violation.\n-\n-            if Restriction_Active (No_Dispatching_Calls) then\n-               return;\n-            end if;\n-\n             New_Node :=\n-              Make_Function_Call (Loc,\n-                Name => New_Reference_To\n-                  (Find_Prim_Op (Ptyp, Name_uAlignment), Loc),\n-                Parameter_Associations => New_List (Pref));\n+              Build_Get_Alignment (Loc,\n+                Make_Attribute_Reference (Loc,\n+                  Prefix => Pref,\n+                  Attribute_Name => Name_Tag));\n \n             if Typ /= Standard_Integer then\n "}, {"sha": "ef672fe4ab425eacb0219f8307ad17b24781bd5c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -250,7 +250,6 @@ package body Exp_Ch3 is\n    --  Dispatching is required in general, since the result of the attribute\n    --  will vary with the actual object subtype.\n    --\n-   --     _alignment     provides result of 'Alignment attribute\n    --     _size          provides result of 'Size attribute\n    --     typSR          provides result of 'Read attribute\n    --     typSW          provides result of 'Write attribute\n@@ -8156,18 +8155,6 @@ package body Exp_Ch3 is\n \n         Ret_Type => Standard_Long_Long_Integer));\n \n-      --  Spec of _Alignment\n-\n-      Append_To (Res, Predef_Spec_Or_Body (Loc,\n-        Tag_Typ => Tag_Typ,\n-        Name    => Name_uAlignment,\n-        Profile => New_List (\n-          Make_Parameter_Specification (Loc,\n-            Defining_Identifier => Make_Defining_Identifier (Loc, Name_X),\n-            Parameter_Type      => New_Reference_To (Tag_Typ, Loc))),\n-\n-        Ret_Type => Standard_Integer));\n-\n       --  Specs for dispatching stream attributes\n \n       declare\n@@ -8740,29 +8727,6 @@ package body Exp_Ch3 is\n          end loop;\n       end if;\n \n-      --  Body of _Alignment\n-\n-      Decl := Predef_Spec_Or_Body (Loc,\n-        Tag_Typ => Tag_Typ,\n-        Name    => Name_uAlignment,\n-        Profile => New_List (\n-          Make_Parameter_Specification (Loc,\n-            Defining_Identifier => Make_Defining_Identifier (Loc, Name_X),\n-            Parameter_Type      => New_Reference_To (Tag_Typ, Loc))),\n-\n-        Ret_Type => Standard_Integer,\n-        For_Body => True);\n-\n-      Set_Handled_Statement_Sequence (Decl,\n-        Make_Handled_Sequence_Of_Statements (Loc, New_List (\n-          Make_Simple_Return_Statement (Loc,\n-            Expression =>\n-              Make_Attribute_Reference (Loc,\n-                Prefix          => Make_Identifier (Loc, Name_X),\n-                Attribute_Name  => Name_Alignment)))));\n-\n-      Append_To (Res, Decl);\n-\n       --  Body of _Size\n \n       Decl := Predef_Spec_Or_Body (Loc,"}, {"sha": "bd6724fdb54b0bd33b96f536cc6c7f49ee1414b9", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 35, "deletions": 22, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -579,55 +579,52 @@ package body Exp_Disp is\n       if Chars (E) = Name_uSize then\n          return Uint_1;\n \n-      elsif Chars (E) = Name_uAlignment then\n-         return Uint_2;\n-\n       elsif TSS_Name = TSS_Stream_Read then\n-         return Uint_3;\n+         return Uint_2;\n \n       elsif TSS_Name = TSS_Stream_Write then\n-         return Uint_4;\n+         return Uint_3;\n \n       elsif TSS_Name = TSS_Stream_Input then\n-         return Uint_5;\n+         return Uint_4;\n \n       elsif TSS_Name = TSS_Stream_Output then\n-         return Uint_6;\n+         return Uint_5;\n \n       elsif Chars (E) = Name_Op_Eq then\n-         return Uint_7;\n+         return Uint_6;\n \n       elsif Chars (E) = Name_uAssign then\n-         return Uint_8;\n+         return Uint_7;\n \n       elsif TSS_Name = TSS_Deep_Adjust then\n-         return Uint_9;\n+         return Uint_8;\n \n       elsif TSS_Name = TSS_Deep_Finalize then\n-         return Uint_10;\n+         return Uint_9;\n \n       --  In VM targets unconditionally allow obtaining the position associated\n       --  with predefined interface primitives since in these platforms any\n       --  tagged type has these primitives.\n \n       elsif Ada_Version >= Ada_2005 or else not Tagged_Type_Expansion then\n          if Chars (E) = Name_uDisp_Asynchronous_Select then\n-            return Uint_11;\n+            return Uint_10;\n \n          elsif Chars (E) = Name_uDisp_Conditional_Select then\n-            return Uint_12;\n+            return Uint_11;\n \n          elsif Chars (E) = Name_uDisp_Get_Prim_Op_Kind then\n-            return Uint_13;\n+            return Uint_12;\n \n          elsif Chars (E) = Name_uDisp_Get_Task_Id then\n-            return Uint_14;\n+            return Uint_13;\n \n          elsif Chars (E) = Name_uDisp_Requeue then\n-            return Uint_15;\n+            return Uint_14;\n \n          elsif Chars (E) = Name_uDisp_Timed_Select then\n-            return Uint_16;\n+            return Uint_15;\n          end if;\n       end if;\n \n@@ -1945,7 +1942,6 @@ package body Exp_Disp is\n          TSS_Name := TSS_Name_Type (Name_Buffer (Name_Len - TSS_Name'Length + 1\n                                      .. Name_Len));\n          if        Chars (E) = Name_uSize\n-           or else Chars (E) = Name_uAlignment\n            or else TSS_Name  = TSS_Stream_Read\n            or else TSS_Name  = TSS_Stream_Write\n            or else TSS_Name  = TSS_Stream_Input\n@@ -1991,7 +1987,6 @@ package body Exp_Disp is\n              (Name_Buffer (Name_Len - TSS_Name'Length + 1 .. Name_Len));\n \n          if        Chars (E) = Name_uSize\n-           or else Chars (E) = Name_uAlignment\n            or else\n              (Chars (E) = Name_Op_Eq\n                 and then Etype (First_Formal (E)) = Etype (Last_Formal (E)))\n@@ -4513,16 +4508,16 @@ package body Exp_Disp is\n       end if;\n \n       --  Ensure that the value of Max_Predef_Prims defined in a-tags is\n-      --  correct. Valid values are 10 under configurable runtime or 16\n+      --  correct. Valid values are 9 under configurable runtime or 15\n       --  with full runtime.\n \n       if RTE_Available (RE_Interface_Data) then\n-         if Max_Predef_Prims /= 16 then\n+         if Max_Predef_Prims /= 15 then\n             Error_Msg_N (\"run-time library configuration error\", Typ);\n             return Result;\n          end if;\n       else\n-         if Max_Predef_Prims /= 10 then\n+         if Max_Predef_Prims /= 9 then\n             Error_Msg_N (\"run-time library configuration error\", Typ);\n             Error_Msg_CRT (\"tagged types\", Typ);\n             return Result;\n@@ -4846,6 +4841,7 @@ package body Exp_Disp is\n       --   TSD : Type_Specific_Data (I_Depth) :=\n       --           (Idepth             => I_Depth,\n       --            Access_Level       => Type_Access_Level (Typ),\n+      --            Alignment          => Typ'Alignment,\n       --            Expanded_Name      => Cstring_Ptr!(Exname'Address))\n       --            External_Tag       => Cstring_Ptr!(Exname'Address))\n       --            HT_Link            => HT_Link'Address,\n@@ -4895,6 +4891,23 @@ package body Exp_Disp is\n       Append_To (TSD_Aggr_List,\n         Make_Integer_Literal (Loc, Type_Access_Level (Typ)));\n \n+      --  Alignment\n+\n+      --  For CPP types we cannot rely on the value of 'Alignment provided\n+      --  by the backend to initialize this TSD field.\n+\n+      if Convention (Typ) = Convention_CPP\n+        or else Is_CPP_Class (Root_Type (Typ))\n+      then\n+         Append_To (TSD_Aggr_List,\n+           Make_Integer_Literal (Loc, 0));\n+      else\n+         Append_To (TSD_Aggr_List,\n+           Make_Attribute_Reference (Loc,\n+             Prefix => New_Reference_To (Typ, Loc),\n+             Attribute_Name => Name_Alignment));\n+      end if;\n+\n       --  Expanded_Name\n \n       Append_To (TSD_Aggr_List,"}, {"sha": "9943bda0f63a398275d8e574206486a981fe1409", "filename": "gcc/ada/exp_disp.ads", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.ads?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -52,65 +52,61 @@ package Exp_Disp is\n    --      type. Constructs of the form Prefix'Size are converted into\n    --      Prefix._Size.\n \n-   --      _Alignment (2) - implementation of the attribute 'Alignment for\n-   --      any tagged type. Constructs of the form Prefix'Alignment are\n-   --      converted into Prefix._Alignment.\n-\n-   --      TSS_Stream_Read (3) - implementation of the stream attribute Read\n+   --      TSS_Stream_Read (2) - implementation of the stream attribute Read\n    --      for any tagged type.\n \n-   --      TSS_Stream_Write (4) - implementation of the stream attribute Write\n+   --      TSS_Stream_Write (3) - implementation of the stream attribute Write\n    --      for any tagged type.\n \n-   --      TSS_Stream_Input (5) - implementation of the stream attribute Input\n+   --      TSS_Stream_Input (4) - implementation of the stream attribute Input\n    --      for any tagged type.\n \n-   --      TSS_Stream_Output (6) - implementation of the stream attribute\n+   --      TSS_Stream_Output (5) - implementation of the stream attribute\n    --      Output for any tagged type.\n \n-   --      Op_Eq (7) - implementation of the equality operator for any non-\n+   --      Op_Eq (6) - implementation of the equality operator for any non-\n    --      limited tagged type.\n \n-   --      _Assign (8) - implementation of the assignment operator for any\n+   --      _Assign (7) - implementation of the assignment operator for any\n    --      non-limited tagged type.\n \n-   --      TSS_Deep_Adjust (9) - implementation of the finalization operation\n+   --      TSS_Deep_Adjust (8) - implementation of the finalization operation\n    --      Adjust for any non-limited tagged type.\n \n-   --      TSS_Deep_Finalize (10) - implementation of the finalization\n+   --      TSS_Deep_Finalize (9) - implementation of the finalization\n    --      operation Finalize for any non-limited tagged type.\n \n-   --      _Disp_Asynchronous_Select (11) - used in the expansion of ATC with\n+   --      _Disp_Asynchronous_Select (10) - used in the expansion of ATC with\n    --      dispatching triggers. Null implementation for limited interfaces,\n    --      full body generation for types that implement limited interfaces,\n    --      not generated for the rest of the cases. See Expand_N_Asynchronous_\n    --      Select in Exp_Ch9 for more information.\n \n-   --      _Disp_Conditional_Select (12) - used in the expansion of conditional\n+   --      _Disp_Conditional_Select (11) - used in the expansion of conditional\n    --      selects with dispatching triggers. Null implementation for limited\n    --      interfaces, full body generation for types that implement limited\n    --      interfaces, not generated for the rest of the cases. See Expand_N_\n    --      Conditional_Entry_Call in Exp_Ch9 for more information.\n \n-   --      _Disp_Get_Prim_Op_Kind (13) - helper routine used in the expansion\n+   --      _Disp_Get_Prim_Op_Kind (12) - helper routine used in the expansion\n    --      of ATC with dispatching triggers. Null implementation for limited\n    --      interfaces, full body generation for types that implement limited\n    --      interfaces, not generated for the rest of the cases.\n \n-   --      _Disp_Get_Task_Id (14) - helper routine used in the expansion of\n+   --      _Disp_Get_Task_Id (13) - helper routine used in the expansion of\n    --      Abort, attributes 'Callable and 'Terminated for task interface\n    --      class-wide types. Full body generation for task types, null\n    --      implementation for limited interfaces, not generated for the rest\n    --      of the cases. See Expand_N_Attribute_Reference in Exp_Attr and\n    --      Expand_N_Abort_Statement in Exp_Ch9 for more information.\n \n-   --      _Disp_Requeue (15) - used in the expansion of dispatching requeue\n+   --      _Disp_Requeue (14) - used in the expansion of dispatching requeue\n    --      statements. Null implementation is provided for protected, task\n    --      and synchronized interfaces. Protected and task types implementing\n    --      concurrent interfaces receive full bodies. See Expand_N_Requeue_\n    --      Statement in Exp_Ch9 for more information.\n \n-   --      _Disp_Timed_Select (16) - used in the expansion of timed selects\n+   --      _Disp_Timed_Select (15) - used in the expansion of timed selects\n    --      with dispatching triggers. Null implementation for limited\n    --      interfaces, full body generation for types that implement limited\n    --      interfaces, not generated for the rest of the cases. See Expand_N_"}, {"sha": "3dd99e9e6f05514307bfb563514d60ae6317f19d", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -755,7 +755,32 @@ package body Exp_Util is\n \n          Append_To (Actuals, New_Reference_To (Addr_Id, Loc));\n          Append_To (Actuals, New_Reference_To (Size_Id, Loc));\n-         Append_To (Actuals, New_Reference_To (Alig_Id, Loc));\n+\n+         if Is_Allocate\n+           or else not Is_Class_Wide_Type (Desig_Typ)\n+         then\n+            Append_To (Actuals, New_Reference_To (Alig_Id, Loc));\n+\n+         --  For deallocation of class wide types we obtain the value of\n+         --  alignment from the Type Specific Record of the deallocated object.\n+         --  This is needed because the frontend expansion of class-wide types\n+         --  into equivalent types confuses the backend.\n+\n+         else\n+            --  Generate:\n+            --     Obj.all'Alignment\n+\n+            --  ... because 'Alignment applied to class-wide types is expanded\n+            --  into the code that reads the value of alignment from the TSD\n+            --  (see Expand_N_Attribute_Reference)\n+\n+            Append_To (Actuals,\n+              Unchecked_Convert_To (RTE (RE_Storage_Offset),\n+                Make_Attribute_Reference (Loc,\n+                  Prefix =>\n+                    Make_Explicit_Dereference (Loc, Relocate_Node (Expr)),\n+                  Attribute_Name => Name_Alignment)));\n+         end if;\n \n          --  h) Is_Controlled\n "}, {"sha": "9c23106811340f23c478c6d020fcd225c9921217", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -1221,8 +1221,8 @@ procedure Gnatls is\n \n       if Rts_Full_Path /= null then\n \n-         --  Directory name was found on the project path.  Look for the\n-         --  include subdir(s).\n+         --  Directory name was found on the project path. Look for the\n+         --  include subdirectory(s).\n \n          Src_Path := Get_RTS_Search_Dir (Rts_Full_Path.all, Include);\n "}, {"sha": "e6ae088388cc810c241e12abea124a8d2a682887", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -570,6 +570,7 @@ package Rtsfind is\n      RE_Unbounded_String,                -- Ada.Strings.Unbounded\n \n      RE_Access_Level,                    -- Ada.Tags\n+     RE_Alignment,                       -- Ada.Tags\n      RE_Address_Array,                   -- Ada.Tags\n      RE_Addr_Ptr,                        -- Ada.Tags\n      RE_Base_Address,                    -- Ada.Tags\n@@ -1768,6 +1769,7 @@ package Rtsfind is\n      RE_Unbounded_String                 => Ada_Strings_Unbounded,\n \n      RE_Access_Level                     => Ada_Tags,\n+     RE_Alignment                        => Ada_Tags,\n      RE_Address_Array                    => Ada_Tags,\n      RE_Addr_Ptr                         => Ada_Tags,\n      RE_Base_Address                     => Ada_Tags,"}, {"sha": "8b543a3d9b31b70574dba732a9f5710b69cb5f01", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -2495,8 +2495,8 @@ package body Sem_Ch13 is\n          --  Alignment attribute definition clause\n \n          when Attribute_Alignment => Alignment : declare\n-            Align : constant Uint := Get_Alignment_Value (Expr);\n-\n+            Align     : constant Uint := Get_Alignment_Value (Expr);\n+            Max_Align : constant Uint := UI_From_Int (Maximum_Alignment);\n          begin\n             FOnly := True;\n \n@@ -2511,7 +2511,16 @@ package body Sem_Ch13 is\n \n             elsif Align /= No_Uint then\n                Set_Has_Alignment_Clause (U_Ent);\n-               Set_Alignment            (U_Ent, Align);\n+\n+               if Is_Tagged_Type (U_Ent)\n+                 and then Align > Max_Align\n+               then\n+                  Error_Msg_N\n+                    (\"?alignment for & set to Maximum_Aligment\", Nam);\n+                  Set_Alignment (U_Ent, Max_Align);\n+               else\n+                  Set_Alignment (U_Ent, Align);\n+               end if;\n \n                --  For an array type, U_Ent is the first subtype. In that case,\n                --  also set the alignment of the anonymous base type so that"}, {"sha": "ad989d2784af90c37c01705e33dbc6ae8f8c48e5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bed26b5427ac521b5b1bea8d4f24f265980670d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6bed26b5427ac521b5b1bea8d4f24f265980670d", "patch": "@@ -2709,7 +2709,14 @@ package body Sem_Prag is\n \n       procedure GNAT_Pragma is\n       begin\n-         Check_Restriction (No_Implementation_Pragmas, N);\n+         --  We need to check the No_Implementation_Pragmas restriction for\n+         --  the case of a pragma from source. Note that the case of aspects\n+         --  generating corresponding pragmas marks these pragmas as not being\n+         --  from source, so this test also catches that case.\n+\n+         if Comes_From_Source (N) then\n+            Check_Restriction (No_Implementation_Pragmas, N);\n+         end if;\n       end GNAT_Pragma;\n \n       --------------------------"}]}