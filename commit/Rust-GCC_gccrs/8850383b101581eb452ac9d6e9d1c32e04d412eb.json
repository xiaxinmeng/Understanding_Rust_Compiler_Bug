{"sha": "8850383b101581eb452ac9d6e9d1c32e04d412eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg1MDM4M2IxMDE1ODFlYjQ1MmFjOWQ2ZTlkMWMzMmUwNGQ0MTJlYg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2010-06-24T22:46:54Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2010-06-24T22:46:54Z"}, "message": "thumb2.md (thumb2_tlobits_cbranch): Delete.\n\n\t* thumb2.md (thumb2_tlobits_cbranch): Delete.\n\t(peephole2 to convert zero_extract/compare of single bit to\n\t lshift/compare): New.\n\nFrom-SVN: r161344", "tree": {"sha": "3b78c82abe62346bf945dd7666d77fd06d2c8771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b78c82abe62346bf945dd7666d77fd06d2c8771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8850383b101581eb452ac9d6e9d1c32e04d412eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8850383b101581eb452ac9d6e9d1c32e04d412eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8850383b101581eb452ac9d6e9d1c32e04d412eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8850383b101581eb452ac9d6e9d1c32e04d412eb/comments", "author": null, "committer": null, "parents": [{"sha": "0dab9071eb354e1646d9c5dbed65fa2c1918339e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dab9071eb354e1646d9c5dbed65fa2c1918339e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dab9071eb354e1646d9c5dbed65fa2c1918339e"}], "stats": {"total": 117, "additions": 33, "deletions": 84}, "files": [{"sha": "d036392b74ea464b755518725c634e13a344c007", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8850383b101581eb452ac9d6e9d1c32e04d412eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8850383b101581eb452ac9d6e9d1c32e04d412eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8850383b101581eb452ac9d6e9d1c32e04d412eb", "patch": "@@ -1,3 +1,9 @@\n+2010-06-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* thumb2.md (thumb2_tlobits_cbranch): Delete.\n+\t(peephole2 to convert zero_extract/compare of single bit to\n+\t lshift/compare): New.\n+\n 2010-06-24  Anatoly Sokolov  <aesok@post.ru>\n \n \t* fold-const.c (const_binop): Remove 'notrunc' argement. Adjust"}, {"sha": "398518329e275925d7b4135910cbd4b632fe9b92", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 27, "deletions": 84, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8850383b101581eb452ac9d6e9d1c32e04d412eb/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8850383b101581eb452ac9d6e9d1c32e04d412eb/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=8850383b101581eb452ac9d6e9d1c32e04d412eb", "patch": "@@ -1509,88 +1509,31 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-(define_insn \"*thumb2_tlobits_cbranch\"\n-  [(set (pc)\n-\t(if_then_else\n-\t (match_operator 0 \"equality_operator\"\n-\t  [(zero_extract:SI (match_operand:SI 1 \"s_register_operand\" \"l,h,h\")\n-\t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,Pu,i\")\n-\t\t\t    (const_int 0))\n-\t   (const_int 0)])\n-\t (label_ref (match_operand 3 \"\" \"\"))\n-\t (pc)))\n-   (clobber (match_scratch:SI 4 \"=l,X,r\"))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_THUMB2\"\n-  \"*\n-  {\n-  if (which_alternative == 0)\n-    {\n-      rtx op[3];\n-      op[0] = operands[4];\n-      op[1] = operands[1];\n-      op[2] = GEN_INT (32 - INTVAL (operands[2]));\n-\n-      output_asm_insn (\\\"lsls\\\\t%0, %1, %2\\\", op);\n-      switch (get_attr_length (insn))\n-\t{\n-\t  case 4:  return \\\"b%d0\\\\t%l3\\\";\n-\t  case 6:  return \\\"b%D0\\\\t.LCB%=\\;b\\\\t%l3\\\\t%@long jump\\\\n.LCB%=:\\\";\n-\t  default: return \\\"b%D0\\\\t.LCB%=\\;bl\\\\t%l3\\\\t%@far jump\\\\n.LCB%=:\\\";\n-\t}\n-    }\n-  else\n-    {\n-      rtx op[3];\n-\n-      if (which_alternative == 1)\n-\t{\n-\t  op[0] = operands[1];\n-\t  op[1] = GEN_INT ((1 << INTVAL (operands[2])) - 1);\n-\t  output_asm_insn (\\\"tst\\\\t%0, %1\\\", op);\n-\t}\n-      else\n-\t{\n-\t  op[0] = operands[4];\n-\t  op[1] = operands[1];\n-\t  op[2] = GEN_INT (32 - INTVAL (operands[2]));\n-\t  output_asm_insn (\\\"lsls\\\\t%0, %1, %2\\\", op);\n-\t}\n+(define_peephole2\n+  [(set (match_operand:CC_NOOV 0 \"cc_register\" \"\")\n+\t(compare:CC_NOOV (zero_extract:SI\n+\t\t\t  (match_operand:SI 1 \"low_register_operand\" \"\")\n+\t\t\t  (const_int 1)\n+\t\t\t  (match_operand:SI 2 \"const_int_operand\" \"\"))\n+\t\t\t (const_int 0)))\n+   (match_scratch:SI 3 \"l\")\n+   (set (pc)\n+\t(if_then_else (match_operator:CC_NOOV 4 \"equality_operator\"\n+\t\t       [(match_dup 0) (const_int 0)])\n+\t\t      (match_operand 5 \"\" \"\")\n+\t\t      (match_operand 6 \"\" \"\")))]\n+  \"TARGET_THUMB2\n+   && (INTVAL (operands[2]) >= 0 && INTVAL (operands[2]) < 32)\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (compare:CC_NOOV (ashift:SI (match_dup 1) (match_dup 2))\n+\t\t\t\t    (const_int 0)))\n+\t      (clobber (match_dup 3))])\n+   (set (pc)\n+\t(if_then_else (match_op_dup 4 [(match_dup 0) (const_int 0)])\n+\t\t      (match_dup 5) (match_dup 6)))]\n+  \"\n+  operands[2] = GEN_INT (31 - INTVAL (operands[2]));\n+  operands[4] = gen_rtx_fmt_ee (GET_CODE (operands[4]) == NE ? LT : GE,\n+\t\t\t\tVOIDmode, operands[0], const0_rtx);\n+  \")\n \n-      switch (get_attr_length (insn))\n-\t{\n-\t  case 6:  return \\\"b%d0\\\\t%l3\\\";\n-\t  case 8:  return \\\"b%D0\\\\t.LCB%=\\;b\\\\t%l3\\\\t%@long jump\\\\n.LCB%=:\\\";\n-\t  default: return \\\"b%D0\\\\t.LCB%=\\;bl\\\\t%l3\\\\t%@far jump\\\\n.LCB%=:\\\";\n-\t}\n-    }\n-  }\"\n-  [(set (attr \"far_jump\")\n-\t(if_then_else\n-\t    (and (ge (minus (match_dup 3) (pc)) (const_int -2040))\n-\t\t (le (minus (match_dup 3) (pc)) (const_int 2048)))\n-\t    (const_string \"no\")\n-\t    (const_string \"yes\")))\n-   (set (attr \"length\")\n-\t(if_then_else\n-\t  (eq (symbol_ref (\"which_alternative\"))\n-\t\t\t  (const_int 0))\n-\t  (if_then_else\n-\t    (and (ge (minus (match_dup 3) (pc)) (const_int -250))\n-\t\t (le (minus (match_dup 3) (pc)) (const_int 256)))\n-\t    (const_int 4)\n-\t    (if_then_else\n-\t\t(and (ge (minus (match_dup 3) (pc)) (const_int -2040))\n-\t\t     (le (minus (match_dup 3) (pc)) (const_int 2048)))\n-\t\t(const_int 6)\n-\t\t(const_int 8)))\n-\t  (if_then_else\n-\t    (and (ge (minus (match_dup 3) (pc)) (const_int -250))\n-\t\t (le (minus (match_dup 3) (pc)) (const_int 256)))\n-\t    (const_int 6)\n-\t    (if_then_else\n-\t\t(and (ge (minus (match_dup 3) (pc)) (const_int -2040))\n-\t\t     (le (minus (match_dup 3) (pc)) (const_int 2048)))\n-\t\t(const_int 8)\n-\t\t(const_int 10)))))]\n-)"}]}