{"sha": "1dcdb0df61a9811b076bb7d175666eaf0d421909", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjZGIwZGY2MWE5ODExYjA3NmJiN2QxNzU2NjZlYWYwZDQyMTkwOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-10-20T19:37:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-10-20T19:37:14Z"}, "message": "loop.c (strength_reduce): Show when new register made for giv is known to be a pointer and its aligment if...\n\n\t* loop.c (strength_reduce): Show when new register made for\n\tgiv is known to be a pointer and its aligment if so and known.\n\t(loop_dump_aux): Show VERBOSE parameter unused.\n\nFrom-SVN: r36975", "tree": {"sha": "057aeb78355b804a08856d95c04d124dee990c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057aeb78355b804a08856d95c04d124dee990c69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dcdb0df61a9811b076bb7d175666eaf0d421909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdb0df61a9811b076bb7d175666eaf0d421909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcdb0df61a9811b076bb7d175666eaf0d421909", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdb0df61a9811b076bb7d175666eaf0d421909/comments", "author": null, "committer": null, "parents": [{"sha": "ebb13e7eb8636e9ac163e364d72015519ba931f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb13e7eb8636e9ac163e364d72015519ba931f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb13e7eb8636e9ac163e364d72015519ba931f6"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "5cacc9ffaae59dec901d82ebcf3bb6945f63f230", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcdb0df61a9811b076bb7d175666eaf0d421909/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcdb0df61a9811b076bb7d175666eaf0d421909/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dcdb0df61a9811b076bb7d175666eaf0d421909", "patch": "@@ -1,5 +1,9 @@\n Fri Oct 20 13:33:16 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* loop.c (strength_reduce): Show when new register made for\n+\tgiv is known to be a pointer and its aligment if so and known.\n+\t(loop_dump_aux): Show VERBOSE parameter unused.\n+\n \t* gcse.c (set_hash_table_size): Now unsigned.\n \t* sdbout.c (template_name_p): Add \"const\" to avoid warnings.\n \t(sdbout_record_type_name, plain_type_1, sdbout_symbol): Likewise."}, {"sha": "604b791691b6a1756de772aa75afe7dbd7e2a00a", "filename": "gcc/loop.c", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcdb0df61a9811b076bb7d175666eaf0d421909/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcdb0df61a9811b076bb7d175666eaf0d421909/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=1dcdb0df61a9811b076bb7d175666eaf0d421909", "patch": "@@ -4173,6 +4173,45 @@ strength_reduce (loop, insn_count, flags)\n \t    v->new_reg = replace_rtx (v->new_reg,\n \t\t\t\t      v->same->dest_reg, v->same->new_reg);\n \n+\t  /* See if this register is known to be a pointer to something.  If\n+\t     so, see if we can find the alignment.  First see if there is a\n+\t     destination register that is a pointer.  If so, this shares the\n+\t     alignment too.  Next see if we can deduce anything from the\n+\t     computational information.  If not, and this is a DEST_ADDR\n+\t     giv, at least we know that it's a pointer, though we don't know\n+\t     the alignment.  */\n+\t  if (GET_CODE (v->new_reg) == REG\n+\t      && v->giv_type == DEST_REG\n+\t      && REGNO_POINTER_FLAG (REGNO (v->dest_reg)))\n+\t    mark_reg_pointer (v->new_reg,\n+\t\t\t      REGNO_POINTER_ALIGN (REGNO (v->dest_reg)));\n+\t  else if (GET_CODE (v->new_reg) == REG\n+\t\t   && REGNO_POINTER_FLAG (REGNO (v->src_reg)))\n+\t    {\n+\t      unsigned int align = REGNO_POINTER_ALIGN (REGNO (v->src_reg));\n+\n+\t      if (align == 0\n+\t\t  || GET_CODE (v->add_val) != CONST_INT\n+\t\t  || INTVAL (v->add_val) % (align / BITS_PER_UNIT) != 0)\n+\t\talign = 0;\n+\n+\t      mark_reg_pointer (v->new_reg, align);\n+\t    }\n+\t  else if (GET_CODE (v->new_reg) == REG\n+\t\t   && GET_CODE (v->add_val) == REG\n+\t\t   && REGNO_POINTER_FLAG (REGNO (v->add_val)))\n+\t    {\n+\t      unsigned int align = REGNO_POINTER_ALIGN (REGNO (v->add_val));\n+\n+\t      if (align == 0\n+\t\t  || INTVAL (v->mult_val) % (align / BITS_PER_UNIT) != 0)\n+\t\talign = 0;\n+\n+\t      mark_reg_pointer (v->new_reg, align);\n+\t    }\n+\t  else if (GET_CODE (v->new_reg) == REG && v->giv_type == DEST_ADDR)\n+\t    mark_reg_pointer (v->new_reg, 0);\n+\n \t  if (v->giv_type == DEST_ADDR)\n \t    /* Store reduced reg as the address in the memref where we found\n \t       this giv.  */\n@@ -9302,7 +9341,7 @@ static void\n loop_dump_aux (loop, file, verbose)\n      const struct loop *loop;\n      FILE *file;\n-     int verbose;\n+     int verbose ATTRIBUTE_UNUSED;\n {\n   rtx label;\n "}]}