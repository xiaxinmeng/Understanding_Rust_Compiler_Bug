{"sha": "c448ca845ca776fc88e45e340370d6e479881f1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0OGNhODQ1Y2E3NzZmYzg4ZTQ1ZTM0MDM3MGQ2ZTQ3OTg4MWYxZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2001-12-18T12:06:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2001-12-18T12:06:01Z"}, "message": "basic_string.h (assign(__str, __pos, __n)): Call assign(__s, __n).\n\n2001-12-18  Paolo Carlini  <pcarlini@unitus.it>\n            Nathan Myers  <ncm@cantrip.org>\n\n\t* include/bits/basic_string.h (assign(__str, __pos, __n)):\n\tCall assign(__s, __n).\n\t(assign(__s, __n)): Terminate the string with _S_terminal.\n\nCo-Authored-By: Nathan Myers <ncm@cantrip.org>\n\nFrom-SVN: r48151", "tree": {"sha": "6b55135c18fbb681b1d52c6bf644558f301470c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b55135c18fbb681b1d52c6bf644558f301470c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c448ca845ca776fc88e45e340370d6e479881f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c448ca845ca776fc88e45e340370d6e479881f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c448ca845ca776fc88e45e340370d6e479881f1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c448ca845ca776fc88e45e340370d6e479881f1d/comments", "author": null, "committer": null, "parents": [{"sha": "ea50ad828ceb9027061c957d442f4eff7b6cf91b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea50ad828ceb9027061c957d442f4eff7b6cf91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea50ad828ceb9027061c957d442f4eff7b6cf91b"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "6ca82cd284830cce146177b43b1a921f772ce643", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c448ca845ca776fc88e45e340370d6e479881f1d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c448ca845ca776fc88e45e340370d6e479881f1d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c448ca845ca776fc88e45e340370d6e479881f1d", "patch": "@@ -1,3 +1,10 @@\n+2001-12-18  Paolo Carlini  <pcarlini@unitus.it>\n+            Nathan Myers  <ncm@cantrip.org>\n+\t\n+\t* include/bits/basic_string.h (assign(__str, __pos, __n)):\n+\tCall assign(__s, __n).\n+\t(assign(__s, __n)): Terminate the string with _S_terminal.\n+\n 2001-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/std_limits.h (__glibcpp_long_double_is_bounded):"}, {"sha": "170fdcdebf6e86beded39be72d562bbbbe169b0e", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c448ca845ca776fc88e45e340370d6e479881f1d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c448ca845ca776fc88e45e340370d6e479881f1d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=c448ca845ca776fc88e45e340370d6e479881f1d", "patch": "@@ -478,26 +478,12 @@ namespace std\n       basic_string& \n       assign(const basic_string& __str, size_type __pos, size_type __n)\n       {\n-\tif (__pos > __str.size())\n+\tconst size_type __strsize = __str.size();\n+\tif (__pos > __strsize)\n \t  __throw_out_of_range(\"basic_string::assign\");\n-\tif (_M_rep()->_M_is_shared() || _M_rep() != __str._M_rep())\n-\t  return _M_replace_safe(_M_ibegin(), _M_iend(), \n-\t\t\t\t __str._M_check(__pos),\n-\t\t\t\t __str._M_fold(__pos, __n));\n-\telse\n-\t  {\n-\t    // Work in-place.\n-\t    bool __testn = __n < __str.size() - __pos;\n-\t    const size_type __newsize = __testn ? __n : __str.size() - __pos;\n-\t    // Avoid move, if possible.\n-\t    if (__pos >= __newsize)\n-\t      traits_type::copy(_M_data(), __str._M_data() + __pos, __newsize);\n-\t    else if (__pos)\t      \n-\t      traits_type::move(_M_data(), __str._M_data() + __pos, __newsize);\n-\t    // else nothing (avoid calling move unnecessarily)\n-\t    _M_rep()->_M_length = __newsize;\n-\t    return *this;\n-\t  }\n+\tconst bool __testn = __n < __strsize - __pos;\n+\tconst size_type __newsize = __testn ? __n : __strsize - __pos;\n+\treturn this->assign(__str._M_data() + __pos, __newsize);\n       }\n \n       basic_string& \n@@ -517,6 +503,7 @@ namespace std\n \t    else if (__pos)\n \t      traits_type::move(_M_data(), __s, __n);\n \t    _M_rep()->_M_length = __n;\n+\t    _M_data()[__n] = _Rep::_S_terminal;\n \t    return *this;\n \t  }\n       }"}]}