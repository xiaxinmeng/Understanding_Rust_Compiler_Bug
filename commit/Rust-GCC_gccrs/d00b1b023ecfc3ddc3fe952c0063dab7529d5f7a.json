{"sha": "d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwYjFiMDIzZWNmYzNkZGMzZmU5NTJjMDA2M2RhYjc1MjlkNWY3YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-26T08:07:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-26T08:07:41Z"}, "message": "powerpc, libcpp: Fix gcc build with clang on power8 [PR97163]\n\nlibcpp has two specialized altivec implementations of search_line_fast,\none for power8+ and the other one otherwise.\nBoth use __attribute__((altivec(vector))) and the GCC builtins rather than\naltivec.h and the APIs from there, which is fine, but should be restricted\nto when libcpp is built with GCC, so that it can be relied on.\nThe second elif is\nand thus e.g. when built with clang it isn't picked, but the first one was\njust guarded with\nand so according to the bugreporter clang fails miserably on that.\n\nThe following patch fixes that by adding the same GCC_VERSION requirement\nas the second version.  I don't know where the 4.5 in there comes from and\nthe exact version doesn't matter that much, as long as it is above 4.2 that\nclang pretends to be and smaller or equal to 4.8 as the oldest gcc we\nsupport as bootstrap compiler ATM.\nFurthermore, the patch fixes the comment, the version it is talking about is\nnot pre-GCC 5, but actually the GCC 5+ one.\n\n2020-09-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/97163\n\t* lex.c (search_line_fast): Only use _ARCH_PWR8 Altivec version\n\tfor GCC >= 4.5.", "tree": {"sha": "483eff30b3043b6fca6ca934e243f8190a543d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/483eff30b3043b6fca6ca934e243f8190a543d4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0ae0d512d86352aba976d01ac2929bf04a65c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0ae0d512d86352aba976d01ac2929bf04a65c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0ae0d512d86352aba976d01ac2929bf04a65c74"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2fe77d162a2abf62be50f26376adcdf1879bf7c8", "filename": "libcpp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a", "patch": "@@ -531,11 +531,11 @@ init_vectorized_lexer (void)\n   search_line_fast = impl;\n }\n \n-#elif defined(_ARCH_PWR8) && defined(__ALTIVEC__)\n+#elif (GCC_VERSION >= 4005) && defined(_ARCH_PWR8) && defined(__ALTIVEC__)\n \n /* A vection of the fast scanner using AltiVec vectorized byte compares\n    and VSX unaligned loads (when VSX is available).  This is otherwise\n-   the same as the pre-GCC 5 version.  */\n+   the same as the AltiVec version.  */\n \n ATTRIBUTE_NO_SANITIZE_UNDEFINED\n static const uchar *"}]}