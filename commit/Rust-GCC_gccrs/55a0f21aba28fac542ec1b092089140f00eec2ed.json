{"sha": "55a0f21aba28fac542ec1b092089140f00eec2ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhMGYyMWFiYTI4ZmFjNTQyZWMxYjA5MjA4OTE0MGYwMGVlYzJlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-30T18:45:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-30T18:45:18Z"}, "message": "re PR tree-optimization/71707 (ICE in get_stridx_plus_constant)\n\n\tPR tree-optimization/71707\n\t* tree-ssa-strlen.c (get_stridx_plus_constant): Handle already present\n\tstrinfo even for ADDR_EXPR ptr.\n\n\t* gcc.dg/strlenopt-29.c: New test.\n\nFrom-SVN: r237889", "tree": {"sha": "346cd525dca5b49ae36a4d5075a82d931b2cc902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346cd525dca5b49ae36a4d5075a82d931b2cc902"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55a0f21aba28fac542ec1b092089140f00eec2ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a0f21aba28fac542ec1b092089140f00eec2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a0f21aba28fac542ec1b092089140f00eec2ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a0f21aba28fac542ec1b092089140f00eec2ed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6245ad72d23867f979d0960bdde9a8427c6ba262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6245ad72d23867f979d0960bdde9a8427c6ba262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6245ad72d23867f979d0960bdde9a8427c6ba262"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "7bdcb074cbad3998c9dcaee51174e3578fa44775", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55a0f21aba28fac542ec1b092089140f00eec2ed", "patch": "@@ -1,3 +1,9 @@\n+2016-06-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71707\n+\t* tree-ssa-strlen.c (get_stridx_plus_constant): Handle already present\n+\tstrinfo even for ADDR_EXPR ptr.\n+\n 2016-06-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* config/rs6000/altivec.md (darn_32): Change the condition to"}, {"sha": "ac86ece33e3f791ee30e97ce2d92a99647528ed7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55a0f21aba28fac542ec1b092089140f00eec2ed", "patch": "@@ -1,5 +1,8 @@\n 2016-06-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/71707\n+\t* gcc.dg/strlenopt-29.c: New test.\n+\n \tPR fortran/71704\n \t* gfortran.dg/gomp/pr71704.f90: New test.\n "}, {"sha": "fb4b4c9cc71c671f5f84ca83ec6c5376736ac245", "filename": "gcc/testsuite/gcc.dg/strlenopt-29.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-29.c?ref=55a0f21aba28fac542ec1b092089140f00eec2ed", "patch": "@@ -0,0 +1,27 @@\n+/* PR tree-optimization/71707 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fdump-tree-strlen\" } */\n+\n+#include \"strlenopt.h\"\n+\n+char a[32];\n+size_t b;\n+\n+__attribute__((noinline, noclone)) char *\n+foo (void)\n+{\n+  char *p = memcpy (a, \"a\", 2) + 1;\n+  memcpy (&a[1], \"b\", 2);\n+  b = strlen (a) + strlen (&a[1]) + strlen (p);\n+  return p;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo () != &a[1] || b != 4)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"strlen \\\\(\" 0 \"strlen\" } } */"}, {"sha": "489c8f0c0d79d2285f51528c4cec770951ccc763", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a0f21aba28fac542ec1b092089140f00eec2ed/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=55a0f21aba28fac542ec1b092089140f00eec2ed", "patch": "@@ -677,8 +677,14 @@ get_stridx_plus_constant (strinfo *basesi, HOST_WIDE_INT off, tree ptr)\n \t{\n \t  if (r == 0)\n \t    {\n-\t      gcc_assert (TREE_CODE (ptr) == SSA_NAME);\n-\t      ssa_ver_to_stridx[SSA_NAME_VERSION (ptr)] = si->idx;\n+\t      if (TREE_CODE (ptr) == SSA_NAME)\n+\t\tssa_ver_to_stridx[SSA_NAME_VERSION (ptr)] = si->idx;\n+\t      else\n+\t\t{\n+\t\t  int *pidx = addr_stridxptr (TREE_OPERAND (ptr, 0));\n+\t\t  if (pidx != NULL && *pidx == 0)\n+\t\t    *pidx = si->idx;\n+\t\t}\n \t      return si->idx;\n \t    }\n \t  break;"}]}