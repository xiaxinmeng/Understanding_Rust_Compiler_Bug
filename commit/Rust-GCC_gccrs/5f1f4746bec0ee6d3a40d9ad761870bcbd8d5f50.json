{"sha": "5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYxZjQ3NDZiZWMwZWU2ZDNhNDBkOWFkNzYxODcwYmNiZDhkNWY1MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-01-28T22:10:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-01-28T22:10:40Z"}, "message": "modulo-sched.c (create_partial_schedule, [...]): Make them static.\n\n\t* modulo-sched.c (create_partial_schedule,\n\tfree_partial_schedule, reset_partial_schedule): Make them\n\tstatic.\n\nFrom-SVN: r110338", "tree": {"sha": "fa88065fb76338516533800fd52a3e3e15876782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa88065fb76338516533800fd52a3e3e15876782"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50/comments", "author": null, "committer": null, "parents": [{"sha": "3e9ba9d6a2000ad0ef0dc0f7632bb1329225b756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9ba9d6a2000ad0ef0dc0f7632bb1329225b756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e9ba9d6a2000ad0ef0dc0f7632bb1329225b756"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "22c9e2e4569f8c994b516f9eb956ac154bc30422", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "patch": "@@ -13,6 +13,10 @@\n \t* tree-vectorizer.h: Remove the prototype for\n \tvect_strip_conversion.\n \n+\t* modulo-sched.c (create_partial_schedule,\n+\tfree_partial_schedule, reset_partial_schedule): Make them\n+\tstatic.\n+\n 2006-01-28  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/aix43.h (SUBTARGET_OVERRIDE_OPTIONS): -msoft-float"}, {"sha": "eb362d03f60953b1ebdf94f29ab2a86ae76644d9", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "patch": "@@ -157,9 +157,9 @@ struct undo_replace_buff_elem\n \n \n   \n-partial_schedule_ptr create_partial_schedule (int ii, ddg_ptr, int history);\n-void free_partial_schedule (partial_schedule_ptr);\n-void reset_partial_schedule (partial_schedule_ptr, int new_ii);\n+static partial_schedule_ptr create_partial_schedule (int ii, ddg_ptr, int history);\n+static void free_partial_schedule (partial_schedule_ptr);\n+static void reset_partial_schedule (partial_schedule_ptr, int new_ii);\n void print_partial_schedule (partial_schedule_ptr, FILE *);\n static int kernel_number_of_cycles (rtx first_insn, rtx last_insn);\n static ps_insn_ptr ps_add_node_check_conflicts (partial_schedule_ptr,\n@@ -2033,7 +2033,8 @@ order_nodes_in_scc (ddg_ptr g, sbitmap nodes_ordered, sbitmap scc,\n    modulo scheduling.  */\n \n /* Create a partial schedule and allocate a memory to hold II rows.  */\n-partial_schedule_ptr\n+\n+static partial_schedule_ptr\n create_partial_schedule (int ii, ddg_ptr g, int history)\n {\n   partial_schedule_ptr ps = (partial_schedule_ptr)\n@@ -2069,7 +2070,8 @@ free_ps_insns (partial_schedule_ptr ps)\n }\n \n /* Free all the memory allocated to the partial schedule.  */\n-void\n+\n+static void\n free_partial_schedule (partial_schedule_ptr ps)\n {\n   if (!ps)\n@@ -2081,7 +2083,8 @@ free_partial_schedule (partial_schedule_ptr ps)\n \n /* Clear the rows array with its PS_INSNs, and create a new one with\n    NEW_II rows.  */\n-void\n+\n+static void\n reset_partial_schedule (partial_schedule_ptr ps, int new_ii)\n {\n   if (!ps)"}]}