{"sha": "0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhN2FiM2UzMTZiMWU5ZWY5ZGRmMzdhY2NhYmMwMzQ0MGUxODc2NQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-01-01T15:43:19Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-01-01T15:43:19Z"}, "message": "* g++.dg/parse/parse5.C: New test.\n\nFrom-SVN: r60750", "tree": {"sha": "d1062bcb3fbb2f7c7d94e368f510731f01b59846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1062bcb3fbb2f7c7d94e368f510731f01b59846"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba7ab3e316b1e9ef9ddf37accabc03440e18765/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16dfd8d12ae41c2a4de39bac9566a675b95bdd8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16dfd8d12ae41c2a4de39bac9566a675b95bdd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16dfd8d12ae41c2a4de39bac9566a675b95bdd8f"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "2a9f3f78c6fa98efd8c2776a38904d7454c66779", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba7ab3e316b1e9ef9ddf37accabc03440e18765/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba7ab3e316b1e9ef9ddf37accabc03440e18765/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "patch": "@@ -1,3 +1,7 @@\n+2003-01-01  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* g++.dg/parse/parse5.C: New test.\n+\n 2003-01-01  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* g++.dg/parse/parens1.C: New test."}, {"sha": "d3e015a9a3cb5f864615044f4c3875e58f3ef6d4", "filename": "gcc/testsuite/g++.dg/parse/parse5.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba7ab3e316b1e9ef9ddf37accabc03440e18765/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparse5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba7ab3e316b1e9ef9ddf37accabc03440e18765/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparse5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparse5.C?ref=0ba7ab3e316b1e9ef9ddf37accabc03440e18765", "patch": "@@ -0,0 +1,33 @@\n+/* PR c++/590 */\n+/* { dg-do compile } */\n+\n+#include <iostream>\n+#include <sstream>\n+using namespace std;\n+\n+enum ExternalEnum { EXTERNAL_VALUE = 2 };\n+\n+class BadStream : public ostringstream \n+{    \n+public: \n+  enum InternalEnum { VALUE = 0 };   \n+  BadStream( InternalEnum e ) {};\n+  BadStream( InternalEnum e, int i ) {};\n+};\n+\n+int main() \n+{\n+  ( BadStream( BadStream::VALUE ) ) << \"foobar\" << endl;\n+\n+  BadStream((BadStream::InternalEnum)BadStream::VALUE ) << \"foobar\";\n+\n+  BadStream::InternalEnum in = BadStream::VALUE;\n+  BadStream( in ) << \"foobar\";\n+    \n+  BadStream( BadStream::VALUE, 0 ) << \"foobar\" << endl;\n+    \n+  // This didn't used to compile:\n+  BadStream( BadStream::VALUE ) << \"foobar\" << endl;\n+\n+  return 0;\n+}"}]}