{"sha": "af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4Y2I1YzVlOGI2MGJiMDJkMTcyNjY4OGJjMDUwYTBmNWMyODVjOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-08-19T16:32:54Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-08-19T16:32:54Z"}, "message": "rs6000.c (rs6000_emit_set_const): Inline multi-instruction SImode constant.\n\n        * config/rs6000/rs6000.c (rs6000_emit_set_const): Inline\n        multi-instruction SImode constant.  Add REG_EQUAL note.\n        * config/rs6000/rs6000.md (movsi splitter): Use\n        rs6000_emit_set_const.\n\nFrom-SVN: r56439", "tree": {"sha": "a0a941e0b5ffc044f6d6f5170956e4c85497cfc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0a941e0b5ffc044f6d6f5170956e4c85497cfc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/comments", "author": null, "committer": null, "parents": [{"sha": "9bc146b3686d30f21b09ab1996689bfd520800cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc146b3686d30f21b09ab1996689bfd520800cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc146b3686d30f21b09ab1996689bfd520800cb"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "8d3077e41e1c616068186f7304fc876725f8d7a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "patch": "@@ -1,3 +1,10 @@\n+2002-08-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_set_const): Inline\n+\tmulti-instruction SImode constant.  Add REG_EQUAL note.\n+\t* config/rs6000/rs6000.md (movsi splitter): Use\n+\trs6000_emit_set_const. \n+\n 2002-08-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* tree-inline.c (initialize_inlined_parameters): Wrap variable in"}, {"sha": "399608af5dbe2fc31ff4ae96793234223f3fd624", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "patch": "@@ -2368,35 +2368,59 @@ rs6000_emit_set_const (dest, mode, source, n)\n      enum machine_mode mode;\n      int n ATTRIBUTE_UNUSED;\n {\n+  rtx result, insn, set;\n   HOST_WIDE_INT c0, c1;\n \n-  if (mode == QImode || mode == HImode || mode == SImode)\n+  if (mode == QImode || mode == HImode)\n     {\n       if (dest == NULL)\n         dest = gen_reg_rtx (mode);\n       emit_insn (gen_rtx_SET (VOIDmode, dest, source));\n       return dest;\n     }\n-\n-  if (GET_CODE (source) == CONST_INT)\n+  else if (mode == SImode)\n     {\n-      c0 = INTVAL (source);\n-      c1 = -(c0 < 0);\n+      result = no_new_pseudos ? dest : gen_reg_rtx (SImode);\n+\n+      emit_insn (gen_rtx_SET (VOIDmode, result,\n+\t\t\t      GEN_INT (INTVAL (source)\n+\t\t\t\t       & (~ (HOST_WIDE_INT) 0xffff))));\n+      emit_insn (gen_rtx_SET (VOIDmode, dest,\n+\t\t\t      gen_rtx_IOR (SImode, result,\n+\t\t\t\t\t   GEN_INT (INTVAL (source) & 0xffff))));\n+      result = dest;\n     }\n-  else if (GET_CODE (source) == CONST_DOUBLE)\n+  else if (mode == DImode)\n     {\n+      if (GET_CODE (source) == CONST_INT)\n+\t{\n+\t  c0 = INTVAL (source);\n+\t  c1 = -(c0 < 0);\n+\t}\n+      else if (GET_CODE (source) == CONST_DOUBLE)\n+\t{\n #if HOST_BITS_PER_WIDE_INT >= 64\n-      c0 = CONST_DOUBLE_LOW (source);\n-      c1 = -(c0 < 0);\n+\t  c0 = CONST_DOUBLE_LOW (source);\n+\t  c1 = -(c0 < 0);\n #else\n-      c0 = CONST_DOUBLE_LOW (source);\n-      c1 = CONST_DOUBLE_HIGH (source);\n+\t  c0 = CONST_DOUBLE_LOW (source);\n+\t  c1 = CONST_DOUBLE_HIGH (source);\n #endif\n+\t}\n+      else\n+\tabort ();\n+\n+      result = rs6000_emit_set_long_const (dest, c0, c1);\n     }\n   else\n     abort ();\n \n-  return rs6000_emit_set_long_const (dest, c0, c1);\n+  insn = get_last_insn ();\n+  set = single_set (insn);\n+  if (! CONSTANT_P (SET_SRC (set)))\n+    set_unique_reg_note (insn, REG_EQUAL, source);\n+\n+  return result;\n }\n \n /* Having failed to find a 3 insn sequence in rs6000_emit_set_const,"}, {"sha": "c3ff213832ec5b8249783415e34349492168ae94", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8cb5c5e8b60bb02d1726688bc050a0f5c285c9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=af8cb5c5e8b60bb02d1726688bc050a0f5c285c9", "patch": "@@ -8215,9 +8215,12 @@\n \t(ior:SI (match_dup 0)\n \t\t(match_dup 3)))]\n   \"\n-{\n-  operands[2] = GEN_INT (INTVAL (operands[1]) & (~ (HOST_WIDE_INT) 0xffff));\n-  operands[3] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n+{ rtx tem = rs6000_emit_set_const (operands[0], SImode, operands[1], 2);\n+\n+  if (tem == operands[0])\n+    DONE;\n+  else\n+    FAIL;\n }\")\n \n (define_insn \"*movsi_internal2\""}]}