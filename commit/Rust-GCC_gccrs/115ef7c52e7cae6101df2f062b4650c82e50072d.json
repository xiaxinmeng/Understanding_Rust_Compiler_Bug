{"sha": "115ef7c52e7cae6101df2f062b4650c82e50072d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1ZWY3YzUyZTdjYWU2MTAxZGYyZjA2MmI0NjUwYzgyZTUwMDcyZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-23T14:08:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-23T14:08:25Z"}, "message": "re PR c++/66501 (Default move assignment does not move array members)\n\n\tPR c++/66501\n\t* class.c (type_has_nontrivial_assignment): New.\n\t* init.c (build_vec_init): Use it.\n\t* cp-tree.h: Declare it.\n\t* method.c (trivial_fn_p): Templates aren't trivial.\n\nFrom-SVN: r224843", "tree": {"sha": "44310bb83003aec8c18da2121e39487979170bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44310bb83003aec8c18da2121e39487979170bd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/115ef7c52e7cae6101df2f062b4650c82e50072d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115ef7c52e7cae6101df2f062b4650c82e50072d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115ef7c52e7cae6101df2f062b4650c82e50072d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115ef7c52e7cae6101df2f062b4650c82e50072d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4c9e7f92225d829ad1d18c950066cf99fc58cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c9e7f92225d829ad1d18c950066cf99fc58cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c9e7f92225d829ad1d18c950066cf99fc58cc7"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "de8fdacdedf046758e18bbc3fb8f1fade038df88", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -1,5 +1,11 @@\n 2015-06-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/66501\n+\t* class.c (type_has_nontrivial_assignment): New.\n+\t* init.c (build_vec_init): Use it.\n+\t* cp-tree.h: Declare it.\n+\t* method.c (trivial_fn_p): Templates aren't trivial.\n+\n \tPR c++/66542\n \t* decl.c (expand_static_init): Make sure the destructor is callable\n \there even if we have an initializer."}, {"sha": "88f1022dcd308f7edd8981fe4903bd03d0037c16", "filename": "gcc/cp/class.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -5136,6 +5136,24 @@ type_has_non_user_provided_default_constructor (tree t)\n   return false;\n }\n \n+/* Return true if TYPE has some non-trivial assignment operator.  */\n+\n+bool\n+type_has_nontrivial_assignment (tree type)\n+{\n+  gcc_assert (TREE_CODE (type) != ARRAY_TYPE);\n+  if (CLASS_TYPE_P (type))\n+    for (tree fns\n+\t   = lookup_fnfields_slot_nolazy (type, ansi_assopname (NOP_EXPR));\n+\t fns; fns = OVL_NEXT (fns))\n+      {\n+\ttree fn = OVL_CURRENT (fns);\n+\tif (!trivial_fn_p (fn))\n+\t  return true;\n+      }\n+  return false;\n+}\n+\n /* TYPE is being used as a virtual base, and has a non-trivial move\n    assignment.  Return true if this is due to there being a user-provided\n    move assignment in TYPE or one of its subobjects; if there isn't, then"}, {"sha": "8eb74748fdab6b49cd1f380d3c98a8fbfba232cb", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -5295,6 +5295,7 @@ extern tree in_class_defaulted_default_constructor (tree);\n extern bool user_provided_p\t\t\t(tree);\n extern bool type_has_user_provided_constructor  (tree);\n extern bool type_has_non_user_provided_default_constructor (tree);\n+extern bool type_has_nontrivial_assignment\t(tree);\n extern bool vbase_has_user_provided_move_assign (tree);\n extern tree default_init_uninitialized_part (tree);\n extern bool trivial_default_constructor_is_constexpr (tree);"}, {"sha": "08c6c0ee0cf3bb50b732b5951085fcd365fc50f2", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -3460,8 +3460,7 @@ build_vec_init (tree base, tree maxindex, tree init,\n       && TREE_CODE (atype) == ARRAY_TYPE\n       && TREE_CONSTANT (maxindex)\n       && (from_array == 2\n-\t  ? (!CLASS_TYPE_P (inner_elt_type)\n-\t     || !TYPE_HAS_COMPLEX_COPY_ASSIGN (inner_elt_type))\n+\t  ? !type_has_nontrivial_assignment (inner_elt_type)\n \t  : !TYPE_NEEDS_CONSTRUCTING (type))\n       && ((TREE_CODE (init) == CONSTRUCTOR\n \t   /* Don't do this if the CONSTRUCTOR might contain something"}, {"sha": "da03c365a9ab08209dc027a76c6e5f201d125ee9", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -476,6 +476,8 @@ type_set_nontrivial_flag (tree ctype, special_function_kind sfk)\n bool\n trivial_fn_p (tree fn)\n {\n+  if (TREE_CODE (fn) == TEMPLATE_DECL)\n+    return false;\n   if (!DECL_DEFAULTED_FN (fn))\n     return false;\n "}, {"sha": "90757648472139b934701b9610cd6ad435c20956", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-array1.C", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-array1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115ef7c52e7cae6101df2f062b4650c82e50072d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-array1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-array1.C?ref=115ef7c52e7cae6101df2f062b4650c82e50072d", "patch": "@@ -0,0 +1,55 @@\n+// PR c++/66501\n+// { dg-do run { target c++11 } }\n+\n+int total_size;\n+\n+struct Object\n+{\n+  int size = 0;\n+\n+  Object () = default;\n+\n+  ~Object () {\n+    total_size -= size;\n+  }\n+\n+  Object (const Object &) = delete;\n+  Object & operator= (const Object &) = delete;\n+\n+  Object (Object && b) {\n+    size = b.size;\n+    b.size = 0;\n+  }\n+\n+  Object & operator= (Object && b) {\n+    if (this != & b) {\n+      total_size -= size;\n+      size = b.size;\n+      b.size = 0;\n+    }\n+    return * this;\n+  }\n+\n+  void grow () {\n+    size ++;\n+    total_size ++;\n+  }\n+};\n+\n+struct Container {\n+  Object objects[2];\n+};\n+\n+int main (void)\n+{\n+  Container container;\n+\n+  // grow some objects in the container\n+  for (auto & object : container.objects)\n+    object.grow ();\n+\n+  // now empty it\n+  container = Container ();\n+\n+  return total_size;\n+}"}]}