{"sha": "bbbb79d42a793c2328535b09ffaa71422353f851", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJiYjc5ZDQyYTc5M2MyMzI4NTM1YjA5ZmZhYTcxNDIyMzUzZjg1MQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-08-25T18:11:12Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-08-25T18:11:12Z"}, "message": "gimplify.c (lookup_tmp_var): Separate temporaries when not optimizing.\n\n\t* gimplify.c (lookup_tmp_var): Separate temporaries when not\n\toptimizing.\n\nFrom-SVN: r86563", "tree": {"sha": "beea9c2173e9f6b5139100616d041d09db2f4a3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beea9c2173e9f6b5139100616d041d09db2f4a3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbbb79d42a793c2328535b09ffaa71422353f851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbbb79d42a793c2328535b09ffaa71422353f851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbbb79d42a793c2328535b09ffaa71422353f851", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbbb79d42a793c2328535b09ffaa71422353f851/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d711cf67a62351e4722d7b16b1be84899b6b1d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d711cf67a62351e4722d7b16b1be84899b6b1d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d711cf67a62351e4722d7b16b1be84899b6b1d82"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "d4eac297d3a3cfb2083e09c019dffabe5395dfed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbb79d42a793c2328535b09ffaa71422353f851/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbb79d42a793c2328535b09ffaa71422353f851/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbbb79d42a793c2328535b09ffaa71422353f851", "patch": "@@ -1,3 +1,8 @@\n+2004-08-24  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gimplify.c (lookup_tmp_var): Separate temporaries when not\n+\toptimizing.\n+\n 2004-08-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR libstdc++/17005 (fix for HP-UX 11.11)"}, {"sha": "323df36177339b7e94665dce0e1a16847ccb546a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbbb79d42a793c2328535b09ffaa71422353f851/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbbb79d42a793c2328535b09ffaa71422353f851/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=bbbb79d42a793c2328535b09ffaa71422353f851", "patch": "@@ -117,8 +117,11 @@ push_gimplify_context (void)\n     abort ();\n   gimplify_ctxp\n     = (struct gimplify_ctx *) xcalloc (1, sizeof (struct gimplify_ctx));\n-  gimplify_ctxp->temp_htab\n-    = htab_create (1000, gimple_tree_hash, gimple_tree_eq, free);\n+  if (optimize)\n+    gimplify_ctxp->temp_htab\n+      = htab_create (1000, gimple_tree_hash, gimple_tree_eq, free);\n+  else\n+    gimplify_ctxp->temp_htab = NULL;\n }\n \n /* Tear down a context for the gimplifier.  If BODY is non-null, then\n@@ -142,12 +145,13 @@ pop_gimplify_context (tree body)\n     record_vars (gimplify_ctxp->temps);\n \n #if 0\n-  if (!quiet_flag)\n+  if (!quiet_flag && optimize)\n     fprintf (stderr, \" collisions: %f \",\n \t     htab_collisions (gimplify_ctxp->temp_htab));\n #endif\n \n-  htab_delete (gimplify_ctxp->temp_htab);\n+  if (optimize)\n+    htab_delete (gimplify_ctxp->temp_htab);\n   free (gimplify_ctxp);\n   gimplify_ctxp = NULL;\n }\n@@ -409,7 +413,12 @@ lookup_tmp_var (tree val, bool is_formal)\n {\n   tree ret;\n \n-  if (!is_formal || TREE_SIDE_EFFECTS (val))\n+  /* If not optimizing, never really reuse a temporary.  local-alloc\n+     won't allocate any variable that is used in more than one basic\n+     block, which means it will go into memory, causing much extra\n+     work in reload and final and poorer code generation, outweighing\n+     the extra memory allocation here.  */\n+  if (!optimize || !is_formal || TREE_SIDE_EFFECTS (val))\n     ret = create_tmp_from_val (val);\n   else\n     {"}]}