{"sha": "bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4YTVlNTZjMDk3ZGVkNjlkNTRiMzA2MWJkNTgwMmU4ZTk0YTVhNw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-08-30T21:28:20Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-08-30T21:28:20Z"}, "message": "jcf-io.c (open_class): Set filename field.\n\n\n\t* jcf-io.c (open_class):  Set filename field.\n\n\t* jcf-parse,c (parse_class_file):  Set current_function_decl\n\tfor better error message when Code attribute is missing.\n\n\t* lang.c (put_decl_node, lang_print_error):  Re-arrange for\n\tbetter diagnostics, especially for constructors.\n\nFrom-SVN: r45299", "tree": {"sha": "54d6fc81c0ab3238037f261dd5e4f088a33ff456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54d6fc81c0ab3238037f261dd5e4f088a33ff456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9ee7233caa4e6ff8f964318f0762bf2df6639b"}], "stats": {"total": 69, "additions": 45, "deletions": 24}, "files": [{"sha": "02297cfd6150a39ebf35f1fe7c21fb58d49f8620", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "patch": "@@ -1,3 +1,13 @@\n+2001-08-30  Per Bothner  <per@bothner.com>\n+\n+\t* jcf-io.c (open_class):  Set filename field.\n+\n+\t* jcf-parse,c (parse_class_file):  Set current_function_decl\n+\tfor better error message when Code attribute is missing.\n+\n+\t* lang.c (put_decl_node, lang_print_error):  Re-arrange for\n+\tbetter diagnostics, especially for constructors.\n+\t\n 2001-08-30  Per Bothner  <per@bothner.com>\n \n \t* jcf-write.c (generate_classfile):  Don't write ConstantValue"}, {"sha": "a2809767444ae9486475addea5858de25248a749", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "patch": "@@ -242,6 +242,7 @@ DEFUN(open_class, (filename, jcf, stream, dep_name),\n       jcf->read_ptr = NULL;\n       jcf->read_end = NULL;\n       jcf->read_state = stream;\n+      jcf->filename = filename;\n       jcf->filbuf = jcf_filbuf_from_stdio;\n     }\n   else\n@@ -556,7 +557,9 @@ DEFUN(jcf_print_utf8_replace, (stream, str, length, in_char, out_char),\n \n /* Check that all the cross-references in the constant pool are\n    valid.  Returns 0 on success.\n-   Otherwise, returns the index of the (first) invalid entry. */\n+   Otherwise, returns the index of the (first) invalid entry.\n+   Only checks internal consistency, but does not check that\n+   any classes, fields, or methods are valid.*/\n \n int\n DEFUN(verify_constant_pool, (jcf),"}, {"sha": "1247ece6caf3a8e3aed339514dd99b02fb29a41f", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "patch": "@@ -840,6 +840,7 @@ parse_class_file ()\n \n       if (DECL_CODE_OFFSET (method) == 0)\n \t{\n+\t  current_function_decl = method;\n \t  error (\"missing Code attribute\");\n \t  continue;\n \t}"}, {"sha": "951d2996b30557790e6dcb4129e1f3b390073429", "filename": "gcc/java/lang.c", "status": "modified", "additions": 30, "deletions": 23, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a5e56c097ded69d54b3061bd5802e8e94a5a7/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=bc8a5e56c097ded69d54b3061bd5802e8e94a5a7", "patch": "@@ -522,32 +522,36 @@ put_decl_node (node)\n   if (TREE_CODE_CLASS (TREE_CODE (node)) == 'd'\n       && DECL_NAME (node) != NULL_TREE)\n     {\n-      /* We want to print the type the DECL belongs to. We don't do\n-\t that when we handle constructors. */\n-      if (TREE_CODE (node) == FUNCTION_DECL\n-\t  && ! DECL_CONSTRUCTOR_P (node)\n-\t  && ! DECL_ARTIFICIAL (node) && DECL_CONTEXT (node))\n+      if (TREE_CODE (node) == FUNCTION_DECL)\n \t{\n-\t  put_decl_node (TYPE_NAME (DECL_CONTEXT (node)));\n-\t  put_decl_string (\".\", 1);\n-\t}\n-      if (! DECL_CONSTRUCTOR_P (node))\n-\tput_decl_node (DECL_NAME (node));\n-      if (TREE_CODE (node) == FUNCTION_DECL && TREE_TYPE (node) != NULL_TREE)\n-\t{\n-\t  int i = 0;\n-\t  tree args = TYPE_ARG_TYPES (TREE_TYPE (node));\n-\t  if (TREE_CODE (TREE_TYPE (node)) == METHOD_TYPE)\n-\t    args = TREE_CHAIN (args);\n-\t  put_decl_string (\"(\", 1);\n-\t  for ( ; args != end_params_node;  args = TREE_CHAIN (args), i++)\n+\t  /* We want to print the type the DECL belongs to. We don't do\n+\t     that when we handle constructors. */\n+\t  if (! DECL_CONSTRUCTOR_P (node)\n+\t      && ! DECL_ARTIFICIAL (node) && DECL_CONTEXT (node))\n \t    {\n-\t      if (i > 0)\n-\t\tput_decl_string (\",\", 1);\n-\t      put_decl_node (TREE_VALUE (args));\n+\t      put_decl_node (TYPE_NAME (DECL_CONTEXT (node)));\n+\t      put_decl_string (\".\", 1);\n+\t    }\n+\t  if (! DECL_CONSTRUCTOR_P (node))\n+\t    put_decl_node (DECL_NAME (node));\n+\t  if (TREE_TYPE (node) != NULL_TREE)\n+\t    {\n+\t      int i = 0;\n+\t      tree args = TYPE_ARG_TYPES (TREE_TYPE (node));\n+\t      if (TREE_CODE (TREE_TYPE (node)) == METHOD_TYPE)\n+\t\targs = TREE_CHAIN (args);\n+\t      put_decl_string (\"(\", 1);\n+\t      for ( ; args != end_params_node;  args = TREE_CHAIN (args), i++)\n+\t\t{\n+\t\t  if (i > 0)\n+\t\t    put_decl_string (\",\", 1);\n+\t\t  put_decl_node (TREE_VALUE (args));\n+\t\t}\n+\t      put_decl_string (\")\", 1);\n \t    }\n-\t  put_decl_string (\")\", 1);\n \t}\n+      else\n+\tput_decl_node (DECL_NAME (node));\n     }\n   else if (TREE_CODE_CLASS (TREE_CODE (node)) == 't'\n       && TYPE_NAME (node) != NULL_TREE)\n@@ -648,7 +652,10 @@ lang_print_error (context, file)\n       else\n \t{\n \t  const char *name = lang_printable_name (current_function_decl, 2);\n-\t  fprintf (stderr, \"In method `%s':\\n\", name);\n+\t  fprintf (stderr, \"In %s `%s':\\n\",\n+\t\t   (DECL_CONSTRUCTOR_P (current_function_decl) ? \"constructor\" \n+\t\t    : \"method\"),\n+\t\t   name);\n \t}\n \n       last_error_function = current_function_decl;"}]}