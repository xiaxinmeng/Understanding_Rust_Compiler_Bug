{"sha": "0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzYTIzMWQyZjhkNzE3YzRlMzFlYTNhNTZmYjViOWNjZjVkZTU3Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-12-14T09:19:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-14T09:19:56Z"}, "message": "locale_facets.h (ctype<char>): Remove throw specs not in base class signature.\n\n\n2000-12-13  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.h (ctype<char>): Remove throw specs not in\n\tbase class signature.\n\t* config/os/*/bits/ctype_inline.h (is): Same.\n\nFrom-SVN: r38250", "tree": {"sha": "00c8aa8501a1a10eaf58ca68869fb959e62ecf8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c8aa8501a1a10eaf58ca68869fb959e62ecf8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/comments", "author": null, "committer": null, "parents": [{"sha": "65b66e1f9025d5311f81be3995c110ce4cebadd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b66e1f9025d5311f81be3995c110ce4cebadd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b66e1f9025d5311f81be3995c110ce4cebadd1"}], "stats": {"total": 152, "additions": 71, "deletions": 81}, "files": [{"sha": "46340e3d8f9aa3fa4ca565134c3f414fce4d2061", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -2,7 +2,8 @@\n \n \t* include/bits/locale_facets.h (ctype<char>): Remove throw specs not in\n \tbase class signature.\n-\n+\t* config/os/*/bits/ctype_inline.h (is): Same.\n+\t\n 2000-12-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/os/generic/bits/ctype_base.h (ctype_base): Consistency"}, {"sha": "16e011c4a9acffbbfd9f724ec9735f92446b4187", "filename": "libstdc++-v3/config/os/aix/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const \n   { return __OBJ_DATA(__lc_ctype)->mask[__c] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const \n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const \n   {\n     while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n@@ -66,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const \n   {\n     while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;"}, {"sha": "b51867dcac259aee59282142a78ba7429d32939b", "filename": "libstdc++-v3/config/os/bsd/freebsd/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,7 +36,7 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { \n     if (__m & (digit | xdigit))\n       return __isctype(__c, __m);\n@@ -46,7 +46,7 @@\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -62,7 +62,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n@@ -71,7 +71,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;"}, {"sha": "2d72d9896cfe507a3d89d2b3b67dbc13e03cec7e", "filename": "libstdc++-v3/config/os/bsd/netbsd/bits/ctype_inline.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return _M_table[(unsigned char)(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n@@ -66,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;\n@@ -77,3 +77,4 @@\n \n \n \n+"}, {"sha": "98c7e3d03093820832bf78c4cce77b3f0dd255ef", "filename": "libstdc++-v3/config/os/generic/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -41,7 +41,7 @@\n \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { \n     bool __ret;\n     switch (__m)\n@@ -88,7 +88,7 @@\n    \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = 11; // Highest bitmask in ctype_base == 10\n     for (;__low < __high; ++__vec, ++__low)\n@@ -104,7 +104,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n@@ -113,7 +113,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;"}, {"sha": "83563a9ade766d7284740f09b8b9060d1a074dc6", "filename": "libstdc++-v3/config/os/gnu-linux/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return _M_table[__c] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !(_M_table[*__low] & __m))\n       ++__low;\n@@ -66,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high \n \t   && (_M_table[*__low] & __m) != 0)"}, {"sha": "d11e1e51851df488301dbad012c4ce57e089dcdf", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_base.h", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,25 +35,21 @@\n   \n   struct ctype_base\n   {\n-    typedef unsigned int \tmask;\n     // Non-standard typedefs.\n     typedef const int* \t\t__to_type;\n \n-    enum\n-    {\n-      space = (1 << 5),\t// Whitespace\n-      print = (1 << 6),\t// Printing\n-      cntrl = (1 << 9),\t// Control character\n-      upper = (1 << 0),\t// UPPERCASE\n-      lower = (1 << 1),\t// lowercase\n-      alpha = (1 << 5),\t// Alphabetic\n-      digit = (1 << 2),\t// Numeric\n-      punct = (1 << 10),// Punctuation\n-      xdigit = (1 << 4),// Hexadecimal numeric\n-      alnum = (1 << 11),// Alphanumeric\n-      graph = (1 << 7)\t// Graphical\n-    };\n+    // NB: Offsets into ctype<char>::_M_table force a particular size\n+    // on the mask type. Because of this, we don't use an enum.\n+    typedef unsigned int        mask;   \n+    static const mask upper     = 1 << 0;\n+    static const mask lower     = 1 << 1;\n+    static const mask alpha     = 1 << 2;\n+    static const mask digit     = 1 << 3;\n+    static const mask xdigit    = 1 << 4;\n+    static const mask space     = 1 << 5;\n+    static const mask print     = 1 << 6;\n+    static const mask graph     = 1 << 7;\n+    static const mask cntrl     = 1 << 8;\n+    static const mask punct     = 1 << 9;\n+    static const mask alnum     = 1 << 10;\n   };\n-\n-\n-"}, {"sha": "35cc3063d4c3a0fe2a9588f772cbe8e8096c144b", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_inline.h", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,21 +36,28 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const \n   { return _M_table[(unsigned char)(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const \n   {\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n+    const int __bitmasksize = 11; // Highest bitmask in ctype_base == 10\n+    for (;__low < __high; ++__vec, ++__low)\n+      {\n+        mask __m = _M_table[*__low];\n+        int __i = 0; // Lowest bitmask in ctype_base == 0\n+        while (__i < __bitmasksize && !(__m & static_cast<mask>(1 << __i)))\n+          ++__i;\n+        *__vec = static_cast<mask>(1 << __i);\n+      }\n     return __high;\n   }\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n@@ -59,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;"}, {"sha": "1b400f2418338869d6e70dd104167db8b32b474f", "filename": "libstdc++-v3/config/os/irix/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return (_M_table)[__c] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !((_M_table)[*__low] & __m))\n       ++__low;\n@@ -66,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && ((_M_table + 1)[*__low] & __m) != 0)\n       ++__low;"}, {"sha": "61c4bc85898034dae407686383903d98729d27b0", "filename": "libstdc++-v3/config/os/newlib/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return (_M_table + 1)[(unsigned char)(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const \n   {\n     while (__low < __high && !((_M_table + 1)[(unsigned char)(*__low)] & __m))\n       ++__low;\n@@ -66,7 +66,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high \n \t   && ((_M_table + 1)[(unsigned char)(*__low)] & __m) != 0)"}, {"sha": "f6719935af076dfc403d289a31ae830eb5213153", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return (_M_table + 1)[(unsigned char)(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !((_M_table + 1)[(unsigned char)(*__low)] & __m))\n       ++__low;\n@@ -66,15 +66,10 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high \n \t   && ((_M_table + 1)[(unsigned char)(*__low)] & __m) != 0)\n       ++__low;\n     return __low;\n   }\n-\n-\n-\n-\n-"}, {"sha": "f254e839fb86ad25e314a039d297971952d973db", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return _M_table[__c] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !(_M_table[*__low] & __m))\n       ++__low;\n@@ -66,15 +66,10 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high \n \t   && (_M_table[*__low] & __m) != 0)\n       ++__low;\n     return __low;\n   }\n-\n-\n-\n-\n-"}, {"sha": "f254e839fb86ad25e314a039d297971952d973db", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/bits/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_inline.h?ref=0c3a231d2f8d717c4e31ea3a56fb5b9ccf5de573", "patch": "@@ -36,12 +36,12 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const throw()\n+  is(mask __m, char __c) const\n   { return _M_table[__c] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n     const int __bitmasksize = sizeof(mask) * 8;\n     for (;__low < __high; ++__vec, ++__low)\n@@ -57,7 +57,7 @@\n \n   const char*\n   ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  scan_is(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high && !(_M_table[*__low] & __m))\n       ++__low;\n@@ -66,15 +66,10 @@\n \n   const char*\n   ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  scan_not(mask __m, const char* __low, const char* __high) const\n   {\n     while (__low < __high \n \t   && (_M_table[*__low] & __m) != 0)\n       ++__low;\n     return __low;\n   }\n-\n-\n-\n-\n-"}]}