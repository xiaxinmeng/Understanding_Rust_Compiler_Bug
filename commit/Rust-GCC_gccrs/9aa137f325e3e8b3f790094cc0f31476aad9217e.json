{"sha": "9aa137f325e3e8b3f790094cc0f31476aad9217e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhMTM3ZjMyNWUzZThiM2Y3OTAwOTRjYzBmMzE0NzZhYWQ5MjE3ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-11-18T06:45:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-11-18T06:45:55Z"}, "message": "flow.c (split_edge): Take looping structure into account when determining where to put the new block...\n\n\t* flow.c (split_edge): Take looping structure into account when\n\tdetermining where to put the new block note.\n\nFrom-SVN: r30567", "tree": {"sha": "64733b81efce2d246d5ec15d39e71547ffca9f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64733b81efce2d246d5ec15d39e71547ffca9f3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa137f325e3e8b3f790094cc0f31476aad9217e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa137f325e3e8b3f790094cc0f31476aad9217e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa137f325e3e8b3f790094cc0f31476aad9217e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa137f325e3e8b3f790094cc0f31476aad9217e/comments", "author": null, "committer": null, "parents": [{"sha": "7c2e3b9b525dd16f20ec372f867b3d2d1d4feb20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2e3b9b525dd16f20ec372f867b3d2d1d4feb20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2e3b9b525dd16f20ec372f867b3d2d1d4feb20"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "baa083cb1ac78bd01fdf3ceedfcfa4f0decb454f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa137f325e3e8b3f790094cc0f31476aad9217e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa137f325e3e8b3f790094cc0f31476aad9217e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9aa137f325e3e8b3f790094cc0f31476aad9217e", "patch": "@@ -1,3 +1,8 @@\n+Wed Nov 17 23:46:14 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* flow.c (split_edge): Take looping structure into account when\n+\tdetermining where to put the new block note.\n+\n Wed Nov 17 20:42:43 1999  Jeff Holcomb  <jeffh@cygnus.com>\n \n \t* Makefile.in (ggc-none.o): Provide host specific version if"}, {"sha": "837837222885136ecbbf252ed66752fb291fbfd5", "filename": "gcc/flow.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa137f325e3e8b3f790094cc0f31476aad9217e/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa137f325e3e8b3f790094cc0f31476aad9217e/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=9aa137f325e3e8b3f790094cc0f31476aad9217e", "patch": "@@ -1422,8 +1422,31 @@ split_edge (edge_in)\n   BASIC_BLOCK (i) = bb;\n   bb->index = i;\n \n-  /* Create the basic block note.  */\n-  if (old_succ != EXIT_BLOCK_PTR)\n+  /* Create the basic block note. \n+\n+     Where we place the note can have a noticable impact on the generated\n+     code.  Consider this cfg: \n+\t\n+\n+\t\t        E\n+\t\t\t|\n+\t\t\t0\n+\t\t       / \\\n+\t\t   +->1-->2--->E\n+                   |  |\n+\t\t   +--+\n+\n+      If we need to insert an insn on the edge from block 0 to block 1,\n+      we want to ensure the instructions we insert are outside of any\n+      loop notes that physically sit between block 0 and block 1.  Otherwise\n+      we confuse the loop optimizer into thinking the loop is a phony.  */\n+  if (old_succ != EXIT_BLOCK_PTR\n+      && PREV_INSN (old_succ->head)\n+      && GET_CODE (PREV_INSN (old_succ->head)) == NOTE\n+      && NOTE_LINE_NUMBER (PREV_INSN (old_succ->head)) == NOTE_INSN_LOOP_BEG)\n+    bb_note = emit_note_before (NOTE_INSN_BASIC_BLOCK,\n+\t\t\t\tPREV_INSN (old_succ->head));\n+  else if (old_succ != EXIT_BLOCK_PTR)\n     bb_note = emit_note_before (NOTE_INSN_BASIC_BLOCK, old_succ->head);\n   else\n     bb_note = emit_note_after (NOTE_INSN_BASIC_BLOCK, get_last_insn ());"}]}