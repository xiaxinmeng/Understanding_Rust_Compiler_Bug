{"sha": "4804de453e7f5f90dd5e64114abbd272f9e8f62d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgwNGRlNDUzZTdmNWY5MGRkNWU2NDExNGFiYmQyNzJmOWU4ZjYyZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-01-19T19:43:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-01-22T12:56:11Z"}, "message": "driver: do not check file existence here [PR 98452]\n\nThe driver checks whether OPT_SPECIAL_input_file options are readable.\nThere's no need, the compiler proper will do that anyway.\n\n\tgcc/\n\t* gcc.c (process_command): Don't check OPT_SPECIAL_input_file\n\texistence here.", "tree": {"sha": "02574e3afc415618ac937401e062ac98753d0960", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02574e3afc415618ac937401e062ac98753d0960"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4804de453e7f5f90dd5e64114abbd272f9e8f62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4804de453e7f5f90dd5e64114abbd272f9e8f62d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4804de453e7f5f90dd5e64114abbd272f9e8f62d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4804de453e7f5f90dd5e64114abbd272f9e8f62d/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bad25eb56bd16f3482f856a75b1c1ae5cfe1c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bad25eb56bd16f3482f856a75b1c1ae5cfe1c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bad25eb56bd16f3482f856a75b1c1ae5cfe1c4f"}], "stats": {"total": 36, "additions": 2, "deletions": 34}, "files": [{"sha": "aa5774af7e719d34e1010e6b13180c2580ca0898", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4804de453e7f5f90dd5e64114abbd272f9e8f62d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4804de453e7f5f90dd5e64114abbd272f9e8f62d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4804de453e7f5f90dd5e64114abbd272f9e8f62d", "patch": "@@ -4811,44 +4811,12 @@ process_command (unsigned int decoded_options_count,\n       if (decoded_options[j].opt_index == OPT_SPECIAL_input_file)\n \t{\n \t  const char *arg = decoded_options[j].arg;\n-          const char *p = strrchr (arg, '@');\n-          char *fname;\n-\t  long offset;\n-\t  int consumed;\n+\n #ifdef HAVE_TARGET_OBJECT_SUFFIX\n \t  arg = convert_filename (arg, 0, access (arg, F_OK));\n #endif\n-\t  /* For LTO static archive support we handle input file\n-\t     specifications that are composed of a filename and\n-\t     an offset like FNAME@OFFSET.  */\n-\t  if (p\n-\t      && p != arg\n-\t      && sscanf (p, \"@%li%n\", &offset, &consumed) >= 1\n-\t      && strlen (p) == (unsigned int)consumed)\n-\t    {\n-              fname = (char *)xmalloc (p - arg + 1);\n-              memcpy (fname, arg, p - arg);\n-              fname[p - arg] = '\\0';\n-\t      /* Only accept non-stdin and existing FNAME parts, otherwise\n-\t\t try with the full name.  */\n-\t      if (strcmp (fname, \"-\") == 0 || access (fname, F_OK) < 0)\n-\t\t{\n-\t\t  free (fname);\n-\t\t  fname = xstrdup (arg);\n-\t\t}\n-\t    }\n-\t  else\n-\t    fname = xstrdup (arg);\n-\n-          if (strcmp (fname, \"-\") != 0 && access (fname, F_OK) < 0)\n-\t    {\n-\t      bool resp = fname[0] == '@' && access (fname + 1, F_OK) < 0;\n-\t      error (\"%s: %m\", fname + resp);\n-\t    }\n-          else\n-\t    add_infile (arg, spec_lang);\n+\t  add_infile (arg, spec_lang);\n \n-          free (fname);\n \t  continue;\n \t}\n "}]}