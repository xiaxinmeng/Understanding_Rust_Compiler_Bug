{"sha": "5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhYzVjYjI0YmRmMmM4NjhlMWYyMmQ4M2FmYWVmNjZlMmYwMGQ4ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-17T20:27:52Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-17T20:27:52Z"}, "message": "compiler: Use backend interface for runtime errors.\n\nFrom-SVN: r206067", "tree": {"sha": "453df6b0c904bc37b113f20f51076b07e4b2c9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/453df6b0c904bc37b113f20f51076b07e4b2c9f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/comments", "author": null, "committer": null, "parents": [{"sha": "bd925c509a3e8ef65c6b459c93e2d4bc22ecaa3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd925c509a3e8ef65c6b459c93e2d4bc22ecaa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd925c509a3e8ef65c6b459c93e2d4bc22ecaa3f"}], "stats": {"total": 60, "additions": 26, "deletions": 34}, "files": [{"sha": "2f1c026c98335e6455f0b27ab49bd3fa8c970aaa", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "patch": "@@ -4305,8 +4305,9 @@ Unary_expression::do_get_tree(Translate_context* context)\n \t\t\t\t\t       expr,\n \t\t\t\t\t       fold_convert(TREE_TYPE(expr),\n \t\t\t\t\t\t\t    null_pointer_node));\n-\t\ttree crash = gogo->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE,\n-\t\t\t\t\t\t loc);\n+\t\tExpression* crash_expr =\n+\t\t    gogo->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE, loc);\n+\t\ttree crash = crash_expr->get_tree(context);\n \t\texpr = fold_build2_loc(loc.gcc_location(), COMPOUND_EXPR,\n \t\t\t\t       TREE_TYPE(expr), build3(COND_EXPR,\n \t\t\t\t\t\t\t       void_type_node,\n@@ -6183,9 +6184,9 @@ Binary_expression::do_get_tree(Translate_context* context)\n \n \t  // __go_runtime_error(RUNTIME_ERROR_DIVISION_BY_ZERO), 0\n \t  int errcode = RUNTIME_ERROR_DIVISION_BY_ZERO;\n+\t  Expression* crash = gogo->runtime_error(errcode, this->location());\n \t  tree panic = fold_build2_loc(gccloc, COMPOUND_EXPR, TREE_TYPE(ret),\n-\t\t\t\t       gogo->runtime_error(errcode,\n-\t\t\t\t\t\t\t   this->location()),\n+\t\t\t\t       crash->get_tree(context),\n \t\t\t\t       fold_convert_loc(gccloc, TREE_TYPE(ret),\n \t\t\t\t\t\t\tinteger_zero_node));\n \n@@ -6975,8 +6976,9 @@ Bound_method_expression::do_get_tree(Translate_context* context)\n   if (nil_check != NULL)\n     {\n       tree nil_check_tree = nil_check->get_tree(context);\n-      tree crash =\n+      Expression* crash_expr =\n \tcontext->gogo()->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE, loc);\n+      tree crash = crash_expr->get_tree(context);\n       if (ret_tree == error_mark_node\n \t  || nil_check_tree == error_mark_node\n \t  || crash == error_mark_node)\n@@ -10715,7 +10717,7 @@ Array_index_expression::do_get_tree(Translate_context* context)\n \t      : (this->end_ == NULL\n \t\t ? RUNTIME_ERROR_SLICE_INDEX_OUT_OF_BOUNDS\n \t\t : RUNTIME_ERROR_SLICE_SLICE_OUT_OF_BOUNDS));\n-  tree crash = gogo->runtime_error(code, loc);\n+  tree crash = gogo->runtime_error(code, loc)->get_tree(context);\n \n   if (this->end_ == NULL)\n     {\n@@ -11089,7 +11091,7 @@ String_index_expression::do_get_tree(Translate_context* context)\n   int code = (this->end_ == NULL\n \t      ? RUNTIME_ERROR_STRING_INDEX_OUT_OF_BOUNDS\n \t      : RUNTIME_ERROR_STRING_SLICE_OUT_OF_BOUNDS);\n-  tree crash = context->gogo()->runtime_error(code, loc);\n+  tree crash = context->gogo()->runtime_error(code, loc)->get_tree(context);\n \n   if (this->end_ == NULL)\n     {\n@@ -11879,8 +11881,9 @@ Interface_field_reference_expression::do_get_tree(Translate_context* context)\n \t\t\t\t\t\t    this->expr_,\n \t\t\t\t\t\t    Expression::make_nil(loc),\n \t\t\t\t\t\t    loc);\n-  tree crash = context->gogo()->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE,\n-\t\t\t\t\t      loc);\n+  Expression* crash_expr =\n+      context->gogo()->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE, loc);\n+  tree crash = crash_expr->get_tree(context);\n   if (closure_tree == error_mark_node\n       || nil_check_tree == error_mark_node\n       || crash == error_mark_node)"}, {"sha": "b04e660a92d6e738731f731179111abdbcabae0f", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "patch": "@@ -2252,30 +2252,6 @@ Gogo::call_builtin(tree* pdecl, Location location, const char* name,\n   return ret;\n }\n \n-// Build a call to the runtime error function.\n-\n-tree\n-Gogo::runtime_error(int code, Location location)\n-{\n-  Type* int32_type = Type::lookup_integer_type(\"int32\");\n-  tree int32_type_tree = type_to_tree(int32_type->get_backend(this));\n-\n-  static tree runtime_error_fndecl;\n-  tree ret = Gogo::call_builtin(&runtime_error_fndecl,\n-\t\t\t\tlocation,\n-\t\t\t\t\"__go_runtime_error\",\n-\t\t\t\t1,\n-\t\t\t\tvoid_type_node,\n-\t\t\t\tint32_type_tree,\n-\t\t\t\tbuild_int_cst(int32_type_tree, code));\n-  if (ret == error_mark_node)\n-    return error_mark_node;\n-  // The runtime error function panics and does not return.\n-  TREE_NOTHROW(runtime_error_fndecl) = 0;\n-  TREE_THIS_VOLATILE(runtime_error_fndecl) = 1;\n-  return ret;\n-}\n-\n // Return a tree for receiving a value of type TYPE_TREE on CHANNEL.\n // TYPE_DESCRIPTOR_TREE is the channel's type descriptor.  This does a\n // blocking receive and returns the value read from the channel."}, {"sha": "e46bf9c4193d078f11f206031aa5436de057bf91", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "patch": "@@ -3060,6 +3060,19 @@ Gogo::build_recover_thunks()\n   this->traverse(&build_recover_thunks);\n }\n \n+// Build a call to the runtime error function.\n+\n+Expression*\n+Gogo::runtime_error(int code, Location location)\n+{\n+  Type* int32_type = Type::lookup_integer_type(\"int32\");\n+  mpz_t val;\n+  mpz_init_set_ui(val, code);\n+  Expression* code_expr = Expression::make_integer(&val, int32_type, location);\n+  mpz_clear(val);\n+  return Runtime::make_call(Runtime::RUNTIME_ERROR, location, 1, code_expr);\n+}\n+\n // Look for named types to see whether we need to create an interface\n // method table.\n "}, {"sha": "a9a56815c178165f5f8b14bfbb0a0fa86c07452d", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=5aac5cb24bdf2c868e1f22d83afaef66e2f00d8d", "patch": "@@ -576,7 +576,7 @@ class Gogo\n \t       tree rettype, ...);\n \n   // Build a call to the runtime error function.\n-  tree\n+  Expression*\n   runtime_error(int code, Location);\n \n   // Build a builtin struct with a list of fields."}]}