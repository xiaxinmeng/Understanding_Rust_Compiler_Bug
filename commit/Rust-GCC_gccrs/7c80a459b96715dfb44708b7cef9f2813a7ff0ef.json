{"sha": "7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M4MGE0NTliOTY3MTVkZmI0NDcwOGI3Y2VmOWYyODEzYTdmZjBlZg==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2016-06-17T08:27:35Z"}, "committer": {"name": "Szabolcs Nagy", "email": "nsz@gcc.gnu.org", "date": "2016-06-17T08:27:35Z"}, "message": "[AArch64] Handle iterator definitions with conditionals in geniterator.sh\n\ngcc/\n2016-06-17  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n\n\t* config/aarch64/geniterators.sh: Handle parenthesised conditions.\n\nFrom-SVN: r237548", "tree": {"sha": "3300901c8f9635bb50a019e3b2ddfedd5d5aef57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3300901c8f9635bb50a019e3b2ddfedd5d5aef57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c80a459b96715dfb44708b7cef9f2813a7ff0ef/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c4b97651a7aca23c164cbf51d271f5a69bb23e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4b97651a7aca23c164cbf51d271f5a69bb23e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c4b97651a7aca23c164cbf51d271f5a69bb23e9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "f6ca6f6163cec1ab39c944e3d3a9cd085ee340a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c80a459b96715dfb44708b7cef9f2813a7ff0ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c80a459b96715dfb44708b7cef9f2813a7ff0ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/aarch64/geniterators.sh: Handle parenthesised conditions.\n+\n 2016-06-16  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa.c (pa_output_pic_pcrel_sequence): New."}, {"sha": "8baa244009c27a904313903b60fe48779a72094d", "filename": "gcc/config/aarch64/geniterators.sh", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c80a459b96715dfb44708b7cef9f2813a7ff0ef/gcc%2Fconfig%2Faarch64%2Fgeniterators.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c80a459b96715dfb44708b7cef9f2813a7ff0ef/gcc%2Fconfig%2Faarch64%2Fgeniterators.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fgeniterators.sh?ref=7c80a459b96715dfb44708b7cef9f2813a7ff0ef", "patch": "@@ -23,10 +23,7 @@\n # BUILTIN_<ITERATOR> macros, which expand to VAR<N> Macros covering the\n # same set of modes as the iterator in iterators.md\n #\n-# Find the <ITERATOR> definitions (may span several lines), skip the ones\n-# which does not have a simple format because it contains characters we\n-# don't want to or can't handle (e.g P, PTR iterators change depending on\n-# Pmode and ptr_mode).\n+# Find the <ITERATOR> definitions (may span several lines).\n LC_ALL=C awk '\n BEGIN {\n \tprint \"/* -*- buffer-read-only: t -*- */\"\n@@ -49,12 +46,24 @@ iterdef {\n \tsub(/.*\\(define_mode_iterator/, \"\", s)\n }\n \n-iterdef && s ~ /\\)/ {\n+iterdef {\n+\t# Count the parentheses, the iterator definition ends\n+\t# if there are more closing ones than opening ones.\n+\tnopen = gsub(/\\(/, \"(\", s)\n+\tnclose = gsub(/\\)/, \")\", s)\n+\tif (nopen >= nclose)\n+\t\tnext\n+\n \titerdef = 0\n \n \tgsub(/[ \\t]+/, \" \", s)\n-\tsub(/ *\\).*/, \"\", s)\n+\tsub(/ *\\)[^)]*$/, \"\", s)\n \tsub(/^ /, \"\", s)\n+\n+\t# Drop the conditions.\n+\tgsub(/ *\"[^\"]*\" *\\)/, \"\", s)\n+\tgsub(/\\( */, \"\", s)\n+\n \tif (s !~ /^[A-Za-z0-9_]+ \\[[A-Z0-9 ]*\\]$/)\n \t\tnext\n \tsub(/\\[ */, \"\", s)"}]}