{"sha": "7906dbe42433518f7adef2ca388d7edc0a7fd246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwNmRiZTQyNDMzNTE4ZjdhZGVmMmNhMzg4ZDdlZGMwYTdmZDI0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-19T09:21:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-19T09:21:07Z"}, "message": "re PR tree-optimization/57517 (internal compiler error: in eliminate_temp_copies, at tree-predcom.c:1913)\n\n2013-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/57517\n\t* tree-predcom.c (combinable_refs_p): Verify the combination\n\tis always executed when the refs are.\n\n\t* gfortran.fortran-torture/compile/pr57517.f90: New testcase.\n\t* gcc.dg/torture/pr57517.c: Likewise.\n\nFrom-SVN: r205010", "tree": {"sha": "701e6a088cef351b4a7274c7c7aa0195f16be89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701e6a088cef351b4a7274c7c7aa0195f16be89a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7906dbe42433518f7adef2ca388d7edc0a7fd246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7906dbe42433518f7adef2ca388d7edc0a7fd246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7906dbe42433518f7adef2ca388d7edc0a7fd246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7906dbe42433518f7adef2ca388d7edc0a7fd246/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64856e1e0befcc1d2d1245efbe34b3e1b016a8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64856e1e0befcc1d2d1245efbe34b3e1b016a8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64856e1e0befcc1d2d1245efbe34b3e1b016a8f0"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "65601e8c77584db6027f0105758c0a6f118b357b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7906dbe42433518f7adef2ca388d7edc0a7fd246", "patch": "@@ -1,3 +1,9 @@\n+2013-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57517\n+\t* tree-predcom.c (combinable_refs_p): Verify the combination\n+\tis always executed when the refs are.\n+\n 2013-11-19  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c: Include ssa-iterators.h"}, {"sha": "06e0bf551b829b844b17f3b835387cbe9288763f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7906dbe42433518f7adef2ca388d7edc0a7fd246", "patch": "@@ -1,3 +1,9 @@\n+2013-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/57517\n+\t* gfortran.fortran-torture/compile/pr57517.f90: New testcase.\n+\t* gcc.dg/torture/pr57517.c: Likewise.\n+\n 2013-11-19  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.target/i386/memcpy-3.c: New testcase."}, {"sha": "2422d8ee64ab39672903cf4ae41b6403ea525d2f", "filename": "gcc/testsuite/gcc.dg/torture/pr57517.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57517.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57517.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57517.c?ref=7906dbe42433518f7adef2ca388d7edc0a7fd246", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+int x[1024], y[1024], z[1024], w[1024];\n+void foo (void)\n+{\n+  int i;\n+  for (i = 1; i < 1024; ++i)\n+    {\n+      int a = x[i];\n+      int b = y[i];\n+      int c = x[i-1];\n+      int d = y[i-1];\n+      if (w[i])\n+\tz[i] = (a + b) + (c + d);\n+    }\n+}"}, {"sha": "f32698aa3a6772146fe074e9aba244b057f7bb6a", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr57517.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr57517.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr57517.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr57517.f90?ref=7906dbe42433518f7adef2ca388d7edc0a7fd246", "patch": "@@ -0,0 +1,13 @@\n+SUBROUTINE cal_helicity (uh, ph, phb, wavg, ims, ime, its, ite)\n+  INTEGER, INTENT( IN ) :: ims, ime, its, ite\n+  REAL, DIMENSION( ims:ime), INTENT( IN ) :: ph, phb, wavg\n+  REAL, DIMENSION( ims:ime), INTENT( INOUT ) :: uh\n+  INTEGER :: i\n+  REAL :: zu\n+  DO i = its, ite\n+    zu =  (ph(i ) + phb(i)) + (ph(i-1) + phb(i-1))\n+    IF (wavg(i) .GT. 0) THEN\n+      uh(i) = uh(i) + zu \n+    ENDIF\n+  END DO\n+END SUBROUTINE cal_helicity"}, {"sha": "a43d19b08a9f10fd0850527b0a383008109ea25a", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7906dbe42433518f7adef2ca388d7edc0a7fd246/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=7906dbe42433518f7adef2ca388d7edc0a7fd246", "patch": "@@ -2035,7 +2035,11 @@ combinable_refs_p (dref r1, dref r2,\n \n   stmt = find_common_use_stmt (&name1, &name2);\n \n-  if (!stmt)\n+  if (!stmt\n+      /* A simple post-dominance check - make sure the combination\n+         is executed under the same condition as the references.  */\n+      || (gimple_bb (stmt) != gimple_bb (r1->stmt)\n+\t  && gimple_bb (stmt) != gimple_bb (r2->stmt)))\n     return false;\n \n   acode = gimple_assign_rhs_code (stmt);"}]}