{"sha": "399a39c720380bb2c7403a572027e3fd889a8da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk5YTM5YzcyMDM4MGJiMmM3NDAzYTU3MjAyN2UzZmQ4ODlhOGRhNA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-09-24T08:39:35Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-24T08:39:35Z"}, "message": "re PR libfortran/23380 ([mingw32] cpu_time intrinsic malfunction)\n\n\tPR libfortran/23380\n\t* intrinsics/cpu_time.c (__cpu_time_1): Provide a MS Windows\n\tversion.\n\nFrom-SVN: r104598", "tree": {"sha": "fc7f442daf92d26a16b48078ac129f9ef8ddb4b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc7f442daf92d26a16b48078ac129f9ef8ddb4b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/399a39c720380bb2c7403a572027e3fd889a8da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/399a39c720380bb2c7403a572027e3fd889a8da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/399a39c720380bb2c7403a572027e3fd889a8da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/399a39c720380bb2c7403a572027e3fd889a8da4/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46919f9ce37de6d0c8779b8160300698b1e56591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46919f9ce37de6d0c8779b8160300698b1e56591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46919f9ce37de6d0c8779b8160300698b1e56591"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "760d40b84f4d941f8b46c50a365f77bca517e896", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/399a39c720380bb2c7403a572027e3fd889a8da4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/399a39c720380bb2c7403a572027e3fd889a8da4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=399a39c720380bb2c7403a572027e3fd889a8da4", "patch": "@@ -1,3 +1,9 @@\n+2005-09-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/23380\n+\t* intrinsics/cpu_time.c (__cpu_time_1): Provide a MS Windows\n+\tversion.\n+\n 2005-09-14  Jerry DeLisle  <jvdelisle@verizon.net\n \n \tPR fortran/21875 Internal Unit Array I/O, NIST"}, {"sha": "8469a4381aacf1711cbb75ac30204219a3c45eee", "filename": "libgfortran/intrinsics/cpu_time.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/399a39c720380bb2c7403a572027e3fd889a8da4/libgfortran%2Fintrinsics%2Fcpu_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/399a39c720380bb2c7403a572027e3fd889a8da4/libgfortran%2Fintrinsics%2Fcpu_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcpu_time.c?ref=399a39c720380bb2c7403a572027e3fd889a8da4", "patch": "@@ -88,6 +88,44 @@ static inline void __cpu_time_1 (long *, long *) ATTRIBUTE_ALWAYS_INLINE;\n /* Helper function for the actual implementation of the CPU_TIME\n    intrnsic.  Returns a CPU time in microseconds or -1 if no CPU time\n    could be computed.  */\n+\n+#ifdef __MINGW32__\n+\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+\n+static void\n+__cpu_time_1 (long *sec, long *usec)\n+{\n+  union {\n+    FILETIME ft;\n+    unsigned long long ulltime;\n+  } kernel_time,  user_time;\n+\n+  FILETIME unused1, unused2;\n+  unsigned long long total_time;\n+\n+  /* No support for Win9x.  The high order bit of the DWORD\n+     returned by GetVersion is 0 for NT and higher. */\n+  if (GetVersion () >= 0x80000000)\n+    {\n+      *sec = -1;\n+      *usec = 0;\n+      return;\n+    }\n+\n+  /* The FILETIME structs filled in by GetProcessTimes represent\n+     time in 100 nanosecond units. */\n+  GetProcessTimes (GetCurrentProcess (), &unused1, &unused2,\n+              \t   &kernel_time.ft, &user_time.ft);\n+      \n+  total_time = (kernel_time.ulltime + user_time.ulltime)/10; \n+  *sec = total_time / 1000000;\n+  *usec = total_time % 1000000;\n+}\n+\n+#else\n+\n static inline void\n __cpu_time_1 (long *sec, long *usec)\n {\n@@ -110,6 +148,8 @@ __cpu_time_1 (long *sec, long *usec)\n #endif  /* HAVE_GETRUSAGE */\n }\n \n+#endif\n+\n extern void cpu_time_4 (GFC_REAL_4 *);\n iexport_proto(cpu_time_4);\n "}]}