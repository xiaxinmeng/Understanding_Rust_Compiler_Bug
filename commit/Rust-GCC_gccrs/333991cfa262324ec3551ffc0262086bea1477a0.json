{"sha": "333991cfa262324ec3551ffc0262086bea1477a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzOTkxY2ZhMjYyMzI0ZWMzNTUxZmZjMDI2MjA4NmJlYTE0NzdhMA==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2003-06-14T03:08:12Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-06-14T03:08:12Z"}, "message": "unwind-c.c: Define NO_SIZE_OF_ENCODED_VALUE.\n\n\t* unwind-c.c: Define NO_SIZE_OF_ENCODED_VALUE.\n\t* unwind-pe.h (size_of_encoded_value): Do not define if\n\tNO_SIZE_OF_ENCODED_VALUE is defined.\n\nFrom-SVN: r67930", "tree": {"sha": "3e28188425621db2a935d519e1f97e1b41c1599f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e28188425621db2a935d519e1f97e1b41c1599f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333991cfa262324ec3551ffc0262086bea1477a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333991cfa262324ec3551ffc0262086bea1477a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333991cfa262324ec3551ffc0262086bea1477a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333991cfa262324ec3551ffc0262086bea1477a0/comments", "author": null, "committer": null, "parents": [{"sha": "9ad58e0979547afaf85fd0edaec5609e07b25ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad58e0979547afaf85fd0edaec5609e07b25ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad58e0979547afaf85fd0edaec5609e07b25ed3"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "d9b3523dfa3d6bbd1cce46037b0d1e77b64d62e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=333991cfa262324ec3551ffc0262086bea1477a0", "patch": "@@ -1,3 +1,9 @@\n+2003-06-13  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* unwind-c.c: Define NO_SIZE_OF_ENCODED_VALUE.\n+\t* unwind-pe.h (size_of_encoded_value): Do not define if\n+\tNO_SIZE_OF_ENCODED_VALUE is defined.\n+\n 2003-06-13  Roger Sayle  <roger@eyesopen.com>\n \n \t* expr.c (expand_expr <COMPLEX_CST>): Handle the case of"}, {"sha": "8f2f5c43fe05dc5088d5727abbc2e5c04303e8ff", "filename": "gcc/unwind-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2Funwind-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2Funwind-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-c.c?ref=333991cfa262324ec3551ffc0262086bea1477a0", "patch": "@@ -23,6 +23,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include \"unwind.h\"\n+#define NO_SIZE_OF_ENCODED_VALUE\n #include \"unwind-pe.h\"\n \n typedef struct"}, {"sha": "bfa455c4f32d0eec44a824fc33b423fc92f02b5b", "filename": "gcc/unwind-pe.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2Funwind-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333991cfa262324ec3551ffc0262086bea1477a0/gcc%2Funwind-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-pe.h?ref=333991cfa262324ec3551ffc0262086bea1477a0", "patch": "@@ -52,6 +52,8 @@\n #define DW_EH_PE_indirect\t0x80\n \f\n \n+#ifndef NO_SIZE_OF_ENCODED_VALUE\n+\n /* Given an encoding, return the number of bytes the format occupies.\n    This is only defined for fixed-size encodings, and so does not\n    include leb128.  */\n@@ -76,6 +78,8 @@ size_of_encoded_value (unsigned char encoding)\n   __gxx_abort ();\n }\n \n+#endif\n+\n #ifndef NO_BASE_OF_ENCODED_VALUE\n \n /* Given an encoding and an _Unwind_Context, return the base to which"}]}