{"sha": "6d747e63e05927dc8021c712e77344442996c321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ3NDdlNjNlMDU5MjdkYzgwMjFjNzEyZTc3MzQ0NDQyOTk2YzMyMQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-02-01T01:27:21Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-02-01T01:27:21Z"}, "message": "cp-demangle.c: Revert yesterday's change.\n\n2002-01-31  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* cp-demangle.c:  Revert yesterday's change.\n\nFrom-SVN: r49386", "tree": {"sha": "113e69e99405d4c2eaadecb6cf04cd96ee497189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113e69e99405d4c2eaadecb6cf04cd96ee497189"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d747e63e05927dc8021c712e77344442996c321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d747e63e05927dc8021c712e77344442996c321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d747e63e05927dc8021c712e77344442996c321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d747e63e05927dc8021c712e77344442996c321/comments", "author": null, "committer": null, "parents": [{"sha": "4a78d8641cda5c1b9b324056b6847fc2bb711f97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a78d8641cda5c1b9b324056b6847fc2bb711f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a78d8641cda5c1b9b324056b6847fc2bb711f97"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "51518879e4fb77afb2a83c11cad87a63e2942fcb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d747e63e05927dc8021c712e77344442996c321/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d747e63e05927dc8021c712e77344442996c321/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6d747e63e05927dc8021c712e77344442996c321", "patch": "@@ -1,3 +1,7 @@\n+2002-01-31  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* cp-demangle.c:  Revert yesterday's change.\n+\n 2002-01-31  Adam Megacz  <adam@xwt.org>\n \n \t* gcc/libiberty/configure.in: Treat mingw the same as cywin"}, {"sha": "457a09f4c19e4efd3344cb95751bc4300b277178", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d747e63e05927dc8021c712e77344442996c321/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d747e63e05927dc8021c712e77344442996c321/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=6d747e63e05927dc8021c712e77344442996c321", "patch": "@@ -938,8 +938,10 @@ static status_t demangle_discriminator\n   PARAMS ((demangling_t, int));\n static status_t cp_demangle\n   PARAMS ((const char *, dyn_string_t, int));\n+#ifdef IN_LIBGCC2\n static status_t cp_demangle_type\n   PARAMS ((const char*, dyn_string_t));\n+#endif\n \n /* When passed to demangle_bare_function_type, indicates that the\n    function's return type is not encoded before its parameter types.  */\n@@ -3531,13 +3533,14 @@ cp_demangle (name, result, style)\n    dyn_string_t.  On success, returns STATUS_OK.  On failiure, returns\n    an error message, and the contents of RESULT are unchanged.  */\n \n+#ifdef IN_LIBGCC2\n static status_t\n cp_demangle_type (type_name, result)\n      const char* type_name;\n      dyn_string_t result;\n {\n   status_t status;\n-  demangling_t dm = demangling_new (type_name, 0);\n+  demangling_t dm = demangling_new (type_name);\n   \n   if (dm == NULL)\n     return STATUS_ALLOCATION_FAILED;\n@@ -3568,7 +3571,6 @@ cp_demangle_type (type_name, result)\n   return status;\n }\n \n-#ifdef IN_LIBGCC2\n extern char *__cxa_demangle PARAMS ((const char *, char *, size_t *, int *));\n \n /* ia64 ABI-mandated entry point in the C++ runtime library for performing\n@@ -3691,15 +3693,14 @@ cplus_demangle_v3 (mangled)\n   dyn_string_t demangled;\n   status_t status;\n \n+  /* If this isn't a mangled name, don't pretend to demangle it.  */\n+  if (strncmp (mangled, \"_Z\", 2) != 0)\n+    return NULL;\n+\n   /* Create a dyn_string to hold the demangled name.  */\n   demangled = dyn_string_new (0);\n   /* Attempt the demangling.  */\n-  if (mangled[0] == '_' && mangled[1] == 'Z')\n-    /* Appears to be a function or variable name.  */\n-    status = cp_demangle (mangled, demangled, 0);\n-  else\n-    /* Try to demangle it as the name of a type.  */\n-    status = cp_demangle_type (mangled, demangled);\n+  status = cp_demangle ((char *) mangled, demangled, 0);\n \n   if (STATUS_NO_ERROR (status))\n     /* Demangling succeeded.  */"}]}