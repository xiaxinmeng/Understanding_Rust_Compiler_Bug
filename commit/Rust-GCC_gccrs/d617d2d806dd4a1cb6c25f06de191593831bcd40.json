{"sha": "d617d2d806dd4a1cb6c25f06de191593831bcd40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxN2QyZDgwNmRkNGExY2I2YzI1ZjA2ZGUxOTE1OTM4MzFiY2Q0MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-09-02T16:19:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-09-02T16:19:20Z"}, "message": "re PR middle-end/56382 (FAIL: gcc.c-torture/compile/pr55921.c  (internal compiler error))\n\n\tPR middle-end/56382\n\t* expr.c (emit_move_complex): Do not move complex FP values as parts if\n\tthe source or the destination is a single hard register.\n\nFrom-SVN: r202179", "tree": {"sha": "e039d2e13dc40305ec9caffe6a31b046d9e7c791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e039d2e13dc40305ec9caffe6a31b046d9e7c791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d617d2d806dd4a1cb6c25f06de191593831bcd40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d617d2d806dd4a1cb6c25f06de191593831bcd40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d617d2d806dd4a1cb6c25f06de191593831bcd40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d617d2d806dd4a1cb6c25f06de191593831bcd40/comments", "author": null, "committer": null, "parents": [{"sha": "49322b127ddcce7bfc01751a88b2bc83a1540367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49322b127ddcce7bfc01751a88b2bc83a1540367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49322b127ddcce7bfc01751a88b2bc83a1540367"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "918e667c02e9faedab6903c3432f99453c53ecb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d617d2d806dd4a1cb6c25f06de191593831bcd40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d617d2d806dd4a1cb6c25f06de191593831bcd40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d617d2d806dd4a1cb6c25f06de191593831bcd40", "patch": "@@ -1,3 +1,9 @@\n+2013-09-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/56382\n+\t* expr.c (emit_move_complex): Do not move complex FP values as parts if\n+\tthe source or the destination is a single hard register.\n+\n 2013-09-02  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/57511"}, {"sha": "167d4f5d5ce08d523091c4923bab244d9857de46", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d617d2d806dd4a1cb6c25f06de191593831bcd40/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d617d2d806dd4a1cb6c25f06de191593831bcd40/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d617d2d806dd4a1cb6c25f06de191593831bcd40", "patch": "@@ -3232,11 +3232,16 @@ emit_move_complex (enum machine_mode mode, rtx x, rtx y)\n   if (push_operand (x, mode))\n     return emit_move_complex_push (mode, x, y);\n \n-  /* See if we can coerce the target into moving both values at once.  */\n-\n-  /* Move floating point as parts.  */\n+  /* See if we can coerce the target into moving both values at once, except\n+     for floating point where we favor moving as parts if this is easy.  */\n   if (GET_MODE_CLASS (mode) == MODE_COMPLEX_FLOAT\n-      && optab_handler (mov_optab, GET_MODE_INNER (mode)) != CODE_FOR_nothing)\n+      && optab_handler (mov_optab, GET_MODE_INNER (mode)) != CODE_FOR_nothing\n+      && !(REG_P (x)\n+\t   && HARD_REGISTER_P (x)\n+\t   && hard_regno_nregs[REGNO(x)][mode] == 1)\n+      && !(REG_P (y)\n+\t   && HARD_REGISTER_P (y)\n+\t   && hard_regno_nregs[REGNO(y)][mode] == 1))\n     try_int = false;\n   /* Not possible if the values are inherently not adjacent.  */\n   else if (GET_CODE (x) == CONCAT || GET_CODE (y) == CONCAT)"}]}