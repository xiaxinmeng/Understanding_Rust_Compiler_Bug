{"sha": "5024c8bb463fe7bfd20972cff37e3c917001172e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyNGM4YmI0NjNmZTdiZmQyMDk3MmNmZjM3ZTNjOTE3MDAxMTcyZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-13T15:13:16Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-13T15:13:16Z"}, "message": "Come up with selftests for dbgcnt.\n\n2019-11-13  Martin Liska  <mliska@suse.cz>\n\n\t* dbgcnt.c (test_sorted_dbg_counters): New.\n\t(dbgcnt_c_tests): Likewise.\n\t* selftest-run-tests.c (selftest::run_tests): Likewise.\n\t* selftest.h (dbgcnt_c_tests): Likewise.\n\nFrom-SVN: r278144", "tree": {"sha": "dac28f0ad4fa2ca146efd545e350ce1b30137d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dac28f0ad4fa2ca146efd545e350ce1b30137d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5024c8bb463fe7bfd20972cff37e3c917001172e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5024c8bb463fe7bfd20972cff37e3c917001172e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5024c8bb463fe7bfd20972cff37e3c917001172e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5024c8bb463fe7bfd20972cff37e3c917001172e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c4fa8a8562d3788bb763ca5c8fb1563b8d4eb1a"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "fdc7805d5740e751256245bd0f3fc58dd7e70bc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5024c8bb463fe7bfd20972cff37e3c917001172e", "patch": "@@ -1,3 +1,10 @@\n+2019-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* dbgcnt.c (test_sorted_dbg_counters): New.\n+\t(dbgcnt_c_tests): Likewise.\n+\t* selftest-run-tests.c (selftest::run_tests): Likewise.\n+\t* selftest.h (dbgcnt_c_tests): Likewise.\n+\n 2019-11-13  Jan Hubicka  <hubicka@ucw.cz>\n \t    Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "c675c644007d8cf7549a4103a2c5fa1d2d0f275b", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=5024c8bb463fe7bfd20972cff37e3c917001172e", "patch": "@@ -24,6 +24,7 @@ See dbgcnt.def for usage information.  */\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n #include \"dumpfile.h\"\n+#include \"selftest.h\"\n \n #include \"dbgcnt.h\"\n \n@@ -245,3 +246,26 @@ dbg_cnt_list_all_counters (void)\n     }\n   printf (\"\\n\");\n }\n+\n+#if CHECKING_P\n+\n+namespace selftest {\n+\n+/* Selftests.  */\n+\n+static void\n+test_sorted_dbg_counters ()\n+{\n+  for (unsigned i = 0; i < debug_counter_number_of_counters - 1; i++)\n+    ASSERT_LT (strcmp (map[i].name, map[i + 1].name), 0);\n+}\n+\n+void\n+dbgcnt_c_tests ()\n+{\n+  test_sorted_dbg_counters ();\n+}\n+\n+} // namespace selftest\n+\n+#endif /* #if CHECKING_P */"}, {"sha": "a35452caf48027a4f475384e30d8e20926fc079f", "filename": "gcc/selftest-run-tests.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fselftest-run-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fselftest-run-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-run-tests.c?ref=5024c8bb463fe7bfd20972cff37e3c917001172e", "patch": "@@ -108,6 +108,7 @@ selftest::run_tests ()\n   store_merging_c_tests ();\n   predict_c_tests ();\n   simplify_rtx_c_tests ();\n+  dbgcnt_c_tests ();\n \n   /* Run any lang-specific selftests.  */\n   lang_hooks.run_lang_selftests ();"}, {"sha": "cc7212317c3047f0e18bf06773730fb93d342f69", "filename": "gcc/selftest.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5024c8bb463fe7bfd20972cff37e3c917001172e/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=5024c8bb463fe7bfd20972cff37e3c917001172e", "patch": "@@ -254,6 +254,7 @@ extern void vec_c_tests ();\n extern void vec_perm_indices_c_tests ();\n extern void wide_int_cc_tests ();\n extern void opt_proposer_c_tests ();\n+extern void dbgcnt_c_tests ();\n \n extern int num_passes;\n "}]}