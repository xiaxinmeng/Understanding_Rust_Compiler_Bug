{"sha": "55abf18a772c91bbb07d393df64ca88e573032b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhYmYxOGE3NzJjOTFiYmIwN2QzOTNkZjY0Y2E4OGU1NzMwMzJiMQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-13T14:34:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-13T14:34:06Z"}, "message": "pa.c: Avoid Using immediate zero for register zero.\n\n        * pa.c: Avoid Using immediate zero for register zero.\n        * pa.md: Likewise.\n\nFrom-SVN: r26409", "tree": {"sha": "f21ca1896a6423e8a767b4a61e64f05f25084ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21ca1896a6423e8a767b4a61e64f05f25084ebc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55abf18a772c91bbb07d393df64ca88e573032b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55abf18a772c91bbb07d393df64ca88e573032b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55abf18a772c91bbb07d393df64ca88e573032b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55abf18a772c91bbb07d393df64ca88e573032b1/comments", "author": null, "committer": null, "parents": [{"sha": "f72b27a5f67d7467792ab7ab52b2a361e1c9d5ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f72b27a5f67d7467792ab7ab52b2a361e1c9d5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f72b27a5f67d7467792ab7ab52b2a361e1c9d5ea"}], "stats": {"total": 136, "additions": 77, "deletions": 59}, "files": [{"sha": "fec9833062593a888b4a9058262c3cb3d96644e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55abf18a772c91bbb07d393df64ca88e573032b1", "patch": "@@ -20,6 +20,13 @@ Tue Apr 13 05:04:59 1999  Richard Earnshaw (rearnsha@arm.com)\n \n Tue Apr 13 02:11:11 1999  Jeffrey A Law  (law@cygnus.com)\n \n+        * pa.c: Avoid Using immediate zero for register zero.\n+        * pa.md: Likewise.\n+\n+        * pa.c (print_operand, case 'f'): New case for FP register or 0.0.\n+        (print_operand, case 'r'): Use %r0 for zero value.\n+        * pa.md (move patterns, fcmp patterns): Use new %f output arg.\n+\n         * pa.c: Use a register name, not a raw immediate in branch,\n \tcompare/clear, sub, subb, uaddcm and vshd instructions.\n \t* pa.md: Likewise."}, {"sha": "db26a8540e45ac2341b4b55d716da3a8c9d1c80d", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=55abf18a772c91bbb07d393df64ca88e573032b1", "patch": "@@ -1881,7 +1881,7 @@ output_fp_move_double (operands)\n     {\n       if (FP_REG_P (operands[1])\n \t  || operands[1] == CONST0_RTX (GET_MODE (operands[0])))\n-\toutput_asm_insn (\"fcpy,dbl %r1,%0\", operands);\n+\toutput_asm_insn (\"fcpy,dbl %f1,%0\", operands);\n       else\n \toutput_asm_insn (\"fldd%F1 %1,%0\", operands);\n     }\n@@ -3659,7 +3659,18 @@ print_operand (file, x, code)\n \t  || (x == CONST0_RTX (DFmode))\n \t  || (x == CONST0_RTX (SFmode)))\n \t{\n-\t  fputs (\"0\", file);\n+\t  fputs (\"%r0\", file);\n+\t  return;\n+\t}\n+      else\n+\tbreak;\n+    case 'f':\n+      /* A register or zero (floating point). */\n+      if (x == const0_rtx\n+\t  || (x == CONST0_RTX (DFmode))\n+\t  || (x == CONST0_RTX (SFmode)))\n+\t{\n+\t  fputs (\"%fr0\", file);\n \t  return;\n \t}\n       else\n@@ -4715,9 +4726,9 @@ output_bb (operands, nullify, length, negated, insn, which)\n \t    else\n \t      strcat (buf, \">=\");\n \t    if (nullify && negated)\n-\t      strcat (buf, \" %0,%1,1,%%r0\\n\\tbn %3\");\n+\t      strcat (buf, \" %0,%1,1,%%r0\\n\\tb,n %3\");\n \t    else if (nullify && ! negated)\n-\t      strcat (buf, \" %0,%1,1,%%r0\\n\\tbn %2\");\n+\t      strcat (buf, \" %0,%1,1,%%r0\\n\\tb,n %2\");\n \t    else if (negated)\n \t      strcat (buf, \" %0,%1,1,%%r0\\n\\tb %3\");\n \t    else\n@@ -4853,9 +4864,9 @@ output_bvb (operands, nullify, length, negated, insn, which)\n \t    else\n \t      strcat (buf, \">=\");\n \t    if (nullify && negated)\n-\t      strcat (buf, \" %0,1,%%r0\\n\\tbn %3\");\n+\t      strcat (buf, \" %0,1,%%r0\\n\\tb,n %3\");\n \t    else if (nullify && ! negated)\n-\t      strcat (buf, \" %0,1,%%r0\\n\\tbn %2\");\n+\t      strcat (buf, \" %0,1,%%r0\\n\\tb,n %2\");\n \t    else if (negated)\n \t      strcat (buf, \" %0,1,%%r0\\n\\tb %3\");\n \t    else\n@@ -5226,7 +5237,7 @@ output_millicode_call (insn, call_dest)\n   xoperands[0] = call_dest;\n   xoperands[1] = XEXP (PATTERN (NEXT_INSN (insn)), 1);\n   if (! VAL_14_BITS_P (distance))\n-    output_asm_insn (\"bl %0,%%r31\\n\\tnop\\n\\tbl,n %1,%%r0\", xoperands);\n+    output_asm_insn (\"bl %0,%%r31\\n\\tnop\\n\\tb,n %1\", xoperands);\n   else\n     {\n       xoperands[3] = gen_label_rtx ();\n@@ -5475,7 +5486,7 @@ output_call (insn, call_dest)\n   xoperands[0] = call_dest;\n   xoperands[1] = XEXP (PATTERN (NEXT_INSN (insn)), 1);\n   if (! VAL_14_BITS_P (distance))\n-    output_asm_insn (\"bl %0,%%r2\\n\\tnop\\n\\tbl,n %1,%%r0\", xoperands);\n+    output_asm_insn (\"bl %0,%%r2\\n\\tnop\\n\\tb,n %1\", xoperands);\n   else\n     {\n       xoperands[3] = gen_label_rtx ();"}, {"sha": "c955d9c132e4c80602a4bb0a4cd0eb637958b52f", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55abf18a772c91bbb07d393df64ca88e573032b1/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=55abf18a772c91bbb07d393df64ca88e573032b1", "patch": "@@ -453,7 +453,7 @@\n \t\t\t     [(match_operand:SF 0 \"reg_or_0_operand\" \"fG\")\n \t\t\t      (match_operand:SF 1 \"reg_or_0_operand\" \"fG\")]))]\n   \"! TARGET_SOFT_FLOAT\"\n-  \"fcmp,sgl,%Y2 %r0,%r1\"\n+  \"fcmp,sgl,%Y2 %f0,%f1\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"fpcc\")])\n \n@@ -463,7 +463,7 @@\n \t\t\t     [(match_operand:DF 0 \"reg_or_0_operand\" \"fG\")\n \t\t\t      (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")]))]\n   \"! TARGET_SOFT_FLOAT\"\n-  \"fcmp,dbl,%Y2 %r0,%r1\"\n+  \"fcmp,dbl,%Y2 %f0,%f1\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"fpcc\")])\n \n@@ -629,7 +629,7 @@\n \t\t\t\t   [(match_operand:SI 4 \"register_operand\" \"r\")\n \t\t\t\t    (match_operand:SI 5 \"arith11_operand\" \"rI\")])))]\n   \"\"\n-  \"com%I2clr,%S3 %2,%1,0\\;com%I5clr,%B6 %5,%4,%0\\;ldi 1,%0\"\n+  \"com%I2clr,%S3 %2,%1,%%r0\\;com%I5clr,%B6 %5,%4,%0\\;ldi 1,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"12\")])\n \n@@ -657,7 +657,7 @@\n \t\t\t (match_operand:SI 3 \"arith11_operand\" \"rI\"))\n \t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"sub%I3 %3,%2,0\\;addc 0,%1,%0\"\n+  \"sub%I3 %3,%2,%%r0\\;addc %%r0,%1,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -669,7 +669,7 @@\n \t\t\t (match_operand:SI 3 \"register_operand\" \"r\"))\n \t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"sub %2,%3,0\\;addc 0,%1,%0\"\n+  \"sub %2,%3,%%r0\\;addc %%r0,%1,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -682,7 +682,7 @@\n \t\t\t (match_operand:SI 3 \"int11_operand\" \"I\"))\n \t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"addi %k3,%2,0\\;addc 0,%1,%0\"\n+  \"addi %k3,%2,%%r0\\;addc %%r0,%1,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -694,8 +694,8 @@\n \t\t (match_operand:SI 1 \"register_operand\" \"0,?r\")))]\n   \"\"\n   \"@\n-   com%I3clr,%B4 %3,%2,0\\;addi 1,%0,%0\n-   com%I3clr,%B4 %3,%2,0\\;addi,tr 1,%1,%0\\;copy %1,%0\"\n+   com%I3clr,%B4 %3,%2,%%r0\\;addi 1,%0,%0\n+   com%I3clr,%B4 %3,%2,%%r0\\;addi,tr 1,%1,%0\\;copy %1,%0\"\n   [(set_attr \"type\" \"binary,binary\")\n    (set_attr \"length\" \"8,12\")])\n \n@@ -705,7 +705,7 @@\n \t\t  (gtu:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (match_operand:SI 3 \"arith11_operand\" \"rI\"))))]\n   \"\"\n-  \"sub%I3 %3,%2,0\\;subb %1,0,%0\"\n+  \"sub%I3 %3,%2,%%r0\\;subb %1,0,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -716,7 +716,7 @@\n \t\t\t\t    (match_operand:SI 3 \"arith11_operand\" \"rI\")))\n \t\t  (match_operand:SI 4 \"register_operand\" \"r\")))]\n   \"\"\n-  \"sub%I3 %3,%2,0\\;subb %1,%4,%0\"\n+  \"sub%I3 %3,%2,%%r0\\;subb %1,%4,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -728,7 +728,7 @@\n \t\t  (ltu:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n-  \"sub %2,%3,0\\;subb %1,0,%0\"\n+  \"sub %2,%3,%%r0\\;subb %1,0,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -739,7 +739,7 @@\n \t\t\t\t    (match_operand:SI 3 \"register_operand\" \"r\")))\n \t\t  (match_operand:SI 4 \"register_operand\" \"r\")))]\n   \"\"\n-  \"sub %2,%3,0\\;subb %1,%4,%0\"\n+  \"sub %2,%3,%%r0\\;subb %1,%4,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -752,7 +752,7 @@\n \t\t  (leu:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (match_operand:SI 3 \"int11_operand\" \"I\"))))]\n   \"\"\n-  \"addi %k3,%2,0\\;subb %1,0,%0\"\n+  \"addi %k3,%2,%%r0\\;subb %1,0,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -763,7 +763,7 @@\n \t\t\t\t    (match_operand:SI 3 \"int11_operand\" \"I\")))\n \t\t  (match_operand:SI 4 \"register_operand\" \"r\")))]\n   \"\"\n-  \"addi %k3,%2,0\\;subb %1,%4,%0\"\n+  \"addi %k3,%2,%%r0\\;subb %1,%4,%0\"\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"8\")])\n \n@@ -775,8 +775,8 @@\n \t\t      (match_operand:SI 3 \"arith11_operand\" \"rI,rI\")])))]\n   \"\"\n   \"@\n-   com%I3clr,%B4 %3,%2,0\\;addi -1,%0,%0\n-   com%I3clr,%B4 %3,%2,0\\;addi,tr -1,%1,%0\\;copy %1,%0\"\n+   com%I3clr,%B4 %3,%2,%%r0\\;addi -1,%0,%0\n+   com%I3clr,%B4 %3,%2,%%r0\\;addi,tr -1,%1,%0\\;copy %1,%0\"\n   [(set_attr \"type\" \"binary,binary\")\n    (set_attr \"length\" \"8,12\")])\n \n@@ -789,8 +789,8 @@\n \t\t (match_operand:SI 2 \"arith11_operand\" \"r,I,M\")))]\n   \"\"\n   \"@\n-  comclr,> %2,%0,0\\;copy %2,%0\n-  comiclr,> %2,%0,0\\;ldi %2,%0\n+  comclr,> %2,%0,%%r0\\;copy %2,%0\n+  comiclr,> %2,%0,%%r0\\;ldi %2,%0\n   comclr,> %1,%2,%0\\;copy %1,%0\"\n [(set_attr \"type\" \"multi,multi,multi\")\n  (set_attr \"length\" \"8,8,8\")])\n@@ -801,8 +801,8 @@\n \t\t (match_operand:SI 2 \"arith11_operand\" \"r,I\")))]\n   \"\"\n   \"@\n-  comclr,>> %2,%0,0\\;copy %2,%0\n-  comiclr,>> %2,%0,0\\;ldi %2,%0\"\n+  comclr,>> %2,%0,%%r0\\;copy %2,%0\n+  comiclr,>> %2,%0,%%r0\\;ldi %2,%0\"\n [(set_attr \"type\" \"multi,multi\")\n  (set_attr \"length\" \"8,8\")])\n \n@@ -812,8 +812,8 @@\n \t\t (match_operand:SI 2 \"arith11_operand\" \"r,I,M\")))]\n   \"\"\n   \"@\n-  comclr,< %2,%0,0\\;copy %2,%0\n-  comiclr,< %2,%0,0\\;ldi %2,%0\n+  comclr,< %2,%0,%%r0\\;copy %2,%0\n+  comiclr,< %2,%0,%%r0\\;ldi %2,%0\n   comclr,< %1,%2,%0\\;copy %1,%0\"\n [(set_attr \"type\" \"multi,multi,multi\")\n  (set_attr \"length\" \"8,8,8\")])\n@@ -824,16 +824,16 @@\n \t\t (match_operand:SI 2 \"arith11_operand\" \"r,I\")))]\n   \"\"\n   \"@\n-  comclr,<< %2,%0,0\\;copy %2,%0\n-  comiclr,<< %2,%0,0\\;ldi %2,%0\"\n+  comclr,<< %2,%0,%%r0\\;copy %2,%0\n+  comiclr,<< %2,%0,%%r0\\;ldi %2,%0\"\n [(set_attr \"type\" \"multi,multi\")\n  (set_attr \"length\" \"8,8\")])\n \n (define_insn \"abssi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(abs:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"or,>= %%r0,%1,%0\\;subi 0,%0,%0\"\n+  \"or,>= %%r0,%1,%0\\;subi %%r0,%0,%0\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"8\")])\n \n@@ -874,7 +874,7 @@\n \t (const_int 0)))]\n   \"\"\n   \"@\n-   com%I4clr,%S5 %4,%3,0\\;ldi 0,%0\n+   com%I4clr,%S5 %4,%3,%%r0\\;ldi 0,%0\n    com%I4clr,%B5 %4,%3,%0\\;copy %1,%0\n    com%I4clr,%B5 %4,%3,%0\\;ldi %1,%0\n    com%I4clr,%B5 %4,%3,%0\\;ldil L'%1,%0\n@@ -892,14 +892,14 @@\n \t (match_operand:SI 2 \"reg_or_cint_move_operand\" \"r,J,N,K,0,0,0,0\")))]\n   \"\"\n   \"@\n-   com%I4clr,%S5 %4,%3,0\\;copy %2,%0\n-   com%I4clr,%S5 %4,%3,0\\;ldi %2,%0\n-   com%I4clr,%S5 %4,%3,0\\;ldil L'%2,%0\n-   com%I4clr,%S5 %4,%3,0\\;zdepi %Z2,%0\n-   com%I4clr,%B5 %4,%3,0\\;copy %1,%0\n-   com%I4clr,%B5 %4,%3,0\\;ldi %1,%0\n-   com%I4clr,%B5 %4,%3,0\\;ldil L'%1,%0\n-   com%I4clr,%B5 %4,%3,0\\;zdepi %Z1,%0\"\n+   com%I4clr,%S5 %4,%3,%%r0\\;copy %2,%0\n+   com%I4clr,%S5 %4,%3,%%r0\\;ldi %2,%0\n+   com%I4clr,%S5 %4,%3,%%r0\\;ldil L'%2,%0\n+   com%I4clr,%S5 %4,%3,%%r0\\;zdepi %Z2,%0\n+   com%I4clr,%B5 %4,%3,%%r0\\;copy %1,%0\n+   com%I4clr,%B5 %4,%3,%%r0\\;ldi %1,%0\n+   com%I4clr,%B5 %4,%3,%%r0\\;ldil L'%1,%0\n+   com%I4clr,%B5 %4,%3,%%r0\\;zdepi %Z1,%0\"\n   [(set_attr \"type\" \"multi,multi,multi,nullshift,multi,multi,multi,nullshift\")\n    (set_attr \"length\" \"8,8,8,8,8,8,8,8\")])\n \n@@ -1317,9 +1317,9 @@\n   \"*\n {\n   if (INSN_ANNULLED_BRANCH_P (insn))\n-    return \\\"ftest\\;bl,n %0,0\\\";\n+    return \\\"ftest\\;b,n %0\\\";\n   else\n-    return \\\"ftest\\;bl%* %0,0\\\";\n+    return \\\"ftest\\;b%* %0\\\";\n }\"\n   [(set_attr \"type\" \"fbranch\")\n    (set_attr \"length\" \"8\")])\n@@ -1332,9 +1332,9 @@\n   \"*\n {\n   if (INSN_ANNULLED_BRANCH_P (insn))\n-    return \\\"ftest\\;add,tr 0,0,0\\;bl,n %0,0\\\";\n+    return \\\"ftest\\;add,tr %%r0,%%r0,%%r0\\;b,n %0\\\";\n   else\n-    return \\\"ftest\\;add,tr 0,0,0\\;bl%* %0,0\\\";\n+    return \\\"ftest\\;add,tr %%r0,%%r0,%%r0\\;b%* %0\\\";\n }\"\n   [(set_attr \"type\" \"fbranch\")\n    (set_attr \"length\" \"12\")])\n@@ -1411,7 +1411,7 @@\n    ldw%M1 %1,%0\n    stw%M0 %r1,%0\n    mtsar %r1\n-   fcpy,sgl %r1,%0\n+   fcpy,sgl %f1,%0\n    fldw%F1 %1,%0\n    fstw%F0 %1,%0\"\n   [(set_attr \"type\" \"move,move,move,shift,load,store,move,fpalu,fpload,fpstore\")\n@@ -1768,7 +1768,7 @@\n    ldh%M1 %1,%0\n    sth%M0 %r1,%0\n    mtsar %r1\n-   fcpy,sgl %r1,%0\"\n+   fcpy,sgl %f1,%0\"\n   [(set_attr \"type\" \"move,move,move,shift,load,store,move,fpalu\")\n    (set_attr \"pa_combine_type\" \"addmove\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4\")])\n@@ -1930,7 +1930,7 @@\n    ldb%M1 %1,%0\n    stb%M0 %r1,%0\n    mtsar %r1\n-   fcpy,sgl %r1,%0\"\n+   fcpy,sgl %f1,%0\"\n   [(set_attr \"type\" \"move,move,move,shift,load,store,move,fpalu\")\n    (set_attr \"pa_combine_type\" \"addmove\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4\")])\n@@ -2572,7 +2572,7 @@\n     || reg_or_0_operand (operands[1], SFmode))\n    && ! TARGET_SOFT_FLOAT\"\n   \"@\n-   fcpy,sgl %r1,%0\n+   fcpy,sgl %f1,%0\n    copy %r1,%0\n    fldw%F1 %1,%0\n    ldw%M1 %1,%0\n@@ -3600,15 +3600,15 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"! TARGET_SOFT_FLOAT\"\n-  \"fsub,dbl 0,%1,%0\"\n+  \"fsub,dbl %%fr0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"! TARGET_SOFT_FLOAT\"\n-  \"fsub,sgl 0,%1,%0\"\n+  \"fsub,sgl %%fr0,%1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n \n@@ -4036,12 +4036,12 @@\n   extern int optimize;\n \n   if (GET_MODE (insn) == SImode)\n-    return \\\"bl %l0,0%#\\\";\n+    return \\\"b %l0%#\\\";\n \n   /* An unconditional branch which can reach its target.  */\n   if (get_attr_length (insn) != 24\n       && get_attr_length (insn) != 16)\n-    return \\\"bl%* %l0,0\\\";\n+    return \\\"b%* %l0\\\";\n \n   /* An unconditional branch which can not reach its target.\n \n@@ -4157,7 +4157,7 @@\n \t\t\t\t(match_operand:SI 0 \"register_operand\" \"r\")))\n \t       (label_ref (match_operand 1 \"\" \"\"))))]\n   \"\"\n-  \"blr %0,0\\;nop\"\n+  \"blr %0,%%r0\\;nop\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"8\")])\n \n@@ -4276,7 +4276,7 @@\n \n   /* Long millicode call for portable runtime.  */\n   if (get_attr_length (insn) == 20)\n-    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n+    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr %%r0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n \n   /* If we're generating PIC code.  */\n   xoperands[0] = operands[0];\n@@ -4286,7 +4286,7 @@\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (xoperands[1]));\n   output_asm_insn (\\\"ldo R%%$$dyncall-%1(%%r1),%%r1\\\", xoperands);\n-  output_asm_insn (\\\"blr 0,%%r2\\\", xoperands);\n+  output_asm_insn (\\\"blr %%r0,%%r2\\\", xoperands);\n   output_asm_insn (\\\"bv,n %%r0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n   return \\\"\\\";\n }\"\n@@ -4436,7 +4436,7 @@\n \n   /* Long millicode call for portable runtime.  */\n   if (get_attr_length (insn) == 20)\n-    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n+    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr %%r0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n \n   /* If we're generating PIC code.  */\n   xoperands[0] = operands[1];\n@@ -4446,7 +4446,7 @@\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (xoperands[1]));\n   output_asm_insn (\\\"ldo R%%$$dyncall-%1(%%r1),%%r1\\\", xoperands);\n-  output_asm_insn (\\\"blr 0,%%r2\\\", xoperands);\n+  output_asm_insn (\\\"blr %%r0,%%r2\\\", xoperands);\n   output_asm_insn (\\\"bv,n %%r0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n   return \\\"\\\";\n }\""}]}