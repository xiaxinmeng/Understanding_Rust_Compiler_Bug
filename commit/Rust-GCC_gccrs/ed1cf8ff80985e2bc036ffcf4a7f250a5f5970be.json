{"sha": "ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQxY2Y4ZmY4MDk4NWUyYmMwMzZmZmNmNGE3ZjI1MGE1ZjU5NzBiZQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-10-17T03:59:43Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-10-17T03:59:43Z"}, "message": "sysv4.h (DBX_REGISTER_NUMBER): Move to rs6000.h.\n\n\t* config/rs6000/sysv4.h (DBX_REGISTER_NUMBER): Move to rs6000.h.\n\t(DWARF2_FRAME_REG_OUT): Likewise.\n\t* config/rs6000/rs6000.h (DBX_REGISTER_NUMBER): Move from sysv4.h.\n\t(DWARF2_FRAME_REG_OUT): Likewise.\n\nFrom-SVN: r117816", "tree": {"sha": "156a5b3fc5e284f59d25c61bc2934e71323920bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/156a5b3fc5e284f59d25c61bc2934e71323920bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb8549a1d765f1c8c741c39b9022fefbc09be0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8549a1d765f1c8c741c39b9022fefbc09be0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8549a1d765f1c8c741c39b9022fefbc09be0de"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "aeb3dfd1f76552dac35cfffa17508ca0f2f03db8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "patch": "@@ -1,3 +1,10 @@\n+2006-10-16  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/sysv4.h (DBX_REGISTER_NUMBER): Move to rs6000.h.\n+\t(DWARF2_FRAME_REG_OUT): Likewise.\n+\t* config/rs6000/rs6000.h (DBX_REGISTER_NUMBER): Move from sysv4.h.\n+\t(DWARF2_FRAME_REG_OUT): Likewise.\n+\n 2006-10-17  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_rtx_costs_1): Handle multiply-accumulate."}, {"sha": "1edb09703f65831a208943be3f785543e8b05b8c", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "patch": "@@ -612,9 +612,24 @@ extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n #define DWARF_REG_TO_UNWIND_COLUMN(r) \\\n   ((r) > 1200 ? ((r) - 1200 + FIRST_PSEUDO_REGISTER - 1) : (r))\n \n+/* Use standard DWARF numbering for DWARF debugging information.  */\n+#define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number (REGNO)\n+\n /* Use gcc hard register numbering for eh_frame.  */\n #define DWARF_FRAME_REGNUM(REGNO) (REGNO)\n \n+/* Map register numbers held in the call frame info that gcc has\n+   collected using DWARF_FRAME_REGNUM to those that should be output in\n+   .debug_frame and .eh_frame.  We continue to use gcc hard reg numbers\n+   for .eh_frame, but use the numbers mandated by the various ABIs for\n+   .debug_frame.  rs6000_emit_prologue has translated any combination of\n+   CR2, CR3, CR4 saves to a save of CR2.  The actual code emitted saves\n+   the whole of CR, so we map CR2_REGNO to the DWARF reg for CR.  */\n+#define DWARF2_FRAME_REG_OUT(REGNO, FOR_EH)\t\\\n+  ((FOR_EH) ? (REGNO)\t\t\t\t\\\n+   : (REGNO) == CR2_REGNO ? 64\t\t\t\\\n+   : DBX_REGISTER_NUMBER (REGNO))\n+\n /* 1 for registers that have pervasive standard uses\n    and are not available for the register allocator.\n "}, {"sha": "76c1d85cbf02a3bb65db6571a2eb751a7ab13ce3", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "patch": "@@ -535,20 +535,6 @@ extern int fixuplabelno;\n /* Historically we have also supported stabs debugging.  */\n #define DBX_DEBUGGING_INFO 1\n \n-#define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number (REGNO)\n-\n-/* Map register numbers held in the call frame info that gcc has\n-   collected using DWARF_FRAME_REGNUM to those that should be output in\n-   .debug_frame and .eh_frame.  We continue to use gcc hard reg numbers\n-   for .eh_frame, but use the numbers mandated by the various ABIs for\n-   .debug_frame.  rs6000_emit_prologue has translated any combination of\n-   CR2, CR3, CR4 saves to a save of CR2.  The actual code emitted saves\n-   the whole of CR, so we map CR2_REGNO to the DWARF reg for CR.  */\n-#define DWARF2_FRAME_REG_OUT(REGNO, FOR_EH)\t\\\n-  ((FOR_EH) ? (REGNO)\t\t\t\t\\\n-   : (REGNO) == CR2_REGNO ? 64\t\t\t\\\n-   : DBX_REGISTER_NUMBER (REGNO))\n-\n #define TARGET_ENCODE_SECTION_INFO  rs6000_elf_encode_section_info\n #define TARGET_IN_SMALL_DATA_P  rs6000_elf_in_small_data_p\n #define TARGET_SECTION_TYPE_FLAGS  rs6000_elf_section_type_flags"}]}