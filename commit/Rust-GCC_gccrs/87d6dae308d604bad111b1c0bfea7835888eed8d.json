{"sha": "87d6dae308d604bad111b1c0bfea7835888eed8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkNmRhZTMwOGQ2MDRiYWQxMTFiMWMwYmZlYTc4MzU4ODhlZWQ4ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-08-08T09:07:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-08-08T09:07:09Z"}, "message": "openmp: Avoid floating point comparison at the end of bb with -fnon-call-exceptions\n\nThe following testcase ICEs with -fexceptions -fnon-call-exceptions because\nin that mode floating point comparisons should not be done at the end of bb\nin GIMPLE_COND.  Fixed by forcing it into a bool SSA_NAME and comparing that against\nfalse.\n\n2020-08-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/96424\n\t* omp-expand.c: Include tree-eh.h.\n\t(expand_omp_for_init_vars): Handle -fexceptions -fnon-call-exceptions\n\tby forcing floating point comparison into a bool temporary.\n\n\t* c-c++-common/gomp/pr96424.c: New test.", "tree": {"sha": "f8720bf06846b88db70af1b92ce017cf640a5fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8720bf06846b88db70af1b92ce017cf640a5fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d6dae308d604bad111b1c0bfea7835888eed8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d6dae308d604bad111b1c0bfea7835888eed8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d6dae308d604bad111b1c0bfea7835888eed8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d6dae308d604bad111b1c0bfea7835888eed8d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c8507372f3e1c09df0bfe6449c126dee5075de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c8507372f3e1c09df0bfe6449c126dee5075de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c8507372f3e1c09df0bfe6449c126dee5075de"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "eb37b38e25d36cbe0f4cee7dfa6e1dda37143303", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d6dae308d604bad111b1c0bfea7835888eed8d/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d6dae308d604bad111b1c0bfea7835888eed8d/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=87d6dae308d604bad111b1c0bfea7835888eed8d", "patch": "@@ -58,6 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n+#include \"tree-eh.h\"\n \n /* OMP region information.  Every parallel and workshare\n    directive is enclosed between two markers, the OMP_* directive\n@@ -2553,10 +2554,23 @@ expand_omp_for_init_vars (struct omp_for_data *fd, gimple_stmt_iterator *gsi,\n \t      flag_rounding_math = save_flag_rounding_math;\n \t      t = force_gimple_operand_gsi (gsi, t, true, NULL_TREE, false,\n \t\t\t\t\t    GSI_CONTINUE_LINKING);\n-\t      cond_stmt\n-\t\t= gimple_build_cond (LT_EXPR, t,\n-\t\t\t\t     build_zero_cst (double_type_node),\n-\t\t\t\t     NULL_TREE, NULL_TREE);\n+\t      if (flag_exceptions\n+\t\t  && cfun->can_throw_non_call_exceptions\n+\t\t  && operation_could_trap_p (LT_EXPR, true, false, NULL_TREE))\n+\t\t{\n+\t\t  tree tem = fold_build2 (LT_EXPR, boolean_type_node, t,\n+\t\t\t\t\t  build_zero_cst (double_type_node));\n+\t\t  tem = force_gimple_operand_gsi (gsi, tem, true, NULL_TREE,\n+\t\t\t\t\t\t  false, GSI_CONTINUE_LINKING);\n+\t\t  cond_stmt = gimple_build_cond (NE_EXPR, tem,\n+\t\t\t\t\t\t boolean_false_node,\n+\t\t\t\t\t\t NULL_TREE, NULL_TREE);\n+\t\t}\n+\t      else\n+\t\tcond_stmt\n+\t\t  = gimple_build_cond (LT_EXPR, t,\n+\t\t\t\t       build_zero_cst (double_type_node),\n+\t\t\t\t       NULL_TREE, NULL_TREE);\n \t      gsi_insert_after (gsi, cond_stmt, GSI_CONTINUE_LINKING);\n \t      e = split_block (gsi_bb (*gsi), cond_stmt);\n \t      basic_block bb1 = e->src;"}, {"sha": "2a3dd007730072ce814764aad5c553c973dad88d", "filename": "gcc/testsuite/c-c++-common/gomp/pr96424.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d6dae308d604bad111b1c0bfea7835888eed8d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr96424.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d6dae308d604bad111b1c0bfea7835888eed8d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr96424.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr96424.c?ref=87d6dae308d604bad111b1c0bfea7835888eed8d", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/96424 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp -O0 -fexceptions -fnon-call-exceptions -fprofile-use -Wno-missing-profile\" } */\n+\n+void\n+foo (void)\n+{\n+  int i, j;\n+#pragma omp for collapse (2)\n+  for (i = 0; i < 10; ++i)\n+    for (j = 0; j <= i; ++j)\n+      ;\n+}\n+\n+void\n+bar (void)\n+{\n+  int i, j;\n+#pragma omp for collapse (2)\n+  for (i = 0; i < 10; ++i)\n+    for (j = 0; j < i; ++j)\n+      ;\n+}"}]}