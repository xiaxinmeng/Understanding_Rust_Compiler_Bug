{"sha": "df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY5YWYyYmI2YjNkOGZjNDBhYTU3OGVlNTI1MWM2Y2YwYzBkZWJlZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-18T21:18:23Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-18T21:18:23Z"}, "message": "expr.c (expand_expr_real_1): Don't request a value to expand_assignment.\n\n\t* expr.c (expand_expr_real_1) [MODIFY_EXPR]: Don't request a\n\tvalue to expand_assignment.\n\nFrom-SVN: r89245", "tree": {"sha": "20a54cb08930812f19fce5de2be556363df7d16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20a54cb08930812f19fce5de2be556363df7d16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef/comments", "author": null, "committer": null, "parents": [{"sha": "ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ac8efa95bb346e58e31e7df19b9862be8905e307", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "patch": "@@ -1,3 +1,8 @@\n+2004-10-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* expr.c (expand_expr_real_1) [MODIFY_EXPR]: Don't request a\n+\tvalue to expand_assignment.\n+\n 2004-10-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-cfg.c (cleanup_tree_cfg): Don't iterate on"}, {"sha": "358a634eb859a9adc0725f87c36ccd6f7d0d5cdc", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=df9af2bb6b3d8fc40aa578ee5251c6cf0c0debef", "patch": "@@ -8069,6 +8069,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \n \ttemp = 0;\n \n+\tgcc_assert (ignore);\n+\n \t/* Check for |= or &= of a bitfield of size one into another bitfield\n \t   of size 1.  In this case, (unless we need the result of the\n \t   assignment) we can do this more efficiently with a\n@@ -8077,8 +8079,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t   ??? At this point, we can't get a BIT_FIELD_REF here.  But if\n \t   things change so we do, this code should be enhanced to\n \t   support it.  */\n-\tif (ignore\n-\t    && TREE_CODE (lhs) == COMPONENT_REF\n+\tif (TREE_CODE (lhs) == COMPONENT_REF\n \t    && (TREE_CODE (rhs) == BIT_IOR_EXPR\n \t\t|| TREE_CODE (rhs) == BIT_AND_EXPR)\n \t    && TREE_OPERAND (rhs, 0) == lhs\n@@ -8101,7 +8102,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t    return const0_rtx;\n \t  }\n \n-\ttemp = expand_assignment (lhs, rhs, ! ignore);\n+\ttemp = expand_assignment (lhs, rhs, 0);\n \n \treturn temp;\n       }"}]}