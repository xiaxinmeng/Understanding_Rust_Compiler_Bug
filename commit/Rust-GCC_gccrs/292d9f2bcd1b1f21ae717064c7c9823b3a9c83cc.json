{"sha": "292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkyZDlmMmJjZDFiMWYyMWFlNzE3MDY0YzdjOTgyM2IzYTljODNjYw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-11-11T21:54:04Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-11-11T21:54:04Z"}, "message": "* gcc.c-torture/execute/20020227-1.x: Test passes also on x86_64.\n\nFrom-SVN: r73467", "tree": {"sha": "84ec88d624ab65f7352c674f933cc29c676f4acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ec88d624ab65f7352c674f933cc29c676f4acf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e65fcc09d4b6cf4119d433a59543185415137ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e65fcc09d4b6cf4119d433a59543185415137ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e65fcc09d4b6cf4119d433a59543185415137ec"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "a769adb1dff728b90b58a4763c4a979493c01a08", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.c-torture/execute/20020720-1.x: Test passes also on x86_64.\n \n+\t* gcc.c-torture/execute/20020227-1.x: Test passes also on x86_64.\n+\n 2003-11-10  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* ada/acats/run_all.sh: Add handling of unsupported (tasking) tests."}, {"sha": "4e7194792cd1d6b19946cfdefa6de10d9202da19", "filename": "gcc/testsuite/gcc.c-torture/execute/20020227-1.x", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020227-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020227-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020227-1.x?ref=292d9f2bcd1b1f21ae717064c7c9823b3a9c83cc", "patch": "@@ -24,8 +24,8 @@ if { [istarget \"sparc64-*-*\"] || [istarget \"sparcv9-*-*\"] } {\n             { \"-O0\" \"-O1\" }\n         }\n     }\n-} elseif { [istarget \"powerpc64-*-*\"] } {\n-    # PowerPC-64 doesn't fail at any optimization level.\n+} elseif { [istarget \"powerpc64-*-*\"] || [istarget \"x86_64-*-*\"] } {\n+    # PowerPC-64 and x86_64 do not fail at any optimization level.\n } elseif { [istarget \"*64*-*-*\"] || [istarget \"alpha*-*-*\"]\n         || [istarget \"mmix-*-*\"] || [istarget \"mips*-*-irix6*\"] } {\n     # Other 64-bit targets fail at all optimization levels."}]}