{"sha": "f91aec98e2fe78e4200a22878968c9cdadb6187a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxYWVjOThlMmZlNzhlNDIwMGEyMjg3ODk2OGM5Y2RhZGI2MTg3YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-09-27T11:17:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-09-27T11:17:34Z"}, "message": "cse.c (count_reg_usage): Handle INT_LIST.\n\ngcc/\n\t* cse.c (count_reg_usage): Handle INT_LIST.\n\t* lra-eliminations.c (lra_eliminate_regs_1): Likewise.\n\t* reginfo.c (reg_scan_mark_refs): Likewise.\n\t* reload1.c (eliminate_regs_1): Likewise.\n\nFrom-SVN: r202969", "tree": {"sha": "6a62538ae942e34a91855dc0c6321be35b4fcfbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a62538ae942e34a91855dc0c6321be35b4fcfbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f91aec98e2fe78e4200a22878968c9cdadb6187a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91aec98e2fe78e4200a22878968c9cdadb6187a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91aec98e2fe78e4200a22878968c9cdadb6187a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91aec98e2fe78e4200a22878968c9cdadb6187a/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9195970f018e50bc115962d518b09c7133da649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9195970f018e50bc115962d518b09c7133da649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9195970f018e50bc115962d518b09c7133da649"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "87628df20d20b519d19846cf58c6117d3081ec64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f91aec98e2fe78e4200a22878968c9cdadb6187a", "patch": "@@ -1,3 +1,10 @@\n+2013-09-27  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* cse.c (count_reg_usage): Handle INT_LIST.\n+\t* lra-eliminations.c (lra_eliminate_regs_1): Likewise.\n+\t* reginfo.c (reg_scan_mark_refs): Likewise.\n+\t* reload1.c (eliminate_regs_1): Likewise.\n+\n 2013-09-27  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR middle-end/58547"}, {"sha": "37349705129eefcda526596916931c762a99bba6", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=f91aec98e2fe78e4200a22878968c9cdadb6187a", "patch": "@@ -6739,6 +6739,7 @@ count_reg_usage (rtx x, int *counts, rtx dest, int incr)\n       return;\n \n     case INSN_LIST:\n+    case INT_LIST:\n       gcc_unreachable ();\n \n     default:"}, {"sha": "0295fb0c5681a0a662f55902982296392f854b5c", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=f91aec98e2fe78e4200a22878968c9cdadb6187a", "patch": "@@ -471,6 +471,7 @@ lra_eliminate_regs_1 (rtx x, enum machine_mode mem_mode,\n       /* ... fall through ...  */\n \n     case INSN_LIST:\n+    case INT_LIST:\n       /* Now do eliminations in the rest of the chain.\tIf this was\n \t an EXPR_LIST, this might result in allocating more memory than is\n \t strictly needed, but it simplifies the code.  */"}, {"sha": "d385dc74c485436b4b8fec62855015a6b7025a99", "filename": "gcc/reginfo.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=f91aec98e2fe78e4200a22878968c9cdadb6187a", "patch": "@@ -1075,6 +1075,7 @@ reg_scan_mark_refs (rtx x, rtx insn)\n       break;\n \n     case INSN_LIST:\n+    case INT_LIST:\n       if (XEXP (x, 1))\n \treg_scan_mark_refs (XEXP (x, 1), insn);\n       break;"}, {"sha": "6cb0f57295a3eebd92b29b525954c8feaf3a89da", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91aec98e2fe78e4200a22878968c9cdadb6187a/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=f91aec98e2fe78e4200a22878968c9cdadb6187a", "patch": "@@ -2776,6 +2776,7 @@ eliminate_regs_1 (rtx x, enum machine_mode mem_mode, rtx insn,\n       /* ... fall through ...  */\n \n     case INSN_LIST:\n+    case INT_LIST:\n       /* Now do eliminations in the rest of the chain.  If this was\n \t an EXPR_LIST, this might result in allocating more memory than is\n \t strictly needed, but it simplifies the code.  */"}]}