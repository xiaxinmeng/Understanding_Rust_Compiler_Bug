{"sha": "6a76d2166ce933df0b010f83004cb10f5dde4fb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3NmQyMTY2Y2U5MzNkZjBiMDEwZjgzMDA0Y2IxMGY1ZGRlNGZiMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-28T09:34:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-28T09:34:54Z"}, "message": "Add new tests.\n\nFrom-SVN: r127853", "tree": {"sha": "efde7ef36a791c2af8482ec8c53de511b697ae5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efde7ef36a791c2af8482ec8c53de511b697ae5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a76d2166ce933df0b010f83004cb10f5dde4fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a76d2166ce933df0b010f83004cb10f5dde4fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a76d2166ce933df0b010f83004cb10f5dde4fb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a76d2166ce933df0b010f83004cb10f5dde4fb3/comments", "author": null, "committer": null, "parents": [{"sha": "b29ee02b34c3fe06df62dae38f75b0efcfe38704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29ee02b34c3fe06df62dae38f75b0efcfe38704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29ee02b34c3fe06df62dae38f75b0efcfe38704"}], "stats": {"total": 204, "additions": 204, "deletions": 0}, "files": [{"sha": "562bdf495d0c4dcba63be18116d4f0a340384db1", "filename": "gcc/testsuite/gnat.dg/prefix2.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.adb?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,31 @@\n+--  { dg-do compile }\n+\n+    package body prefix2 is\n+       procedure Positionne (Objet : in out Instance; X, Y :  Coordonnee) is\n+       begin\n+          Objet.X := X;\n+          Objet.Y := Y;\n+       end Positionne;\n+       function RetourneX (Objet : in Instance) return Coordonnee is\n+       begin\n+          return Objet.X;\n+       end RetourneX;\n+       function RetourneY (Objet : in Instance) return Coordonnee is\n+       begin\n+          return Objet.Y;\n+       end RetourneY;\n+       procedure Affiche (Objet : in Class; EstVisible : Boolean) is \n+       begin\n+          if EstVisible then\n+             Objet.Allume;\n+          else\n+             Objet.Eteins;\n+          end if;\n+       end Affiche;\n+       procedure Deplace (Objet : in out Class; DX, DY : Coordonnee) is\n+       begin\n+          Objet.Affiche (False);  -- erreur\n+          Objet.Positionne (Objet.X + DX, Objet.Y + DY);\n+          Objet.Affiche (True);   -- erreur\n+       end Deplace;\n+    end prefix2;"}, {"sha": "5e7b2b27b6bae0bc4a648df30ca7f33838229b13", "filename": "gcc/testsuite/gnat.dg/prefix2.ads", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fprefix2.ads?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,17 @@\n+\n+    package prefix2 is\n+       type Coordonnee is range -100 .. 100;\n+       type Instance is abstract tagged private;\n+       subtype Class is Instance'Class;\n+       procedure Positionne (Objet : in out Instance; X, Y :  Coordonnee);\n+       function RetourneX (Objet : in Instance) return Coordonnee;\n+       function RetourneY (Objet : in Instance) return Coordonnee;\n+       procedure Allume (Objet : in Instance) is abstract;\n+       procedure Eteins (Objet : in Instance) is abstract;\n+       procedure Affiche (Objet : in Class; EstVisible : Boolean);\n+       procedure Deplace (Objet : in out Class; DX, DY : Coordonnee);\n+    private\n+       type Instance is abstract tagged record\n+          X, Y : Coordonnee := 0;\n+       end record;\n+    end;"}, {"sha": "788f795889f1136024fd1302ea24fe95f0a0d933", "filename": "gcc/testsuite/gnat.dg/remote_type.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.adb?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,26 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n+package body remote_type is\n+   procedure Append\n+     (Container : in out List;\n+      New_Item  : in     Element_Type)\n+   is\n+   begin\n+      null;\n+   end Append;\n+   procedure Read\n+     (S : access Root_Stream_Type'Class;\n+      L : out List)\n+   is\n+   begin\n+      null;\n+   end Read;\n+   procedure Write\n+     (S : access Root_Stream_Type'Class;\n+      L : in List)\n+   is\n+   begin\n+      null;\n+   end Write;\n+end remote_type;"}, {"sha": "79c27106b78180ed68f142a9478f5e0564167361", "filename": "gcc/testsuite/gnat.dg/remote_type.ads", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fremote_type.ads?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,24 @@\n+with Ada.Streams;\n+generic\n+   type Element_Type is private;\n+package remote_type is\n+   pragma Remote_Types;\n+   type List is private;\n+   procedure Append\n+     (Container : in out List;\n+      New_Item  : in     Element_Type);\n+private\n+   use Ada.Streams;\n+   type List_Record is record\n+      A : Boolean;\n+   end record;\n+   type List is access List_Record;\n+   procedure Read\n+     (S : access Root_Stream_Type'Class;\n+      L : out List);\n+   for List'Read use Read;\n+   procedure Write\n+     (S : access Root_Stream_Type'Class;\n+      L : in List);\n+   for List'Write use Write;\n+end remote_type;"}, {"sha": "88d7e9876888d0c6294f4224b2508868fe03485b", "filename": "gcc/testsuite/gnat.dg/specs/ai_116.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fai_116.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fai_116.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fai_116.ads?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,23 @@\n+--  { dg-do compile }\n+\n+with Ada.Finalization; use Ada;\n+package ai_116 is\n+   pragma Preelaborate;\n+   type Buffer_Type is limited interface;\n+\n+   type Handle is new Finalization.Limited_Controlled and Buffer_Type with\n+     private;\n+   pragma Preelaborable_Initialization(Handle);\n+\n+   type Ptr is access all String;\n+   Null_Handle : constant Handle;\n+\n+private\n+   type Handle is new Finalization.Limited_Controlled and Buffer_Type with\n+      record\n+         Data     : Ptr  := null;\n+      end record;\n+\n+   Null_Handle : constant Handle :=\n+     (Finalization.Limited_Controlled with Data => null);\n+end ai_116;"}, {"sha": "f339e5a43b351824335e33153db1c870661acde4", "filename": "gcc/testsuite/gnat.dg/specs/private_with.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate_with.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate_with.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate_with.ads?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,16 @@\n+--  { dg-do compile }\n+\n+private with Ada.Containers.Ordered_Maps;\n+with Ada.Containers.Ordered_Sets;\n+with Ada.Unchecked_Deallocation;\n+package private_with is\n+\n+   type String_Access is access String;\n+\n+   package Index_Sets is new Ada.Containers.Ordered_Sets\n+     (Element_Type => Positive);\n+\n+   procedure Free is new Ada.Unchecked_Deallocation\n+     (Object => String,\n+      Name   => String_Access);\n+end;"}, {"sha": "f2329cf88ec241f6ddfc6d0b116a7a1b9dfd8a6a", "filename": "gcc/testsuite/gnat.dg/specs/with_containers.ads", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fwith_containers.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fwith_containers.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fwith_containers.ads?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,27 @@\n+--  { dg-do compile }\n+\n+pragma Warnings (Off);\n+with Ada.Containers.Doubly_Linked_Lists;\n+with Ada.Containers.Hashed_Maps;\n+with Ada.Containers.Hashed_Sets;\n+with Ada.Containers.Indefinite_Doubly_Linked_Lists;\n+with Ada.Containers.Indefinite_Hashed_Maps;\n+with Ada.Containers.Indefinite_Hashed_Sets;\n+with Ada.Containers.Indefinite_Ordered_Maps;\n+with Ada.Containers.Indefinite_Ordered_Multisets;\n+with Ada.Containers.Indefinite_Ordered_Sets;\n+with Ada.Containers.Indefinite_Vectors;\n+with Ada.Containers.Ordered_Maps;\n+with Ada.Containers.Ordered_Multisets;\n+with Ada.Containers.Ordered_Sets;\n+with Ada.Containers.Prime_Numbers;\n+with Ada.Containers.Red_Black_Trees.Generic_Keys;\n+with Ada.Containers.Red_Black_Trees.Generic_Operations;\n+with Ada.Containers.Red_Black_Trees.Generic_Set_Operations;\n+with Ada.Containers.Red_Black_Trees;\n+with Ada.Containers.Restricted_Doubly_Linked_Lists;\n+with Ada.Containers.Vectors;\n+        \n+package With_Containers is\n+   pragma Remote_Types; \n+end With_Containers;"}, {"sha": "64155bfd81aedf3097a5340a487675d40b5ec172", "filename": "gcc/testsuite/gnat.dg/test_table1.adb", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_table1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a76d2166ce933df0b010f83004cb10f5dde4fb3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_table1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_table1.adb?ref=6a76d2166ce933df0b010f83004cb10f5dde4fb3", "patch": "@@ -0,0 +1,40 @@\n+--  { dg-do run }\n+\n+with GNAT.Table;\n+with Ada.Text_IO; use Ada.Text_IO;\n+ \n+procedure test_table1 is\n+   type Rec is record\n+     A, B, C, D, E : Integer := 0;\n+     F, G, H, I, J : Integer := 1;\n+     K, L, M, N, O : Integer := 2;\n+   end record;\n+   \n+   R : Rec;\n+        \n+   package Tab is new GNAT.Table (Rec, Positive, 1, 4, 30);\n+        \n+   Last : Natural;\n+        \n+begin   \n+   R.O := 3;\n+        \n+   Tab.Append (R);\n+\n+   for J in 1 .. 1_000_000 loop\n+      Last := Tab.Last;\n+      begin\n+         Tab.Append (Tab.Table (Last));\n+      exception\n+         when others =>\n+             Put_Line (\"exception raise for J =\" & J'Img);\n+             raise;\n+      end;\n+\n+      if Tab.Table (Tab.Last) /= R then\n+         Put_Line (\"Last is not what is expected\");\n+         Put_Line (J'Img);\n+         return;\n+      end if;\n+   end loop;\n+end;"}]}