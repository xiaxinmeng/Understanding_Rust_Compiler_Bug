{"sha": "665acd1ef23f8d1429207fec05c4c0e232d0aa75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY1YWNkMWVmMjNmOGQxNDI5MjA3ZmVjMDVjNGMwZTIzMmQwYWE3NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-04-21T17:02:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-04-21T17:02:19Z"}, "message": "expmed.c (expand_mult_highpart_optab): Use narrower version of OP1 in two more places; remove unneeded force_reg\n\n\t* expmed.c (expand_mult_highpart_optab): Use narrower version of OP1\n\tin two more places; remove unneeded force_reg\n\nFrom-SVN: r80969", "tree": {"sha": "2c75dd3ba824a16844c1f27d411974966c382bea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c75dd3ba824a16844c1f27d411974966c382bea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/665acd1ef23f8d1429207fec05c4c0e232d0aa75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665acd1ef23f8d1429207fec05c4c0e232d0aa75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/665acd1ef23f8d1429207fec05c4c0e232d0aa75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665acd1ef23f8d1429207fec05c4c0e232d0aa75/comments", "author": null, "committer": null, "parents": [{"sha": "86a80fc3522cb14dd0b5a8f4913e8653111bbcc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a80fc3522cb14dd0b5a8f4913e8653111bbcc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a80fc3522cb14dd0b5a8f4913e8653111bbcc0"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "1e5ac10935c5a8c898fa6241bb97534741a9ceaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665acd1ef23f8d1429207fec05c4c0e232d0aa75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665acd1ef23f8d1429207fec05c4c0e232d0aa75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=665acd1ef23f8d1429207fec05c4c0e232d0aa75", "patch": "@@ -1,3 +1,8 @@\n+2004-04-21  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* expmed.c (expand_mult_highpart_optab): Use narrower version of OP1\n+\tin two more places; remove unneeded force_reg\n+\n 2004-04-21  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* config/rs6000/rs6000.c (symbol_ref_operand): Remove hack"}, {"sha": "3eb745465dad629676e5658334e51bc66b7ead09", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665acd1ef23f8d1429207fec05c4c0e232d0aa75/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665acd1ef23f8d1429207fec05c4c0e232d0aa75/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=665acd1ef23f8d1429207fec05c4c0e232d0aa75", "patch": "@@ -2883,6 +2883,7 @@ static rtx\n expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n \t\t\t    rtx target, int unsignedp, int max_cost)\n {\n+  rtx narrow_op1 = gen_int_mode (INTVAL (op1), mode);\n   enum machine_mode wider_mode;\n   optab moptab;\n   rtx tem;\n@@ -2896,8 +2897,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n   if (mul_highpart_cost[(int) mode] < max_cost)\n     {\n       moptab = unsignedp ? umul_highpart_optab : smul_highpart_optab;\n-      tem = expand_binop (mode, moptab, op0,\n-\t\t\t  gen_int_mode (INTVAL (op1), mode), target,\n+      tem = expand_binop (mode, moptab, op0, narrow_op1, target,\n \t\t\t  unsignedp, OPTAB_DIRECT);\n       if (tem)\n \treturn tem;\n@@ -2910,8 +2910,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n \t  < max_cost))\n     {\n       moptab = unsignedp ? smul_highpart_optab : umul_highpart_optab;\n-      tem = expand_binop (mode, moptab, op0,\n-\t\t\t  gen_int_mode (INTVAL (op1), mode), target,\n+      tem = expand_binop (mode, moptab, op0, narrow_op1, target,\n \t\t\t  unsignedp, OPTAB_DIRECT);\n       if (tem)\n \t/* We used the wrong signedness.  Adjust the result.  */\n@@ -2924,7 +2923,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n   if (moptab->handlers[(int) wider_mode].insn_code != CODE_FOR_nothing\n       && mul_widen_cost[(int) wider_mode] < max_cost)\n     {\n-      tem = expand_binop (wider_mode, moptab, op0, op1, 0,\n+      tem = expand_binop (wider_mode, moptab, op0, narrow_op1, 0,\n \t\t\t  unsignedp, OPTAB_WIDEN);\n       if (tem)\n \treturn extract_high_half (mode, tem);\n@@ -2949,8 +2948,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n       && (mul_widen_cost[(int) wider_mode]\n \t  + 2 * shift_cost[size-1] + 4 * add_cost < max_cost))\n     {\n-      rtx regop1 = force_reg (mode, op1);\n-      tem = expand_binop (wider_mode, moptab, op0, regop1,\n+      tem = expand_binop (wider_mode, moptab, op0, narrow_op1,\n \t\t\t  NULL_RTX, ! unsignedp, OPTAB_WIDEN);\n       if (tem != 0)\n \t{"}]}