{"sha": "78fe06c24507d3f70c80477816689dafc2c2c354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmZTA2YzI0NTA3ZDNmNzBjODA0Nzc4MTY2ODlkYWZjMmMyYzM1NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-03-12T15:43:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-03-12T15:43:52Z"}, "message": "call.c (convert_like_real): Add extra semantics to INNER parameter.\n\ncp:\n\t* call.c (convert_like_real): Add extra semantics to INNER\n\tparameter. Don't convert to temporary if a user conversion\n\tgives us an lvalue that we're about to bind to a reference.\n\tSet INNER to indicate pending reference binding on recursive\n\tcalls.\ntestsuite:\n\t* g++.old-deja/g++.other/ref4.C: New test.\n\nFrom-SVN: r40415", "tree": {"sha": "e9141241cb2c5fbfb50f590b2f67be25fb888ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9141241cb2c5fbfb50f590b2f67be25fb888ccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78fe06c24507d3f70c80477816689dafc2c2c354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fe06c24507d3f70c80477816689dafc2c2c354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78fe06c24507d3f70c80477816689dafc2c2c354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fe06c24507d3f70c80477816689dafc2c2c354/comments", "author": null, "committer": null, "parents": [{"sha": "99560e26f8eb8b58250d0793c928826a38f06928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99560e26f8eb8b58250d0793c928826a38f06928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99560e26f8eb8b58250d0793c928826a38f06928"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "46871a9c2279fd345fd634d568684ac892fad248", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=78fe06c24507d3f70c80477816689dafc2c2c354", "patch": "@@ -1,3 +1,11 @@\n+2001-03-12  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* call.c (convert_like_real): Add extra semantics to INNER\n+\tparameter. Don't convert to temporary if a user conversion\n+\tgives us an lvalue that we're about to bind to a reference.\n+\tSet INNER to indicate pending reference binding on recursive\n+\tcalls.\n+\n 2001-03-10  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cp/lex.c: Delete duplicate pending_lang_change."}, {"sha": "13827c9d1c48b6d896b19c6174b84454667870cc", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=78fe06c24507d3f70c80477816689dafc2c2c354", "patch": "@@ -3676,7 +3676,8 @@ enforce_access (basetype_path, decl)\n /* Perform the conversions in CONVS on the expression EXPR. \n    FN and ARGNUM are used for diagnostics.  ARGNUM is zero based, -1\n    indicates the `this' argument of a method.  INNER is non-zero when\n-   being called to continue a conversion chain. */\n+   being called to continue a conversion chain. It is negative when a\n+   reference binding will be applied, positive otherwise. */\n \n static tree\n convert_like_real (convs, expr, fn, argnum, inner)\n@@ -3755,7 +3756,8 @@ convert_like_real (convs, expr, fn, argnum, inner)\n \t   conversion, but is not considered during overload resolution.\n \n \t   If the target is a class, that means call a ctor.  */\n-\tif (IS_AGGR_TYPE (totype))\n+\tif (IS_AGGR_TYPE (totype)\n+\t    && (inner >= 0 || !real_lvalue_p (expr)))\n \t  {\n \t    savew = warningcount, savee = errorcount;\n \t    expr = build_new_method_call\n@@ -3804,7 +3806,8 @@ convert_like_real (convs, expr, fn, argnum, inner)\n       break;\n     };\n \n-  expr = convert_like_real (TREE_OPERAND (convs, 0), expr, fn, argnum, 1);\n+  expr = convert_like_real (TREE_OPERAND (convs, 0), expr, fn, argnum,\n+                            TREE_CODE (convs) == REF_BIND ? -1 : 1);\n   if (expr == error_mark_node)\n     return error_mark_node;\n "}, {"sha": "c86f7502246cd64b3af521c0b6c3f1ea1a3667a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78fe06c24507d3f70c80477816689dafc2c2c354", "patch": "@@ -1,3 +1,7 @@\n+2001-03-12  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/ref4.C: New test.\n+\n 2001-03-11  Nicola Pero <n.pero@mi.flashnet.it>\n \n \t* objc/execute/va_method.m: Added."}, {"sha": "c3535d0d3e034b3b83ba878ed6b39f7821de0905", "filename": "gcc/testsuite/g++.old-deja/g++.other/ref4.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78fe06c24507d3f70c80477816689dafc2c2c354/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fref4.C?ref=78fe06c24507d3f70c80477816689dafc2c2c354", "patch": "@@ -0,0 +1,28 @@\n+// Build don't link:\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 27 Feb 2001 <nathan@codesourcery.com>\n+\n+// Bug 2117. A conversion op to reference type created a temporary, even\n+// when bound to another reference.\n+\n+struct Abstract\n+{\n+  virtual void Foo () = 0;\n+};\n+\n+struct Proxy\n+{\n+  operator Abstract & ();\n+  Abstract &Convert ();\n+};\n+\n+void Baz (Abstract &);\n+\n+void Foo ()\n+{\n+  Proxy proxy;\n+  \n+  Baz (proxy);\n+  Baz (proxy.Convert ());\n+}"}]}