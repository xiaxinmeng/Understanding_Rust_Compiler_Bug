{"sha": "60dcf38a00c16f909d8a80177581bf493b2552ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkY2YzOGEwMGMxNmY5MDlkOGE4MDE3NzU4MWJmNDkzYjI1NTJjYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-06-13T18:43:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-06-13T18:43:25Z"}, "message": "re PR fortran/36518 (libgfortran: \"warning: format '%d' expects type 'int', but\")\n\n2008-06-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR libgfortran/36518\n        * configure.ac (AM_CFLAGS): Add -Werror.\n        * configure: Regenerate.\n        * m4/ifunction_logical.m4: Cast \"n\" to \"(int)\".\n        * generated/any_l16.c: Regenerate.\n        * generated/any_l2.c: Regenerate.\n        * generated/all_l1.c: Regenerate.\n        * generated/all_l2.c: Regenerate.\n        * generated/all_l16.c: Regenerate.\n        * generated/any_l4.c: Regenerate.\n        * generated/count_4_l.c: Regenerate.\n        * generated/count_8_l.c: Regenerate.\n        * generated/all_l4.c: Regenerate.\n        * generated/count_1_l.c: Regenerate.\n        * generated/count_16_l.c: Regenerate.\n        * generated/any_l8.c: Regenerate.\n        * generated/count_2_l.c: Regenerate.\n        * generated/any_l1.c: Regenerate.\n        * generated/all_l8.c: Regenerate.\n\nFrom-SVN: r136761", "tree": {"sha": "dc15be1534f191b5b0543eaa880a6d20b855519f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc15be1534f191b5b0543eaa880a6d20b855519f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60dcf38a00c16f909d8a80177581bf493b2552ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dcf38a00c16f909d8a80177581bf493b2552ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60dcf38a00c16f909d8a80177581bf493b2552ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dcf38a00c16f909d8a80177581bf493b2552ca/comments", "author": null, "committer": null, "parents": [{"sha": "357ad64f1cc374a7d63f0ac509d398a628cb56cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357ad64f1cc374a7d63f0ac509d398a628cb56cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357ad64f1cc374a7d63f0ac509d398a628cb56cc"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "2a3376efe20d9336c40c3e5ae4181e82921e086f", "filename": "libgfortran/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -3399,7 +3399,7 @@ if test \"x$GCC\" = \"xyes\"; then\n   AM_FCFLAGS=\"-I . -Wall -Werror -fimplicit-none -fno-repack-arrays -fno-underscoring\"\n   ## We like to use C99 routines when available.  This makes sure that\n   ## __STDC_VERSION__ is set such that libc includes make them available.\n-  AM_CFLAGS=\"-std=gnu99 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n+  AM_CFLAGS=\"-std=gnu99 -Werror -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n   ## Compile the following tests with the same system header contents\n   ## that we'll encounter when compiling our own source files.\n   CFLAGS=\"-std=gnu99 $CFLAGS\""}, {"sha": "4d01815bb9fb47a50162559e05ce63b936719af3", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -126,7 +126,7 @@ if test \"x$GCC\" = \"xyes\"; then\n   AM_FCFLAGS=\"-I . -Wall -Werror -fimplicit-none -fno-repack-arrays -fno-underscoring\"\n   ## We like to use C99 routines when available.  This makes sure that\n   ## __STDC_VERSION__ is set such that libc includes make them available.\n-  AM_CFLAGS=\"-std=gnu99 -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n+  AM_CFLAGS=\"-std=gnu99 -Werror -Wall -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wextra -Wwrite-strings\"\n   ## Compile the following tests with the same system header contents\n   ## that we'll encounter when compiling our own source files.\n   CFLAGS=\"-std=gnu99 $CFLAGS\""}, {"sha": "e8577dcf33965bc67af339496f4111f9670211b1", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ALL intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "59b0cfa513a1ef108cabf7a32e4b17e627f72fdb", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ALL intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "82ab0ca20726746193670b81cd349cc41981ded2", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ALL intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "d65adcd9fc57ce30c884cae87bf25c16b00b5a2f", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ALL intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "fdf20a2f11bfc63fa02bf3d4c46ef497d7cb29f8", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ALL intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "cfefe47a2680fd57c8d99aa09ebcdb0b399c0433", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ANY intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "c3297ac5c7f7fe06937b0490d7383705f7efd432", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ANY intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "daef183cb199e9131561c2ed02edc84c9f300517", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ANY intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "d12c74f87c0ba694c1e08050b1d23e3036866125", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ANY intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "bb65480d67cf7921f6f51ea9dd24ec9e14b65d4f", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" ANY intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "7a86fafa99a7f26fd05d415aa0e8bc9000aa4b10", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" COUNT intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "67c9dbcf5d0bbb0fde01f0dbb5086cc05f49ae7f", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" COUNT intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "d40d0dcea524195d9cbbb6a2529b39a3c5ccbbf6", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" COUNT intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "8bd1c8f16eae77db15a0b3fa70796f0345babdc9", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" COUNT intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "078a33fa5aa96eae4bd822435fdd0474b443c88f", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -138,7 +138,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" COUNT intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}, {"sha": "214be04c2d866d522728204fe95aed26c527d5ca", "filename": "libgfortran/m4/ifunction_logical.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fm4%2Fifunction_logical.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf38a00c16f909d8a80177581bf493b2552ca/libgfortran%2Fm4%2Fifunction_logical.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction_logical.m4?ref=60dcf38a00c16f909d8a80177581bf493b2552ca", "patch": "@@ -121,7 +121,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n \t      if (extent[n] != ret_extent)\n \t\truntime_error (\"Incorrect extent in return value of\"\n \t\t\t       \" u_name intrinsic in dimension %d:\"\n-\t\t\t       \" is %ld, should be %ld\", n + 1,\n+\t\t\t       \" is %ld, should be %ld\", (int) n + 1,\n \t\t\t       (long int) ret_extent, (long int) extent[n]);\n \t    }\n \t}"}]}