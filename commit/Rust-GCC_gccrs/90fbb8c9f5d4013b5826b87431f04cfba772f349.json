{"sha": "90fbb8c9f5d4013b5826b87431f04cfba772f349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmYmI4YzlmNWQ0MDEzYjU4MjZiODc0MzFmMDRjZmJhNzcyZjM0OQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-05-06T08:57:18Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-05-06T08:57:18Z"}, "message": "More system.h cutover...\n\n        * Makefile.in (mips-tfile.o, mips-tdump.o): Depend on system.h.\n        * mips-tdump.c: Include system.h, remove redundant headers.\n        * mips-tfile.c: Likewise.  Convert all ctype function calls to\n        macro versions defined in system.h.\n        * objc/Make-lang.in (objc-act.o): Depend on system.h.\n        * objc/objc-act.c: Include system.h, remove redundant headers.\n\nFrom-SVN: r19573", "tree": {"sha": "0274e1c917678996d8d2e68c775870d0f977dd8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0274e1c917678996d8d2e68c775870d0f977dd8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90fbb8c9f5d4013b5826b87431f04cfba772f349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fbb8c9f5d4013b5826b87431f04cfba772f349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90fbb8c9f5d4013b5826b87431f04cfba772f349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fbb8c9f5d4013b5826b87431f04cfba772f349/comments", "author": null, "committer": null, "parents": [{"sha": "8f81384fec6ccb2bca5a9029498c7b1c0d0326ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f81384fec6ccb2bca5a9029498c7b1c0d0326ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f81384fec6ccb2bca5a9029498c7b1c0d0326ff"}], "stats": {"total": 106, "additions": 36, "deletions": 70}, "files": [{"sha": "83863d70371493691446755e8c3e02f637aeaf8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -1,3 +1,13 @@\n+Wed May  6 11:43:18 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (mips-tfile.o, mips-tdump.o): Depend on system.h.\n+\t* mips-tdump.c: Include system.h, remove redundant headers.\n+\t* mips-tfile.c: Likewise.  Also, convert all ctype function calls\n+\tto calls of the macro versions defined in system.h.\n+\n+\t* objc/Make-lang.in (objc-act.o): Depend on system.h.\n+\t* objc/objc-act.c: Include system.h, remove redundant headers.\n+\n Wed May  6 11:21:06 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (AC_CHECK_FUNCS): Add isascii."}, {"sha": "6914072d00b251f4bc1c7a45b8def47c44b5a26c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -1442,12 +1442,12 @@ $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) \\\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n \n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H)\n+mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) system.h\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n \n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H)\n+mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) system.h\n \n # Build file to support OSF/rose half-pic format.\n halfpic.o: halfpic.c $(CONFIG_H) $(RTL_H) $(TREE_H) system.h"}, {"sha": "6ca005ad6dc6f0b2a3c411758e8205120081ab01", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -21,12 +21,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n-#include <sys/types.h>\n-#include <sys/file.h>\n-#include <time.h>\n-#include <fcntl.h>\n-#include <errno.h>\n+#include \"system.h\"\n \n #ifdef index\n #undef index"}, {"sha": "49a3dc6cca21ab20600047fc5f611386c678e734", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 21, "deletions": 56, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -605,7 +605,7 @@ Boston, MA 02111-1307, USA.  */\n #else\n #include <varargs.h>\n #endif\n-#include <stdio.h>\n+#include \"system.h\"\n \n #ifndef __SABER__\n #define saber_stop()\n@@ -705,11 +705,6 @@ main ()\n #undef rindex\n #undef index\n \n-#include <sys/types.h>\n-#include <string.h>\n-#include <ctype.h>\n-#include <fcntl.h>\n-#include <errno.h>\n #include <signal.h>\n #include <sys/stat.h>\n \n@@ -731,31 +726,14 @@ main ()\n #define STAB_CODE_TYPE int\n #endif\n \n-#ifdef _OSF_SOURCE\n-#define HAS_STDLIB_H\n-#define HAS_UNISTD_H\n-#endif\n-\n-#ifdef HAS_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAS_UNISTD_H\n-#include <unistd.h>\n-#endif\n-\n-#ifndef errno\n-extern int errno;\t\t\t/* MIPS errno.h doesn't declare this */\n-#endif\n-\n #ifndef MALLOC_CHECK\n #ifdef\t__SABER__\n #define MALLOC_CHECK\n #endif\n #endif\n \n #define IS_ASM_IDENT(ch) \\\n-  (isalnum (ch) || (ch) == '_' || (ch) == '.' || (ch) == '$')\n+  (ISALNUM (ch) || (ch) == '_' || (ch) == '.' || (ch) == '$')\n \n \f\n /* Redefinition of of storage classes as an enumeration for better\n@@ -1755,13 +1733,6 @@ STATIC void\t  free_thead\t\t__proto((thead_t *));\n STATIC char\t *local_index\t\t__proto((const char *, int));\n STATIC char\t *local_rindex\t\t__proto((const char *, int));\n \n-#ifdef NEED_DECLARATION_SBRK\n-extern char  *sbrk\t\t\t__proto((int));\n-#endif\n-#ifdef NEED_DECLARATION_FREE\n-extern void   free\t\t\t__proto((PTR_T));\n-#endif\n-\n extern char  *mktemp\t\t\t__proto((char *));\n extern long   strtol\t\t\t__proto((const char *, char **, int));\n \n@@ -1775,12 +1746,6 @@ extern char *sys_siglist[NSIG + 1];\n #endif\n #endif\n \n-#ifndef SEEK_SET\t/* Symbolic constants for the \"fseek\" function: */\n-#define\tSEEK_SET 0\t/* Set file pointer to offset */\n-#define\tSEEK_CUR 1\t/* Set file pointer to its current value plus offset */\n-#define\tSEEK_END 2\t/* Set file pointer to the size of the file plus offset */\n-#endif\n-\n \f\n /* List of assembler pseudo ops and beginning sequences that need\n    special actions.  Someday, this should be a hash table, and such,\n@@ -2835,7 +2800,7 @@ parse_begin (start)\n       return;\n     }\n \n-  for (end_p1 = start; (ch = *end_p1) != '\\0' && !isspace (ch); end_p1++)\n+  for (end_p1 = start; (ch = *end_p1) != '\\0' && !ISSPACE (ch); end_p1++)\n     ;\n \n   hash_ptr = hash_string (start,\n@@ -2885,7 +2850,7 @@ parse_bend (start)\n       return;\n     }\n \n-  for (end_p1 = start; (ch = *end_p1) != '\\0' && !isspace (ch); end_p1++)\n+  for (end_p1 = start; (ch = *end_p1) != '\\0' && !ISSPACE (ch); end_p1++)\n     ;\n \n   hash_ptr = hash_string (start,\n@@ -2995,7 +2960,7 @@ parse_def (name_start)\n \t   (ch = *dir_end_p1) != ' ' && ch != '\\t';\n \t   dir_end_p1++)\n \t{\n-\t  if (ch == '\\0' || isspace (ch))\n+\t  if (ch == '\\0' || ISSPACE (ch))\n \t    {\n \t      error_line = __LINE__;\n \t      saber_stop ();\n@@ -3011,15 +2976,15 @@ parse_def (name_start)\n       while (ch == ' ' || ch == '\\t')\n \tch = *++arg_start;\n \n-      if (isdigit (ch) || ch == '-' || ch == '+')\n+      if (ISDIGIT (ch) || ch == '-' || ch == '+')\n \t{\n \t  int ch2;\n \t  arg_number = strtol (arg_start, (char **) &arg_end_p1, 0);\n \t  if (arg_end_p1 != arg_start || (ch2 = *arg_end_p1 != ';') || ch2 != ',')\n \t    arg_was_number++;\n \t}\n \n-      else if (ch == '\\0' || isspace (ch))\n+      else if (ch == '\\0' || ISSPACE (ch))\n \t{\n \t  error_line = __LINE__;\n \t  saber_stop ();\n@@ -3067,7 +3032,7 @@ parse_def (name_start)\n \t\t    ch = *++arg_start;\n \n \t\t  arg_was_number = 0;\n-\t\t  if (isdigit (ch) || ch == '-' || ch == '+')\n+\t\t  if (ISDIGIT (ch) || ch == '-' || ch == '+')\n \t\t    {\n \t\t      int ch2;\n \t\t      arg_number = strtol (arg_start, (char **) &arg_end_p1, 0);\n@@ -3141,7 +3106,7 @@ parse_def (name_start)\n \t\t    ch = *++arg_start;\n \n \t\t  arg_was_number = 0;\n-\t\t  if (isdigit (ch) || ch == '-' || ch == '+')\n+\t\t  if (ISDIGIT (ch) || ch == '-' || ch == '+')\n \t\t    {\n \t\t      int ch2;\n \t\t      arg_number = strtol (arg_start, (char **) &arg_end_p1, 0);\n@@ -3520,7 +3485,7 @@ parse_end (start)\n     }\n \n   /* Get the function name, skipping whitespace.  */\n-  for (start_func = start; isspace (*start_func); start_func++)\n+  for (start_func = start; ISSPACE (*start_func); start_func++)\n     ;\n \n   ch = *start_func;\n@@ -3579,7 +3544,7 @@ parse_ent (start)\n       return;\n     }\n \n-  for (start_func = start; isspace (*start_func); start_func++)\n+  for (start_func = start; ISSPACE (*start_func); start_func++)\n     ;\n \n   ch = *start_func;\n@@ -3689,7 +3654,7 @@ parse_stabs_common (string_start, string_end, rest)\n     mark_stabs (\"\");\n \n   /* Read code from stabs.  */\n-  if (!isdigit (*rest))\n+  if (!ISDIGIT (*rest))\n     {\n       error (\"Invalid .stabs/.stabn directive, code is non-numeric\");\n       return;\n@@ -3709,15 +3674,15 @@ parse_stabs_common (string_start, string_end, rest)\n       shash_t *shash_ptr;\n \n       /* Skip ,0, */\n-      if (p[0] != ',' || p[1] != '0' || p[2] != ',' || !isdigit (p[3]))\n+      if (p[0] != ',' || p[1] != '0' || p[2] != ',' || !ISDIGIT (p[3]))\n \t{\n \t  error (\"Invalid line number .stabs/.stabn directive\");\n \t  return;\n \t}\n \n       code = strtol (p+3, &p, 0);\n       ch = *++p;\n-      if (p[-1] != ',' || isdigit (ch) || !IS_ASM_IDENT (ch))\n+      if (p[-1] != ',' || ISDIGIT (ch) || !IS_ASM_IDENT (ch))\n \t{\n \t  error (\"Invalid line number .stabs/.stabn directive\");\n \t  return;\n@@ -3759,11 +3724,11 @@ parse_stabs_common (string_start, string_end, rest)\n       /* Skip ,<num>,<num>, */\n       if (*p++ != ',')\n \tgoto failure;\n-      for (; isdigit (*p); p++)\n+      for (; ISDIGIT (*p); p++)\n \t;\n       if (*p++ != ',')\n \tgoto failure;\n-      for (; isdigit (*p); p++)\n+      for (; ISDIGIT (*p); p++)\n \t;\n       if (*p++ != ',')\n \tgoto failure;\n@@ -3775,7 +3740,7 @@ parse_stabs_common (string_start, string_end, rest)\n \t  return;\n \t}\n \n-      if (isdigit (ch) || ch == '-')\n+      if (ISDIGIT (ch) || ch == '-')\n \t{\n \t  st = st_Nil;\n \t  sc = sc_Nil;\n@@ -3843,7 +3808,7 @@ parse_stabs_common (string_start, string_end, rest)\n \t  ch = *end_p1++;\n \t  if (ch != '\\n')\n \t    {\n-\t      if (((!isdigit (*end_p1)) && (*end_p1 != '-'))\n+\t      if (((!ISDIGIT (*end_p1)) && (*end_p1 != '-'))\n \t\t  || ((ch != '+') && (ch != '-')))\n \t\t{\n \t\t  error (\"Invalid .stabs/.stabn directive, badly formed value\");\n@@ -3919,16 +3884,16 @@ parse_input __proto((void))\n   while ((p = read_line ()) != (char *) 0)\n     {\n       /* Skip leading blanks */\n-      while (isspace (*p))\n+      while (ISSPACE (*p))\n \tp++;\n \n       /* See if it's a directive we handle.  If so, dispatch handler.  */\n       for (i = 0; i < sizeof (pseudo_ops) / sizeof (pseudo_ops[0]); i++)\n \tif (memcmp (p, pseudo_ops[i].name, pseudo_ops[i].len) == 0\n-\t    && isspace (p[pseudo_ops[i].len]))\n+\t    && ISSPACE (p[pseudo_ops[i].len]))\n \t  {\n \t    p += pseudo_ops[i].len;\t/* skip to first argument */\n-\t    while (isspace (*p))\n+\t    while (ISSPACE (*p))\n \t      p++;\n \n \t    (*pseudo_ops[i].func)( p );"}, {"sha": "cbf52e10cd20f8977d64b22c873194b9da026c9d", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -87,7 +87,7 @@ $(srcdir)/objc/objc-parse.y: $(srcdir)/c-parse.in\n \t$(srcdir)/move-if-change tmp-objc-prs.y $(srcdir)/objc/objc-parse.y\n \n objc-act.o : $(srcdir)/objc/objc-act.c \\\n-   $(CONFIG_H) $(TREE_H) $(RTL_H) \\\n+   $(CONFIG_H) $(TREE_H) $(RTL_H) system.h \\\n    $(srcdir)/c-tree.h $(srcdir)/c-lex.h \\\n    $(srcdir)/flags.h $(srcdir)/objc/objc-act.h $(srcdir)/input.h \\\n    $(srcdir)/function.h $(srcdir)/output.h $(srcdir)/c-parse.h"}, {"sha": "463ef692c38dc27d747716233e207891d4f65674", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fbb8c9f5d4013b5826b87431f04cfba772f349/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=90fbb8c9f5d4013b5826b87431f04cfba772f349", "patch": "@@ -39,10 +39,7 @@ Boston, MA 02111-1307, USA.  */\n    - OBJC_INT_SELECTORS  */\n \n #include \"config.h\"\n-#include <stdio.h>\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"c-lex.h\"\n@@ -51,7 +48,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"input.h\"\n #include \"except.h\"\n #include \"function.h\"\n-#include <string.h>\n #include \"output.h\"\n \n /* This is the default way of generating a method name.  */"}]}