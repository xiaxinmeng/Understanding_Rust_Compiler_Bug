{"sha": "35c38fa674ab01152c743f421226f3cbc829cd94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjMzhmYTY3NGFiMDExNTJjNzQzZjQyMTIyNmYzY2JjODI5Y2Q5NA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-08-01T09:56:31Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-08-01T09:56:31Z"}, "message": "2017-08-01  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/aarch64/aarch64.c\n\t(aarch64_can_const_movi_rtx_p): Move 0 check.\n\nFrom-SVN: r250766", "tree": {"sha": "62ba8f71dcccacf4a6fa226d0f40947acf6d4be5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62ba8f71dcccacf4a6fa226d0f40947acf6d4be5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35c38fa674ab01152c743f421226f3cbc829cd94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c38fa674ab01152c743f421226f3cbc829cd94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c38fa674ab01152c743f421226f3cbc829cd94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c38fa674ab01152c743f421226f3cbc829cd94/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e19d4371e4e2c7e8251f9f560abe4c43208e63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e19d4371e4e2c7e8251f9f560abe4c43208e63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e19d4371e4e2c7e8251f9f560abe4c43208e63a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "aba255029a3d1baf6fecabf3240135c1961d0eb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c38fa674ab01152c743f421226f3cbc829cd94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c38fa674ab01152c743f421226f3cbc829cd94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35c38fa674ab01152c743f421226f3cbc829cd94", "patch": "@@ -1,3 +1,8 @@\n+2017-08-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_can_const_movi_rtx_p): Move 0 check.\n+\n 2017-08-01  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree.h (POINTER_TYPE_OVERFLOW_UNDEFINED): Delete."}, {"sha": "5a2ad7e9156a6f0389c09470cf1414bff45d8099", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c38fa674ab01152c743f421226f3cbc829cd94/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c38fa674ab01152c743f421226f3cbc829cd94/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=35c38fa674ab01152c743f421226f3cbc829cd94", "patch": "@@ -4787,10 +4787,6 @@ aarch64_can_const_movi_rtx_p (rtx x, machine_mode mode)\n   if (!TARGET_SIMD)\n      return false;\n \n-  /* We make a general exception for 0.  */\n-  if (aarch64_float_const_zero_rtx_p (x))\n-      return true;\n-\n   machine_mode vmode, imode;\n   unsigned HOST_WIDE_INT ival;\n \n@@ -4800,6 +4796,10 @@ aarch64_can_const_movi_rtx_p (rtx x, machine_mode mode)\n       if (!aarch64_reinterpret_float_as_int (x, &ival))\n \treturn false;\n \n+      /* We make a general exception for 0.  */\n+      if (aarch64_float_const_zero_rtx_p (x))\n+\treturn true;\n+\n       imode = int_mode_for_mode (mode);\n     }\n   else if (GET_CODE (x) == CONST_INT"}]}