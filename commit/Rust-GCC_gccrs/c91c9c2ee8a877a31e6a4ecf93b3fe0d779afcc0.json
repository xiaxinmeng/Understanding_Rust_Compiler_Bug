{"sha": "c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxYzljMmVlOGE4NzdhMzFlNmE0ZWNmOTNiM2ZlMGQ3NzlhZmNjMA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-03-27T13:40:08Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-03-27T13:40:08Z"}, "message": "configure.ac (frags): Don't set, use frag instead.\n\n2008-03-27  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure.ac (frags): Don't set, use frag instead.\n\t(PICFLAG): Set here and substitute.\n\t* Makefile.in (PICFLAG): Substitute from autoconf.\n\t* configure: Regenerate.\n\nFrom-SVN: r133639", "tree": {"sha": "6d8b2abaa77b9ba097422b8ebbb72ee15e6a3ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8b2abaa77b9ba097422b8ebbb72ee15e6a3ef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "724256083eea3833f018ae2c2cc7b00209b788b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724256083eea3833f018ae2c2cc7b00209b788b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724256083eea3833f018ae2c2cc7b00209b788b5"}], "stats": {"total": 96, "additions": 50, "deletions": 46}, "files": [{"sha": "c85691c40e1f2de3c4fa741917f64b52034c86cc", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "patch": "@@ -1,3 +1,10 @@\n+2008-03-27  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure.ac (frags): Don't set, use frag instead.\n+\t(PICFLAG): Set here and substitute.\n+\t* Makefile.in (PICFLAG): Substitute from autoconf.\n+\t* configure: Regenerate.\n+\n 2008-03-24  Ian Lance Taylor  <iant@google.com>\n \n \t* sha1.c: New file, from gnulib."}, {"sha": "40a1d47718bda806a504ea86a9ffecd9c9d8adb6", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "patch": "@@ -60,7 +60,7 @@ RANLIB = @RANLIB@\n MAKEINFO = @MAKEINFO@\n PERL = @PERL@\n \n-PICFLAG =\n+PICFLAG = @PICFLAG@\n \n MAKEOVERRIDES =\n "}, {"sha": "bbe792dab64f007754a39f375192c1daafa64b30", "filename": "libiberty/configure", "status": "modified", "additions": 22, "deletions": 23, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libiberty_topdir MAINT NOTMAINT MAKEINFO BUILD_INFO PERL HAVE_PERL build build_cpu build_vendor build_os host host_cpu host_vendor host_os AR ac_ct_AR RANLIB ac_ct_RANLIB CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CPP ac_libiberty_warn_cflags NO_MINUS_C_MINUS_O OUTPUT_OPTION INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA EGREP LIBOBJS CHECK target_header_dir pexecute INSTALL_DEST datarootdir docdir htmldir LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libiberty_topdir MAINT NOTMAINT MAKEINFO BUILD_INFO PERL HAVE_PERL build build_cpu build_vendor build_os host host_cpu host_vendor host_os AR ac_ct_AR RANLIB ac_ct_RANLIB CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CPP ac_libiberty_warn_cflags NO_MINUS_C_MINUS_O OUTPUT_OPTION INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA PICFLAG EGREP LIBOBJS CHECK target_header_dir pexecute INSTALL_DEST datarootdir docdir htmldir LTLIBOBJS'\n ac_subst_files='host_makefile_frag'\n \n # Initialize some variables set by options.\n@@ -3699,9 +3699,7 @@ case \"${host}\" in\n esac\n \n if [ -n \"${frag}\" ]; then\n-  frags=${libiberty_topdir}/libiberty/config/$frag\n-else\n-  frags=\n+  frag=${libiberty_topdir}/libiberty/config/$frag\n fi\n \n # If they didn't specify --enable-shared, don't generate shared libs.\n@@ -3712,34 +3710,34 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n if [ \"${shared}\" = \"yes\" ]; then\n-  frag=\n   case \"${host}\" in\n     *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n-    arm*-*-*)\t\tfrag=mh-armpic ;;\n-    hppa*-*-*)\t\tfrag=mh-papic ;;\n+    alpha*-*-linux*)\tPICFLAG=-fPIC ;;\n+    arm*-*-*)\t\tPICFLAG=-fPIC ;;\n+    hppa*-*-*)\t\tPICFLAG=-fPIC ;;\n+    i370-*-*)\t\tPICFLAG=-fPIC ;;\n+    ia64-*-*)\t\tPICFLAG=-fpic ;;\n     i[34567]86-*-* | x86_64-*-*)\n-\t\t\tfrag=mh-x86pic ;;\n+\t\t\tPICFLAG=-fpic ;;\n+    m68k-*-*)\t\tPICFLAG=-fpic ;;\n     powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n-    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n-    s390*-*-*)\t\tfrag=mh-s390pic ;;\n-    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n+    powerpc*-*-*)\tPICFLAG=-fPIC ;;\n+    sparc*-*-*)\t\tcase \"${CFLAGS}\" in\n+\t\t\t  *-fpic* ) PICFLAG=-fpic ;;\n+\t\t\t  * ) PICFLAG=-fPIC ;;\n+\t\t\tesac ;;\n+    s390*-*-*)\t\tPICFLAG=-fpic ;;\n   esac\n-  if [ -n \"${frag}\" ]; then\n-    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n-  fi\n fi\n \n+\n echo \"# Warning: this fragment is automatically generated\" > temp-frag\n \n-for frag in ${frags}; do\n-  if [ -f ${frag} ]; then\n-    echo \"Appending ${frag} to xhost-mkfrag\"\n-    echo \"# Following fragment copied from ${frag}\" >> temp-frag\n-    cat ${frag} >> temp-frag\n-  fi\n-done\n+if [ -n \"${frag}\" ] && [ -f \"${frag}\" ]; then\n+  echo \"Appending ${frag} to xhost-mkfrag\"\n+  echo \"# Following fragment copied from ${frag}\" >> temp-frag\n+  cat ${frag} >> temp-frag\n+fi\n \n # record if we want to build shared libs.\n if [ \"${shared}\" = \"yes\" ]; then\n@@ -9671,6 +9669,7 @@ s,@OUTPUT_OPTION@,$OUTPUT_OPTION,;t t\n s,@INSTALL_PROGRAM@,$INSTALL_PROGRAM,;t t\n s,@INSTALL_SCRIPT@,$INSTALL_SCRIPT,;t t\n s,@INSTALL_DATA@,$INSTALL_DATA,;t t\n+s,@PICFLAG@,$PICFLAG,;t t\n s,@EGREP@,$EGREP,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@CHECK@,$CHECK,;t t"}, {"sha": "f5df5582b362a076c1874a16e2d1f463584330d4", "filename": "libiberty/configure.ac", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=c91c9c2ee8a877a31e6a4ecf93b3fe0d779afcc0", "patch": "@@ -187,9 +187,7 @@ case \"${host}\" in\n esac\n \n if [[ -n \"${frag}\" ]]; then\n-  frags=${libiberty_topdir}/libiberty/config/$frag\n-else\n-  frags=\n+  frag=${libiberty_topdir}/libiberty/config/$frag\n fi\n \n # If they didn't specify --enable-shared, don't generate shared libs.\n@@ -200,34 +198,34 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n if [[ \"${shared}\" = \"yes\" ]]; then\n-  frag=\n   case \"${host}\" in\n     *-*-cygwin*)\t;;\n-    alpha*-*-linux*)\tfrag=mh-elfalphapic ;;\n-    arm*-*-*)\t\tfrag=mh-armpic ;;\n-    hppa*-*-*)\t\tfrag=mh-papic ;;\n+    alpha*-*-linux*)\tPICFLAG=-fPIC ;;\n+    arm*-*-*)\t\tPICFLAG=-fPIC ;;\n+    hppa*-*-*)\t\tPICFLAG=-fPIC ;;\n+    i370-*-*)\t\tPICFLAG=-fPIC ;;\n+    ia64-*-*)\t\tPICFLAG=-fpic ;;\n     i[[34567]]86-*-* | x86_64-*-*)\n-\t\t\tfrag=mh-x86pic ;;\n+\t\t\tPICFLAG=-fpic ;;\n+    m68k-*-*)\t\tPICFLAG=-fpic ;;\n     powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tfrag=mh-ppcpic ;;\n-    sparc*-*-*)\t\tfrag=mh-sparcpic ;;\n-    s390*-*-*)\t\tfrag=mh-s390pic ;;\n-    *)\t\t\tfrag=mh-${host_cpu}pic ;;\n+    powerpc*-*-*)\tPICFLAG=-fPIC ;;\n+    sparc*-*-*)\t\tcase \"${CFLAGS}\" in\n+\t\t\t  *-fpic* ) PICFLAG=-fpic ;;\n+\t\t\t  * ) PICFLAG=-fPIC ;;\n+\t\t\tesac ;;\n+    s390*-*-*)\t\tPICFLAG=-fpic ;;\n   esac\n-  if [[ -n \"${frag}\" ]]; then\n-    frags=\"${frags} ${libiberty_topdir}/config/${frag}\"\n-  fi\n fi\n+AC_SUBST(PICFLAG)\n \n echo \"# Warning: this fragment is automatically generated\" > temp-frag\n \n-for frag in ${frags}; do\n-  if [[ -f ${frag} ]]; then\n-    echo \"Appending ${frag} to xhost-mkfrag\"\n-    echo \"# Following fragment copied from ${frag}\" >> temp-frag\n-    cat ${frag} >> temp-frag\n-  fi\n-done\n+if [[ -n \"${frag}\" ]] && [[ -f \"${frag}\" ]]; then\n+  echo \"Appending ${frag} to xhost-mkfrag\"\n+  echo \"# Following fragment copied from ${frag}\" >> temp-frag\n+  cat ${frag} >> temp-frag\n+fi\n \n # record if we want to build shared libs.\n if [[ \"${shared}\" = \"yes\" ]]; then"}]}