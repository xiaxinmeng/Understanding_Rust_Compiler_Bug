{"sha": "b60e974d7996651fa29d62214cc3f99890b82c2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwZTk3NGQ3OTk2NjUxZmEyOWQ2MjIxNGNjM2Y5OTg5MGI4MmMyYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-22T18:44:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-22T18:44:10Z"}, "message": "(main): Move declarations of SIZE and TOTAL to where they won't cause \"unused\" warnings when NO_MEM is defined.\n\n(main):  Move declarations of SIZE and TOTAL to where they won't cause\n\"unused\" warnings when NO_MEM is defined.\n(promotions):  Explicitly declare return type (to avoid warnings).\nAlways return a value.\n\nFrom-SVN: r6265", "tree": {"sha": "9229a9b168595cc36d178a5063b3bafa23d7b5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9229a9b168595cc36d178a5063b3bafa23d7b5d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60e974d7996651fa29d62214cc3f99890b82c2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60e974d7996651fa29d62214cc3f99890b82c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60e974d7996651fa29d62214cc3f99890b82c2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60e974d7996651fa29d62214cc3f99890b82c2b/comments", "author": null, "committer": null, "parents": [{"sha": "53117a2f4de1616ee110d5333b12bb592d301212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53117a2f4de1616ee110d5333b12bb592d301212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53117a2f4de1616ee110d5333b12bb592d301212"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "46be9b040137cc82cb6f185880de52bdcf550aba", "filename": "gcc/enquire.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60e974d7996651fa29d62214cc3f99890b82c2b/gcc%2Fenquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60e974d7996651fa29d62214cc3f99890b82c2b/gcc%2Fenquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fenquire.c?ref=b60e974d7996651fa29d62214cc3f99890b82c2b", "patch": "@@ -646,8 +646,6 @@ int maximum_int() {\n \n int main(argc, argv) int argc; char *argv[]; {\n \tint dprec, fprec, lprec;\n-\tunsigned int size;\n-\tlong total;\n \tint i; char *s; int bad;\n \n #ifdef SIGFPE\n@@ -749,6 +747,8 @@ int main(argc, argv) int argc; char *argv[]; {\n \t}\n #ifndef NO_MEM\n \tif (V) {\n+\t\tunsigned int size;\n+\t\tlong total;\n \t\t/* An extra goody: the approximate amount of data-space */\n \t\t/* Allocate store until no more available */\n \t\t/* Different implementations have a different argument type\n@@ -1062,8 +1062,8 @@ Procedure ftyperr(name, esize, size) char *name; int esize, size; {\n \t       name, ftype_of(esize), ftype_of(size));\n }\n \n-promotions() {\n-\tint si; long sl;\n+int promotions() {\n+\tint si = 0; long sl = 0;\n \tunsigned int ui; unsigned long ul;\n \tshort ss; unsigned short us;\n \n@@ -1086,6 +1086,7 @@ promotions() {\n \n \tshowtype(\"unsigned short promotes to\", Promoted((unsigned short)0));\n \tshowtype(\"long+unsigned gives\", sl+ui);\n+\treturn 0;\n }\n \n #define checktype(x, n, s, t) if((sgn(x)!=s)||(sizeof(x)!=sizeof(t))) typerr(n, s, sizeof(t), sign_of(x), sizeof(x));"}]}