{"sha": "71a9b19ae81bcf0d3674649af4ce0c0926310eac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhOWIxOWFlODFiY2YwZDM2NzQ2NDlhZjRjZTBjMDkyNjMxMGVhYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-04-17T13:53:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-04-17T13:53:19Z"}, "message": "re PR target/26826 (ICE in reg_or_subregno, at jump.c:2011)\n\n2006-04-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR target/26826\n\t* reload.c (push_reload): Guard calls to get_secondary_mem\n\tfor memory subregs.\n\nFrom-SVN: r113007", "tree": {"sha": "932bdb247f1b575456479d3812fafb03e3879d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/932bdb247f1b575456479d3812fafb03e3879d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71a9b19ae81bcf0d3674649af4ce0c0926310eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a9b19ae81bcf0d3674649af4ce0c0926310eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a9b19ae81bcf0d3674649af4ce0c0926310eac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a9b19ae81bcf0d3674649af4ce0c0926310eac/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2c0ad4071b5dfd05cc8ca0ac8c6aa1aee9c9d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c0ad4071b5dfd05cc8ca0ac8c6aa1aee9c9d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c0ad4071b5dfd05cc8ca0ac8c6aa1aee9c9d54"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "af150ff0005467c4301f0f9a8158ab64dd54b73f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a9b19ae81bcf0d3674649af4ce0c0926310eac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a9b19ae81bcf0d3674649af4ce0c0926310eac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71a9b19ae81bcf0d3674649af4ce0c0926310eac", "patch": "@@ -1,3 +1,9 @@\n+2006-04-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR target/26826\n+\t* reload.c (push_reload): Guard calls to get_secondary_mem\n+\tfor memory subregs.\n+\n 2006-04-16  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* alias.c (reg_base_value, old_reg_base_value): Change the"}, {"sha": "e7798b9c41acb7f52ad3f7cce298f040197847cf", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a9b19ae81bcf0d3674649af4ce0c0926310eac/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a9b19ae81bcf0d3674649af4ce0c0926310eac/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=71a9b19ae81bcf0d3674649af4ce0c0926310eac", "patch": "@@ -1286,7 +1286,9 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n \n #ifdef SECONDARY_MEMORY_NEEDED\n       /* If a memory location is needed for the copy, make one.  */\n-      if (in != 0 && (REG_P (in) || GET_CODE (in) == SUBREG)\n+      if (in != 0\n+\t  && (REG_P (in)\n+\t      || (GET_CODE (in) == SUBREG && REG_P (SUBREG_REG (in))))\n \t  && reg_or_subregno (in) < FIRST_PSEUDO_REGISTER\n \t  && SECONDARY_MEMORY_NEEDED (REGNO_REG_CLASS (reg_or_subregno (in)),\n \t\t\t\t      class, inmode))\n@@ -1316,7 +1318,9 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n       n_reloads++;\n \n #ifdef SECONDARY_MEMORY_NEEDED\n-      if (out != 0 && (REG_P (out) || GET_CODE (out) == SUBREG)\n+      if (out != 0\n+          && (REG_P (out)\n+\t      || (GET_CODE (out) == SUBREG && REG_P (SUBREG_REG (out))))\n \t  && reg_or_subregno (out) < FIRST_PSEUDO_REGISTER\n \t  && SECONDARY_MEMORY_NEEDED (class,\n \t\t\t\t      REGNO_REG_CLASS (reg_or_subregno (out)),"}]}