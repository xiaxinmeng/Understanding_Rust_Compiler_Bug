{"sha": "1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwMGI3ZDYxNjc1NjJjZTdkYmY5Y2I5ZjE4MDM5ZTdkYjg0OGEwZQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2004-06-04T01:12:20Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2004-06-04T01:12:20Z"}, "message": "Improved [Protocol -isEqual:], now more correct and faster\n\nFrom-SVN: r82619", "tree": {"sha": "c9512905ada08a454e8be37435793f28454ed199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9512905ada08a454e8be37435793f28454ed199"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1600b7d6167562ce7dbf9cb9f18039e7db848a0e/comments", "author": null, "committer": null, "parents": [{"sha": "c759d454325f974380284ac54d342705e95e70d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c759d454325f974380284ac54d342705e95e70d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c759d454325f974380284ac54d342705e95e70d2"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "d6ba1f2711437c9e7f1dca1ec7a7bbb140c60082", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1600b7d6167562ce7dbf9cb9f18039e7db848a0e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1600b7d6167562ce7dbf9cb9f18039e7db848a0e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "patch": "@@ -1,3 +1,13 @@\n+2004-06-03  Nicola Pero  <n.pero@mi.flashnet.it>\n+\n+\t* Protocol.m ([-isEqual:]): Small optimizations returning\n+\timmediately if the argument is equal to self, and accessing\n+\tthe argument's name directly if it's a protocol.\n+\n+2004-06-03  David Ayers  <d.ayers@inode.at>\n+\n+\t* Protocol.m ([-isEqual:]): Test the class of the argument.\n+\n 2004-05-25  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* configure.ac (includedir): Rename to ..."}, {"sha": "689d97e73de71d7f0ae505dae627de1c95b727d9", "filename": "libobjc/Protocol.m", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1600b7d6167562ce7dbf9cb9f18039e7db848a0e/libobjc%2FProtocol.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1600b7d6167562ce7dbf9cb9f18039e7db848a0e/libobjc%2FProtocol.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FProtocol.m?ref=1600b7d6167562ce7dbf9cb9f18039e7db848a0e", "patch": "@@ -150,11 +150,33 @@ - (unsigned) hash\n   return hash;\n }\n \n+/*\n+ * Equality between formal protocols is only formal (nothing to do\n+ * with actually checking the list of methods they have!).  Two formal\n+ * Protocols are equal if and only if they have the same name.\n+ *\n+ * Please note (for comparisons with other implementations) that\n+ * checking the names is equivalent to checking that Protocol A\n+ * conforms to Protocol B and Protocol B conforms to Protocol A,\n+ * because this happens iff they have the same name.  If they have\n+ * different names, A conforms to B if and only if A includes B, but\n+ * the situation where A includes B and B includes A is a circular\n+ * dependency between Protocols which is forbidden by the compiler, so\n+ * A conforms to B and B conforms to A with A and B having different\n+ * names is an impossible case.\n+ */\n - (BOOL) isEqual: (id)obj\n {\n-  if (strcmp (protocol_name, [obj name]) == 0)\n+  if (obj == self)\n     return YES;\n \n+  if ([obj isKindOf: [Protocol class]])\n+    {\n+      if (strcmp (protocol_name, ((Protocol *)obj)->protocol_name) == 0)\n+\treturn YES;\n+    }\n+\n   return NO;\n }\n @end\n+"}]}