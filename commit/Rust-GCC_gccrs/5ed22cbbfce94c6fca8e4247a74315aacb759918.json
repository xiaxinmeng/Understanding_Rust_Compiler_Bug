{"sha": "5ed22cbbfce94c6fca8e4247a74315aacb759918", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVkMjJjYmJmY2U5NGM2ZmNhOGU0MjQ3YTc0MzE1YWFjYjc1OTkxOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-04-01T17:09:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-04-01T17:09:47Z"}, "message": "re PR c++/62207 (ICE: tree check: expected tree that contains 'decl minimal' structure, have 'overload' in tsubst_copy, at cp/pt.c)\n\n/cp\n2019-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/62207\n\t* pt.c (tsubst_copy): Deal with lookup_name not returing a variable.\n\n/testsuite\n2019-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/62207\n\t* g++.dg/template/crash130.C: New.\n\t* g++.dg/template/crash131.C: Likewise.\n\nFrom-SVN: r270064", "tree": {"sha": "91764802e7bfe18eb7c2076b882c9d762085d8d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91764802e7bfe18eb7c2076b882c9d762085d8d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ed22cbbfce94c6fca8e4247a74315aacb759918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed22cbbfce94c6fca8e4247a74315aacb759918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed22cbbfce94c6fca8e4247a74315aacb759918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed22cbbfce94c6fca8e4247a74315aacb759918/comments", "author": null, "committer": null, "parents": [{"sha": "ddeae8c8ac2681f5fb738f78df747782afa6ac15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddeae8c8ac2681f5fb738f78df747782afa6ac15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddeae8c8ac2681f5fb738f78df747782afa6ac15"}], "stats": {"total": 65, "additions": 59, "deletions": 6}, "files": [{"sha": "3501f6b8cf3b6bd8d28356225da2e3dfe5f70b3a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5ed22cbbfce94c6fca8e4247a74315aacb759918", "patch": "@@ -1,3 +1,8 @@\n+2019-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/62207\n+\t* pt.c (tsubst_copy): Deal with lookup_name not returing a variable.\n+\n 2019-03-31  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/89852 - ICE with C++11 functional cast with { }."}, {"sha": "d5249a095c6f8e3e7844c6a0440672aec10043f0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5ed22cbbfce94c6fca8e4247a74315aacb759918", "patch": "@@ -15591,12 +15591,23 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t    {\n \t      /* First try name lookup to find the instantiation.  */\n \t      r = lookup_name (DECL_NAME (t));\n-\t      if (r && !is_capture_proxy (r))\n+\t      if (r)\n \t\t{\n-\t\t  /* Make sure that the one we found is the one we want.  */\n-\t\t  tree ctx = enclosing_instantiation_of (DECL_CONTEXT (t));\n-\t\t  if (ctx != DECL_CONTEXT (r))\n-\t\t    r = NULL_TREE;\n+\t\t  if (!VAR_P (r))\n+\t\t    {\n+\t\t      /* During error-recovery we may find a non-variable,\n+\t\t\t even an OVERLOAD: just bail out and avoid ICEs and\n+\t\t\t duplicate diagnostics (c++/62207).  */\n+\t\t      gcc_assert (seen_error ());\n+\t\t      return error_mark_node;\n+\t\t    }\n+\t\t  if (!is_capture_proxy (r))\n+\t\t    {\n+\t\t      /* Make sure the one we found is the one we want.  */\n+\t\t      tree ctx = enclosing_instantiation_of (DECL_CONTEXT (t));\n+\t\t      if (ctx != DECL_CONTEXT (r))\n+\t\t\tr = NULL_TREE;\n+\t\t    }\n \t\t}\n \n \t      if (r)\n@@ -15632,7 +15643,7 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\t    }\n \t\t  gcc_assert (cp_unevaluated_operand || TREE_STATIC (r)\n \t\t\t      || decl_constant_var_p (r)\n-\t\t\t      || errorcount || sorrycount);\n+\t\t\t      || seen_error ());\n \t\t  if (!processing_template_decl\n \t\t      && !TREE_STATIC (r))\n \t\t    r = process_outer_var_ref (r, complain);"}, {"sha": "244ae87b49510df9f47e5f6586e5ae386468f434", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ed22cbbfce94c6fca8e4247a74315aacb759918", "patch": "@@ -1,3 +1,9 @@\n+2019-04-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/62207\n+\t* g++.dg/template/crash130.C: New.\n+\t* g++.dg/template/crash131.C: Likewise.\n+\n 2019-04-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/89685"}, {"sha": "c3e154f0e2b6853633a637758d8ffbb796d92167", "filename": "gcc/testsuite/g++.dg/template/crash130.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash130.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash130.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash130.C?ref=5ed22cbbfce94c6fca8e4247a74315aacb759918", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/62207\n+\n+template<typename T> void foo(T)\n+{\n+  X;  // { dg-error \"not declared\" }\n+  X;\n+}\n+\n+void X();\n+void X(int);\n+\n+void bar()\n+{\n+  foo(0);\n+}"}, {"sha": "7b3a47dce027ec36c22872ca483dd1d7dc41ef16", "filename": "gcc/testsuite/g++.dg/template/crash131.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed22cbbfce94c6fca8e4247a74315aacb759918/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash131.C?ref=5ed22cbbfce94c6fca8e4247a74315aacb759918", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/62207\n+\n+template<class F>\n+class X {\n+public:\n+  template<F f> class Y {};\n+  template<F f> void y() {}\n+  X(F f)\n+  {\n+    Y<f> y;  // { dg-error \"not a constant\" }\n+\n+    y.value();\n+  }\n+};\n+\n+int main() { X<int> x(1); }"}]}