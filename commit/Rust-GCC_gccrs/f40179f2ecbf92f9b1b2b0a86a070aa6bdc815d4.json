{"sha": "f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQwMTc5ZjJlY2JmOTJmOWIxYjJiMGE4NmEwNzBhYTZiZGM4MTVkNA==", "commit": {"author": {"name": "Baron Roberts", "email": "baron@sgi.com", "date": "1999-02-16T11:58:35Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1999-02-16T11:58:35Z"}, "message": "Remove #if 0/#endif from around struct string_char_traits <wchar_t>.\n\n#include <cwchar>.\nAdd missing definition for wchar_t move method.\nAdd empty() method for trait-based empty string return.\n\nFrom-SVN: r25247", "tree": {"sha": "27074e51259835e18b33ca377310d849f16083ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27074e51259835e18b33ca377310d849f16083ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4/comments", "author": null, "committer": null, "parents": [{"sha": "ce03e9e15aef44d62bd7e5ce6604c9a0e12be97f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce03e9e15aef44d62bd7e5ce6604c9a0e12be97f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce03e9e15aef44d62bd7e5ce6604c9a0e12be97f"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "b510ac74a962ec706ef4189f1787d6aa5ebdea64", "filename": "libstdc++/std/straits.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4/libstdc%2B%2B%2Fstd%2Fstraits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4/libstdc%2B%2B%2Fstd%2Fstraits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fstraits.h?ref=f40179f2ecbf92f9b1b2b0a86a070aa6bdc815d4", "patch": "@@ -40,6 +40,8 @@ template <class charT>\n struct string_char_traits {\n   typedef charT char_type; // for users to acquire the basic character type\n \n+  static const char_type __nullstr[1];\n+\n   // constraints\n \n   static void assign (char_type& c1, const char_type& c2)\n@@ -51,9 +53,10 @@ struct string_char_traits {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return char_type(); } // the null character\n+  static char_type* empty() { return __nullstr; }\n   static bool is_del(char_type a) { return 0; }\n   // characteristic function for delimiters of charT\n-  \n+\n   // speed-up functions\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -65,7 +68,7 @@ struct string_char_traits {\n \n       return 0;\n     }\n-    \n+\n   static size_t length (const char_type* s)\n     {\n       size_t l = 0;\n@@ -117,6 +120,7 @@ struct string_char_traits <char> {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return 0; }\n+  static char_type* empty() { return \"\"; }\n   static bool is_del(char_type a) { return isspace(a); }\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -131,8 +135,8 @@ struct string_char_traits <char> {\n     { return (char_type*) memset (s1, c, n); }\n };\n \n-#if 0\n #include <cwctype>\n+#include <cwchar>\n struct string_char_traits <wchar_t> {\n   typedef wchar_t char_type;\n \n@@ -145,6 +149,7 @@ struct string_char_traits <wchar_t> {\n   static bool lt (const char_type& c1, const char_type& c2)\n     { return (c1 < c2); }\n   static char_type eos () { return 0; }\n+  static char_type* empty() { return L\"\"; }\n   static bool is_del(char_type a) { return iswspace(a); }\n \n   static int compare (const char_type* s1, const char_type* s2, size_t n)\n@@ -153,9 +158,10 @@ struct string_char_traits <wchar_t> {\n     { return wcslen (s); }\n   static char_type* copy (char_type* s1, const char_type* s2, size_t n)\n     { return wmemcpy (s1, s2, n); }\n+  static char_type* move (char_type* s1, const char_type* s2, size_t n)\n+    { return (char_type*) wmemmove (s1, s2, n); }\n   static char_type* set (char_type* s1, const char_type& c, size_t n)\n     { return wmemset (s1, c, n); }\n };\n-#endif\n } // extern \"C++\"\n #endif"}]}