{"sha": "832a0c1d090950cef0735c66b16955944b063579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMyYTBjMWQwOTA5NTBjZWYwNzM1YzY2YjE2OTU1OTQ0YjA2MzU3OQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-05-03T03:19:22Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-05-03T03:19:22Z"}, "message": "re PR tree-optimization/26626 (ICE in in add_virtual_operand)\n\n2006-05-02  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/26626\n\t* tree-ssa-structalias.c (compute_points_to_sets): For now, solve\n\talways.\n\t* tree-ssa-operands.c (access_can_touch_variable): Allow\n\ttypecasting through union pointers.\n\nFrom-SVN: r113493", "tree": {"sha": "80491566ebebc60f4e8ca1eed95ccd44aa7ee361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80491566ebebc60f4e8ca1eed95ccd44aa7ee361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/832a0c1d090950cef0735c66b16955944b063579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832a0c1d090950cef0735c66b16955944b063579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832a0c1d090950cef0735c66b16955944b063579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832a0c1d090950cef0735c66b16955944b063579/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc3281454ebde12095f02b55902a6aa44efee100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3281454ebde12095f02b55902a6aa44efee100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3281454ebde12095f02b55902a6aa44efee100"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "6e73c304f3453b719a63f89d1f310a74418781e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832a0c1d090950cef0735c66b16955944b063579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832a0c1d090950cef0735c66b16955944b063579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=832a0c1d090950cef0735c66b16955944b063579", "patch": "@@ -1,3 +1,11 @@\n+2006-05-02  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/26626\n+\t* tree-ssa-structalias.c (compute_points_to_sets): For now, solve\n+\talways.\n+\t* tree-ssa-operands.c (access_can_touch_variable): Allow\n+\ttypecasting through union pointers.\n+\n 2006-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/26943"}, {"sha": "a4e03012b253ee79a96512f36c3e087ea181f330", "filename": "gcc/testsuite/gcc.c-torture/compile/pr26626.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26626.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26626.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26626.c?ref=832a0c1d090950cef0735c66b16955944b063579", "patch": "@@ -0,0 +1,13 @@\n+typedef union {\n+    int d;\n+} U;\n+\n+int rv;\n+void breakme()\n+{\n+    U *rv0;\n+    U *pretmp = (U*)&rv;\n+    rv0 = pretmp;\n+    rv0->d = 42;\n+}\n+"}, {"sha": "68613fe9564a195ba63fab2aee4b214585a9a0f3", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=832a0c1d090950cef0735c66b16955944b063579", "patch": "@@ -1118,11 +1118,32 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n      { return (struct foos *)&foo; }\n      \n      (taken from 20000623-1.c)\n+\n+     The docs also say/imply that access through union pointers\n+     is legal (but *not* if you take the address of the union member,\n+     i.e. the inverse), such that you can do\n+\n+     typedef union {\n+       int d;\n+     } U;\n+\n+     int rv;\n+     void breakme()\n+     {\n+       U *rv0;\n+       U *pretmp = (U*)&rv;\n+       rv0 = pretmp;\n+       rv0->d = 42;    \n+     }\n+     To implement this, we just punt on accesses through union\n+     pointers entirely.\n   */\n   else if (ref \n \t   && flag_strict_aliasing\n \t   && TREE_CODE (ref) != INDIRECT_REF\n \t   && !MTAG_P (alias)\n+\t   && (TREE_CODE (base) != INDIRECT_REF\n+\t       || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n \t   && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n \t   && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n \t   && !POINTER_TYPE_P (TREE_TYPE (alias)))"}, {"sha": "c5b6cabaadb965824da65ad0317aa5510b94c8d2", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832a0c1d090950cef0735c66b16955944b063579/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=832a0c1d090950cef0735c66b16955944b063579", "patch": "@@ -4485,7 +4485,7 @@ compute_points_to_sets (struct alias_info *ai)\n       dump_constraints (dump_file);\n     }\n   \n-  if (need_to_solve ())\n+  if (1 || need_to_solve ())\n     {\n       if (dump_file)\n \tfprintf (dump_file,"}]}