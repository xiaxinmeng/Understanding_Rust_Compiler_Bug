{"sha": "70b3b953437e97d10bd71bd2f3191f6e326aabba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiM2I5NTM0MzdlOTdkMTBiZDcxYmQyZjMxOTFmNmUzMjZhYWJiYQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2010-08-05T08:55:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-08-05T08:55:34Z"}, "message": "sem_ch4.adb (Analyze_Allocator): Flag errors on allocators of a nested access type whose designated type has...\n\n2010-08-05  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Allocator): Flag errors on allocators of a\n\tnested access type whose designated type has tasks or is a protected\n\tobject when the restrictions No_Task_Hierarchy or\n\tNo_Local_Protected_Objects apply. Add ??? comment.\n\t* sem_ch9.adb (Analyze_Protected_Type): Give a warning when a protected\n\ttype is not a library-level type and No_Local_Protected_Objects applies.\n\t(Analyze_Task_Type): Give a warning when a task type is not a\n\tlibrary-level type and No_Task_Hierarchy applies.\n\nFrom-SVN: r162902", "tree": {"sha": "e6a94c9aa69c2161abc54e756e831387f19785eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6a94c9aa69c2161abc54e756e831387f19785eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b3b953437e97d10bd71bd2f3191f6e326aabba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b3b953437e97d10bd71bd2f3191f6e326aabba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b3b953437e97d10bd71bd2f3191f6e326aabba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b3b953437e97d10bd71bd2f3191f6e326aabba/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2f25cd144ad67f5b5b08a610e149aaeb4a75471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f25cd144ad67f5b5b08a610e149aaeb4a75471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f25cd144ad67f5b5b08a610e149aaeb4a75471"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "256c24c1cc4d37280ee1a06355c17119c24ce1df", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=70b3b953437e97d10bd71bd2f3191f6e326aabba", "patch": "@@ -1,3 +1,14 @@\n+2010-08-05  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Allocator): Flag errors on allocators of a\n+\tnested access type whose designated type has tasks or is a protected\n+\tobject when the restrictions No_Task_Hierarchy or\n+\tNo_Local_Protected_Objects apply. Add ??? comment.\n+\t* sem_ch9.adb (Analyze_Protected_Type): Give a warning when a protected\n+\ttype is not a library-level type and No_Local_Protected_Objects applies.\n+\t(Analyze_Task_Type): Give a warning when a task type is not a\n+\tlibrary-level type and No_Task_Hierarchy applies.\n+\n 2010-08-05  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem.adb: Minor reformatting"}, {"sha": "b4663b8b4aebdf194ca1ccd78b27cb0b43545ee9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=70b3b953437e97d10bd71bd2f3191f6e326aabba", "patch": "@@ -590,6 +590,25 @@ package body Sem_Ch4 is\n          Check_Restriction (No_Tasking, N);\n          Check_Restriction (Max_Tasks, N);\n          Check_Restriction (No_Task_Allocators, N);\n+\n+         --  Check that an allocator with task parts isn't for a nested access\n+         --  type when restriction No_Task_Hierarchy applies.\n+\n+         if not Is_Library_Level_Entity (Acc_Type) then\n+            Check_Restriction (No_Task_Hierarchy, N);\n+         end if;\n+      end if;\n+\n+      --  Check that an allocator of a nested access type doesn't create a\n+      --  protected object when restriction No_Local_Protected_Objects applies.\n+      --  We don't have an equivalent to Has_Task for protected types, so only\n+      --  cases where the designated type itself is a protected type are\n+      --  currently checked. ???\n+\n+      if Is_Protected_Type (Designated_Type (Acc_Type))\n+        and then not Is_Library_Level_Entity (Acc_Type)\n+      then\n+         Check_Restriction (No_Local_Protected_Objects, N);\n       end if;\n \n       --  If the No_Streams restriction is set, check that the type of the"}, {"sha": "0cfdf38d7321fdb15f0b980aeabe681d900a23fe", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b3b953437e97d10bd71bd2f3191f6e326aabba/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=70b3b953437e97d10bd71bd2f3191f6e326aabba", "patch": "@@ -1178,6 +1178,27 @@ package body Sem_Ch9 is\n \n       Analyze (Protected_Definition (N));\n \n+      --  In the case where the protected type is declared at a nested level\n+      --  and the No_Local_Protected_Objects restriction applies, issue a\n+      --  warning that objects of the type will violate the restriction.\n+\n+      if not Is_Library_Level_Entity (T)\n+        and then Comes_From_Source (T)\n+        and then Restrictions.Set (No_Local_Protected_Objects)\n+      then\n+         Error_Msg_Sloc := Restrictions_Loc (No_Local_Protected_Objects);\n+\n+         if Error_Msg_Sloc = No_Location then\n+            Error_Msg_N\n+              (\"objects of this type will violate \" &\n+               \"`No_Local_Protected_Objects`?\", N);\n+         else\n+            Error_Msg_N\n+              (\"objects of this type will violate \" &\n+               \"`No_Local_Protected_Objects`?#\", N);\n+         end if;\n+      end if;\n+\n       --  Protected types with entries are controlled (because of the\n       --  Protection component if nothing else), same for any protected type\n       --  with interrupt handlers. Note that we need to analyze the protected\n@@ -1970,8 +1991,23 @@ package body Sem_Ch9 is\n          Analyze_Task_Definition (Task_Definition (N));\n       end if;\n \n-      if not Is_Library_Level_Entity (T) then\n-         Check_Restriction (No_Task_Hierarchy, N);\n+      --  In the case where the task type is declared at a nested level and the\n+      --  No_Task_Hierarchy restriction applies, issue a warning that objects\n+      --  of the type will violate the restriction.\n+\n+      if not Is_Library_Level_Entity (T)\n+        and then Comes_From_Source (T)\n+        and then Restrictions.Set (No_Task_Hierarchy)\n+      then\n+         Error_Msg_Sloc := Restrictions_Loc (No_Task_Hierarchy);\n+\n+         if Error_Msg_Sloc = No_Location then\n+            Error_Msg_N\n+              (\"objects of this type will violate `No_Task_Hierarchy`?\", N);\n+         else\n+            Error_Msg_N\n+              (\"objects of this type will violate `No_Task_Hierarchy`?#\", N);\n+         end if;\n       end if;\n \n       End_Scope;"}]}