{"sha": "d3a9b459b78d601a3790e688cd8c40d164365120", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhOWI0NTliNzhkNjAxYTM3OTBlNjg4Y2Q4YzQwZDE2NDM2NTEyMA==", "commit": {"author": {"name": "Changpeng Fang", "email": "changpeng.fang@amd.com", "date": "2010-05-17T22:34:03Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-05-17T22:34:03Z"}, "message": "Also apply the insn to prefetch ratio heuristic to loops with known trip count.\n\n2010-05-17  Changpeng Fang  <changpeng.fang@amd.com>\n\n\t* doc/invoke.texi: Update documentation for min-insn-to-prefetch-ratio.\n\t* tree-ssa-loop-prefetch.c (is_loop_prefetching_profitable): Also apply\n\tthe insn to prefetch ratio heuristic to loops with known trip count.\n\nFrom-SVN: r159515", "tree": {"sha": "e8b128de909b41e13e29fd6233fdada3cff63412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b128de909b41e13e29fd6233fdada3cff63412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3a9b459b78d601a3790e688cd8c40d164365120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9b459b78d601a3790e688cd8c40d164365120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9b459b78d601a3790e688cd8c40d164365120", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9b459b78d601a3790e688cd8c40d164365120/comments", "author": {"login": "changpeng", "id": 4239661, "node_id": "MDQ6VXNlcjQyMzk2NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4239661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changpeng", "html_url": "https://github.com/changpeng", "followers_url": "https://api.github.com/users/changpeng/followers", "following_url": "https://api.github.com/users/changpeng/following{/other_user}", "gists_url": "https://api.github.com/users/changpeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/changpeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changpeng/subscriptions", "organizations_url": "https://api.github.com/users/changpeng/orgs", "repos_url": "https://api.github.com/users/changpeng/repos", "events_url": "https://api.github.com/users/changpeng/events{/privacy}", "received_events_url": "https://api.github.com/users/changpeng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8532678c05ca513c77a9163e1546f4019a82beef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8532678c05ca513c77a9163e1546f4019a82beef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8532678c05ca513c77a9163e1546f4019a82beef"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "8d01aa4fb1e4d4a9ae37495b1c3194a6af4e0914", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3a9b459b78d601a3790e688cd8c40d164365120", "patch": "@@ -1,3 +1,9 @@\n+2010-05-17  Changpeng Fang  <changpeng.fang@amd.com>\n+\n+\t* doc/invoke.texi: Update documentation for min-insn-to-prefetch-ratio.\n+\t* tree-ssa-loop-prefetch.c (is_loop_prefetching_profitable): Also apply\n+\tthe insn to prefetch ratio heuristic to loops with known trip count.\n+\n 2010-05-17  Changpeng Fang  <changpeng.fang@amd.com>\n \n \t* tree-ssa-loop-prefetch.c (PREFETCH_MOD_TO_UNROLL_FACTOR_RATIO): New."}, {"sha": "bd29d24fe979a5af907426af2690befe9bf531a5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d3a9b459b78d601a3790e688cd8c40d164365120", "patch": "@@ -8518,8 +8518,7 @@ The size of L2 cache, in kilobytes.\n \n @item min-insn-to-prefetch-ratio\n The minimum ratio between the number of instructions and the\n-number of prefetches to enable prefetching in a loop with an\n-unknown trip count.\n+number of prefetches to enable prefetching in a loop.\n \n @item prefetch-min-insn-to-mem-ratio\n The minimum ratio between the number of instructions and the"}, {"sha": "4d85f54556742d5c91ab68a0c42d8c7b48ffb2d6", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9b459b78d601a3790e688cd8c40d164365120/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=d3a9b459b78d601a3790e688cd8c40d164365120", "patch": "@@ -1603,17 +1603,9 @@ is_loop_prefetching_profitable (unsigned ahead, HOST_WIDE_INT est_niter,\n       return false;\n     }\n \n-  /* Profitability of prefetching is highly dependent on the trip count.\n-     For a given AHEAD distance, the first AHEAD iterations do not benefit\n-     from prefetching, and the last AHEAD iterations execute useless\n-     prefetches.  So, if the trip count is not large enough relative to AHEAD,\n-     prefetching may cause serious performance degradation.  To avoid this\n-     problem when the trip count is not known at compile time, we\n-     conservatively skip loops with high prefetching costs.  For now, only\n-     the I-cache cost is considered.  The relative I-cache cost is estimated\n-     by taking the ratio between the number of prefetches and the total\n-     number of instructions.  Since we are using integer arithmetic, we\n-     compute the reciprocal of this ratio.\n+  /* Prefetching most likely causes performance degradation when the instruction\n+     to prefetch ratio is too small.  Too many prefetch instructions in a loop\n+     may reduce the I-cache performance.\n      (unroll_factor * ninsns) is used to estimate the number of instructions in\n      the unrolled loop.  This implementation is a bit simplistic -- the number\n      of issued prefetch instructions is also affected by unrolling.  So,\n@@ -1623,12 +1615,21 @@ is_loop_prefetching_profitable (unsigned ahead, HOST_WIDE_INT est_niter,\n      original loop * unroll_factor (at least the induction variable increases\n      and the exit branches will get eliminated), so it might be better to use\n      tree_estimate_loop_size + estimated_unrolled_size.  */\n-  if (est_niter < 0)\n+  insn_to_prefetch_ratio = (unroll_factor * ninsns) / prefetch_count;\n+  if (insn_to_prefetch_ratio < MIN_INSN_TO_PREFETCH_RATIO)\n     {\n-      insn_to_prefetch_ratio = (unroll_factor * ninsns) / prefetch_count;\n-      return insn_to_prefetch_ratio >= MIN_INSN_TO_PREFETCH_RATIO;\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+        fprintf (dump_file,\n+\t\t \"Not prefetching -- instruction to prefetch ratio (%d) too small\\n\",\n+\t\t insn_to_prefetch_ratio);\n+      return false;\n     }\n \n+  /* Could not do further estimation if the trip count is unknown.  Just assume\n+     prefetching is profitable. Too aggressive???  */\n+  if (est_niter < 0)\n+    return true;\n+\n   if (est_niter < (HOST_WIDE_INT) (TRIP_COUNT_TO_AHEAD_RATIO * ahead))\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))"}]}