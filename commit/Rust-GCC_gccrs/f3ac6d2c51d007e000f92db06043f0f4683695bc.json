{"sha": "f3ac6d2c51d007e000f92db06043f0f4683695bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhYzZkMmM1MWQwMDdlMDAwZjkyZGIwNjA0M2YwZjQ2ODM2OTViYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-04T14:11:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-04-04T14:11:39Z"}, "message": "re PR debug/85176 (ICE in force_decl_die, at dwarf2out.c:25910)\n\n2018-04-04  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/85176\n\t* dwarf2out.c (dwarf2out_register_external_die): Peel namespaces\n\tfrom contexts for DINFO_LEVEL_TERSE and below.\n\n\t* g++.dg/lto/pr85176_0.C: New testcase.\n\nFrom-SVN: r259080", "tree": {"sha": "e6c217a905d591203ff84ae0b003e2fb5a3f6f5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6c217a905d591203ff84ae0b003e2fb5a3f6f5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3ac6d2c51d007e000f92db06043f0f4683695bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ac6d2c51d007e000f92db06043f0f4683695bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ac6d2c51d007e000f92db06043f0f4683695bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ac6d2c51d007e000f92db06043f0f4683695bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b43502719f0727864d5a19fe08a081a334022e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43502719f0727864d5a19fe08a081a334022e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b43502719f0727864d5a19fe08a081a334022e42"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "c24c3dc090f1a74d3f38c2ce95231374b680f157", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3ac6d2c51d007e000f92db06043f0f4683695bc", "patch": "@@ -1,3 +1,9 @@\n+2018-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/85176\n+\t* dwarf2out.c (dwarf2out_register_external_die): Peel namespaces\n+\tfrom contexts for DINFO_LEVEL_TERSE and below.\n+\n 2018-04-04  Kito Cheng  <kito.cheng@gmail.com>\n \n \t* config/nds32/nds32-doubleword.md (move_<mode>): Require"}, {"sha": "793305484df0351f183ea5df02ab9bb3df46b615", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f3ac6d2c51d007e000f92db06043f0f4683695bc", "patch": "@@ -5903,8 +5903,13 @@ dwarf2out_register_external_die (tree decl, const char *sym,\n     }\n   else\n     ctx = DECL_CONTEXT (decl);\n+  /* Peel types in the context stack.  */\n   while (ctx && TYPE_P (ctx))\n     ctx = TYPE_CONTEXT (ctx);\n+  /* Likewise namespaces in case we do not want to emit DIEs for them.  */\n+  if (debug_info_level <= DINFO_LEVEL_TERSE)\n+    while (ctx && TREE_CODE (ctx) == NAMESPACE_DECL)\n+      ctx = DECL_CONTEXT (ctx);\n   if (ctx)\n     {\n       if (TREE_CODE (ctx) == BLOCK)"}, {"sha": "e9c9475830dc487c6a54e01650d15851ea7885ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3ac6d2c51d007e000f92db06043f0f4683695bc", "patch": "@@ -1,3 +1,8 @@\n+2018-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/85176\n+\t* g++.dg/lto/pr85176_0.C: New testcase.\n+\n 2018-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR testsuite/85191"}, {"sha": "73767ce42eaf014d2d9e204da8cc62bdf3338ebf", "filename": "gcc/testsuite/g++.dg/lto/pr85176_0.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr85176_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ac6d2c51d007e000f92db06043f0f4683695bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr85176_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr85176_0.C?ref=f3ac6d2c51d007e000f92db06043f0f4683695bc", "patch": "@@ -0,0 +1,10 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -flto -g1 } } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+namespace a {\n+    template <typename b, typename = b> class c;\n+    template <typename b, typename d> void e(c<b, d> &);\n+    void operator<<(c<char> &f, const char *) { e(f); }\n+    extern c<char> cout;\n+}\n+int main() { a::cout << \"\"; }"}]}