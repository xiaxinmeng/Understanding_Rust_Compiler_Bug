{"sha": "c24aadf3fac43ff63e9f309b0ead43881be9548e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0YWFkZjNmYWM0M2ZmNjNlOWYzMDliMGVhZDQzODgxYmU5NTQ4ZQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-06-10T12:37:51Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-06-10T12:37:51Z"}, "message": "Object.m (compare): Add type id.\n\n2008-06-10  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* Object.m (compare): Add type id.\n\t* objc/Object.h: Likewise.\n\t* archive.c (objc_read_class): Use size_t to extend version to be\n\tsize of pointer scalar width.\n\t* sendmsg.c (rtx): Undefine it before redefinition.\n\t(__objc_print_dtable_stats): Cast arguments to long as intended.\n\nFrom-SVN: r136617", "tree": {"sha": "4bffe4a7edbb45a1aac069692d728ff3cb979816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bffe4a7edbb45a1aac069692d728ff3cb979816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c24aadf3fac43ff63e9f309b0ead43881be9548e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24aadf3fac43ff63e9f309b0ead43881be9548e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24aadf3fac43ff63e9f309b0ead43881be9548e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24aadf3fac43ff63e9f309b0ead43881be9548e/comments", "author": null, "committer": null, "parents": [{"sha": "33ee5810003d5d7d6fb61b0af706cfac21d4ba6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ee5810003d5d7d6fb61b0af706cfac21d4ba6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ee5810003d5d7d6fb61b0af706cfac21d4ba6c"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "b623679ca613c0476df80563d0167d551bd7c27c", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=c24aadf3fac43ff63e9f309b0ead43881be9548e", "patch": "@@ -1,3 +1,12 @@\n+2008-06-10  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* Object.m (compare): Add type id.\n+\t* objc/Object.h: Likewise.\n+\t* archive.c (objc_read_class): Use size_t to extend version to be\n+\tsize of pointer scalar width.\n+\t* sendmsg.c (rtx): Undefine it before redefinition.\n+\t(__objc_print_dtable_stats): Cast arguments to long as intended.\n+\n 2008-05-30  Julian Brown  <julian@codesourcery.com>\n \n \t* exception.c (__objc_exception_class): Initialise as constant"}, {"sha": "1830acf4502a05d87edff1b16b743debfa9fcf81", "filename": "libobjc/Object.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FObject.m?ref=c24aadf3fac43ff63e9f309b0ead43881be9548e", "patch": "@@ -115,7 +115,7 @@ - (BOOL)isEqual:anObject\n   return self==anObject;\n }\n \n-- (int)compare:anotherObject;\n+- (int)compare:(id)anotherObject;\n {\n   if ([self isEqual:anotherObject])\n     return 0;"}, {"sha": "b3af32d248a90d154874044b21860013212025a2", "filename": "libobjc/archive.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Farchive.c?ref=c24aadf3fac43ff63e9f309b0ead43881be9548e", "patch": "@@ -908,7 +908,7 @@ objc_read_class (struct objc_typed_stream *stream, Class *class)\n \n \t  objc_read_unsigned_long (stream, &version);\n \t  objc_hash_add (&stream->class_table,\n-\t\t\t (*class)->name, (void *)version);\n+\t\t\t (*class)->name, (void *) ((size_t) version));\n \t}\n \n       else if ((buf[0]&_B_CODE) == _B_UCOMM)"}, {"sha": "04d953d56b42a0ac0a44d4194d0c6cb120d1e53f", "filename": "libobjc/objc/Object.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FObject.h?ref=c24aadf3fac43ff63e9f309b0ead43881be9548e", "patch": "@@ -66,7 +66,7 @@ extern \"C\" {\n - self;\n - (unsigned int)hash;\n - (BOOL)isEqual:anObject;\n-- (int)compare:anotherObject;\n+- (int)compare:(id)anotherObject;\n \n         /* Testing object type */\n - (BOOL)isMetaClass;"}, {"sha": "b132a153ff32ef1630612477d8553d4687d07efe", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24aadf3fac43ff63e9f309b0ead43881be9548e/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=c24aadf3fac43ff63e9f309b0ead43881be9548e", "patch": "@@ -41,6 +41,8 @@ Boston, MA 02110-1301, USA.  */\n #define gen_rtx(args...) 1\n #define gen_rtx_MEM(args...) 1\n #define gen_rtx_REG(args...) 1\n+/* Alread defined in gcc/coretypes.h. So prevent double definition warning.  */\n+#undef rtx\n #define rtx int\n \n #if ! defined (STRUCT_VALUE) || STRUCT_VALUE == 0\n@@ -685,14 +687,14 @@ __objc_print_dtable_stats ()\n #endif\n \n   printf (\"arrays: %d = %ld bytes\\n\", narrays, \n-\t  (long) narrays * sizeof (struct sarray));\n+\t  (long) (narrays * sizeof (struct sarray)));\n   total += narrays * sizeof (struct sarray);\n   printf (\"buckets: %d = %ld bytes\\n\", nbuckets, \n-\t  (long) nbuckets * sizeof (struct sbucket));\n+\t  (long) (nbuckets * sizeof (struct sbucket)));\n   total += nbuckets * sizeof (struct sbucket);\n \n   printf (\"idxtables: %d = %ld bytes\\n\",\n-\t  idxsize, (long) idxsize * sizeof (void *));\n+\t  idxsize, (long) (idxsize * sizeof (void *)));\n   total += idxsize * sizeof (void *);\n   printf (\"-----------------------------------\\n\");\n   printf (\"total: %d bytes\\n\", total);"}]}