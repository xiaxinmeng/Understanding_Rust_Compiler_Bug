{"sha": "483a57092272aa47a60301105c8d8f73b9a03d85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgzYTU3MDkyMjcyYWE0N2E2MDMwMTEwNWM4ZDhmNzNiOWEwM2Q4NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-01-28T15:26:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-01-28T15:26:53Z"}, "message": "re PR c++/9433 (SegFault in dynamic_cast)\n\nlibstdc++-v3:\n        PR c++/9433\n        * libsupc++/tinfo.cc (__vmi_class_type_info::__do_dyncast): Cope\n        with bases which are very ambiguous.\ngcc/testsuite:\n        * g++.dg/abi/dcast1.C: New test.\n\nFrom-SVN: r61973", "tree": {"sha": "214a6c12a0e3dd5b027af293c84351d101ec10c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/214a6c12a0e3dd5b027af293c84351d101ec10c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/483a57092272aa47a60301105c8d8f73b9a03d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483a57092272aa47a60301105c8d8f73b9a03d85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483a57092272aa47a60301105c8d8f73b9a03d85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483a57092272aa47a60301105c8d8f73b9a03d85/comments", "author": null, "committer": null, "parents": [{"sha": "a77b7e32ec72dc7ee6085cfe0cf29b4384c70b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77b7e32ec72dc7ee6085cfe0cf29b4384c70b1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77b7e32ec72dc7ee6085cfe0cf29b4384c70b1e"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "5523cebeb572a0f6cf8a7e87a10c95202c467215", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483a57092272aa47a60301105c8d8f73b9a03d85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483a57092272aa47a60301105c8d8f73b9a03d85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=483a57092272aa47a60301105c8d8f73b9a03d85", "patch": "@@ -1,3 +1,7 @@\n+2003-01-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/abi/dcast1.C: New test.\n+\n 2003-01-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.c-torture/execute/builtin-constant.x: Only expect failure at -O1."}, {"sha": "402684ff4467891841904669515203ac7fd0b26a", "filename": "gcc/testsuite/g++.dg/abi/dcast1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483a57092272aa47a60301105c8d8f73b9a03d85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fdcast1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483a57092272aa47a60301105c8d8f73b9a03d85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fdcast1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fdcast1.C?ref=483a57092272aa47a60301105c8d8f73b9a03d85", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 28 Jan 2003 <nathan@codesourcery.com>\n+\n+// PR 9433. segfault at runtime.\n+\n+struct A        { virtual void f() {}; };\n+struct B        {int b;};\n+struct C : A, B { virtual void f() {}; int c;};\n+struct D : C    {int d;};\n+struct E : C    {int e;};\n+struct F : protected D, E  {int f;};\n+struct H : virtual F {int h;};\n+struct I : H  {int i;};\n+struct J : H  {int j;};\n+struct K : I, J { virtual void f() {}; int k; };\n+struct M : K  {int m;};\n+struct N : M  {int n;};\n+struct O : M  {int o;};\n+struct P : N, O { virtual void f() {}; int p;};\n+\n+int main()\n+{\n+  P obj;\n+  A* a1 = (D *) (&obj);\n+  H* hp = dynamic_cast<H*>(a1);\n+  return hp != 0;\n+}"}, {"sha": "8f3c1bc99993f055879eae114a6b229aa0c4a732", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483a57092272aa47a60301105c8d8f73b9a03d85/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483a57092272aa47a60301105c8d8f73b9a03d85/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=483a57092272aa47a60301105c8d8f73b9a03d85", "patch": "@@ -1,3 +1,9 @@\n+2003-01-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/9433\n+\t* libsupc++/tinfo.cc (__vmi_class_type_info::__do_dyncast): Cope\n+\twith bases which are very ambiguous.\n+\n 2003-01-28  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* src/Makefile.am (CONFIG_CXXFLAGS): Reverse order of"}, {"sha": "fe92ad7e7a2ab675d1a59716e466c14e2fb00bc1", "filename": "libstdc++-v3/libsupc++/tinfo.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483a57092272aa47a60301105c8d8f73b9a03d85/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483a57092272aa47a60301105c8d8f73b9a03d85/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc?ref=483a57092272aa47a60301105c8d8f73b9a03d85", "patch": "@@ -1,5 +1,5 @@\n // Methods for type_info for -*- C++ -*- Run Time Type Identification.\n-// Copyright (C) 1994, 1996, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1994, 1996, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation\n //\n // This file is part of GNU CC.\n@@ -482,8 +482,9 @@ __do_dyncast (ptrdiff_t src2dst,\n           result.whole2dst =\n               __sub_kind (result.whole2dst | result2.whole2dst);\n         }\n-      else if ((result.dst_ptr != 0 | result_ambig)\n-               && (result2.dst_ptr != 0 | result2_ambig))\n+      else if ((result.dst_ptr != 0 & result2.dst_ptr != 0)\n+\t       || (result.dst_ptr != 0 & result2_ambig)\n+\t       || (result2.dst_ptr != 0 & result_ambig))\n         {\n           // Found two different DST_TYPE bases, or a valid one and a set of\n           // ambiguous ones, must disambiguate. See whether SRC_PTR is"}]}