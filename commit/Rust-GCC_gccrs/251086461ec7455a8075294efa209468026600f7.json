{"sha": "251086461ec7455a8075294efa209468026600f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxMDg2NDYxZWM3NDU1YTgwNzUyOTRlZmEyMDk0NjgwMjY2MDBmNw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-03-06T17:21:37Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-03-06T17:21:37Z"}, "message": "function.c (expand_function_end): Move blockage to just after we emit the label for the naked return from the...\n\n2007-03-06  Andrew Haley  <aph@redhat.com>\n\n        * function.c (expand_function_end): Move blockage to just after we\n        emit the label for the naked return from the function.\n\nFrom-SVN: r122626", "tree": {"sha": "1ae3a1208716abeed41b0b25c76b336211c53fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ae3a1208716abeed41b0b25c76b336211c53fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251086461ec7455a8075294efa209468026600f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251086461ec7455a8075294efa209468026600f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251086461ec7455a8075294efa209468026600f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251086461ec7455a8075294efa209468026600f7/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af17c030e8e667f46e4170decf58b744437a4315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af17c030e8e667f46e4170decf58b744437a4315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af17c030e8e667f46e4170decf58b744437a4315"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "0e6de0b30bc3304e12e85cfc586dedba86d32359", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251086461ec7455a8075294efa209468026600f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251086461ec7455a8075294efa209468026600f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=251086461ec7455a8075294efa209468026600f7", "patch": "@@ -1,3 +1,8 @@\n+2007-03-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* function.c (expand_function_end): Move blockage to just after we\n+\temit the label for the naked return from the function.\n+\n 2007-03-06  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/i386/att.h (ASM_OUTPUT_ASCII, ASM_OUTPUT_SKIP): Undefine"}, {"sha": "f6ebb85589868568524ef94057ae4cef727911c0", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251086461ec7455a8075294efa209468026600f7/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251086461ec7455a8075294efa209468026600f7/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=251086461ec7455a8075294efa209468026600f7", "patch": "@@ -4327,16 +4327,6 @@ expand_function_end (void)\n       if (flag_exceptions)\n \tsjlj_emit_function_exit_after (get_last_insn ());\n     }\n-  else\n-    {\n-      /* @@@ This is a kludge.  We want to ensure that instructions that\n-\t may trap are not moved into the epilogue by scheduling, because\n-\t we don't always emit unwind information for the epilogue.\n-\t However, not all machine descriptions define a blockage insn, so\n-\t emit an ASM_INPUT to act as one.  */\n-      if (flag_non_call_exceptions)\n-\temit_insn (gen_rtx_ASM_INPUT (VOIDmode, \"\"));\n-    }\n \n   /* If this is an implementation of throw, do what's necessary to\n      communicate between __builtin_eh_return and the epilogue.  */\n@@ -4478,6 +4468,14 @@ expand_function_end (void)\n   /* Output the label for the naked return from the function.  */\n   emit_label (naked_return_label);\n \n+  /* @@@ This is a kludge.  We want to ensure that instructions that\n+     may trap are not moved into the epilogue by scheduling, because\n+     we don't always emit unwind information for the epilogue.\n+     However, not all machine descriptions define a blockage insn, so\n+     emit an ASM_INPUT to act as one.  */\n+  if (! USING_SJLJ_EXCEPTIONS && flag_non_call_exceptions)\n+    emit_insn (gen_rtx_ASM_INPUT (VOIDmode, \"\"));\n+\n   /* If stack protection is enabled for this function, check the guard.  */\n   if (cfun->stack_protect_guard)\n     stack_protect_epilogue ();"}]}