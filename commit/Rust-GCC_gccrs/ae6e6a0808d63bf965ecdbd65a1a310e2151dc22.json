{"sha": "ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU2ZTZhMDgwOGQ2M2JmOTY1ZWNkYmQ2NWExYTMxMGUyMTUxZGMyMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-11-05T11:10:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-11-05T11:10:18Z"}, "message": "ipa-inline.c (leaf_node_p): Rename to ...\n\n\t* ipa-inline.c (leaf_node_p): Rename to ...\n\t(num_calls) ... this one.\n\t(want_early_inline_function_p): Allow smal growth on non-leafs.\n\nFrom-SVN: r193157", "tree": {"sha": "db60d9b66736560c37e78041d9799044bba6bc39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db60d9b66736560c37e78041d9799044bba6bc39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22/comments", "author": null, "committer": null, "parents": [{"sha": "dcda5cc89c30d3b08af7ac393c1e85d0abe675c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcda5cc89c30d3b08af7ac393c1e85d0abe675c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcda5cc89c30d3b08af7ac393c1e85d0abe675c6"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "bca01787be484fdc32dd34ef4b747c59c0f347c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "patch": "@@ -1,3 +1,9 @@\n+2012-11-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline.c (leaf_node_p): Rename to ...\n+\t(num_calls) ... this one.\n+\t(want_early_inline_function_p): Allow smal growth on non-leafs.\n+\n 2012-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/54402"}, {"sha": "2bca2c5fa97e33ed44d2cbd544972df00bfaef7f", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae6e6a0808d63bf965ecdbd65a1a310e2151dc22/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=ae6e6a0808d63bf965ecdbd65a1a310e2151dc22", "patch": "@@ -380,17 +380,18 @@ can_early_inline_edge_p (struct cgraph_edge *e)\n }\n \n \n-/* Return true when N is leaf function.  Accept cheap builtins\n-   in leaf functions.  */\n+/* Return number of calls in N.  Ignore cheap builtins.  */\n \n-static bool\n-leaf_node_p (struct cgraph_node *n)\n+static int\n+num_calls (struct cgraph_node *n)\n {\n   struct cgraph_edge *e;\n+  int num = 0;\n+\n   for (e = n->callees; e; e = e->next_callee)\n     if (!is_inexpensive_builtin (e->callee->symbol.decl))\n-      return false;\n-  return true;\n+      num++;\n+  return num;\n }\n \n \n@@ -414,6 +415,8 @@ want_early_inline_function_p (struct cgraph_edge *e)\n   else\n     {\n       int growth = estimate_edge_growth (e);\n+      int n;\n+\n       if (growth <= 0)\n \t;\n       else if (!cgraph_maybe_hot_edge_p (e)\n@@ -427,22 +430,23 @@ want_early_inline_function_p (struct cgraph_edge *e)\n \t\t     growth);\n \t  want_inline = false;\n \t}\n-      else if (!leaf_node_p (callee)\n-\t       && growth > 0)\n+      else if (growth > PARAM_VALUE (PARAM_EARLY_INLINING_INSNS))\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \"  will not early inline: %s/%i->%s/%i, \"\n-\t\t     \"callee is not leaf and code would grow by %i\\n\",\n+\t\t     \"growth %i exceeds --param early-inlining-insns\\n\",\n \t\t     xstrdup (cgraph_node_name (e->caller)), e->caller->uid,\n \t\t     xstrdup (cgraph_node_name (callee)), callee->uid,\n \t\t     growth);\n \t  want_inline = false;\n \t}\n-      else if (growth > PARAM_VALUE (PARAM_EARLY_INLINING_INSNS))\n+      else if ((n = num_calls (callee)) != 0\n+\t       && growth * (n + 1) > PARAM_VALUE (PARAM_EARLY_INLINING_INSNS))\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \"  will not early inline: %s/%i->%s/%i, \"\n-\t\t     \"growth %i exceeds --param early-inlining-insns\\n\",\n+\t\t     \"growth %i exceeds --param early-inlining-insns \"\n+\t\t     \"divided by number of calls\\n\",\n \t\t     xstrdup (cgraph_node_name (e->caller)), e->caller->uid,\n \t\t     xstrdup (cgraph_node_name (callee)), callee->uid,\n \t\t     growth);"}]}