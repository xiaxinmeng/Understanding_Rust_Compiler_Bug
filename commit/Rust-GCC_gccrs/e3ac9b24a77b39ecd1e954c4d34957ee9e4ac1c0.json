{"sha": "e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhYzliMjRhNzdiMzllY2QxZTk1NGM0ZDM0OTU3ZWU5ZTRhYzFjMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-02-05T21:06:32Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-02-05T21:06:32Z"}, "message": "re PR fortran/35037 (VOLATILE attribute not being honored with common block variable)\n\n\tPR fortran/35037\n\n\t* trans-common.c (build_field): Mark fields as volatile when needed.\n\n\t* gfortran.dg/volatile11.f90: New test.\n\nFrom-SVN: r132129", "tree": {"sha": "3270a822480b22cb5e3633ff14ad2ae61bed170c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3270a822480b22cb5e3633ff14ad2ae61bed170c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da36ba2754d0ab1b9ac9603c939e8b83f1857a30"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "9bd665e7223cde9f5168aa8c064b9db8a45628cb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "patch": "@@ -1,3 +1,8 @@\n+2008-02-05  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/35037\n+\t* trans-common.c (build_field): Mark fields as volatile when needed.\n+\n 2008-02-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/35093"}, {"sha": "a8e1126bdf296fbee40bb11e3814851d3b60c8e7", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "patch": "@@ -318,6 +318,15 @@ build_field (segment_info *h, tree union_type, record_layout_info rli)\n       GFC_DECL_ASSIGN_ADDR (field) = pushdecl_top_level (addr);\n     }\n \n+  /* If this field is volatile, mark it.  */\n+  if (h->sym->attr.volatile_)\n+    {\n+      tree new;\n+      TREE_THIS_VOLATILE (field) = 1;\n+      new = build_qualified_type (TREE_TYPE (field), TYPE_QUAL_VOLATILE);\n+      TREE_TYPE (field) = new;\n+    }\n+\n   h->field = field;\n }\n "}, {"sha": "59cb304a7e488469ada0c620962e2bec12eb40c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "patch": "@@ -1,3 +1,8 @@\n+2008-02-05  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/35037\n+\t* gfortran.dg/volatile11.f90: New test.\n+\n 2008-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/33553"}, {"sha": "5742915abb97757cd65181ebe9ef86cebc147a32", "filename": "gcc/testsuite/gfortran.dg/volatile11.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile11.f90?ref=e3ac9b24a77b39ecd1e954c4d34957ee9e4ac1c0", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fdump-tree-optimized\" }\n+! Tests that volatile can be applied to members of common blocks or\n+! equivalence groups (PR fortran/35037)\n+!\n+subroutine wait1\n+  logical event\n+  volatile event\n+  common /dd/ event\n+  event = .false.\n+  do\n+    if (event) print *, 'NotOptimizedAway1'\n+  end do\n+end subroutine\n+\n+subroutine wait2\n+  logical event, foo\n+  volatile event\n+  equivalence (event, foo)\n+  event = .false.\n+  do\n+    if (event) print *, 'NotOptimizedAway2'\n+  end do\n+end subroutine\n+\n+subroutine wait3\n+  logical event\n+  integer foo\n+  volatile foo\n+  equivalence (event, foo)\n+  event = .false.\n+  do\n+    if (event) print *, 'IsOptimizedAway'\n+  end do\n+end subroutine\n+\n+! { dg-final { scan-tree-dump \"NotOptimizedAway1\" \"optimized\" } } */\n+! { dg-final { scan-tree-dump \"NotOptimizedAway2\" \"optimized\" } } */\n+! { dg-final { scan-tree-dump-not \"IsOptimizedAway\" \"optimized\" } } */\n+! { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}