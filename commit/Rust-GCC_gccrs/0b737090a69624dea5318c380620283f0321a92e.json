{"sha": "0b737090a69624dea5318c380620283f0321a92e", "node_id": "C_kwDOANBUbNoAKDBiNzM3MDkwYTY5NjI0ZGVhNTMxOGMzODA2MjAyODNmMDMyMWE5MmU", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-12-02T02:28:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-12-02T02:28:55Z"}, "message": "analyzer: handle comparisons against negated symbolic values [PR107948]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/107948\n\t* region-model-manager.cc\n\t(region_model_manager::maybe_fold_binop): Fold (0 - VAL) to -VAL.\n\t* region-model.cc (region_model::eval_condition): Handle e.g.\n\t\"-X <= 0\" as equivalent to X >= 0\".\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/107948\n\t* gcc.dg/analyzer/feasibility-pr107948.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "1819faafd6a9e0b3e79c6028385bfa1c11efd738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1819faafd6a9e0b3e79c6028385bfa1c11efd738"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b737090a69624dea5318c380620283f0321a92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b737090a69624dea5318c380620283f0321a92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b737090a69624dea5318c380620283f0321a92e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b737090a69624dea5318c380620283f0321a92e/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cb7d28dcfb11a2810db55b0bbd71fe562bdc2a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb7d28dcfb11a2810db55b0bbd71fe562bdc2a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb7d28dcfb11a2810db55b0bbd71fe562bdc2a3"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "471a9272e410aec35788267b43ed90ea070c58fe", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b737090a69624dea5318c380620283f0321a92e/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b737090a69624dea5318c380620283f0321a92e/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=0b737090a69624dea5318c380620283f0321a92e", "patch": "@@ -620,6 +620,9 @@ region_model_manager::maybe_fold_binop (tree type, enum tree_code op,\n       /* (VAL - 0) -> VAL.  */\n       if (cst1 && zerop (cst1))\n \treturn get_or_create_cast (type, arg0);\n+      /* (0 - VAL) -> -VAL.  */\n+      if (cst0 && zerop (cst0))\n+\treturn get_or_create_unaryop (type, NEGATE_EXPR, arg1);\n       break;\n     case MULT_EXPR:\n       /* (VAL * 0).  */"}, {"sha": "4f623fd6ca326d9f075f67d8bef6cb8bb17399cb", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b737090a69624dea5318c380620283f0321a92e/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b737090a69624dea5318c380620283f0321a92e/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=0b737090a69624dea5318c380620283f0321a92e", "patch": "@@ -3339,6 +3339,19 @@ region_model::eval_condition (const svalue *lhs,\n \t\t  return lhs_ts;\n \t      }\n \t  }\n+\telse if (const unaryop_svalue *unaryop\n+\t\t   = lhs->dyn_cast_unaryop_svalue ())\n+\t  {\n+\t    if (unaryop->get_op () == NEGATE_EXPR)\n+\t      {\n+\t\t/* e.g. \"-X <= 0\" is equivalent to X >= 0\".  */\n+\t\ttristate lhs_ts = eval_condition (unaryop->get_arg (),\n+\t\t\t\t\t\t  swap_tree_comparison (op),\n+\t\t\t\t\t\t  rhs);\n+\t\tif (lhs_ts.is_known ())\n+\t\t  return lhs_ts;\n+\t      }\n+\t  }\n       }\n \n   /* Handle rejection of equality for comparisons of the initial values of"}, {"sha": "5eb8b0aef228ac8a8c022148b45540f1da629ce6", "filename": "gcc/testsuite/gcc.dg/analyzer/feasibility-pr107948.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b737090a69624dea5318c380620283f0321a92e/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ffeasibility-pr107948.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b737090a69624dea5318c380620283f0321a92e/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ffeasibility-pr107948.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ffeasibility-pr107948.c?ref=0b737090a69624dea5318c380620283f0321a92e", "patch": "@@ -0,0 +1,49 @@\n+#include \"analyzer-decls.h\"\n+\n+void foo(int width) {\n+  int i = 0;\n+  int base;\n+  if (width > 0){\n+    __analyzer_eval(i == 0); /* { dg-warning \"TRUE\" } */\n+    __analyzer_eval(width > 0); /* { dg-warning \"TRUE\" } */\n+    __analyzer_eval(width - i > 0); /* { dg-warning \"TRUE\" } */\n+    __analyzer_eval(i - width <= 0); /* { dg-warning \"TRUE\" } */\n+    if (i - width <= 0) {\n+      base = 512;\n+    }\n+    else {\n+      __analyzer_dump_path (); /* { dg-bogus \"path\" } */\n+    }\n+    base+=1; /* { dg-bogus \"uninit\" } */\n+  }\n+}\n+\n+void test_ge_zero (int x)\n+{\n+  if (x >= 0)\n+    {\n+      __analyzer_eval(x >= 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(x > 0); /* { dg-warning \"UNKNOWN\" } */\n+      __analyzer_eval(x <= 0); /* { dg-warning \"UNKNOWN\" } */\n+      __analyzer_eval(x < 0); /* { dg-warning \"FALSE\" } */\n+      __analyzer_eval(-x <= 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(-x < 0); /* { dg-warning \"UNKNOWN\" } */\n+      __analyzer_eval(-x >= 0); /* { dg-warning \"UNKNOWN\" } */\n+      __analyzer_eval(-x > 0); /* { dg-warning \"FALSE\" } */\n+    }\n+}\n+\n+void test_gt_zero (int x)\n+{\n+  if (x > 0)\n+    {\n+      __analyzer_eval(x >= 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(x > 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(x <= 0); /* { dg-warning \"FALSE\" } */\n+      __analyzer_eval(x < 0); /* { dg-warning \"FALSE\" } */\n+      __analyzer_eval(-x <= 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(-x < 0); /* { dg-warning \"TRUE\" } */\n+      __analyzer_eval(-x >= 0); /* { dg-warning \"FALSE\" } */\n+      __analyzer_eval(-x > 0); /* { dg-warning \"FALSE\" } */\n+    }\n+}"}]}