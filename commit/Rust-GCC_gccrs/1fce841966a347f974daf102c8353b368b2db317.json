{"sha": "1fce841966a347f974daf102c8353b368b2db317", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjZTg0MTk2NmEzNDdmOTc0ZGFmMTAyYzgzNTNiMzY4YjJkYjMxNw==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2017-01-07T22:46:13Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2017-01-07T22:46:13Z"}, "message": "re PR preprocessor/13498 (CPP include search path documentation is incorrect)\n\n2017-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR preprocessor/13498\n\n\tgcc/\n\t* doc/cpp.texi (Search Path): Rewrite to remove obsolete and\n\tredudant material, and reflect new command-line options.\n\t(System Headers): Likewise.\n\nFrom-SVN: r244201", "tree": {"sha": "d6477b18b6dccedfb7e891a9c5ef973fda4baef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6477b18b6dccedfb7e891a9c5ef973fda4baef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fce841966a347f974daf102c8353b368b2db317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fce841966a347f974daf102c8353b368b2db317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fce841966a347f974daf102c8353b368b2db317", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fce841966a347f974daf102c8353b368b2db317/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec85a97831b1818e65ef2797781c27a511f68c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec85a97831b1818e65ef2797781c27a511f68c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec85a97831b1818e65ef2797781c27a511f68c24"}], "stats": {"total": 135, "additions": 55, "deletions": 80}, "files": [{"sha": "9627372ce558805625a0103c7d0011c55e24c253", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fce841966a347f974daf102c8353b368b2db317/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fce841966a347f974daf102c8353b368b2db317/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fce841966a347f974daf102c8353b368b2db317", "patch": "@@ -1,3 +1,11 @@\n+2017-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR preprocessor/13498\n+\n+\t* doc/cpp.texi (Search Path): Rewrite to remove obsolete and\n+\tredudant material, and reflect new command-line options.\n+\t(System Headers): Likewise.\n+\n 2017-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/cppdiropts.texi: Merge documentation of -I, -iquote,"}, {"sha": "fe125d354dc7a2be0e6cc27ecbef514da0aec1c3", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 47, "deletions": 80, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fce841966a347f974daf102c8353b368b2db317/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fce841966a347f974daf102c8353b368b2db317/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=1fce841966a347f974daf102c8353b368b2db317", "patch": "@@ -837,74 +837,49 @@ final newline.\n @node Search Path\n @section Search Path\n \n-GCC looks in several different places for headers.  On a normal Unix\n-system, if you do not instruct it otherwise, it will look for headers\n-requested with @code{@w{#include <@var{file}>}} in:\n-\n-@smallexample\n-/usr/local/include\n-@var{libdir}/gcc/@var{target}/@var{version}/include\n-/usr/@var{target}/include\n-/usr/include\n-@end smallexample\n-\n-For C++ programs, it will also look in\n-@file{@var{libdir}/../include/c++/@var{version}},\n-first.  In the above, @var{target} is the canonical name of the system\n-GCC was configured to compile code for; often but not always the same as\n-the canonical name of the system it runs on.  @var{version} is the\n-version of GCC in use.\n-\n-You can add to this list with the @option{-I@var{dir}} command-line\n-option.  All the directories named by @option{-I} are searched, in\n-left-to-right order, @emph{before} the default directories.  The only\n-exception is when @file{dir} is already searched by default.  In\n-this case, the option is ignored and the search order for system\n-directories remains unchanged.\n-\n-Duplicate directories are removed from the quote and bracket search\n-chains before the two chains are merged to make the final search chain.\n-Thus, it is possible for a directory to occur twice in the final search\n-chain if it was specified in both the quote and bracket chains.\n-\n-You can prevent GCC from searching any of the default directories with\n-the @option{-nostdinc} option.  This is useful when you are compiling an\n-operating system kernel or some other program that does not use the\n-standard C library facilities, or the standard C library itself.\n-@option{-I} options are not ignored as described above when\n-@option{-nostdinc} is in effect.\n-\n-GCC looks for headers requested with @code{@w{#include \"@var{file}\"}}\n-first in the directory containing the current file, then in the\n-directories as specified by @option{-iquote} options, then in the same\n-places it would have looked for a header requested with angle\n-brackets.  For example, if @file{/usr/include/sys/stat.h} contains\n+By default, the preprocessor looks for header files included by the quote\n+form of the directive @code{@w{#include \"@var{file}\"}} first relative to\n+the directory of the current file, and then in a preconfigured list \n+of standard system directories.  \n+For example, if @file{/usr/include/sys/stat.h} contains\n @code{@w{#include \"types.h\"}}, GCC looks for @file{types.h} first in\n @file{/usr/include/sys}, then in its usual search path.\n \n-@samp{#line} (@pxref{Line Control}) does not change GCC's idea of the\n-directory containing the current file.\n+For the angle-bracket form @code{@w{#include <@var{file}>}}, the\n+preprocessor's default behavior is to look only in the standard system\n+directories.  The exact search directory list depends on the target\n+system, how GCC is configured, and where it is installed.  You can\n+find the default search directory list for your version of CPP by\n+invoking it with the @option{-v} option.  For example,\n \n-You may put @option{-I-} at any point in your list of @option{-I} options.\n-This has two effects.  First, directories appearing before the\n-@option{-I-} in the list are searched only for headers requested with\n-quote marks.  Directories after @option{-I-} are searched for all\n-headers.  Second, the directory containing the current file is not\n-searched for anything, unless it happens to be one of the directories\n-named by an @option{-I} switch.  @option{-I-} is deprecated, @option{-iquote}\n-should be used instead.\n-\n-@option{-I. -I-} is not the same as no @option{-I} options at all, and does\n-not cause the same behavior for @samp{<>} includes that @samp{\"\"}\n-includes get with no special options.  @option{-I.} searches the\n-compiler's current working directory for header files.  That may or may\n-not be the same as the directory containing the current file.\n-\n-If you need to look for headers in a directory named @file{-}, write\n-@option{-I./-}.\n+@smallexample\n+cpp -v /dev/null -o /dev/null\n+@end smallexample\n \n-There are several more ways to adjust the header search path.  They are\n-generally less useful.  @xref{Invocation}.\n+There are a number of command-line options you can use to add\n+additional directories to the search path.  \n+The most commonly-used option is @option{-I@var{dir}}, which causes \n+@var{dir} to be searched after the current directory (for the quote \n+form of the directive) and ahead of the standard system directories.\n+You can specify multiple @option{-I} options on the command line, \n+in which case the directories are searched in left-to-right order.\n+\n+If you need separate control over the search paths for the quote and \n+angle-bracket forms of the @samp{#include} directive, you can use the\n+@option{-iquote} and/or @option{-isystem} options instead of @option{-I}.\n+@xref{Invocation}, for a detailed description of these options, as \n+well as others that are less generally useful.\n+\n+If you specify other options on the command line, such as @option{-I},\n+that affect where the preprocessor searches for header files, the\n+directory list printed by the @option{-v} option reflects the actual\n+search path used by the preprocessor.\n+\n+Note that you can also prevent the preprocessor from searching any of\n+the default system header directories with the @option{-nostdinc}\n+option.  This is useful when you are compiling an operating system\n+kernel or some other program that does not use the standard C library\n+facilities, or the standard C library itself.\n \n @node Once-Only Headers\n @section Once-Only Headers\n@@ -1142,30 +1117,22 @@ because of code in macros defined in system headers.\n \n Normally, only the headers found in specific directories are considered\n system headers.  These directories are determined when GCC is compiled.\n-There are, however, two ways to make normal headers into system headers.\n-\n-The @option{-isystem} command-line option adds its argument to the list of\n-directories to search for headers, just like @option{-I}.  Any headers\n-found in that directory will be considered system headers.\n+There are, however, two ways to make normal headers into system headers:\n \n-All directories named by @option{-isystem} are searched @emph{after} all\n-directories named by @option{-I}, no matter what their order was on the\n-command line.  If the same directory is named by both @option{-I} and\n-@option{-isystem}, the @option{-I} option is ignored.  GCC provides an\n-informative message when this occurs if @option{-v} is used.\n+@itemize @bullet\n+@item\n+Header files found in directories added to the search path with the \n+@option{-isystem} and @option{-idirafter} command-line options are \n+treated as system headers for the purposes of diagnostics.\n \n+@item\n @findex #pragma GCC system_header\n There is also a directive, @code{@w{#pragma GCC system_header}}, which\n tells GCC to consider the rest of the current include file a system\n header, no matter where it was found.  Code that comes before the\n-@samp{#pragma} in the file will not be affected.  @code{@w{#pragma GCC\n+@samp{#pragma} in the file is not affected.  @code{@w{#pragma GCC\n system_header}} has no effect in the primary source file.\n-\n-On very old systems, some of the pre-defined system header directories\n-get even more special treatment.  GNU C++ considers code in headers\n-found in those directories to be surrounded by an @code{@w{extern \"C\"}}\n-block.  There is no way to request this behavior with a @samp{#pragma},\n-or from the command line.\n+@end itemize\n \n @node Macros\n @chapter Macros"}]}