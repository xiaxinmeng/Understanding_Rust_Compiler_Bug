{"sha": "abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJlNmQ4OGQ0YTVjM2JiYmNjM2I3ZDk1Y2Q4MmM4MTg4OTMzMDgxZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-10-18T22:33:15Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-10-18T22:33:15Z"}, "message": "predicates.md (splat_input_operand): Don't call input_operand for MEMs.\n\n\t* config/rs6000/predicates.md (splat_input_operand): Don't call\n\tinput_operand for MEMs.  Instead check for volatile and call\n\tmemory_address_addr_space_p with modified mode.\n\nFrom-SVN: r192590", "tree": {"sha": "bfde550d6e2de6f56f360d428c1995af98644df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfde550d6e2de6f56f360d428c1995af98644df9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13299a8e759c2c165f46cf661ef1b40e91cd831e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13299a8e759c2c165f46cf661ef1b40e91cd831e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13299a8e759c2c165f46cf661ef1b40e91cd831e"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "fb9c4e866630043fecb0c3b27b167d35f75511bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "patch": "@@ -1,3 +1,9 @@\n+2012-10-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/predicates.md (splat_input_operand): Don't call\n+\tinput_operand for MEMs.  Instead check for volatile and call\n+\tmemory_address_addr_space_p with modified mode.\n+\n 2012-10-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (rdpmc): Remove expander."}, {"sha": "fc20a5e5761520abb9da4a3ac620588fd03c0e78", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "patch": "@@ -940,12 +940,16 @@\n {\n   if (MEM_P (op))\n     {\n+      if (! volatile_ok && MEM_VOLATILE_P (op))\n+\treturn 0;\n       if (mode == DFmode)\n \tmode = V2DFmode;\n       else if (mode == DImode)\n \tmode = V2DImode;\n       else\n-\tgcc_unreachable ();        \n+\tgcc_unreachable ();\n+      return memory_address_addr_space_p (mode, XEXP (op, 0),\n+\t\t\t\t\t  MEM_ADDR_SPACE (op));\n     }\n   return input_operand (op, mode);\n })"}]}