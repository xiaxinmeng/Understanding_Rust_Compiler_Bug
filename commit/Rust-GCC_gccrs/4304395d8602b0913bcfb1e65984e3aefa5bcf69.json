{"sha": "4304395d8602b0913bcfb1e65984e3aefa5bcf69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwNDM5NWQ4NjAyYjA5MTNiY2ZiMWU2NTk4NGUzYWVmYTViY2Y2OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-10-10T11:47:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-10-10T11:47:29Z"}, "message": "decl.c (gnat_to_gnu_entity): Add assertion on the types of the parameters.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Subprogram_Type>: Add\n\tassertion on the types of the parameters.  Use KIND local variable.\n\t<E_Incomplete_Type>: Likewise.\n\nFrom-SVN: r165251", "tree": {"sha": "3e8777f65084ba98d2b4d5c19d7450e674b470f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e8777f65084ba98d2b4d5c19d7450e674b470f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4304395d8602b0913bcfb1e65984e3aefa5bcf69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4304395d8602b0913bcfb1e65984e3aefa5bcf69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4304395d8602b0913bcfb1e65984e3aefa5bcf69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4304395d8602b0913bcfb1e65984e3aefa5bcf69/comments", "author": null, "committer": null, "parents": [{"sha": "0c70025900f1242f8aa7822e1f681bb76ec12893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c70025900f1242f8aa7822e1f681bb76ec12893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c70025900f1242f8aa7822e1f681bb76ec12893"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "7f6d18e8efe9561f635764be0e89c70860eb9841", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304395d8602b0913bcfb1e65984e3aefa5bcf69/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304395d8602b0913bcfb1e65984e3aefa5bcf69/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4304395d8602b0913bcfb1e65984e3aefa5bcf69", "patch": "@@ -1,3 +1,9 @@\n+2010-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Subprogram_Type>: Add\n+\tassertion on the types of the parameters.  Use KIND local variable.\n+\t<E_Incomplete_Type>: Likewise.\n+\n 2010-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (DECL_BY_DOUBLE_REF_P): New macro."}, {"sha": "1719d1cae5adfb83cee12bc092b570faced44cc7", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304395d8602b0913bcfb1e65984e3aefa5bcf69/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304395d8602b0913bcfb1e65984e3aefa5bcf69/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=4304395d8602b0913bcfb1e65984e3aefa5bcf69", "patch": "@@ -4149,6 +4149,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\tgnu_param = NULL_TREE;\n \t      }\n \n+\t    /* The failure of this assertion will very likely come from an\n+\t       order of elaboration issue for the type of the parameter.  */\n+\t    gcc_assert (kind == E_Subprogram_Type\n+\t\t\t|| !TYPE_IS_DUMMY_P (gnu_param_type));\n+\n \t    if (gnu_param)\n \t      {\n \t\t/* If it's an exported subprogram, we build a parameter list\n@@ -4246,7 +4251,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  gnu_stub_param_list = nreverse (gnu_stub_param_list);\n \tgnu_cico_list = nreverse (gnu_cico_list);\n \n-\tif (Ekind (gnat_entity) == E_Function)\n+\tif (kind == E_Function)\n \t  Set_Mechanism (gnat_entity, return_unconstrained_p\n \t\t\t\t      || return_by_direct_ref_p\n \t\t\t\t      || return_by_invisi_ref_p\n@@ -4396,8 +4401,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   full view, whichever is present.  This is used in all the tests\n \t   below.  */\n \tEntity_Id full_view\n-\t  = (IN (Ekind (gnat_entity), Incomplete_Kind)\n-\t     && From_With_Type (gnat_entity))\n+\t  = (IN (kind, Incomplete_Kind) && From_With_Type (gnat_entity))\n \t    ? Non_Limited_View (gnat_entity)\n \t    : Present (Full_View (gnat_entity))\n \t      ? Full_View (gnat_entity)"}]}