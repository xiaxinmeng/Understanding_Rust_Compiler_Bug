{"sha": "991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkxYjkxNDk3ZmQ1MGY2ZTcwZTVmMmMwY2ZhOTZlMWI3NDE1N2JkYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-20T09:36:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-20T11:56:43Z"}, "message": "debug/92763 keep DIEs that might be used in DW_TAG_inlined_subroutine\n\nWe were pruning type-local subroutine DIEs if their context is unused\ndespite us later needing those DIEs as abstract origins for inlines.\nThe patch makes code already present for -fvar-tracking-assignments\nunconditional.\n\n2020-01-20  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/92763\n\t* dwarf2out.c (prune_unused_types): Unconditionally mark\n\tcalled function DIEs.\n\n\t* g++.dg/debug/pr92763.C: New testcase.", "tree": {"sha": "c3ca6b40e715fc26295a664e2ac29e2492217bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3ca6b40e715fc26295a664e2ac29e2492217bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24b178184f260a6ec1516cfb8bb8876874a078a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b178184f260a6ec1516cfb8bb8876874a078a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b178184f260a6ec1516cfb8bb8876874a078a7"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "dd2e329b995d8fd71549ef897df1165912cb97d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "patch": "@@ -1,3 +1,9 @@\n+2020-01-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/92763\n+\t* dwarf2out.c (prune_unused_types): Unconditionally mark\n+\tcalled function DIEs.\n+\n 2020-01-20  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/93199"}, {"sha": "fe46c7e1eee8f977e71cb36b5ff13a8413516739", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "patch": "@@ -29529,9 +29529,9 @@ prune_unused_types (void)\n   for (i = 0; base_types.iterate (i, &base_type); i++)\n     prune_unused_types_mark (base_type, 1);\n \n-  /* For -fvar-tracking-assignments, also set the mark on nodes that could be\n-     referenced by DW_TAG_call_site DW_AT_call_origin (i.e. direct call\n-     callees).  */\n+  /* Also set the mark on nodes that could be referenced by\n+     DW_TAG_call_site DW_AT_call_origin (i.e. direct call callees) or\n+     by DW_TAG_inlined_subroutine origins.  */\n   cgraph_node *cnode;\n   FOR_EACH_FUNCTION (cnode)\n     if (cnode->referred_to_p (false))\n@@ -29540,8 +29540,7 @@ prune_unused_types (void)\n \tif (die == NULL || die->die_mark)\n \t  continue;\n \tfor (cgraph_edge *e = cnode->callers; e; e = e->next_caller)\n-\t  if (e->caller != cnode\n-\t      && opt_for_fn (e->caller->decl, flag_var_tracking_assignments))\n+\t  if (e->caller != cnode)\n \t    {\n \t      prune_unused_types_mark (die, 1);\n \t      break;"}, {"sha": "220485b26315cabef875fbb6e2da31a0aeb8ce81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "patch": "@@ -1,3 +1,8 @@\n+2020-01-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/92763\n+\t* g++.dg/debug/pr92763.C: New testcase.\n+\n 2020-01-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/92536"}, {"sha": "8e32d60039f765246f68f9a810a477944074f61d", "filename": "gcc/testsuite/g++.dg/debug/pr92763.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr92763.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991b91497fd50f6e70e5f2c0cfa96e1b74157bdc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr92763.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr92763.C?ref=991b91497fd50f6e70e5f2c0cfa96e1b74157bdc", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-fno-var-tracking-assignments -fopenmp\" }\n+\n+struct A\n+{\n+  typedef int T;\n+  #pragma omp declare reduction (y : T : [&omp_out, &omp_in]() { omp_out += omp_in; return 0; }()) initializer (omp_priv = [omp_orig]() { return omp_orig; }())\n+  static void foo ();\n+};\n+\n+void\n+A::foo ()\n+{\n+  int r = 0, s = 0;\n+  #pragma omp parallel for reduction (y : r, s)\n+  for (int i = 0; i < 1; i++)\n+    {\n+    }\n+}"}]}