{"sha": "6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "node_id": "C_kwDOANBUbNoAKDYxNDRjZjI5MGY5YzdhMmJiNzU3ZDNhMDU4YTRmZjVhYTU0NGRkMzU", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-12T15:34:35Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-12T15:34:35Z"}, "message": "Merge commit 'b0edfa0ef02c0f4820cec0601a4fd85aba516428^' into HEAD", "tree": {"sha": "277d482f0a207b804ecd722d83243b9c80fb8254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/277d482f0a207b804ecd722d83243b9c80fb8254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15c3184e88a591e472590d4ecec8d74c5acd6097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c3184e88a591e472590d4ecec8d74c5acd6097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c3184e88a591e472590d4ecec8d74c5acd6097"}, {"sha": "bd96a6a8a6689ac8f65877b2173f48d231e9f4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd96a6a8a6689ac8f65877b2173f48d231e9f4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd96a6a8a6689ac8f65877b2173f48d231e9f4af"}], "stats": {"total": 196841, "additions": 106171, "deletions": 90670}, "files": [{"sha": "46f6e72a797e934cd6faee0b9c8db3cf24b85115", "filename": "ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,3 +1,21 @@\n+2023-01-04  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* MAINTAINERS: Add Gaius Mulley as Modula-2 front-end maintainer.\n+\n+2022-12-31  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.def: Do not build shared libffi.\n+\t* Makefile.in: Regenerate.\n+\n+2022-12-21  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* Makefile.def: Add configure-gdb dependencies\n+\ton all-gmp and all-mpfr.\n+\t* configure.ac: Split out MPC checking from MPFR.\n+\tRequire GMP and MPFR if the gdb directory exist.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2022-12-14  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* configure.ac (target_libraries): Add target-libgm2."}, {"sha": "5a7ad2fe7faaff72abc06331c95cffc7c113203b", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -163,6 +163,7 @@ c++\t\t\tJason Merrill\t\t<jason@redhat.com>\n c++\t\t\tNathan Sidwell\t\t<nathan@acm.org>\n D front end\t\tIain Buclaw\t\t<ibuclaw@gdcproject.org>\n go\t\t\tIan Lance Taylor\t<ian@airs.com>\n+Modula-2 front end\tGaius Mulley\t\t<gaiusmod2@gmail.com>\n objective-c/c++\t\tMike Stump\t\t<mikestump@comcast.net>\n objective-c/c++\t\tIain Sandoe\t\t<iain@sandoe.co.uk>\n Rust\t\t\tArthur Cohen\t\t<arthur.cohen@embecosm.com>"}, {"sha": "35e994eb77efcc4d09afde8c9473216703623a2e", "filename": "Makefile.def", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -181,7 +181,8 @@ target_modules = { module= libtermcap; no_check=true;\n                    missing=maintainer-clean; };\n target_modules = { module= winsup; };\n target_modules = { module= libgloss; no_check=true; };\n-target_modules = { module= libffi; no_install=true; };\n+target_modules = { module= libffi; no_install=true;\n+                   extra_configure_flags='--disable-shared --with-pic'; };\n target_modules = { module= zlib; bootstrap=true; };\n target_modules = { module= rda; };\n target_modules = { module= libada; };\n@@ -415,6 +416,8 @@ dependencies = { module=configure-isl; on=all-gmp; };\n dependencies = { module=all-intl; on=all-libiconv; };\n \n // Host modules specific to gdb.\n+dependencies = { module=configure-gdb; on=all-gmp; };\n+dependencies = { module=configure-gdb; on=all-mpfr; };\n dependencies = { module=configure-gdb; on=all-intl; };\n dependencies = { module=configure-gdb; on=configure-sim; };\n dependencies = { module=configure-gdb; on=all-bfd; };"}, {"sha": "06a9398e172212a21a7ec540a0cf196dbd268cc7", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -55467,7 +55467,7 @@ configure-target-libffi:\n \t  $$s/$$module_srcdir/configure \\\n \t  --srcdir=$${topdir}/$$module_srcdir \\\n \t  $(TARGET_CONFIGARGS) --build=${build_alias} --host=${target_alias} \\\n-\t  --target=${target_alias}  \\\n+\t  --target=${target_alias} --disable-shared --with-pic \\\n \t  || exit 1\n @endif target-libffi\n \n@@ -66503,6 +66503,8 @@ configure-libcc1: maybe-configure-gcc\n all-libcc1: maybe-all-gcc\n all-c++tools: maybe-all-gcc\n all-utils: maybe-all-libiberty\n+configure-gdb: maybe-all-gmp\n+configure-gdb: maybe-all-mpfr\n configure-gdb: maybe-all-intl\n configure-gdb: maybe-all-bfd\n configure-gdb: maybe-all-libiconv"}, {"sha": "5593dfaf5be4b60d7ce7856e8652f5c372490bcc", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -170,7 +170,7 @@\n \t* server.cc: New.\n \n \f\n-Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+Copyright (C) 2020-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "56cba0901351e9b80c6cdb568a58a10fbcf0c1a0", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n # Makefile for c++tools\n-#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "23e98c8e7216040d1f6dff0b55bc057c61399214", "filename": "c++tools/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n # Configure script for c++tools\n-#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n #\n # This file is free software; you can redistribute it and/or modify it"}, {"sha": "d1f009cab64fef0956421784bba23b09812db5ad", "filename": "c++tools/resolver.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fresolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fresolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC."}, {"sha": "96277007c94a8359d76554860e1589f0e6d822bb", "filename": "c++tools/resolver.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fresolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fresolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC."}, {"sha": "eded5c50628aabf8589f587542fafe68280ecc44", "filename": "c++tools/server.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/c%2B%2Btools%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fserver.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\n-   Copyright (C) 2018-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2018-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC.\n@@ -319,7 +319,7 @@ static void ATTRIBUTE_NORETURN\n print_version (void)\n {\n   fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n-  fprintf (stdout, \"Copyright %s 2018-2022 Free Software Foundation, Inc.\\n\",\n+  fprintf (stdout, \"Copyright %s 2018-2023 Free Software Foundation, Inc.\\n\",\n \t   (\"(C)\"));\n   fnotice (stdout,\n \t   (\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "d6716e38e99e3a779851775cc142002c4257af61", "filename": "configure", "status": "modified", "additions": 59, "deletions": 8, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -7906,7 +7906,20 @@ _ACEOF\n \n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  require_gmp=yes\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -8041,7 +8054,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -8151,7 +8164,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h\" >&5\n $as_echo_n \"checking for the correct version of mpc.h... \" >&6; }\n@@ -8205,18 +8218,17 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr/mpc libraries\" >&5\n-$as_echo_n \"checking for the correct version of the gmp/mpfr/mpc libraries... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr libraries\" >&5\n+$as_echo_n \"checking for the correct version of the gmp/mpfr libraries... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <mpc.h>\n+#include <mpfr.h>\n int\n main ()\n {\n \n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -8225,6 +8237,37 @@ main ()\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }; have_gmp=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the mpc libraries\" >&5\n+$as_echo_n \"checking for the correct version of the mpc libraries... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <mpc.h>\n+int\n+main ()\n+{\n+\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -8253,7 +8296,8 @@ rm -f core conftest.err conftest.$ac_objext \\\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -8262,6 +8306,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    else\n+      as_fn_error $? \"Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    fi\n   fi\n fi\n "}, {"sha": "737c1a1172be31b552012e29629fbeb85a47c149", "filename": "configure.ac", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1482,7 +1482,20 @@ AC_SUBST(PGO_BUILD_LTO_CFLAGS)\n _LT_CHECK_OBJDIR\n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  require_gmp=yes\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -1597,7 +1610,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -1637,7 +1650,7 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     AC_MSG_CHECKING([for the correct version of mpc.h])\n     AC_TRY_COMPILE([#include <mpc.h>],[\n@@ -1656,11 +1669,10 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    AC_MSG_CHECKING([for the correct version of the gmp/mpfr/mpc libraries])\n-    AC_TRY_LINK([#include <mpc.h>],[\n+    AC_MSG_CHECKING([for the correct version of the gmp/mpfr libraries])\n+    AC_TRY_LINK([#include <mpfr.h>],[\n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -1669,6 +1681,17 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    AC_MSG_CHECKING([for the correct version of the mpc libraries])\n+    AC_TRY_LINK([#include <mpc.h>],[\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -1684,7 +1707,8 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -1693,6 +1717,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.])\n+    else\n+      AC_MSG_ERROR([Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.])\n+    fi\n   fi\n fi\n "}, {"sha": "9c1dd3a17f48864440b03bca7e3e1b73a6821711", "filename": "contrib/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,3 +1,19 @@\n+2022-12-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Add contrib folder.\n+\n+2022-12-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* dg-out-generator.pl: New file.\n+\n+2022-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Simplify.\n+\n+2022-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Skip Makefile and libffi warnings.\n+\n 2022-12-19  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Support digits in PR's"}, {"sha": "cd5e99d0a0c4cc2c7f31f8b48135db579cfcec77", "filename": "contrib/dg-out-generator.pl", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Fdg-out-generator.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Fdg-out-generator.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-out-generator.pl?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env perl\n+#\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+# Contributed by Arsen Arsenovi\u0107.\n+#\n+# This script is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# This script reads program output on STDIN, and out of it produces a block of\n+# dg-output lines that can be yanked at the end of a file.  It will escape\n+# special ARE and Tcl constructs automatically.\n+#\n+# Each argument passed on the standard input is treated as a string to be\n+# replaced by ``.*'' in the final result.  This is intended to mask out build\n+# paths, filenames, etc.\n+#\n+# Usage example:\n+\n+# $ g++-13 -fcontracts -o test \\\n+#  'g++.dg/contracts/contracts-access1.C' && \\\n+#   ./test |& dg-out-generator.pl 'g++.dg/contracts/contracts-access1.C'\n+# // { dg-output {contract violation in function Base::b at .*:11: pub > 0(\\n|\\r\\n|\\r)} }\n+# // { dg-output {\\[level:default, role:default, continuation mode:never\\](\\n|\\r\\n|\\r)} }\n+# // { dg-output {terminate called without an active exception(\\n|\\r\\n|\\r)} }\n+\n+# You can now freely dump the above into your testcase.\n+\n+use strict;\n+use warnings;\n+use POSIX 'floor';\n+\n+my $escapees = '(' . join ('|', map { quotemeta } @ARGV) . ')';\n+\n+sub gboundary($)\n+{\n+  my $str = shift;\n+  my $sz = 10.0;\n+  for (;;)\n+    {\n+      my $bnd = join '', (map chr 64 + rand 27, 1 .. floor $sz);\n+      return $bnd unless index ($str, $bnd) >= 0;\n+      $sz += 0.1;\n+    }\n+}\n+\n+while (<STDIN>)\n+  {\n+    # Escape our escapees.\n+    my $boundary;\n+    if (@ARGV) {\n+      # Checking this is necessary to avoid a spurious .* between all\n+      # characters if no arguments are passed.\n+      $boundary = gboundary $_;\n+      s/$escapees/$boundary/g;\n+    }\n+\n+    # Quote stuff special in Tcl ARE.  This step also effectively nulls any\n+    # concern about escaping.  As long as all curly braces are escaped, the\n+    # string will, when passing through the braces rule of Tcl, be identical to\n+    # the input.\n+    s/([[\\]*+?{}()\\\\])/\\\\$1/g;\n+\n+    # Newlines should be more tolerant.\n+    s/\\n$/(\\\\n|\\\\r\\\\n|\\\\r)/;\n+\n+    # Then split out the boundary, replacing it with .*.\n+    s/$boundary/.*/g if defined $boundary;\n+\n+    # Then, let's print it in a dg-output block.  If you'd prefer /* keep in\n+    # mind that if your string contains */ it could terminate the comment\n+    # early.  Maybe add an extra s!\\*/!*()/!g or something.\n+    print \"// { dg-output {$_} }\\n\";\n+  }\n+\n+# File Local Vars:\n+# indent-tabs-mode: nil\n+# End:"}, {"sha": "06410cf244459a96acd1352d6fd68fe892342e27", "filename": "contrib/filter-clang-warnings.py", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -71,18 +71,19 @@ def skip_warning(filename, message):\n args = parser.parse_args()\n \n lines = [line.strip() for line in open(args.log)]\n-total = 0\n messages = set()\n for line in lines:\n     token = ': warning: '\n     i = line.find(token)\n     if i != -1:\n         location = line[:i]\n         message = line[i + len(token):]\n+        if '/libffi/' in location or location.startswith('Makefile'):\n+            continue\n         if not skip_warning(location, message):\n-            total += 1\n             messages.add(line)\n \n for line in sorted(messages):\n     print(line)\n-print('\\nTotal warnings: %d' % total)\n+\n+print('\\nTotal warnings: %d' % len(messages))"}, {"sha": "fcae846fb1e521412567f4e8581a8fbcd6beaa04", "filename": "contrib/update-copyright.py", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Fupdate-copyright.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/contrib%2Fupdate-copyright.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fupdate-copyright.py?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -680,6 +680,18 @@ def get_line_filter (self, dir, filename):\n             return re.compile ('// \\(C\\) Copyright Jeremy Siek')\n         return GenericFilter.get_line_filter (self, dir, filename)\n \n+class ContribFilter(GenericFilter):\n+    def __init__ (self):\n+        GenericFilter.__init__ (self)\n+\n+        self.skip_files |= set ([\n+                # A different copyrights.\n+                'unicode-license.txt',\n+                'Info.plist',\n+                # Contains CR (^M).\n+                'repro_fail',\n+                ])\n+\n class GCCCopyright (Copyright):\n     def __init__ (self, errors):\n         Copyright.__init__ (self, errors)\n@@ -699,6 +711,7 @@ def __init__ (self, errors):\n         self.add_external_author ('Advanced Micro Devices Inc.')\n         self.add_external_author ('Ami Tavory and Vladimir Dreizin, IBM-HRL.')\n         self.add_external_author ('Cavium Networks.')\n+        self.add_external_author ('David Malcolm')\n         self.add_external_author ('Faraday Technology Corp.')\n         self.add_external_author ('Florida State University')\n         self.add_external_author ('Gerard Jungman')\n@@ -738,7 +751,7 @@ def __init__ (self):\n         # boehm-gc is imported from upstream.\n         self.add_dir ('c++tools')\n         self.add_dir ('config', ConfigFilter())\n-        # contrib isn't really part of GCC.\n+        self.add_dir ('contrib', ContribFilter())\n         self.add_dir ('fixincludes')\n         self.add_dir ('gcc', GCCFilter())\n         self.add_dir (os.path.join ('gcc', 'testsuite'), TestsuiteFilter())"}, {"sha": "e90a67144e34e94fe1dbc489bc2c23ee0d5217dc", "filename": "gcc/ABOUT-GCC-NLS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FABOUT-GCC-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FABOUT-GCC-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-GCC-NLS?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -49,7 +49,7 @@ configure GCC with --enable-maintainer-mode to get the master catalog\n rebuilt.\n \n \f\n-Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "50218d045109c87c02036423b6a7a85ab7dccbb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 141, "deletions": 34422, "changes": 34563, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35"}, {"sha": "248b5dea178a45a071c45095ee9eba7b8e589db9", "filename": "gcc/ChangeLog-2022", "status": "added", "additions": 35086, "deletions": 0, "changes": 35086, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FChangeLog-2022", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FChangeLog-2022", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2022?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35"}, {"sha": "9d39ee8c855bff5818dd74e1fe9f8b615735da61", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1 +1 @@\n-20221220\n+20230105"}, {"sha": "6b70dc7825c50623e6da02f1e7c4576ca1a87bfd", "filename": "gcc/LANGUAGES", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FLANGUAGES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FLANGUAGES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FLANGUAGES?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -57,7 +57,7 @@ Feb 1, 1998:\n     DEFTREECODE (CLASS_METHOD_DECL, \"class_method_decl\", 'd', 0)\n \n \f\n-Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "bb8e9f50fd0273d92d57f87d692eff7f2de10587", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,7 +1,7 @@\n # Makefile for GNU Compiler Collection\n # Run 'configure' to generate Makefile from Makefile.in\n \n-# Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -731,6 +731,7 @@ htmldir = @htmldir@\n USE_NLS = @USE_NLS@\n \n # Internationalization library.\n+INCINTL = @INCINTL@\n LIBINTL = @LIBINTL@\n LIBINTL_DEP = @LIBINTL_DEP@\n \n@@ -822,7 +823,7 @@ BUILD_LINKERFLAGS = $(BUILD_CXXFLAGS)\n # Native linker and preprocessor flags.  For x-fragment overrides.\n BUILD_LDFLAGS=@BUILD_LDFLAGS@\n BUILD_CPPFLAGS= -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n-\t\t-I$(srcdir)/../include @INCINTL@ $(CPPINC) $(CPPFLAGS)\n+\t\t-I$(srcdir)/../include $(INCINTL) $(CPPINC) $(CPPFLAGS)\n \n # Actual name to use when installing a native compiler.\n GCC_INSTALL_NAME := $(shell echo gcc|sed '$(program_transform_name)')\n@@ -1130,7 +1131,7 @@ BUILD_ERRORS = build/errors.o\n # currently being compiled, in both source trees, to be examined as well.\n # libintl.h will be found in ../intl if we are using the included libintl.\n INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n-\t   -I$(srcdir)/../include @INCINTL@ \\\n+\t   -I$(srcdir)/../include $(INCINTL) \\\n \t   $(CPPINC) $(CODYINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n \t   $(ISLINC)\n "}, {"sha": "af6904728833193ba57e74ec5bdd4070992efe42", "filename": "gcc/README.Portability", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n This file is intended to contain a few notes about writing C code\n within GCC so that it compiles without error on the full range of"}, {"sha": "57164ff5f089d6f76cdaffbe926269e5c68df441", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-dnl Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+dnl Copyright (C) 2005-2023 Free Software Foundation, Inc.\n dnl\n dnl This file is part of GCC.\n dnl"}, {"sha": "c492ee71f273aa9898526a11fd1b2669a5cb2be0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 82, "deletions": 11020, "changes": 11102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35"}, {"sha": "19c0a4d5d4245818e4273d18064f06bf51f432ab", "filename": "gcc/ada/ChangeLog-2022", "status": "added", "additions": 11068, "deletions": 0, "changes": 11068, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2FChangeLog-2022", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2FChangeLog-2022", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2022?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35"}, {"sha": "d518e6720a21c7bbcb390b3d94212dba3cb9ea5d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1388,13 +1388,23 @@ package body Checks is\n \n       function Denotes_Explicit_Dereference (Obj : Node_Id) return Boolean is\n       begin\n-         return\n-           Nkind (Obj) = N_Explicit_Dereference\n-             or else\n-               (Is_Entity_Name (Obj)\n-                 and then Present (Renamed_Object (Entity (Obj)))\n-                 and then Nkind (Renamed_Object (Entity (Obj))) =\n-                                              N_Explicit_Dereference);\n+         if Is_Entity_Name (Obj) then\n+            return Present (Renamed_Object (Entity (Obj)))\n+              and then\n+                Denotes_Explicit_Dereference (Renamed_Object (Entity (Obj)));\n+\n+         --  This routine uses the rules of the language so we need to exclude\n+         --  rewritten constructs that introduce artificial dereferences.\n+\n+         elsif Nkind (Obj) = N_Explicit_Dereference then\n+            return not Is_Captured_Function_Call (Obj)\n+              and then not\n+                (Nkind (Parent (Obj)) = N_Object_Renaming_Declaration\n+                  and then Is_Return_Object (Defining_Entity (Parent (Obj))));\n+\n+         else\n+            return False;\n+         end if;\n       end Denotes_Explicit_Dereference;\n \n       ----------------------------------------\n@@ -1497,9 +1507,7 @@ package body Checks is\n                              and then not Is_Aliased_Unconstrained_Component)\n                    or else (Ada_Version >= Ada_2005\n                              and then not Is_Constrained (T_Typ)\n-                             and then Denotes_Explicit_Dereference (Lhs)\n-                             and then Nkind (Original_Node (Lhs)) /=\n-                                        N_Function_Call))\n+                             and then Denotes_Explicit_Dereference (Lhs)))\n       then\n          T_Typ := Get_Actual_Subtype (Lhs);\n       end if;"}, {"sha": "77c231e1d4f9bee379a23c5ffd00781a11f13d97", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 5, "deletions": 100, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -30,7 +30,6 @@ with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n with Errout;         use Errout;\n-with Exp_Ch6;        use Exp_Ch6;\n with Exp_Prag;       use Exp_Prag;\n with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n@@ -1616,40 +1615,8 @@ package body Contracts is\n       --  preserving the result for the purpose of evaluating postconditions,\n       --  contracts, type invariants, etc.\n \n-      --  In the case of a regular function, generate:\n+      --  In the case of a function, generate:\n       --\n-      --  function Original_Func (X : in out Integer) return Typ is\n-      --     <prologue renamings>\n-      --     <preconditions>\n-      --\n-      --     function _Wrapped_Statements return Typ is\n-      --        <original declarations>\n-      --     begin\n-      --        <original statements>\n-      --     end;\n-      --\n-      --  begin\n-      --     declare\n-      --        type Axx is access all Typ;\n-      --        Rxx : constant Axx := _Wrapped_Statements'reference;\n-      --        Result_Obj : Typ renames Rxx.all;\n-      --\n-      --     begin\n-      --        <postconditions statments>\n-      --        return Rxx.all;\n-      --     end;\n-      --  end;\n-      --\n-      --  This sequence is recognized by Expand_Simple_Function_Return as a\n-      --  tail call, in other words equivalent to \"return _Wrapped_Statements;\"\n-      --  and thus the copy to the anonymous return object is elided, including\n-      --  a pair of calls to Adjust/Finalize for types requiring finalization.\n-\n-      --  Note that an extended return statement does not yield the same result\n-      --  because the copy of the return object is not elided by GNAT for now.\n-\n-      --  Or else, in the case of a BIP function, generate:\n-\n       --  function Original_Func (X : in out Integer) return Typ is\n       --     <prologue renamings>\n       --     <preconditions>\n@@ -1733,9 +1700,9 @@ package body Contracts is\n            (Handled_Statement_Sequence (Body_Decl), Stmts);\n \n       --  Generate the post-execution statements and the extended return\n-      --  when the subprogram being wrapped is a BIP function.\n+      --  when the subprogram being wrapped is a function.\n \n-      elsif Is_Build_In_Place_Result_Type (Ret_Type) then\n+      else\n          Set_Statements (Handled_Statement_Sequence (Body_Decl), New_List (\n            Make_Extended_Return_Statement (Loc,\n              Return_Object_Declarations => New_List (\n@@ -1751,65 +1718,6 @@ package body Contracts is\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => Stmts))));\n-\n-      --  Declare a renaming of the result of the call to the wrapper and\n-      --  append a return of the result of the call when the subprogram is\n-      --  a function, after manually removing the side effects. Note that\n-      --  we cannot call Remove_Side_Effects here because nothing has been\n-      --  analyzed yet and we cannot return the renaming itself because\n-      --  Expand_Simple_Function_Return expects an explicit dereference.\n-\n-      else\n-         declare\n-            A_Id : constant Node_Id := Make_Temporary (Loc, 'A');\n-            R_Id : constant Node_Id := Make_Temporary (Loc, 'R');\n-\n-         begin\n-            Set_Statements (Handled_Statement_Sequence (Body_Decl), New_List (\n-              Make_Block_Statement (Loc,\n-\n-                Declarations => New_List (\n-                  Make_Full_Type_Declaration (Loc,\n-                    Defining_Identifier => A_Id,\n-                    Type_Definition     =>\n-                      Make_Access_To_Object_Definition (Loc,\n-                        All_Present        => True,\n-                        Null_Exclusion_Present => True,\n-                        Subtype_Indication =>\n-                          New_Occurrence_Of (Ret_Type, Loc))),\n-\n-                  Make_Object_Declaration (Loc,\n-                    Defining_Identifier => R_Id,\n-                    Object_Definition   => New_Occurrence_Of (A_Id, Loc),\n-                    Constant_Present    => True,\n-                    Expression          =>\n-                      Make_Reference (Loc,\n-                        Make_Function_Call (Loc,\n-                          Name => New_Occurrence_Of (Wrapper_Id, Loc)))),\n-\n-                  Make_Object_Renaming_Declaration (Loc,\n-                    Defining_Identifier => Result,\n-                    Subtype_Mark        => New_Occurrence_Of (Ret_Type, Loc),\n-                    Name                =>\n-                      Make_Explicit_Dereference (Loc,\n-                        New_Occurrence_Of (R_Id, Loc)))),\n-\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => Stmts))));\n-\n-            Append_To (Stmts,\n-              Make_Simple_Return_Statement (Loc,\n-                Expression =>\n-                  Make_Explicit_Dereference (Loc,\n-                    New_Occurrence_Of (R_Id, Loc))));\n-\n-            --  It is required for Is_Related_To_Func_Return to return True\n-            --  that the temporary Rxx be related to the expression of the\n-            --  simple return statement built just above.\n-\n-            Set_Related_Expression (R_Id, Expression (Last (Stmts)));\n-         end;\n       end if;\n    end Build_Subprogram_Contract_Wrapper;\n \n@@ -3479,18 +3387,15 @@ package body Contracts is\n       --       end _Wrapped_Statements;\n \n       --    begin\n-      --       declare\n-      --          Result : ... renames _Wrapped_Statements;\n-      --       begin\n+      --       return Result : constant ... := _Wrapped_Statements do\n       --          <refined postconditions from body>\n       --          <postconditions from body>\n       --          <postconditions from spec>\n       --          <inherited postconditions>\n       --          <contract case consequences>\n       --          <invariant check of function result>\n       --          <invariant and predicate checks of parameters\n-      --          return Result;\n-      --       end;\n+      --       end return;\n       --    end Original_Code;\n \n       --  Step 1: augment contracts list with postconditions associated with"}, {"sha": "634bbc94c31ff7df2a4db10334067fdb26fa22fa", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -3704,6 +3704,8 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   containing a component whose type has the user-defined \"=\" as\n   primitive). Note that the user-defined \"=\" must be a primitive operator\n   in order to trigger the warning.\n+  See RM-4.5.2(14/3-15/5, 21, 24/3, 32.1/1)\n+  for the exact Ada rules on composability of \"=\".\n \n   The default is that these warnings are not given.\n "}, {"sha": "639534d90e67a082bd1ae0afb363776af75fb726", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 325, "deletions": 506, "changes": 831, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -496,18 +496,18 @@ building specialized scripts.\n \n    where\n \n-   * ``switches`` is an optional sequence of switches defining such properties as\n-     the formatting rules, the source search path, and the destination for the\n-     output source file\n+   * ``switches`` is an optional sequence of switches defining such properties\n+     as the formatting rules, the source search path, and the destination for\n+     the output source file\n \n    * ``filename`` is the name of the source file to reformat; wildcards\n      or several file names on the same gnatpp command are allowed. The\n      file name may contain path information; it does not have to follow\n      the GNAT file naming rules\n \n-     Note that it is no longer necessary to specify the Ada language version;\n-     ``gnatpp`` can process Ada source code written in any version from\n-     Ada 83 onward without specifying any language version switch.\n+   Note that it is no longer necessary to specify the Ada language version;\n+   ``gnatpp`` can process Ada source code written in any version from Ada 83\n+   onward without specifying any language version switch.\n \n \n    .. _Switches_for_gnatpp:\n@@ -519,8 +519,8 @@ building specialized scripts.\n    ``gnatpp``, organized by category.\n \n    You specify a switch by supplying a name and generally also a value.\n-   In many cases the values for a switch with a given name are incompatible with\n-   each other\n+   In many cases the values for a switch with a given name are incompatible\n+   with each other\n    (for example the switch that controls the casing of a reserved word may have\n    exactly one value: upper case, lower case, or\n    mixed case) and thus exactly one such switch can be in effect for an\n@@ -532,191 +532,267 @@ building specialized scripts.\n    Abbreviated forms (the name appearing once, followed by each value) are\n    not permitted.\n \n-   .. _Alignment_Control:\n \n-   Alignment Control\n-   ^^^^^^^^^^^^^^^^^\n+   .. _Layout_Control:\n \n-   .. index:: Alignment control in gnatpp\n-\n-   Programs can be easier to read if certain constructs are vertically aligned.\n-   By default, alignment of the following constructs is set ON:\n-\n-     * ``:`` in declarations,\n-     * ``:=`` in initializations in declarations,\n-     * ``:=`` in assignment statements,\n-     * ``=>`` in associations, and\n-     * ``at`` keywords in the component clauses in record representation clauses.\n-\n-   In addition, ``in`` and ``out`` in parameter specifications are lined up.\n+   Layout Control\n+   ^^^^^^^^^^^^^^\n \n-   .. index:: --no-alignment (gnatpp)\n-   .. index:: --alignment (gnatpp)\n-   .. index:: --no-align-modes (gnatpp)\n+   .. index:: Layout control in gnatpp\n \n+   ``gnatpp`` provides a layout switch which controls the general\n+   formatting style:\n \n-   :switch:`--no-alignment`\n-     Set alignment to OFF\n+   .. index:: layout(gnatpp)\n \n+   :switch:`--layout=default|minimal|compact|tall`\n \n-   :switch:`--alignment`\n-     Set alignment to ON\n+   :switch:`default`\n+     The default layout will follow a compact style but add aligment and put\n+     some keywords on a separate line.\n+     \n+     Alignment is added in the the following constructs:\n \n+     * ``:`` in declarations,\n+     * ``:=`` in initializations in declarations,\n+     * ``:=`` in assignment statements,\n+     * ``=>`` in associations, and\n+     * ``at`` keywords in the component clauses in record representation\n+       clauses.\n+\n+     In addition, ``in`` and ``out`` keywords in parameter specifications are\n+     also lined up.\n+\n+     The keyword ``is`` is placed on a separate line in a subprogram body in\n+     case the spec occupies more than one line.\n+\n+     The keyword ``return`` is placed on a separate line if a subprogram spec\n+     does not fit on one line.\n+\n+   :switch:`minimal`\n+     The minimal layout will avoid changing the source layout by keeping all\n+     line breaks from the original source (it will not insert or delete any).\n+     It will add indentation where appropriate as long as it does not exceed\n+     the line length limit.\n+\n+   :switch:`compact`\n+     The compact layout will avoid adding line breaks and alignment by packing\n+     as many subexpressions on the same line as possible.\n+\n+     Whole-line comments that form a paragraph will be filled in typical word\n+     processor style (that is, moving words between lines to make them similar\n+     in length, except the last one which may be shorter).\n+\n+     For each whole-line comment that does not end with two hyphens, inserts\n+     spaces if necessary after the starting two hyphens to ensure that there\n+     are at least two spaces preceding the first non-blank character of the\n+     comment.\n+\n+   :switch:`tall`\n+     The tall layout will favor adding lines breaks and alignment. It adds\n+     all the alignment and line breaks defined in the ``default`` option,\n+     and in addition:\n+\n+     * Places the keyword ``loop`` in FOR and WHILE loop statements on a\n+       separate line\n+     * Places the keyword ``then`` in IF statements on a separate line\n+     * Places each keyword ``use`` in USE clauses on a separate line\n+     * Splits the line just before the keyword ``record`` in a RECORD type\n+       declaration\n+     * Indents named blocks and loop statments with respect to the name\n+     * When necessary, splits binary operators always before the operator\n+     * Inserts an extra blank before various occurrences of ``(`` and ``:``\n+     * When it is necessary to split a line between two subexpressions (because\n+       otherwise the construct would exceed --max-line-length), then all such\n+       subexpressions are placed on separate lines\n+     * Formats enumeration type declarations \u201cvertically\u201d, e.g. each\n+       enumeration literal goes on a separate line\n+     * Formats array type declarations \u201cvertically\u201d, e.g. for multidimensional\n+       arrays, each index_subtype_definition or discrete_subtype_definition\n+       goes on a separate line\n+     * Format aggregates \u201cvertically\u201d if named notation is used for all\n+       component_associations, e.g. each component_association goes on a\n+       separate line\n+     * Formats case statements, case expressions, and variant parts with\n+       additional line breaks\n+     * Inserts blank lines where appropriate (between bodies and other large\n+       constructs)\n+     * Similarly to the :switch:`compact` layout, two spaces are added in the\n+       beginning of a whole-line comment when needed\n \n-   :switch:`--no-align-modes`\n-     Do not line up ``in`` and ``out`` in parameter specifications.\n \n    .. _Casing_Control:\n \n-\n    Casing Control\n    ^^^^^^^^^^^^^^\n \n    .. index:: Casing control in gnatpp\n \n-   ``gnatpp`` allows you to specify the casing for reserved words,\n-   pragma names, attribute designators and identifiers.\n-   For identifiers you may define a\n-   general rule for name casing but also override this rule\n-   via a set of dictionary files.\n+   ``gnatpp`` allows you to specify the casing for reserved words, pragma\n+   names, attribute designators and identifiers. For identifiers you may define\n+   a general rule for name casing but also override this rule via a set of\n+   dictionary files.\n \n-   Three types of casing are supported: lower case, upper case, and mixed case.\n-   'Mixed case' means that the first letter, and also each letter immediately\n-   following an underscore, are converted to their uppercase forms;\n-   all the other letters are converted to their lowercase forms.\n-\n-   (Note: the casing switches are not yet fully supported in the\n-   libadalang-based version of gnatpp.)\n+   Three types of casing are supported: 'Lower Case', 'Upper Case', and\n+   'Mixed Case'. 'Mixed case' means that the first letter, and also each\n+   letter immediately following an underscore, are converted to their\n+   uppercase forms and all the other letters are converted to their lowercase\n+   forms.\n \n    .. index:: --name-case-as-declared (gnatpp)\n \n-   :switch:`--name-case-as-declared`\n+   :switch:`--name-case-as-declared, -nD`\n      Name casing for defining occurrences are as they appear in the source file\n-     (this is the default)\n+     (this is the default).\n \n    .. index:: --name-upper-case (gnatpp)\n \n-   :switch:`--name-upper-case`\n-     Names are in upper case\n+   :switch:`--name-upper-case, -nU`\n+     Names are in upper case.\n \n    .. index:: --name-lower-case (gnatpp)\n \n-   :switch:`--name-lower-case`\n-     Names are in lower case\n+   :switch:`--name-lower-case, -nL`\n+     Names are in lower case.\n \n    .. index:: --name-mixed-case (gnatpp)\n \n-   :switch:`--name-mixed-case`\n-     Names are in mixed case\n+   :switch:`--name-mixed-case, -nM`\n+     Names are in mixed case.\n \n    .. index:: --attribute-lower-case (gnatpp)\n \n-   :switch:`--attribute-lower-case`\n-     Attribute designators are lower case\n+   :switch:`--attribute-lower-case, -aL`\n+     Attribute designators are lower case.\n \n    .. index:: --attribute-upper-case (gnatpp)\n \n-   :switch:`--attribute-upper-case`\n-     Attribute designators are upper case\n+   :switch:`--attribute-upper-case, -aU`\n+     Attribute designators are upper case.\n \n    .. index:: --attribute-mixed-case (gnatpp)\n \n-   :switch:`--attribute-mixed-case`\n-     Attribute designators are mixed case (this is the default)\n+   :switch:`--attribute-mixed-case, -aM`\n+     Attribute designators are mixed case (this is the default).\n \n    .. index:: --keyword-lower-case (gnatpp)\n \n-   :switch:`--keyword-lower-case`\n+   :switch:`--keyword-lower-case, -kL`\n      Keywords (technically, these are known in Ada as *reserved words*) are\n-     lower case (this is the default)\n+     lower case (this is the default).\n \n    .. index:: --keyword-upper-case (gnatpp)\n \n-   :switch:`--keyword-upper-case`\n-     Keywords are upper case\n+   :switch:`--keyword-upper-case, -kU`\n+     Keywords are upper case.\n \n    .. index:: --enum-case-as-declared (gnatpp)\n \n-   :switch:`--enum-case-as-declared`\n-     Enumeration literal casing for defining occurrences are as they appear in the\n-     source file. Overrides -n casing setting.\n+   :switch:`--enum-case-as-declared, -neD`\n+     Enumeration literal casing for defining occurrences are as they appear in\n+     the source file. Overrides -n casing setting.\n \n    .. index:: --enum-upper-case (gnatpp)\n \n-   :switch:`--enum-upper-case`\n+   :switch:`--enum-upper-case, -neU`\n      Enumeration literals are in upper case. Overrides -n casing\n      setting.\n \n    .. index:: --enum-lower-case (gnatpp)\n \n-   :switch:`--enum-lower-case`\n+   :switch:`--enum-lower-case, -neL`\n      Enumeration literals are in lower case. Overrides -n casing\n      setting.\n \n    .. index:: --enum-mixed-case (gnatpp)\n \n-   :switch:`--enum-mixed-case`\n+   :switch:`--enum-mixed-case, -neM`\n      Enumeration literals are in mixed case. Overrides -n casing\n      setting.\n \n    .. index:: --type-case-as-declared (gnatpp)\n \n-   :switch:`--type-case-as-declared`\n+   :switch:`--type-case-as-declared, -ntD`\n      Names introduced by type and subtype declarations are always\n      cased as they appear in the declaration in the source file.\n      Overrides -n casing setting.\n \n    .. index:: --type-upper-case (gnatpp)\n \n-   :switch:`--type-upper-case`\n+   :switch:`--type-upper-case, -ntU`\n      Names introduced by type and subtype declarations are always in\n      upper case. Overrides -n casing setting.\n \n    .. index:: --type-lower-case (gnatpp)\n \n-   :switch:`--type-lower-case`\n+   :switch:`--type-lower-case, -ntL`\n      Names introduced by type and subtype declarations are always in\n      lower case. Overrides -n casing setting.\n \n    .. index:: --type-mixed-case (gnatpp)\n \n-   :switch:`--type-mixed-case`\n+   :switch:`--type-mixed-case, -ntM`\n      Names introduced by type and subtype declarations are always in\n      mixed case. Overrides -n casing setting.\n \n    .. index:: --number-upper-case (gnatpp)\n \n-   :switch:`--number-upper-case`\n+   :switch:`--number-upper-case, -nnU`\n      Names introduced by number declarations are always in\n      upper case. Overrides -n casing setting.\n \n    .. index:: --number-lower-case (gnatpp)\n \n-   :switch:`--number-lower-case`\n+   :switch:`--number-lower-case, -nnL`\n      Names introduced by number declarations are always in\n      lower case. Overrides -n casing setting.\n \n    .. index:: --number-mixed-case (gnatpp)\n \n-   :switch:`--number-mixed-case`\n+   :switch:`--number-mixed-case, -nnM`\n      Names introduced by number declarations are always in\n      mixed case. Overrides -n casing setting.\n \n    .. index:: --pragma-lower-case (gnatpp)\n \n-   :switch:`--pragma-lower-case`\n-     Pragma names are lower case\n+   :switch:`--pragma-lower-case, -pL`\n+     Pragma names are lower case.\n \n    .. index:: --pragma-upper-case (gnatpp)\n \n-   :switch:`--pragma-upper-case`\n-     Pragma names are upper case\n+   :switch:`--pragma-upper-case, -pU`\n+     Pragma names are upper case.\n \n    .. index:: --pragma-mixed-case (gnatpp)\n \n-   :switch:`--pragma-mixed-case`\n-     Pragma names are mixed case (this is the default)\n+   :switch:`--pragma-mixed-case, -pM`\n+     Pragma names are mixed case (this is the default).\n+\n+   .. index:: --constant-case-as-non-constant (gnatpp)\n+\n+   :switch:`--constant-case-as-non-constant, -cN`\n+     Constant object declaration names have the same case as the name casing\n+     (this is the default).\n+\n+   .. index:: --constant-case-as-declared (gnatpp)\n \n+   :switch:`--constant-case-as-declared, -cD`\n+     Constant object declaration names are as they appear in the source file.\n+\n+   .. index:: --constant-lower-case (gnatpp)\n+\n+   :switch:`--constant-lower-case, -cL`\n+     Constant object declaration names are lower case.\n+\n+   .. index:: --constant-upper-case (gnatpp)\n+\n+   :switch:`--constan-upper-case, -cU`\n+     Constant object declaration names are upper case.\n+\n+   .. index:: --constant-mixed-case (gnatpp)\n+\n+   :switch:`--constant-mixed-case, -cM`\n+     Constant object declaration names are mixed case.\n \n    .. index:: --syntax-only (gnatpp)\n \n@@ -725,10 +801,9 @@ building specialized scripts.\n      This means gnatpp will not be able to support any of the\n      \"as-declared\" switches.\n \n-\n    .. index:: --dictionary (gnatpp)\n \n-   :switch:`--dictionary={file}`\n+   :switch:`--dictionary={file}, -D={file}`\n      Use ``file`` as a *dictionary file* that defines\n      the casing for a set of specified names,\n      thereby overriding the effect on these names by\n@@ -741,10 +816,9 @@ building specialized scripts.\n      to define the casing for the Ada predefined names and\n      the names declared in the GNAT libraries.\n \n-\n    .. index:: --dictionary=- (gnatpp)\n \n-   :switch:`--dictionary=-`\n+   :switch:`--dictionary=-, -D=-`\n      Do not use the default dictionary file;\n      instead, use the casing\n      defined by a ``-n`` switch and any explicit\n@@ -762,146 +836,6 @@ building specialized scripts.\n    on their effect.\n \n \n-   .. index:: -c (gnatpp)\n-\n-\n-   :switch:`--comments-unchanged`\n-     All comments remain unchanged.\n-\n-\n-   :switch:`--comments-gnat-indentation`\n-     GNAT-style comment line indentation.\n-     This is the default.\n-\n-\n-   :switch:`--comments-gnat-beginning`\n-     GNAT-style comment beginning.\n-\n-\n-   :switch:`--comments-fill`\n-     Fill comment blocks.\n-     The default is :switch:`--no-comments-fill`.\n-\n-\n-   :switch:`--comments-special`\n-     Keep unchanged special form comments.\n-     The default is :switch:`--no-comments-special`.\n-\n-\n-   .. index:: --comments-only (gnatpp)\n-\n-   :switch:`--comments-only`\n-     Format just the comments.\n-\n-   .. index:: --no-end-id (gnatpp)\n-\n-\n-   :switch:`--no-end-id`\n-     Do not insert the name of a unit after ``end``; leave whatever comes\n-     after ``end``, if anything, alone.\n-\n-   .. index:: --no-separate-is (gnatpp)\n-\n-\n-   :switch:`--no-separate-is`\n-     Do not place the keyword ``is`` on a separate line in a subprogram body in\n-     case if the spec occupies more than one line.\n-\n-   .. index:: --no-separate-return (gnatpp)\n-\n-\n-   :switch:`--no-separate-return`\n-     In :switch:`--no-compact` mode, if a subprogram spec does not fit on\n-     one line, try to place the ``return`` on the same line as the last\n-     formal parameter.\n-\n-   .. index:: --separate-loop (gnatpp)\n-\n-\n-   :switch:`--separate-loop`\n-     Place the keyword ``loop`` in FOR and WHILE loop statements\n-     on a separate line.\n-\n-   .. index:: --no-separate-then (gnatpp)\n-\n-\n-   :switch:`--separate-then`\n-     Place the keyword ``then`` in IF statements\n-     on a separate line.\n-\n-   .. index:: --no-separate-loop (gnatpp)\n-\n-\n-   :switch:`--no-separate-loop`\n-     Do not place the keyword ``loop`` in FOR and WHILE loop statements\n-     on a separate line. This option is\n-     incompatible with the :switch:`--separate-loop` option.\n-\n-   .. index:: --no-separate-then (gnatpp)\n-\n-\n-   :switch:`--no-separate-then`\n-     Do not place the keyword ``then`` in IF statements\n-     on a separate line. This option is\n-     incompatible with the :switch:`--separate-then` option.\n-\n-   .. index:: --separate-loop-then (gnatpp)\n-\n-\n-   :switch:`--separate-loop-then`\n-     Equivalent to :switch:`--separate-loop` :switch:`--separate-then`.\n-\n-   .. index:: --no-separate-loop-then (gnatpp)\n-\n-\n-   :switch:`--no-separate-loop-then`\n-     Equivalent to :switch:`--no-separate-loop` :switch:`--no-separate-then`.\n-\n-   .. index:: --use-on-new-line (gnatpp)\n-\n-\n-   :switch:`--use-on-new-line`\n-     Start each USE clause in a context clause from a separate line.\n-\n-\n-   .. index:: --insert-blank-lines (gnatpp)\n-\n-\n-   :switch:`--insert-blank-lines`\n-     Insert blank lines where appropriate (between bodies and other large\n-     constructs).\n-\n-   .. index:: --preserve-blank-lines (gnatpp)\n-\n-\n-   :switch:`--preserve-blank-lines`\n-     Preserve blank lines in the input. By default, gnatpp will squeeze\n-     multiple blank lines down to one.\n-\n-   .. index:: --preserve-line-breaks (gnatpp)\n-\n-   :switch:`--preserve-line-breaks`\n-     Preserve line breaks in the input, to the extent possible.\n-     By default, line breaks are also inserted at appropriate\n-     places.\n-\n-   .. index:: --source-line-breaks (gnatpp)\n-\n-   :switch:`--source-line-breaks`\n-     Keep the line breaks from the source; do not insert or delete any\n-     line breaks.\n-\n-   .. index:: --spaces-only (gnatpp)\n-\n-   :switch:`--spaces-only`\n-     Disable all formatting except for inserting and removing spaces.\n-     This implies --source-line-breaks.\n-\n-   The ``--comments`` switches are compatible with one another, except\n-   that the ``--comments-unchanged`` switch disables all other comment\n-   formatting switches.\n-\n-\n    .. _General_Text_Layout_Control:\n \n    General Text Layout Control\n@@ -911,19 +845,19 @@ building specialized scripts.\n \n    .. index:: --max-line-length (gnatpp)\n \n-   :switch:`--max-line-length={nnn}`\n+   :switch:`--max-line-length={nnn}, -M={nnn}`\n      Maximum line length, ``nnn`` from 32...256, the default value is 79\n \n \n    .. index:: --indentation (gnatpp)\n \n-   :switch:`--indentation={nnn}`\n+   :switch:`--indentation={nnn}, -i={nnn}`\n      Indentation level, ``nnn`` from 1...9, the default value is 3\n \n \n    .. index:: --indent-continuation (gnatpp)\n \n-   :switch:`--indent-continuation={nnn}`\n+   :switch:`--indent-continuation={nnn}, -cl={nnn}`\n      Indentation level for continuation lines (relative to the line being\n      continued), ``nnn`` from 1...9.\n      The default\n@@ -956,63 +890,6 @@ building specialized scripts.\n      example, with ``--based-grouping=4``, ``16#0001FFFE#`` will be\n      changed to ``16#0001_FFFE#``.\n \n-\n-   .. index:: --split-line-before-record (gnatpp)\n-\n-   :switch:`--split-line-before-record`\n-     Split the line just before ``record`` in a record type declaration.\n-\n-\n-   .. index:: --indent-named-statements (gnatpp)\n-\n-   :switch:`--indent-named-statements`\n-     Named block and loop statements are indented with respect to\n-     the name.\n-\n-\n-   .. index:: --split-line-before-op (gnatpp)\n-\n-   :switch:`--split-line-before-op`\n-     If it is necessary to split a line at a binary operator, by default\n-     the line is split after the operator. With this option, it is split\n-     before the operator.\n-\n-\n-   .. index:: --RM-style-spacing (gnatpp)\n-\n-   :switch:`--RM-style-spacing`\n-     Do not insert an extra blank before various occurrences of\n-     '(' and ':'. Alignment is off by default in this mode;\n-     use :switch:`--alignment` to turn it on.\n-\n-\n-   .. index:: --compact (gnatpp)\n-   .. index:: --no-compact (gnatpp)\n-\n-   :switch:`--compact`\n-     This is the default. In calls and similar, this packs as many\n-     subexpressions on the same line as possible. Example:\n-\n-     .. code-block:: ada\n-\n-        Some_Procedure\n-          (Short_One, Another_Short_One,\n-           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n-\n-   :switch:`--no-compact`\n-     Turns off --compact mode. In calls and similar, if it is necessary\n-     to split a line between two subexpressions (because otherwise the\n-     construct would exceed --max-line-length), then all such subexpressions\n-     are placed on separate lines. Example:\n-\n-     .. code-block:: ada\n-\n-        Some_Procedure\n-          (Short_One,\n-           Another_Short_One,\n-           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n-\n-\n    .. index:: --call-threshold (gnatpp)\n \n    :switch:`--call-threshold={nnn}`\n@@ -1021,40 +898,14 @@ building specialized scripts.\n      a new line. If ``nnn`` is 0, no check for the number of associations\n      is made; this is the default.\n \n-\n    .. index:: --par-threshold (gnatpp)\n \n    :switch:`--par-threshold={nnn}`\n      If the number of parameter specifications is greater than ``nnn``\n      (or equal to ``nnn`` in case of a function), start each specification from\n-     a new line. If ``nnn`` is 0, and :switch:`--no-separate-is` was not specified, then\n-     the ``is`` is placed on a separate line. This feature is disabled by default.\n-\n-   .. index:: --vertical-enum-types (gnatpp)\n-\n-   :switch:`--vertical-enum-types`\n-     Format enumeration type declarations \"vertically\", e.g. each\n-     enumeration literal goes on a separate line.\n-\n-   .. index:: --vertical-array-types (gnatpp)\n-\n-   :switch:`--vertical-array-types`\n-     Format array type declarations \"vertically\", e.g. for\n-     multidimensional arrays, each index_subtype_definition or\n-     discrete_subtype_definition goes on a separate line.\n-\n-   .. index:: --vertical-named-aggregates (gnatpp)\n-\n-   :switch:`--vertical-named-aggregates`\n-     Format aggregates \"vertically\" if named notation is used for all\n-     component_associations, e.g. each component_association\n-     goes on a separate line.\n-\n-   .. index:: --vertical-case-alternatives (gnatpp)\n-\n-   :switch:`--vertical-case-alternatives`\n-     Format case statements, case expressions, and variant parts with\n-     additional line breaks.\n+     a new line. If ``nnn`` is 0, and :switch:`--no-separate-is` was not\n+     specified, then the ``is`` is placed on a separate line. This feature is\n+     disabled by default.\n \n \n    .. _Setting_the_Source_Search_Path:\n@@ -1090,7 +941,7 @@ building specialized scripts.\n \n    .. index:: --replace (gnatpp)\n \n-   :switch:`--replace`\n+   :switch:`--replace, -rnb`\n      This is the default.\n      Replace the input source file with the reformatted output without\n      creating any backup copy of the input source.\n@@ -1108,38 +959,38 @@ building specialized scripts.\n \n    .. index:: --pipe (gnatpp)\n \n-   :switch:`--pipe`\n+   :switch:`--pipe, -pipe`\n      Send the output to ``Standard_Output``\n \n \n    .. index:: --output (gnatpp)\n \n-   :switch:`--output={output_file}`\n+   :switch:`--output={output_file}, -o={output_file}`\n      Write the output into ``output_file``.\n      If ``output_file`` already exists, ``gnatpp`` terminates without\n      reading or processing the input file.\n \n \n    .. index:: --output-force (gnatpp)\n \n-   :switch:`--output-force={output_file}`\n+   :switch:`--output-force={output_file}, -of={output_file}`\n      Write the output into ``output_file``, overwriting the existing file\n      (if one is present).\n \n \n    .. index:: --replace-backup (gnatpp)\n \n-   :switch:`--replace-backup`\n+   :switch:`--replace-backup, -r`\n      Replace the input source file with the reformatted output, and copy the\n-     original input source into the file whose name is obtained by appending the\n-     :file:`.npp` suffix to the name of the input file.\n+     original input source into the file whose name is obtained by appending\n+     the :file:`.npp` suffix to the name of the input file.\n      If a file with this name already exists, ``gnatpp`` terminates without\n      reading or processing the input file.\n \n \n    .. index:: --replace-force-backup (gnatpp)\n \n-   :switch:`--replace-force-backup`\n+   :switch:`--replace-force-backup, -rf`\n      Like ``--replace-backup`` except that if the file with the specified name\n      already exists, it is overwritten.\n \n@@ -1159,7 +1010,7 @@ building specialized scripts.\n \n    .. index:: --wide-character-encoding (gnatpp)\n \n-   :switch:`--wide-character-encoding={e}`\n+   :switch:`--wide-character-encoding={e}, -W={e}`\n      Specify the wide character encoding method for the input and output\n      files. ``e`` is one of the following:\n \n@@ -1198,18 +1049,17 @@ building specialized scripts.\n \n    :switch:`-P {file}`\n      Indicates the name of the project file that describes the set of sources\n-     to be processed. The exact set of argument sources depends on other options\n-     specified; see below.\n+     to be processed. The exact set of argument sources depends on other\n+     options specified; see below.\n \n \n    .. index:: -U  (gnatpp)\n \n    :switch:`-U`\n      If a project file is specified and no argument source is explicitly\n      specified (either directly or by means of ``--files`` option), process\n-     all the units of the closure of the argument project. Otherwise this option\n-     has no effect.\n-\n+     all the units of the closure of the argument project. Otherwise this\n+     option has no effect.\n \n    :switch:`-U {main_unit}`\n      If a project file is specified and no argument source is explicitly\n@@ -1255,13 +1105,13 @@ building specialized scripts.\n    .. index:: --pp-on  (gnatpp)\n \n    :switch:`--pp-on={xxx}`\n-     Use :switch:`--xxx` as the command to turn pretty printing back on, instead\n-     of the default ``--!pp on``.\n+     Use :switch:`--xxx` as the command to turn pretty printing back on,\n+     instead of the default ``--!pp on``.\n \n \n    .. index:: --files (gnatpp)\n \n-   :switch:`--files={filename}`\n+   :switch:`--files={filename}, -files={filename}`\n      Take as arguments the files listed in text file ``file``.\n      Text file ``file`` may contain empty lines that are ignored.\n      Each nonempty line should contain the name of an existing file.\n@@ -1274,23 +1124,24 @@ building specialized scripts.\n      Do not process the sources listed in a specified file. This option cannot\n      be used in incremental mode.\n \n+\n    .. index:: --jobs (gnatpp)\n \n-   :switch:`--jobs={n}`\n+   :switch:`--jobs={n}, -j={n}`\n      With ``--incremental``, use *n* ``gnatpp`` processes to perform\n      pretty printing in parallel. If *n* is 0, then the maximum number\n      processes is the number of core processors on the platform.\n \n \n    .. index:: --verbose (gnatpp)\n \n-   :switch:`--verbose`\n+   :switch:`--verbose, -v`\n      Verbose mode\n \n \n    .. index:: --quiet (gnatpp)\n \n-   :switch:`--quiet`\n+   :switch:`--quiet, -q`\n      Quiet mode\n \n    If a project file is specified and no argument source is explicitly\n@@ -1304,9 +1155,9 @@ building specialized scripts.\n    Formatting Rules\n    ----------------\n \n-   The following subsections show how ``gnatpp`` treats white space,\n-   comments, program layout, and name casing.\n-   They provide detailed descriptions of the switches shown above.\n+   The following subsections show how ``gnatpp`` treats, comments, program\n+   layout, name casing and how to disable ``gnatpp`` in source code regions.\n+   They provide more details of the switches shown above.\n \n \n    .. _Disabling_Pretty_Printing:\n@@ -1353,32 +1204,13 @@ building specialized scripts.\n    included in the argument to these switches.\n \n \n-   .. _White_Space_and_Empty_Lines:\n-\n-   White Space and Empty Lines\n-   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-   ``gnatpp`` does not have an option to control space characters.\n-   It will add or remove spaces according to the style illustrated by the\n-   examples in the :title:`Ada Reference Manual`.\n-   The output file will contain no lines with trailing white space.\n-\n-   By default, a sequence of one or more blank lines in the input is\n-   converted to a single blank line in the output; multiple blank lines\n-   are squeezed down to one.\n-   The ``--preserve-blank-lines`` option\n-   turns off the squeezing; each blank line in the input is copied\n-   to the output.\n-   The ``--insert-blank-lines`` option\n-   causes additional blank lines to be inserted if not already\n-   present in the input (e.g. between bodies).\n-\n-\n    .. _Formatting_Comments:\n \n    Formatting Comments\n    ^^^^^^^^^^^^^^^^^^^\n \n+   Only ``--layout=compact`` and ``--layout=tall`` format comments.\n+\n    Comments in Ada code are of two kinds:\n \n    * a *whole-line comment*, which appears by itself (possibly preceded by\n@@ -1390,38 +1222,21 @@ building specialized scripts.\n    A whole-line comment is indented according to the surrounding code,\n    with some exceptions. Comments that start in column 1 are kept\n    there. If possible, comments are not moved so far to the right that\n-   the maximum line length is exceeded. The ``--comments-unchanged``\n-   option turns off comment formatting. Special-form comments such as\n+   the maximum line length is exceeded. Special-form comments such as\n    SPARK-style ``--#...`` are left alone.\n \n    For an end-of-line comment, ``gnatpp`` tries to leave the same\n    number of spaces between the end of the preceding Ada code and the\n    beginning of the comment as appear in the original source.\n \n-   The ``--comments-gnat-beginning`` switch (GNAT style comment\n-   beginning) has the following effect:\n-\n-     * For each whole-line comment that does not end with two hyphens,\n-       ``gnatpp`` inserts spaces if necessary after the starting two\n-       hyphens to ensure that there are at least two spaces between\n-       these hyphens and the first non-blank character of the comment.\n+   For each whole-line comment that does not end with two hyphens or that are\n+   not special-form comments, ``gnatpp`` inserts spaces if necessary after the\n+   starting two hyphens to ensure that there are at least two spaces between\n+   these hyphens and the first non-blank character of the comment.\n \n-   The ``--comments-fill`` switch specifies that whole-line comments\n-   that form a paragraph will be filled in typical word processor style\n-   (that is, moving words between lines to make the lines other than the\n-   last similar in length ).\n-\n-   The ``--comments-only`` switch specifies that only the comments are\n-   formatted; the rest of the program text is left alone. The comments\n-   are formatted according to the ``--comments-gnat-beginning`` and\n-   ``--comments-fill`` switches; other formatting switches are ignored. For\n-   example, ``--comments-only --comments-fill`` means to fill comment\n-   paragraphs, and do nothing else. Likewise, ``--comments-only\n-   --comments-gnat-beginning`` ensures comments start with at least two\n-   spaces after ``--``, and ``--comments-only --comments-gnat-beginning\n-   --comments-fill`` does both. If ``--comments-only`` is given without\n-   ``--comments-gnat-beginning`` or ``--comments-fill``, then gnatpp\n-   doesn't format anything.\n+   With ``--layout=compact``, whole-line comments that form a paragraph will be\n+   filled in typical word processor style (that is, moving words between lines\n+   to make the lines other than the last similar in length).\n \n \n    .. _Name_Casing:\n@@ -1643,188 +1458,192 @@ building specialized scripts.\n    Legacy Switches\n    ^^^^^^^^^^^^^^^\n \n-   Some switches have a short form, mostly for legacy reasons,\n-   as shown below.\n-\n-   .. index:: -n (gnatpp)\n-\n-   :switch:`-nD`\n-     :switch:`--name-case-as-declared`\n-\n-   :switch:`-nU`\n-     :switch:`--name-upper-case`\n-\n-   :switch:`-nL`\n-     :switch:`--name-lower-case`\n-\n-   :switch:`-nM`\n-     :switch:`--name-mixed-case`\n-\n-   .. index:: -a (gnatpp)\n-\n-   :switch:`-aL`\n-     :switch:`--attribute-lower-case`\n-\n-   :switch:`-aU`\n-     :switch:`--attribute-upper-case`\n+   .. index:: --alignment (gnatpp)\n \n-   :switch:`-aM`\n-     :switch:`--attribute-mixed-case`\n+   :switch:`--alignment, --no-alignment`\n+      Programs can be easier to read if certain constructs are vertically\n+      aligned.\n \n-   .. index:: -k (gnatpp)\n+        * ``:`` in declarations,\n+        * ``:=`` in initializations in declarations,\n+        * ``:=`` in assignment statements,\n+        * ``=>`` in associations, and\n+        * ``at`` keywords in the component clauses in record representation\n+          clauses.\n \n-   :switch:`-kL`\n-     :switch:`--keyword-lower-case`\n+   .. index:: --align-modes (gnatpp)\n \n-   :switch:`-kU`\n-     :switch:`--keyword-upper-case`\n+   :switch:`--align-modes, --no-align-modes`\n \n-   .. index:: -ne (gnatpp)\n+      Line up ``in`` and ``out`` in parameter specifications.\n \n-   :switch:`-neD`\n-     :switch:`--enum-case-as-declared`\n+   .. index:: --compact (gnatpp)\n \n-   :switch:`-neU`\n-     :switch:`--enum-upper-case`\n+   :switch:`--compact, --no-compact`\n+     In calls and similar, ``--compact`` packs as many\n+     subexpressions on the same line as possible. Example:\n \n-   :switch:`-neL`\n-     :switch:`--enum-lower-case`\n+     .. code-block:: ada\n \n-   :switch:`-neM`\n-     :switch:`--enum-mixed-case`\n+        Some_Procedure\n+          (Short_One, Another_Short_One,\n+           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n \n-   .. index:: -nt (gnatpp)\n+     On the contrary, with ``--no-compact``, in calls and similar, if it is\n+     necessary to split a line between two subexpressions (because otherwise\n+     the construct would exceed --max-line-length), then all such\n+     subexpressions are placed on separate lines. Example:\n \n-   :switch:`-ntD`\n-     :switch:`--type-case-as-declared`\n+     .. code-block:: ada\n \n-   :switch:`-ntU`\n-     :switch:`--type-upper-case`\n+        Some_Procedure\n+          (Short_One,\n+           Another_Short_One,\n+           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n \n-   :switch:`-ntL`\n-     :switch:`--type-lower-case`\n+   .. index:: --end-id (gnatpp)\n \n-   :switch:`-ntM`\n-     :switch:`--type-mixed-case`\n+   :switch:`--end-id, --no-end-id`\n+     Insert the name of a unit after ``end``. Otherwise, leave whatever comes\n+     after ``end``, if anything, alone.\n \n-   :switch:`-nnU`\n-     :switch:`--number-upper-case`\n+   .. index:: --separate-is (gnatpp)\n \n-   :switch:`-nnL`\n-     :switch:`--number-lower-case`\n+   :switch:`--separate-is, --no-separate-is`\n+     Place the keyword ``is`` on a separate line in a subprogram body in\n+     case if the spec occupies more than one line.\n \n-   :switch:`-nnM`\n-     :switch:`--number-mixed-case`\n+   .. index:: --separate-return (gnatpp)\n \n-   .. index:: -p (gnatpp)\n+   :switch:`--separate-return, --no-separate-return`\n+     If a subprogram spec does not fit on one line, place the ``return`` on\n+     a separate line. Otherwise try to place it in the same line as the last\n+     parameter specification.\n \n-   :switch:`-pL`\n-     :switch:`--pragma-lower-case`\n+   .. index:: --separate-loop (gnatpp)\n \n-   :switch:`-pU`\n-     :switch:`--pragma-upper-case`\n+   :switch:`--separate-loop, --no-separate-loop`\n+     Place the keyword ``loop`` in FOR and WHILE loop statements\n+     on a separate line.\n \n-   :switch:`-pM`\n-     :switch:`--pragma-mixed-case`\n \n-   .. index:: -D (gnatpp)\n+   .. index:: --separate-then (gnatpp)\n \n-   :switch:`-D{file}`\n-     :switch:`--dictionary={file}`\n+   :switch:`--separate-then, --no-separate-then`\n+     Place the keyword ``then`` in IF statements\n+     on a separate line.\n \n-   .. index:: -D- (gnatpp)\n+   .. index:: --separate-loop-then (gnatpp)\n \n-   :switch:`-D-`\n-     :switch:`--dictionary=-`\n+   :switch:`--separate-loop-then, --no-separate-loop-then`\n+     Equivalent to :switch:`--separate-loop` :switch:`--separate-then`.\n \n-   .. index:: -c (gnatpp)\n+   .. index:: --split-line-before-record (gnatpp)\n \n-   :switch:`-c0`\n-     :switch:`--comments-unchanged`\n+   :switch:`--split-line-before-record, --no-split-line-before-record`\n+     Split the line just before ``record`` in a record type declaration.\n \n-   :switch:`-c1`\n-     :switch:`--comments-gnat-indentation`\n+   .. index:: --indent-named-statements (gnatpp)\n \n-   :switch:`-c3`\n-     :switch:`--comments-gnat-beginning`\n+   :switch:`--indent-named-statements, --no-indent-named-statements`\n+     Named block and loop statements are indented with respect to\n+     the name.\n \n-   :switch:`-c4`\n-     :switch:`--comments-fill`\n+   .. index:: --split-line-before-op (gnatpp)\n \n-   :switch:`-c5`\n-     :switch:`--comments-special`\n+   :switch:`--split-line-before-op, --no-split-line-before-op`\n+     If it is necessary to split a line at a binary operator, by default\n+     the line is split after the operator. With this option, it is split\n+     before the operator.\n \n-   .. index:: -M (gnatpp)\n+   .. index:: --use-on-new-line (gnatpp)\n \n-   :switch:`-M{nnn}`\n-     :switch:`--max-line-length={nnn}`\n+   :switch:`--use-on-new-line, --no-use-one-new-line`\n+     Start each USE clause in a context clause from a separate line.\n \n-   .. index:: -i (gnatpp)\n+   .. index:: --vertical-enum-types (gnatpp)\n \n-   :switch:`-i{nnn}`\n-     :switch:`--indentation={nnn}`\n+   :switch:`--vertical-enum-types, --no-vertical-enum-types`\n+     Format enumeration type declarations \"vertically\", e.g. each\n+     enumeration literal goes on a separate line.\n \n-   .. index:: -cl (gnatpp)\n+   .. index:: --vertical-array-types (gnatpp)\n \n-   :switch:`-cl{nnn}`\n-     :switch:`--indent-continuation={nnn}`\n+   :switch:`--vertical-array-types, --no-vertical-array-types`\n+     Format array type declarations \"vertically\", e.g. for\n+     multidimensional arrays, each index_subtype_definition or\n+     discrete_subtype_definition goes on a separate line.\n \n-   .. index:: -pipe (gnatpp)\n+   .. index:: --vertical-named-aggregates (gnatpp)\n \n-   :switch:`-pipe`\n-     :switch:`--pipe`\n+   :switch:`--vertical-named-aggregates, --no-vertical-named-aggregates`\n+     Format aggregates \"vertically\" if named notation is used for all\n+     component_associations, e.g. each component_association\n+     goes on a separate line.\n \n-   .. index:: -o (gnatpp)\n+   .. index:: --vertical-case-alternatives (gnatpp)\n \n-   :switch:`-o {output-file}`\n-     :switch:`--output={output-file}`\n+   :switch:`--vertical-case-alternatives, --no-vertical-case-alternatives`\n+     Format case statements, case expressions, and variant parts with\n+     additional line breaks.\n \n-   .. index:: -of (gnatpp)\n+   .. index:: --RM-style-spacing (gnatpp)\n \n-   :switch:`-of {output-file}`\n-     :switch:`--output-force={output-file}`\n+   :switch:`--RM-style-spacing`\n+     Do not insert an extra blank before various occurrences of\n+     '(' and ':'. Alignment is off by default in this mode;\n+     use :switch:`--alignment` to turn it on.\n \n-   .. index:: -r (gnatpp)\n+   .. index:: --insert-blank-lines (gnatpp)\n \n-   :switch:`-rnb`\n-     :switch:`--replace`\n+   :switch:`--insert-blank-lines, --no-insert-blank-lines`\n+     Insert blank lines where appropriate (between bodies and other large\n+     constructs).\n \n-   :switch:`-r`\n-     :switch:`--replace-backup`\n+   .. index:: --preserve-blank-lines (gnatpp)\n \n-   .. index:: -rf (gnatpp)\n+   :switch:`--preserve-blank-lines, --no-preserve-blank-lines`\n+     Preserve blank lines in the input. By default, gnatpp will squeeze\n+     multiple blank lines down to one.\n \n-   :switch:`-rf`\n-     :switch:`--replace-force-backup`\n+   .. index:: --preserve-line-breaks (gnatpp)\n \n-   .. index:: -rnb (gnatpp)\n+   :switch:`--preserve-line-breaks, --no-preserve-line-breaks`\n+     Preserve line breaks in the input, to the extent possible.\n+     By default, line breaks are also inserted at appropriate\n+     places.\n \n-   .. index:: --eol (gnatpp)\n+   .. index:: --source-line-breaks (gnatpp)\n \n-   .. index:: -W (gnatpp)\n+   :switch:`--source-line-breaks, --no-source-line-breaks`\n+     Keep the line breaks from the source; do not insert or delete any\n+     line breaks.\n \n-   :switch:`-W{e}`\n-     :switch:`--wide-character-encoding={e}`\n+   .. index:: --spaces-only (gnatpp)\n \n-   .. index:: -files (gnatpp)\n+   :switch:`--spaces-only, --no-spaces-only`\n+     Disable all formatting except for inserting and removing spaces.\n+     This implies --source-line-breaks.\n \n-   :switch:`-files {filename}`\n-     :switch:`--files={filename}`\n+   .. index:: -c (gnatpp)\n \n-   .. index:: -j (gnatpp)\n+   :switch:`--comments-unchanged, -c0`\n+     All comments remain unchanged.\n \n-   :switch:`-j{n}`\n-     :switch:`--jobs={n}`\n+   :switch:`--comments-gnat-indentation, -c1`\n+     GNAT-style comment line indentation.\n \n-   .. index:: -v (gnatpp)\n+   :switch:`--comments-gnat-beginning, -c3`\n+     GNAT-style comment beginning.\n \n-   :switch:`-v`\n-     :switch:`--verbose`\n+   :switch:`--comments-fill, -c4`\n+     Fill comment blocks.\n \n-   .. index:: -q (gnatpp)\n+   :switch:`--comments-special, -c5`\n+     Keep unchanged special form comments.\n \n-   :switch:`-q`\n-     :switch:`--quiet`\n+   :switch:`--comments-only`\n+     Format just the comments.\n \n \n .. only:: PRO or GPL"}, {"sha": "a136a5a0f75f3eb15c56b39d184bb785b5561110", "filename": "gcc/ada/doc/gnat_ugn/platform_specific_information.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -13,8 +13,8 @@ Platform-Specific Information\n *****************************\n \n This appendix contains information relating to the implementation\n-of run-time libraries on various platforms and also covers\n-topics related to the GNAT implementation on Windows and Mac OS.\n+of run-time libraries on various platforms and also covers topics\n+related to the GNAT implementation on specific Operating Systems.\n \n .. _`Run_Time_Libraries`:\n "}, {"sha": "94022e7c6356a563500122f1df13991903d30b5b", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1865,7 +1865,7 @@ package Einfo is\n --    Has_Per_Object_Constraint\n --       Defined in E_Component entities. Set if the subtype of the component\n --       has a per object constraint. Per object constraints result from the\n---       following situations :\n+--       following situations:\n --\n --       1. N_Attribute_Reference - when the prefix is the enclosing type and\n --          the attribute is Access.\n@@ -4136,14 +4136,14 @@ package Einfo is\n --       set instead, or a similar appearance as an out parameter actual, in\n --       which case Referenced_As_Out_Parameter is set.\n \n---    Referenced_As_LHS :\n+--    Referenced_As_LHS\n --       Defined in all entities. This flag is set instead of Referenced if a\n --       simple variable that is not a renaming appears as the left side of an\n --       assignment. The reason we distinguish this kind of reference is that\n --       we have a separate warning for variables that are only assigned and\n --       never read.\n \n---    Referenced_As_Out_Parameter :\n+--    Referenced_As_Out_Parameter\n --       Defined in all entities. This flag is set instead of Referenced if a\n --       simple variable that is not a renaming appears as an actual for an out\n --       formal. The reason we distinguish this kind of reference is that"}, {"sha": "151096607c60801bd394bb22cc2235d5ea59101a", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -53,7 +53,7 @@ with Stand;          use Stand;\n with Stylesw;        use Stylesw;\n with System.OS_Lib;\n with Uname;          use Uname;\n-with Warnsw; pragma Unreferenced (Warnsw); -- disable spurious warning\n+with Warnsw;\n \n package body Errout is\n \n@@ -2193,8 +2193,9 @@ package body Errout is\n          end if;\n \n          if Include_Subprogram_In_Messages then\n-            Write_Str\n-              (\",\"\"subprogram\"\":\"\"\" & Subprogram_Name_Ptr (Error.Node) & \"\"\"\");\n+            Write_Str (\",\"\"subprogram\"\":\"\"\");\n+            Write_JSON_Escaped_String (Subprogram_Name_Ptr (Error.Node));\n+            Write_Str (\"\"\"\");\n          end if;\n \n          Write_Str (\"}\");"}, {"sha": "30f32a784537f981414615cbdf36f21918313ac8", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 92, "deletions": 14, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -62,6 +62,7 @@ with Sem_Eval;       use Sem_Eval;\n with Sem_Mech;       use Sem_Mech;\n with Sem_Res;        use Sem_Res;\n with Sem_Util;       use Sem_Util;\n+use Sem_Util.Storage_Model_Support;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n@@ -75,6 +76,15 @@ with Warnsw;         use Warnsw;\n \n package body Exp_Aggr is\n \n+   function Build_Assignment_With_Temporary\n+     (Target : Node_Id;\n+      Typ    : Node_Id;\n+      Source : Node_Id) return List_Id;\n+   --  Returns a list of actions to assign Source to Target of type Typ using\n+   --  an extra temporary:\n+   --   Tmp := Source;\n+   --   Target := Tmp;\n+\n    type Case_Bounds is record\n      Choice_Lo   : Node_Id;\n      Choice_Hi   : Node_Id;\n@@ -2508,6 +2518,42 @@ package body Exp_Aggr is\n       return New_Code;\n    end Build_Array_Aggr_Code;\n \n+   -------------------------------------\n+   -- Build_Assignment_With_Temporary --\n+   -------------------------------------\n+\n+   function Build_Assignment_With_Temporary\n+     (Target : Node_Id;\n+      Typ    : Node_Id;\n+      Source : Node_Id) return List_Id\n+   is\n+      Loc : constant Source_Ptr := Sloc (Source);\n+\n+      Aggr_Code : List_Id;\n+      Tmp       : Entity_Id;\n+      Tmp_Decl  : Node_Id;\n+\n+   begin\n+      Tmp := Make_Temporary (Loc, 'A', Source);\n+      Tmp_Decl :=\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Tmp,\n+          Object_Definition   => New_Occurrence_Of (Typ, Loc));\n+      Set_No_Initialization (Tmp_Decl, True);\n+\n+      Aggr_Code := New_List (Tmp_Decl);\n+      Append_To (Aggr_Code,\n+        Make_OK_Assignment_Statement (Loc,\n+          Name       => New_Occurrence_Of (Tmp, Loc),\n+          Expression => Source));\n+\n+      Append_To (Aggr_Code,\n+        Make_OK_Assignment_Statement (Loc,\n+          Name       => Target,\n+          Expression => New_Occurrence_Of (Tmp, Loc)));\n+      return Aggr_Code;\n+   end Build_Assignment_With_Temporary;\n+\n    ----------------------------\n    -- Build_Record_Aggr_Code --\n    ----------------------------\n@@ -4514,15 +4560,29 @@ package body Exp_Aggr is\n          New_Aggr := New_Copy_Tree (Aggr);\n          Set_Expansion_Delayed (New_Aggr, False);\n \n-         Aggr_Code :=\n-           New_List (\n-             Make_OK_Assignment_Statement (Sloc (New_Aggr),\n-               Name       => Target,\n-               Expression => New_Aggr));\n+         --  In the case of Target's type using the Designated_Storage_Model\n+         --  aspect with a Copy_To procedure, insert a temporary and have the\n+         --  back end handle the assignment to it. Copy the result to the\n+         --  original target.\n+\n+         if Has_Designated_Storage_Model_Aspect\n+              (Etype (Prefix (Expression (Target))))\n+           and then Present (Storage_Model_Copy_To\n+                               (Storage_Model_Object\n+                                  (Etype (Prefix (Expression (Target))))))\n+         then\n+            Aggr_Code := Build_Assignment_With_Temporary (Target,\n+                           Typ, New_Aggr);\n+         else\n+            Aggr_Code :=\n+              New_List (\n+                Make_OK_Assignment_Statement (Sloc (New_Aggr),\n+                  Name       => Target,\n+                  Expression => New_Aggr));\n+         end if;\n \n       --  Or else, generate component assignments to it, as for an aggregate\n       --  that appears on the right-hand side of an assignment statement.\n-\n       else\n          Aggr_Code :=\n            Build_Array_Aggr_Code (Aggr,\n@@ -7065,16 +7125,34 @@ package body Exp_Aggr is\n            and then not Is_Possibly_Unaligned_Slice (Target)\n            and then Aggr_Assignment_OK_For_Backend (N)\n          then\n-            if Maybe_In_Place_OK then\n-               return;\n-            end if;\n \n-            Aggr_Code :=\n-              New_List (\n-                Make_Assignment_Statement (Loc,\n-                  Name       => Target,\n-                  Expression => New_Copy_Tree (N)));\n+            --  In the case of an assignment using an access with the\n+            --  Designated_Storage_Model aspect with a Copy_To procedure,\n+            --  insert a temporary and have the back end handle the assignment\n+            --  to it. Copy the result to the original target.\n+\n+            if Parent_Kind = N_Assignment_Statement\n+              and then Nkind (Name (Parent_Node)) = N_Explicit_Dereference\n+              and then Has_Designated_Storage_Model_Aspect\n+                         (Etype (Prefix (Name (Parent_Node))))\n+              and then Present (Storage_Model_Copy_To\n+                                  (Storage_Model_Object\n+                                     (Etype (Prefix (Name (Parent_Node))))))\n+            then\n+               Aggr_Code := Build_Assignment_With_Temporary (Target,\n+                              Typ, New_Copy_Tree (N));\n+            else\n+               if Maybe_In_Place_OK then\n+                  return;\n+               end if;\n \n+               Aggr_Code :=\n+                 New_List (\n+                   Make_Assignment_Statement (Loc,\n+                     Name       => Target,\n+                     Expression => New_Copy_Tree (N)));\n+\n+            end if;\n          else\n             Aggr_Code :=\n               Build_Array_Aggr_Code (N,"}, {"sha": "50cb307a152b5d21df7277a4bad2b4f00adb4c82", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -5638,9 +5638,7 @@ package body Exp_Attr is\n                          Make_Integer_Literal (Loc, 1))));\n \n             else\n-               --  Add Boolean parameter True, to request program error if\n-               --  we have a bad representation on our hands. If checks are\n-               --  suppressed, then add False instead\n+               --  Add Boolean parameter depending on check suppression\n \n                Append_To (Exprs, Rep_To_Pos_Flag (Ptyp, Loc));\n                Rewrite (N,\n@@ -5650,13 +5648,13 @@ package body Exp_Attr is\n                        (Enum_Pos_To_Rep (Etyp), Loc),\n                    Expressions => New_List (\n                      Make_Op_Subtract (Loc,\n-                    Left_Opnd =>\n-                      Make_Function_Call (Loc,\n-                        Name =>\n-                          New_Occurrence_Of\n-                            (TSS (Etyp, TSS_Rep_To_Pos), Loc),\n-                          Parameter_Associations => Exprs),\n-                    Right_Opnd => Make_Integer_Literal (Loc, 1)))));\n+                       Left_Opnd =>\n+                         Make_Function_Call (Loc,\n+                           Name =>\n+                             New_Occurrence_Of\n+                               (TSS (Etyp, TSS_Rep_To_Pos), Loc),\n+                           Parameter_Associations => Exprs),\n+                       Right_Opnd => Make_Integer_Literal (Loc, 1)))));\n             end if;\n \n             --  Suppress checks since they have all been done above\n@@ -6771,9 +6769,7 @@ package body Exp_Attr is\n                          Make_Integer_Literal (Loc, 1))));\n \n             else\n-               --  Add Boolean parameter True, to request program error if\n-               --  we have a bad representation on our hands. Add False if\n-               --  checks are suppressed.\n+               --  Add Boolean parameter depending on check suppression\n \n                Append_To (Exprs, Rep_To_Pos_Flag (Ptyp, Loc));\n                Rewrite (N,\n@@ -6797,7 +6793,8 @@ package body Exp_Attr is\n             Analyze_And_Resolve (N, Typ, Suppress => All_Checks);\n \n          --  For floating-point, we transform 'Succ into a call to the Succ\n-         --  floating-point attribute function in Fat_xxx (xxx is root type)\n+         --  floating-point attribute function in Fat_xxx (xxx is root type).\n+         --  Note that this function takes care of the overflow case.\n \n          elsif Is_Floating_Point_Type (Ptyp) then\n             Expand_Fpt_Attribute_R (N);"}, {"sha": "f5cebb7c07b772eeb2778cbf4b948050e3559565", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n with Debug;          use Debug;\n@@ -34,9 +35,11 @@ with Exp_Smem;       use Exp_Smem;\n with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n with Namet;          use Namet;\n+with Nlists;         use Nlists;\n with Nmake;          use Nmake;\n with Opt;            use Opt;\n with Output;         use Output;\n+with Rtsfind;        use Rtsfind;\n with Sem;            use Sem;\n with Sem_Eval;       use Sem_Eval;\n with Sem_Res;        use Sem_Res;\n@@ -47,6 +50,7 @@ with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n with Sinput;         use Sinput;\n with Snames;         use Snames;\n+with Stand;\n with Tbuild;         use Tbuild;\n \n package body Exp_Ch2 is\n@@ -711,4 +715,117 @@ package body Exp_Ch2 is\n       Analyze_And_Resolve (N, T);\n    end Expand_Renaming;\n \n+   ------------------------------------------\n+   -- Expand_N_Interpolated_String_Literal --\n+   ------------------------------------------\n+\n+   procedure Expand_N_Interpolated_String_Literal (N : Node_Id) is\n+\n+      function Build_Interpolated_String_Image (N : Node_Id) return Node_Id;\n+      --  Build the following Expression_With_Actions node:\n+      --     do\n+      --        Sink : Buffer;\n+      --        [ Set_Trim_Leading_Spaces (Sink); ]\n+      --        Type'Put_Image (Sink, X);\n+      --        { [ Set_Trim_Leading_Spaces (Sink); ]\n+      --          Type'Put_Image (Sink, X); }\n+      --        Result : constant String := Get (Sink);\n+      --        Destroy (Sink);\n+      --     in Result end\n+\n+      -------------------------------------\n+      -- Build_Interpolated_String_Image --\n+      -------------------------------------\n+\n+      function Build_Interpolated_String_Image (N : Node_Id) return Node_Id\n+      is\n+         Loc           : constant Source_Ptr := Sloc (N);\n+         Sink_Entity   : constant Entity_Id  := Make_Temporary (Loc, 'S');\n+         Sink_Decl     : constant Node_Id :=\n+                           Make_Object_Declaration (Loc,\n+                             Defining_Identifier => Sink_Entity,\n+                             Object_Definition =>\n+                               New_Occurrence_Of (RTE (RE_Buffer_Type), Loc));\n+\n+         Get_Id        : constant RE_Id :=\n+                           (if Etype (N) = Stand.Standard_String then\n+                               RE_Get\n+                            elsif Etype (N) = Stand.Standard_Wide_String then\n+                               RE_Wide_Get\n+                            else\n+                               RE_Wide_Wide_Get);\n+\n+         Result_Entity : constant Entity_Id := Make_Temporary (Loc, 'R');\n+         Result_Decl   : constant Node_Id :=\n+                           Make_Object_Declaration (Loc,\n+                             Defining_Identifier => Result_Entity,\n+                             Object_Definition =>\n+                               New_Occurrence_Of (Etype (N), Loc),\n+                             Expression =>\n+                               Make_Function_Call (Loc,\n+                                 Name => New_Occurrence_Of (RTE (Get_Id), Loc),\n+                                 Parameter_Associations => New_List (\n+                                   New_Occurrence_Of (Sink_Entity, Loc))));\n+\n+         Actions  : constant List_Id := New_List;\n+         Elem_Typ : Entity_Id;\n+         Str_Elem : Node_Id;\n+\n+      begin\n+         pragma Assert (Etype (N) /= Stand.Any_String);\n+\n+         Append_To (Actions, Sink_Decl);\n+\n+         Str_Elem := First (Expressions (N));\n+         while Present (Str_Elem) loop\n+            Elem_Typ := Etype (Str_Elem);\n+\n+            --  If the type is numeric or has a specified Integer_Literal or\n+            --  Real_Literal aspect, then prior to invoking Put_Image, the\n+            --  Trim_Leading_Spaces flag is set on the text buffer.\n+\n+            if Is_Numeric_Type (Underlying_Type (Elem_Typ))\n+              or else Has_Aspect (Elem_Typ, Aspect_Integer_Literal)\n+              or else Has_Aspect (Elem_Typ, Aspect_Real_Literal)\n+            then\n+               Append_To (Actions,\n+                 Make_Procedure_Call_Statement (Loc,\n+                   Name                   =>\n+                     New_Occurrence_Of\n+                       (RTE (RE_Set_Trim_Leading_Spaces), Loc),\n+                   Parameter_Associations => New_List (\n+                     Convert_To (RTE (RE_Root_Buffer_Type),\n+                       New_Occurrence_Of (Sink_Entity, Loc)),\n+                     New_Occurrence_Of (Stand.Standard_True, Loc))));\n+            end if;\n+\n+            Append_To (Actions,\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => New_Occurrence_Of (Elem_Typ, Loc),\n+                Attribute_Name => Name_Put_Image,\n+                Expressions    => New_List (\n+                  New_Occurrence_Of (Sink_Entity, Loc),\n+                  Duplicate_Subexpr (Str_Elem))));\n+\n+            Next (Str_Elem);\n+         end loop;\n+\n+         Append_To (Actions, Result_Decl);\n+\n+         return Make_Expression_With_Actions (Loc,\n+           Actions    => Actions,\n+           Expression => New_Occurrence_Of (Result_Entity, Loc));\n+      end Build_Interpolated_String_Image;\n+\n+      --  Local variables\n+\n+      Typ : constant Entity_Id := Etype (N);\n+\n+   --  Start of processing for Expand_N_Interpolated_String_Literal\n+\n+   begin\n+      Rewrite (N, Build_Interpolated_String_Image (N));\n+      Analyze_And_Resolve (N, Typ);\n+   end Expand_N_Interpolated_String_Literal;\n+\n end Exp_Ch2;"}, {"sha": "40df79c2a6e55ea37c8e6b168c68a5f0ceb96916", "filename": "gcc/ada/exp_ch2.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -28,8 +28,9 @@\n with Types; use Types;\n package Exp_Ch2 is\n \n-   procedure Expand_N_Expanded_Name  (N : Node_Id);\n-   procedure Expand_N_Identifier     (N : Node_Id);\n-   procedure Expand_N_Real_Literal   (N : Node_Id);\n+   procedure Expand_N_Expanded_Name               (N : Node_Id);\n+   procedure Expand_N_Identifier                  (N : Node_Id);\n+   procedure Expand_N_Interpolated_String_Literal (N : Node_Id);\n+   procedure Expand_N_Real_Literal                (N : Node_Id);\n \n end Exp_Ch2;"}, {"sha": "fc4089dc123a5f9021d27824e9addb557a726db0", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 133, "deletions": 131, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -6230,6 +6230,15 @@ package body Exp_Ch3 is\n       Base_Typ : constant Entity_Id  := Base_Type (Typ);\n       Next_N   : constant Node_Id    := Next (N);\n \n+      Special_Ret_Obj : constant Boolean := Is_Special_Return_Object (Def_Id);\n+      --  If this is a special return object, it will be allocated differently\n+      --  and ultimately rewritten as a renaming, so initialization activities\n+      --  need to be deferred until after that is done.\n+\n+      Func_Id : constant Entity_Id :=\n+       (if Special_Ret_Obj then Return_Applies_To (Scope (Def_Id)) else Empty);\n+      --  The function if this is a special return object, otherwise Empty\n+\n       function Build_Equivalent_Aggregate return Boolean;\n       --  If the object has a constrained discriminated type and no initial\n       --  value, it may be possible to build an equivalent aggregate instead,\n@@ -6238,7 +6247,6 @@ package body Exp_Ch3 is\n       function Build_Heap_Or_Pool_Allocator\n         (Temp_Id    : Entity_Id;\n          Temp_Typ   : Entity_Id;\n-         Func_Id    : Entity_Id;\n          Ret_Typ    : Entity_Id;\n          Alloc_Expr : Node_Id) return Node_Id;\n       --  Create the statements necessary to allocate a return object on the\n@@ -6437,7 +6445,6 @@ package body Exp_Ch3 is\n       function Build_Heap_Or_Pool_Allocator\n         (Temp_Id    : Entity_Id;\n          Temp_Typ   : Entity_Id;\n-         Func_Id    : Entity_Id;\n          Ret_Typ    : Entity_Id;\n          Alloc_Expr : Node_Id) return Node_Id\n       is\n@@ -7098,8 +7105,6 @@ package body Exp_Ch3 is\n       -------------------------------\n \n       function Make_Allocator_For_Return (Expr : Node_Id) return Node_Id is\n-         Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n-\n          Alloc : Node_Id;\n \n       begin\n@@ -7343,7 +7348,7 @@ package body Exp_Ch3 is\n             end if;\n          end if;\n \n-         if not Is_Special_Return_Object (Def_Id) then\n+         if not Special_Ret_Obj then\n             Default_Initialize_Object (Init_After);\n          end if;\n \n@@ -7403,7 +7408,7 @@ package body Exp_Ch3 is\n                Expander_Mode_Restore;\n             end if;\n \n-            if not Is_Special_Return_Object (Def_Id) then\n+            if not Special_Ret_Obj then\n                Convert_Aggr_In_Object_Decl (N);\n             end if;\n \n@@ -7479,17 +7484,31 @@ package body Exp_Ch3 is\n             --  case, the expansion of the return statement will take care of\n             --  creating the object (via allocator) and initializing it.\n \n-            if Is_Special_Return_Object (Def_Id) then\n-               null;\n+            if Special_Ret_Obj then\n+\n+               --  If the type needs finalization and is not inherently\n+               --  limited, then the target is adjusted after the copy\n+               --  and attached to the finalization list.\n+\n+               if Needs_Finalization (Typ)\n+                 and then not Is_Limited_View (Typ)\n+               then\n+                  Adj_Call :=\n+                    Make_Adjust_Call (\n+                      Obj_Ref => New_Occurrence_Of (Def_Id, Loc),\n+                      Typ     => Base_Typ);\n+               end if;\n \n             elsif Tagged_Type_Expansion then\n                declare\n-                  Iface    : constant Entity_Id := Root_Type (Typ);\n-                  Expr_N   : Node_Id := Expr;\n-                  Expr_Typ : Entity_Id;\n-                  New_Expr : Node_Id;\n-                  Obj_Id   : Entity_Id;\n-                  Tag_Comp : Node_Id;\n+                  Iface : constant Entity_Id := Root_Type (Typ);\n+\n+                  Expr_Typ     : Entity_Id;\n+                  New_Expr     : Node_Id;\n+                  Obj_Id       : Entity_Id;\n+                  Ptr_Obj_Decl : Node_Id;\n+                  Ptr_Obj_Id   : Entity_Id;\n+                  Tag_Comp     : Node_Id;\n \n                begin\n                   --  If the original node of the expression was a conversion\n@@ -7499,26 +7518,27 @@ package body Exp_Ch3 is\n                   --  component. This code must be kept synchronized with the\n                   --  expansion done by routine Expand_Interface_Conversion\n \n-                  if not Comes_From_Source (Expr_N)\n-                    and then Nkind (Expr_N) = N_Explicit_Dereference\n-                    and then Nkind (Original_Node (Expr_N)) = N_Type_Conversion\n-                    and then Etype (Original_Node (Expr_N)) = Typ\n+                  if not Comes_From_Source (Expr)\n+                    and then Nkind (Expr) = N_Explicit_Dereference\n+                    and then Nkind (Original_Node (Expr)) = N_Type_Conversion\n+                    and then Etype (Original_Node (Expr)) = Typ\n                   then\n-                     Rewrite (Expr_N, Original_Node (Expression (N)));\n+                     Rewrite (Expr, Original_Node (Expression (N)));\n                   end if;\n \n                   --  Avoid expansion of redundant interface conversion\n \n-                  if Is_Interface (Etype (Expr_N))\n-                    and then Nkind (Expr_N) = N_Type_Conversion\n-                    and then Etype (Expr_N) = Typ\n+                  if Is_Interface (Etype (Expr))\n+                    and then Nkind (Expr) = N_Type_Conversion\n+                    and then Etype (Expr) = Typ\n                   then\n-                     Expr_N := Expression (Expr_N);\n-                     Set_Expression (N, Expr_N);\n+                     Expr_Q := Expression (Expr);\n+                  else\n+                     Expr_Q := Expr;\n                   end if;\n \n-                  Obj_Id   := Make_Temporary (Loc, 'D', Expr_N);\n-                  Expr_Typ := Base_Type (Etype (Expr_N));\n+                  Obj_Id   := Make_Temporary (Loc, 'D', Expr_Q);\n+                  Expr_Typ := Base_Type (Etype (Expr_Q));\n \n                   if Is_Class_Wide_Type (Expr_Typ) then\n                      Expr_Typ := Root_Type (Expr_Typ);\n@@ -7527,12 +7547,13 @@ package body Exp_Ch3 is\n                   --  Replace\n                   --     CW : I'Class := Obj;\n                   --  by\n-                  --     Tmp : T := Obj;\n+                  --     Tmp : Typ := Obj;\n                   --     type Ityp is not null access I'Class;\n-                  --     CW  : I'Class renames Ityp (Tmp.I_Tag'Address).all;\n+                  --     Rnn : constant Ityp := Ityp (Tmp.I_Tag'Address);\n+                  --     CW  : I'Class renames Rnn.all;\n \n-                  if Comes_From_Source (Expr_N)\n-                    and then Nkind (Expr_N) = N_Identifier\n+                  if Comes_From_Source (Expr_Q)\n+                    and then Is_Entity_Name (Expr_Q)\n                     and then not Is_Interface (Expr_Typ)\n                     and then Interface_Present_In_Ancestor (Expr_Typ, Typ)\n                     and then (Expr_Typ = Etype (Expr_Typ)\n@@ -7546,7 +7567,7 @@ package body Exp_Ch3 is\n                          Defining_Identifier => Obj_Id,\n                          Object_Definition   =>\n                            New_Occurrence_Of (Expr_Typ, Loc),\n-                         Expression          => Relocate_Node (Expr_N)));\n+                         Expression          => Relocate_Node (Expr_Q)));\n \n                      --  Statically reference the tag associated with the\n                      --  interface\n@@ -7565,8 +7586,9 @@ package body Exp_Ch3 is\n                   --     implicit subtype CW is <Class_Wide_Subtype>;\n                   --     Tmp : CW := CW!(Obj);\n                   --     type Ityp is not null access I'Class;\n-                  --     IW : I'Class renames\n-                  --            Ityp!(Displace (Temp'Address, I'Tag)).all;\n+                  --     Rnn : constant Ityp :=\n+                  --             Ityp!(Displace (Tmp'Address, I'Tag));\n+                  --     IW : I'Class renames Rnn.all;\n \n                   else\n                      --  Generate the equivalent record type and update the\n@@ -7576,10 +7598,10 @@ package body Exp_Ch3 is\n                        (N             => N,\n                         Unc_Type      => Typ,\n                         Subtype_Indic => Obj_Def,\n-                        Exp           => Expr_N);\n+                        Exp           => Expr_Q);\n \n-                     if not Is_Interface (Etype (Expr_N)) then\n-                        New_Expr := Relocate_Node (Expr_N);\n+                     if not Is_Interface (Etype (Expr_Q)) then\n+                        New_Expr := Relocate_Node (Expr_Q);\n \n                      --  For interface types we use 'Address which displaces\n                      --  the pointer to the base of the object (if required)\n@@ -7590,7 +7612,7 @@ package body Exp_Ch3 is\n                             Make_Explicit_Dereference (Loc,\n                               Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n                                 Make_Attribute_Reference (Loc,\n-                                  Prefix => Relocate_Node (Expr_N),\n+                                  Prefix => Relocate_Node (Expr_Q),\n                                   Attribute_Name => Name_Address))));\n                      end if;\n \n@@ -7608,7 +7630,7 @@ package body Exp_Ch3 is\n                      --  This case occurs when the initialization expression\n                      --  has been previously expanded into a temporary object.\n \n-                     else pragma Assert (not Comes_From_Source (Expr_Q));\n+                     else\n                         Insert_Action (N,\n                           Make_Object_Renaming_Declaration (Loc,\n                             Defining_Identifier => Obj_Id,\n@@ -7634,80 +7656,38 @@ package body Exp_Ch3 is\n                               Loc)));\n                   end if;\n \n-                  Rewrite (N,\n-                    Make_Object_Renaming_Declaration (Loc,\n-                      Defining_Identifier => Make_Temporary (Loc, 'D'),\n-                      Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n-                      Name                =>\n-                        Convert_Tag_To_Interface (Typ, Tag_Comp)));\n+                  --  As explained in Exp_Disp, we use Convert_Tag_To_Interface\n+                  --  to do the final conversion, but we insert an intermediate\n+                  --  temporary before the dereference so that we can process\n+                  --  the expansion as part of the analysis of the declaration\n+                  --  of this temporary, and then rewrite manually the original\n+                  --  object as the simple renaming of this dereference.\n \n-                  --  If the original entity comes from source, then mark the\n-                  --  new entity as needing debug information, even though it's\n-                  --  defined by a generated renaming that does not come from\n-                  --  source, so that Materialize_Entity will be set on the\n-                  --  entity when Debug_Renaming_Declaration is called during\n-                  --  analysis.\n-\n-                  if Comes_From_Source (Def_Id) then\n-                     Set_Debug_Info_Needed (Defining_Identifier (N));\n-                  end if;\n-\n-                  Analyze (N, Suppress => All_Checks);\n-\n-                  --  Replace internal identifier of rewritten node by the\n-                  --  identifier found in the sources. We also have to exchange\n-                  --  entities containing their defining identifiers to ensure\n-                  --  the correct replacement of the object declaration by this\n-                  --  object renaming declaration because these identifiers\n-                  --  were previously added by Enter_Name to the current scope.\n-                  --  We must preserve the homonym chain of the source entity\n-                  --  as well. We must also preserve the kind of the entity,\n-                  --  which may be a constant. Preserve entity chain because\n-                  --  itypes may have been generated already, and the full\n-                  --  chain must be preserved for final freezing. Finally,\n-                  --  preserve Comes_From_Source setting, so that debugging\n-                  --  and cross-referencing information is properly kept, and\n-                  --  preserve source location, to prevent spurious errors when\n-                  --  entities are declared (they must have their own Sloc).\n-\n-                  declare\n-                     New_Id    : constant Entity_Id := Defining_Identifier (N);\n-                     Next_Temp : constant Entity_Id := Next_Entity (New_Id);\n-                     Save_CFS  : constant Boolean   :=\n-                                   Comes_From_Source (Def_Id);\n-                     Save_SP   : constant Node_Id   := SPARK_Pragma (Def_Id);\n-                     Save_SPI  : constant Boolean   :=\n-                                   SPARK_Pragma_Inherited (Def_Id);\n-\n-                  begin\n-                     Link_Entities (New_Id, Next_Entity (Def_Id));\n-                     Link_Entities (Def_Id, Next_Temp);\n-\n-                     Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n-                     Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n-                     Mutate_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n-                     Set_Sloc (Defining_Identifier (N), Sloc (Def_Id));\n+                  Tag_Comp := Convert_Tag_To_Interface (Typ, Tag_Comp);\n+                  pragma Assert (Nkind (Tag_Comp) = N_Explicit_Dereference\n+                    and then\n+                      Nkind (Prefix (Tag_Comp)) = N_Unchecked_Type_Conversion);\n \n-                     Set_Comes_From_Source (Def_Id, False);\n+                  Ptr_Obj_Id := Make_Temporary (Loc, 'R');\n \n-                     --  ??? This is extremely dangerous!!! Exchanging entities\n-                     --  is very low level, and as a result it resets flags and\n-                     --  fields which belong to the original Def_Id. Several of\n-                     --  these attributes are saved and restored, but there may\n-                     --  be many more that need to be preserverd.\n+                  Ptr_Obj_Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Ptr_Obj_Id,\n+                      Constant_Present    => True,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of\n+                          (Entity (Subtype_Mark (Prefix (Tag_Comp))), Loc),\n+                      Expression => Prefix (Tag_Comp));\n \n-                     Exchange_Entities (Defining_Identifier (N), Def_Id);\n+                  Insert_Action (N, Ptr_Obj_Decl, Suppress => All_Checks);\n \n-                     --  Restore clobbered attributes\n+                  Set_Prefix (Tag_Comp, New_Occurrence_Of (Ptr_Obj_Id, Loc));\n+                  Expr_Q := Tag_Comp;\n+                  Set_Etype (Expr_Q, Typ);\n \n-                     Set_Comes_From_Source      (Def_Id, Save_CFS);\n-                     Set_SPARK_Pragma           (Def_Id, Save_SP);\n-                     Set_SPARK_Pragma_Inherited (Def_Id, Save_SPI);\n-                  end;\n+                  Rewrite_As_Renaming := True;\n                end;\n \n-               return;\n-\n             else\n                return;\n             end if;\n@@ -7779,7 +7759,7 @@ package body Exp_Ch3 is\n             if Present (Tag_Assign) then\n                if Present (Following_Address_Clause (N)) then\n                   Ensure_Freeze_Node (Def_Id);\n-               elsif not Is_Special_Return_Object (Def_Id) then\n+               elsif not Special_Ret_Obj then\n                   Insert_Action_After (Init_After, Tag_Assign);\n                end if;\n \n@@ -7901,19 +7881,34 @@ package body Exp_Ch3 is\n                 --  secondary stack, then the declaration can be rewritten as\n                 --  the renaming of this dereference:\n \n-                --    type Axx is access all Typ;\n-                --    Rxx : constant Axx := Func (...)'reference;\n-                --    Obj : Typ renames Rxx.all;\n+                --    type Ann is access all Typ;\n+                --    Rnn : constant Axx := Func (...)'reference;\n+                --    Obj : Typ renames Rnn.all;\n \n                 --  This avoids an extra copy and, in the case where Typ needs\n                 --  finalization, a pair of Adjust/Finalize calls (see below).\n \n+                --  However, in the case of a special return object, we need to\n+                --  make sure that the object Rnn is properly recognized by the\n+                --  Is_Related_To_Func_Return predicate; otherwise, if it is of\n+                --  a type that needs finalization, Requires_Cleanup_Actions\n+                --  would return true because of this and Build_Finalizer would\n+                --  finalize it prematurely (see Expand_Simple_Function_Return\n+                --  for the same test in the case of a simple return).\n+\n+                --  Moreover, in the case of a special return object, we also\n+                --  need to make sure that the two functions return on the same\n+                --  stack, otherwise we would create a dangling reference.\n+\n                 and then\n                   ((not Is_Library_Level_Entity (Def_Id)\n-                     and then Nkind (Expr_Q) = N_Explicit_Dereference\n-                     and then not Comes_From_Source (Expr_Q)\n-                     and then Nkind (Original_Node (Expr_Q)) = N_Function_Call\n-                     and then not Is_Class_Wide_Type (Typ))\n+                     and then Is_Captured_Function_Call (Expr_Q)\n+                     and then\n+                       (not Special_Ret_Obj\n+                         or else\n+                          (Is_Related_To_Func_Return (Entity (Prefix (Expr_Q)))\n+                            and then Needs_Secondary_Stack (Etype (Expr_Q)) =\n+                                     Needs_Secondary_Stack (Etype (Func_Id)))))\n \n                    --  If the initializing expression is a variable with the\n                    --  flag OK_To_Rename set, then transform:\n@@ -7924,12 +7919,14 @@ package body Exp_Ch3 is\n \n                    --     Obj : Typ renames Expr;\n \n-                   or else OK_To_Rename_Ref (Expr_Q)\n+                   or else (OK_To_Rename_Ref (Expr_Q)\n+                             and then not Special_Ret_Obj)\n \n                    --  Likewise if it is a slice of such a variable\n \n                    or else (Nkind (Expr_Q) = N_Slice\n-                             and then OK_To_Rename_Ref (Prefix (Expr_Q))));\n+                             and then OK_To_Rename_Ref (Prefix (Expr_Q))\n+                             and then not Special_Ret_Obj));\n \n             --  If the type needs finalization and is not inherently limited,\n             --  then the target is adjusted after the copy and attached to the\n@@ -7950,9 +7947,7 @@ package body Exp_Ch3 is\n                    Obj_Ref => New_Occurrence_Of (Def_Id, Loc),\n                    Typ     => Base_Typ);\n \n-               if Present (Adj_Call)\n-                 and then not Is_Special_Return_Object (Def_Id)\n-               then\n+               if Present (Adj_Call) and then not Special_Ret_Obj then\n                   Insert_Action_After (Init_After, Adj_Call);\n                end if;\n             end if;\n@@ -8122,8 +8117,6 @@ package body Exp_Ch3 is\n \n       if Is_Build_In_Place_Return_Object (Def_Id) then\n          declare\n-            Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n-\n             Init_Stmt       : Node_Id;\n             Obj_Acc_Formal  : Entity_Id;\n \n@@ -8415,7 +8408,6 @@ package body Exp_Ch3 is\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n                                Temp_Typ   => Acc_Typ,\n-                               Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Heap_Allocator))),\n \n@@ -8439,7 +8431,6 @@ package body Exp_Ch3 is\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n                                Temp_Typ   => Acc_Typ,\n-                               Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Pool_Allocator)))),\n \n@@ -8556,14 +8547,12 @@ package body Exp_Ch3 is\n \n       --  If we can rename the initialization expression, we need to make sure\n       --  that we use the proper type in the case of a return object that lives\n-      --  on the secondary stack. See other cases below for a similar handling.\n+      --  on the secondary stack (see other cases below for a similar handling)\n+      --  and that the tag is assigned in the case of any return object.\n \n       elsif Rewrite_As_Renaming then\n-         if Is_Secondary_Stack_Return_Object (Def_Id) then\n+         if Special_Ret_Obj then\n             declare\n-               Func_Id  : constant Entity_Id  :=\n-                 Return_Applies_To (Scope (Def_Id));\n-\n                Desig_Typ : constant Entity_Id :=\n                  (if Ekind (Typ) = E_Array_Subtype\n                   then Etype (Func_Id) else Typ);\n@@ -8576,6 +8565,22 @@ package body Exp_Ch3 is\n                   Set_Etype (Def_Id, Desig_Typ);\n                   Set_Actual_Subtype (Def_Id, Typ);\n                end if;\n+\n+               if Present (Tag_Assign) then\n+                  Insert_Action_After (Init_After, Tag_Assign);\n+               end if;\n+\n+               --  Ada 2005 (AI95-344): If the result type is class-wide,\n+               --  insert a check that the level of the return expression's\n+               --  underlying type is not deeper than the level of the master\n+               --  enclosing the function.\n+\n+               --  AI12-043: The check is made immediately after the return\n+               --  object is created.\n+\n+               if Is_Class_Wide_Type (Etype (Func_Id)) then\n+                  Apply_CW_Accessibility_Check (Expr_Q, Func_Id);\n+               end if;\n             end;\n          end if;\n \n@@ -8597,9 +8602,6 @@ package body Exp_Ch3 is\n \n       elsif Is_Secondary_Stack_Return_Object (Def_Id) then\n          declare\n-            Func_Id  : constant Entity_Id  :=\n-              Return_Applies_To (Scope (Def_Id));\n-\n             Desig_Typ : constant Entity_Id :=\n               (if Ekind (Typ) = E_Array_Subtype\n                then Etype (Func_Id) else Typ);\n@@ -8684,8 +8686,8 @@ package body Exp_Ch3 is\n       --    type Txx is access all ...;\n       --    Rxx : constant Txx :=\n       --      new <expression-type>['(<expression>)][storage_pool =\n-      --        system__secondary_stack__rs_pool][procedure_to_call =\n-      --        system__secondary_stack__rs_allocate];\n+      --        system__return_stack__rs_pool][procedure_to_call =\n+      --        system__return_stack__rs_allocate];\n \n       --    Result : T renames Rxx.all;\n "}, {"sha": "d9103b3387b430ec9f312cd8a20e96f73f697656", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 36, "deletions": 50, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2728,7 +2728,6 @@ package body Exp_Ch4 is\n       Len        : Unat;\n       J          : Nat;\n       Clen       : Node_Id;\n-      Decl       : Node_Id;\n       Set        : Boolean;\n \n    --  Start of processing for Expand_Concatenate\n@@ -3255,32 +3254,10 @@ package body Exp_Ch4 is\n       Set_Is_Internal       (Ent);\n       Set_Debug_Info_Needed (Ent);\n \n-      --  If the bound is statically known to be out of range, we do not want\n-      --  to abort, we want a warning and a constraint error at run time. Note\n-      --  that we have arranged that the result will not be treated as a static\n-      --  constant, so we won't get an illegality during the insertion. We also\n-      --  enable all checks (in particular range checks) in case the bounds of\n-      --  Subtyp_Ind are out of range.\n-\n-      Decl :=\n-        Make_Object_Declaration (Loc,\n-          Defining_Identifier => Ent,\n-          Object_Definition   => Subtyp_Ind);\n-      Insert_Action (Cnode, Decl);\n-\n-      --  If the result of the concatenation appears as the initializing\n-      --  expression of an object declaration, we can just rename the\n-      --  result, rather than copying it.\n-\n-      Set_OK_To_Rename (Ent);\n-\n       --  If we are concatenating strings and the current scope already uses\n       --  the secondary stack, allocate the result also on the secondary stack\n       --  to avoid putting too much pressure on the primary stack.\n \n-      --  We use an unconstrained allocation, i.e. we also allocate the bounds,\n-      --  so that the result can be renamed in all contexts.\n-\n       --  Don't do this if -gnatd.h is set, as this will break the wrapping of\n       --  Cnode in an Expression_With_Actions, see Expand_N_Op_Concat.\n \n@@ -3291,33 +3268,32 @@ package body Exp_Ch4 is\n       then\n          --  Generate:\n          --     subtype Axx is String (<low-bound> .. <high-bound>)\n-         --     type Ayy is access String;\n+         --     type Ayy is access Axx;\n          --     Rxx : Ayy := new <Axx> [storage_pool = ss_pool];\n-         --     Sxx : String renames Rxx.all;\n+         --     Sxx : Axx renames Rxx.all;\n \n          declare\n             ConstrT : constant Entity_Id := Make_Temporary (Loc, 'A');\n             Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n-            Alloc   : Node_Id;\n-            Deref   : Node_Id;\n-            Temp    : Entity_Id;\n+            Alloc : Node_Id;\n+            Temp  : Entity_Id;\n \n          begin\n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Subtype_Declaration (Loc,\n                 Defining_Identifier => ConstrT,\n                 Subtype_Indication  => Subtyp_Ind),\n               Suppress => All_Checks);\n \n-            Freeze_Itype (ConstrT, Decl);\n+            Freeze_Itype (ConstrT, Cnode);\n \n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Acc_Typ,\n                 Type_Definition     =>\n                   Make_Access_To_Object_Definition (Loc,\n-                    Subtype_Indication => New_Occurrence_Of (Atyp, Loc))),\n+                    Subtype_Indication => New_Occurrence_Of (ConstrT, Loc))),\n               Suppress => All_Checks);\n \n             Mutate_Ekind (Acc_Typ, E_Access_Type);\n@@ -3335,33 +3311,43 @@ package body Exp_Ch4 is\n             Set_No_Initialization (Alloc);\n \n             Temp := Make_Temporary (Loc, 'R', Alloc);\n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n                 Object_Definition   => New_Occurrence_Of (Acc_Typ, Loc),\n                 Expression          => Alloc),\n               Suppress => All_Checks);\n \n-            Deref :=\n-              Make_Explicit_Dereference (Loc,\n-                Prefix => New_Occurrence_Of (Temp, Loc));\n-            Set_Etype (Deref, Atyp);\n-\n-            Rewrite (Decl,\n+            Insert_Action (Cnode,\n               Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => Ent,\n-                Subtype_Mark        => New_Occurrence_Of (Atyp, Loc),\n-                Name                => Deref));\n-\n-            --  We do not analyze this renaming declaration because this would\n-            --  change the subtype of Ent back to a constrained string.\n-\n-            Set_Etype (Ent, Atyp);\n-            Set_Renamed_Object (Ent, Deref);\n-            Set_Analyzed (Decl);\n+                Subtype_Mark        => New_Occurrence_Of (ConstrT, Loc),\n+                Name                =>\n+                  Make_Explicit_Dereference (Loc,\n+                    Prefix => New_Occurrence_Of (Temp, Loc))),\n+              Suppress => All_Checks);\n          end;\n+\n+      else\n+         --  If the bound is statically known to be out of range, we do not\n+         --  want to abort, we want a warning and a runtime constraint error.\n+         --  Note that we have arranged that the result will not be treated\n+         --  as a static constant, so we won't get an illegality during this\n+         --  insertion. We also enable checks (in particular range checks) in\n+         --  case the bounds of Subtyp_Ind are out of range.\n+\n+         Insert_Action (Cnode,\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Ent,\n+             Object_Definition   => Subtyp_Ind));\n       end if;\n \n+      --  If the result of the concatenation appears as the initializing\n+      --  expression of an object declaration, we can just rename the\n+      --  result, rather than copying it.\n+\n+      Set_OK_To_Rename (Ent);\n+\n       --  Catch the static out of range case now\n \n       if Raises_Constraint_Error (High_Bound)\n@@ -11836,7 +11822,7 @@ package body Exp_Ch4 is\n \n          if Is_Fixed_Point_Type (Etype (Expr)) then\n             Ityp := Small_Integer_Type_For\n-                      (Esize (Base_Type (Etype (Expr))), False);\n+                      (Esize (Base_Type (Etype (Expr))), Uns => False);\n \n             --  Generate a temporary with the integer type to facilitate in the\n             --  C backend the code generation for the unchecked conversion.\n@@ -12206,7 +12192,7 @@ package body Exp_Ch4 is\n             declare\n                Expr_Id : constant Entity_Id := Make_Temporary (Loc, 'T', Conv);\n                Int_Typ : constant Entity_Id :=\n-                           Small_Integer_Type_For (RM_Size (Btyp), False);\n+                 Small_Integer_Type_For (RM_Size (Btyp), Uns => False);\n \n             begin\n                --  Generate a temporary with the integer value. Required in the"}, {"sha": "b97d69b81b6d3c272bc618af45f30d919a80efa8", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -6435,16 +6435,21 @@ package body Exp_Ch6 is\n       --  The result type of the function\n \n       Utyp : constant Entity_Id := Underlying_Type (R_Type);\n+      --  The underlying result type of the function\n \n       Exp : Node_Id := Expression (N);\n       pragma Assert (Present (Exp));\n \n       Exp_Is_Function_Call : constant Boolean :=\n         Nkind (Exp) = N_Function_Call\n-          or else (Nkind (Exp) = N_Explicit_Dereference\n-                   and then Is_Entity_Name (Prefix (Exp))\n-                   and then Ekind (Entity (Prefix (Exp))) = E_Constant\n-                   and then Is_Related_To_Func_Return (Entity (Prefix (Exp))));\n+          or else\n+            (Is_Captured_Function_Call (Exp)\n+              and then Is_Related_To_Func_Return (Entity (Prefix (Exp))));\n+      --  If the expression is a captured function call, then we need to make\n+      --  sure that the object doing the capture is properly recognized by the\n+      --  Is_Related_To_Func_Return predicate; otherwise, if it is of a type\n+      --  that needs finalization, Requires_Cleanup_Actions would return true\n+      --  because of this and Build_Finalizer would finalize it prematurely.\n \n       Exp_Typ : constant Entity_Id := Etype (Exp);\n       --  The type of the expression (not necessarily the same as R_Type)\n@@ -6628,7 +6633,8 @@ package body Exp_Ch6 is\n          --  size. We create an actual subtype for this purpose. However we\n          --  need not do it if the expression is a function call since this\n          --  will be done in the called function and doing it here too would\n-         --  cause a temporary with maximum size to be created.\n+         --  cause a temporary with maximum size to be created. Likewise for\n+         --  a special return object, since there is no copy in this case.\n \n          declare\n             Ubt  : constant Entity_Id := Underlying_Type (Base_Type (Exp_Typ));\n@@ -6637,6 +6643,8 @@ package body Exp_Ch6 is\n \n          begin\n             if not Exp_Is_Function_Call\n+              and then not (Is_Entity_Name (Exp)\n+                             and then Is_Special_Return_Object (Entity (Exp)))\n               and then Has_Defaulted_Discriminants (Ubt)\n               and then not Is_Constrained (Ubt)\n               and then not Has_Unchecked_Union (Ubt)\n@@ -7763,10 +7771,10 @@ package body Exp_Ch6 is\n          return False;\n       end if;\n \n-      --  If the function is imported from a foreign language, we don't do\n-      --  build-in-place, whereas Import (Ada) functions can do it. Note also\n-      --  that it is OK for a build-in-place function to return a type with a\n-      --  foreign convention because the machinery ensures there is no copying.\n+      --  We never use build-in-place if the convention is other than Ada,\n+      --  but note that it is OK for a build-in-place function to return a\n+      --  type with a foreign convention because the machinery ensures there\n+      --  is no copying.\n \n       return (Kind in E_Function | E_Generic_Function\n                or else\n@@ -9382,6 +9390,10 @@ package body Exp_Ch6 is\n       Preserve_Comes_From_Source (Orig_Id, Orig_Decl);\n \n       Set_Comes_From_Source (New_Id, False);\n+\n+      --  Preserve aliased indication\n+\n+      Set_Is_Aliased (Orig_Id, Is_Aliased (New_Id));\n    end Replace_Renaming_Declaration_Id;\n \n    ---------------------------------"}, {"sha": "4cb26890ea222f6b145118919aa1f01cd3250a17", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2391,14 +2391,17 @@ package body Exp_Ch7 is\n \n                --  Detect a case where a source object has been initialized by\n                --  a controlled function call or another object which was later\n-               --  rewritten as a class-wide conversion of Ada.Tags.Displace.\n+               --  rewritten as a class-wide conversion of Ada.Tags.Displace:\n \n-               --     Obj1 : CW_Type := Src_Obj;\n-               --     Obj2 : CW_Type := Function_Call (...);\n+               --     Obj1 : CW_Type := Function_Call (...);\n+               --     Obj2 : CW_Type := Src_Obj;\n \n-               --     Obj1 : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n                --     Tmp  : ... := Function_Call (...)'reference;\n-               --     Obj2 : CW_Type renames (... Ada.Tags.Displace (Tmp));\n+               --     Rnn  : access CW_Type := (... Ada.Tags.Displace (Tmp));\n+               --     Obj1 : CW_Type renames Rnn.all;\n+\n+               --     Rnn : access CW_Type := (...Ada.Tags.Displace (Src_Obj));\n+               --     Obj2 : CW_Type renames Rnn.all;\n \n                elsif Is_Displacement_Of_Object_Or_Function_Result (Obj_Id) then\n                   Processing_Actions (Has_No_Init => True);"}, {"sha": "9c2554fa1e950b4f33285cd551058d07d5350543", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -338,7 +338,8 @@ package body Exp_Put_Image is\n \n          --  For other elementary types, generate:\n          --\n-         --     Wide_Wide_Put (Sink, U_Type'Wide_Wide_Image (Item));\n+         --     Wide_Wide_Put (Root_Buffer_Type'Class (Sink),\n+         --       U_Type'Wide_Wide_Image (Item));\n          --\n          --  It would be more elegant to do it the other way around (define\n          --  '[[Wide_]Wide_]Image in terms of 'Put_Image). But this is easier\n@@ -362,13 +363,23 @@ package body Exp_Put_Image is\n                 Prefix => New_Occurrence_Of (U_Type, Loc),\n                 Attribute_Name => Name_Wide_Wide_Image,\n                 Expressions => New_List (Relocate_Node (Item)));\n+            Sink_Exp : constant Node_Id :=\n+              Make_Type_Conversion (Loc,\n+                Subtype_Mark =>\n+                  New_Occurrence_Of\n+                    (Class_Wide_Type (RTE (RE_Root_Buffer_Type)), Loc),\n+                Expression   => Relocate_Node (Sink));\n             Put_Call : constant Node_Id :=\n               Make_Procedure_Call_Statement (Loc,\n                 Name =>\n                   New_Occurrence_Of (RTE (RE_Wide_Wide_Put), Loc),\n                 Parameter_Associations => New_List\n-                  (Relocate_Node (Sink), Image));\n+                  (Sink_Exp, Image));\n          begin\n+            --  We have built a dispatching call to handle calls to\n+            --  descendants (since they are not available through rtsfind).\n+            --  Further details available in the body of Put_String_Exp.\n+\n             return Put_Call;\n          end;\n       end if;\n@@ -427,12 +438,28 @@ package body Exp_Put_Image is\n             (Etype (Next_Formal (First_Formal (Libent))),\n              Relocate_Node (Item));\n       begin\n-         return\n-           Make_Procedure_Call_Statement (Loc,\n-             Name => New_Occurrence_Of (Libent, Loc),\n-             Parameter_Associations => New_List (\n-               Relocate_Node (Sink),\n-               Conv));\n+         --  Do not output string delimiters if this is part of an\n+         --  interpolated string literal.\n+\n+         if Nkind (Parent (N)) = N_Expression_With_Actions\n+           and then Nkind (Original_Node (Parent (N)))\n+                      = N_Interpolated_String_Literal\n+         then\n+            return\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (Libent, Loc),\n+                Parameter_Associations => New_List (\n+                  Relocate_Node (Sink),\n+                  Conv,\n+                  New_Occurrence_Of (Stand.Standard_False, Loc)));\n+         else\n+            return\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (Libent, Loc),\n+                Parameter_Associations => New_List (\n+                  Relocate_Node (Sink),\n+                  Conv));\n+         end if;\n       end;\n    end Build_String_Put_Image_Call;\n "}, {"sha": "23ee3496b2380bc207dd311d7e9e62e2f1a2874d", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -78,8 +78,11 @@ package body Exp_Tss is\n       else\n          Proc := Init_Proc (Base_Type (Full_Type), Ref);\n \n+         --  For derived record types, if the base type does not have one,\n+         --  we use the Init_Proc of the ancestor type.\n+\n          if No (Proc)\n-           and then Is_Composite_Type (Full_Type)\n+           and then Is_Record_Type (Full_Type)\n            and then Is_Derived_Type (Full_Type)\n          then\n             return Init_Proc (Root_Type (Full_Type), Ref);"}, {"sha": "ab4b18da5386a278f646ab048c697020e142872f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 137, "deletions": 56, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -7913,6 +7913,7 @@ package body Exp_Util is\n                | N_Indexed_Component\n                | N_Integer_Literal\n                | N_Iterator_Specification\n+               | N_Interpolated_String_Literal\n                | N_Itype_Reference\n                | N_Label\n                | N_Loop_Parameter_Specification\n@@ -8122,6 +8123,10 @@ package body Exp_Util is\n \n    function Integer_Type_For (S : Uint; Uns : Boolean) return Entity_Id is\n    begin\n+      pragma Assert\n+        (Standard_Long_Integer_Size in\n+         Standard_Integer_Size | Standard_Long_Long_Integer_Size);\n+      --  So we don't need to check for Standard_Long_Integer_Size below\n       pragma Assert (S <= System_Max_Integer_Size);\n \n       --  This is the canonical 32-bit type\n@@ -8156,6 +8161,30 @@ package body Exp_Util is\n       end if;\n    end Integer_Type_For;\n \n+   -------------------------------\n+   -- Is_Captured_Function_Call --\n+   -------------------------------\n+\n+   function Is_Captured_Function_Call (N : Node_Id) return Boolean is\n+   begin\n+      if Nkind (N) = N_Explicit_Dereference\n+        and then Is_Entity_Name (Prefix (N))\n+        and then Ekind (Entity (Prefix (N))) = E_Constant\n+      then\n+         declare\n+            Value : constant Node_Id := Constant_Value (Entity (Prefix (N)));\n+\n+         begin\n+            return Present (Value)\n+              and then Nkind (Value) = N_Reference\n+              and then Nkind (Prefix (Value)) = N_Function_Call;\n+         end;\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Captured_Function_Call;\n+\n    --------------------------------------------------\n    -- Is_Displacement_Of_Object_Or_Function_Result --\n    --------------------------------------------------\n@@ -8310,8 +8339,9 @@ package body Exp_Util is\n \n       --  is rewritten into:\n \n-      --     Temp : ... := Function_Call (...)'reference;\n-      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n+      --     Tmp : ... := Function_Call (...)'reference;\n+      --     Rnn : constant access CW_Type := (... Ada.Tags.Displace (Tmp));\n+      --     Obj : CW_Type renames Rnn.all;\n \n       --  where the return type of the function and the class-wide type require\n       --  dispatch table pointer displacement.\n@@ -8322,8 +8352,9 @@ package body Exp_Util is\n \n       --  is rewritten into:\n \n-      --     Temp : ... := Function_Call (Container, ...)'reference;\n-      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n+      --     Tmp : ... := Function_Call (Container, ...)'reference;\n+      --     Rnn : constant access CW_Type := (... Ada.Tags.Displace (Tmp));\n+      --     Obj : CW_Type renames Rnn.all;\n \n       --  where the container element type and the class-wide type require\n       --  dispatch table pointer dispacement.\n@@ -8334,14 +8365,21 @@ package body Exp_Util is\n \n       --  is rewritten into:\n \n-      --     Obj : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n+      --     Rnn : constant access CW_Type := (...Ada.Tags.Displace (Src_Obj));\n+      --     Obj : CW_Type renames Rnn.all;\n \n       --  where the type of the source object and the class-wide type require\n       --  dispatch table pointer displacement.\n \n       if Nkind (Obj_Decl) = N_Object_Renaming_Declaration\n         and then Is_Class_Wide_Type (Obj_Typ)\n-        and then Is_Displace_Call (Renamed_Object (Obj_Id))\n+        and then not Is_Special_Return_Object (Obj_Id)\n+        and then Nkind (Renamed_Object (Obj_Id)) = N_Explicit_Dereference\n+        and then Is_Entity_Name (Prefix (Renamed_Object (Obj_Id)))\n+        and then Ekind (Entity (Prefix (Renamed_Object (Obj_Id)))) = E_Constant\n+        and then\n+          Is_Displace_Call\n+            (Constant_Value (Entity (Prefix (Renamed_Object (Obj_Id)))))\n         and then Nkind (Orig_Decl) = N_Object_Declaration\n         and then Comes_From_Source (Orig_Decl)\n       then\n@@ -8351,9 +8389,10 @@ package body Exp_Util is\n            Is_Controlled_Function_Call (Orig_Expr)\n              or else Is_Controlled_Indexing (Orig_Expr)\n              or else Is_Source_Object (Orig_Expr);\n-      end if;\n \n-      return False;\n+      else\n+         return False;\n+      end if;\n    end Is_Displacement_Of_Object_Or_Function_Result;\n \n    ------------------------------\n@@ -9168,7 +9207,8 @@ package body Exp_Util is\n           and then Nkind (Unqual_Conv (Expr)) = N_Explicit_Dereference\n           and then (Nkind (Parent (Expr)) = N_Simple_Return_Statement\n                      or else\n-                       (Nkind (Parent (Expr)) = N_Object_Renaming_Declaration\n+                       (Nkind (Parent (Expr)) in N_Object_Declaration\n+                                               | N_Object_Renaming_Declaration\n                          and then\n                         Is_Return_Object (Defining_Entity (Parent (Expr)))));\n    end Is_Related_To_Func_Return;\n@@ -9639,7 +9679,7 @@ package body Exp_Util is\n \n    --   type Equiv_T is record\n    --     _parent : T (List of discriminant constraints taken from Exp);\n-   --     Ext__50 : Storage_Array (1 .. (Exp'size - Typ'object_size)/8);\n+   --     Cnn : Storage_Array (1 .. (Exp'size - Typ'object_size)/Storage_Unit);\n    --   end Equiv_T;\n    --\n    --  Note that this type does not guarantee same alignment as all derived\n@@ -9663,7 +9703,63 @@ package body Exp_Util is\n       Range_Type  : Entity_Id;\n       Str_Type    : Entity_Id;\n       Constr_Root : Entity_Id;\n-      Sizexpr     : Node_Id;\n+      Size_Expr   : Node_Id;\n+      Size_Pref   : Node_Id;\n+\n+      function Has_Tag_Of_Type (Exp : Node_Id) return Boolean;\n+      --  Return True if expression Exp of a tagged type is known to statically\n+      --  have the tag of this tagged type as specified by RM 3.9(19-25).\n+\n+      ---------------------\n+      -- Has_Tag_Of_Type --\n+      ---------------------\n+\n+      function Has_Tag_Of_Type (Exp : Node_Id) return Boolean is\n+         Typ : constant Entity_Id := Etype (Exp);\n+\n+      begin\n+         pragma Assert (Is_Tagged_Type (Typ));\n+\n+         --  The tag of an object of a class-wide type is that of its\n+         --  initialization expression.\n+\n+         if Is_Class_Wide_Type (Typ) then\n+            return False;\n+         end if;\n+\n+         --  The tag of a stand-alone object of a specific tagged type T\n+         --  identifies T.\n+\n+         if Is_Entity_Name (Exp)\n+           and then Ekind (Entity (Exp)) in E_Constant | E_Variable\n+         then\n+            return True;\n+\n+         else\n+            case Nkind (E) is\n+               --  The tag of a component or an aggregate of a specific tagged\n+               --  type T identifies T.\n+\n+               when N_Indexed_Component\n+                 |  N_Selected_Component\n+                 |  N_Aggregate\n+               =>\n+                  return True;\n+\n+               --  The tag of the result returned by a function whose result\n+               --  type is a specific tagged type T identifies T.\n+\n+               when N_Function_Call =>\n+                  return True;\n+\n+               when N_Explicit_Dereference =>\n+                  return Is_Captured_Function_Call (Exp);\n+\n+               when others =>\n+                  return False;\n+            end case;\n+         end if;\n+      end Has_Tag_Of_Type;\n \n    begin\n       --  If the root type is already constrained, there are no discriminants\n@@ -9698,42 +9794,51 @@ package body Exp_Util is\n \n       Range_Type := Make_Temporary (Loc, 'G');\n \n+      --  If the expression is known to have the tag of its type, then we can\n+      --  use it directly for the prefix of the Size attribute; otherwise we\n+      --  need to convert it first to the class-wide type to force a call to\n+      --  the _Size primitive operation.\n+\n+      if Has_Tag_Of_Type (E) then\n+         Size_Pref := Duplicate_Subexpr_No_Checks (E);\n+      else\n+         Size_Pref := OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E));\n+      end if;\n+\n       if not Is_Interface (Root_Typ) then\n \n          --  subtype rg__xx is\n-         --    Storage_Offset range 1 .. (Expr'size - typ'object_size)\n+         --    Storage_Offset range 1 .. (Exp'size - Typ'object_size)\n          --                                / Storage_Unit\n \n-         Sizexpr :=\n+         Size_Expr :=\n            Make_Op_Subtract (Loc,\n              Left_Opnd =>\n                Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E)),\n+                 Prefix => Size_Pref,\n                  Attribute_Name => Name_Size),\n              Right_Opnd =>\n                Make_Attribute_Reference (Loc,\n                  Prefix => New_Occurrence_Of (Constr_Root, Loc),\n                  Attribute_Name => Name_Object_Size));\n       else\n          --  subtype rg__xx is\n-         --    Storage_Offset range 1 .. (Expr'size - Ada.Tags.Tag'object_size)\n+         --    Storage_Offset range 1 .. (Exp'size - Ada.Tags.Tag'object_size)\n          --                                / Storage_Unit\n \n-         Sizexpr :=\n+         Size_Expr :=\n            Make_Op_Subtract (Loc,\n              Left_Opnd =>\n                Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E)),\n+                 Prefix => Size_Pref,\n                  Attribute_Name => Name_Size),\n              Right_Opnd =>\n                Make_Attribute_Reference (Loc,\n                  Prefix => New_Occurrence_Of (RTE (RE_Tag), Loc),\n                  Attribute_Name => Name_Object_Size));\n       end if;\n \n-      Set_Paren_Count (Sizexpr, 1);\n+      Set_Paren_Count (Size_Expr, 1);\n \n       Append_To (List_Def,\n         Make_Subtype_Declaration (Loc,\n@@ -9747,7 +9852,7 @@ package body Exp_Util is\n                     Low_Bound => Make_Integer_Literal (Loc, 1),\n                     High_Bound =>\n                       Make_Op_Divide (Loc,\n-                        Left_Opnd => Sizexpr,\n+                        Left_Opnd => Size_Expr,\n                         Right_Opnd => Make_Integer_Literal (Loc,\n                             Intval => System_Storage_Unit)))))));\n \n@@ -12873,14 +12978,17 @@ package body Exp_Util is\n \n             --  Detect a case where a source object has been initialized by\n             --  a controlled function call or another object which was later\n-            --  rewritten as a class-wide conversion of Ada.Tags.Displace.\n+            --  rewritten as a class-wide conversion of Ada.Tags.Displace:\n \n-            --     Obj1 : CW_Type := Src_Obj;\n-            --     Obj2 : CW_Type := Function_Call (...);\n+            --     Obj1 : CW_Type := Function_Call (...);\n+            --     Obj2 : CW_Type := Src_Obj;\n \n-            --     Obj1 : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n             --     Tmp  : ... := Function_Call (...)'reference;\n-            --     Obj2 : CW_Type renames (... Ada.Tags.Displace (Tmp));\n+            --     Rnn  : access CW_Type := (... Ada.Tags.Displace (Tmp));\n+            --     Obj1 : CW_Type renames Rnn.all;\n+\n+            --     Rnn  : access CW_Type := (... Ada.Tags.Displace (Src_Obj));\n+            --     Obj2 : CW_Type renames Rnn.all;\n \n             elsif Is_Displacement_Of_Object_Or_Function_Result (Obj_Id) then\n                return True;\n@@ -14023,7 +14131,8 @@ package body Exp_Util is\n    function Small_Integer_Type_For (S : Uint; Uns : Boolean) return Entity_Id\n    is\n    begin\n-      pragma Assert (S <= System_Max_Integer_Size);\n+      --  The only difference between this and Integer_Type_For is that this\n+      --  can return small (8- or 16-bit) types.\n \n       if S <= Standard_Short_Short_Integer_Size then\n          if Uns then\n@@ -14039,36 +14148,8 @@ package body Exp_Util is\n             return Standard_Short_Integer;\n          end if;\n \n-      elsif S <= Standard_Integer_Size then\n-         if Uns then\n-            return Standard_Unsigned;\n-         else\n-            return Standard_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Unsigned;\n-         else\n-            return Standard_Long_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Long_Unsigned;\n-         else\n-            return Standard_Long_Long_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Long_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Long_Long_Unsigned;\n-         else\n-            return Standard_Long_Long_Long_Integer;\n-         end if;\n-\n       else\n-         raise Program_Error;\n+         return Integer_Type_For (S, Uns);\n       end if;\n    end Small_Integer_Type_For;\n "}, {"sha": "b770d029cd9e2d6e18f649bb5a2fe8d47c94fee4", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -757,6 +757,14 @@ package Exp_Util is\n    --  Return a suitable standard integer type containing at least S bits and\n    --  of the signedness given by Uns. See also Small_Integer_Type_For.\n \n+   function Is_Captured_Function_Call (N : Node_Id) return Boolean;\n+   --  Return True if N is a captured function call, i.e. the result of calling\n+   --  Remove_Side_Effects on an N_Function_Call node:\n+\n+   --    type Ann is access all Typ;\n+   --    Rnn : constant Ann := Func (...)'reference;\n+   --    Rnn.all\n+\n    function Is_Displacement_Of_Object_Or_Function_Result\n      (Obj_Id : Entity_Id) return Boolean;\n    --  Determine whether Obj_Id is a source entity that has been initialized by\n@@ -817,6 +825,10 @@ package Exp_Util is\n    --  Determine whether object Id is related to an expanded return statement.\n    --  The case concerned is \"return Id.all;\".\n \n+   --  This is effectively used to determine which temporaries generated for\n+   --  return statements must be finalized because they are regular temporaries\n+   --  and which ones must not be since they are allocated on the return stack.\n+\n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n    function Is_Renamed_Object (N : Node_Id) return Boolean;"}, {"sha": "4687cedc99d27d87a72631a7aafa210481ff8cb7", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -515,6 +515,9 @@ package body Expander is\n                when N_Variant_Part =>\n                   Expand_N_Variant_Part (N);\n \n+               when N_Interpolated_String_Literal =>\n+                  Expand_N_Interpolated_String_Literal (N);\n+\n                --  For all other node kinds, no expansion activity required\n \n                when others =>"}, {"sha": "0e55f146e28fb752044741dc89a8e0101adfae1d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -398,7 +398,7 @@ package body Freeze is\n       Nam        : constant Node_Id := Name (N);\n       Old_S      : Entity_Id;\n       Spec       : constant Node_Id := New_Copy_Tree (Specification (Decl));\n-      Actuals    : List_Id := No_List;\n+      Actuals    : List_Id;\n       Call_Node  : Node_Id;\n       Call_Name  : Node_Id;\n       Body_Node  : Node_Id;\n@@ -473,18 +473,20 @@ package body Freeze is\n          Set_Is_Overloaded (Call_Name, False);\n       end if;\n \n+      if Nkind (Decl) /= N_Subprogram_Declaration then\n+         Rewrite (N,\n+           Make_Subprogram_Declaration (Loc,\n+             Specification => Specification (N)));\n+      end if;\n+\n       --  For simple renamings, subsequent calls can be expanded directly as\n       --  calls to the renamed entity. The body must be generated in any case\n       --  for calls that may appear elsewhere. This is not done in the case\n       --  where the subprogram is an instantiation because the actual proper\n-      --  body has not been built yet. This is also not done in GNATprove mode\n-      --  as we need to check other conditions for creating a body to inline\n-      --  in that case, which are controlled in Analyze_Subprogram_Body_Helper.\n+      --  body has not been built yet.\n \n       if Ekind (Old_S) in E_Function | E_Procedure\n-        and then Nkind (Decl) = N_Subprogram_Declaration\n         and then not Is_Generic_Instance (Old_S)\n-        and then not GNATprove_Mode\n       then\n          Set_Body_To_Inline (Decl, Old_S);\n       end if;\n@@ -658,12 +660,6 @@ package body Freeze is\n                  Statements => New_List (Call_Node)));\n       end if;\n \n-      if Nkind (Decl) /= N_Subprogram_Declaration then\n-         Rewrite (N,\n-           Make_Subprogram_Declaration (Loc,\n-             Specification => Specification (N)));\n-      end if;\n-\n       --  Link the body to the entity whose declaration it completes. If\n       --  the body is analyzed when the renamed entity is frozen, it may\n       --  be necessary to restore the proper scope (see package Exp_Ch13).\n@@ -6281,7 +6277,10 @@ package body Freeze is\n          end if;\n \n          --  Otherwise, loop through scopes checking if an enclosing scope\n-         --  comes from source or is a generic.\n+         --  comes from source or is a generic. Note that, for the purpose\n+         --  of this test, we need to consider that the internally generated\n+         --  subprogram described above comes from source too if the original\n+         --  subprogram itself does.\n \n          declare\n             S : Entity_Id;\n@@ -6291,6 +6290,8 @@ package body Freeze is\n             while Present (S) loop\n                if Is_Overloadable (S) then\n                   if Comes_From_Source (S)\n+                    or else (Chars (S) = Name_uWrapped_Statements\n+                              and then Comes_From_Source (Scope (S)))\n                     or else Is_Generic_Instance (S)\n                     or else Is_Child_Unit (S)\n                   then"}, {"sha": "c81daae9c4aedd8a3608d89245bad432e346ce18", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -260,11 +260,20 @@ else\n   endif\n endif\n \n+ifneq ($(filter darwin9% darwin8%,$(host_os)),)\n+# gnat1 uses exceptions which is incompatible with statically-linked libgcc\n+#\u00a0on Darwin8 and 9, since gnat1 also pulls in libraries linked with the system\n+# unwinder.\n+GCC_LINKERFLAGS = $(filter-out -Werror -static-libgcc, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(filter-out -static-libgcc, $(LDFLAGS))\n+else\n # Strip -Werror during linking for the LTO bootstrap\n GCC_LINKERFLAGS = $(filter-out -Werror, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(LDFLAGS)\n+endif\n \n-GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n-GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n+GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n+GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n \n # Lists of files for various purposes.\n "}, {"sha": "6579ad11cc28445520c003ba61b7f66328c6a1fe", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -10564,7 +10564,7 @@ Sloc_to_locus (Source_Ptr Sloc, location_t *locus, bool clear_column,\n   *locus\n     = linemap_position_for_line_and_column (line_table, map, line, column);\n \n-  if (file_map && file_map[file - 1].Instance)\n+  if (decl && file_map && file_map[file - 1].Instance)\n     decl_to_instance_map->put (decl, file_map[file - 1].Instance);\n \n   return true;"}, {"sha": "fa73b6fecc16348365e8c340448a4a5f2472f6c6", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -441,6 +441,9 @@ begin -- Gen_IL.Gen.Gen_Nodes\n         Sm (Has_Wide_Character, Flag),\n         Sm (Has_Wide_Wide_Character, Flag)));\n \n+   Cc (N_Interpolated_String_Literal, N_Numeric_Or_String_Literal,\n+       (Sy (Expressions, List_Id, Default_No_List)));\n+\n    Cc (N_Explicit_Dereference, N_Subexpr,\n        (Sy (Prefix, Node_Id),\n         Sm (Actual_Designated_Subtype, Node_Id),"}, {"sha": "8634a05cd4f033e4f10da71668bc147b2c660dae", "filename": "gcc/ada/gen_il-types.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgen_il-types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgen_il-types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-types.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -250,6 +250,7 @@ package Gen_IL.Types is\n       N_Expression_With_Actions,\n       N_If_Expression,\n       N_Indexed_Component,\n+      N_Interpolated_String_Literal,\n       N_Null,\n       N_Qualified_Expression,\n       N_Quantified_Expression,"}, {"sha": "0d2a23dc04252882d77d813d5047688ce15d22d3", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -261,6 +261,16 @@ package body Ghost is\n             then\n                return True;\n \n+            --  A reference to a Ghost entity may appear within the class-wide\n+            --  precondition of a helper subprogram. This context is treated\n+            --  as suitable because it was already verified when we were\n+            --  analyzing the original class-wide precondition.\n+\n+            elsif Is_Subprogram (Current_Scope)\n+              and then Present (Class_Preconditions_Subprogram (Current_Scope))\n+            then\n+               return True;\n+\n             --  References to Ghost entities may be relocated in internally\n             --  generated bodies.\n "}, {"sha": "212ed3df9d8fb68e3f1ec414cb4fe4e28e6bff6b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -23,7 +23,7 @@ GNAT Reference Manual , Dec 01, 2022\n \n AdaCore\n \n-Copyright @copyright{} 2008-2022, Free Software Foundation\n+Copyright @copyright{} 2008-2023, Free Software Foundation\n @end quotation\n \n @end copying"}, {"sha": "a1daff92fbe6f9931be2d1ca3d843962e32d16ed", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -19,11 +19,11 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Dec 01, 2022\n+GNAT User's Guide for Native Platforms , Jan 03, 2023\n \n AdaCore\n \n-Copyright @copyright{} 2008-2022, Free Software Foundation\n+Copyright @copyright{} 2008-2023, Free Software Foundation\n @end quotation\n \n @end copying\n@@ -11970,6 +11970,8 @@ not compose (i.e. is ignored for a predefined \u201c=\u201d for a composite type\n containing a component whose type has the user-defined \u201c=\u201d as\n primitive). Note that the user-defined \u201c=\u201d must be a primitive operator\n in order to trigger the warning.\n+See RM-4.5.2(14/3-15/5, 21, 24/3, 32.1/1)\n+for the exact Ada rules on composability of \u201c=\u201d.\n \n The default is that these warnings are not given.\n @end table\n@@ -22450,8 +22452,8 @@ Debug Pool info:\n \n \n This appendix contains information relating to the implementation\n-of run-time libraries on various platforms and also covers\n-topics related to the GNAT implementation on Windows and Mac OS.\n+of run-time libraries on various platforms and also covers topics\n+related to the GNAT implementation on specific Operating Systems.\n \n @menu\n * Run-Time Libraries:: "}, {"sha": "68ae46a3584ec0c63ced9bd8be3a1994052e6794", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 25, "deletions": 71, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -320,15 +320,13 @@ package body Lib is\n    begin\n       if S1 = No_Location or else S2 = No_Location then\n          return No;\n+      end if;\n \n-      elsif S1 = Standard_Location then\n-         if S2 = Standard_Location then\n-            return Yes_Same;\n-         else\n-            return No;\n-         end if;\n+      if S1 = S2 then\n+         return Yes_Same;\n+      end if;\n \n-      elsif S2 = Standard_Location then\n+      if S1 = Standard_Location or else S2 = Standard_Location then\n          return No;\n       end if;\n \n@@ -841,53 +839,36 @@ package body Lib is\n      (N : Node_Or_Entity_Id) return Boolean\n    is\n    begin\n-      if Sloc (N) = Standard_Location then\n-         return False;\n-\n-      elsif Sloc (N) = No_Location then\n-         return False;\n-\n       --  Special case Itypes to test the Sloc of the associated node. The\n       --  reason we do this is for possible calls from gigi after -gnatD\n       --  processing is complete in sprint. This processing updates the\n       --  sloc fields of all nodes in the tree, but itypes are not in the\n       --  tree so their slocs do not get updated.\n \n-      elsif Nkind (N) = N_Defining_Identifier\n-        and then Is_Itype (N)\n-      then\n+      if Nkind (N) = N_Defining_Identifier and then Is_Itype (N) then\n          return In_Extended_Main_Code_Unit (Associated_Node_For_Itype (N));\n-\n-      --  Otherwise see if we are in the main unit\n-\n-      elsif Get_Code_Unit (Sloc (N)) = Get_Code_Unit (Cunit (Main_Unit)) then\n-         return True;\n-\n-      --  Node may be in spec (or subunit etc) of main unit\n-\n-      else\n-         return In_Same_Extended_Unit (N, Cunit (Main_Unit));\n       end if;\n+\n+      return In_Extended_Main_Code_Unit (Sloc (N));\n    end In_Extended_Main_Code_Unit;\n \n    function In_Extended_Main_Code_Unit (Loc : Source_Ptr) return Boolean is\n    begin\n-      if Loc = Standard_Location then\n-         return False;\n+      --  Special value cases\n \n-      elsif Loc = No_Location then\n+      if Loc in No_Location | Standard_Location then\n          return False;\n+      end if;\n \n       --  Otherwise see if we are in the main unit\n \n-      elsif Get_Code_Unit (Loc) = Get_Code_Unit (Cunit (Main_Unit)) then\n+      if Get_Code_Unit (Loc) = Get_Code_Unit (Cunit (Main_Unit)) then\n          return True;\n+      end if;\n \n       --  Location may be in spec (or subunit etc) of main unit\n \n-      else\n-         return In_Same_Extended_Unit (Loc, Sloc (Cunit (Main_Unit)));\n-      end if;\n+      return In_Same_Extended_Unit (Loc, Sloc (Cunit (Main_Unit)));\n    end In_Extended_Main_Code_Unit;\n \n    ----------------------------------\n@@ -897,69 +878,42 @@ package body Lib is\n    function In_Extended_Main_Source_Unit\n      (N : Node_Or_Entity_Id) return Boolean\n    is\n-      Nloc : constant Source_Ptr := Sloc (N);\n-      Mloc : constant Source_Ptr := Sloc (Cunit (Main_Unit));\n-\n    begin\n-      --  If parsing, then use the global flag to indicate result\n-\n-      if Compiler_State = Parsing then\n-         return Parsing_Main_Extended_Source;\n-\n-      --  Special value cases\n-\n-      elsif Nloc = Standard_Location then\n-         return False;\n-\n-      elsif Nloc = No_Location then\n-         return False;\n-\n       --  Special case Itypes to test the Sloc of the associated node. The\n       --  reason we do this is for possible calls from gigi after -gnatD\n       --  processing is complete in sprint. This processing updates the\n       --  sloc fields of all nodes in the tree, but itypes are not in the\n       --  tree so their slocs do not get updated.\n \n-      elsif Nkind (N) = N_Defining_Identifier\n-        and then Is_Itype (N)\n-      then\n+      if Nkind (N) = N_Defining_Identifier and then Is_Itype (N) then\n+         pragma Assert (Compiler_State /= Parsing);\n          return In_Extended_Main_Source_Unit (Associated_Node_For_Itype (N));\n-\n-      --  Otherwise compare original locations to see if in same unit\n-\n-      else\n-         return\n-           In_Same_Extended_Unit\n-             (Original_Location (Nloc), Original_Location (Mloc));\n       end if;\n+\n+      return In_Extended_Main_Source_Unit (Sloc (N));\n    end In_Extended_Main_Source_Unit;\n \n    function In_Extended_Main_Source_Unit\n      (Loc : Source_Ptr) return Boolean\n    is\n-      Mloc : constant Source_Ptr := Sloc (Cunit (Main_Unit));\n-\n    begin\n       --  If parsing, then use the global flag to indicate result\n \n       if Compiler_State = Parsing then\n          return Parsing_Main_Extended_Source;\n+      end if;\n \n       --  Special value cases\n \n-      elsif Loc = Standard_Location then\n-         return False;\n-\n-      elsif Loc = No_Location then\n+      if Loc in No_Location | Standard_Location then\n          return False;\n+      end if;\n \n-      --  Otherwise compare original locations to see if in same unit\n+      --  Otherwise compare original locations\n \n-      else\n-         return\n-           In_Same_Extended_Unit\n-             (Original_Location (Loc), Original_Location (Mloc));\n-      end if;\n+      return In_Same_Extended_Unit\n+        (Original_Location (Loc),\n+         Original_Location (Sloc (Cunit (Main_Unit))));\n    end In_Extended_Main_Source_Unit;\n \n    ----------------------"}, {"sha": "6937eedc9a936c2ae51b74311f3396b0ccd7f3cd", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -46,7 +46,7 @@ package Lib is\n    Parsing_Main_Extended_Source : Boolean := False;\n    --  Set True if we are currently parsing a file that is part of the main\n    --  extended source (the main unit, its spec, or one of its subunits). This\n-   --  flag to implement In_Extended_Main_Source_Unit.\n+   --  is used to implement In_Extended_Main_Source_Unit.\n \n    Analysing_Subunit_Of_Main : Boolean := False;\n    --  Set to True when analyzing a subunit of the main source. When True, if\n@@ -616,8 +616,7 @@ package Lib is\n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n    function In_Extended_Main_Code_Unit (Loc : Source_Ptr) return Boolean;\n-   --  Same function as above, but argument is a source pointer rather\n-   --  than a node.\n+   --  Same as above, but for Source_Ptr\n \n    function In_Extended_Main_Source_Unit\n      (N : Node_Or_Entity_Id) return Boolean;\n@@ -631,7 +630,7 @@ package Lib is\n    --  and the parent unit spec if it is separate.\n \n    function In_Extended_Main_Source_Unit (Loc : Source_Ptr) return Boolean;\n-   --  Same function as above, but argument is a source pointer\n+   --  Same as above, but for Source_Ptr\n \n    function ipu (N : Node_Or_Entity_Id) return Boolean;\n    --  Same as In_Predefined_Unit, but renamed so it can assist debugging.\n@@ -646,7 +645,7 @@ package Lib is\n \n    function In_Predefined_Unit (S : Source_Ptr) return Boolean;\n    pragma Inline (In_Predefined_Unit);\n-   --  Same function as above but argument is a source pointer\n+   --  Same as above, but for Source_Ptr\n \n    function In_Internal_Unit (N : Node_Or_Entity_Id) return Boolean;\n    function In_Internal_Unit (S : Source_Ptr) return Boolean;"}, {"sha": "3f4bd90e31fbe226dbfc243c61f6e12ddcda6d2c", "filename": "gcc/ada/libgnat/a-stbubo.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -29,6 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Characters.Handling;\n with Ada.Strings.UTF_Encoding.Conversions;\n with Ada.Strings.UTF_Encoding.Strings;\n with Ada.Strings.UTF_Encoding.Wide_Strings;\n@@ -91,9 +92,16 @@ package body Ada.Strings.Text_Buffers.Bounded is\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type (0) :=\n               [others =>\n-                 (Max_Characters => 0, Chars => <>, Indentation => <>,\n-                  Indent_Pending => <>, UTF_8_Length => <>, UTF_8_Column => <>,\n-                  All_7_Bits     => <>, All_8_Bits => <>, Truncated => <>)];\n+                 (Max_Characters            => 0,\n+                  Chars                     => <>,\n+                  Indentation               => <>,\n+                  Indent_Pending            => <>,\n+                  UTF_8_Length              => <>,\n+                  UTF_8_Column              => <>,\n+                  Trim_Leading_White_Spaces => <>,\n+                  All_7_Bits                => <>,\n+                  All_8_Bits                => <>,\n+                  Truncated                 => <>)];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;\n@@ -131,7 +139,10 @@ package body Ada.Strings.Text_Buffers.Bounded is\n                return;\n             end if;\n \n-            Buffer.All_7_Bits := @ and then Character'Pos (Char) < 128;\n+            Buffer.All_7_Bits :=\n+              @ and then Character'Pos (Char) < 128;\n+            Buffer.Trim_Leading_White_Spaces :=\n+              @ and then Characters.Handling.Is_Space (Char);\n \n             Buffer.UTF_8_Length                                    := @ + 1;\n             Buffer.UTF_8_Column                                    := @ + 1;"}, {"sha": "54449fb90333d3223d5523320034feef6a055494", "filename": "gcc/ada/libgnat/a-stbuun.adb", "status": "modified", "additions": 44, "deletions": 24, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -29,6 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Characters.Handling;\n with Ada.Unchecked_Deallocation;\n with Ada.Strings.UTF_Encoding.Conversions;\n with Ada.Strings.UTF_Encoding.Strings;\n@@ -104,9 +105,15 @@ package body Ada.Strings.Text_Buffers.Unbounded is\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type :=\n               [others =>\n-                 (Indentation  => <>, Indent_Pending => <>, UTF_8_Length => <>,\n-                  UTF_8_Column => <>, All_7_Bits => <>, All_8_Bits => <>,\n-                  List         => <>, Last_Used => <>)];\n+                 (Indentation               => <>,\n+                  Indent_Pending            => <>,\n+                  UTF_8_Length              => <>,\n+                  UTF_8_Column              => <>,\n+                  All_7_Bits                => <>,\n+                  All_8_Bits                => <>,\n+                  Trim_Leading_White_Spaces => <>,\n+                  List                      => <>,\n+                  Last_Used                 => <>)];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;\n@@ -140,28 +147,41 @@ package body Ada.Strings.Text_Buffers.Unbounded is\n       procedure Buffer_Type_Implementation (Buffer : in out Buffer_Type) is\n       begin\n          for Char of Item loop\n-            Buffer.All_7_Bits := @ and then Character'Pos (Char) < 128;\n-\n-            if Buffer.Last_Used = Buffer.List.Current_Chunk.Length then\n-               --  Current chunk is full; allocate a new one with doubled size\n-\n-               declare\n-                  Cc     : Chunk renames Buffer.List.Current_Chunk.all;\n-                  Max    : constant Positive := Integer'Last / 2;\n-                  Length : constant Natural  :=\n-                    Integer'Min (Max, 2 * Cc.Length);\n-               begin\n-                  pragma Assert (Cc.Next = null);\n-                  Cc.Next                   := new Chunk (Length => Length);\n-                  Buffer.List.Current_Chunk := Cc.Next;\n-                  Buffer.Last_Used          := 0;\n-               end;\n-            end if;\n \n-            Buffer.UTF_8_Length                                := @ + 1;\n-            Buffer.UTF_8_Column                                := @ + 1;\n-            Buffer.Last_Used                                   := @ + 1;\n-            Buffer.List.Current_Chunk.Chars (Buffer.Last_Used) := Char;\n+            --  The Trim_Leading_Space flag, which can be set prior to calling\n+            --  any of the Put operations, which will cause white space\n+            --  characters to be discarded by any Put operation until a\n+            --  non-white-space character is encountered, at which point\n+            --  the flag will be reset.\n+\n+            if not Buffer.Trim_Leading_White_Spaces\n+              or else not Characters.Handling.Is_Space (Char)\n+            then\n+               Buffer.All_7_Bits := @ and then Character'Pos (Char) < 128;\n+               Buffer.Trim_Leading_White_Spaces := False;\n+\n+               if Buffer.Last_Used = Buffer.List.Current_Chunk.Length then\n+                  --  Current chunk is full; allocate a new one with doubled\n+                  --  size\n+\n+                  declare\n+                     Cc     : Chunk renames Buffer.List.Current_Chunk.all;\n+                     Max    : constant Positive := Integer'Last / 2;\n+                     Length : constant Natural  :=\n+                                Integer'Min (Max, 2 * Cc.Length);\n+                  begin\n+                     pragma Assert (Cc.Next = null);\n+                     Cc.Next                   := new Chunk (Length => Length);\n+                     Buffer.List.Current_Chunk := Cc.Next;\n+                     Buffer.Last_Used          := 0;\n+                  end;\n+               end if;\n+\n+               Buffer.UTF_8_Length                                := @ + 1;\n+               Buffer.UTF_8_Column                                := @ + 1;\n+               Buffer.Last_Used                                   := @ + 1;\n+               Buffer.List.Current_Chunk.Chars (Buffer.Last_Used) := Char;\n+            end if;\n          end loop;\n       end Buffer_Type_Implementation;\n    begin"}, {"sha": "182c1310bdecb6077a108f41c0c44b36660d610f", "filename": "gcc/ada/libgnat/a-sttebu.adb", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -54,6 +54,19 @@ package body Ada.Strings.Text_Buffers is\n       Buffer.Indentation := @ - Natural (Amount);\n    end Decrease_Indent;\n \n+   procedure Set_Trim_Leading_Spaces\n+     (Buffer : in out Root_Buffer_Type;\n+      Trim   : Boolean := True) is\n+   begin\n+      Buffer.Trim_Leading_White_Spaces := Trim;\n+   end Set_Trim_Leading_Spaces;\n+\n+   function Trim_Leading_Spaces\n+     (Buffer : Root_Buffer_Type) return Boolean is\n+   begin\n+      return Buffer.Trim_Leading_White_Spaces;\n+   end Trim_Leading_Spaces;\n+\n    package body Output_Mapping is\n       --  Implement indentation in Put_UTF_8 and New_Line.\n       --  Implement other output procedures using Put_UTF_8.\n@@ -91,7 +104,9 @@ package body Ada.Strings.Text_Buffers is\n             return;\n          end if;\n \n-         if Buffer.Indent_Pending then\n+         if Buffer.Indent_Pending\n+           and then not Buffer.Trim_Leading_White_Spaces\n+         then\n             Buffer.Indent_Pending := False;\n             if Buffer.Indentation > 0 then\n                Put_UTF_8_Implementation\n@@ -113,8 +128,9 @@ package body Ada.Strings.Text_Buffers is\n       begin\n          Buffer.Indent_Pending := False; --  just for a moment\n          Put (Buffer, [ASCII.LF]);\n-         Buffer.Indent_Pending := True;\n-         Buffer.UTF_8_Column   := 1;\n+         Buffer.Indent_Pending            := True;\n+         Buffer.UTF_8_Column              := 1;\n+         Buffer.Trim_Leading_White_Spaces := False;\n       end New_Line;\n \n    end Output_Mapping;"}, {"sha": "a97477dec5dabfe8a31bf9d8c221b5078713847b", "filename": "gcc/ada/libgnat/a-sttebu.ads", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-sttebu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fa-sttebu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-sttebu.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -64,6 +64,16 @@ is\n       Post'Class => Current_Indent (Buffer) =\n       Current_Indent (Buffer)'Old - Amount;\n \n+   procedure Set_Trim_Leading_Spaces\n+     (Buffer : in out Root_Buffer_Type;\n+      Trim   : Boolean := True) with\n+      Post   => Trim_Leading_Spaces (Buffer) = Trim,\n+      Inline => True;\n+\n+   function Trim_Leading_Spaces\n+     (Buffer : Root_Buffer_Type) return Boolean\n+     with Inline;\n+\n private\n \n    type Root_Buffer_Type is abstract tagged limited record\n@@ -85,6 +95,12 @@ private\n       All_8_Bits : Boolean := True;\n       --  True if all characters seen so far fit in 8 bits\n \n+      Trim_Leading_White_Spaces : Boolean := False;\n+      --  Flag set prior to calling any of the Put operations, which will\n+      --  cause white space characters to be discarded by any Put operation\n+      --  until a non-white-space character is encountered, at which point\n+      --  the flag will be reset.\n+\n    end record;\n \n    generic"}, {"sha": "a58b1702eca89a2686c5382ca80602b500d5f046", "filename": "gcc/ada/libgnat/g-forstr.adb", "status": "modified", "additions": 348, "deletions": 64, "changes": 412, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-forstr.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -34,6 +34,7 @@ with Ada.Float_Text_IO;\n with Ada.Integer_Text_IO;\n with Ada.Long_Float_Text_IO;\n with Ada.Long_Integer_Text_IO;\n+with Ada.Strings;\n with Ada.Strings.Fixed;\n with Ada.Unchecked_Deallocation;\n \n@@ -49,16 +50,16 @@ package body GNAT.Formatted_String is\n                    Decimal_Float,               -- %f %F\n                    Decimal_Scientific_Float,    -- %e\n                    Decimal_Scientific_Float_Up, -- %E\n-                   Shortest_Decimal_Float,      -- %g\n-                   Shortest_Decimal_Float_Up,   -- %G\n+                   G_Specifier,                 -- %g\n+                   G_Specifier_Up,              -- %G\n                    Char,                        -- %c\n                    Str,                         -- %s\n                    Pointer                      -- %p\n                   );\n \n    type Sign_Kind is (Neg, Zero, Pos);\n \n-   subtype Is_Number is F_Kind range Decimal_Int .. Shortest_Decimal_Float_Up;\n+   subtype Is_Number is F_Kind range Decimal_Int .. G_Specifier_Up;\n \n    type F_Sign is (If_Neg, Forced, Space) with Default_Value => If_Neg;\n \n@@ -77,19 +78,45 @@ package body GNAT.Formatted_String is\n       Value_Needed : Natural range 0 .. 2 := 0;\n    end record;\n \n+   type Notation is (Decimal, Scientific);\n+\n+   procedure Advance_And_Accumulate_Until_Next_Specifier\n+     (Format : Formatted_String);\n+   --  Advance Format.D.Index until either the next format specifier is\n+   --  encountered, or the end of Format.D.Format is reached. The characters\n+   --  advanced over are appended to Format.D.Result.\n+\n    procedure Next_Format\n      (Format : Formatted_String;\n       F_Spec : out F_Data;\n       Start  : out Positive);\n    --  Parse the next format specifier, a format specifier has the following\n    --  syntax: %[flags][width][.precision][length]specifier\n \n+   procedure Determine_Notation_And_Aft\n+     (Exponent                : Integer;\n+      Precision               : Text_IO.Field;\n+      Nota                    : out Notation;\n+      Aft                     : out Text_IO.Field);\n+   --  Determine whether to use scientific or decimal notation and the value of\n+   --  Aft given the exponent and precision of a real number, as described in\n+   --  the C language specification, section 7.21.6.1.\n+\n    function Get_Formatted\n      (F_Spec : F_Data;\n       Value  : String;\n       Len    : Positive) return String;\n    --  Returns Value formatted given the information in F_Spec\n \n+   procedure Increment_Integral_Part\n+     (Buffer              : in out String;\n+      First_Non_Blank     : in out Positive;\n+      Last_Digit_Position : Positive);\n+   --  Buffer must contain the textual representation of a number.\n+   --  Last_Digit_Position must be the position of the rightmost digit of the\n+   --  integral part. Buffer must have at least one padding blank. Increment\n+   --  the integral part.\n+\n    procedure Raise_Wrong_Format (Format : Formatted_String) with No_Return;\n    --  Raise the Format_Error exception which information about the context\n \n@@ -122,6 +149,18 @@ package body GNAT.Formatted_String is\n       Var    : Int) return Formatted_String;\n    --  Generic routine which handles all the integer numbers\n \n+   procedure Remove_Extraneous_Decimal_Digit\n+     (Textual_Rep     : in out String;\n+      First_Non_Blank : in out Positive);\n+   --  Remove the unique digit to the right of the point in Textual_Rep\n+\n+   procedure Trim_Fractional_Part\n+     (Textual_Rep     : in out String;\n+      First_Non_Blank : in out Positive);\n+   --  Remove trailing zeros from Textual_Rep, which must be the textual\n+   --  representation of a real number. If the fractional part only contains\n+   --  zeros, also remove the point.\n+\n    ---------\n    -- \"+\" --\n    ---------\n@@ -139,29 +178,13 @@ package body GNAT.Formatted_String is\n    ---------\n \n    function \"-\" (Format : Formatted_String) return String is\n-      F : String renames Format.D.Format;\n-      J : Natural renames Format.D.Index;\n-      R : Unbounded_String := Format.D.Result;\n-\n    begin\n       --  Make sure we get the remaining character up to the next unhandled\n       --  format specifier.\n \n-      while (J <= F'Length and then F (J) /= '%')\n-        or else (J < F'Length - 1 and then F (J + 1) = '%')\n-      loop\n-         Append (R, F (J));\n-\n-         --  If we have two consecutive %, skip the second one\n-\n-         if F (J) = '%' and then J < F'Length - 1 and then F (J + 1) = '%' then\n-            J := J + 1;\n-         end if;\n-\n-         J := J + 1;\n-      end loop;\n+      Advance_And_Accumulate_Until_Next_Specifier (Format);\n \n-      return To_String (R);\n+      return To_String (Format.D.Result);\n    end \"-\";\n \n    ---------\n@@ -318,6 +341,57 @@ package body GNAT.Formatted_String is\n       F.D.Ref_Count := F.D.Ref_Count + 1;\n    end Adjust;\n \n+   -------------------------------------------------\n+   -- Advance_And_Accumulate_Until_Next_Specifier --\n+   -------------------------------------------------\n+\n+   procedure Advance_And_Accumulate_Until_Next_Specifier\n+     (Format : Formatted_String)\n+   is\n+   begin\n+      loop\n+         if Format.D.Index > Format.D.Format'Last then\n+            exit;\n+         end if;\n+\n+         if Format.D.Format (Format.D.Index) /= '%' then\n+            Append (Format.D.Result, Format.D.Format (Format.D.Index));\n+            Format.D.Index := Format.D.Index + 1;\n+         elsif Format.D.Index + 1 <= Format.D.Format'Last\n+           and then Format.D.Format (Format.D.Index + 1) = '%'\n+         then\n+            Append (Format.D.Result, '%');\n+            Format.D.Index := Format.D.Index + 2;\n+         else\n+            exit;\n+         end if;\n+      end loop;\n+   end Advance_And_Accumulate_Until_Next_Specifier;\n+\n+   --------------------------------\n+   -- Determine_Notation_And_Aft --\n+   --------------------------------\n+\n+   procedure Determine_Notation_And_Aft\n+     (Exponent  : Integer;\n+      Precision : Text_IO.Field;\n+      Nota      : out Notation;\n+      Aft       : out Text_IO.Field)\n+   is\n+      --  The constants use the same names as those from the C specification\n+      --  in order to match the description of the predicate.\n+      P : constant Text_IO.Field := (if Precision /= 0 then Precision else 1);\n+      X : constant Integer       := Exponent;\n+   begin\n+      if P > X and X >= -4 then\n+         Nota := Decimal;\n+         Aft  := P - (X + 1);\n+      else\n+         Nota := Scientific;\n+         Aft  := P - 1;\n+      end if;\n+   end Determine_Notation_And_Aft;\n+\n    --------------------\n    -- Decimal_Format --\n    --------------------\n@@ -445,6 +519,35 @@ package body GNAT.Formatted_String is\n       end;\n    end Get_Formatted;\n \n+   -----------------------------\n+   -- Increment_Integral_Part --\n+   -----------------------------\n+\n+   procedure Increment_Integral_Part\n+     (Buffer              : in out String;\n+      First_Non_Blank     : in out Positive;\n+      Last_Digit_Position : Positive)\n+   is\n+      Cursor : Natural := Last_Digit_Position;\n+   begin\n+      while Buffer (Cursor) = '9' loop\n+         Buffer (Cursor) := '0';\n+         Cursor          := Cursor - 1;\n+      end loop;\n+\n+      pragma Assert (Cursor > 0);\n+\n+      if Buffer (Cursor) in '0' .. '8' then\n+         Buffer (Cursor) := Character'Succ (Buffer (Cursor));\n+      else\n+         Ada.Strings.Fixed.Insert\n+           (Buffer,\n+            Cursor + 1,\n+            \"1\");\n+         First_Non_Blank := First_Non_Blank - 1;\n+      end if;\n+   end Increment_Integral_Part;\n+\n    ----------------\n    -- Int_Format --\n    ----------------\n@@ -505,19 +608,7 @@ package body GNAT.Formatted_String is\n \n       --  Got to next %\n \n-      while (J <= F'Last and then F (J) /= '%')\n-        or else (J < F'Last - 1 and then F (J + 1) = '%')\n-      loop\n-         Append (Format.D.Result, F (J));\n-\n-         --  If we have two consecutive %, skip the second one\n-\n-         if F (J) = '%' and then J < F'Last - 1 and then F (J + 1) = '%' then\n-            J := J + 1;\n-         end if;\n-\n-         J := J + 1;\n-      end loop;\n+      Advance_And_Accumulate_Until_Next_Specifier (Format);\n \n       if J >= F'Last or else F (J) /= '%'  then\n          raise Format_Error with \"no format specifier found for parameter\"\n@@ -634,8 +725,8 @@ package body GNAT.Formatted_String is\n          when 'f' | 'F' => F_Spec.Kind := Decimal_Float;\n          when 'e'       => F_Spec.Kind := Decimal_Scientific_Float;\n          when 'E'       => F_Spec.Kind := Decimal_Scientific_Float_Up;\n-         when 'g'       => F_Spec.Kind := Shortest_Decimal_Float;\n-         when 'G'       => F_Spec.Kind := Shortest_Decimal_Float_Up;\n+         when 'g'       => F_Spec.Kind := G_Specifier;\n+         when 'G'       => F_Spec.Kind := G_Specifier_Up;\n          when 'o'       => F_Spec.Kind := Unsigned_Octal;\n          when 'x'       => F_Spec.Kind := Unsigned_Hexadecimal_Int;\n          when 'X'       => F_Spec.Kind := Unsigned_Hexadecimal_Int_Up;\n@@ -672,18 +763,163 @@ package body GNAT.Formatted_String is\n      (Format : Formatted_String;\n       Var    : Flt) return Formatted_String\n    is\n+      procedure Compute_Exponent\n+        (Var      : Flt;\n+         Valid    : out Boolean;\n+         Exponent : out Integer);\n+      --  If Var is invalid (for example, a NaN of an inf), set Valid False and\n+      --  set Exponent to 0. Otherwise, set Valid True, and store the exponent\n+      --  of the scientific notation representation of Var in Exponent. The\n+      --  exponent can also be defined as:\n+      --  - If Var = 0, 0.\n+      --  - Otherwise, Floor (Log_10 (Abs (Var))).\n+\n+      procedure Format_With_Notation\n+        (Var : Flt;\n+         Nota : Notation;\n+         Aft : Text_IO.Field;\n+         Buffer : out String);\n+      --  Fill buffer with the formatted value of Var following the notation\n+      --  specified through Nota.\n+\n+      procedure Handle_G_Specifier\n+        (Buffer          : out String;\n+         First_Non_Blank : out Positive;\n+         Aft             : Text_IO.Field);\n+      --  Fill Buffer with the formatted value of Var according to the rules of\n+      --  the \"%g\" specifier. Buffer is right-justified and padded with blanks.\n+\n+      ----------------------\n+      -- Compute_Exponent --\n+      ----------------------\n+\n+      procedure Compute_Exponent\n+        (Var      : Flt;\n+         Valid    : out Boolean;\n+         Exponent : out Integer)\n+      is\n+         --  The way the exponent is computed is convoluted. It is not possible\n+         --  to use the logarithm in base 10 of Var and floor it, because the\n+         --  math functions for this are not available for fixed point types.\n+         --  Instead, use the generic Put procedure to produce a scientific\n+         --  representation of Var, and parse the exponent part of that back\n+         --  into an Integer.\n+         Scientific_Rep : String (1 .. 50);\n+\n+         E_Position : Natural;\n+      begin\n+         Put (Scientific_Rep, Var, Aft => 1, Exp => 1);\n+\n+         E_Position := Ada.Strings.Fixed.Index (Scientific_Rep, \"E\");\n+\n+         if E_Position = 0 then\n+            Valid    := False;\n+            Exponent := 0;\n+         else\n+            Valid    := True;\n+            Exponent :=\n+              Integer'Value\n+                (Scientific_Rep (E_Position + 1 .. Scientific_Rep'Last));\n+         end if;\n+      end Compute_Exponent;\n+\n+      --------------------------\n+      -- Format_With_Notation --\n+      --------------------------\n+\n+      procedure Format_With_Notation\n+        (Var : Flt;\n+         Nota : Notation;\n+         Aft : Text_IO.Field;\n+         Buffer : out String)\n+      is\n+         Exp : constant Text_IO.Field :=\n+           (case Nota is when Decimal => 0, when Scientific => 3);\n+      begin\n+         Put (Buffer, Var, Aft, Exp);\n+      end Format_With_Notation;\n+\n+      ------------------------\n+      -- Handle_G_Specifier --\n+      ------------------------\n+\n+      procedure Handle_G_Specifier\n+        (Buffer          : out String;\n+         First_Non_Blank : out Positive;\n+         Aft             : Text_IO.Field)\n+      is\n+         --  There is nothing that is directly equivalent to the \"%g\" specifier\n+         --  in the standard Ada functionality provided by Ada.Text_IO. The\n+         --  procedure Put will still be used, but significant postprocessing\n+         --  will be performed on the output of that procedure.\n+\n+         --  The following code is intended to match the behavior of C's printf\n+         --  for %g, as described by paragraph \"7.21.6.1 The fprintf function\"\n+         --  of the C language specification.\n+\n+         --  As explained in the C specification, we're going to have to make a\n+         --  choice between decimal notation and scientific notation. One of\n+         --  the elements we need in order to make that choice is the value of\n+         --  the exponent in the decimal representation of Var. We will store\n+         --  that value in Exponent.\n+         Exponent : Integer;\n+         Valid    : Boolean;\n+\n+         Nota : Notation;\n+\n+         --  The value of the formal Aft comes from the precision specifier in\n+         --  the format string. For %g, the precision specifier corresponds to\n+         --  the number of significant figures desired, whereas the formal Aft\n+         --  in Put corresponds to the number of digits after the point.\n+         --  Effective_Aft is what will be passed to Put as Aft in order to\n+         --  respect the semantics of %g.\n+         Effective_Aft : Text_IO.Field;\n+\n+         Textual_Rep : String (Buffer'Range);\n+      begin\n+         Compute_Exponent (Var, Valid, Exponent);\n+\n+         Determine_Notation_And_Aft\n+           (Exponent, Aft, Nota, Effective_Aft);\n+\n+         Format_With_Notation (Var, Nota, Effective_Aft, Textual_Rep);\n+\n+         First_Non_Blank := Strings.Fixed.Index_Non_Blank (Textual_Rep);\n+\n+         if not Valid then\n+            null;\n+         elsif Effective_Aft = 0 then\n+            --  Special case: it is possible at this point that Effective_Aft\n+            --  is zero. But when Put is passed zero through Aft, it still\n+            --  outputs one digit after the point. See the reference manual,\n+            --  A.10.9.25.\n+\n+            Remove_Extraneous_Decimal_Digit (Textual_Rep, First_Non_Blank);\n+         else\n+            Trim_Fractional_Part\n+              (Textual_Rep, First_Non_Blank);\n+         end if;\n+\n+         Buffer := Textual_Rep;\n+      end Handle_G_Specifier;\n+\n+      --  Local variables\n+\n       F      : F_Data;\n       Buffer : String (1 .. 50);\n       S, E   : Positive := 1;\n       Start  : Positive;\n       Aft    : Text_IO.Field;\n \n+   --  Start of processing for P_Flt_Format\n+\n    begin\n       Next_Format (Format, F, Start);\n \n-      if F.Value_Needed > 0 then\n+      if F.Value_Needed /= Format.D.Stored_Value then\n          Raise_Wrong_Format (Format);\n       end if;\n+      Format.D.Stored_Value := 0;\n \n       if F.Precision = Unset then\n          Aft := 6;\n@@ -710,36 +946,13 @@ package body GNAT.Formatted_String is\n                  Characters.Handling.To_Lower (Buffer (S .. E));\n             end if;\n \n-         when Shortest_Decimal_Float\n-            | Shortest_Decimal_Float_Up\n+         when G_Specifier\n+            | G_Specifier_Up\n          =>\n-            --  Without exponent\n-\n-            Put (Buffer, Var, Aft, Exp => 0);\n-            S := Strings.Fixed.Index_Non_Blank (Buffer);\n+            Handle_G_Specifier (Buffer, S, Aft);\n             E := Buffer'Last;\n \n-            --  Check with exponent\n-\n-            declare\n-               Buffer2 : String (1 .. 50);\n-               S2, E2  : Positive;\n-\n-            begin\n-               Put (Buffer2, Var, Aft, Exp => 3);\n-               S2 := Strings.Fixed.Index_Non_Blank (Buffer2);\n-               E2 := Buffer2'Last;\n-\n-               --  If with exponent it is shorter, use it\n-\n-               if (E2 - S2) < (E - S) then\n-                  Buffer := Buffer2;\n-                  S := S2;\n-                  E := E2;\n-               end if;\n-            end;\n-\n-            if F.Kind = Shortest_Decimal_Float then\n+            if F.Kind = G_Specifier then\n                Buffer (S .. E) :=\n                  Characters.Handling.To_Lower (Buffer (S .. E));\n             end if;\n@@ -803,6 +1016,7 @@ package body GNAT.Formatted_String is\n          Format.D.Index := Start;\n          return Format;\n       end if;\n+      Format.D.Stored_Value := 0;\n \n       case F.Kind is\n          when Unsigned_Octal =>\n@@ -981,4 +1195,74 @@ package body GNAT.Formatted_String is\n         & Positive'Image (Format.D.Current);\n    end Raise_Wrong_Format;\n \n+   -------------------------------------\n+   -- Remove_Extraneous_Decimal_Digit --\n+   -------------------------------------\n+\n+   procedure Remove_Extraneous_Decimal_Digit\n+     (Textual_Rep     : in out String;\n+      First_Non_Blank : in out Positive)\n+   is\n+      Point_Position : constant Positive := Ada.Strings.Fixed.Index\n+        (Textual_Rep,\n+         \".\",\n+         First_Non_Blank);\n+\n+      Integral_Part_Needs_Increment : constant Boolean :=\n+        Textual_Rep (Point_Position + 1) in '5' .. '9';\n+   begin\n+      Ada.Strings.Fixed.Delete\n+        (Textual_Rep,\n+         Point_Position,\n+         Point_Position + 1,\n+         Ada.Strings.Right);\n+\n+      First_Non_Blank := First_Non_Blank + 2;\n+\n+      if Integral_Part_Needs_Increment then\n+         Increment_Integral_Part\n+           (Textual_Rep,\n+            First_Non_Blank,\n+            Last_Digit_Position => Point_Position + 1);\n+      end if;\n+   end Remove_Extraneous_Decimal_Digit;\n+\n+   --------------------------\n+   -- Trim_Fractional_Part --\n+   --------------------------\n+\n+   procedure Trim_Fractional_Part\n+     (Textual_Rep     : in out String;\n+      First_Non_Blank : in out Positive)\n+   is\n+      Cursor : Positive :=\n+        Ada.Strings.Fixed.Index (Textual_Rep, \".\", First_Non_Blank);\n+\n+      First_To_Trim : Positive;\n+      Fractional_Part_Last : Positive;\n+   begin\n+      while Cursor + 1 <= Textual_Rep'Last\n+        and then Textual_Rep (Cursor + 1) in '0' .. '9' loop\n+         Cursor := Cursor + 1;\n+      end loop;\n+\n+      Fractional_Part_Last := Cursor;\n+\n+      while Textual_Rep (Cursor) = '0' loop\n+         Cursor := Cursor - 1;\n+      end loop;\n+\n+      if Textual_Rep (Cursor) = '.' then\n+         Cursor := Cursor - 1;\n+      end if;\n+\n+      First_To_Trim := Cursor + 1;\n+\n+      Ada.Strings.Fixed.Delete\n+        (Textual_Rep, First_To_Trim, Fractional_Part_Last, Ada.Strings.Right);\n+\n+      First_Non_Blank :=\n+        First_Non_Blank + (Fractional_Part_Last - First_To_Trim + 1);\n+   end Trim_Fractional_Part;\n+\n end GNAT.Formatted_String;"}, {"sha": "423d7794c343bb138a92bb60df96adc3e0975f68", "filename": "gcc/ada/libgnat/g-forstr.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fg-forstr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fg-forstr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-forstr.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -70,8 +70,10 @@\n --    F         Decimal floating point, uppercase\n --    e         Scientific notation (mantissa/exponent), lowercase\n --    E         Scientific notation (mantissa/exponent), uppercase\n---    g         Use the shortest representation: %e or %f\n---    G         Use the shortest representation: %E or %F\n+--    g         Interpret the precision as the number of significant figures,\n+--              choose the most adequate of decimal or scientific notation, and\n+--              trim trailing zeroes and point. Letters are in lowercase.\n+--    G         Same as g, except that letters are in uppercase\n --    c         Character\n --    s         String of characters\n --    p         Pointer address"}, {"sha": "d3261fd389af069de5be93b12742475478c5faaa", "filename": "gcc/ada/libgnat/s-putima.adb", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -174,41 +174,67 @@ package body System.Put_Images is\n       Thin_Instance (S, X, \"access protected subprogram\");\n    end Put_Image_Access_Prot_Subp;\n \n-   procedure Put_Image_String (S : in out Sink'Class; X : String) is\n+   procedure Put_Image_String\n+     (S               : in out Sink'Class;\n+      X               : String;\n+      With_Delimiters : Boolean := True) is\n    begin\n-      Put_UTF_8 (S, \"\"\"\");\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n+\n       for C of X loop\n-         if C = '\"' then\n+         if C = '\"' and then With_Delimiters then\n             Put_UTF_8 (S, \"\"\"\");\n          end if;\n          Put_Character (S, C);\n       end loop;\n-      Put_UTF_8 (S, \"\"\"\");\n+\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n    end Put_Image_String;\n \n-   procedure Put_Image_Wide_String (S : in out Sink'Class; X : Wide_String) is\n+   procedure Put_Image_Wide_String\n+     (S               : in out Sink'Class;\n+      X               : Wide_String;\n+      With_Delimiters : Boolean := True) is\n    begin\n-      Put_UTF_8 (S, \"\"\"\");\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n+\n       for C of X loop\n-         if C = '\"' then\n+         if C = '\"' and then With_Delimiters then\n             Put_UTF_8 (S, \"\"\"\");\n          end if;\n          Put_Wide_Character (S, C);\n       end loop;\n-      Put_UTF_8 (S, \"\"\"\");\n+\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n    end Put_Image_Wide_String;\n \n    procedure Put_Image_Wide_Wide_String\n-     (S : in out Sink'Class; X : Wide_Wide_String) is\n+     (S               : in out Sink'Class;\n+      X               : Wide_Wide_String;\n+      With_Delimiters : Boolean := True) is\n    begin\n-      Put_UTF_8 (S, \"\"\"\");\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n+\n       for C of X loop\n-         if C = '\"' then\n+         if C = '\"' and then With_Delimiters then\n             Put_UTF_8 (S, \"\"\"\");\n          end if;\n          Put_Wide_Wide_Character (S, C);\n       end loop;\n-      Put_UTF_8 (S, \"\"\"\");\n+\n+      if With_Delimiters then\n+         Put_UTF_8 (S, \"\"\"\");\n+      end if;\n    end Put_Image_Wide_Wide_String;\n \n    procedure Array_Before (S : in out Sink'Class) is"}, {"sha": "1bcec3113d8452a8394569373b36f8aa194c6fc8", "filename": "gcc/ada/libgnat/s-putima.ads", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -84,10 +84,20 @@ package System.Put_Images with Pure is\n      (S : in out Sink'Class; X : Thin_Pointer);\n    --  For access-to-protected-subprogram types\n \n-   procedure Put_Image_String (S : in out Sink'Class; X : String);\n-   procedure Put_Image_Wide_String (S : in out Sink'Class; X : Wide_String);\n+   procedure Put_Image_String\n+     (S               : in out Sink'Class;\n+      X               : String;\n+      With_Delimiters : Boolean := True);\n+\n+   procedure Put_Image_Wide_String\n+     (S               : in out Sink'Class;\n+      X               : Wide_String;\n+      With_Delimiters : Boolean := True);\n+\n    procedure Put_Image_Wide_Wide_String\n-     (S : in out Sink'Class; X : Wide_Wide_String);\n+     (S               : in out Sink'Class;\n+      X               : Wide_Wide_String;\n+      With_Delimiters : Boolean := True);\n \n    procedure Array_Before (S : in out Sink'Class);\n    procedure Array_Between (S : in out Sink'Class);"}, {"sha": "497643d17ecc87d9682514c6d616ace5ef464841", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -422,10 +422,10 @@ package body Output is\n \n    procedure Write_Char (C : Character) is\n    begin\n-      pragma Assert (Next_Col in Buffer'Range);\n-      if Next_Col = Buffer'Length then\n-         Write_Eol;\n+      if Next_Col > Buffer'Length then\n+         Flush_Buffer;\n       end if;\n+      pragma Assert (Next_Col in Buffer'Range);\n \n       if C = ASCII.LF then\n          Write_Eol;"}, {"sha": "3d369baa7601c16d928e4f7c9d302fab9f9caf68", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -199,6 +199,79 @@ package body Ch2 is\n \n    --  Handled by scanner as part of string literal handling (see 2.4)\n \n+   ---------------------------------------\n+   --  2.6  Interpolated String Literal --\n+   ---------------------------------------\n+\n+   --  INTERPOLATED_STRING_LITERAL ::=\n+   --    'f' \"{INTERPOLATED_STRING_ELEMENT}\" {\n+   --        \"{INTERPOLATED_STRING_ELEMENT}\" }\n+\n+   --  INTERPOLATED_STRING_ELEMENT ::=\n+   --     ESCAPED_CHARACTER | INTERPOLATED_EXPRESSION\n+   --   | non_quotation_mark_non_left_brace_GRAPHIC_CHARACTER\n+\n+   --  ESCAPED_CHARACTER ::= '\\GRAPHIC_CHARACTER'\n+\n+   --  INTERPOLATED_EXPRESSION ::= '{' EXPRESSION '}'\n+\n+   --  Interpolated string element and escaped character rules are handled by\n+   --  scanner as part of string literal handling.\n+\n+   -----------------------------------\n+   -- P_Interpolated_String_Literal --\n+   -----------------------------------\n+\n+   function P_Interpolated_String_Literal return Node_Id is\n+      Elements_List : constant List_Id := New_List;\n+      NL_Node       : Node_Id;\n+      String_Node   : Node_Id;\n+\n+   begin\n+      String_Node := New_Node (N_Interpolated_String_Literal, Token_Ptr);\n+      Inside_Interpolated_String_Literal := True;\n+\n+      Scan;   --  past 'f'\n+\n+      if Token /= Tok_String_Literal then\n+         Error_Msg_SC (\"string literal expected\");\n+\n+      else\n+         Append_To (Elements_List, Token_Node);\n+         Scan;  --  past string_literal\n+\n+         while Token in Tok_Left_Curly_Bracket | Tok_String_Literal loop\n+\n+            --  Interpolated expression\n+\n+            if Token = Tok_Left_Curly_Bracket then\n+               Scan; --  past '{'\n+               Append_To (Elements_List, P_Expression);\n+               T_Right_Curly_Bracket;\n+            else\n+               if Prev_Token = Tok_String_Literal then\n+                  NL_Node := New_Node (N_String_Literal, Token_Ptr);\n+                  Set_Has_Wide_Character (NL_Node, False);\n+                  Set_Has_Wide_Wide_Character (NL_Node, False);\n+\n+                  Start_String;\n+                  Store_String_Char (Get_Char_Code (ASCII.LF));\n+                  Set_Strval (NL_Node, End_String);\n+                  Append_To (Elements_List, NL_Node);\n+               end if;\n+\n+               Append_To (Elements_List, Token_Node);\n+               Scan; --  past string_literal\n+            end if;\n+         end loop;\n+      end if;\n+\n+      Inside_Interpolated_String_Literal := False;\n+      Set_Expressions (String_Node, Elements_List);\n+\n+      return String_Node;\n+   end P_Interpolated_String_Literal;\n+\n    ------------------\n    -- 2.7  Comment --\n    ------------------"}, {"sha": "f5a34ec7e9ff8fa93b25b21aba5e410440e9e41b", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2319,6 +2319,14 @@ package body Ch4 is\n          if Token in Token_Class_Sterm then\n             null;\n \n+         --  Handle '}' as expression terminator of an interpolated\n+         --  expression.\n+\n+         elsif Inside_Interpolated_String_Literal\n+           and then Token = Tok_Right_Curly_Bracket\n+         then\n+            null;\n+\n          --  If we do not have an expression terminator, then complete the\n          --  scan of a simple expression. This code duplicates the code\n          --  found in P_Term and P_Factor.\n@@ -2557,8 +2565,13 @@ package body Ch4 is\n       --  an expression terminator, and is not in Token_Class_Sterm, but\n       --  in this special case we know that the expression is complete.\n \n+      --  We disable this error recovery machinery when we are processing an\n+      --  interpolated string and we reach the expression terminator '}'.\n+\n       if not Token_Is_At_Start_Of_Line\n          and then Token not in Token_Class_Sterm\n+         and then not (Inside_Interpolated_String_Literal\n+                         and then Token = Tok_Right_Curly_Bracket)\n       then\n          --  Normally the right error message is indeed that we expected a\n          --  binary operator, but in the case of being between a right and left\n@@ -2851,6 +2864,9 @@ package body Ch4 is\n             when Tok_Left_Bracket =>\n                return P_Aggregate;\n \n+            when Tok_Left_Interpolated_String =>\n+               return P_Interpolated_String_Literal;\n+\n             --  Allocator\n \n             when Tok_New =>"}, {"sha": "24ab75b1229c39817fb0c0c7f1c042d9946daa4f", "filename": "gcc/ada/par-tchk.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-tchk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar-tchk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-tchk.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -402,6 +402,20 @@ package body Tchk is\n       Check_Token (Tok_Record, AP);\n    end T_Record;\n \n+   ---------------------------\n+   -- T_Right_Curly_Bracket --\n+   ---------------------------\n+\n+   procedure T_Right_Curly_Bracket is\n+   begin\n+      if Token = Tok_Right_Curly_Bracket then\n+         Scan;\n+      else\n+         Error_Msg_AP\n+           (\"|missing \"\"'}'\"\"\");\n+      end if;\n+   end T_Right_Curly_Bracket;\n+\n    ---------------------\n    -- T_Right_Bracket --\n    ---------------------"}, {"sha": "5fbdbbd02eb5d20e9ef2da29dc25d6ac0b193c76", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -48,6 +48,7 @@ with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n with Snames;         use Snames;\n+with Stringt;        use Stringt;\n with Style;\n with Stylesw;        use Stylesw;\n with Table;\n@@ -652,6 +653,8 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  if either this is the first occurrence of misuse of this identifier,\n       --  or if Force_Msg is True.\n \n+      function P_Interpolated_String_Literal return Node_Id;\n+\n       function P_Pragmas_Opt return List_Id;\n       --  This function scans for a sequence of pragmas in other than a\n       --  declaration sequence or statement sequence context. All pragmas\n@@ -1238,6 +1241,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       procedure T_Range;\n       procedure T_Record;\n       procedure T_Right_Bracket;\n+      procedure T_Right_Curly_Bracket;\n       procedure T_Right_Paren;\n       procedure T_Semicolon;\n       procedure T_Then;"}, {"sha": "f9200ee04e4bdf148ed89988716a6e9099ab667a", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -196,8 +196,8 @@ package Repinfo is\n    --    \"Object_Size\"          :  numerical expression\n    --    \"Value_Size\"           :  numerical expression\n    --    \"Component_Size\"       :  numerical expression\n-   --    \"Range\"                :  array of numbers\n-   --    \"Small\"                :  number\n+   --    \"Range\"                :  array of numerical expressions\n+   --    \"Small\"                :  numerical expression\n    --    \"Alignment\"            :  number\n    --    \"Convention\"           :  string\n    --    \"Linker_Section\"       :  string"}, {"sha": "86dbb622d64ad121c4d5f8f9e4864444f56b41b1", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -605,6 +605,7 @@ package Rtsfind is\n \n      RE_Root_Buffer_Type,                -- Ada.Strings.Text_Buffers\n      RE_Put_UTF_8,                       -- Ada.Strings.Text_Buffers\n+     RE_Set_Trim_Leading_Spaces,         -- Ada.Strings.Text_Buffers\n      RE_Wide_Wide_Put,                   -- Ada.Strings.Text_Buffers\n \n      RE_Buffer_Type,                     -- Ada.Strings.Text_Buffers.Unbounded\n@@ -2243,6 +2244,7 @@ package Rtsfind is\n \n      RE_Root_Buffer_Type                 => Ada_Strings_Text_Buffers,\n      RE_Put_UTF_8                        => Ada_Strings_Text_Buffers,\n+     RE_Set_Trim_Leading_Spaces          => Ada_Strings_Text_Buffers,\n      RE_Wide_Wide_Put                    => Ada_Strings_Text_Buffers,\n \n      RE_Buffer_Type                      => Ada_Strings_Text_Buffers_Unbounded,"}, {"sha": "c59ff189048e9aababdb74381e0dd79a0e032021", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -84,12 +84,19 @@ package Scans is\n       --  Ada 2022 introduces square brackets as delimiters for array and\n       --  container aggregates.\n \n-      Tok_Raise,           -- RAISE\n+      --  The left delimiter token of interpolated strings, and tokens { and }\n+      --  of interpolated expressions are currently placed in no category since\n+      --  they don't fit well in the existing categories.\n+\n+      Tok_Left_Interpolated_String, -- f\"\n+      Tok_Left_Curly_Bracket,       -- {\n+      Tok_Raise,                    -- RAISE\n+      Tok_Right_Curly_Bracket,      -- }\n \n       Tok_Dot,             -- .            Namext\n       Tok_Apostrophe,      -- '            Namext\n \n-      Tok_Left_Bracket,    -- [            Namest\n+      Tok_Left_Bracket,    -- [            Namext\n       Tok_Left_Paren,      -- (            Namext, Consk\n \n       Tok_Delta,           -- DELTA        Atkwd, Sterm, Consk\n@@ -475,6 +482,9 @@ package Scans is\n    --  or aspect. Used to allow/require nonstandard style rules for =>+ with\n    --  -gnatyt.\n \n+   Inside_Interpolated_String_Literal : Boolean := False;\n+   --  True while parsing an interpolated string literal\n+\n    Inside_If_Expression : Nat := 0;\n    --  This is a counter that is set non-zero while scanning out an if\n    --  expression (incremented on entry, decremented on exit). It is used to"}, {"sha": "0ee71fbf043b9511073ee426e9ed5741535a99ca", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 129, "deletions": 7, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1077,8 +1077,20 @@ package body Scng is\n \n          String_Start := Scan_Ptr;\n \n-         Delimiter := Source (Scan_Ptr);\n-         Accumulate_Checksum (Delimiter);\n+         --  Continuation of interpolated string literal\n+\n+         if Inside_Interpolated_String_Literal\n+           and then Prev_Token = Tok_Right_Curly_Bracket\n+         then\n+            Scan_Ptr := Scan_Ptr - 1;\n+            Delimiter := '\"';\n+\n+         --  Common case\n+\n+         else\n+            Delimiter := Source (Scan_Ptr);\n+            Accumulate_Checksum (Delimiter);\n+         end if;\n \n          Start_String;\n          Wide_Character_Found      := False;\n@@ -1094,6 +1106,15 @@ package body Scng is\n                Accumulate_Checksum (C);\n                Scan_Ptr := Scan_Ptr + 1;\n                exit when Source (Scan_Ptr) /= Delimiter;\n+\n+               --  Unlike normal string literals, doubled delimiter has no\n+               --  special significance in interpolated string literals.\n+\n+               if Inside_Interpolated_String_Literal then\n+                  Error_Msg_S\n+                    (\"double quotations not allowed in interpolated string\");\n+               end if;\n+\n                Code := Get_Char_Code (C);\n                Accumulate_Checksum (C);\n                Scan_Ptr := Scan_Ptr + 1;\n@@ -1105,6 +1126,40 @@ package body Scng is\n                   Code := Get_Char_Code (C);\n                   Scan_Ptr := Scan_Ptr + 1;\n \n+               --  Found interpolated expression\n+\n+               elsif Inside_Interpolated_String_Literal\n+                 and then C = '{'\n+               then\n+                  Accumulate_Checksum (C);\n+                  exit;\n+\n+               --  Escaped character in interpolated string literal\n+\n+               elsif Inside_Interpolated_String_Literal\n+                 and then C = '\\'\n+               then\n+                  Accumulate_Checksum (C);\n+                  Scan_Ptr := Scan_Ptr + 1;\n+                  C := Source (Scan_Ptr);\n+                  Accumulate_Checksum (C);\n+                  Scan_Ptr := Scan_Ptr + 1;\n+\n+                  case C is\n+                     when 'a' => Code := Get_Char_Code (ASCII.BEL);\n+                     when 'b' => Code := Get_Char_Code (ASCII.BS);\n+                     when 'f' => Code := Get_Char_Code (ASCII.FF);\n+                     when 'n' => Code := Get_Char_Code (ASCII.LF);\n+                     when 'r' => Code := Get_Char_Code (ASCII.CR);\n+                     when 't' => Code := Get_Char_Code (ASCII.HT);\n+                     when 'v' => Code := Get_Char_Code (ASCII.VT);\n+                     when '0' => Code := Get_Char_Code (ASCII.NUL);\n+                     when '\\' | '\"' | '{' | '}'\n+                              => Code := Get_Char_Code (C);\n+                     when others =>\n+                        Error_Msg_S (\"illegal escaped character\");\n+                  end case;\n+\n                elsif Start_Of_Wide_Character then\n                   Wptr := Scan_Ptr;\n                   Scan_Wide (Source, Scan_Ptr, Code, Err);\n@@ -1234,6 +1289,29 @@ package body Scng is\n       Prev_Token_Ptr := Token_Ptr;\n       Token_Name := Error_Name;\n \n+      if Inside_Interpolated_String_Literal\n+        and then Prev_Token = Tok_Right_Curly_Bracket\n+      then\n+         --  Consecutive interpolated expressions\n+\n+         if Source (Scan_Ptr) = '{' then\n+            null;\n+\n+         --  Ending delimiter placed immediately after interpolated expression\n+\n+         elsif Source (Scan_Ptr) = '\"' then\n+            Scan_Ptr := Scan_Ptr + 1;\n+            Prev_Token := Tok_String_Literal;\n+\n+         --  String literal placed after interpolated expression\n+\n+         else\n+            Slit;\n+            Post_Scan;\n+            return;\n+         end if;\n+      end if;\n+\n       --  The following loop runs more than once only if a format effector\n       --  (tab, vertical tab, form  feed, line feed, carriage return) is\n       --  encountered and skipped, or some error situation, such as an\n@@ -1448,12 +1526,20 @@ package body Scng is\n                return;\n             end if;\n \n-         --  Left brace\n+         --  Left curly bracket, treated as right paren but proper delimiter\n+         --  of interpolated string literals when all extensions are allowed.\n \n          when '{' =>\n-            Error_Msg_S (\"illegal character, replaced by \"\"(\"\"\");\n-            Scan_Ptr := Scan_Ptr + 1;\n-            Token := Tok_Left_Paren;\n+            if All_Extensions_Allowed then\n+               Scan_Ptr := Scan_Ptr + 1;\n+               Token := Tok_Left_Curly_Bracket;\n+\n+            else\n+               Error_Msg_S (\"illegal character, replaced by \"\"(\"\"\");\n+               Scan_Ptr := Scan_Ptr + 1;\n+               Token := Tok_Left_Paren;\n+            end if;\n+\n             return;\n \n          --  Comma\n@@ -1863,7 +1949,7 @@ package body Scng is\n          --  Right bracket or right brace, treated as right paren but proper\n          --  aggregate delimiter in Ada 2022.\n \n-         when ']' | '}' =>\n+         when ']' =>\n             if Ada_Version >= Ada_2022 then\n                Token := Tok_Right_Bracket;\n \n@@ -1875,6 +1961,21 @@ package body Scng is\n             Scan_Ptr := Scan_Ptr + 1;\n             return;\n \n+         --  Right curly bracket, treated as right paren but proper delimiter\n+         --  of interpolated string literals when all extensions are allowed.\n+\n+         when '}' =>\n+            if All_Extensions_Allowed then\n+               Token := Tok_Right_Curly_Bracket;\n+\n+            else\n+               Error_Msg_S (\"illegal character, replaced by \"\")\"\"\");\n+               Token := Tok_Right_Paren;\n+            end if;\n+\n+            Scan_Ptr := Scan_Ptr + 1;\n+            return;\n+\n          --  Slash (can be division operator or first character of not equal)\n \n          when '/' =>\n@@ -2024,6 +2125,16 @@ package body Scng is\n          --  Lower case letters\n \n          when 'a' .. 'z' =>\n+            if All_Extensions_Allowed\n+              and then Source (Scan_Ptr) = 'f'\n+              and then Source (Scan_Ptr + 1) = '\"'\n+            then\n+               Scan_Ptr := Scan_Ptr + 1;\n+               Accumulate_Checksum (Source (Scan_Ptr));\n+               Token := Tok_Left_Interpolated_String;\n+               return;\n+            end if;\n+\n             Name_Len := 1;\n             Underline_Found := False;\n             Name_Buffer (1) := Source (Scan_Ptr);\n@@ -2034,6 +2145,17 @@ package body Scng is\n          --  Upper case letters\n \n          when 'A' .. 'Z' =>\n+            if All_Extensions_Allowed\n+              and then Source (Scan_Ptr) = 'F'\n+              and then Source (Scan_Ptr + 1) = '\"'\n+            then\n+               Error_Msg_S\n+                 (\"delimiter of interpolated string must be in lowercase\");\n+               Scan_Ptr := Scan_Ptr + 1;\n+               Token := Tok_Left_Interpolated_String;\n+               return;\n+            end if;\n+\n             Token_Contains_Uppercase := True;\n             Name_Len := 1;\n             Underline_Found := False;"}, {"sha": "42dca131ddc05575c5fc0ee45709e91f193ab777", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -557,6 +557,9 @@ package body Sem is\n          when N_String_Literal =>\n             Analyze_String_Literal (N);\n \n+         when N_Interpolated_String_Literal =>\n+            Analyze_Interpolated_String_Literal (N);\n+\n          when N_Subprogram_Body =>\n             Analyze_Subprogram_Body (N);\n "}, {"sha": "958b2bbbd18ac71bcb0b12c1c9de3696c2a0accd", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1922,7 +1922,7 @@ package body Sem_Aggr is\n \n       --  Disable the warning for GNAT Mode to allow for easier transition.\n \n-      if Ada_Version >= Ada_2022\n+      if Ada_Version_Explicit >= Ada_2022\n         and then Warn_On_Obsolescent_Feature\n         and then not GNAT_Mode\n         and then not Is_Homogeneous_Aggregate (N)"}, {"sha": "1755549bd8b9780d457abe4d6c0be35adc9c067b", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -12150,8 +12150,26 @@ package body Sem_Ch12 is\n          end;\n \n          --  If it is a child unit, make the parent instance (which is an\n-         --  instance of the parent of the generic) visible. The parent\n-         --  instance is the prefix of the name of the generic unit.\n+         --  instance of the parent of the generic) visible.\n+\n+         --  1) The child unit's parent is an explicit parent instance (the\n+         --  prefix of the name of the generic unit):\n+\n+         --    package Child_Package is new Parent_Instance.Child_Unit;\n+\n+         --  2) The child unit's parent is an implicit parent instance (e.g.\n+         --  when instantiating a sibling package):\n+\n+         --  generic\n+         --  package Parent.Second_Child is\n+         --    ...\n+\n+         --  generic\n+         --  package Parent.First_Child is\n+         --    package Sibling_Package is new Second_Child;\n+\n+         --  3) The child unit's parent is not an instance, so the scope is\n+         --  simply the one of the unit.\n \n          if Ekind (Scope (Gen_Unit)) = E_Generic_Package\n            and then Nkind (Gen_Id) = N_Expanded_Name\n@@ -12161,6 +12179,20 @@ package body Sem_Ch12 is\n             Install_Parent (Par_Ent, In_Body => True);\n             Par_Installed := True;\n \n+         elsif Ekind (Scope (Gen_Unit)) = E_Generic_Package\n+           and then Ekind (Scope (Act_Decl_Id)) = E_Package\n+           and then Is_Generic_Instance (Scope (Act_Decl_Id))\n+           and then Nkind\n+             (Name (Get_Unit_Instantiation_Node\n+                      (Scope (Act_Decl_Id)))) = N_Expanded_Name\n+         then\n+            Par_Ent := Entity\n+              (Prefix (Name (Get_Unit_Instantiation_Node\n+                               (Scope (Act_Decl_Id)))));\n+            Par_Vis := Is_Immediately_Visible (Par_Ent);\n+            Install_Parent (Par_Ent, In_Body => True);\n+            Par_Installed := True;\n+\n          elsif Is_Child_Unit (Gen_Unit) then\n             Par_Ent := Scope (Gen_Unit);\n             Par_Vis := Is_Immediately_Visible (Par_Ent);"}, {"sha": "e5f0ebcd6a2adb9cd97890e91b7df6da65488d4e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 129, "deletions": 76, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -13493,12 +13493,68 @@ package body Sem_Ch13 is\n    -------------------------------------\n \n    procedure Inherit_Aspects_At_Freeze_Point (Typ : Entity_Id) is\n+      function Get_Inherited_Rep_Item\n+        (E   : Entity_Id;\n+         Nam : Name_Id) return Node_Id;\n+      --  Search the Rep_Item chain of entity E for an instance of a rep item\n+      --  (pragma, attribute definition clause, or aspect specification) whose\n+      --  name matches the given name Nam, and that has been inherited from its\n+      --  parent, i.e. that has not been directly specified for E . If one is\n+      --  found, it is returned, otherwise Empty is returned.\n+\n+      function Get_Inherited_Rep_Item\n+        (E    : Entity_Id;\n+         Nam1 : Name_Id;\n+         Nam2 : Name_Id) return Node_Id;\n+      --  Search the Rep_Item chain of entity E for an instance of a rep item\n+      --  (pragma, attribute definition clause, or aspect specification) whose\n+      --  name matches one of the given names Nam1 or Nam2, and that has been\n+      --  inherited from its parent, i.e. that has not been directly specified\n+      --  for E . If one is found, it is returned, otherwise Empty is returned.\n+\n       function Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n         (Rep_Item : Node_Id) return Boolean;\n       --  This routine checks if Rep_Item is either a pragma or an aspect\n       --  specification node whose corresponding pragma (if any) is present in\n       --  the Rep Item chain of the entity it has been specified to.\n \n+      ----------------------------\n+      -- Get_Inherited_Rep_Item --\n+      ----------------------------\n+\n+      function Get_Inherited_Rep_Item\n+        (E   : Entity_Id;\n+         Nam : Name_Id) return Node_Id\n+      is\n+         Rep : constant Node_Id\n+                 := Get_Rep_Item (E, Nam, Check_Parents => True);\n+      begin\n+         if Present (Rep)\n+           and then not Has_Rep_Item (E, Nam, Check_Parents => False)\n+         then\n+            return Rep;\n+         else\n+            return Empty;\n+         end if;\n+      end Get_Inherited_Rep_Item;\n+\n+      function Get_Inherited_Rep_Item\n+        (E    : Entity_Id;\n+         Nam1 : Name_Id;\n+         Nam2 : Name_Id) return Node_Id\n+      is\n+         Rep : constant Node_Id\n+                 := Get_Rep_Item (E, Nam1, Nam2, Check_Parents => True);\n+      begin\n+         if Present (Rep)\n+           and then not Has_Rep_Item (E, Nam1, Nam2, Check_Parents => False)\n+         then\n+            return Rep;\n+         else\n+            return Empty;\n+         end if;\n+      end Get_Inherited_Rep_Item;\n+\n       --------------------------------------------------\n       -- Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item --\n       --------------------------------------------------\n@@ -13513,6 +13569,8 @@ package body Sem_Ch13 is\n            Present_In_Rep_Item (Entity (Rep_Item), Aspect_Rep_Item (Rep_Item));\n       end Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item;\n \n+      Rep : Node_Id;\n+\n    --  Start of processing for Inherit_Aspects_At_Freeze_Point\n \n    begin\n@@ -13543,40 +13601,36 @@ package body Sem_Ch13 is\n \n       --  Ada_05/Ada_2005\n \n-      if not Has_Rep_Item (Typ, Name_Ada_05, Name_Ada_2005, False)\n-        and then Has_Rep_Item (Typ, Name_Ada_05, Name_Ada_2005)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Ada_05, Name_Ada_2005))\n+      Rep := Get_Inherited_Rep_Item (Typ, Name_Ada_05, Name_Ada_2005);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Ada_2005_Only (Typ);\n       end if;\n \n       --  Ada_12/Ada_2012\n \n-      if not Has_Rep_Item (Typ, Name_Ada_12, Name_Ada_2012, False)\n-        and then Has_Rep_Item (Typ, Name_Ada_12, Name_Ada_2012)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Ada_12, Name_Ada_2012))\n+      Rep := Get_Inherited_Rep_Item (Typ, Name_Ada_12, Name_Ada_2012);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Ada_2012_Only (Typ);\n       end if;\n \n       --  Ada_2022\n \n-      if not Has_Rep_Item (Typ, Name_Ada_2022, False)\n-        and then Has_Rep_Item (Typ, Name_Ada_2022)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Ada_2022))\n+      Rep := Get_Inherited_Rep_Item (Typ, Name_Ada_2022);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Ada_2022_Only (Typ);\n       end if;\n \n       --  Atomic/Shared\n \n-      if not Has_Rep_Item (Typ, Name_Atomic, Name_Shared, False)\n-        and then Has_Rep_Pragma (Typ, Name_Atomic, Name_Shared)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Atomic, Name_Shared))\n+      Rep := Get_Inherited_Rep_Item (Typ,  Name_Atomic, Name_Shared);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Atomic (Typ);\n          Set_Is_Volatile (Typ);\n@@ -13591,87 +13645,91 @@ package body Sem_Ch13 is\n          Set_Convention (Typ, Convention (Base_Type (Typ)));\n       end if;\n \n-      --  Default_Component_Value\n+      --  Default_Component_Value (for base types only)\n \n-      --  Verify that there is no rep_item declared for the type, and there\n-      --  is one coming from an ancestor.\n+      --  Note that we need to look into the first subtype because the base\n+      --  type may be the implicit base type built by the compiler for the\n+      --  declaration of a constrained subtype with the aspect.\n \n-      if Is_Array_Type (Typ)\n-        and then Is_Base_Type (Typ)\n-        and then not Has_Rep_Item (Typ, Name_Default_Component_Value, False)\n-        and then Has_Rep_Item (Typ, Name_Default_Component_Value)\n-      then\n+      if Is_Array_Type (Typ) and then Is_Base_Type (Typ) then\n          declare\n+            F_Typ : constant Entity_Id := First_Subtype (Typ);\n+\n             E : Entity_Id;\n \n          begin\n-            E := Entity (Get_Rep_Item (Typ, Name_Default_Component_Value));\n+            Rep :=\n+              Get_Inherited_Rep_Item (F_Typ, Name_Default_Component_Value);\n+            if Present (Rep) then\n+               E := Entity (Rep);\n \n-            --  Deal with private types\n+               --  Deal with private types\n \n-            if Is_Private_Type (E) then\n-               E := Full_View (E);\n-            end if;\n+               if Is_Private_Type (E) then\n+                  E := Full_View (E);\n+               end if;\n \n-            Set_Default_Aspect_Component_Value (Typ,\n-              Default_Aspect_Component_Value (E));\n+               Set_Default_Aspect_Component_Value\n+                 (Typ, Default_Aspect_Component_Value (E));\n+               Set_Has_Default_Aspect (Typ);\n+            end if;\n          end;\n       end if;\n \n-      --  Default_Value\n+      --  Default_Value (for base types only)\n \n-      if Is_Scalar_Type (Typ)\n-        and then Is_Base_Type (Typ)\n-        and then not Has_Rep_Item (Typ, Name_Default_Value, False)\n-        and then Has_Rep_Item (Typ, Name_Default_Value)\n-      then\n-         Set_Has_Default_Aspect (Typ);\n+      --  Note that we need to look into the first subtype because the base\n+      --  type may be the implicit base type built by the compiler for the\n+      --  declaration of a constrained subtype with the aspect.\n \n+      if Is_Scalar_Type (Typ) and then Is_Base_Type (Typ) then\n          declare\n+            F_Typ : constant Entity_Id := First_Subtype (Typ);\n+\n             E : Entity_Id;\n \n          begin\n-            E := Entity (Get_Rep_Item (Typ, Name_Default_Value));\n+            Rep := Get_Inherited_Rep_Item (F_Typ, Name_Default_Value);\n+            if Present (Rep) then\n+               E := Entity (Rep);\n \n-            --  Deal with private types\n+               --  Deal with private types\n \n-            if Is_Private_Type (E) then\n-               E := Full_View (E);\n-            end if;\n+               if Is_Private_Type (E) then\n+                  E := Full_View (E);\n+               end if;\n \n-            Set_Default_Aspect_Value (Typ, Default_Aspect_Value (E));\n+               Set_Default_Aspect_Value (Typ, Default_Aspect_Value (E));\n+               Set_Has_Default_Aspect (Typ);\n+            end if;\n          end;\n       end if;\n \n       --  Discard_Names\n \n-      if not Has_Rep_Item (Typ, Name_Discard_Names, False)\n-        and then Has_Rep_Item (Typ, Name_Discard_Names)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Discard_Names))\n+      Rep := Get_Inherited_Rep_Item (Typ, Name_Discard_Names);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Discard_Names (Typ);\n       end if;\n \n       --  Volatile\n \n-      if not Has_Rep_Item (Typ, Name_Volatile, False)\n-        and then Has_Rep_Item (Typ, Name_Volatile)\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Volatile))\n+      Rep := Get_Inherited_Rep_Item (Typ, Name_Volatile);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Volatile (Typ);\n          Set_Treat_As_Volatile (Typ);\n       end if;\n \n       --  Volatile_Full_Access and Full_Access_Only\n \n-      if not Has_Rep_Item (Typ, Name_Volatile_Full_Access, False)\n-        and then not Has_Rep_Item (Typ, Name_Full_Access_Only, False)\n-        and then (Has_Rep_Item (Typ, Name_Volatile_Full_Access)\n-                    or else Has_Rep_Item (Typ, Name_Full_Access_Only))\n-        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Volatile_Full_Access))\n+      Rep := Get_Inherited_Rep_Item\n+               (Typ, Name_Volatile_Full_Access, Name_Full_Access_Only);\n+      if Present (Rep)\n+        and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n       then\n          Set_Is_Volatile_Full_Access (Typ);\n          Set_Is_Volatile (Typ);\n@@ -13688,48 +13746,43 @@ package body Sem_Ch13 is\n          begin\n             --  Atomic_Components\n \n-            if not Has_Rep_Item (Typ, Name_Atomic_Components, False)\n-              and then Has_Rep_Item (Typ, Name_Atomic_Components)\n-              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Atomic_Components))\n+            Rep := Get_Inherited_Rep_Item (Typ, Name_Atomic_Components);\n+            if Present (Rep)\n+              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n             then\n                Set_Has_Atomic_Components (Imp_Bas_Typ);\n             end if;\n \n             --  Volatile_Components\n \n-            if not Has_Rep_Item (Typ, Name_Volatile_Components, False)\n-              and then Has_Rep_Item (Typ, Name_Volatile_Components)\n-              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Volatile_Components))\n+            Rep := Get_Inherited_Rep_Item (Typ, Name_Volatile_Components);\n+            if Present (Rep)\n+              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n             then\n                Set_Has_Volatile_Components (Imp_Bas_Typ);\n             end if;\n \n             --  Finalize_Storage_Only\n \n-            if not Has_Rep_Pragma (Typ, Name_Finalize_Storage_Only, False)\n-              and then Has_Rep_Pragma (Typ, Name_Finalize_Storage_Only)\n-            then\n+            Rep := Get_Inherited_Rep_Item (Typ, Name_Finalize_Storage_Only);\n+            if Present (Rep) then\n                Set_Finalize_Storage_Only (Bas_Typ);\n             end if;\n \n             --  Universal_Aliasing\n \n-            if not Has_Rep_Item (Typ, Name_Universal_Aliasing, False)\n-              and then Has_Rep_Item (Typ, Name_Universal_Aliasing)\n-              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n-                   (Get_Rep_Item (Typ, Name_Universal_Aliasing))\n+            Rep := Get_Inherited_Rep_Item (Typ, Name_Universal_Aliasing);\n+            if Present (Rep)\n+              and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item (Rep)\n             then\n                Set_Universal_Aliasing (Imp_Bas_Typ);\n             end if;\n \n             --  Bit_Order\n \n             if Is_Record_Type (Typ) and then Typ = Bas_Typ then\n-               if not Has_Rep_Item (Typ, Name_Bit_Order, False)\n-                 and then Has_Rep_Item (Typ, Name_Bit_Order)\n-               then\n+               Rep := Get_Inherited_Rep_Item (Typ, Name_Bit_Order);\n+               if Present (Rep) then\n                   Set_Reverse_Bit_Order (Bas_Typ,\n                     Reverse_Bit_Order\n                       (Implementation_Base_Type (Etype (Bas_Typ))));"}, {"sha": "69a65c481bebd2376d540be5b4b5192a840ff540", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -28,9 +28,11 @@ with Einfo;          use Einfo;\n with Einfo.Utils;    use Einfo.Utils;\n with Ghost;          use Ghost;\n with Namet;          use Namet;\n+with Nlists;         use Nlists;\n with Opt;            use Opt;\n with Restrict;       use Restrict;\n with Rident;         use Rident;\n+with Sem;            use Sem;\n with Sem_Ch8;        use Sem_Ch8;\n with Sem_Dim;        use Sem_Dim;\n with Sinfo;          use Sinfo;\n@@ -119,6 +121,23 @@ package body Sem_Ch2 is\n       Set_Is_Static_Expression (N);\n    end Analyze_Integer_Literal;\n \n+   -----------------------------------------\n+   -- Analyze_Interpolated_String_Literal --\n+   -----------------------------------------\n+\n+   procedure Analyze_Interpolated_String_Literal (N : Node_Id) is\n+      Str_Elem : Node_Id;\n+\n+   begin\n+      Set_Etype (N, Any_String);\n+\n+      Str_Elem := First (Expressions (N));\n+      while Present (Str_Elem) loop\n+         Analyze (Str_Elem);\n+         Next (Str_Elem);\n+      end loop;\n+   end Analyze_Interpolated_String_Literal;\n+\n    --------------------------\n    -- Analyze_Real_Literal --\n    --------------------------"}, {"sha": "fb64a334992f43c18273c37eacd99edc4564ebf6", "filename": "gcc/ada/sem_ch2.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -27,11 +27,12 @@ with Types; use Types;\n \n package Sem_Ch2 is\n \n-   procedure Analyze_Character_Literal (N : Node_Id);\n-   procedure Analyze_Identifier        (N : Node_Id);\n-   procedure Analyze_Integer_Literal   (N : Node_Id);\n-   procedure Analyze_Real_Literal      (N : Node_Id);\n-   procedure Analyze_String_Literal    (N : Node_Id);\n+   procedure Analyze_Character_Literal           (N : Node_Id);\n+   procedure Analyze_Identifier                  (N : Node_Id);\n+   procedure Analyze_Integer_Literal             (N : Node_Id);\n+   procedure Analyze_Interpolated_String_Literal (N : Node_Id);\n+   procedure Analyze_Real_Literal                (N : Node_Id);\n+   procedure Analyze_String_Literal              (N : Node_Id);\n \n private\n    pragma Inline (Analyze_Character_Literal);"}, {"sha": "a8834b8f6a048a7e754d17ce7175d6dddbfcf69e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1154,13 +1154,16 @@ package body Sem_Ch5 is\n \n       Record_Elaboration_Scenario (N);\n \n-      --  Set Referenced_As_LHS if appropriate. We only set this flag if the\n-      --  assignment is a source assignment in the extended main source unit.\n-      --  We are not interested in any reference information outside this\n-      --  context, or in compiler generated assignment statements.\n+      --  Set Referenced_As_LHS if appropriate. We are not interested in\n+      --  compiler-generated assignment statements, nor in references outside\n+      --  the extended main source unit. We check whether the Original_Node is\n+      --  in the extended main source unit because in the case of a renaming of\n+      --  a component of a packed array, the Lhs itself has a Sloc from the\n+      --  place of the renaming.\n \n       if Comes_From_Source (N)\n-        and then In_Extended_Main_Source_Unit (Lhs)\n+        and then (In_Extended_Main_Source_Unit (Lhs)\n+          or else In_Extended_Main_Source_Unit (Original_Node (Lhs)))\n       then\n          Set_Referenced_Modified (Lhs, Out_Param => False);\n       end if;"}, {"sha": "fe89e1127ee0fa471150fe7e12722321474fb394", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -4891,14 +4891,16 @@ package body Sem_Ch8 is\n          then\n             null;\n \n-         --  Don't replace the discriminant in strict preanalysis mode since\n-         --  it can lead to errors during full analysis when the discriminant\n-         --  gets referenced later.\n+         --  Don't replace a non-qualified discriminant in strict preanalysis\n+         --  mode since it can lead to errors during full analysis when the\n+         --  discriminant gets referenced later.\n \n          --  This can occur in situations where a protected type contains\n-         --  an expression function which references a discriminant.\n+         --  an expression function which references a non-prefixed\n+         --  discriminant.\n \n-         elsif Preanalysis_Active\n+         elsif No (P)\n+           and then Preanalysis_Active\n            and then Inside_Preanalysis_Without_Freezing = 0\n          then\n             null;"}, {"sha": "555e09b74e9f44baaa83d7f85e0187b1ee667e9d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -7298,11 +7298,20 @@ package body Sem_Prag is\n       --  the test below also permits use in a configuration pragma file.\n \n       function Is_Configuration_Pragma return Boolean is\n-         Lis : constant List_Id := List_Containing (N);\n+         Lis : List_Id;\n          Par : constant Node_Id := Parent (N);\n          Prg : Node_Id;\n \n       begin\n+         --  Don't evaluate List_Containing (N) if Parent (N) could be\n+         --  an N_Aspect_Specification node.\n+\n+         if not Is_List_Member (N) then\n+            return False;\n+         end if;\n+\n+         Lis := List_Containing (N);\n+\n          --  If no parent, then we are in the configuration pragma file,\n          --  so the placement is definitely appropriate.\n \n@@ -15729,8 +15738,13 @@ package body Sem_Prag is\n \n             --  Deal with configuration pragma case\n \n-            if Arg_Count = 0 and then Is_Configuration_Pragma then\n-               Global_Discard_Names := True;\n+            if Is_Configuration_Pragma then\n+               if Arg_Count /= 0 then\n+                  Error_Pragma\n+                    (\"nonzero number of arguments for configuration pragma%\");\n+               else\n+                  Global_Discard_Names := True;\n+               end if;\n                return;\n \n             --  Otherwise, check correct appropriate context"}, {"sha": "9fcbba7384ef644144e7d3bd781b86f2c2c6a4a6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 51, "deletions": 10, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -212,6 +212,9 @@ package body Sem_Res is\n    procedure Resolve_Generalized_Indexing      (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Indexed_Component         (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Integer_Literal           (N : Node_Id; Typ : Entity_Id);\n+   procedure Resolve_Interpolated_String_Literal\n+     (N   : Node_Id;\n+      Typ : Entity_Id);\n    procedure Resolve_Logical_Op                (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Membership_Op             (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Null                      (N : Node_Id; Typ : Entity_Id);\n@@ -449,9 +452,10 @@ package body Sem_Res is\n       Loc  : constant Source_Ptr := Sloc (N);\n       Literal_Aspect_Map :\n         constant array (N_Numeric_Or_String_Literal) of Aspect_Id :=\n-          (N_Integer_Literal => Aspect_Integer_Literal,\n-           N_Real_Literal    => Aspect_Real_Literal,\n-           N_String_Literal  => Aspect_String_Literal);\n+          (N_Integer_Literal             => Aspect_Integer_Literal,\n+           N_Interpolated_String_Literal => No_Aspect,\n+           N_Real_Literal                => Aspect_Real_Literal,\n+           N_String_Literal              => Aspect_String_Literal);\n \n       Named_Number_Aspect_Map : constant array (Named_Kind) of Aspect_Id :=\n         (E_Named_Integer => Aspect_Integer_Literal,\n@@ -3437,6 +3441,9 @@ package body Sem_Res is\n             when N_String_Literal =>\n                Resolve_String_Literal            (N, Ctx_Type);\n \n+            when N_Interpolated_String_Literal =>\n+               Resolve_Interpolated_String_Literal (N, Ctx_Type);\n+\n             when N_Target_Name =>\n                Resolve_Target_Name               (N, Ctx_Type);\n \n@@ -9672,6 +9679,35 @@ package body Sem_Res is\n       Eval_Integer_Literal (N);\n    end Resolve_Integer_Literal;\n \n+   -----------------------------------------\n+   -- Resolve_Interpolated_String_Literal --\n+   -----------------------------------------\n+\n+   procedure Resolve_Interpolated_String_Literal (N : Node_Id; Typ : Entity_Id)\n+   is\n+      Str_Elem : Node_Id;\n+\n+   begin\n+      Str_Elem := First (Expressions (N));\n+      pragma Assert (Nkind (Str_Elem) = N_String_Literal);\n+\n+      while Present (Str_Elem) loop\n+\n+         --  Resolve string elements using the context type; for interpolated\n+         --  expressions there is no need to check if their type has a suitable\n+         --  image function because under Ada 2022 all the types have such\n+         --  function available.\n+\n+         if Etype (Str_Elem) = Any_String then\n+            Resolve (Str_Elem, Typ);\n+         end if;\n+\n+         Next (Str_Elem);\n+      end loop;\n+\n+      Set_Etype (N, Typ);\n+   end Resolve_Interpolated_String_Literal;\n+\n    --------------------------------\n    -- Resolve_Intrinsic_Operator --\n    --------------------------------\n@@ -10105,11 +10141,11 @@ package body Sem_Res is\n       then\n          T := Etype (R);\n \n-      --  If the type of the left operand is universal_integer and that of the\n-      --  right operand is smaller, then we do not resolve the operands to the\n-      --  tested type but to universal_integer instead. If not conforming to\n-      --  the letter, it's conforming to the spirit of the specification of\n-      --  membership tests, which are typically used to guard an operation and\n+      --  If the left operand is of a universal numeric type and the right\n+      --  operand is not, we do not resolve the operands to the tested type\n+      --  but to the universal type instead. If not conforming to the letter,\n+      --  it's conforming to the spirit of the specification of membership\n+      --  tests, which are typically used to guard a specific operation and\n       --  ought not to fail a check in doing so. Without this, in the case of\n \n       --    type Small_Length is range 1 .. 16;\n@@ -10127,9 +10163,14 @@ package body Sem_Res is\n       --  for example the large values of Long_Long_Long_Unsigned.\n \n       elsif not Is_Overloaded (L)\n-        and then Etype (L) = Universal_Integer\n+        and then Is_Universal_Numeric_Type (Etype (L))\n         and then (Is_Overloaded (R)\n-                   or else RM_Size (Etype (R)) < RM_Size (Universal_Integer))\n+                   or else\n+                     (not Is_Universal_Numeric_Type (Etype (R))\n+                       and then\n+                         (not Is_Integer_Type (Etype (R))\n+                           or else\n+                          RM_Size (Etype (R)) < RM_Size (Universal_Integer))))\n       then\n          T := Etype (L);\n "}, {"sha": "934979e17abea85e97c9feae6c68908a7e86ce2a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -6163,9 +6163,12 @@ package body Sem_Util is\n       elsif Is_Build_In_Place_Function (Func) then\n          Set_Returns_By_Ref (Func);\n \n-      --  In Ada 95, limited types are returned by reference\n+      --  In Ada 95, limited types are returned by reference, but not if the\n+      --  convention is other than Ada.\n \n-      elsif Is_Limited_View (Typ) then\n+      elsif Is_Limited_View (Typ)\n+        and then not Has_Foreign_Convention (Func)\n+      then\n          Set_Returns_By_Ref (Func);\n       end if;\n    end Compute_Returns_By_Ref;\n@@ -15255,8 +15258,15 @@ package body Sem_Util is\n       then\n          return Is_Aliased_View (Expression (Obj));\n \n+      --  The dereference of an access-to-object value denotes an aliased view,\n+      --  but this routine uses the rules of the language so we need to exclude\n+      --  rewritten constructs that introduce artificial dereferences.\n+\n       elsif Nkind (Obj) = N_Explicit_Dereference then\n-         return Nkind (Original_Node (Obj)) /= N_Function_Call;\n+         return not Is_Captured_Function_Call (Obj)\n+           and then not\n+             (Nkind (Parent (Obj)) = N_Object_Renaming_Declaration\n+               and then Is_Return_Object (Defining_Entity (Parent (Obj))));\n \n       else\n          return False;\n@@ -20775,9 +20785,10 @@ package body Sem_Util is\n    is\n       Literal_Aspect_Map :\n         constant array (N_Numeric_Or_String_Literal) of Aspect_Id :=\n-          (N_Integer_Literal => Aspect_Integer_Literal,\n-           N_Real_Literal    => Aspect_Real_Literal,\n-           N_String_Literal  => Aspect_String_Literal);\n+          (N_Integer_Literal             => Aspect_Integer_Literal,\n+           N_Interpolated_String_Literal => No_Aspect,\n+           N_Real_Literal                => Aspect_Real_Literal,\n+           N_String_Literal              => Aspect_String_Literal);\n \n    begin\n       --  Return True when N is either a literal or a named number and the\n@@ -27394,7 +27405,9 @@ package body Sem_Util is\n \n    procedure Set_Debug_Info_Defining_Id (N : Node_Id) is\n    begin\n-      if Comes_From_Source (Defining_Identifier (N)) then\n+      if Comes_From_Source (Defining_Identifier (N))\n+        or else Debug_Generated_Code\n+      then\n          Set_Debug_Info_Needed (Defining_Identifier (N));\n       end if;\n    end Set_Debug_Info_Defining_Id;"}, {"sha": "dc1bb084b549af8d6736c0b6ed0ea48c0c08012a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2976,16 +2976,16 @@ package Sem_Util is\n \n    function Rep_To_Pos_Flag (E : Entity_Id; Loc : Source_Ptr) return Node_Id;\n    --  This is used to construct the second argument in a call to Rep_To_Pos\n-   --  which is Standard_True if range checks are enabled (E is an entity to\n-   --  which the Range_Checks_Suppressed test is applied), and Standard_False\n-   --  if range checks are suppressed. Loc is the location for the node that\n-   --  is returned (which is a New_Occurrence of the appropriate entity).\n+   --  which is True if range checks are enabled (E is an entity to which the\n+   --  Range_Checks_Suppressed test is applied), and False if range checks are\n+   --  suppressed. Loc is the location for the node that is returned (which is\n+   --  a New_Occurrence of the appropriate entity).\n    --\n-   --  Note: one might think that it would be fine to always use True and\n-   --  to ignore the suppress in this case, but it is generally better to\n-   --  believe a request to suppress exceptions if possible, and further\n-   --  more there is at least one case in the generated code (the code for\n-   --  array assignment in a loop) that depends on this suppression.\n+   --  Note: one might think that it would be fine to always use True and to\n+   --  ignore the suppress in this case, but there is at least one case in the\n+   --  generated code (the code for array assignment in a loop) that depends on\n+   --  this suppression. Anyway, it is generally better to believe a request to\n+   --  suppress exceptions if possible.\n \n    procedure Require_Entity (N : Node_Id);\n    --  N is a node which should have an entity value if it is an entity name.\n@@ -3096,8 +3096,8 @@ package Sem_Util is\n    --  associated name (i.e. the Node_Id associated with its name).\n \n    procedure Set_Debug_Info_Defining_Id (N : Node_Id);\n-   --  Call Set_Debug_Info_Needed on Defining_Identifier (N) if it comes\n-   --  from source.\n+   --  Call Set_Debug_Info_Needed on Defining_Identifier (N) if it comes from\n+   --  source or we are in -gnatD mode, where we are debugging generated code.\n \n    procedure Set_Debug_Info_Needed (T : Entity_Id);\n    --  Sets the Debug_Info_Needed flag on entity T , and also on any entities"}, {"sha": "722e6d4e929202ae8cf4412b12af731b7f50d9d2", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2618,6 +2618,33 @@ package Sinfo is\n       --  Is_Folded_In_Parser\n       --  plus fields for expression\n \n+      ---------------------------------------\n+      --  2.6  Interpolated String Literal --\n+      ---------------------------------------\n+\n+      --  INTERPOLATED_STRING_LITERAL ::=\n+      --    '{' \"{INTERPOLATED_STRING_ELEMENT}\" {\n+      --        \"{INTERPOLATED_STRING_ELEMENT}\" } '}'\n+\n+      --  INTERPOLATED_STRING_ELEMENT ::=\n+      --      ESCAPED_CHARACTER | INTERPOLATED_EXPRESSION\n+      --    | non_quotation_mark_non_left_brace_GRAPHIC_CHARACTER\n+\n+      --  ESCAPED_CHARACTER ::= '\\GRAPHIC_CHARACTER'\n+\n+      --  INTERPOLATED_EXPRESSION ::= '{' EXPRESSION '}'\n+\n+      --  Most of these syntax rules are omitted as tree nodes to simplify\n+      --  semantic processing. The scanner handles escaped characters as part\n+      --  of processing an interpolated string literal, and the parser stores\n+      --  in the Expressions field of this node a list containing the sequence\n+      --  of string literals and the roots of the interpolated expressions.\n+\n+      --  N_Interpolated_String_Literal\n+      --  Sloc points to literal\n+      --  Expressions\n+      --  plus fields for expression\n+\n       ------------------\n       -- 2.7  Comment --\n       ------------------"}, {"sha": "19a9a43c42685ad5ab5e1ccf6e4394a6c441f708", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -3313,6 +3313,38 @@ package body Sprint is\n             Set_Debug_Sloc;\n             Write_String_Table_Entry (Strval (Node));\n \n+         when N_Interpolated_String_Literal =>\n+            Write_Char ('{');\n+\n+            declare\n+               Str_Elem : Node_Id := First (Expressions (Node));\n+               Is_First : Boolean := True;\n+\n+            begin\n+               while Present (Str_Elem) loop\n+                  if not Is_First then\n+                     Write_Str (\" & \");\n+                  end if;\n+\n+                  if Nkind (Str_Elem) = N_String_Literal then\n+                     Sprint_Node (Str_Elem);\n+\n+                  else\n+                     Write_Char ('\"');\n+                     Write_Char ('{');\n+                     Sprint_Node (Str_Elem);\n+                     Write_Char ('}');\n+                     Write_Char ('\"');\n+                  end if;\n+\n+                  Is_First := False;\n+\n+                  Next (Str_Elem);\n+               end loop;\n+            end;\n+\n+            Write_Char ('}');\n+\n          when N_Subprogram_Body =>\n \n             --  Output extra blank line unless we are in freeze actions"}, {"sha": "37bf3a7cb795d04e50c89fd10d490fae11e57309", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1518,14 +1518,11 @@ package body Urealp is\n    -- UR_Write_To_JSON --\n    ----------------------\n \n-   --  We defer to the implementation of UR_Write in all cases, either directly\n-   --  for values that are naturally written in a JSON compatible format, or by\n-   --  first computing a decimal approximation for other values.\n+   --  We defer to the implementation of UR_Write for values that are naturally\n+   --  written in a JSON compatible format and write a fraction for the others.\n \n    procedure UR_Write_To_JSON (Real : Ureal) is\n-      Val  : constant Ureal_Entry      := Ureals.Table (Real);\n-      Imrk : constant Uintp.Save_Mark  := Mark;\n-      Rmrk : constant Urealp.Save_Mark := Mark;\n+      Val : constant Ureal_Entry := Ureals.Table (Real);\n \n       T : Ureal;\n \n@@ -1561,31 +1558,21 @@ package body Urealp is\n       elsif Val.Rbase = 0 and then Val.Num mod Val.Den = 0 then\n          T := Real;\n \n-      --  For other constants, compute an approximation in base 10\n+      --  Other non-based (rational) constants are written in num/den style\n \n       else\n-         declare\n-            A : constant Ureal := UR_Abs (Real);\n-            --  The absolute value\n-\n-            E : constant Uint  :=\n-                  (if A < Ureal_1\n-                   then UI_From_Int (3 - Decimal_Exponent_Lo (Real))\n-                   else Uint_3);\n-            --  The exponent for at least 3 digits after the decimal point\n-\n-            Num : constant Uint :=\n-                    UR_To_Uint (UR_Mul (A, UR_Exponentiate (Ureal_10, E)));\n-            --  The numerator appropriately rounded\n-\n-         begin\n-            T := UR_From_Components (Num, E, 10, Val.Negative);\n-         end;\n+         Write_Str (\"{ \"\"code\"\": \"\"/\"\", \"\"operands\"\": [ \");\n+         if Val.Negative then\n+            Write_Char ('-');\n+         end if;\n+         UI_Write (Val.Num, Decimal);\n+         Write_Str (\".0, \");\n+         UI_Write (Val.Den, Decimal);\n+         Write_Str (\".0 ] }\");\n+         return;\n       end if;\n \n       UR_Write (T);\n-      Release (Imrk);\n-      Release (Rmrk);\n    end UR_Write_To_JSON;\n \n    -------------"}, {"sha": "05a2401730d275bf9762913075f411b9fa28fcd9", "filename": "gcc/addresses.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Faddresses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Faddresses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faddresses.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Inline functions to test validity of reg classes for addressing modes.\n-   Copyright (C) 2006-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "2f4aee7c9dfe3d51d6a74a505b8e38e693de96b2", "filename": "gcc/adjust-alignment.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fadjust-alignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fadjust-alignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fadjust-alignment.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Adjust alignment for local variable.\n-   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n    Contributed by Kito Cheng <kito.cheng@sifive.com>\n \n This file is part of GCC."}, {"sha": "3672bf277b95d4e74a154312fc42b064bbb7fc89", "filename": "gcc/alias.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falias.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falias.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Alias analysis for GNU C\n-   Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2023 Free Software Foundation, Inc.\n    Contributed by John Carr (jfc@mit.edu).\n \n This file is part of GCC."}, {"sha": "0f0787d8baf8e9bf346e567dd742cee6e4d19a7b", "filename": "gcc/alias.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Exported functions from alias.cc\n-   Copyright (C) 2004-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "5e94bd3e82710d26c9fd68e969cc6944e7a0a731", "filename": "gcc/align.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falign.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falign.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falign.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Alignment-related classes.\n-   Copyright (C) 2018-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2018-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "dd550ee597bab08278c9491c360de89a3636c25f", "filename": "gcc/alloc-pool.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falloc-pool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falloc-pool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Functions to support a pool of allocatable objects.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n    Contributed by Daniel Berlin <dan@cgsoftware.com>\n \n This file is part of GCC."}, {"sha": "e56709b7cf0aec5262e3c33c26911cee2d62803f", "filename": "gcc/alloc-pool.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falloc-pool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Falloc-pool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Functions to support a pool of allocatable objects\n-   Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2023 Free Software Foundation, Inc.\n    Contributed by Daniel Berlin <dan@cgsoftware.com>\n \n This file is part of GCC."}, {"sha": "d7416917abd0a3362ab00696fb313c49f7dd6394", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -9706,7 +9706,7 @@\n \t* Initial creation\n \n \f\n-Copyright (C) 2019-2022 Free Software Foundation, Inc.\n+Copyright (C) 2019-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "4cc686fb83abb16feea7ae39851c34e95075e101", "filename": "gcc/array-traits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Farray-traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Farray-traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Farray-traits.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Descriptions of array-like objects.\n-   Copyright (C) 2019-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2019-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "d833f89cc4f4d16edfdb485aa954e2eaad7c7141", "filename": "gcc/asan.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fasan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fasan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* AddressSanitizer, a fast memory error detector.\n-   Copyright (C) 2012-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2023 Free Software Foundation, Inc.\n    Contributed by Kostya Serebryany <kcc@google.com>\n \n This file is part of GCC."}, {"sha": "902e93b848a901ec1132c4eea10079f22a715e21", "filename": "gcc/asan.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fasan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fasan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* AddressSanitizer, a fast memory error detector.\n-   Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2011-2023 Free Software Foundation, Inc.\n    Contributed by Kostya Serebryany <kcc@google.com>\n \n This file is part of GCC."}, {"sha": "acf1c5f6be739767ebef35e7bf8e75a95d6e73ec", "filename": "gcc/attr-fnspec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattr-fnspec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattr-fnspec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattr-fnspec.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Handling of fnspec attribute specifiers\n-   Copyright (C) 2008-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2008-2023 Free Software Foundation, Inc.\n    Contributed by Richard Guenther  <rguenther@suse.de>\n \n    This file is part of GCC."}, {"sha": "49cb299a3c1b98b13e4aa976ad5889a80eada109", "filename": "gcc/attribs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Functions dealing with attribute handling, used by most front ends.\n-   Copyright (C) 1992-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "e7540f71d6a94b9c0a230083a3b209702e3a2921", "filename": "gcc/attribs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattribs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fattribs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Declarations and definitions dealing with attribute handling.\n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "1486e8c679a28f76af408edd8f949dc5e8a9a834", "filename": "gcc/auto-inc-dec.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-inc-dec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-inc-dec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Discovery of auto-inc and auto-dec instructions.\n-   Copyright (C) 2006-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2023 Free Software Foundation, Inc.\n    Contributed by Kenneth Zadeck <zadeck@naturalbridge.com>\n \n This file is part of GCC."}, {"sha": "f88d00934e1abe8643bab76a24c52ea14943482e", "filename": "gcc/auto-profile.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-profile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-profile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Read and annotate call graph profile from the auto profile data file.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n    Contributed by Dehao Chen (dehao@google.com)\n \n This file is part of GCC."}, {"sha": "8b4cd06132c9dec44533dd225f18d9bfe333ff4b", "filename": "gcc/auto-profile.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-profile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fauto-profile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* auto-profile.h - Defines data exported from auto-profile.cc\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n    Contributed by Dehao Chen (dehao@google.com)\n \n This file is part of GCC."}, {"sha": "42c6b762e6357a99e58e25190895af5f40e032c6", "filename": "gcc/backend.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbackend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbackend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbackend.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Common Backend requirements. \n \n-   Copyright (C) 2015-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2015-2023 Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod <amacleod@redhat.com>\n \n This file is part of GCC."}, {"sha": "7c06a7db45decfee53a3caf816945235307cfa2d", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Define control flow data structures for the CFG.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "6f606420da89a0bafe283334f8b0199480893492", "filename": "gcc/bb-reorder.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbb-reorder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbb-reorder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Basic block reordering routines for the GNU compiler.\n-   Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "c24322d181a07c151279f3ddb18e067709d5f529", "filename": "gcc/bb-reorder.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbb-reorder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbb-reorder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Basic block reordering routines for the GNU compiler.\n-   Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "20de562caac07d2716ff96a1a61ded3ed8dc32c1", "filename": "gcc/bitmap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbitmap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbitmap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Functions to support general ended bitmaps.\n-   Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "a439f933867f3c2d94863d91efcba2c851be8431", "filename": "gcc/bitmap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Functions to support general ended bitmaps.\n-   Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "497c1ca06e6e9ebc1201c38902b04f3ebe89ec92", "filename": "gcc/btfout.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbtfout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbtfout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbtfout.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Output BTF format from GCC.\n-   Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2021-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "782e82d183ff7a48285ee4824d4827c021080d76", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2001-2023 Free Software Foundation, Inc.\n    Contributed by Joseph Myers <jsm28@cam.ac.uk>.\n \n This file is part of GCC."}, {"sha": "5cb25ab71d0f0f876433b226d4ce235007134bf0", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2001-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2001-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "af45829875e6cc16569222758aa574893ec4e361", "filename": "gcc/builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Expand builtin functions.\n-   Copyright (C) 1988-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1988-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "0afa4c55ad9c9f7fefe28f7a23f92dddb6a38309", "filename": "gcc/builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* This file contains the definitions and documentation for the\n    builtins used in the GNU compiler.\n-   Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "6a43de4b3efe89142919c09501752e75360d1c89", "filename": "gcc/builtins.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fbuiltins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Expand builtin functions.\n-   Copyright (C) 1988-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1988-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "c57cd01136a92b0fabbca8d6b6cd0b85f19545e8", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,3 +1,34 @@\n+2023-01-03  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-cppbuiltin.cc (c_cpp_builtins): Define\n+\t__LIBGCC_DWARF_CIE_DATA_ALIGNMENT__.\n+\n+2023-01-03  Florian Weimer  <fweimer@redhat.com>\n+\n+\tRevert:\n+\t2023-01-03  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-cppbuiltin.cc (__LIBGCC_DWARF_REG_SIZES_CONSTANT__):\n+\tDefine if constant is known.\n+\n+2023-01-03  Florian Weimer  <fweimer@redhat.com>\n+\n+\tRevert:\n+\t2023-01-02  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-cppbuiltin.cc (c_cpp_builtins): Define\n+\t__LIBGCC_DWARF_CIE_DATA_ALIGNMENT__.\n+\n+2023-01-02  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-cppbuiltin.cc (c_cpp_builtins): Define\n+\t__LIBGCC_DWARF_CIE_DATA_ALIGNMENT__.\n+\n+2023-01-02  Florian Weimer  <fweimer@redhat.com>\n+\n+\t* c-cppbuiltin.cc (__LIBGCC_DWARF_REG_SIZES_CONSTANT__):\n+\tDefine if constant is known.\n+\n 2022-12-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/98487\n@@ -13815,7 +13846,7 @@\n \t* c-common.c: Include gt-c-family-c-common.h.\n \t* c-pragma.c: Include gt-c-family-c-pragma.h.\n \f\n-Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+Copyright (C) 2010-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "35f3919dfa05fc82fa36f8d3e4b6f06c50c78537", "filename": "gcc/c-family/c-cppbuiltin.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc-family%2Fc-cppbuiltin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc-family%2Fc-cppbuiltin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1521,6 +1521,9 @@ c_cpp_builtins (cpp_reader *pfile)\n #endif\n       builtin_define_with_int_value (\"__LIBGCC_DWARF_FRAME_REGISTERS__\",\n \t\t\t\t     DWARF_FRAME_REGISTERS);\n+      builtin_define_with_int_value (\"__LIBGCC_DWARF_CIE_DATA_ALIGNMENT__\",\n+\t\t\t\t     DWARF_CIE_DATA_ALIGNMENT);\n+\n #ifdef EH_RETURN_STACKADJ_RTX\n       cpp_define (pfile, \"__LIBGCC_EH_RETURN_STACKADJ_RTX__\");\n #endif"}, {"sha": "f5f3ece2350e9fc955ada8011598eab6407ee0d5", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -8982,7 +8982,7 @@\n \t* c-decl.c: Likewise.  Include gt-c-c-decl.h, not gt-c-decl.h.\n \t* c-parser.c: Likewise.  Include gt-c-c-parser.h, not gt-c-parser.h.\n \f\n-Copyright (C) 2012-2022 Free Software Foundation, Inc.\n+Copyright (C) 2012-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "b8915dab1281a0ab83db89ecf8c69096a03f5268", "filename": "gcc/caller-save.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcaller-save.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcaller-save.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Save and restore call-clobbered registers which are live across a call.\n-   Copyright (C) 1989-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1989-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "4492ae0a86aaab1394b9a200e7fea98a516b3ae4", "filename": "gcc/calls.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcalls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcalls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Convert function calls to rtl insns, for GNU C compiler.\n-   Copyright (C) 1989-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1989-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "c7f8c5e4b39443308d0e876aa786028f7120ea83", "filename": "gcc/calls.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcalls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcalls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Declarations and data types for RTL call insn generation.\n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "1bd6fadea35eb6645fc2e339a66acfae9dce93b1", "filename": "gcc/ccmp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fccmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fccmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fccmp.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Conditional compare related functions\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "f6f73897abb2eed99c3eab806abe150acaa9d7a1", "filename": "gcc/ccmp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fccmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fccmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fccmp.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Conditional comapre related functions.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "2d8ccd93d21464ea0f421f24eb7e65f3404aaa04", "filename": "gcc/cfg-flags.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg-flags.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg-flags.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg-flags.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Flags on basic blocks and edges.\n-   Copyright (C) 2012-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "897ef534ff5827b4916bb6068a7084fc0b167aed", "filename": "gcc/cfg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph manipulation code for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "4cd2958bae55b18b479156315565fb647d2e3d9c", "filename": "gcc/cfg.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph manipulation code header file.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "ef24c5e4d1574d8bc1b058403d3360a24f5682d1", "filename": "gcc/cfganal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfganal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfganal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph analysis code for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "0b6c67dfab591ec7981737d8274b8ebf1b4f50a6", "filename": "gcc/cfganal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfganal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfganal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph analysis header file.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "15ed4deb5f7d195949c6ba0e2913ba3b1aaadad7", "filename": "gcc/cfgbuild.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgbuild.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgbuild.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph building code for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "51d3eccb1aece75d66db905c24ff82e6f0087a30", "filename": "gcc/cfgbuild.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgbuild.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgbuild.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph building header file.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "194e0e5de123aa4674bc238075e8f06185a4a159", "filename": "gcc/cfgcleanup.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgcleanup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgcleanup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow optimization code for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "46ce640655de6450ab72d9b7bdae03fa761594e8", "filename": "gcc/cfgcleanup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgcleanup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgcleanup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow optimization header file.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "86783a6b66131697ba4d21126418793a75a7e6a9", "filename": "gcc/cfgexpand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgexpand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgexpand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* A pass for lowering trees to RTL.\n-   Copyright (C) 2004-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "0e551f6cfd3a258f0bb778560321e5835d838156", "filename": "gcc/cfgexpand.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgexpand.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgexpand.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Header file for lowering trees to RTL.\n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "545640354150b61a10ed4aa8f55068590745c1b7", "filename": "gcc/cfghooks.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfghooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfghooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Hooks for cfg representation specific functions.\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <s.pop@laposte.net>\n \n This file is part of GCC."}, {"sha": "aebd080cf8ba77480e4649af4da1845028a9f182", "filename": "gcc/cfghooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Hooks for cfg representation specific functions.\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <s.pop@laposte.net>\n \n This file is part of GCC."}, {"sha": "ccda7415d7037e26048425b5d85f3633a39fd325", "filename": "gcc/cfgloop.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Natural loop discovery code for GNU compiler.\n-   Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "e98ad06f9b50198338518faeb4fd63bee3772410", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Natural loop functions\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "fd867448d639430ecfa867348aec2974c2bee923", "filename": "gcc/cfgloopanal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopanal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopanal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Natural loop analysis code for GNU compiler.\n-   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "0e3ad8ed742afc16ff73e5c3015609aec37361eb", "filename": "gcc/cfgloopmanip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopmanip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopmanip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Loop manipulation code for GNU compiler.\n-   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "93e417fcb7da1c709ca00cf6e122405cd0d7edc4", "filename": "gcc/cfgloopmanip.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopmanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgloopmanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Loop manipulation header.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "1d84b29ce61a4941b612b0bda7669cca77a14e58", "filename": "gcc/cfgrtl.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgrtl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgrtl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Control flow graph manipulation code for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -3910,6 +3910,7 @@ fixup_reorder_chain (void)\n       rtx ret_label = NULL_RTX;\n       basic_block nb;\n       edge_iterator ei;\n+      bool asm_goto = false;\n \n       if (EDGE_COUNT (bb->succs) == 0)\n \tcontinue;\n@@ -4016,7 +4017,9 @@ fixup_reorder_chain (void)\n \t\t  || e_fall->dest == EXIT_BLOCK_PTR_FOR_FN (cfun))\n \t\tcontinue;\n \n-\t      /* Otherwise we'll have to use the fallthru fixup below.  */\n+\t      /* Otherwise we'll have to use the fallthru fixup below.\n+\t\t But avoid redirecting asm goto to EXIT.  */\n+\t      asm_goto = true;\n \t    }\n \t  else\n \t    {\n@@ -4048,7 +4051,8 @@ fixup_reorder_chain (void)\n \t return rather than a jump to the return block.  */\n       rtx_insn *ret, *use;\n       basic_block dest;\n-      if (bb_is_just_return (e_fall->dest, &ret, &use)\n+      if (!asm_goto\n+\t  && bb_is_just_return (e_fall->dest, &ret, &use)\n \t  && ((PATTERN (ret) == simple_return_rtx && targetm.have_simple_return ())\n \t      || (PATTERN (ret) == ret_rtx && targetm.have_return ())))\n \t{"}, {"sha": "e29513449fbb3ab2eb706028c114e350d44de964", "filename": "gcc/cfgrtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgrtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcfgrtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Define control flow data structures for the CFG.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "5e60c2b73dbaa440dadc9e984d693bfe6ca49488", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC."}, {"sha": "5d3ced1b5d5eb8e1e761952a936f952b8d1785d3", "filename": "gcc/cgraph.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -891,7 +891,8 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n       versionable (false), can_change_signature (false),\n       redefined_extern_inline (false), tm_may_enter_irr (false),\n       ipcp_clone (false), declare_variant_alt (false),\n-      calls_declare_variant_alt (false), m_uid (uid), m_summary_id (-1)\n+      calls_declare_variant_alt (false), gc_candidate (false),\n+      m_uid (uid), m_summary_id (-1)\n   {}\n \n   /* Remove the node from cgraph and all inline clones inlined into it.\n@@ -1490,6 +1491,10 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n   unsigned declare_variant_alt : 1;\n   /* True if the function calls declare_variant_alt functions.  */\n   unsigned calls_declare_variant_alt : 1;\n+  /* True if the function should only be emitted if it is used.  This flag\n+     is set for local SIMD clones when they are created and cleared if the\n+     vectorizer uses them.  */\n+  unsigned gc_candidate : 1;\n \n private:\n   /* Unique id of the node.  */"}, {"sha": "f13abca1b938dc9b63066caa81c48a276af6d31f", "filename": "gcc/cgraphbuild.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphbuild.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphbuild.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph construction.\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC."}, {"sha": "3d97ee42f77c825dd5838dd0d982bfa6c4650a9c", "filename": "gcc/cgraphclones.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphclones.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphclones.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph clones\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC."}, {"sha": "59ce2708b7be00cc36d450aa3f8e374c0054e5b1", "filename": "gcc/cgraphunit.cc", "status": "modified", "additions": 42, "deletions": 9, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphunit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcgraphunit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Driver of optimization process\n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -1996,19 +1996,52 @@ expand_all_functions (void)\n \n   /* Output functions in RPO so callees get optimized before callers.  This\n      makes ipa-ra and other propagators to work.\n-     FIXME: This is far from optimal code layout.  */\n-  for (i = new_order_pos - 1; i >= 0; i--)\n-    {\n-      node = order[i];\n+     FIXME: This is far from optimal code layout.\n+     Make multiple passes over the list to defer processing of gc\n+     candidates until all potential uses are seen.  */\n+  int gc_candidates = 0;\n+  int prev_gc_candidates = 0;\n \n-      if (node->process)\n+  while (1)\n+    {\n+      for (i = new_order_pos - 1; i >= 0; i--)\n \t{\n-\t  expanded_func_count++;\n-\t  node->process = 0;\n-\t  node->expand ();\n+\t  node = order[i];\n+\n+\t  if (node->gc_candidate)\n+\t    gc_candidates++;\n+\t  else if (node->process)\n+\t    {\n+\t      expanded_func_count++;\n+\t      node->process = 0;\n+\t      node->expand ();\n+\t    }\n \t}\n+      if (!gc_candidates || gc_candidates == prev_gc_candidates)\n+\tbreak;\n+      prev_gc_candidates = gc_candidates;\n+      gc_candidates = 0;\n     }\n \n+  /* Free any unused gc_candidate functions.  */\n+  if (gc_candidates)\n+    for (i = new_order_pos - 1; i >= 0; i--)\n+      {\n+\tnode = order[i];\n+\tif (node->gc_candidate)\n+\t  {\n+\t    struct function *fn = DECL_STRUCT_FUNCTION (node->decl);\n+\t    if (symtab->dump_file)\n+\t      fprintf (symtab->dump_file,\n+\t\t       \"Deleting unused function %s\\n\",\n+\t\t       IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (node->decl)));\n+\t    node->process = false;\n+\t    free_dominance_info (fn, CDI_DOMINATORS);\n+\t    free_dominance_info (fn, CDI_POST_DOMINATORS);\n+\t    node->release_body (false);\n+\t  }\n+      }\n+\n   if (dump_file)\n     fprintf (dump_file, \"Expanded functions with time profile (%s):%u/%u\\n\",\n \t     main_input_filename, profiled_func_count, expanded_func_count);"}, {"sha": "af88d83de098d3cd24b683e4d217592e774fd8ea", "filename": "gcc/cif-code.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the definitions of the cgraph_inline_failed_t\n    enums used in GCC.\n \n-   Copyright (C) 2008-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2008-2023 Free Software Foundation, Inc.\n    Contributed by Doug Kwan <dougkwan@google.com>\n \n This file is part of GCC."}, {"sha": "2444aa6a3d5e4b71e6c83da0b23dd32c336a5754", "filename": "gcc/collect-utils.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect-utils.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect-utils.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect-utils.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Utility functions used by tools like collect2 and lto-wrapper.\n-   Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "b872eabb2fd2a62e4700747af88384480f26a3cc", "filename": "gcc/collect-utils.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect-utils.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Utility functions used by tools like collect2 and lto-wrapper.\n-   Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "7a1fa33da01fc26895f20dce5d50bf8a50c71212", "filename": "gcc/collect2-aix.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2-aix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2-aix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2-aix.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* AIX cross support for collect2.\n-   Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "6fdafff3818b757b0449370b53c55c904cac81af", "filename": "gcc/collect2-aix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2-aix.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* AIX cross support for collect2.\n-   Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "63b9a0c233a8f199c44f0fafd43bdf1aad474fac", "filename": "gcc/collect2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Collect static initialization info into data structures that can be\n    traversed by C++ initialization and finalization routines.\n-   Copyright (C) 1992-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2023 Free Software Foundation, Inc.\n    Contributed by Chris Smith (csmith@convex.com).\n    Heavily modified by Michael Meissner (meissner@cygnus.com),\n    Per Bothner (bothner@cygnus.com), and John Gilmore (gnu@cygnus.com)."}, {"sha": "de12ef065569c8a2c52cf62ef858080fd26dfe17", "filename": "gcc/collect2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Header file for collect routines.\n-   Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "fcd79d09c018748d6f077d46fad2ec9e4a5299da", "filename": "gcc/color-macros.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcolor-macros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcolor-macros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcolor-macros.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Terminal color manipulation macros.\n-   Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "e479aea71a15601f4c1b2f4bf8d64184865282e8", "filename": "gcc/combine-stack-adj.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcombine-stack-adj.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcombine-stack-adj.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Combine stack adjustments.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "053879500b73eef103f819e04961007f18718d69", "filename": "gcc/combine.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcombine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcombine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Optimize by combining instructions for GNU compiler.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "51ecd79786b557d0512bc68aa1804f6b7dbb458a", "filename": "gcc/common.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Common GCC machine description file, shared by all targets.\n-;; Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2014-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "d0371aec8db5f7736b42d464e916ad79604f9b33", "filename": "gcc/common.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ; Options for the language- and target-independent parts of the compiler.\n \n-; Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2003-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -3622,6 +3622,10 @@ static-libgfortran\n Driver\n ; Documented for Fortran, but always accepted by driver.\n \n+static-libgm2\n+Driver\n+; Documented for Modula-2, but always accepted by driver.\n+\n static-libphobos\n Driver\n ; Documented for D, but always accepted by driver."}, {"sha": "9fa6d310a4787b4d6e3bdbc00eecd97fd657d87d", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -540,7 +540,6 @@ get_intel_cpu (struct __processor_model *cpu_model,\n       /* Alder Lake.  */\n     case 0xb7:\n       /* Raptor Lake.  */\n-    case 0xb5:\n     case 0xaa:\n     case 0xac:\n       /* Meteor Lake.  */\n@@ -552,6 +551,8 @@ get_intel_cpu (struct __processor_model *cpu_model,\n       break;\n     case 0x8f:\n       /* Sapphire Rapids.  */\n+    case 0xcf:\n+      /* Emerald Rapids.  */\n       cpu = \"sapphirerapids\";\n       CHECK___builtin_cpu_is (\"corei7\");\n       CHECK___builtin_cpu_is (\"sapphirerapids\");"}, {"sha": "34737b3661ac047a24d69d963fe29ce2159f8bab", "filename": "gcc/common/config/i386/i386-common.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2062,6 +2062,8 @@ const pta processor_alias_table[] =\n     M_CPU_SUBTYPE (INTEL_COREI7_COOPERLAKE), P_PROC_AVX512F},\n   {\"sapphirerapids\", PROCESSOR_SAPPHIRERAPIDS, CPU_HASWELL, PTA_SAPPHIRERAPIDS,\n     M_CPU_SUBTYPE (INTEL_COREI7_SAPPHIRERAPIDS), P_PROC_AVX512F},\n+  {\"emeraldrapids\", PROCESSOR_SAPPHIRERAPIDS, CPU_HASWELL, PTA_SAPPHIRERAPIDS,\n+    M_CPU_SUBTYPE (INTEL_COREI7_SAPPHIRERAPIDS), P_PROC_AVX512F},\n   {\"alderlake\", PROCESSOR_ALDERLAKE, CPU_HASWELL, PTA_ALDERLAKE,\n     M_CPU_SUBTYPE (INTEL_COREI7_ALDERLAKE), P_PROC_AVX2},\n   {\"raptorlake\", PROCESSOR_ALDERLAKE, CPU_HASWELL, PTA_ALDERLAKE,\n@@ -2215,7 +2217,7 @@ const pta processor_alias_table[] =\n   {\"znver3\", PROCESSOR_ZNVER3, CPU_ZNVER3,\n     PTA_ZNVER3,\n     M_CPU_SUBTYPE (AMDFAM19H_ZNVER3), P_PROC_AVX2},\n-  {\"znver4\", PROCESSOR_ZNVER4, CPU_ZNVER3,\n+  {\"znver4\", PROCESSOR_ZNVER4, CPU_ZNVER4,\n     PTA_ZNVER4,\n     M_CPU_SUBTYPE (AMDFAM19H_ZNVER4), P_PROC_AVX512F},\n   {\"btver1\", PROCESSOR_BTVER1, CPU_GENERIC,"}, {"sha": "0a89fdaffe2b94069a2709db81cfa1ea8db8c544", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1538,7 +1538,7 @@ riscv_check_conds (\n \n   for (itr = conds.begin (); itr != conds.end (); ++itr)\n     {\n-      /* We'll check march= and mabi= in ohter place.  */\n+      /* We'll check march= and mabi= in other place.  */\n       if (prefixed_with (*itr, \"march=\") || prefixed_with (*itr, \"mabi=\"))\n \tcontinue;\n "}, {"sha": "c76b5c27bb6e267646304e5edbd3215e38efe991", "filename": "gcc/common/config/rs6000/rs6000-common.cc", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -119,19 +119,8 @@ rs6000_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n #else\n     case OPT_m64:\n #endif\n-      opts->x_rs6000_isa_flags |= OPTION_MASK_POWERPC64;\n       opts->x_rs6000_isa_flags |= (~opts_set->x_rs6000_isa_flags\n \t\t\t\t   & OPTION_MASK_PPC_GFXOPT);\n-      opts_set->x_rs6000_isa_flags |= OPTION_MASK_POWERPC64;\n-      break;\n-\n-#ifdef TARGET_USES_AIX64_OPT\n-    case OPT_maix32:\n-#else\n-    case OPT_m32:\n-#endif\n-      opts->x_rs6000_isa_flags &= ~OPTION_MASK_POWERPC64;\n-      opts_set->x_rs6000_isa_flags |= OPTION_MASK_POWERPC64;\n       break;\n \n     case OPT_mminimal_toc:"}, {"sha": "5cbd2c027b1dd55948479263eedb6b97f74d4de3", "filename": "gcc/compare-elim.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcompare-elim.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fcompare-elim.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcompare-elim.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Post-reload compare elimination.\n-   Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "92a60e287b36c97319ec0278e14510e9acedc443", "filename": "gcc/conditions.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconditions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconditions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconditions.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for condition code handling in final.cc and output routines.\n-   Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "4115b1a95b383c2273d06710d87db684ce9fce9f", "filename": "gcc/config.build", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.build", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.build", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.build?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n # GCC build-specific configuration file.\n-# Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1997-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n "}, {"sha": "3504633ab7bb5bcf3200b6ea5ed5d394a4b35bc9", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n # SPDX-License-Identifier: GPL-3.0-or-later\n # GCC target-specific configuration file.\n-# Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1997-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n "}, {"sha": "a522c39658e336c3a93595728ac5993f090c8823", "filename": "gcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n # GCC host-specific configuration file.\n-# Copyright (C) 1997-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1997-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n "}, {"sha": "6a21a248f60011b0a1a9e614cafda54fa4fbaa85", "filename": "gcc/config/aarch64/t-aarch64", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ft-aarch64?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -18,11 +18,11 @@\n #  along with GCC; see the file COPYING3.  If not see\n #  <http://www.gnu.org/licenses/>.\n \n-TM_H += $(srcdir)/config/aarch64/aarch64-cores.def\n+TM_H += $(srcdir)/config/aarch64/aarch64-fusion-pairs.def \\\n+\t$(srcdir)/config/aarch64/aarch64-tuning-flags.def \\\n+\t$(srcdir)/config/aarch64/aarch64-option-extensions.def\n OPTIONS_H_EXTRA += $(srcdir)/config/aarch64/aarch64-cores.def \\\n-\t\t   $(srcdir)/config/aarch64/aarch64-arches.def \\\n-\t\t   $(srcdir)/config/aarch64/aarch64-fusion-pairs.def \\\n-\t\t   $(srcdir)/config/aarch64/aarch64-tuning-flags.def\n+\t\t   $(srcdir)/config/aarch64/aarch64-arches.def\n \n $(srcdir)/config/aarch64/aarch64-tune.md: s-aarch64-tune-md; @true\n s-aarch64-tune-md: $(srcdir)/config/aarch64/gentune.sh \\"}, {"sha": "3b4031bd63cc45bc0ab702749880e64a3e8d5655", "filename": "gcc/config/alpha/alpha-modes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-modes.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Alpha extra machine modes. \n-   Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "f00d1c5655c98cc2a874b5577054bc8a1f752d73", "filename": "gcc/config/alpha/alpha-passes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-passes.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Description of target passes for DEC Alpha\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "79b92813f949bf4f111ebcfff370ed9f6b99c9ec", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for alpha.cc functions used in the md file & elsewhere.\n-   Copyright (C) 1999-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "1d826085198e34adff95b589f65fab6fd594f788", "filename": "gcc/config/alpha/alpha.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on the DEC Alpha.\n-   Copyright (C) 1992-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2023 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GCC."}, {"sha": "fff781b5fe30eb89abdaaef042075a60c86a5c11", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha.\n-   Copyright (C) 1992-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2023 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GCC."}, {"sha": "d91742496d062802a6c0fb2565e6d0e40461eef9", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for DEC Alpha for GNU C compiler\n-;; Copyright (C) 1992-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 1992-2023 Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n ;;\n ;; This file is part of GCC."}, {"sha": "f2d3753878ce76ee91da38b6ee28f3eb775febc3", "filename": "gcc/config/alpha/alpha.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Falpha.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ; Options for the DEC Alpha port of the compiler\n ;\n-; Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2005-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;"}, {"sha": "ac3a5293732b0b132fa84272fcfeae8b58bf5880", "filename": "gcc/config/alpha/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fconstraints.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Constraint definitions for DEC Alpha.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "6757dd9f1484d22ef59fd606c9fca3b5d88410f7", "filename": "gcc/config/alpha/driver-alpha.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fdriver-alpha.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fdriver-alpha.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fdriver-alpha.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2009-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2023 Free Software Foundation, Inc.\n    Contributed by Arthur Loiret <aloiret@debian.org>\n \n This file is part of GCC."}, {"sha": "b0e329e81d6b87b87eb0cb3a83b071d5931ae4c3", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha w/ELF.\n-   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2023 Free Software Foundation, Inc.\n    Contributed by Richard Henderson (rth@tamu.edu).\n \n This file is part of GCC."}, {"sha": "b77fe048a8ecd115e69f5deaf484d43e711f87c9", "filename": "gcc/config/alpha/elf.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Felf.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Felf.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ; Alpha ELF options.\n \n-; Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2011-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;"}, {"sha": "17b240bdd3894e39393eccfd4b35e9445e838203", "filename": "gcc/config/alpha/ev4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fev4.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Alpha EV4.\n-;;   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+;;   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "c12a344e55a91a36a80a703999ea130d73bb50e9", "filename": "gcc/config/alpha/ev5.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fev5.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Alpha EV5.\n-;;   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+;;   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "8fb18a15a677a25df504dc33d7f0c45c06a4fa58", "filename": "gcc/config/alpha/ev6.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev6.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fev6.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fev6.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Alpha EV6.\n-;;   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+;;   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "03f783f2ad1992551f8e2ae11bee9ffec37de866", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler\n    for Alpha Linux-based GNU systems using ELF.\n-   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2023 Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n This file is part of GCC."}, {"sha": "9c3ad5a1097680fdce60358d93d29ff7cf81e0ac", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Alpha Linux-based GNU systems.\n-   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2023 Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n This file is part of GCC."}, {"sha": "498f9edbc6b44a2020f049625e2b895ff57a5bdb", "filename": "gcc/config/alpha/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fnetbsd.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Alpha NetBSD systems.\n-   Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "bd38375af03c5d629eb319a53894f586516bc82a", "filename": "gcc/config/alpha/openbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fopenbsd.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for an alpha OpenBSD target.\n-   Copyright (C) 1999-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "cd8b664598e98498f9f4f5686971acb3e8335af5", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for DEC Alpha.\n-;; Copyright (C) 2004-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2004-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "0f092ce6fb814168619287ca32a7bf418a8b123a", "filename": "gcc/config/alpha/sync.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fsync.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for Alpha synchronization instructions.\n-;; Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2005-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "86fbe08e7ff6214bc0256cfcd9d7f4236a46cc4e", "filename": "gcc/config/alpha/t-alpha", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Ft-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Ft-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-alpha?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "765ba8d6c839f45790c9b3999d43f8d5a9a6d1b9", "filename": "gcc/config/alpha/t-vms", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Ft-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Ft-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-vms?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1996-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1996-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "f8fcb64c42892578e7bb371262c393e774f15c7f", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n-   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "69c602c5482ca860d9194bae3e43bb30bf45e4fa", "filename": "gcc/config/arc/arc-arch.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-arch.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of types that are used to store ARC architecture and\n    device information.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by Claudiu Zissulescu (claziss@synopsys.com)\n \n This file is part of GCC."}, {"sha": "d0e8072fcb3350286270d37a63c494797dfc4f69", "filename": "gcc/config/arc/arc-arches.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-arches.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-arches.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-arches.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ARC ARCH architectures.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "399317ac07bedf2772fc85453068c95383c6eb4d", "filename": "gcc/config/arc/arc-c.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-c.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "1ee74411b9c931be8a779b512c8e1f664ec44d64", "filename": "gcc/config/arc/arc-c.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-c.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-c.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-c.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "8f2d806f85c3696e9806ac7a36cc1218f4423d0c", "filename": "gcc/config/arc/arc-cpus.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-cpus.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ARC CPU architectures.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "763e880317d1025883afe58f2a9cea6441c8efea", "filename": "gcc/config/arc/arc-modes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-modes.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, Synopsys DesignWare ARC cpu.\n-   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n    Contributor: Joern Rennecke <joern.rennecke@embecosm.com>\n \t\ton behalf of Synopsys Inc.\n "}, {"sha": "7a602d447b8b7f215a85f9fabc07792ddb1e9097", "filename": "gcc/config/arc/arc-options.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-options.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-options.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-options.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ARC options.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "f55b9f6b9f20bfa08cda4c496e00f41f192970f8", "filename": "gcc/config/arc/arc-opts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-opts.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* GCC option-handling definitions for the Synopsys DesignWare ARC architecture.\n \n-   Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "0cb5d56a6d4254ee8fe573aa73f260352eb19181", "filename": "gcc/config/arc/arc-passes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-passes.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Description of target passes for ARC.\n-   Copyright (C) 2019-2022 Free Software Foundation, Inc. */\n+   Copyright (C) 2019-2023 Free Software Foundation, Inc. */\n \n /* This file is part of GCC.\n "}, {"sha": "d47b4756ad439e9892f3bc3fe8f905a0e292aeec", "filename": "gcc/config/arc/arc-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-protos.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, Synopsys DesignWare ARC cpu.\n-   Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "5b7200074abe87c123427bdfa50ead46a89540e7", "filename": "gcc/config/arc/arc-simd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-simd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-simd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-simd.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Synopsys DesignWare ARC SIMD include file.\n-   Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2023 Free Software Foundation, Inc.\n    Written by Saurabh Verma (saurabh.verma@celunite.com) on behalf os Synopsys\n    Inc.\n "}, {"sha": "d0f4b2373ee2cc58fe652b8d2545ca7315fecec4", "filename": "gcc/config/arc/arc-tables.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-tables.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2,7 +2,7 @@\n ; Generated by    : ./gcc/config/arc/genoptions.awk\n ; Generated from  : ./gcc/config/arc/arc-cpu.def\n ;\n-; Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2016-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;"}, {"sha": "22eb2e9cb459fa4decb0fb47e0b184cb65cf7897", "filename": "gcc/config/arc/arc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on the Synopsys DesignWare ARC cpu.\n-   Copyright (C) 1994-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2023 Free Software Foundation, Inc.\n \n    Sources derived from work done by Sankhya Technologies (www.sankhya.com) on\n    behalf of Synopsys Inc."}, {"sha": "c3756394025524b5c0dcbd35830be8d18d325d3a", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, Synopsys DesignWare ARC cpu.\n-   Copyright (C) 1994-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "c51ce1733501c2a5fbce829b39811dc17734c4b6", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description of the Synopsys DesignWare ARC cpu for GNU C compiler\n-;; Copyright (C) 1994-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 1994-2023 Free Software Foundation, Inc.\n \n ;; Sources derived from work done by Sankhya Technologies (www.sankhya.com) on\n ;; behalf of Synopsys Inc."}, {"sha": "273667c9b5881aa778f715137cf8ea66417fafc6", "filename": "gcc/config/arc/arc.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ; Options for the Synopsys DesignWare ARC port of the compiler\n ;\n-; Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2005-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;"}, {"sha": "7d4c10ca08c7da50196c204202c39f90d2d56136", "filename": "gcc/config/arc/arc600.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc600.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc600.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc600.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ;; DFA scheduling description of the Synopsys DesignWare ARC600 cpu\n ;; for GNU C compiler\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributor: Joern Rennecke <joern.rennecke@embecosm.com>\n ;;              on behalf of Synopsys Inc.\n "}, {"sha": "cf8e3da4818ff7e17c9a9be723854dff87775022", "filename": "gcc/config/arc/arc700.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc700.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Farc700.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc700.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -5,7 +5,7 @@\n ;;    Ramana Radhakrishnan(ramana.radhakrishnan@codito.com)\n ;;    Factoring out and improvement of ARC700 Scheduling by\n ;;    Joern Rennecke (joern.rennecke@embecosm.com)\n-;; Copyright (C) 2006-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2006-2023 Free Software Foundation, Inc.\n \n ;; This file is part of GCC.\n "}, {"sha": "d8f48d7893e90948936a9e9bc09fa8208175f1cf", "filename": "gcc/config/arc/arcEM.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcEM.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcEM.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2FarcEM.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ;; DFA scheduling description of the Synopsys DesignWare ARC EM cpu\n ;; for GNU C compiler\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributor: Claudiu Zissulescu <claudiu.zissulescu@synopsys.com>\n \n ;; This file is part of GCC."}, {"sha": "404f82797ce448141dc5ce23cf45ebe606053ced", "filename": "gcc/config/arc/arcHS.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcHS.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcHS.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2FarcHS.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ;; DFA scheduling description of the Synopsys DesignWare ARC HS cpu\n ;; for GNU C compiler\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributor: Claudiu Zissulescu <claudiu.zissulescu@synopsys.com>\n \n ;; This file is part of GCC."}, {"sha": "169a94027fd91b207b40eee5f335117979c10472", "filename": "gcc/config/arc/arcHS4x.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcHS4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2FarcHS4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2FarcHS4x.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ;; DFA scheduling description of the Synopsys DesignWare ARC HS4x cpu\n ;; for GNU C compiler\n-;; Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2017-2023 Free Software Foundation, Inc.\n \n ;; This file is part of GCC.\n "}, {"sha": "3af8f960c5691ade431999baf20681067bd043cb", "filename": "gcc/config/arc/atomic.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fatomic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fatomic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fatomic.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for ARC atomic instructions.\n-;; Copyright (C) 2015-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2015-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "d2a7394ea1ca1b6773a7ce4ca68dfd324d4eb8db", "filename": "gcc/config/arc/big.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fbig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fbig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fbig.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definition of big endian ARC machine for GNU compiler.\n \n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "fc5c92b2986facd38e47f20aa610d918cc69aeee", "filename": "gcc/config/arc/builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fbuiltins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2015-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2015-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "a0e949bd1e62205b5b6cff27777736c68f68e153", "filename": "gcc/config/arc/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fconstraints.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Constraint definitions for Synopsys DesignWare ARC.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "d0d29de2e4c669915ab051d2d45fb292c28bf4f3", "filename": "gcc/config/arc/driver-arc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fdriver-arc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fdriver-arc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fdriver-arc.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by Claudiu Zissulescu <claziss@synopsys.com>\n \n    This file is part of GCC."}, {"sha": "36af916f41cdd069b747bcbb9e98c0659ff0569b", "filename": "gcc/config/arc/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Felf.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Target macros for arc*-elf targets.\n \n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "491d65e2d5307cf4063c3bbefa59bb8e419d2eb6", "filename": "gcc/config/arc/fpx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ffpx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ffpx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ffpx.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ;; Machine description of the Synopsys DesignWare ARC cpu Floating Point\n ;; extensions for GNU C compiler\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n \n ;; This file is part of GCC.\n "}, {"sha": "9d9838f1428fc55a297b1fce12859a25dca60c03", "filename": "gcc/config/arc/genmultilib.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fgenmultilib.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fgenmultilib.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fgenmultilib.awk?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "288948246ec641f4bb97272425776a4f7d42d882", "filename": "gcc/config/arc/genoptions.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fgenoptions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fgenoptions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fgenoptions.awk?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "b2f3cac06d490944feaf8cce838259e16c1a647e", "filename": "gcc/config/arc/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Flinux.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Target macros for arc*-*-linux targets.\n \n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "7650e47694d0f427d1d510d3b47e8ae2b588bef9", "filename": "gcc/config/arc/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fpredicates.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for Synopsys DesignWare ARC.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "53163693e351666b53e5a7ce05555c49dc25bc8c", "filename": "gcc/config/arc/simdext.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fsimdext.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Fsimdext.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fsimdext.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description of the Synopsys DesignWare ARC cpu for GNU C compiler\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n \n ;; This file is part of GCC.\n "}, {"sha": "a8663bc0cf607581dfd1daa889525dedaccad5e6", "filename": "gcc/config/arc/t-arc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-arc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n # GCC Makefile fragment for Synopsys DesignWare ARC.\n #\n-# Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "61234d5d6fab1e805a19d23a8772e355e6e5d0ec", "filename": "gcc/config/arc/t-multilib", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-multilib?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -3,7 +3,7 @@\n # Generated from  : ./gcc/config/arc/arc-cpu.def\n # Used by         : tmake_file from Makefile and genmultilib\n \n-# Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "a839e4ea67c74c3ee5488302221a3ad9c0ae588a", "filename": "gcc/config/arc/t-multilib-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-multilib-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farc%2Ft-multilib-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-multilib-linux?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2018-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2018-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "eeb0383e7ff9268d42bfac4393785af73dac068c", "filename": "gcc/config/arm/README-interworking", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2FREADME-interworking", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2FREADME-interworking", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2FREADME-interworking?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -742,7 +742,7 @@ used.\n      interworking as the --support-old-code switch has taken care if this.\n \n \f\n-Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "5ea0ad26f7330983349b3d1997769a56fa9cd806", "filename": "gcc/config/arm/aarch-common-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-common-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-common-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common-protos.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Functions and structures shared between arm and aarch64.\n \n-   Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "40bb28b3c3d4a91795dbacb65379185113adfb65", "filename": "gcc/config/arm/aarch-common.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,7 +1,7 @@\n /* Dependency checks for instruction scheduling, shared between ARM and\n    AARCH64.\n \n-   Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "e384821472864ba26d085a24bd9c917d6b834baa", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* RTX cost tables shared between arm and aarch64.\n \n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "b8f8eb084c085e8042bc073388ac936aa0d33edb", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM with a.out\n-   Copyright (C) 1995-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1995-2023 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rearnsha@armltd.co.uk).\n    \n    This file is part of GCC."}, {"sha": "11d7478d9df69139802a9d42c09dd0de7480b60e", "filename": "gcc/config/arm/arm-builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Description of builtins used by the ARM backend.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "8c94b6bc40b952cab52bf106997316b264aac99f", "filename": "gcc/config/arm/arm-builtins.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Declarations for determining resolver for a given builtin.\n-   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "df86342092b59544e63f38b5b816fa740054df4c", "filename": "gcc/config/arm/arm-c.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+/* Copyright (C) 2007-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "e89106c51b41d709b2159073da3273423af537f8", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n # CPU, FPU and architecture specifications for ARM.\n #\n-# Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2011-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "74a4e346178ba9ae535e813c39ce92dc1a82fcd6", "filename": "gcc/config/arm/arm-d.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-d.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-d.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-d.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the D front end on the ARM architecture.\n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n \n GCC is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by"}, {"sha": "7dd563294f9a038c2a014ec018ed2f7b8b0c4fa6", "filename": "gcc/config/arm/arm-d.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-d.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-d.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-d.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for the D front end on the ARM architecture.\n-   Copyright (C) 2022 Free Software Foundation, Inc.\n+   Copyright (C) 2022-2023 Free Software Foundation, Inc.\n \n GCC is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by"}, {"sha": "c8bae1030e5bffd103668f4b8052c408578908c3", "filename": "gcc/config/arm/arm-fixed.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-fixed.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-fixed.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fixed.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,4 +1,4 @@\n-;; Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2011-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "b68eb79ff089ed39e3a1a91f9512a8e370a2829f", "filename": "gcc/config/arm/arm-flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-flags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-flags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-flags.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Flags used to identify the presence of processor capabilities.\n \n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "9fd3b56c4060abbb0b15d0956d130f3bd25876ba", "filename": "gcc/config/arm/arm-generic.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-generic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-generic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-generic.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Generic ARM Pipeline Description\n-;; Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2003-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "e1bc820d1d1b5e0222b741d2930d06636a7bdf7d", "filename": "gcc/config/arm/arm-ldmstm.ml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-ldmstm.ml?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n (* Auto-generate ARM ldm/stm patterns\n-   Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2023 Free Software Foundation, Inc.\n    Contributed by CodeSourcery.\n \n    This file is part of GCC.\n@@ -335,7 +335,7 @@ let _ =\n \"/* ARM ldm/stm instruction patterns.  This file was automatically generated\";\n \"   using arm-ldmstm.ml.  Please do not edit manually.\";\n \"\";\n-\"   Copyright (C) 2010-2022 Free Software Foundation, Inc.\";\n+\"   Copyright (C) 2010-2023 Free Software Foundation, Inc.\";\n \"   Contributed by CodeSourcery.\";\n \"\";\n \"   This file is part of GCC.\";"}, {"sha": "364736d17fa5ae871c49b73bccd4695cba76c71e", "filename": "gcc/config/arm/arm-modes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-modes.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM.\n-   Copyright (C) 2002-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2002-2023 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rearnsha@arm.com)"}, {"sha": "7586a82e3c1c311f6dc547cbc907b609d7755512", "filename": "gcc/config/arm/arm-mve-builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-mve-builtins.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ACLE support for Arm MVE\n-   Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2021-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "69f3f81b47314b96768d467d7168c55b9e509b24", "filename": "gcc/config/arm/arm-mve-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-mve-builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Builtin lists for Arm MVE\n-   Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2021-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "290a118ec927c83cfcf812ad2e4672edec631fce", "filename": "gcc/config/arm/arm-mve-builtins.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-mve-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-mve-builtins.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ACLE support for Arm MVE\n-   Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2021-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "9964fd2dbb58360b86fed8d02089fcb34a0b51e6", "filename": "gcc/config/arm/arm-opts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-opts.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for option handling for ARM.\n-   Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "95918dd0c47d38890adc871cee0c6845fe97b56c", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for exported functions defined in arm.cc and pe.c\n-   Copyright (C) 1999-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2023 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rearnsha@arm.com)\n    Minor hacks by Nick Clifton (nickc@cygnus.com)\n \n@@ -122,6 +122,7 @@ extern int arm_coproc_mem_operand_wb (rtx, int);\n extern int neon_vector_mem_operand (rtx, int, bool);\n extern int mve_vector_mem_operand (machine_mode, rtx, bool);\n extern int neon_struct_mem_operand (rtx);\n+extern int mve_struct_mem_operand (rtx);\n \n extern rtx *neon_vcmla_lane_prepare_operands (rtx *);\n "}, {"sha": "91584c99abb8d0452201f0a32c453a0d4304c9f4", "filename": "gcc/config/arm/arm-simd-builtin-types.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Builtin AdvSIMD types.\n-   Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "b3ab72ff4e2255c48d96115eaeb4254ea4a1fc27", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2,7 +2,7 @@\n ; Generated automatically by parsecpu.awk from arm-cpus.in.\n ; Do not edit.\n \n-; Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2011-2023 Free Software Foundation, Inc.\n \n ; This file is part of GCC.\n "}, {"sha": "29ca2b47ef103782764119bc8482bebd084e2b34", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -2,7 +2,7 @@\n ; Generated automatically by parsecpu.awk from arm-cpus.in.\n ; Do not edit.\n \n-; Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2011-2023 Free Software Foundation, Inc.\n \n ; This file is part of GCC.\n "}, {"sha": "3f171188de513e258369397e4726afe27bd9fdbf", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for GCC for ARM.\n-   Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2023 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rearnsha@arm.com).\n@@ -13737,6 +13737,24 @@ neon_vector_mem_operand (rtx op, int type, bool strict)\n   return FALSE;\n }\n \n+/* Return TRUE if OP is a mem suitable for loading/storing an MVE struct\n+   type.  */\n+int\n+mve_struct_mem_operand (rtx op)\n+{\n+  rtx ind = XEXP (op, 0);\n+\n+  /* Match: (mem (reg)).  */\n+  if (REG_P (ind))\n+    return arm_address_register_rtx_p (ind, 0);\n+\n+  /* Allow only post-increment by the mode size.  */\n+  if (GET_CODE (ind) == POST_INC)\n+    return arm_address_register_rtx_p (XEXP (ind, 0), 0);\n+\n+  return FALSE;\n+}\n+\n /* Return TRUE if OP is a mem suitable for loading/storing a Neon struct\n    type.  */\n int"}, {"sha": "6f7ecf9128047647fc41677e634cd9612a13242b", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM.\n-   Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2023 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rearnsha@arm.com)"}, {"sha": "31dfea10af12a8e122990b7037e7520b7ca30e26", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for ARM for GNU compiler\n-;;  Copyright (C) 1991-2022 Free Software Foundation, Inc.\n+;;  Copyright (C) 1991-2023 Free Software Foundation, Inc.\n ;;  Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n ;;  and Martin Simmons (@harleqn.co.uk).\n ;;  More major hacks by Richard Earnshaw (rearnsha@arm.com)."}, {"sha": "007d993b2ec1a7619077faafc14752f79b02960d", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n ; Options for the ARM port of the compiler.\n \n-; Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+; Copyright (C) 2005-2023 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;"}, {"sha": "115be6a555753e95ecfa6ef754c9ea03f4124806", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM 1020E & ARM 1022E Pipeline Description\n-;; Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2005-2023 Free Software Foundation, Inc.\n ;; Contributed by Richard Earnshaw (richard.earnshaw@arm.com)\n ;;\n ;; This file is part of GCC."}, {"sha": "74dd434ae7e6ff484e44d3c829970987613334ee", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM 1026EJ-S Pipeline Description\n-;; Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2003-2023 Free Software Foundation, Inc.\n ;; Written by CodeSourcery, LLC.\n ;;\n ;; This file is part of GCC."}, {"sha": "01844f3114b0e9fd46ce8ddd7e00f27e2e11aefe", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM 1136J[F]-S Pipeline Description\n-;; Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2003-2023 Free Software Foundation, Inc.\n ;; Written by CodeSourcery, LLC.\n ;;\n ;; This file is part of GCC."}, {"sha": "6b05f251e970e82799ca6a619f04aad620c87adb", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM 926EJ-S Pipeline Description\n-;; Copyright (C) 2003-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2003-2023 Free Software Foundation, Inc.\n ;; Written by CodeSourcery, LLC.\n ;;\n ;; This file is part of GCC."}, {"sha": "4a5a6a8161646f031e7adf132b242747e43b9a98", "filename": "gcc/config/arm/arm_acle.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_acle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_acle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* ARM Non-NEON ACLE intrinsics include file.\n \n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "48332eb64fddd94094bbb07926d452750baa3bcf", "filename": "gcc/config/arm/arm_acle_builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle_builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* ACLE builtin definitions for ARM.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "15e45bc03c2447a9294f276b3ea8171fc589a699", "filename": "gcc/config/arm/arm_bf16.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_bf16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_bf16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_bf16.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Arm BF16 intrinsics include file.\n \n-   Copyright (C) 2019-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2019-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}, {"sha": "34a149a6c2439457f9e54c79b25eedbfc644fbf2", "filename": "gcc/config/arm/arm_cde.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_cde.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Arm Custom Datapath Extension (CDE) intrinsics include file.\n \n-   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n    Contributed by Arm Ltd.\n \n    This file is part of GCC."}, {"sha": "6f2dbc8bc3378e6ceab511e9e8a5ad6a84175e08", "filename": "gcc/config/arm/arm_cde_builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cde_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cde_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_cde_builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Arm Custom Datapath Extension (CDE) builtin definitions.\n-   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n    Contributed by Arm Ltd.\n \n    This file is part of GCC."}, {"sha": "3534dcba4d6ecd858762541c45c9628db08d339b", "filename": "gcc/config/arm/arm_cmse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cmse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_cmse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_cmse.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* ARMv8-M Secure Extensions intrinsics include file.\n \n-   Copyright (C) 2015-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2015-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "1c7c16f6c7a348ba125d1e119c13ceaa4b457255", "filename": "gcc/config/arm/arm_fp16.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_fp16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_fp16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_fp16.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* ARM FP16 intrinsics include file.\n \n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "00fb42afecc74c29dccaa1a601700033598100ce", "filename": "gcc/config/arm/arm_mve.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Arm MVE intrinsics include file.\n \n-   Copyright (C) 2019-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2019-2023 Free Software Foundation, Inc.\n    Contributed by Arm.\n \n    This file is part of GCC."}, {"sha": "e3a61f81be7814806be4f69e9b27b89663554297", "filename": "gcc/config/arm/arm_mve_builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /*  MVE builtin definitions for Arm.\n-    Copyright  (C) 2019-2022 Free Software Foundation, Inc.\n+    Copyright  (C) 2019-2023 Free Software Foundation, Inc.\n     Contributed by Arm.\n \n     This file is part of GCC."}, {"sha": "12bb519142f351ceb21d1077e06c301c2972bc26", "filename": "gcc/config/arm/arm_mve_types.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_mve_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve_types.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Arm MVE intrinsics include file.\n \n-   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n    Contributed by Arm.\n \n    This file is part of GCC."}, {"sha": "cdfdb44259a163c9d1edd6d8cf6dae6228c0b03e", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* ARM NEON intrinsics include file.\n \n-   Copyright (C) 2006-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2023 Free Software Foundation, Inc.\n    Contributed by CodeSourcery.\n \n    This file is part of GCC."}, {"sha": "94b1523812364889119a151de19219360bb46158", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* NEON builtin definitions for ARM.\n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n \n    This file is part of GCC."}, {"sha": "d552ce2da2bd5773196e334824c2002810b2a111", "filename": "gcc/config/arm/arm_vfp_builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_vfp_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Farm_vfp_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_vfp_builtins.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* VFP instruction builtin definitions.\n-   Copyright (C) 2016-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n    This file is part of GCC.\n "}, {"sha": "aa78c647c72d0e6c089a97960b8ff9cbed46faa2", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for ARM BPABI targets.\n-   Copyright (C) 2004-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2023 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC   \n \n    This file is part of GCC."}, {"sha": "8cea1c34bbbe09a1b410c9181d1646b0a4cc013f", "filename": "gcc/config/arm/common.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcommon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcommon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcommon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Common predicate definitions for ARM, Thumb and AArch64\n-;; Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2020-2023 Free Software Foundation, Inc.\n ;; Contributed by Fujitsu Ltd.\n \n ;; This file is part of GCC."}, {"sha": "0155ab9f7e7750f4359b937263e297da9c196fc5", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; Constraint definitions for ARM and Thumb\n-;; Copyright (C) 2006-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2006-2023 Free Software Foundation, Inc.\n ;; Contributed by ARM Ltd.\n \n ;; This file is part of GCC.\n@@ -474,6 +474,11 @@\n  (and (match_code \"mem\")\n       (match_test \"TARGET_32BIT && arm_coproc_mem_operand (op, FALSE)\")))\n \n+(define_memory_constraint \"Ug\"\n+ \"@internal\n+  In Thumb-2 state a valid MVE struct load/store address.\"\n+ (match_operand 0 \"mve_struct_operand\"))\n+\n (define_memory_constraint \"Uj\"\n  \"@internal\n   In ARM/Thumb-2 state a VFP load/store address that supports writeback"}, {"sha": "8135a01031481dcd3389f0950e6875e656015ea1", "filename": "gcc/config/arm/cortex-a15-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A15 NEON pipeline description\n-;; Copyright (C) 2012-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2012-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "5c68f6dc5c79c1f7c7f24755bfc2307d48c1a015", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A15 pipeline description\n-;; Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2011-2023 Free Software Foundation, Inc.\n ;;\n ;; Written by Matthew Gretton-Dann <matthew.gretton-dann@arm.com>\n "}, {"sha": "d8d90147fa0acd1af2905467a2b90fcc71e70ba0", "filename": "gcc/config/arm/cortex-a17-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A17 NEON pipeline description\n-;; Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2014-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "33984c640a42c1c8d7728d28340ac09e236f233f", "filename": "gcc/config/arm/cortex-a17.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A17 pipeline description\n-;; Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2014-2023 Free Software Foundation, Inc.\n ;;\n ;; Contributed by ARM Ltd.\n ;;"}, {"sha": "bc0c033072aec5cf1f886bbc7d33acfa38790a6b", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A5 pipeline description\n-;; Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2010-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n ;;\n ;; This file is part of GCC."}, {"sha": "d0ed449435746805a5081a49abad0f596d623752", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A53 pipeline description\n-;; Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2013-2023 Free Software Foundation, Inc.\n ;;\n ;; Contributed by ARM Ltd.\n ;;"}, {"sha": "80cded9e4e525a10c43e2c6fe855f7da021f240f", "filename": "gcc/config/arm/cortex-a57.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a57.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A57 pipeline description\n-;; Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2014-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "aa1f35c2985f3f16418f52792a5d5ac1e807ef11", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A7 pipeline description\n-;; Copyright (C) 2012-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2012-2023 Free Software Foundation, Inc.\n ;;\n ;; Contributed by ARM Ltd.\n ;; Based on cortex-a5.md which was originally contributed by CodeSourcery."}, {"sha": "522ef45c2ead4ccd224e13c3707e07d369f9759c", "filename": "gcc/config/arm/cortex-a8-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A8 NEON scheduling description.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n \n ;; This file is part of GCC."}, {"sha": "e85c84493b90f36dba9360638f7dae4ed5f1daea", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A8 scheduling description.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n \n ;; This file is part of GCC."}, {"sha": "3f74fcba338e8ef31744c12fc2ff3858d26f1b4d", "filename": "gcc/config/arm/cortex-a9-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a9-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a9-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9-neon.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A9 pipeline description\n-;; Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2010-2023 Free Software Foundation, Inc.\n ;;\n ;; Neon pipeline description contributed by ARM Ltd.\n ;;"}, {"sha": "fd6651b5627e908a8e8b00f2660e5f985da198a5", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-A9 pipeline description\n-;; Copyright (C) 2008-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2008-2023 Free Software Foundation, Inc.\n ;; Originally written by CodeSourcery for VFP.\n ;;\n ;; Rewritten by Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>"}, {"sha": "c28021902dc58e1ed4ab859124d4c509397061ae", "filename": "gcc/config/arm/cortex-m4-fpu.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-M4 FPU pipeline description\n-;; Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2010-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n ;;\n ;; This file is part of GCC."}, {"sha": "e58ff10b056666e12ed5e4f44dc2222081f5db04", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-M4 pipeline description\n-;; Copyright (C) 2010-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2010-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n ;;\n ;; This file is part of GCC."}, {"sha": "3571ad34284b362fd4b72506f3d9730370033ce9", "filename": "gcc/config/arm/cortex-m7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m7.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-M7 pipeline description\n-;; Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2014-2023 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;"}, {"sha": "e6e08a609e0d3d9aedc90ecde85508cd9987bcd5", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-R4 scheduling description.\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Contributed by CodeSourcery.\n \n ;; This file is part of GCC."}, {"sha": "7fac7b87969eb768df2f134f0578f4b1e9251097", "filename": "gcc/config/arm/cortex-r4f.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4f.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARM Cortex-R4F VFP pipeline description\n-;; Copyright (C) 2007-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2007-2023 Free Software Foundation, Inc.\n ;; Written by CodeSourcery.\n ;;\n ;; This file is part of GCC."}, {"sha": "ee85bac572df53537569c7d6cce1936951d09efe", "filename": "gcc/config/arm/crypto.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcrypto.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcrypto.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrypto.def?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Cryptographic instruction builtin definitions.\n-   Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2023 Free Software Foundation, Inc.\n    Contributed by ARM Ltd.\n    This file is part of GCC.\n "}, {"sha": "6517177b7100553d6cc483ab7f0aafb6ce60ebf2", "filename": "gcc/config/arm/crypto.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrypto.md?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n ;; ARMv8-A crypto patterns.\n-;; Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+;; Copyright (C) 2013-2023 Free Software Foundation, Inc.\n ;; Contributed by ARM Ltd.\n \n ;; This file is part of GCC."}, {"sha": "7559b0545a7d28fbee93c1edaf4fb7d481309ed8", "filename": "gcc/config/arm/driver-arm.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fdriver-arm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Fdriver-arm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fdriver-arm.cc?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2011-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2011-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "5766cb4a9888512889334c48ccfbe46e9980f800", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6144cf290f9c7a2bb757d3a058a4ff5aa544dd35/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=6144cf290f9c7a2bb757d3a058a4ff5aa544dd35", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    For ARM with ELF obj format.\n-   Copyright (C) 1995-2022 Free Software Foundation, Inc.\n+   Copyright (C) 1995-2023 Free Software Foundation, Inc.\n    Contributed by Philip Blundell <philb@gnu.org> and\n    Catherine Moore <clm@cygnus.com>\n    "}]}