{"sha": "f6ccb788f29ce79af3a5dad0bd96f0db98a5c028", "node_id": "C_kwDOANBUbNoAKGY2Y2NiNzg4ZjI5Y2U3OWFmM2E1ZGFkMGJkOTZmMGRiOThhNWMwMjg", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-07-09T15:53:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-21T15:25:03Z"}, "message": "[Ada] Regenerate gnat_ugn.texi\n\ngcc/ada/\n\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "af74208fb4dd34662a6b3f95b4465f952a9d8dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af74208fb4dd34662a6b3f95b4465f952a9d8dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57fb9d3820cd955ba0af1baadb27cd9a756a87c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57fb9d3820cd955ba0af1baadb27cd9a756a87c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57fb9d3820cd955ba0af1baadb27cd9a756a87c8"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "9919cad9b882b9906b95d161e1929a38f91ae02e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ccb788f29ce79af3a5dad0bd96f0db98a5c028/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=f6ccb788f29ce79af3a5dad0bd96f0db98a5c028", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Jun 23, 2021\n+GNAT User's Guide for Native Platforms , Aug 03, 2021\n \n AdaCore\n \n@@ -12633,8 +12633,8 @@ See @ref{e6,,Static Stack Usage Analysis} for details.\n This switch enables most warnings from the GCC back end.\n The code generator detects a number of warning situations that are missed\n by the GNAT front end, and this switch can be used to activate them.\n-The use of this switch also sets the default front end warning mode to\n-@code{-gnatwa}, that is, most front end warnings activated as well.\n+The use of this switch also sets the default front-end warning mode to\n+@code{-gnatwa}, that is, most front-end warnings are activated as well.\n @end table\n \n @geindex -w (gcc)\n@@ -12645,8 +12645,8 @@ The use of this switch also sets the default front end warning mode to\n @item @code{-w}\n \n Conversely, this switch suppresses warnings from the GCC back end.\n-The use of this switch also sets the default front end warning mode to\n-@code{-gnatws}, that is, front end warnings suppressed as well.\n+The use of this switch also sets the default front-end warning mode to\n+@code{-gnatws}, that is, front-end warnings are suppressed as well.\n @end table\n \n @geindex -Werror (gcc)\n@@ -12659,6 +12659,9 @@ The use of this switch also sets the default front end warning mode to\n This switch causes warnings from the GCC back end to be treated as\n errors.  The warning string still appears, but the warning messages are\n counted as errors, and prevent the generation of an object file.\n+The use of this switch also sets the default front-end warning mode to\n+@code{-gnatwe}, that is, front-end warning messages and style check\n+messages are treated as errors as well.\n @end table\n \n A string of warning parameters can be used in the same parameter. For example:\n@@ -23100,9 +23103,9 @@ calling convention. All convention specifiers are ignored on this\n platform.\n \n When a subprogram @code{F} (caller) calls a subprogram @code{G}\n-(callee), there are several ways to push @code{G}\u2019s parameters on the\n+(callee), there are several ways to push @code{G}\u2018s parameters on the\n stack and there are several possible scenarios to clean up the stack\n-upon @code{G}\u2019s return. A calling convention is an agreed upon software\n+upon @code{G}\u2018s return. A calling convention is an agreed upon software\n protocol whereby the responsibilities between the caller (@code{F}) and\n the callee (@code{G}) are clearly defined. Several calling conventions\n are available for Windows:"}]}