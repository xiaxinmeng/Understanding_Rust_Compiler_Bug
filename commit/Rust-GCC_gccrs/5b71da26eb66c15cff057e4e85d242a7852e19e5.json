{"sha": "5b71da26eb66c15cff057e4e85d242a7852e19e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI3MWRhMjZlYjY2YzE1Y2ZmMDU3ZTRlODVkMjQyYTc4NTJlMTllNQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-01-24T16:07:21Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-01-24T16:07:21Z"}, "message": "sh.c (ra.h): Don't #include.\n\n\t* sh.c (ra.h): Don't #include.\n\t(hard_regs_intersect_p): New function, resurrected from ra.c.\nN.B this is Copyright 2002/2003\n\n\t* sh.c: Fix 1996 Copyright.\n\nFrom-SVN: r94163", "tree": {"sha": "0c92ec07b24cbe6b5b230bd6f2e2caea580e334c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c92ec07b24cbe6b5b230bd6f2e2caea580e334c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b71da26eb66c15cff057e4e85d242a7852e19e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b71da26eb66c15cff057e4e85d242a7852e19e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b71da26eb66c15cff057e4e85d242a7852e19e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b71da26eb66c15cff057e4e85d242a7852e19e5/comments", "author": null, "committer": null, "parents": [{"sha": "d5f625555adfef72898749680608b2570a6cb293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f625555adfef72898749680608b2570a6cb293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f625555adfef72898749680608b2570a6cb293"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "de5d31d0af786d1c73a6b69651bc689a63dd8390", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b71da26eb66c15cff057e4e85d242a7852e19e5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b71da26eb66c15cff057e4e85d242a7852e19e5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=5b71da26eb66c15cff057e4e85d242a7852e19e5", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for GCC for Renesas / SuperH SH.\n-   Copyright (C) 1993, 1994, 1995, 1997, 1997, 1998, 1999, 2000, 2001, 2002,\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n    2003, 2004 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n@@ -47,7 +47,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"real.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n-#include \"ra.h\"\n #include \"cfglayout.h\"\n #include \"intl.h\"\n #include \"sched-int.h\"\n@@ -289,6 +288,7 @@ static bool sh_callee_copies (CUMULATIVE_ARGS *, enum machine_mode,\n static int sh_arg_partial_bytes (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t         tree, bool);\n static int sh_dwarf_calling_convention (tree);\n+static int hard_regs_intersect_p (HARD_REG_SET *, HARD_REG_SET *);\n \n \f\n /* Initialize the GCC target structure.  */\n@@ -10169,4 +10169,19 @@ sh_init_cumulative_args (CUMULATIVE_ARGS *  pcum,\n     }\n }\n \n+/* Determine if two hard register sets intersect.\n+   Return 1 if they do.  */\n+\n+static int\n+hard_regs_intersect_p (HARD_REG_SET *a, HARD_REG_SET *b)\n+{\n+  HARD_REG_SET c;\n+  COPY_HARD_REG_SET (c, *a);\n+  AND_HARD_REG_SET (c, *b);\n+  GO_IF_HARD_REG_SUBSET (c, reg_class_contents[(int) NO_REGS], lose);\n+  return 1;\n+lose:\n+  return 0;\n+}\n+\n #include \"gt-sh.h\""}]}