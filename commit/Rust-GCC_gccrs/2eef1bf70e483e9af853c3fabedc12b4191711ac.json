{"sha": "2eef1bf70e483e9af853c3fabedc12b4191711ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVlZjFiZjcwZTQ4M2U5YWY4NTNjM2ZhYmVkYzEyYjQxOTE3MTFhYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-28T09:00:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-28T09:00:42Z"}, "message": "sse.md (smaxv16qi3): Fix buffer overflow.\n\n        * config/i386/sse.md (smaxv16qi3): Fix buffer overflow.\n        (sminv16qi3, umaxv8hi3, uminv8hi3): Likewise.\n\nFrom-SVN: r101376", "tree": {"sha": "67f38b8add05171fde9de851aa6540e11714b5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f38b8add05171fde9de851aa6540e11714b5d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2eef1bf70e483e9af853c3fabedc12b4191711ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eef1bf70e483e9af853c3fabedc12b4191711ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eef1bf70e483e9af853c3fabedc12b4191711ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eef1bf70e483e9af853c3fabedc12b4191711ac/comments", "author": null, "committer": null, "parents": [{"sha": "cabddb237f08b09f7e25dc53bcb36de370f8e8df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabddb237f08b09f7e25dc53bcb36de370f8e8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cabddb237f08b09f7e25dc53bcb36de370f8e8df"}], "stats": {"total": 57, "additions": 39, "deletions": 18}, "files": [{"sha": "9626f8395304888483befa0dabfdbe7178c4f186", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eef1bf70e483e9af853c3fabedc12b4191711ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eef1bf70e483e9af853c3fabedc12b4191711ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2eef1bf70e483e9af853c3fabedc12b4191711ac", "patch": "@@ -1,3 +1,8 @@\n+2005-06-28  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/sse.md (smaxv16qi3): Fix buffer overflow.\n+\t(sminv16qi3, umaxv8hi3, uminv8hi3): Likewise.\n+\n 2005-06-27  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/ia64.c (ia64_expand_vcondu_v2si): Generate proper"}, {"sha": "37454f5af30e001948f1300e84cfc894e7786f20", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2eef1bf70e483e9af853c3fabedc12b4191711ac/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2eef1bf70e483e9af853c3fabedc12b4191711ac/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2eef1bf70e483e9af853c3fabedc12b4191711ac", "patch": "@@ -2747,11 +2747,16 @@\n \t\t    (match_operand:V16QI 2 \"register_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n+  rtx xops[6];\n   bool ok;\n-  operands[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n-  operands[4] = operands[1];\n-  operands[5] = operands[2];\n-  ok = ix86_expand_int_vcond (operands, false);\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[1];\n+  xops[5] = operands[2];\n+  ok = ix86_expand_int_vcond (xops, false);\n   gcc_assert (ok);\n   DONE;\n })\n@@ -2794,17 +2799,20 @@\n \t\t   (match_operand:V8HI 2 \"register_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  rtx t1, t2;\n+  rtx xops[6], t1, t2;\n   bool ok;\n \n   t1 = gen_reg_rtx (V8HImode);\n   emit_insn (gen_sse2_ussubv8hi3 (t1, operands[2], operands[1]));\n   t2 = force_reg (V8HImode, CONST0_RTX (V8HImode));\n \n-  operands[3] = gen_rtx_EQ (VOIDmode, t1, t2);\n-  operands[4] = t1;\n-  operands[5] = t2;\n-  ok = ix86_expand_int_vcond (operands, false);\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_EQ (VOIDmode, t1, t2);\n+  xops[4] = t1;\n+  xops[5] = t2;\n+  ok = ix86_expand_int_vcond (xops, false);\n   gcc_assert (ok);\n   DONE;\n })\n@@ -2815,11 +2823,16 @@\n \t\t    (match_operand:V16QI 2 \"register_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n+  rtx xops[6];\n   bool ok;\n-  operands[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n-  operands[4] = operands[2];\n-  operands[5] = operands[1];\n-  ok = ix86_expand_int_vcond (operands, false);\n+\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_GT (VOIDmode, operands[1], operands[2]);\n+  xops[4] = operands[2];\n+  xops[5] = operands[1];\n+  ok = ix86_expand_int_vcond (xops, false);\n   gcc_assert (ok);\n   DONE;\n })\n@@ -2862,17 +2875,20 @@\n \t\t   (match_operand:V8HI 2 \"register_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  rtx t1, t2;\n+  rtx xops[6], t1, t2;\n   bool ok;\n \n   t1 = gen_reg_rtx (V8HImode);\n   emit_insn (gen_sse2_ussubv8hi3 (t1, operands[1], operands[2]));\n   t2 = force_reg (V8HImode, CONST0_RTX (V8HImode));\n \n-  operands[3] = gen_rtx_EQ (VOIDmode, t1, t2);\n-  operands[4] = t1;\n-  operands[5] = t2;\n-  ok = ix86_expand_int_vcond (operands, false);\n+  xops[0] = operands[0];\n+  xops[1] = operands[1];\n+  xops[2] = operands[2];\n+  xops[3] = gen_rtx_EQ (VOIDmode, t1, t2);\n+  xops[4] = t1;\n+  xops[5] = t2;\n+  ok = ix86_expand_int_vcond (xops, false);\n   gcc_assert (ok);\n   DONE;\n })"}]}