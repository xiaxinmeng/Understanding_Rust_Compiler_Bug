{"sha": "a2c5ed873e291b1201311fc421b30f1f18bf125c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjNWVkODczZTI5MWIxMjAxMzExZmM0MjFiMzBmMWYxOGJmMTI1Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-11-13T17:48:28Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-11-13T17:48:28Z"}, "message": "re PR c++/29518 (rejects valid template argument, enums vs templates)\n\n\tPR c++/29518\n\t* pt.c (coerce_template_parms): Do not skip_evaluation while\n\tsubstituting template arguments.\n\tPR c++/29518\n\t* g++.dg/template/static28.C: New test.\n\nFrom-SVN: r118767", "tree": {"sha": "21a091cc74562e80f608497635a19c1e38b0e4fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21a091cc74562e80f608497635a19c1e38b0e4fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c5ed873e291b1201311fc421b30f1f18bf125c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c5ed873e291b1201311fc421b30f1f18bf125c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c5ed873e291b1201311fc421b30f1f18bf125c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c5ed873e291b1201311fc421b30f1f18bf125c/comments", "author": null, "committer": null, "parents": [{"sha": "f4c0a30368a46ab95f266646085ac4d65c61725d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c0a30368a46ab95f266646085ac4d65c61725d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4c0a30368a46ab95f266646085ac4d65c61725d"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "16e3e181d22381e5eaeff27d05afa7c4e30d686b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c5ed873e291b1201311fc421b30f1f18bf125c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c5ed873e291b1201311fc421b30f1f18bf125c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a2c5ed873e291b1201311fc421b30f1f18bf125c", "patch": "@@ -4131,6 +4131,7 @@ coerce_template_parms (tree parms,\n   tree inner_args;\n   tree new_args;\n   tree new_inner_args;\n+  bool saved_skip_evaluation;\n \n   inner_args = INNERMOST_TEMPLATE_ARGS (args);\n   nargs = inner_args ? NUM_TMPL_ARGS (inner_args) : 0;\n@@ -4155,6 +4156,10 @@ coerce_template_parms (tree parms,\n       return error_mark_node;\n     }\n \n+  /* We need to evaluate the template arguments, even though this\n+     template-id may be nested within a \"sizeof\".  */\n+  saved_skip_evaluation = skip_evaluation;\n+  skip_evaluation = false;\n   new_inner_args = make_tree_vec (nparms);\n   new_args = add_outermost_template_args (args, new_inner_args);\n   for (i = 0; i < nparms; i++)\n@@ -4196,6 +4201,7 @@ coerce_template_parms (tree parms,\n \tlost++;\n       TREE_VEC_ELT (new_inner_args, i) = arg;\n     }\n+  skip_evaluation = saved_skip_evaluation;\n \n   if (lost)\n     return error_mark_node;\n@@ -7261,7 +7267,6 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \n \tmax = tsubst_expr (omax, args, complain, in_decl,\n \t\t\t   /*integral_constant_expression_p=*/false);\n-\tmax = fold_non_dependent_expr (max);\n \tmax = fold_decl_constant_value (max);\n \n \tif (TREE_CODE (max) != INTEGER_CST "}, {"sha": "eb5ec5313e5e8135f9b8c72a939e5549bff4acd7", "filename": "gcc/testsuite/g++.dg/template/static28.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c5ed873e291b1201311fc421b30f1f18bf125c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c5ed873e291b1201311fc421b30f1f18bf125c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic28.C?ref=a2c5ed873e291b1201311fc421b30f1f18bf125c", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/29518\n+\n+template< bool C > int assertion_failed( int);\n+template< class > \n+struct N\n+{\n+  static bool const okay = true;\n+  enum {\n+    t = sizeof( assertion_failed<okay>( 0))\n+  };\n+};\n+int main()\n+{\n+  N<int> n;\n+}"}]}