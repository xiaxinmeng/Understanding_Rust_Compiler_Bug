{"sha": "88f9bb4dcba670c721b82628e51fd263779566ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmOWJiNGRjYmE2NzBjNzIxYjgyNjI4ZTUxZmQyNjM3Nzk1NjZhZQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-11-02T03:45:29Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-11-02T03:45:29Z"}, "message": "split up the trial variable in reorg.c:relax_delay_slots to use rtx_insn * more\n\ngcc/ChangeLog:\n\n2016-11-01  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* reorg.c (relax_delay_slots): Split up the trial variable.\n\nFrom-SVN: r241769", "tree": {"sha": "410f50124e739a5a649d347a1847f917935a087a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/410f50124e739a5a649d347a1847f917935a087a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f9bb4dcba670c721b82628e51fd263779566ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f9bb4dcba670c721b82628e51fd263779566ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f9bb4dcba670c721b82628e51fd263779566ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f9bb4dcba670c721b82628e51fd263779566ae/comments", "author": null, "committer": null, "parents": [{"sha": "9b2ea071ab12eb84e9be8631d64296bc5c0be7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b2ea071ab12eb84e9be8631d64296bc5c0be7ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b2ea071ab12eb84e9be8631d64296bc5c0be7ae"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "3df3fc35e7a111cdd1def310d94bc62beec72a99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f9bb4dcba670c721b82628e51fd263779566ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f9bb4dcba670c721b82628e51fd263779566ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88f9bb4dcba670c721b82628e51fd263779566ae", "patch": "@@ -1,3 +1,7 @@\n+2016-11-01  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* reorg.c (relax_delay_slots): Split up the trial variable.\n+\n 2016-11-01  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* config/arc/arc.c (arc_emit_call_tls_get_addr): Make the type"}, {"sha": "da4d7c64b7e3e702bd01d7590f4cae1741e19d08", "filename": "gcc/reorg.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f9bb4dcba670c721b82628e51fd263779566ae/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f9bb4dcba670c721b82628e51fd263779566ae/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=88f9bb4dcba670c721b82628e51fd263779566ae", "patch": "@@ -222,7 +222,7 @@ static void steal_delay_list_from_fallthrough (rtx_insn *, rtx, rtx_sequence *,\n static void try_merge_delay_insns (rtx_insn *, rtx_insn *);\n static rtx_insn *redundant_insn (rtx, rtx_insn *, const vec<rtx_insn *> &);\n static int own_thread_p (rtx, rtx, int);\n-static void update_block (rtx_insn *, rtx);\n+static void update_block (rtx_insn *, rtx_insn *);\n static int reorg_redirect_jump (rtx_jump_insn *, rtx);\n static void update_reg_dead_notes (rtx_insn *, rtx_insn *);\n static void fix_reg_dead_note (rtx_insn *, rtx);\n@@ -1703,7 +1703,7 @@ own_thread_p (rtx thread, rtx label, int allow_fallthrough)\n    BARRIER in relax_delay_slots.  */\n \n static void\n-update_block (rtx_insn *insn, rtx where)\n+update_block (rtx_insn *insn, rtx_insn *where)\n {\n   /* Ignore if this was in a delay slot and it came from the target of\n      a branch.  */\n@@ -3118,7 +3118,6 @@ relax_delay_slots (rtx_insn *first)\n {\n   rtx_insn *insn, *next;\n   rtx_sequence *pat;\n-  rtx trial;\n   rtx_insn *delay_insn;\n   rtx target_label;\n \n@@ -3271,10 +3270,10 @@ relax_delay_slots (rtx_insn *first)\n \t  for (i = 0; i < XVECLEN (pat, 0); i++)\n \t    INSN_FROM_TARGET_P (XVECEXP (pat, 0, i)) = 0;\n \n-\t  trial = PREV_INSN (insn);\n+\t  rtx_insn *prev = PREV_INSN (insn);\n \t  delete_related_insns (insn);\n \t  gcc_assert (GET_CODE (pat) == SEQUENCE);\n-\t  add_insn_after (delay_insn, trial, NULL);\n+\t  add_insn_after (delay_insn, prev, NULL);\n \t  after = delay_insn;\n \t  for (i = 1; i < pat->len (); i++)\n \t    after = emit_copy_of_insn_after (pat->insn (i), after);\n@@ -3295,9 +3294,9 @@ relax_delay_slots (rtx_insn *first)\n \n       /* If this jump goes to another unconditional jump, thread it, but\n \t don't convert a jump into a RETURN here.  */\n-      trial = skip_consecutive_labels (follow_jumps (target_label,\n-\t\t\t\t\t\t     delay_jump_insn,\n-\t\t\t\t\t\t     &crossing));\n+      rtx trial = skip_consecutive_labels (follow_jumps (target_label,\n+\t\t\t\t\t\t\t delay_jump_insn,\n+\t\t\t\t\t\t\t &crossing));\n       if (ANY_RETURN_P (trial))\n \ttrial = find_end_label (trial);\n \n@@ -3401,10 +3400,10 @@ relax_delay_slots (rtx_insn *first)\n \t  for (i = 0; i < XVECLEN (pat, 0); i++)\n \t    INSN_FROM_TARGET_P (XVECEXP (pat, 0, i)) = 0;\n \n-\t  trial = PREV_INSN (insn);\n+\t  rtx_insn *prev = PREV_INSN (insn);\n \t  delete_related_insns (insn);\n \t  gcc_assert (GET_CODE (pat) == SEQUENCE);\n-\t  add_insn_after (delay_jump_insn, trial, NULL);\n+\t  add_insn_after (delay_jump_insn, prev, NULL);\n \t  after = delay_jump_insn;\n \t  for (i = 1; i < pat->len (); i++)\n \t    after = emit_copy_of_insn_after (pat->insn (i), after);"}]}