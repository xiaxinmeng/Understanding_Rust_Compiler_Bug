{"sha": "b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmMzZlNWVlMDdkZDFmYTJkODM0NWJjYjE3NTFhYWIzZTk1Zjk4MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-09T03:57:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-09T03:57:53Z"}, "message": "re PR c++/57068 (gcc prints warning \"ref-qualifiers only available with -std=c++0x or -std=gnu++0x\" for operator&)\n\n\tPR c++/57068\n\t* decl.c (grokdeclarator): Warn about ref-qualifiers here.\n\t* parser.c (cp_parser_ref_qualifier_seq_opt): Not here.\n\t* error.c (maybe_warn_cpp0x): s/0x/11/.\n\nFrom-SVN: r198730", "tree": {"sha": "4848895c505eb559dcf8278af01ea5362177be99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4848895c505eb559dcf8278af01ea5362177be99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "654246455d61a9d39d023309c4046c85154256f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654246455d61a9d39d023309c4046c85154256f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/654246455d61a9d39d023309c4046c85154256f4"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "560b463efd05bf252d7ab3d9fc077f2a98aab47b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "patch": "@@ -1,3 +1,10 @@\n+2013-05-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57068\n+\t* decl.c (grokdeclarator): Warn about ref-qualifiers here.\n+\t* parser.c (cp_parser_ref_qualifier_seq_opt): Not here.\n+\t* error.c (maybe_warn_cpp0x): s/0x/11/.\n+\n 2013-05-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51226"}, {"sha": "d6e286184a43d5863a1c6feca66a901a8120b0d4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "patch": "@@ -9563,6 +9563,7 @@ grokdeclarator (const cp_declarator *declarator,\n \n \t\tif (rqual)\n \t\t  {\n+\t\t    maybe_warn_cpp0x (CPP0X_REF_QUALIFIER);\n \t\t    error ((flags == DTOR_FLAG)\n \t\t\t   ? \"destructors may not be ref-qualified\"\n \t\t\t   : \"constructors may not be ref-qualified\");"}, {"sha": "bd463eaa80f2291302d511afd7867800ffdd0191", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "patch": "@@ -3394,7 +3394,7 @@ maybe_warn_cpp0x (cpp0x_warn_str str)\n \tbreak;\n       case CPP0X_AUTO:\n \tpedwarn (input_location, 0,\n-\t\t \"C++0x auto only available with -std=c++11 or -std=gnu++11\");\n+\t\t \"C++11 auto only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_SCOPED_ENUMS:\n \tpedwarn (input_location, 0,\n@@ -3443,7 +3443,7 @@ maybe_warn_cpp0x (cpp0x_warn_str str)\n       case CPP0X_REF_QUALIFIER:\n \tpedwarn (input_location, 0,\n \t\t \"ref-qualifiers \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       default:\n \tgcc_unreachable ();"}, {"sha": "8d3f6c70fff64d53c97484774e38baa01dc980a2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "patch": "@@ -17199,9 +17199,6 @@ cp_parser_ref_qualifier_opt (cp_parser* parser)\n \t}\n     }\n \n-  if (ref_qual)\n-    maybe_warn_cpp0x (CPP0X_REF_QUALIFIER);\n-\n   return ref_qual;\n }\n "}, {"sha": "e3f60c09c8a888c4bfb88286810f7cfbd32a1413", "filename": "gcc/testsuite/g++.dg/parse/ref-qual1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref-qual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref-qual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fref-qual1.C?ref=b0f36e5ee07dd1fa2d8345bcb1751aab3e95f980", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/57068\n+\n+enum Enums {\n+  Enum1 = 0x00000000,\n+  Enum2 = 0x00000001\n+};\n+\n+class Flags {\n+public:\n+  Flags() : i(0) {}\n+  Flags(int i): i(i) {}\n+  Flags operator&(Enums f) { return Flags(Enums(i & f)); }\n+\n+  operator bool() { return i; }\n+private:\n+  int i;\n+};\n+\n+Flags windowState()\n+{\n+  return Flags();\n+}\n+\n+int main()\n+{\n+  if (bool(windowState() & Enum1) == true)\n+    return 1;\n+  return 0;\n+}"}]}