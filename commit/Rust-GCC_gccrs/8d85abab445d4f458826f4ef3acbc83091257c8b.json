{"sha": "8d85abab445d4f458826f4ef3acbc83091257c8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4NWFiYWI0NDVkNGY0NTg4MjZmNGVmM2FjYmM4MzA5MTI1N2M4Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-03-16T14:32:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-03-16T14:32:07Z"}, "message": "PR libstdc++/80064 make heap algorithms work with function types\n\n\tPR libstdc++/80064\n\t* include/bits/stl_heap.h (__is_heap, push_heap, __adjust_heap)\n\t(pop_heap, make_heap, sort_heap, is_heap_until, is_heap): Cope with\n\tinvalid instantiations using function types for _Compare argument.\n\t* testsuite/25_algorithms/make_heap/80064.cc: New test.\n\nFrom-SVN: r246197", "tree": {"sha": "92da033617f64f22ad263a8ad61b0ce6a424157e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92da033617f64f22ad263a8ad61b0ce6a424157e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d85abab445d4f458826f4ef3acbc83091257c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d85abab445d4f458826f4ef3acbc83091257c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d85abab445d4f458826f4ef3acbc83091257c8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d85abab445d4f458826f4ef3acbc83091257c8b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7acc5349773cfe101d6ed116be30e15eb71b0d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7acc5349773cfe101d6ed116be30e15eb71b0d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7acc5349773cfe101d6ed116be30e15eb71b0d0f"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "63ed2daeed5b40e4515e9c1baee64fac542b5e0b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8d85abab445d4f458826f4ef3acbc83091257c8b", "patch": "@@ -1,5 +1,11 @@\n 2017-03-16  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/80064\n+\t* include/bits/stl_heap.h (__is_heap, push_heap, __adjust_heap)\n+\t(pop_heap, make_heap, sort_heap, is_heap_until, is_heap): Cope with\n+\tinvalid instantiations using function types for _Compare argument.\n+\t* testsuite/25_algorithms/make_heap/80064.cc: New test.\n+\n \tPR libstdc++/67440\n \t* python/libstdcxx/v6/printers.py (find_type): Avoid gdb.Type.name\n \tfor GDB 7.6 compatibility, use gdb.Type.unqualified instead."}, {"sha": "f8cd0c05429b6e30c89c0c47d36fa01b6809a09c", "filename": "libstdc++-v3/include/bits/stl_heap.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h?ref=8d85abab445d4f458826f4ef3acbc83091257c8b", "patch": "@@ -100,7 +100,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline bool\n     __is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)\n     {\n-      __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+      typedef __decltype(__comp) _Cmp;\n+      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n       return std::__is_heap_until(__first, __n, __cmp) == __n;\n     }\n \n@@ -313,8 +314,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       if (__last - __first > 1)\n \t{\n-\t  using __gnu_cxx::__ops::_Iter_comp_iter;\n-\t  _Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+\t  typedef __decltype(__comp) _Cmp;\n+\t  __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n \t  --__last;\n \t  std::__pop_heap(__first, __last, __last, __cmp);\n \t}\n@@ -391,7 +392,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_valid_range(__first, __last);\n       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);\n \n-      __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+      typedef __decltype(__comp) _Cmp;\n+      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n       std::__make_heap(__first, __last, __cmp);\n     }\n \n@@ -454,7 +456,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);\n       __glibcxx_requires_heap_pred(__first, __last, __comp);\n \n-      __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+      typedef __decltype(__comp) _Cmp;\n+      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n       std::__sort_heap(__first, __last, __cmp);\n     }\n \n@@ -508,7 +511,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_valid_range(__first, __last);\n       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);\n \n-      __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+      typedef __decltype(__comp) _Cmp;\n+      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n       return __first\n \t+ std::__is_heap_until(__first, std::distance(__first, __last), __cmp);\n     }\n@@ -545,7 +549,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);\n \n       const auto __dist = std::distance(__first, __last);\n-      __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __cmp(_GLIBCXX_MOVE(__comp));\n+      typedef __decltype(__comp) _Cmp;\n+      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp(_GLIBCXX_MOVE(__comp));\n       return std::__is_heap_until(__first, __dist, __cmp) == __dist;\n     }\n #endif"}, {"sha": "eedcc320ec6368f0b709b3dcca99b19b55a12623", "filename": "libstdc++-v3/testsuite/25_algorithms/make_heap/80064.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2F80064.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d85abab445d4f458826f4ef3acbc83091257c8b/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2F80064.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2F80064.cc?ref=8d85abab445d4f458826f4ef3acbc83091257c8b", "patch": "@@ -0,0 +1,31 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+\n+#include <algorithm>\n+\n+void\n+test01(int* first, int* last)\n+{\n+  extern bool cmp(int, int);\n+  // PR libstdc++/80064\n+  // This is undefined, because [alg.sorting] requires the template argument\n+  // Compare to be a function object type, and bool(int, int) is not an\n+  // object type. We previously accepted it by accident, so keep doing so.\n+  std::make_heap<int*, bool(int, int)>(first, last, cmp);\n+}"}]}