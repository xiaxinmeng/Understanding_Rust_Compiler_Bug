{"sha": "e6fffadefff2c5e36962adb70075ceb1135ac7fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmZmZhZGVmZmYyYzVlMzY5NjJhZGI3MDA3NWNlYjExMzVhYzdmYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2005-05-09T14:15:47Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-05-09T14:15:47Z"}, "message": "re PR target/21397 (arm: -march overrides -mtune)\n\n\tPR target/21397\n\t* arm.c (ARM_OPT_SET_CPU, ARM_OPT_SET_ARCH, ARM_OPT_SET_TUNE): Define.\n\t(arm_override_options): Use them instead of manifest constants.  Don't\n\tallow -march to override the -mtune setting.\n\nFrom-SVN: r99441", "tree": {"sha": "bcb07983751bea6065cbe4210e94444198f46568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcb07983751bea6065cbe4210e94444198f46568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6fffadefff2c5e36962adb70075ceb1135ac7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fffadefff2c5e36962adb70075ceb1135ac7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6fffadefff2c5e36962adb70075ceb1135ac7fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fffadefff2c5e36962adb70075ceb1135ac7fc/comments", "author": null, "committer": null, "parents": [{"sha": "f77a5578e1202112ab3ce12ee8cf44cdf859f55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77a5578e1202112ab3ce12ee8cf44cdf859f55c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f77a5578e1202112ab3ce12ee8cf44cdf859f55c"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "33aae284a0e34428047eac6c6d2061ddffa93d29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6fffadefff2c5e36962adb70075ceb1135ac7fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6fffadefff2c5e36962adb70075ceb1135ac7fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6fffadefff2c5e36962adb70075ceb1135ac7fc", "patch": "@@ -1,3 +1,10 @@\n+2005-05-09  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/21397\n+\t* arm.c (ARM_OPT_SET_CPU, ARM_OPT_SET_ARCH, ARM_OPT_SET_TUNE): Define.\n+\t(arm_override_options): Use them instead of manifest constants.  Don't\n+\tallow -march to override the -mtune setting.\n+\n 2005-05-09  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/iq2000/iq2000.c (abort_with_insn): Use fancy_abort."}, {"sha": "1743980b1cf809d79e9a60c82775d2b3ccf1b2db", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6fffadefff2c5e36962adb70075ceb1135ac7fc/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6fffadefff2c5e36962adb70075ceb1135ac7fc/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=e6fffadefff2c5e36962adb70075ceb1135ac7fc", "patch": "@@ -596,6 +596,10 @@ static struct arm_cpu_select arm_select[] =\n   { NULL,\t\"-mtune=\",\tall_cores }\n };\n \n+/* Defines representing the indexes into the above table.  */\n+#define ARM_OPT_SET_CPU 0\n+#define ARM_OPT_SET_ARCH 1\n+#define ARM_OPT_SET_TUNE 2\n \n /* The name of the proprocessor macro to define for this architecture.  */\n \n@@ -852,6 +856,7 @@ void\n arm_override_options (void)\n {\n   unsigned i;\n+  enum processor_type target_arch_cpu = arm_none;\n \n   /* Set up the flags based on the cpu/architecture selected by the user.  */\n   for (i = ARRAY_SIZE (arm_select); i--;)\n@@ -866,22 +871,25 @@ arm_override_options (void)\n             if (streq (ptr->string, sel->name))\n               {\n \t\t/* Set the architecture define.  */\n-\t\tif (i != 2)\n+\t\tif (i != ARM_OPT_SET_TUNE)\n \t\t  sprintf (arm_arch_name, \"__ARM_ARCH_%s__\", sel->arch);\n \n \t\t/* Determine the processor core for which we should\n \t\t   tune code-generation.  */\n \t\tif (/* -mcpu= is a sensible default.  */\n-\t\t    i == 0\n-\t\t    /* If -march= is used, and -mcpu= has not been used,\n-\t\t       assume that we should tune for a representative\n-\t\t       CPU from that architecture.  */\n-\t\t    || i == 1\n+\t\t    i == ARM_OPT_SET_CPU\n \t\t    /* -mtune= overrides -mcpu= and -march=.  */\n-\t\t    || i == 2)\n+\t\t    || i == ARM_OPT_SET_TUNE)\n \t\t  arm_tune = (enum processor_type) (sel - ptr->processors);\n \n-\t\tif (i != 2)\n+\t\t/* Remember the CPU associated with this architecture.\n+\t\t   If no other option is used to set the CPU type,\n+\t\t   we'll use this to guess the most suitable tuning\n+\t\t   options.  */\n+\t\tif (i == ARM_OPT_SET_ARCH)\n+\t\t  target_arch_cpu = sel->core;\n+\t\t\n+\t\tif (i != ARM_OPT_SET_TUNE)\n \t\t  {\n \t\t    /* If we have been given an architecture and a processor\n \t\t       make sure that they are compatible.  We only generate\n@@ -902,6 +910,10 @@ arm_override_options (void)\n         }\n     }\n \n+  /* Guess the tuning options from the architecture if necessary.  */\n+  if (arm_tune == arm_none)\n+    arm_tune = target_arch_cpu;\n+\n   /* If the user did not specify a processor, choose one for them.  */\n   if (insn_flags == 0)\n     {"}]}