{"sha": "44e577003a1eb72211cb667c9536360a0ef47060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlNTc3MDAzYTFlYjcyMjExY2I2NjdjOTUzNjM2MGEwZWY0NzA2MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-02T19:24:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-02T19:24:17Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1386", "tree": {"sha": "4b597b8eaecccff83cc8bffd92f8e2284fc3dd94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b597b8eaecccff83cc8bffd92f8e2284fc3dd94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e577003a1eb72211cb667c9536360a0ef47060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e577003a1eb72211cb667c9536360a0ef47060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e577003a1eb72211cb667c9536360a0ef47060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e577003a1eb72211cb667c9536360a0ef47060/comments", "author": null, "committer": null, "parents": [{"sha": "5d55ba757a05b54ea5a68c40208887158211987a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d55ba757a05b54ea5a68c40208887158211987a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d55ba757a05b54ea5a68c40208887158211987a"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "4e165fdaf4717cb2ef135738296c73307c0cb4c3", "filename": "gcc/halfpic.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e577003a1eb72211cb667c9536360a0ef47060/gcc%2Fhalfpic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e577003a1eb72211cb667c9536360a0ef47060/gcc%2Fhalfpic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.c?ref=44e577003a1eb72211cb667c9536360a0ef47060", "patch": "@@ -209,14 +209,26 @@ half_pic_encode (decl)\n   if (code != VAR_DECL && code != FUNCTION_DECL)\n     return;\n \n-  /* If this is not an external reference, it can't be half-pic.  */\n-  if (!TREE_EXTERNAL (decl))\n-    return;\n-\n   asm_name = DECL_ASSEMBLER_NAME (decl);\n+\n   if (!asm_name)\n     return;\n \n+#ifdef HALF_PIC_DEBUG\n+  if (HALF_PIC_DEBUG)\n+    {\n+      if (HALF_PIC_DEBUG)\n+\tfprintf (stderr, \"\\n========== Half_pic_encode %.*s\\n\",\n+\t\t IDENTIFIER_LENGTH (asm_name),\n+\t\t IDENTIFIER_POINTER (asm_name));\n+      debug_tree (decl);\n+    }\n+#endif\n+\n+  /* If this is not an external reference, it can't be half-pic.  */\n+  if (!TREE_EXTERNAL (decl) && (code != VAR_DECL || !TREE_PUBLIC (decl)))\n+    return;\n+\n   ptr = half_pic_hash (IDENTIFIER_POINTER (asm_name),\n \t\t       IDENTIFIER_LENGTH (asm_name),\n \t\t       TRUE);\n@@ -225,7 +237,7 @@ half_pic_encode (decl)\n \n #ifdef HALF_PIC_DEBUG\n   if (HALF_PIC_DEBUG)\n-    fprintf (stderr, \"\\n========== Half_pic_encode %.*s\\n\",\n+    fprintf (stderr, \"\\n%.*s is half-pic\\n\",\n \t     IDENTIFIER_LENGTH (asm_name),\n \t     IDENTIFIER_POINTER (asm_name));\n #endif\n@@ -277,7 +289,7 @@ half_pic_address_p (addr)\n     case CONST:\n       {\n \trtx offset = const0_rtx;\n-\taddr = eliminate_constant_term (addr, &offset);\n+\taddr = eliminate_constant_term (XEXP (addr, 0), &offset);\n \tif (GET_CODE (addr) != SYMBOL_REF)\n \t  return FALSE;\n       }"}]}