{"sha": "0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0MTNmYmM2Yzc0ODJjNjcwZmNmNDcxZGMzZWNmMmQ1MDI1MGE1MQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-11-20T11:06:05Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-11-20T11:06:05Z"}, "message": "[ARM] Do no clobber r4 in Armv8-M nonsecure call\n\nExpanders for Armv8-M nonsecure call unnecessarily clobber r4 despite\nthe libcall they perform not writing to r4.  Furthermore, the\nrequirement for the branch target address to be in r4 as expected by\nthe libcall is modeled in a convoluted way in the define_insn patterns:\nthe address is a register match_operand constrained by the match_dup\nfor the clobber which is guaranteed to be r4 due to the expander.\n\nThis patch simplifies all this by simply requiring the address to be in\nr4 and removing the clobbers. Expanders are left alone because\ncmse_nonsecure_call_clear_caller_saved relies on branch target memory\nattributes which would be lost if expanding to reg:SI R4_REGNUM.\n\n2017-11-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.md (R4_REGNUM): Define constant.\n    (nonsecure_call_internal): Remove r4 clobber.\n    (nonsecure_call_value_internal): Likewise.\n    * config/arm/thumb1.md (nonsecure_call_reg_thumb1_v5): Remove second\n    clobber and resequence match_operands.\n    (nonsecure_call_value_reg_thumb1_v5): Likewise.\n    * config/arm/thumb2.md (nonsecure_call_reg_thumb2): Likewise.\n    (nonsecure_call_value_reg_thumb2): Likewise.\n\nFrom-SVN: r254950", "tree": {"sha": "b4120e10b104047db7f673a8e8a535190fb4b0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4120e10b104047db7f673a8e8a535190fb4b0e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4acdaf98f9fb9b0ab9e7e5bce5dd18f826703326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acdaf98f9fb9b0ab9e7e5bce5dd18f826703326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4acdaf98f9fb9b0ab9e7e5bce5dd18f826703326"}], "stats": {"total": 58, "additions": 32, "deletions": 26}, "files": [{"sha": "4df4d801854b70c54ead21a33eb1861fa18c14e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "patch": "@@ -1,3 +1,14 @@\n+2017-11-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.md (R4_REGNUM): Define constant.\n+\t(nonsecure_call_internal): Remove r4 clobber.\n+\t(nonsecure_call_value_internal): Likewise.\n+\t* config/arm/thumb1.md (nonsecure_call_reg_thumb1_v5): Remove second\n+\tclobber and resequence match_operands.\n+\t(nonsecure_call_value_reg_thumb1_v5): Likewise.\n+\t* config/arm/thumb2.md (nonsecure_call_reg_thumb2): Likewise.\n+\t(nonsecure_call_value_reg_thumb2): Likewise.\n+\n 2017-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/78821"}, {"sha": "545ee257699abc47abdab8b4959a16a512526cb5", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "patch": "@@ -30,6 +30,7 @@\n (define_constants\n   [(R0_REGNUM         0)\t; First CORE register\n    (R1_REGNUM\t      1)\t; Second CORE register\n+   (R4_REGNUM\t      4)\t; Fifth CORE register\n    (IP_REGNUM\t     12)\t; Scratch register\n    (SP_REGNUM\t     13)\t; Stack pointer\n    (LR_REGNUM        14)\t; Return address register\n@@ -8072,14 +8073,13 @@\n \t\t\t       UNSPEC_NONSECURE_MEM)\n \t\t    (match_operand 1 \"general_operand\" \"\"))\n \t      (use (match_operand 2 \"\" \"\"))\n-\t      (clobber (reg:SI LR_REGNUM))\n-\t      (clobber (reg:SI 4))])]\n+\t      (clobber (reg:SI LR_REGNUM))])]\n   \"use_cmse\"\n   \"\n   {\n     rtx tmp;\n     tmp = copy_to_suggested_reg (XEXP (operands[0], 0),\n-\t\t\t\t gen_rtx_REG (SImode, 4),\n+\t\t\t\t gen_rtx_REG (SImode, R4_REGNUM),\n \t\t\t\t SImode);\n \n     operands[0] = replace_equiv_address (operands[0], tmp);\n@@ -8164,14 +8164,13 @@\n \t\t\t\t    UNSPEC_NONSECURE_MEM)\n \t\t\t (match_operand 2 \"general_operand\" \"\")))\n \t      (use (match_operand 3 \"\" \"\"))\n-\t      (clobber (reg:SI LR_REGNUM))\n-\t      (clobber (reg:SI 4))])]\n+\t      (clobber (reg:SI LR_REGNUM))])]\n   \"use_cmse\"\n   \"\n   {\n     rtx tmp;\n     tmp = copy_to_suggested_reg (XEXP (operands[1], 0),\n-\t\t\t\t gen_rtx_REG (SImode, 4),\n+\t\t\t\t gen_rtx_REG (SImode, R4_REGNUM),\n \t\t\t\t SImode);\n \n     operands[1] = replace_equiv_address (operands[1], tmp);"}, {"sha": "f91659386bf240172bd9a3076722683c8a50dff4", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "patch": "@@ -1732,12 +1732,11 @@\n )\n \n (define_insn \"*nonsecure_call_reg_thumb1_v5\"\n-  [(call (unspec:SI [(mem:SI (match_operand:SI 0 \"register_operand\" \"l*r\"))]\n+  [(call (unspec:SI [(mem:SI (reg:SI R4_REGNUM))]\n \t\t    UNSPEC_NONSECURE_MEM)\n-\t (match_operand 1 \"\" \"\"))\n-   (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI LR_REGNUM))\n-   (clobber (match_dup 0))]\n+\t (match_operand 0 \"\" \"\"))\n+   (use (match_operand 1 \"\" \"\"))\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB1 && use_cmse && !SIBLING_CALL_P (insn)\"\n   \"bl\\\\t__gnu_cmse_nonsecure_call\"\n   [(set_attr \"length\" \"4\")\n@@ -1779,12 +1778,11 @@\n (define_insn \"*nonsecure_call_value_reg_thumb1_v5\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (unspec:SI\n-\t       [(mem:SI (match_operand:SI 1 \"register_operand\" \"l*r\"))]\n+\t       [(mem:SI (reg:SI R4_REGNUM))]\n \t       UNSPEC_NONSECURE_MEM)\n-\t      (match_operand 2 \"\" \"\")))\n-   (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI LR_REGNUM))\n-   (clobber (match_dup 1))]\n+\t      (match_operand 1 \"\" \"\")))\n+   (use (match_operand 2 \"\" \"\"))\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB1 && use_cmse\"\n   \"bl\\\\t__gnu_cmse_nonsecure_call\"\n   [(set_attr \"length\" \"4\")"}, {"sha": "60f71c768adb0cb86808a0454cdc028365236c3a", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a413fbc6c7482c670fcf471dc3ecf2d50250a51/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=0a413fbc6c7482c670fcf471dc3ecf2d50250a51", "patch": "@@ -552,12 +552,11 @@\n )\n \n (define_insn \"*nonsecure_call_reg_thumb2\"\n-  [(call (unspec:SI [(mem:SI (match_operand:SI 0 \"s_register_operand\" \"r\"))]\n+  [(call (unspec:SI [(mem:SI (reg:SI R4_REGNUM))]\n \t\t    UNSPEC_NONSECURE_MEM)\n-\t (match_operand 1 \"\" \"\"))\n-   (use (match_operand 2 \"\" \"\"))\n-   (clobber (reg:SI LR_REGNUM))\n-   (clobber (match_dup 0))]\n+\t (match_operand 0 \"\" \"\"))\n+   (use (match_operand 1 \"\" \"\"))\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB2 && use_cmse\"\n   \"bl\\\\t__gnu_cmse_nonsecure_call\"\n   [(set_attr \"length\" \"4\")\n@@ -578,12 +577,11 @@\n (define_insn \"*nonsecure_call_value_reg_thumb2\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call\n-\t (unspec:SI [(mem:SI (match_operand:SI 1 \"register_operand\" \"l*r\"))]\n+\t (unspec:SI [(mem:SI (reg:SI R4_REGNUM))]\n \t\t    UNSPEC_NONSECURE_MEM)\n-\t (match_operand 2 \"\" \"\")))\n-   (use (match_operand 3 \"\" \"\"))\n-   (clobber (reg:SI LR_REGNUM))\n-   (clobber (match_dup 1))]\n+\t (match_operand 1 \"\" \"\")))\n+   (use (match_operand 2 \"\" \"\"))\n+   (clobber (reg:SI LR_REGNUM))]\n   \"TARGET_THUMB2 && use_cmse\"\n   \"bl\\t__gnu_cmse_nonsecure_call\"\n   [(set_attr \"length\" \"4\")"}]}