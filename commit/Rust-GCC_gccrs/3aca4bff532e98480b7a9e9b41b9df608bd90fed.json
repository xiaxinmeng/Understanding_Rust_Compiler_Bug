{"sha": "3aca4bff532e98480b7a9e9b41b9df608bd90fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjYTRiZmY1MzJlOTg0ODBiN2E5ZTliNDFiOWRmNjA4YmQ5MGZlZA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-07-29T21:01:19Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-07-29T21:01:19Z"}, "message": "altivec.md: Convert UNSPEC numerical values to define_constants.\n\n        * config/rs6000/altivec.md: Convert UNSPEC numerical values to\n        define_constants.  Change duplicate values to unassigned numbers.\n        Change UNSPEC_SUBS to UNSPEC_VSUBS.\n        (*altivec_vspltsf): New.\n        (altivec_vperm_v4sf): Delete.\n        (altivec_vperm_<mode>): Use mode macro V.\n        (altivec_vsldoi_<mode>): Convert to mode macro pattern.\n        (altivec_predicate_v4sf): Delete.\n        (altivec_predicate_<mode>): Use mode macro V.\n        (*altivec_lvesfx): New.\n        (*altivec_stvesfx): New.\n        (vec_realign_load_v4sf): Delete.\n        (vec_realign_load_<mode>): Use mode macro V.\n        * config/rs6000/rs6000.c (generate_set_vrsave): Use\n        UNSPECV_SET_VRSAVE.\n\nFrom-SVN: r102566", "tree": {"sha": "84327d2d95a0ff17c64b45823529a67d881db4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84327d2d95a0ff17c64b45823529a67d881db4db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aca4bff532e98480b7a9e9b41b9df608bd90fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aca4bff532e98480b7a9e9b41b9df608bd90fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aca4bff532e98480b7a9e9b41b9df608bd90fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aca4bff532e98480b7a9e9b41b9df608bd90fed/comments", "author": null, "committer": null, "parents": [{"sha": "b28250ab6ffb56f440fecda12b762c9fa946f107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b28250ab6ffb56f440fecda12b762c9fa946f107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b28250ab6ffb56f440fecda12b762c9fa946f107"}], "stats": {"total": 493, "additions": 322, "deletions": 171}, "files": [{"sha": "980c4912e0033ebfb49d475f8f9d6f0281bb999f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aca4bff532e98480b7a9e9b41b9df608bd90fed", "patch": "@@ -1,3 +1,21 @@\n+2005-07-29  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/altivec.md: Convert UNSPEC numerical values to\n+\tdefine_constants.  Change duplicate values to unassigned numbers.\n+\tChange UNSPEC_SUBS to UNSPEC_VSUBS.\n+\t(*altivec_vspltsf): New.\n+\t(altivec_vperm_v4sf): Delete.\n+\t(altivec_vperm_<mode>): Use mode macro V.\n+\t(altivec_vsldoi_<mode>): Convert to mode macro pattern.\n+\t(altivec_predicate_v4sf): Delete.\n+\t(altivec_predicate_<mode>): Use mode macro V.\n+\t(*altivec_lvesfx): New.\n+\t(*altivec_stvesfx): New.\n+\t(vec_realign_load_v4sf): Delete.\n+\t(vec_realign_load_<mode>): Use mode macro V.\n+\t* config/rs6000/rs6000.c (generate_set_vrsave): Use\n+\tUNSPECV_SET_VRSAVE.\n+\n 2005-07-29  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR bootstrap/23131"}, {"sha": "eb406781fff51fb8d52d8aabd5f2f8e2214ce55d", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 303, "deletions": 170, "changes": 473, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=3aca4bff532e98480b7a9e9b41b9df608bd90fed", "patch": "@@ -33,13 +33,91 @@\n    (UNSPEC_VCMPGTUW      60)\n    (UNSPEC_VCMPGTSW      61)\n    (UNSPEC_VCMPGTFP      62)\n+   (UNSPEC_VMSUMU        65)\n+   (UNSPEC_VMSUMM        66)\n+   (UNSPEC_VMSUMSHM      68)\n+   (UNSPEC_VMSUMUHS      69)\n+   (UNSPEC_VMSUMSHS      70)\n+   (UNSPEC_VMHADDSHS     71)\n+   (UNSPEC_VMHRADDSHS    72)\n+   (UNSPEC_VMLADDUHM     73)\n+   (UNSPEC_VADDCUW       75)\n+   (UNSPEC_VADDU         76)\n+   (UNSPEC_VADDS         77)\n+   (UNSPEC_VAVGU         80)\n+   (UNSPEC_VAVGS         81)\n+   (UNSPEC_VMULEUB       83)\n+   (UNSPEC_VMULESB       84)\n+   (UNSPEC_VMULEUH       85)\n+   (UNSPEC_VMULESH       86)\n+   (UNSPEC_VMULOUB       87)\n+   (UNSPEC_VMULOSB       88)\n+   (UNSPEC_VMULOUH       89)\n+   (UNSPEC_VMULOSH       90)\n+   (UNSPEC_VPKUHUM       93)\n+   (UNSPEC_VPKUWUM       94)\n+   (UNSPEC_VPKPX         95)\n+   (UNSPEC_VPKUHSS       96)\n+   (UNSPEC_VPKSHSS       97)\n+   (UNSPEC_VPKUWSS       98)\n+   (UNSPEC_VPKSWSS       99)\n+   (UNSPEC_VPKUHUS      100)\n+   (UNSPEC_VPKSHUS      101)\n+   (UNSPEC_VPKUWUS      102)\n+   (UNSPEC_VPKSWUS      103)\n+   (UNSPEC_VRL          104)\n+   (UNSPEC_VSL          107)\n    (UNSPEC_VSLW         109)\n-   (UNSPEC_SUBS         126)\n+   (UNSPEC_VSLV4SI      110)\n+   (UNSPEC_VSLO         111)\n+   (UNSPEC_VSR          118)\n+   (UNSPEC_VSRO         119)\n+   (UNSPEC_VSUBCUW      124)\n+   (UNSPEC_VSUBU        125)\n+   (UNSPEC_VSUBS        126)\n+   (UNSPEC_VSUM4UBS     131)\n+   (UNSPEC_VSUM4S       132)\n+   (UNSPEC_VSUM2SWS     134)\n+   (UNSPEC_VSUMSWS      135)\n+   (UNSPEC_VPERM        144)\n+   (UNSPEC_VRFIP        148)\n+   (UNSPEC_VRFIN        149)\n+   (UNSPEC_VRFIM        150)\n+   (UNSPEC_VCFUX        151)\n+   (UNSPEC_VCFSX        152)\n+   (UNSPEC_VCTUXS       153)\n+   (UNSPEC_VCTSXS       154)\n+   (UNSPEC_VLOGEFP      155)\n+   (UNSPEC_VEXPTEFP     156)\n+   (UNSPEC_VRSQRTEFP    157)\n+   (UNSPEC_VREFP        158)\n    (UNSPEC_VSEL4SI      159)\n    (UNSPEC_VSEL4SF      160)\n    (UNSPEC_VSEL8HI      161)\n    (UNSPEC_VSEL16QI     162)\n+   (UNSPEC_VLSDOI       163)\n+   (UNSPEC_VUPKHSB      167)\n+   (UNSPEC_VUPKHPX      168)\n+   (UNSPEC_VUPKHSH      169)\n+   (UNSPEC_VUPKLSB      170)\n+   (UNSPEC_VUPKLPX      171)\n+   (UNSPEC_VUPKLSH      172)\n+   (UNSPEC_PREDICATE    173)\n+   (UNSPEC_DST          190)\n+   (UNSPEC_DSTT         191)\n+   (UNSPEC_DSTST        192)\n+   (UNSPEC_DSTSTT       193)\n+   (UNSPEC_LVSL         194)\n+   (UNSPEC_LVSR         195)\n+   (UNSPEC_LVE          196)\n+   (UNSPEC_STVX         201)\n+   (UNSPEC_STVXL        202)\n+   (UNSPEC_STVE         203)\n    (UNSPEC_SET_VSCR     213)\n+   (UNSPEC_GET_VRSAVE   214)\n+   (UNSPEC_REALIGN_LOAD 215)\n+   (UNSPEC_REDUC_PLUS   217)\n+   (UNSPEC_VECSH        219)\n    (UNSPEC_VCOND_V4SI   301)\n    (UNSPEC_VCOND_V4SF   302)\n    (UNSPEC_VCOND_V8HI   303)\n@@ -49,6 +127,14 @@\n    (UNSPEC_VCONDU_V16QI 307)\n    ])\n \n+(define_constants\n+  [(UNSPECV_SET_VRSAVE   30)\n+   (UNSPECV_MTVSCR      186)\n+   (UNSPECV_MFVSCR      187)\n+   (UNSPECV_DSSALL      188)\n+   (UNSPECV_DSS         189)\n+  ])\n+\n ;; Vec int modes\n (define_mode_macro VI [V4SI V8HI V16QI])\n ;; Short vec in modes\n@@ -181,7 +267,7 @@\n \n (define_insn \"get_vrsave_internal\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(reg:SI 109)] 214))]\n+\t(unspec:SI [(reg:SI 109)] UNSPEC_GET_VRSAVE))]\n   \"TARGET_ALTIVEC\"\n {\n   if (TARGET_MACHO)\n@@ -195,7 +281,7 @@\n   [(match_parallel 0 \"vrsave_operation\"\n      [(set (reg:SI 109)\n \t   (unspec_volatile:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t\t\t(reg:SI 109)] 30))])]\n+\t\t\t\t(reg:SI 109)] UNSPECV_SET_VRSAVE))])]\n   \"TARGET_ALTIVEC\"\n {\n   if (TARGET_MACHO)\n@@ -245,15 +331,17 @@\n (define_insn \"altivec_vaddcuw\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 35))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VADDCUW))]\n   \"TARGET_ALTIVEC\"\n   \"vaddcuw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddu<VI_char>s\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 36))\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VADDU))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vaddu<VI_char>s %0,%1,%2\"\n@@ -262,7 +350,8 @@\n (define_insn \"altivec_vadds<VI_char>s\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 37))\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VADDS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vadds<VI_char>s %0,%1,%2\"\n@@ -288,15 +377,17 @@\n (define_insn \"altivec_vsubcuw\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 124))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUBCUW))]\n   \"TARGET_ALTIVEC\"\n   \"vsubcuw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubu<VI_char>s\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 125))\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VSUBU))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsubu<VI_char>s %0,%1,%2\"\n@@ -305,7 +396,8 @@\n (define_insn \"altivec_vsubs<VI_char>s\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] UNSPEC_SUBS))\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VSUBS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsubs<VI_char>s %0,%1,%2\"\n@@ -315,15 +407,17 @@\n (define_insn \"altivec_vavgu<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 44))]\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VAVGU))]\n   \"TARGET_ALTIVEC\"\n   \"vavgu<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vavgs<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 45))]\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VAVGS))]\n   \"TARGET_ALTIVEC\"\n   \"vavgs<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -377,7 +471,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n                       (match_operand:V4SF 2 \"register_operand\" \"v\")] \n-\t               UNSPEC_VCMPGEFP))]\n+\t\t     UNSPEC_VCMPGEFP))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgefp %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n@@ -386,7 +480,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n                        (match_operand:V16QI 2 \"register_operand\" \"v\")] \n-                       UNSPEC_VCMPGTUB))]\n+\t\t      UNSPEC_VCMPGTUB))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtub %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -395,7 +489,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n                        (match_operand:V16QI 2 \"register_operand\" \"v\")] \n-                       UNSPEC_VCMPGTSB))]\n+\t\t      UNSPEC_VCMPGTSB))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtsb %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -404,7 +498,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                       (match_operand:V8HI 2 \"register_operand\" \"v\")] \n-                      UNSPEC_VCMPGTUH))]\n+\t\t     UNSPEC_VCMPGTUH))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtuh %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -413,7 +507,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                       (match_operand:V8HI 2 \"register_operand\" \"v\")] \n-                      UNSPEC_VCMPGTSH))]\n+\t\t     UNSPEC_VCMPGTSH))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtsh %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -422,7 +516,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] \n-\t              UNSPEC_VCMPGTUW))]\n+\t\t     UNSPEC_VCMPGTUW))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtuw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -431,7 +525,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] \n-\t              UNSPEC_VCMPGTSW))]\n+\t\t     UNSPEC_VCMPGTSW))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtsw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -440,7 +534,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n                       (match_operand:V4SF 2 \"register_operand\" \"v\")] \n-\t              UNSPEC_VCMPGTFP))]\n+\t\t     UNSPEC_VCMPGTFP))]\n   \"TARGET_ALTIVEC\"\n   \"vcmpgtfp %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n@@ -550,7 +644,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n \t\t      (match_operand:VIshort 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 65))]\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMSUMU))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumu<VI_char>m %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -559,7 +654,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n \t\t      (match_operand:VIshort 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 66))]\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMSUMM))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumm<VI_char>m %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -568,7 +664,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 68))]\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMSUMSHM))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumshm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -577,7 +674,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 69))\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMSUMUHS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumuhs %0,%1,%2,%3\"\n@@ -587,7 +685,8 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 70))\n+                      (match_operand:V4SI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMSUMSHS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumshs %0,%1,%2,%3\"\n@@ -647,25 +746,30 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 71))\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMHADDSHS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmhaddshs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n+\n (define_insn \"altivec_vmhraddshs\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 72))\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMHRADDSHS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmhraddshs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n+\n (define_insn \"altivec_vmladduhm\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 3 \"register_operand\" \"v\")] 73))]\n+                      (match_operand:V8HI 3 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMLADDUHM))]\n   \"TARGET_ALTIVEC\"\n   \"vmladduhm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -839,63 +943,71 @@\n (define_insn \"altivec_vmuleub\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 2 \"register_operand\" \"v\")] 83))]\n+                      (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULEUB))]\n   \"TARGET_ALTIVEC\"\n   \"vmuleub %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmulesb\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 2 \"register_operand\" \"v\")] 84))]\n+                      (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULESB))]\n   \"TARGET_ALTIVEC\"\n   \"vmulesb %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmuleuh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 85))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULEUH))]\n   \"TARGET_ALTIVEC\"\n   \"vmuleuh %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmulesh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 86))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULESH))]\n   \"TARGET_ALTIVEC\"\n   \"vmulesh %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmuloub\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 2 \"register_operand\" \"v\")] 87))]\n+                      (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULOUB))]\n   \"TARGET_ALTIVEC\"\n   \"vmuloub %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmulosb\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 2 \"register_operand\" \"v\")] 88))]\n+                      (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULOSB))]\n   \"TARGET_ALTIVEC\"\n   \"vmulosb %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmulouh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 89))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULOUH))]\n   \"TARGET_ALTIVEC\"\n   \"vmulouh %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmulosh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 90))]\n+                      (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VMULOSH))]\n   \"TARGET_ALTIVEC\"\n   \"vmulosh %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -961,31 +1073,35 @@\n (define_insn \"altivec_vpkuhum\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 93))]\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VPKUHUM))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhum %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkuwum\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 94))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKUWUM))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwum %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkpx\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 95))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKPX))]\n   \"TARGET_ALTIVEC\"\n   \"vpkpx %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vpkuhss\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 96))\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VPKUHSS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhss %0,%1,%2\"\n@@ -994,7 +1110,8 @@\n (define_insn \"altivec_vpkshss\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 97))\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VPKSHSS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshss %0,%1,%2\"\n@@ -1003,7 +1120,8 @@\n (define_insn \"altivec_vpkuwss\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 98))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKUWSS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwss %0,%1,%2\"\n@@ -1012,7 +1130,8 @@\n (define_insn \"altivec_vpkswss\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 99))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKSWSS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswss %0,%1,%2\"\n@@ -1021,7 +1140,8 @@\n (define_insn \"altivec_vpkuhus\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 100))\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VPKUHUS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhus %0,%1,%2\"\n@@ -1030,7 +1150,8 @@\n (define_insn \"altivec_vpkshus\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")] 101))\n+                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VPKSHUS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshus %0,%1,%2\"\n@@ -1039,7 +1160,8 @@\n (define_insn \"altivec_vpkuwus\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 102))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKUWUS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwus %0,%1,%2\"\n@@ -1048,7 +1170,8 @@\n (define_insn \"altivec_vpkswus\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 103))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VPKSWUS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswus %0,%1,%2\"\n@@ -1057,39 +1180,44 @@\n (define_insn \"altivec_vrl<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 104))]\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VRL))]\n   \"TARGET_ALTIVEC\"\n   \"vrl<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsl<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 107))]\n+                    (match_operand:VI 2 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VSL))]\n   \"TARGET_ALTIVEC\"\n   \"vsl<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vslw_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SF 2 \"register_operand\" \"v\")] UNSPEC_VSLW))]\n+                      (match_operand:V4SF 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSLW))]\n   \"TARGET_ALTIVEC\"\n   \"vslw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsl\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 110))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSLV4SI))]\n   \"TARGET_ALTIVEC\"\n   \"vsl %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vslo\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 111))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSLO))]\n   \"TARGET_ALTIVEC\"\n   \"vslo %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1113,23 +1241,26 @@\n (define_insn \"altivec_vsr\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 118))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSR))]\n   \"TARGET_ALTIVEC\"\n   \"vsr %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vsro\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 119))]\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSRO))]\n   \"TARGET_ALTIVEC\"\n   \"vsro %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vsum4ubs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 131))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUM4UBS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4ubs %0,%1,%2\"\n@@ -1138,7 +1269,8 @@\n (define_insn \"altivec_vsum4s<VI_char>s\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 132))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUM4S))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4s<VI_char>s %0,%1,%2\"\n@@ -1147,7 +1279,8 @@\n (define_insn \"altivec_vsum2sws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 134))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUM2SWS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum2sws %0,%1,%2\"\n@@ -1156,7 +1289,8 @@\n (define_insn \"altivec_vsumsws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 135))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUMSWS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsumsws %0,%1,%2\"\n@@ -1192,6 +1326,16 @@\n   \"vspltw %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n+(define_insn \"*altivec_vspltsf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+\t(vec_duplicate:V4SF\n+\t (vec_select:SF (match_operand:V4SF 1 \"register_operand\" \"v\")\n+\t\t\t(parallel\n+\t\t\t [(match_operand:QI 2 \"u5bit_cint_operand\" \"i\")]))))]\n+  \"TARGET_ALTIVEC\"\n+  \"vspltw %0,%1,%2\"\n+  [(set_attr \"type\" \"vecperm\")])\n+\n (define_insn \"altivec_vspltis<VI_char>\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:VI\n@@ -1215,65 +1359,63 @@\n   \"vrfiz %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n-(define_insn \"altivec_vperm_v4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V4SF 2 \"register_operand\" \"v\")\n-\t\t      (match_operand:V16QI 3 \"register_operand\" \"v\")] 145))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n (define_insn \"altivec_vperm_<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-\t(unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:VI 2 \"register_operand\" \"v\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"v\")] 144))]\n+  [(set (match_operand:V 0 \"register_operand\" \"=v\")\n+\t(unspec:V [(match_operand:V 1 \"register_operand\" \"v\")\n+\t\t   (match_operand:V 2 \"register_operand\" \"v\")\n+\t\t   (match_operand:V16QI 3 \"register_operand\" \"v\")]\n+\t\t  UNSPEC_VPERM))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vrfip\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 148))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VRFIP))]\n   \"TARGET_ALTIVEC\"\n   \"vrfip %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vrfin\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 149))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VRFIN))]\n   \"TARGET_ALTIVEC\"\n   \"vrfin %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vrfim\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 150))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VRFIM))]\n   \"TARGET_ALTIVEC\"\n   \"vrfim %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vcfux\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-\t              (match_operand:QI 2 \"immediate_operand\" \"i\")] 151))]\n+\t              (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_VCFUX))]\n   \"TARGET_ALTIVEC\"\n   \"vcfux %0,%1,%2\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vcfsx\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-\t              (match_operand:QI 2 \"immediate_operand\" \"i\")] 152))]\n+\t              (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_VCFSX))]\n   \"TARGET_ALTIVEC\"\n   \"vcfsx %0,%1,%2\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vctuxs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 153))\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_VCTUXS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vctuxs %0,%1,%2\"\n@@ -1282,36 +1424,41 @@\n (define_insn \"altivec_vctsxs\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:QI 2 \"immediate_operand\" \"i\")] 154))\n+                      (match_operand:QI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_VCTSXS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vctsxs %0,%1,%2\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vlogefp\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 155))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VLOGEFP))]\n   \"TARGET_ALTIVEC\"\n   \"vlogefp %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vexptefp\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 156))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VEXPTEFP))]\n   \"TARGET_ALTIVEC\"\n   \"vexptefp %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vrsqrtefp\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 157))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VRSQRTEFP))]\n   \"TARGET_ALTIVEC\"\n   \"vrsqrtefp %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"altivec_vrefp\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")] 158))]\n+        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VREFP))]\n   \"TARGET_ALTIVEC\"\n   \"vrefp %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n@@ -1455,7 +1602,7 @@\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")\n                       (match_operand:V4SI 3 \"register_operand\" \"v\")] \n-\t              UNSPEC_VSEL4SI))]\n+\t\t     UNSPEC_VSEL4SI))]\n   \"TARGET_ALTIVEC\"\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1475,7 +1622,7 @@\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                       (match_operand:V8HI 2 \"register_operand\" \"v\")\n                       (match_operand:V8HI 3 \"register_operand\" \"v\")] \n-\t              UNSPEC_VSEL8HI))]\n+\t\t     UNSPEC_VSEL8HI))]\n   \"TARGET_ALTIVEC\"\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1485,85 +1632,65 @@\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n                        (match_operand:V16QI 2 \"register_operand\" \"v\")\n                        (match_operand:V16QI 3 \"register_operand\" \"v\")] \n-\t               UNSPEC_VSEL16QI))]\n+\t\t      UNSPEC_VSEL16QI))]\n   \"TARGET_ALTIVEC\"\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsldoi_v4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V4SI 2 \"register_operand\" \"v\")\n-                      (match_operand:QI 3 \"immediate_operand\" \"i\")] 163))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsldoi %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vsldoi_v4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V4SF 2 \"register_operand\" \"v\")\n-                      (match_operand:QI 3 \"immediate_operand\" \"i\")] 164))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsldoi %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vsldoi_v8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:QI 3 \"immediate_operand\" \"i\")] 165))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsldoi %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vsldoi_v16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-\t\t       (match_operand:V16QI 2 \"register_operand\" \"v\")\n-\t\t       (match_operand:QI 3 \"immediate_operand\" \"i\")] 166))]\n+(define_insn \"altivec_vsldoi_<mode>\"\n+  [(set (match_operand:V 0 \"register_operand\" \"=v\")\n+        (unspec:V [(match_operand:V 1 \"register_operand\" \"v\")\n+\t\t   (match_operand:V 2 \"register_operand\" \"v\")\n+                   (match_operand:QI 3 \"immediate_operand\" \"i\")]\n+\t\t  UNSPEC_VLSDOI))]\n   \"TARGET_ALTIVEC\"\n   \"vsldoi %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupkhsb\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")] 167))]\n+  \t(unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKHSB))]\n   \"TARGET_ALTIVEC\"\n   \"vupkhsb %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupkhpx\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")] 168))]\n+  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKHPX))]\n   \"TARGET_ALTIVEC\"\n   \"vupkhpx %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupkhsh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")] 169))]\n+  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKHSH))]\n   \"TARGET_ALTIVEC\"\n   \"vupkhsh %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupklsb\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")] 170))]\n+  \t(unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKLSB))]\n   \"TARGET_ALTIVEC\"\n   \"vupklsb %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupklpx\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")] 171))]\n+  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKLPX))]\n   \"TARGET_ALTIVEC\"\n   \"vupklpx %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vupklsh\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")] 172))]\n+  \t(unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VUPKLSH))]\n   \"TARGET_ALTIVEC\"\n   \"vupklsh %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1603,102 +1730,93 @@\n ;; We can get away with generating the opcode on the fly (%3 below)\n ;; because all the predicates have the same scheduling parameters.\n \n-(define_insn \"altivec_predicate_v4sf\"\n-  [(set (reg:CC 74)\n-\t(unspec:CC [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:V4SF 2 \"register_operand\" \"v\")\n-\t\t    (match_operand 3 \"any_operand\" \"\")] 174))\n-   (clobber (match_scratch:V4SF 0 \"=v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"%3 %0,%1,%2\"\n-[(set_attr \"type\" \"veccmp\")])\n-\n (define_insn \"altivec_predicate_<mode>\"\n   [(set (reg:CC 74)\n-\t(unspec:CC [(match_operand:VI 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:VI 2 \"register_operand\" \"v\")\n-\t\t    (match_operand 3 \"any_operand\" \"\")] 173))\n-   (clobber (match_scratch:VI 0 \"=v\"))]\n+\t(unspec:CC [(match_operand:V 1 \"register_operand\" \"v\")\n+\t\t    (match_operand:V 2 \"register_operand\" \"v\")\n+\t\t    (match_operand 3 \"any_operand\" \"\")] UNSPEC_PREDICATE))\n+   (clobber (match_scratch:V 0 \"=v\"))]\n   \"TARGET_ALTIVEC\"\n   \"%3 %0,%1,%2\"\n [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"altivec_mtvscr\"\n   [(set (reg:SI 110)\n \t(unspec_volatile:SI\n-\t [(match_operand:V4SI 0 \"register_operand\" \"v\")] 186))]\n+\t [(match_operand:V4SI 0 \"register_operand\" \"v\")] UNSPECV_MTVSCR))]\n   \"TARGET_ALTIVEC\"\n   \"mtvscr %0\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_mfvscr\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-\t(unspec_volatile:V8HI [(reg:SI 110)] 187))]\n+\t(unspec_volatile:V8HI [(reg:SI 110)] UNSPECV_MFVSCR))]\n   \"TARGET_ALTIVEC\"\n   \"mfvscr %0\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dssall\"\n-  [(unspec_volatile [(const_int 0)] 188)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_DSSALL)]\n   \"TARGET_ALTIVEC\"\n   \"dssall\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dss\"\n-  [(unspec_volatile [(match_operand:QI 0 \"immediate_operand\" \"i\")] 189)]\n+  [(unspec_volatile [(match_operand:QI 0 \"immediate_operand\" \"i\")]\n+\t\t    UNSPECV_DSS)]\n   \"TARGET_ALTIVEC\"\n   \"dss %0\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dst\"\n   [(unspec [(match_operand 0 \"register_operand\" \"b\")\n \t    (match_operand:SI 1 \"register_operand\" \"r\")\n-\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] 190)]\n+\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] UNSPEC_DST)]\n   \"TARGET_ALTIVEC && GET_MODE (operands[0]) == Pmode\"\n   \"dst %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dstt\"\n   [(unspec [(match_operand 0 \"register_operand\" \"b\")\n \t    (match_operand:SI 1 \"register_operand\" \"r\")\n-\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] 191)]\n+\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] UNSPEC_DSTT)]\n   \"TARGET_ALTIVEC && GET_MODE (operands[0]) == Pmode\"\n   \"dstt %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dstst\"\n   [(unspec [(match_operand 0 \"register_operand\" \"b\")\n \t    (match_operand:SI 1 \"register_operand\" \"r\")\n-\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] 192)]\n+\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] UNSPEC_DSTST)]\n   \"TARGET_ALTIVEC && GET_MODE (operands[0]) == Pmode\"\n   \"dstst %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_dststt\"\n   [(unspec [(match_operand 0 \"register_operand\" \"b\")\n \t    (match_operand:SI 1 \"register_operand\" \"r\")\n-\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] 193)]\n+\t    (match_operand:QI 2 \"immediate_operand\" \"i\")] UNSPEC_DSTSTT)]\n   \"TARGET_ALTIVEC && GET_MODE (operands[0]) == Pmode\"\n   \"dststt %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_lvsl\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] 194))]\n+\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] UNSPEC_LVSL))]\n   \"TARGET_ALTIVEC\"\n   \"lvsl %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"altivec_lvsr\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] 195))]\n+\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] UNSPEC_LVSR))]\n   \"TARGET_ALTIVEC\"\n   \"lvsr %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_expand \"build_vector_mask_for_load\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] 195))]\n+\t(unspec:V16QI [(match_operand 1 \"memory_operand\" \"m\")] UNSPEC_LVSR))]\n   \"TARGET_ALTIVEC\"\n   \"\n { \n@@ -1723,11 +1841,20 @@\n   [(parallel\n     [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n \t  (match_operand:VI 1 \"memory_operand\" \"m\"))\n-     (unspec [(const_int 0)] 196)])]\n+     (unspec [(const_int 0)] UNSPEC_LVE)])]\n   \"TARGET_ALTIVEC\"\n   \"lve<VI_char>x %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n+(define_insn \"*altivec_lvesfx\"\n+  [(parallel\n+    [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+\t  (match_operand:V4SF 1 \"memory_operand\" \"m\"))\n+     (unspec [(const_int 0)] UNSPEC_LVE)])]\n+  \"TARGET_ALTIVEC\"\n+  \"lvewx %0,%y1\"\n+  [(set_attr \"type\" \"vecload\")])\n+\n (define_insn \"altivec_lvxl\"\n   [(parallel\n     [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n@@ -1748,7 +1875,7 @@\n   [(parallel\n     [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n \t  (match_operand:V4SI 1 \"register_operand\" \"v\"))\n-     (unspec [(const_int 0)] 201)])]\n+     (unspec [(const_int 0)] UNSPEC_STVX)])]\n   \"TARGET_ALTIVEC\"\n   \"stvx %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n@@ -1757,7 +1884,7 @@\n   [(parallel\n     [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n \t  (match_operand:V4SI 1 \"register_operand\" \"v\"))\n-     (unspec [(const_int 0)] 202)])]\n+     (unspec [(const_int 0)] UNSPEC_STVXL)])]\n   \"TARGET_ALTIVEC\"\n   \"stvxl %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n@@ -1766,11 +1893,20 @@\n   [(parallel\n     [(set (match_operand:VI 0 \"memory_operand\" \"=m\")\n \t  (match_operand:VI 1 \"register_operand\" \"v\"))\n-     (unspec [(const_int 0)] 203)])]\n+     (unspec [(const_int 0)] UNSPEC_STVE)])]\n   \"TARGET_ALTIVEC\"\n   \"stve<VI_char>x %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n+(define_insn \"*altivec_stvesfx\"\n+  [(parallel\n+    [(set (match_operand:V4SF 0 \"memory_operand\" \"=m\")\n+\t  (match_operand:V4SF 1 \"register_operand\" \"v\"))\n+     (unspec [(const_int 0)] UNSPEC_STVE)])]\n+  \"TARGET_ALTIVEC\"\n+  \"stvewx %1,%y0\"\n+  [(set_attr \"type\" \"vecstore\")])\n+\n ;; Generate\n ;;    vspltis? SCRATCH0,0\n ;;    vsubu?m SCRATCH2,SCRATCH1,%1\n@@ -1815,7 +1951,7 @@\n    (parallel [(set (match_dup 3)\n \t\t   (unspec:VI [(match_dup 2)\n \t\t\t       (match_operand:VI 1 \"register_operand\" \"v\")]\n-\t\t\t      UNSPEC_SUBS))\n+\t\t\t      UNSPEC_VSUBS))\n               (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))])\n    (set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (smax:VI (match_dup 1) (match_dup 3)))]\n@@ -1833,7 +1969,8 @@\n (define_expand \"vec_shl_<mode>\"\n   [(set (match_operand:V 0 \"register_operand\" \"=v\")\n         (unspec:V [(match_operand:V 1 \"register_operand\" \"v\")\n-                   (match_operand:QI 2 \"reg_or_short_operand\" \"\")] 219 ))]\n+                   (match_operand:QI 2 \"reg_or_short_operand\" \"\")]\n+\t\t  UNSPEC_VECSH))]\n   \"TARGET_ALTIVEC\"\n   \"\n {\n@@ -1862,7 +1999,8 @@\n (define_expand \"vec_shr_<mode>\"\n   [(set (match_operand:V 0 \"register_operand\" \"=v\")\n         (unspec:V [(match_operand:V 1 \"register_operand\" \"v\")\n-                   (match_operand:QI 2 \"reg_or_short_operand\" \"\")] 219 ))]\n+                   (match_operand:QI 2 \"reg_or_short_operand\" \"\")]\n+\t\t  UNSPEC_VECSH))]\n   \"TARGET_ALTIVEC\"\n   \"\n {\n@@ -1886,15 +2024,17 @@\n (define_insn \"altivec_vsumsws_nomode\"\n   [(set (match_operand 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 135))\n+                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VSUMSWS))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsumsws %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_expand \"reduc_splus_<mode>\"\n   [(set (match_operand:VIshort 0 \"register_operand\" \"=v\")\n-        (unspec:VIshort [(match_operand:VIshort 1 \"register_operand\" \"v\")] 217))]\n+        (unspec:VIshort [(match_operand:VIshort 1 \"register_operand\" \"v\")]\n+\t\t\tUNSPEC_REDUC_PLUS))]\n   \"TARGET_ALTIVEC\"\n   \"\n { \n@@ -1909,7 +2049,8 @@\n \n (define_expand \"reduc_uplus_v16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")] 217))]\n+        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_REDUC_PLUS))]\n   \"TARGET_ALTIVEC\"\n   \"\n {\n@@ -1922,20 +2063,12 @@\n   DONE;\n }\")\n \n-(define_insn \"vec_realign_load_v4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SF 2 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 3 \"register_operand\" \"v\")] 216))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n (define_insn \"vec_realign_load_<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")\n-                    (match_operand:V16QI 3 \"register_operand\" \"v\")] 215))]\n+  [(set (match_operand:V 0 \"register_operand\" \"=v\")\n+        (unspec:V [(match_operand:V 1 \"register_operand\" \"v\")\n+                   (match_operand:V 2 \"register_operand\" \"v\")\n+                   (match_operand:V16QI 3 \"register_operand\" \"v\")]\n+\t\t  UNSPEC_REALIGN_LOAD))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])"}, {"sha": "3fd007c961795ce623c4da5559ef6a724a464cf2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aca4bff532e98480b7a9e9b41b9df608bd90fed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3aca4bff532e98480b7a9e9b41b9df608bd90fed", "patch": "@@ -13384,7 +13384,7 @@ generate_set_vrsave (rtx reg, rs6000_stack_t *info, int epiloguep)\n \t\t   vrsave,\n \t\t   gen_rtx_UNSPEC_VOLATILE (SImode,\n \t\t\t\t\t    gen_rtvec (2, reg, vrsave),\n-\t\t\t\t\t    30));\n+\t\t\t\t\t    UNSPECV_SET_VRSAVE));\n \n   nclobs = 1;\n "}]}