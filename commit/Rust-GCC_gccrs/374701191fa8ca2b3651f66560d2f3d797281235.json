{"sha": "374701191fa8ca2b3651f66560d2f3d797281235", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0NzAxMTkxZmE4Y2EyYjM2NTFmNjY1NjBkMmYzZDc5NzI4MTIzNQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@debian.org", "date": "2006-08-13T07:27:30Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2006-08-13T07:27:30Z"}, "message": "invoke.texi: Fix spelling errors.\n\n2006-08-13  Matthias Klose  <doko@debian.org>\n\n        * doc/invoke.texi: Fix spelling errors.\n\nFrom-SVN: r116107", "tree": {"sha": "e7eb5e7bf73e6bb46671026ff34d8930ba759b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7eb5e7bf73e6bb46671026ff34d8930ba759b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374701191fa8ca2b3651f66560d2f3d797281235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374701191fa8ca2b3651f66560d2f3d797281235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374701191fa8ca2b3651f66560d2f3d797281235", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374701191fa8ca2b3651f66560d2f3d797281235/comments", "author": null, "committer": null, "parents": [{"sha": "8cc12f955d65f1452a50df50e0384321a41be9d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc12f955d65f1452a50df50e0384321a41be9d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc12f955d65f1452a50df50e0384321a41be9d6"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d3646c16e970e2c87452b7385cd05c5d29af35e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374701191fa8ca2b3651f66560d2f3d797281235/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374701191fa8ca2b3651f66560d2f3d797281235/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=374701191fa8ca2b3651f66560d2f3d797281235", "patch": "@@ -1,3 +1,7 @@\n+2006-08-13  Matthias Klose  <doko@debian.org>\n+\n+\t* doc/invoke.texi: Fix spelling errors.\n+\n 2006-08-11  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR rtl-optimization/23454"}, {"sha": "78607d89ed2830514fef45e64c36dde82c546de0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374701191fa8ca2b3651f66560d2f3d797281235/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374701191fa8ca2b3651f66560d2f3d797281235/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=374701191fa8ca2b3651f66560d2f3d797281235", "patch": "@@ -5986,7 +5986,7 @@ Specifies maximum number of instructions out-of-line copy of self recursive inli\n function can grow into by performing recursive inlining.\n \n For functions declared inline @option{--param max-inline-insns-recursive} is\n-taken into acount.  For function not declared inline, recursive inlining\n+taken into account.  For function not declared inline, recursive inlining\n happens only when @option{-finline-functions} (included in @option{-O3}) is\n enabled and @option{--param max-inline-insns-recursive-auto} is used.  The\n default value is 450.\n@@ -5996,7 +5996,7 @@ default value is 450.\n Specifies maximum recursion depth used by the recursive inlining.\n \n For functions declared inline @option{--param max-inline-recursive-depth} is\n-taken into acount.  For function not declared inline, recursive inlining\n+taken into account.  For function not declared inline, recursive inlining\n happens only when @option{-finline-functions} (included in @option{-O3}) is\n enabled and @option{--param max-inline-recursive-depth-auto} is used.  The\n default value is 450.\n@@ -6199,7 +6199,7 @@ compile time increase with probably slightly better performance.  The default\n value is 100.\n \n @item max-cselib-memory-locations\n-The maximum number of memory locations cselib should take into acount.\n+The maximum number of memory locations cselib should take into account.\n Increasing values mean more aggressive optimization, making the compile time\n increase with probably slightly better performance.  The default value is 500.\n "}]}