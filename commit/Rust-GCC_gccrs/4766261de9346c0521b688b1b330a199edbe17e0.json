{"sha": "4766261de9346c0521b688b1b330a199edbe17e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc2NjI2MWRlOTM0NmMwNTIxYjY4OGIxYjMzMGExOTllZGJlMTdlMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-18T18:32:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-18T18:32:04Z"}, "message": "alias.c (readonly_fields_p): Remove.\n\n        * alias.c (readonly_fields_p): Remove.\n        (objects_must_conflict_p): Don't call it.\n        * tree.h (readonly_fields_p): Remove.\n        * langhooks.h (struct lang_hooks): Remove honor_readonly.\n        * langhooks-def.h (LANG_HOOKS_HONOR_READONLY): Remove.\nada/\n        * misc.c (LANG_HOOKS_HONOR_READONLY): Remove.\n\nFrom-SVN: r86200", "tree": {"sha": "90f41eb0bdc2f40d8c61d92df5f3eda61e5f3d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f41eb0bdc2f40d8c61d92df5f3eda61e5f3d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4766261de9346c0521b688b1b330a199edbe17e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4766261de9346c0521b688b1b330a199edbe17e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4766261de9346c0521b688b1b330a199edbe17e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4766261de9346c0521b688b1b330a199edbe17e0/comments", "author": null, "committer": null, "parents": [{"sha": "acccf7887ed18571bdd816a15e6ba6bc84670f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acccf7887ed18571bdd816a15e6ba6bc84670f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acccf7887ed18571bdd816a15e6ba6bc84670f04"}], "stats": {"total": 50, "additions": 12, "deletions": 38}, "files": [{"sha": "4445787e4af8f04261d0440e2e3ccbe3d7040999", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -1,3 +1,11 @@\n+2004-08-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* alias.c (readonly_fields_p): Remove.\n+\t(objects_must_conflict_p): Don't call it.\n+\t* tree.h (readonly_fields_p): Remove.\n+\t* langhooks.h (struct lang_hooks): Remove honor_readonly.\n+\t* langhooks-def.h (LANG_HOOKS_HONOR_READONLY): Remove.\n+\n 2004-08-18  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-dfa.c (add_referenced_var): Only global variables are"}, {"sha": "7bc0828143e4bbbd998b59ca85c140e336c4d5da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -1,3 +1,7 @@\n+2004-08-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* misc.c (LANG_HOOKS_HONOR_READONLY): Remove.\n+\n 2004-08-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cuintp.c (UI_To_gnu): Be more conservative with build_int_cst"}, {"sha": "58ab2b4fac7499161536b4ac8924d1e132ed9fe5", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -122,8 +122,6 @@ static tree gnat_type_max_size\t\t(tree);\n #define LANG_HOOKS_POST_OPTIONS\t\tgnat_post_options\n #undef  LANG_HOOKS_PARSE_FILE\n #define LANG_HOOKS_PARSE_FILE\t\tgnat_parse_file\n-#undef  LANG_HOOKS_HONOR_READONLY\n-#define LANG_HOOKS_HONOR_READONLY\ttrue\n #undef  LANG_HOOKS_HASH_TYPES\n #define LANG_HOOKS_HASH_TYPES\t\tfalse\n #undef  LANG_HOOKS_GETDECLS"}, {"sha": "6807ad0726b2e846f7d7d2901c0ed7361be37339", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -303,28 +303,6 @@ alias_sets_might_conflict_p (HOST_WIDE_INT set1, HOST_WIDE_INT set2)\n   return 0;\n }\n \n-\f\n-/* Return 1 if TYPE is a RECORD_TYPE, UNION_TYPE, or QUAL_UNION_TYPE and has\n-   has any readonly fields.  If any of the fields have types that\n-   contain readonly fields, return true as well.  */\n-\n-int\n-readonly_fields_p (tree type)\n-{\n-  tree field;\n-\n-  if (TREE_CODE (type) != RECORD_TYPE && TREE_CODE (type) != UNION_TYPE\n-      && TREE_CODE (type) != QUAL_UNION_TYPE)\n-    return 0;\n-\n-  for (field = TYPE_FIELDS (type); field != 0; field = TREE_CHAIN (field))\n-    if (TREE_CODE (field) == FIELD_DECL\n-\t&& (TREE_READONLY (field)\n-\t    || readonly_fields_p (TREE_TYPE (field))))\n-      return 1;\n-\n-  return 0;\n-}\n \f\n /* Return 1 if any MEM object of type T1 will always conflict (using the\n    dependency routines in this file) with any MEM object of type T2.\n@@ -342,14 +320,6 @@ objects_must_conflict_p (tree t1, tree t2)\n   if (t1 == 0 && t2 == 0)\n     return 0;\n \n-  /* If one or the other has readonly fields or is readonly,\n-     then they may not conflict.  */\n-  if ((t1 != 0 && readonly_fields_p (t1))\n-      || (t2 != 0 && readonly_fields_p (t2))\n-      || (t1 != 0 && lang_hooks.honor_readonly && TYPE_READONLY (t1))\n-      || (t2 != 0 && lang_hooks.honor_readonly && TYPE_READONLY (t2)))\n-    return 0;\n-\n   /* If they are the same type, they must conflict.  */\n   if (t1 == t2\n       /* Likewise if both are volatile.  */"}, {"sha": "d5f3a79f5e6bf7489ad219cc61f88d7bcae3ce3d", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -111,7 +111,6 @@ extern int lhd_gimplify_expr (tree *, tree *, tree *);\n #define LANG_HOOKS_SET_DECL_ASSEMBLER_NAME lhd_set_decl_assembler_name\n #define LANG_HOOKS_CAN_USE_BIT_FIELDS_P lhd_can_use_bit_fields_p\n #define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS false\n-#define LANG_HOOKS_HONOR_READONLY\tfalse\n #define LANG_HOOKS_NO_BODY_BLOCKS\tfalse\n #define LANG_HOOKS_PRINT_STATISTICS\tlhd_do_nothing\n #define LANG_HOOKS_PRINT_XNODE\t\tlhd_print_tree_nothing\n@@ -276,7 +275,6 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, \\\n   LANG_HOOKS_CAN_USE_BIT_FIELDS_P, \\\n   LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS, \\\n-  LANG_HOOKS_HONOR_READONLY, \\\n   LANG_HOOKS_NO_BODY_BLOCKS, \\\n   LANG_HOOKS_PRINT_STATISTICS, \\\n   LANG_HOOKS_PRINT_XNODE, \\"}, {"sha": "6623ff6ffe79f66da38369cf1a01e596f859ea50", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -325,9 +325,6 @@ struct lang_hooks\n      have their results reduced to the precision of the type.  */\n   bool reduce_bit_field_operations;\n \n-  /* Nonzero if TYPE_READONLY and TREE_READONLY should always be honored.  */\n-  bool honor_readonly;\n-\n   /* Nonzero if this front end does not generate a dummy BLOCK between\n      the outermost scope of the function and the FUNCTION_DECL.  See\n      is_body_block in stmt.c, and its callers.  */"}, {"sha": "6c1fa2a7810337ac0c25e3342ebce0dbf19d2159", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4766261de9346c0521b688b1b330a199edbe17e0/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4766261de9346c0521b688b1b330a199edbe17e0", "patch": "@@ -3464,7 +3464,6 @@ extern void record_component_aliases (tree);\n extern HOST_WIDE_INT get_alias_set (tree);\n extern int alias_sets_conflict_p (HOST_WIDE_INT, HOST_WIDE_INT);\n extern int alias_sets_might_conflict_p (HOST_WIDE_INT, HOST_WIDE_INT);\n-extern int readonly_fields_p (tree);\n extern int objects_must_conflict_p (tree, tree);\n \n /* In tree.c */"}]}