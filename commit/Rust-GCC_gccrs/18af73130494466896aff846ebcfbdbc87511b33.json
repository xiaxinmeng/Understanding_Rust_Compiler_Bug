{"sha": "18af73130494466896aff846ebcfbdbc87511b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhZjczMTMwNDk0NDY2ODk2YWZmODQ2ZWJjZmJkYmM4NzUxMWIzMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1997-05-13T18:45:05Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1997-05-13T18:45:05Z"}, "message": "Add prototypes for all static functions.\n\n(output_multi_immediate, int_log2): Make static.\n\nFrom-SVN: r14061", "tree": {"sha": "ae453a59b4ccf9f3822f06222590f24a5fb2b1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae453a59b4ccf9f3822f06222590f24a5fb2b1ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18af73130494466896aff846ebcfbdbc87511b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18af73130494466896aff846ebcfbdbc87511b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18af73130494466896aff846ebcfbdbc87511b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18af73130494466896aff846ebcfbdbc87511b33/comments", "author": null, "committer": null, "parents": [{"sha": "05f5b2cdf97d10cd4448a59c7d6c1b92416c8fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f5b2cdf97d10cd4448a59c7d6c1b92416c8fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f5b2cdf97d10cd4448a59c7d6c1b92416c8fcc"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "7ed629726fd9178d1e5f217c49b5fd412df10bc9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18af73130494466896aff846ebcfbdbc87511b33/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18af73130494466896aff846ebcfbdbc87511b33/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=18af73130494466896aff846ebcfbdbc87511b33", "patch": "@@ -45,12 +45,28 @@ Boston, MA 02111-1307, USA.  */\n \n /* Some function declarations.  */\n extern FILE *asm_out_file;\n-extern char *output_multi_immediate ();\n \n-HOST_WIDE_INT int_log2 PROTO ((HOST_WIDE_INT));\n+static HOST_WIDE_INT int_log2 PROTO ((HOST_WIDE_INT));\n+static char *output_multi_immediate PROTO ((rtx *, char *, char *, int,\n+\t\t\t\t\t    HOST_WIDE_INT));\n static int arm_gen_constant PROTO ((enum rtx_code, enum machine_mode,\n \t\t\t\t    HOST_WIDE_INT, rtx, rtx, int, int));\n-static int arm_naked_function_p PROTO ((tree func));\n+static int arm_naked_function_p PROTO ((tree));\n+static void init_fpa_table PROTO ((void));\n+static enum machine_mode select_dominance_cc_mode PROTO ((enum rtx_code, rtx,\n+\t\t\t\t\t\t\t  rtx, HOST_WIDE_INT));\n+static HOST_WIDE_INT add_constant PROTO ((rtx, enum machine_mode));\n+static void dump_table PROTO ((rtx));\n+static int fixit PROTO ((rtx, enum machine_mode, int));\n+static rtx find_barrier PROTO ((rtx, int));\n+static int broken_move PROTO ((rtx));\n+static char *fp_const_from_val PROTO ((REAL_VALUE_TYPE *));\n+static int eliminate_lr2ip PROTO ((rtx *));\n+static char *shift_op PROTO ((rtx, HOST_WIDE_INT *));\n+static int pattern_really_clobbers_lr PROTO ((rtx));\n+static int function_really_clobbers_lr PROTO ((rtx));\n+static void emit_multi_reg_push PROTO ((int));\n+static enum arm_cond_code get_arm_condition_code PROTO ((rtx));\n \n /*  Define the information needed to generate branch insns.  This is\n    stored from the compare operation. */\n@@ -4116,7 +4132,7 @@ output_add_immediate (operands)\n    IMMED_OP is the index of the constant slot in OPERANDS.\n    N is the constant value.  */\n \n-char *\n+static char *\n output_multi_immediate (operands, instr1, instr2, immed_op, n)\n      rtx *operands;\n      char *instr1, *instr2;\n@@ -4267,7 +4283,7 @@ shift_op (op, amountp)\n \n /* Obtain the shift from the POWER of two. */\n \n-HOST_WIDE_INT\n+static HOST_WIDE_INT\n int_log2 (power)\n      HOST_WIDE_INT power;\n {"}]}