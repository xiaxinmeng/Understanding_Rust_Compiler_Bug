{"sha": "7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjNzAxMDVkZDI0YzQwZDVlYjYwYzJmMTE5OWNjN2UwYzNhNmNkMg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-06-02T20:10:44Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-06-02T20:10:44Z"}, "message": "arm-cores.def (arm1156t2-s, [...]): Use v6t2 tuning.\n\n\tgcc/\n\t* arm-cores.def (arm1156t2-s, arm1156t2f-s): Use v6t2 tuning.\n\t(cortex-a5, cortex-a8, cortex-a15, cortex-r4, cortex-r4f, cortex-m4)\n\t(cortex-m3, cortex-m1, cortex-m0): Use cortex tuning.\n\t* config/arm/arm-protos.h (tune_params): Add prefer_constant_pool\n\tfield.\n\t* config/arm/arm.c (arm_slowmul_tune, arm_fastmul_tune)\n\t(arm_xscale_tune, arm_9e_tune, arm_cortex_a9_tune)\n\t(arm_fa726te_tune): Add prefer_constant_pool setting.\n\t(arm_v6t2_tune, arm_cortex_tune): New.\n\t* config/arm/arm.h (TARGET_USE_MOVT): Make dependent on\n\tprefer_constant_pool setting.\n\nFrom-SVN: r174577", "tree": {"sha": "ab3ae9dc284f56e1616bebb243e1a65d8081184b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab3ae9dc284f56e1616bebb243e1a65d8081184b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf79cedb1170f7c57a5d945c916dfcfc109bd22e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf79cedb1170f7c57a5d945c916dfcfc109bd22e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf79cedb1170f7c57a5d945c916dfcfc109bd22e"}], "stats": {"total": 91, "additions": 66, "deletions": 25}, "files": [{"sha": "5e97198dcbbe7143c51a3b0ea80528e25d87f483", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "patch": "@@ -1,3 +1,17 @@\n+2011-06-02  Julian Brown  <julian@codesourcery.com>\n+\n+\t* arm-cores.def (arm1156t2-s, arm1156t2f-s): Use v6t2 tuning.\n+\t(cortex-a5, cortex-a8, cortex-a15, cortex-r4, cortex-r4f, cortex-m4)\n+\t(cortex-m3, cortex-m1, cortex-m0): Use cortex tuning.\n+\t* config/arm/arm-protos.h (tune_params): Add prefer_constant_pool\n+\tfield.\n+\t* config/arm/arm.c (arm_slowmul_tune, arm_fastmul_tune)\n+\t(arm_xscale_tune, arm_9e_tune, arm_cortex_a9_tune)\n+\t(arm_fa726te_tune): Add prefer_constant_pool setting.\n+\t(arm_v6t2_tune, arm_cortex_tune): New.\n+\t* config/arm/arm.h (TARGET_USE_MOVT): Make dependent on\n+\tprefer_constant_pool setting.\n+\n 2011-06-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (standard_sse_constant_p) <case 1>:"}, {"sha": "76acc69037f3489507db80fb0c55e71a57ce063c", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "patch": "@@ -122,16 +122,16 @@ ARM_CORE(\"arm1176jz-s\",\t  arm1176jzs,\t6ZK,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"arm1176jzf-s\",  arm1176jzfs,\t6ZK,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"mpcorenovfp\",\t  mpcorenovfp,\t6K,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"mpcore\",\t  mpcore,\t6K,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n-ARM_CORE(\"arm1156t2-s\",\t  arm1156t2s,\t6T2,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n-ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, 9e)\n+ARM_CORE(\"arm1156t2-s\",\t  arm1156t2s,\t6T2,\t\t\t\t FL_LDSCHED, v6t2)\n+ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, v6t2)\n+ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n-ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, 9e)\n-ARM_CORE(\"cortex-r4\",\t  cortexr4,\t7R,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-r4f\",\t  cortexr4f,\t7R,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-r5\",\t  cortexr5,\t7R,\t\t\t\t FL_LDSCHED | FL_ARM_DIV, 9e)\n-ARM_CORE(\"cortex-m4\",\t  cortexm4,\t7EM,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-m3\",\t  cortexm3,\t7M,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-m1\",\t  cortexm1,\t6M,\t\t\t\t FL_LDSCHED, 9e)\n-ARM_CORE(\"cortex-m0\",\t  cortexm0,\t6M,\t\t\t\t FL_LDSCHED, 9e)\n+ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex)\n+ARM_CORE(\"cortex-r4\",\t  cortexr4,\t7R,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-r4f\",\t  cortexr4f,\t7R,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-r5\",\t  cortexr5,\t7R,\t\t\t\t FL_LDSCHED | FL_ARM_DIV, cortex)\n+ARM_CORE(\"cortex-m4\",\t  cortexm4,\t7EM,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-m3\",\t  cortexm3,\t7M,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-m1\",\t  cortexm1,\t6M,\t\t\t\t FL_LDSCHED, cortex)\n+ARM_CORE(\"cortex-m0\",\t  cortexm0,\t6M,\t\t\t\t FL_LDSCHED, cortex)"}, {"sha": "8e0d54d4d18f126b967722ac93afa6a41deb2928", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "patch": "@@ -224,6 +224,7 @@ struct tune_params\n   int num_prefetch_slots;\n   int l1_cache_size;\n   int l1_cache_line_size;\n+  bool prefer_constant_pool;\n };\n \n extern const struct tune_params *current_tune;"}, {"sha": "50e42b059ddc566ad5607f2548fe4204cef0d48d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 37, "deletions": 12, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "patch": "@@ -856,48 +856,73 @@ const struct tune_params arm_slowmul_tune =\n {\n   arm_slowmul_rtx_costs,\n   NULL,\n-  3,\n-  ARM_PREFETCH_NOT_BENEFICIAL\n+  3,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n const struct tune_params arm_fastmul_tune =\n {\n   arm_fastmul_rtx_costs,\n   NULL,\n-  1,\n-  ARM_PREFETCH_NOT_BENEFICIAL\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n const struct tune_params arm_xscale_tune =\n {\n   arm_xscale_rtx_costs,\n   xscale_sched_adjust_cost,\n-  2,\n-  ARM_PREFETCH_NOT_BENEFICIAL\n+  2,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n const struct tune_params arm_9e_tune =\n {\n   arm_9e_rtx_costs,\n   NULL,\n-  1,\n-  ARM_PREFETCH_NOT_BENEFICIAL\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+};\n+\n+const struct tune_params arm_v6t2_tune =\n+{\n+  arm_9e_rtx_costs,\n+  NULL,\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false\t\t\t\t\t\t/* Prefer constant pool.  */\n+};\n+\n+/* Generic Cortex tuning.  Use more specific tunings if appropriate.  */\n+const struct tune_params arm_cortex_tune =\n+{\n+  arm_9e_rtx_costs,\n+  NULL,\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n const struct tune_params arm_cortex_a9_tune =\n {\n   arm_9e_rtx_costs,\n   cortex_a9_sched_adjust_cost,\n-  1,\n-  ARM_PREFETCH_BENEFICIAL(4,32,32)\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_BENEFICIAL(4,32,32),\n+  false\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n const struct tune_params arm_fa726te_tune =\n {\n   arm_9e_rtx_costs,\n   fa726te_sched_adjust_cost,\n-  1,\n-  ARM_PREFETCH_NOT_BENEFICIAL\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true\t\t\t\t\t\t/* Prefer constant pool.  */\n };\n \n "}, {"sha": "0d16687eeec2ebbeb0ca75c4a408b01de271d0f4", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "patch": "@@ -271,7 +271,8 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n   (TARGET_32BIT && arm_arch6 && (arm_arch_notm || arm_arch7em))\n \n /* Should MOVW/MOVT be used in preference to a constant pool.  */\n-#define TARGET_USE_MOVT (arm_arch_thumb2 && !optimize_size)\n+#define TARGET_USE_MOVT \\\n+  (arm_arch_thumb2 && !optimize_size && !current_tune->prefer_constant_pool)\n \n /* We could use unified syntax for arm mode, but for now we just use it\n    for Thumb-2.  */"}]}