{"sha": "15b8e2af42168a41636186c53d1e833302195601", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTViOGUyYWY0MjE2OGE0MTYzNjE4NmM1M2QxZTgzMzMwMjE5NTYwMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-10-20T19:17:21Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-10-20T19:20:10Z"}, "message": "c++: block-scope extern decl with default args\n\nIn adding the DECL_LOCAL_DECL handling, I'd forgotten that the\nparm-decls also need cloning -- and resetting of their DECL_CONTEXT.\nAlso, any default args need droping when adding an alias, as those are\nnot propagated.  The std's not totally clear on this latter point when\nthere's no exising namespace decl, but that seems like the right thing\nand is what clang does.\n\n\tgcc/cp/\n\t* name-lookup.c (push_local_extern_decl_alias): Reconstextualize\n\talias' parm decls.  Drop any default args.\n\tgcc/testsuite/\n\t* g++.dg/lookup/local-extern.C: New.", "tree": {"sha": "afbc7517b3692877b3cda065eb72f1be29f45702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afbc7517b3692877b3cda065eb72f1be29f45702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15b8e2af42168a41636186c53d1e833302195601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b8e2af42168a41636186c53d1e833302195601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b8e2af42168a41636186c53d1e833302195601", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b8e2af42168a41636186c53d1e833302195601/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d962ef77dadea87b2bf30487bddda00c350bf0ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d962ef77dadea87b2bf30487bddda00c350bf0ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d962ef77dadea87b2bf30487bddda00c350bf0ba"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "4637427806866b176b6189fbbd5f3cecf69321d8", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b8e2af42168a41636186c53d1e833302195601/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b8e2af42168a41636186c53d1e833302195601/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=15b8e2af42168a41636186c53d1e833302195601", "patch": "@@ -2969,6 +2969,52 @@ push_local_extern_decl_alias (tree decl)\n \t{\n \t  /* No existing namespace-scope decl.  Make one.  */\n \t  alias = copy_decl (decl);\n+\t  if (TREE_CODE (alias) == FUNCTION_DECL)\n+\t    {\n+\t      /* Recontextualize the parms.  */\n+\t      for (tree *chain = &DECL_ARGUMENTS (alias);\n+\t\t   *chain; chain = &DECL_CHAIN (*chain))\n+\t\t{\n+\t\t  *chain = copy_decl (*chain);\n+\t\t  DECL_CONTEXT (*chain) = alias;\n+\t\t}\n+\n+\t      tree type = TREE_TYPE (alias);\n+\t      for (tree args = TYPE_ARG_TYPES (type);\n+\t\t   args; args = TREE_CHAIN (args))\n+\t\tif (TREE_PURPOSE (args))\n+\t\t  {\n+\t\t    /* There are default args.  Lose them.  */\n+\t\t    tree nargs = NULL_TREE;\n+\t\t    tree *chain = &nargs;\n+\t\t    for (args = TYPE_ARG_TYPES (type);\n+\t\t\t args; args = TREE_CHAIN (args))\n+\t\t      if (args == void_list_node)\n+\t\t\t{\n+\t\t\t  *chain = args;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t  *chain\n+\t\t\t    = build_tree_list (NULL_TREE, TREE_VALUE (args));\n+\t\t\t  chain = &TREE_CHAIN (*chain);\n+\t\t\t}\n+\n+\t\t    tree fn_type = build_function_type (TREE_TYPE (type), nargs);\n+\n+\t\t    fn_type = apply_memfn_quals\n+\t\t      (fn_type, type_memfn_quals (type));\n+\n+\t\t    fn_type = build_cp_fntype_variant\n+\t\t      (fn_type, type_memfn_rqual (type),\n+\t\t       TYPE_RAISES_EXCEPTIONS (type),\n+\t\t       TYPE_HAS_LATE_RETURN_TYPE (type));\n+\n+\t\t    TREE_TYPE (alias) = fn_type;\n+\t\t    break;\n+\t\t  }\n+\t    }\n \n \t  /* This is the real thing.  */\n \t  DECL_LOCAL_DECL_P (alias) = false;"}, {"sha": "1d6d8617bde267e8a17d4a19f6461a7f95fd3607", "filename": "gcc/testsuite/g++.dg/lookup/local-extern.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b8e2af42168a41636186c53d1e833302195601/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Flocal-extern.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b8e2af42168a41636186c53d1e833302195601/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Flocal-extern.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Flocal-extern.C?ref=15b8e2af42168a41636186c53d1e833302195601", "patch": "@@ -0,0 +1,13 @@\n+int foo ()\n+{\n+  extern int baz (int i = 5);\n+  return baz ();\n+}\n+\n+int baz (int i = 0);\n+\n+int bar ()\n+{\n+  extern int baz (int i = 6);\n+  return baz ();\n+}"}]}