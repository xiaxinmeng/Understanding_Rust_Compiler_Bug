{"sha": "185b307b03db20bfc7105a519ef19e2cafea7196", "node_id": "C_kwDOANBUbNoAKDE4NWIzMDdiMDNkYjIwYmZjNzEwNWE1MTllZjE5ZTJjYWZlYTcxOTY", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-11-19T08:09:54Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-12-01T18:49:44Z"}, "message": "darwin, d: Support outfile substitution for libphobos\n\nIn the gdc driver, this takes the previous fix for the Darwin D\nbootstrap, and extends it to the -static-libphobos option as well.\nRather than pushing the -static-libphobos option back onto the command\nline, the setting of SKIPOPT is instead conditionally removed.  The same\nchange has been repeated for -static-libstdc++ so there is now no need\nto call generate_option to re-add it.\n\nIn the gcc driver, -static-libphobos has been added as a common option,\nvalidated, and a new outfile substition added to config/darwin.h to\ncorrectly replace -lgphobos with libgphobos.a.\n\ngcc/ChangeLog:\n\n\t* common.opt (static-libphobos): Add option.\n\t* config/darwin.h (LINK_SPEC): Substitute -lgphobos with libgphobos.a\n\twhen linking statically.\n\t* gcc.c (driver_handle_option): Set -static-libphobos as always valid.\n\ngcc/d/ChangeLog:\n\n\t* d-spec.cc (lang_specific_driver): Set SKIPOPT on -static-libstdc++\n\tand -static-libphobos only when target supports LD_STATIC_DYNAMIC.\n\tRemove generate_option to re-add -static-libstdc++.\n\nlibphobos/ChangeLog:\n\n\t* testsuite/testsuite_flags.in: Add libphobos library directory as\n\tsearch path to --gdcldflags.", "tree": {"sha": "9476f0aac681d7d0bcf432a74d8e0258ad211f34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9476f0aac681d7d0bcf432a74d8e0258ad211f34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/185b307b03db20bfc7105a519ef19e2cafea7196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185b307b03db20bfc7105a519ef19e2cafea7196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/185b307b03db20bfc7105a519ef19e2cafea7196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185b307b03db20bfc7105a519ef19e2cafea7196/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53caa4723d8de73fe21e63ba264082f3071b2887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53caa4723d8de73fe21e63ba264082f3071b2887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53caa4723d8de73fe21e63ba264082f3071b2887"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "fa0a44f3674741f371c99ba512c17cc78e35fa7a", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=185b307b03db20bfc7105a519ef19e2cafea7196", "patch": "@@ -3531,6 +3531,10 @@ static-libgfortran\n Driver\n ; Documented for Fortran, but always accepted by driver.\n \n+static-libphobos\n+Driver\n+; Documented for D, but always accepted by driver.\n+\n static-libstdc++\n Driver\n "}, {"sha": "9895e7f99ecefd7bf42cd7a8bd17547807520a08", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=185b307b03db20bfc7105a519ef19e2cafea7196", "patch": "@@ -450,6 +450,7 @@ extern GTY(()) int darwin_ms_struct;\n                      %:replace-outfile(-lobjc libobjc-gnu.a%s); \\\n                     :%:replace-outfile(-lobjc -lobjc-gnu )}}\\\n    %{static|static-libgcc|static-libgfortran:%:replace-outfile(-lgfortran libgfortran.a%s)}\\\n+   %{static|static-libgcc|static-libphobos:%:replace-outfile(-lgphobos libgphobos.a%s)}\\\n    %{static|static-libgcc|static-libstdc++|static-libgfortran:%:replace-outfile(-lgomp libgomp.a%s)}\\\n    %{static|static-libgcc|static-libstdc++:%:replace-outfile(-lstdc++ libstdc++.a%s)}\\\n    %{force_cpusubtype_ALL:-arch %(darwin_arch)} \\"}, {"sha": "1304126a675491b5b27c455159ae3bc64e63feab", "filename": "gcc/d/d-spec.cc", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fd%2Fd-spec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fd%2Fd-spec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-spec.cc?ref=185b307b03db20bfc7105a519ef19e2cafea7196", "patch": "@@ -253,13 +253,23 @@ lang_specific_driver (cl_decoded_option **in_decoded_options,\n \n \tcase OPT_static_libstdc__:\n \t  saw_static_libcxx = true;\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+\t  /* Remove -static-libstdc++ from the command only if target supports\n+\t     LD_STATIC_DYNAMIC.  When not supported, it is left in so that a\n+\t     back-end target can use outfile substitution.  */\n \t  args[i] |= SKIPOPT;\n+#endif\n \t  break;\n \n \tcase OPT_static_libphobos:\n \t  if (phobos_library != PHOBOS_NOLINK)\n \t    phobos_library = PHOBOS_STATIC;\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+\t  /* Remove -static-libphobos from the command only if target supports\n+\t     LD_STATIC_DYNAMIC.  When not supported, it is left in so that a\n+\t     back-end target can use outfile substitution.  */\n \t  args[i] |= SKIPOPT;\n+#endif\n \t  break;\n \n \tcase OPT_shared_libphobos:\n@@ -460,20 +470,14 @@ lang_specific_driver (cl_decoded_option **in_decoded_options,\n #endif\n     }\n \n-  if (saw_libcxx || need_stdcxx)\n+  if (saw_libcxx || saw_static_libcxx || need_stdcxx)\n     {\n #ifdef HAVE_LD_STATIC_DYNAMIC\n       if (saw_static_libcxx && !static_link)\n \t{\n \t  generate_option (OPT_Wl_, LD_STATIC_OPTION, 1, CL_DRIVER,\n \t\t\t   &new_decoded_options[j++]);\n \t}\n-#else\n-      /* Push the -static-libstdc++ option back onto the command so that\n-\t a target without LD_STATIC_DYNAMIC can use outfile substitution.  */\n-      if (saw_static_libcxx && !static_link)\n-\tgenerate_option (OPT_static_libstdc__, NULL, 1, CL_DRIVER,\n-\t\t\t &new_decoded_options[j++]);\n #endif\n       if (saw_libcxx)\n \tnew_decoded_options[j++] = *saw_libcxx;"}, {"sha": "694c257310942de99b614c17499f21f07b17a0e6", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185b307b03db20bfc7105a519ef19e2cafea7196/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=185b307b03db20bfc7105a519ef19e2cafea7196", "patch": "@@ -4576,10 +4576,12 @@ driver_handle_option (struct gcc_options *opts,\n     case OPT_static_libgcc:\n     case OPT_shared_libgcc:\n     case OPT_static_libgfortran:\n+    case OPT_static_libphobos:\n     case OPT_static_libstdc__:\n       /* These are always valid, since gcc.c itself understands the\n-\t first two, gfortranspec.c understands -static-libgfortran and\n-\t g++spec.c understands -static-libstdc++ */\n+\t first two, gfortranspec.c understands -static-libgfortran,\n+\t d-spec.cc understands -static-libphobos, and g++spec.c\n+\t understands -static-libstdc++ */\n       validated = true;\n       break;\n "}, {"sha": "42053b2116315330ae917cbde226f5a19b93c380", "filename": "libphobos/testsuite/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185b307b03db20bfc7105a519ef19e2cafea7196/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185b307b03db20bfc7105a519ef19e2cafea7196/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Ftestsuite_flags.in?ref=185b307b03db20bfc7105a519ef19e2cafea7196", "patch": "@@ -46,6 +46,7 @@ case ${query} in\n     --gdcldflags)\n       GDCLDFLAGS=\"-B${BUILD_DIR}/src\n                   -B${BUILD_DIR}/libdruntime/gcc\n+                  -B${BUILD_DIR}/src/.libs\n                   -L${BUILD_DIR}/src/.libs\"\n       echo ${GDCLDFLAGS}\n       ;;"}]}