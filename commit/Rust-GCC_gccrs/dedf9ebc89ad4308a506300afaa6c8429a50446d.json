{"sha": "dedf9ebc89ad4308a506300afaa6c8429a50446d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkZjllYmM4OWFkNDMwOGE1MDYzMDBhZmFhNmM4NDI5YTUwNDQ2ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-09-11T08:09:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-09-11T08:09:59Z"}, "message": "Adjust email address", "tree": {"sha": "90cffdab77f7114ce805703018db3d0a97c217b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90cffdab77f7114ce805703018db3d0a97c217b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dedf9ebc89ad4308a506300afaa6c8429a50446d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedf9ebc89ad4308a506300afaa6c8429a50446d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dedf9ebc89ad4308a506300afaa6c8429a50446d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedf9ebc89ad4308a506300afaa6c8429a50446d/comments", "author": null, "committer": null, "parents": [{"sha": "a9c960a3bd621fc7a721e3c31c706ba736b384ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c960a3bd621fc7a721e3c31c706ba736b384ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9c960a3bd621fc7a721e3c31c706ba736b384ea"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "953f954cd32fa4254d7c8d281a8bf1225dcc3b34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedf9ebc89ad4308a506300afaa6c8429a50446d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedf9ebc89ad4308a506300afaa6c8429a50446d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dedf9ebc89ad4308a506300afaa6c8429a50446d", "patch": "@@ -3801,7 +3801,7 @@\n \t(peephole2 to remove unneded compare after CMPXCHG):\n \tNew pattern, also handle XOR zeroing and load of -1 by OR.\n \n-2020-07-16  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-07-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/i386/i386.c (ix86_compute_frame_layout): Minor tweak.\n \t(ix86_adjust_stack_and_probe): Delete.\n@@ -4525,7 +4525,7 @@\n \t* config/riscv/riscv-sr.c (riscv_remove_unneeded_save_restore_calls):\n \tAbort if any arguments on stack.\n \n-2020-07-08  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-fold.c (gimple_fold_builtin_memory_op): Do not fold if\n \teither type has reverse scalar storage order.\n@@ -4660,7 +4660,7 @@\n \t* config/cris/cris.md (\"*extopqihi\", \"*extop<mode>si<setnz>_swap\")\n \t(\"*extop<mode>si<setnz>\", \"*addxqihi_swap\"): Reinstate.\n \n-2020-07-03  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-fold.c (gimple_fold_builtin_memory_op): Fold calls that\n \twere initially created for the assignment of a variable-sized\n@@ -5161,7 +5161,7 @@\n \t* doc/standards.texi (C Language): Correct the default dialect.\n \t(C++ Language): Update the default for C++ to gnu++17.\n \n-2020-06-26  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-reassoc.c (dump_range_entry): New function.\n \t(debug_range_entry): New debug function.\n@@ -6156,7 +6156,7 @@\n \t* config/riscv/riscv.c (riscv_gpr_save_operation_p): Remove\n \tassertion and turn it into a early exit check.\n \n-2020-06-15  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_init_constructor) <AGGREGATE_TYPE>: Declare\n \tnew ENSURE_SINGLE_ACCESS constant and move variables down.  If it is\n@@ -6166,7 +6166,7 @@\n \tthe type is aggregate non-addressable, ask gimplify_init_constructor\n \twhether it can generate a single access to the target.\n \n-2020-06-15  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-sra.c (propagate_subaccesses_from_rhs): When a non-scalar\n \taccess on the LHS is replaced with a scalar access, propagate the\n@@ -7269,7 +7269,7 @@\n \t* config/gcn/gcn.opt (-mlocal-symbol-id): Delete.\n \t* config/gcn/mkoffload.c (main): Don't use -mlocal-symbol-id.\n \n-2020-06-02  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/95395\n \t* optabs.c (expand_unop): Fix bits/bytes confusion in latest change.\n@@ -7611,7 +7611,7 @@\n \tmake a nonzero adjustment to the memory offset.\n \t(b<ior,xor>hi_msx): Turn into a splitter.\n \n-2020-05-28  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-ssa-store-merging.c (merged_store_group::can_be_merged_into):\n \tFix off-by-one error.\n@@ -7730,7 +7730,7 @@\n \tfunction.\n \t(TARGET_DELEGITIMIZE_ADDRESS): New macro.\n \n-2020-05-27  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* builtin-types.def (BT_UINT128): New primitive type.\n \t(BT_FN_UINT128_UINT128): New function type."}, {"sha": "22fa76595db3cebc8936f0788c0cbf08f29ff77c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedf9ebc89ad4308a506300afaa6c8429a50446d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedf9ebc89ad4308a506300afaa6c8429a50446d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dedf9ebc89ad4308a506300afaa6c8429a50446d", "patch": "@@ -1,15 +1,15 @@\n-2020-09-10  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-09-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (set_rm_size): Do not take into account the\n \tValue_Size clause if it is not for the entity itself.\n \n-2020-09-10  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-09-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (build_subst_list): For a definition, make\n \tsure to instantiate the SAVE_EXPRs generated by the elaboration of\n \tthe constraints in front of the elaboration of the type itself.\n \n-2020-09-10  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-09-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c: Include tree-pass.h.\n \t(internal_error_function): Call emergency_dump_function.\n@@ -1815,39 +1815,39 @@\n \t* par-ch6.adb (P_Return_Object_Declaration): Set\n \tHas_Init_Expression flag.\n \n-2020-07-02  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-07-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* debug.adb (d.K): Document new usage.\n \t* fe.h (Debug_Flag_Dot_KK): Declare.\n \t* gcc-interface/decl.c (gnat_to_gnu_field): Give an error when the\n \tcomponent overlaps with the parent subtype, except with -gnatd.K.\n \n-2020-06-26  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch4.adb (Expand_Set_Membership): Expand the membership test\n \tusing left associativity instead of right associativity.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c (build_binary_op): Remove space.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gnat_to_gnu) <N_Allocator>: Minor tweaks.\n \tCall Has_Constrained_Partial_View on base type of designated type.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (gnat_write_global_declarations): Output\n \tintegral global variables first and the imported functions later.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (elaborate_expression_1): When GNAT encodings\n \tare not used, do not create a variable for debug info purposes if\n \tthe expression is itself a user-declared variable.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (DECL_RENAMED_OBJECT): Delete.\n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Always use\n@@ -1859,17 +1859,17 @@\n \tDo not deal with side-effects here.\n \t<N_Exception_Renaming_Declaration>: Likewise.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (elaborate_expression): Replace calls to\n \tIs_OK_Static_Expression with Compile_Time_Known_Value.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Set\n \tdebug type to the base type and only if the subtype is artificial.\n \n-2020-06-23  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-06-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>: Do\n \tnot test Is_Bit_Packed_Array in the memset path.\n@@ -7825,7 +7825,7 @@\n \n \t* gnatvsn.ads: Bump Library_Version to 11.\n \n-2020-05-26  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+2020-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/95333\n \t* gcc-interface/decl.c (gnat_to_gnu_param): Never make a variant of"}]}