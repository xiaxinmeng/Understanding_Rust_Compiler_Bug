{"sha": "183490ecc14e04250a765c89b74b62eea2c224c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgzNDkwZWNjMTRlMDQyNTBhNzY1Yzg5Yjc0YjYyZWVhMmMyMjRjMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-01-23T02:02:21Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-01-23T02:02:21Z"}, "message": "messages.html: Remove angle brackets.\n\n\n2002-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* docs/html/22_locale/messages.html: Remove angle brackets.\n\t* docs/html/17_intro/TODO: Add.\n\nFrom-SVN: r49119", "tree": {"sha": "bf573910ceeabdd326d5c9f0e471c06d7556990f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf573910ceeabdd326d5c9f0e471c06d7556990f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/183490ecc14e04250a765c89b74b62eea2c224c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183490ecc14e04250a765c89b74b62eea2c224c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183490ecc14e04250a765c89b74b62eea2c224c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183490ecc14e04250a765c89b74b62eea2c224c3/comments", "author": null, "committer": null, "parents": [{"sha": "38979c658769ad5aa7f3605ce5d85a3852f866d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38979c658769ad5aa7f3605ce5d85a3852f866d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38979c658769ad5aa7f3605ce5d85a3852f866d0"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "4776d8c4f804d6b9f577f181c173dacad89f96dc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=183490ecc14e04250a765c89b74b62eea2c224c3", "patch": "@@ -1,3 +1,8 @@\n+2002-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* docs/html/22_locale/messages.html: Remove angle brackets.\n+\t* docs/html/17_intro/TODO: Add.\n+\t\n 2002-01-22  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/ios_manip_basefield.cc: Enable test02."}, {"sha": "bb96d55e294c55d3e0ce02e1257be5b81e3b002c", "filename": "libstdc++-v3/docs/html/17_intro/TODO", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FTODO?ref=183490ecc14e04250a765c89b74b62eea2c224c3", "patch": "@@ -1,3 +1,20 @@\n+- do doxygen manpages\n+\n+- implement __convert_to_v and __convert_from_v without \"C\" library\n+functions and and LANG environment variable dependencies.\n+\n+- use localedata to implement generic named (non-MT-safe) locales?\n+Figure out a way to use ICU data, like libjava?\n+\n+- tuning for executable size, compilation speed, startup allocation,\n+executable speed.\n+\n+- benchmarking addition to the testsuite that does the above.\n+\n+- thread testing addition to the testsuite.\n+\n+- implement symbol versioning for ELF targets.\n+\n - exception specifications need to be reviewed for all parts of the\n library support and utility areas, particularly <new>. \n \n@@ -41,16 +58,6 @@ needs to be drawn throughout the entire STL implementation.\n is still subject to some debate on the library issues list, so I\n suggest punting till the dust clears.\n \n-- complex<float> seems to be the single largest source of internal\n-compiler errors when compiling the c++ library across non-x86\n-platforms. Somebody needs to make sure the complex support builtin to\n-gcc is actually working. Just as a \"for-instance\" these things give ICEs:\n-class complex<float>& complex<float>::operator-=<float>(const complex<float> &)\n-class complex<float>& complex<float>::operator/=<float>(const complex<float> &)\n-class complex<float>& complex<float>::operator+=<float>(const complex<float> &)\n-class complex<float>& complex<float>::operator-=<float>(const complex<float> &)\n-class complex<float>& complex<float>::operator*=<float>(const complex<float> &)\n-\n - Protect valarray::result_type (not Standard) and make it work with\n   the various helper classes.\n \n@@ -82,8 +89,6 @@ sources, with macro-guards.\n \n - add feature-test macros for non-standard extensions\n \n-- move major extensions into separate namespace (e.g. stl::)\n-\n - create MT abstraction layer\n \n - add MT support for locale, string, istream, ostream"}, {"sha": "6888c72a980b42a9e4138b0b684697831481dc13", "filename": "libstdc++-v3/docs/html/22_locale/messages.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183490ecc14e04250a765c89b74b62eea2c224c3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html?ref=183490ecc14e04250a765c89b74b62eea2c224c3", "patch": "@@ -39,7 +39,7 @@ <h2>\n The public member functions are:\n \n <p>\n-<code>catalog open(const basic_string<char>&, const locale&) const</code>\n+<code>catalog open(const string&, const locale&) const</code>\n \n <p>\n <code>string_type get(catalog, int, int, const string_type&) const</code>\n@@ -51,7 +51,7 @@ <h2>\n While the virtual functions are:\n \n <p>\n-<code>catalog do_open(const basic_string<char>&, const locale&) const</code>\n+<code>catalog do_open(const string&, const locale&) const</code>\n <BLOCKQUOTE>\n <I>\n -1- Returns: A value that may be passed to get() to retrieve a"}]}