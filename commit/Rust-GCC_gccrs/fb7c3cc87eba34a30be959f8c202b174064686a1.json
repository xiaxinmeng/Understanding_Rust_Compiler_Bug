{"sha": "fb7c3cc87eba34a30be959f8c202b174064686a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI3YzNjYzg3ZWJhMzRhMzBiZTk1OWY4YzIwMmIxNzQwNjQ2ODZhMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-07T12:59:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-07T12:59:05Z"}, "message": "re PR lto/53195 (ICE seg fault in lto (in set_is_used (tp=Unhandled dwarf expression opcode 0xf3 ) at ../.././gcc/tree-flow-inline.h:567))\n\n2012-05-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53195\n\t* tree-inline.c (setup_one_parameter): Properly add referenced\n\tvars from the parameters new known value.\n\nFrom-SVN: r187235", "tree": {"sha": "5e462c295d8eed0f315faa926d6272ff53f3c01d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e462c295d8eed0f315faa926d6272ff53f3c01d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb7c3cc87eba34a30be959f8c202b174064686a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7c3cc87eba34a30be959f8c202b174064686a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb7c3cc87eba34a30be959f8c202b174064686a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7c3cc87eba34a30be959f8c202b174064686a1/comments", "author": null, "committer": null, "parents": [{"sha": "75647adecab60e14e0d5473245c338ed2c3a846e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75647adecab60e14e0d5473245c338ed2c3a846e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75647adecab60e14e0d5473245c338ed2c3a846e"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "dd7073b7448dd3a875829589c58814a983dec11c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7c3cc87eba34a30be959f8c202b174064686a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7c3cc87eba34a30be959f8c202b174064686a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb7c3cc87eba34a30be959f8c202b174064686a1", "patch": "@@ -1,12 +1,18 @@\n+2012-05-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53195\n+\t* tree-inline.c (setup_one_parameter): Properly add referenced\n+\tvars from the parameters new known value.\n+\n 2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/m68k/m68k.c (m68k_sched_branch_type): Remove.\n \t(sched_branch_type): Remove.\n \t(m68k_sched_md_init_global): Don't allocate it.\n \t(m68k_sched_md_finish_global): Don't free it.\n \t* config/m68k/m68k.h (m68k_sched_branch_type): Remove prototype.\n-\t* config/m68k/m68k.md: Set the type of insns using m68k_sched_branch_type\n-\tto bcc directly.\n+\t* config/m68k/m68k.md: Set the type of insns using\n+\tm68k_sched_branch_type to bcc directly.\n \n 2012-05-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n "}, {"sha": "057087e62a6a838055bf883be2f6ab611d7494ef", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7c3cc87eba34a30be959f8c202b174064686a1/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7c3cc87eba34a30be959f8c202b174064686a1/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=fb7c3cc87eba34a30be959f8c202b174064686a1", "patch": "@@ -2608,6 +2608,17 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n   /* Make gimplifier happy about this variable.  */\n   DECL_SEEN_IN_BIND_EXPR_P (var) = 1;\n \n+  /* We are eventually using the value - make sure all variables\n+     referenced therein are properly recorded.  */\n+  if (value\n+      && gimple_in_ssa_p (cfun)\n+      && TREE_CODE (value) == ADDR_EXPR)\n+    {\n+      tree base = get_base_address (TREE_OPERAND (value, 0));\n+      if (base && TREE_CODE (base) == VAR_DECL)\n+\tadd_referenced_var (base);\n+    }\n+\n   /* If the parameter is never assigned to, has no SSA_NAMEs created,\n      we would not need to create a new variable here at all, if it\n      weren't for debug info.  Still, we can just use the argument"}]}