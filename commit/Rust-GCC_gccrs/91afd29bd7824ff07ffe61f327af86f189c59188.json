{"sha": "91afd29bd7824ff07ffe61f327af86f189c59188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhZmQyOWJkNzgyNGZmMDdmZmU2MWYzMjdhZjg2ZjE4OWM1OTE4OA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2011-12-29T15:11:47Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2011-12-29T15:11:47Z"}, "message": "sh.h (BRANCH_COST): Use sh_branch_cost variable.\n\n\t* config/sh/sh.h (BRANCH_COST): Use sh_branch_cost variable.\n\t* config/sh/sh.c (sh_option_override): Simplify sh_branch_cost\n        expression.\n\nFrom-SVN: r182723", "tree": {"sha": "152af211039307c483688cc0c0cdb9a5a2718e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/152af211039307c483688cc0c0cdb9a5a2718e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91afd29bd7824ff07ffe61f327af86f189c59188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91afd29bd7824ff07ffe61f327af86f189c59188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91afd29bd7824ff07ffe61f327af86f189c59188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91afd29bd7824ff07ffe61f327af86f189c59188/comments", "author": null, "committer": null, "parents": [{"sha": "81ed42d3192f06bd5986c88542497854f123fcb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ed42d3192f06bd5986c88542497854f123fcb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ed42d3192f06bd5986c88542497854f123fcb3"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "4c8ff343f3640570e66e0fd682340689142e82b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91afd29bd7824ff07ffe61f327af86f189c59188", "patch": "@@ -1,3 +1,9 @@\n+2011-12-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.h (BRANCH_COST): Use sh_branch_cost variable.\n+\t* config/sh/sh.c (sh_option_override): Simplify sh_branch_cost\n+        expression.\t\n+\n 2011-12-28  Ian Lance Taylor  <iant@google.com>\n \n \t* dwarf2out.c (gen_compile_unit_die): Use DW_LANG_Go for Go."}, {"sha": "744c49a5fa83d3dfa39d48ed66958264f4e48650", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=91afd29bd7824ff07ffe61f327af86f189c59188", "patch": "@@ -724,8 +724,15 @@ sh_option_override (void)\n   else\n     sh_divsi3_libfunc = \"__sdivsi3\";\n   if (sh_branch_cost == -1)\n-    sh_branch_cost\n-      = TARGET_SH5 ? 1 : ! TARGET_SH2 || TARGET_HARD_SH4 ? 2 : 1;\n+    {\n+      sh_branch_cost = 1;\n+\n+      /*  The SH1 does not have delay slots, hence we get a pipeline stall\n+\t  at every branch.  The SH4 is superscalar, so the single delay slot\n+\t  is not sufficient to keep both pipelines filled.  */\n+      if (! TARGET_SH2 || TARGET_HARD_SH4)\n+\tsh_branch_cost = 2;\n+    }\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     if (! VALID_REGISTER_P (regno))"}, {"sha": "0f06fb8de2402ddd739228da922e337aed2ea45c", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afd29bd7824ff07ffe61f327af86f189c59188/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=91afd29bd7824ff07ffe61f327af86f189c59188", "patch": "@@ -2088,12 +2088,8 @@ struct sh_args {\n    different code that does fewer memory accesses.  */\n \n /* A C expression for the cost of a branch instruction.  A value of 1\n-   is the default; other values are interpreted relative to that.\n-   The SH1 does not have delay slots, hence we get a pipeline stall\n-   at every branch.  The SH4 is superscalar, so the single delay slot\n-   is not sufficient to keep both pipelines filled.  */\n-#define BRANCH_COST(speed_p, predictable_p) \\\n-\t(TARGET_SH5 ? 1 : ! TARGET_SH2 || TARGET_HARD_SH4 ? 2 : 1)\n+   is the default; other values are interpreted relative to that.  */\n+#define BRANCH_COST(speed_p, predictable_p) sh_branch_cost\n \f\n /* Assembler output control.  */\n "}]}