{"sha": "1c49a3ed0c29e904916d794f34364dee95791297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0OWEzZWQwYzI5ZTkwNDkxNmQ3OTRmMzQzNjRkZWU5NTc5MTI5Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-07T15:53:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-07T15:53:09Z"}, "message": "re PR bootstrap/80897 (gnat bootstrap broken on SPARC64/Linux)\n\n\tPR target/80897\n\t* config/sparc/sparc.c (sparc_emit_set_symbolic_const64): Deal with too\n\tlarge offsets.\n\nFrom-SVN: r251847", "tree": {"sha": "151ebe3a03fb1e57d9a6d77c08c4d1bfc86bb56d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/151ebe3a03fb1e57d9a6d77c08c4d1bfc86bb56d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c49a3ed0c29e904916d794f34364dee95791297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c49a3ed0c29e904916d794f34364dee95791297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c49a3ed0c29e904916d794f34364dee95791297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c49a3ed0c29e904916d794f34364dee95791297/comments", "author": null, "committer": null, "parents": [{"sha": "fac519741f39f1741dbf5c88dfc2a8b8e90d0007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac519741f39f1741dbf5c88dfc2a8b8e90d0007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac519741f39f1741dbf5c88dfc2a8b8e90d0007"}], "stats": {"total": 124, "additions": 122, "deletions": 2}, "files": [{"sha": "a58252e5c79dd2442e2617e9faef663ab6991ba8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -1,6 +1,13 @@\n+2017-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/80897\n+\t* config/sparc/sparc.c (sparc_emit_set_symbolic_const64): Deal with too\n+\tlarge offsets.\n+\n 2017-09-07  Carl Love  <cel@us.ibm.com>\n \n-\t* config/rs6000/vsx.md (define_insn \"*stxvl\"): Add missing argument to the sldi instruction.\n+\t* config/rs6000/vsx.md (define_insn \"*stxvl\"): Add missing argument to\n+\tthe sldi instruction.\n \n 2017-09-07  David Edelsohn  <dje.gcc@gmail.com>\n "}, {"sha": "9fe89c08d118e678da9f3c27beb45ffc4bf28c87", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -2159,9 +2159,25 @@ sparc_emit_set_const32 (rtx op0, rtx op1)\n void\n sparc_emit_set_symbolic_const64 (rtx op0, rtx op1, rtx temp)\n {\n-  rtx temp1, temp2, temp3, temp4, temp5;\n+  rtx cst, temp1, temp2, temp3, temp4, temp5;\n   rtx ti_temp = 0;\n \n+  /* Deal with too large offsets.  */\n+  if (GET_CODE (op1) == CONST\n+      && GET_CODE (XEXP (op1, 0)) == PLUS\n+      && CONST_INT_P (cst = XEXP (XEXP (op1, 0), 1))\n+      && trunc_int_for_mode (INTVAL (cst), SImode) != INTVAL (cst))\n+    {\n+      gcc_assert (!temp);\n+      temp1 = gen_reg_rtx (DImode);\n+      temp2 = gen_reg_rtx (DImode);\n+      sparc_emit_set_const64 (temp2, cst);\n+      sparc_emit_set_symbolic_const64 (temp1, XEXP (XEXP (op1, 0), 0),\n+\t\t\t\t       NULL_RTX);\n+      emit_insn (gen_rtx_SET (op0, gen_rtx_PLUS (DImode, temp1, temp2)));\n+      return;\n+    }\n+\n   if (temp && GET_MODE (temp) == TImode)\n     {\n       ti_temp = temp;"}, {"sha": "2ef3b1672164263aa6d1e60d128052e9dae36d0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -1,3 +1,8 @@\n+2017-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\t\n+\t* gnat.dg/opt67.adb: New test.\n+\t* gnat.dg/opt67_pkg.ad[sb]: New helper.\n+\n 2017-09-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/81979"}, {"sha": "20590d17ad0400532e25d9eef2b36924cfd4430d", "filename": "gcc/testsuite/gnat.dg/opt67.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67.adb?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -0,0 +1,35 @@\n+-- { dg-do run }\n+-- { dg-options \"-O\" }\n+\n+with Opt67_Pkg; use Opt67_Pkg;\n+\n+procedure Opt67 is\n+\n+  function Predef_Stream_Attr_Spec\n+    (Loc      : Source_Ptr;\n+     Tag_Typ  : Entity_Id;\n+     Name     : TSS_Name_Type) return Node_Id is\n+  begin\n+    return Predef (Loc, Make_TSS_Name (Tag_Typ, Name), Tag_Typ);\n+  end;\n+\n+  Stream_Op_TSS_Names :\n+    constant array (Integer range <>) of TSS_Name_Type :=\n+      (TSS_Stream_Read,\n+       TSS_Stream_Write,\n+       TSS_Stream_Input,\n+       TSS_Stream_Output);\n+\n+  Tag_Typ : constant Entity_Id := Entity_Id(Init);\n+  Res : constant Natural := Init;\n+  Loc : constant Source_Ptr := Source_Ptr(Init);\n+\n+begin\n+  for Op in Stream_Op_TSS_Names'Range loop\n+    if Stream_Operation_OK (Tag_Typ, Stream_Op_TSS_Names (Op)) then\n+      Append_To (Res,\n+         Predef_Stream_Attr_Spec (Loc, Tag_Typ,\n+                                  Stream_Op_TSS_Names (Op)));\n+    end if;\n+  end loop;\n+end;"}, {"sha": "4222531dd83ee79bdff443a83850e8a01e4be491", "filename": "gcc/testsuite/gnat.dg/opt67_pkg.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.adb?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -0,0 +1,29 @@\n+package body Opt67_Pkg is\n+\n+  function Make_TSS_Name (Typ : Entity_Id; Nam : TNT) return Name_Id is\n+  begin\n+    return 0;\n+  end;\n+\n+  function Stream_Operation_OK (N : Entity_Id; Name : TNT) return Boolean is\n+  begin\n+    return True;\n+  end;\n+\n+  procedure Append_To (N1 : Natural; N2 : Node_Id) is\n+  begin\n+    null;\n+  end;\n+\n+  function Predef (Loc : Source_Ptr; Name : Name_Id; E : Entity_Id)\n+    return Node_Id is\n+  begin\n+    return 0;\n+  end;\n+\n+  function Init return Natural is\n+  begin\n+    return 0;\n+  end;\n+\n+end Opt67_Pkg;"}, {"sha": "c25337167364fb972dca0e32848a150115a15a42", "filename": "gcc/testsuite/gnat.dg/opt67_pkg.ads", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c49a3ed0c29e904916d794f34364dee95791297/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt67_pkg.ads?ref=1c49a3ed0c29e904916d794f34364dee95791297", "patch": "@@ -0,0 +1,28 @@\n+package Opt67_Pkg is\n+\n+  type Source_Ptr is new Natural;\n+  type Entity_Id is new Natural;\n+  type Node_Id is new Natural;\n+  type Name_Id is new Natural;\n+\n+  type TSS_Name_Type is new String (1 .. 2);\n+  subtype TNT is TSS_Name_Type;\n+\n+  TSS_Stream_Input       : constant TNT := \"SI\";\n+  TSS_Stream_Output      : constant TNT := \"SO\";\n+  TSS_Stream_Read        : constant TNT := \"SR\";\n+  TSS_Stream_Write       : constant TNT := \"SW\";\n+  TSS_To_Any             : constant TNT := \"TA\";\n+\n+  function Make_TSS_Name (Typ : Entity_Id; Nam : TSS_Name_Type) return Name_Id;\n+\n+  function Stream_Operation_OK (N : Entity_Id; Name : TNT) return Boolean;\n+\n+  procedure Append_To (N1 : Natural; N2 : Node_Id);\n+\n+  function Predef (Loc : Source_Ptr; Name : Name_Id; E : Entity_Id)\n+    return Node_Id;\n+\n+  function Init return Natural;\n+\n+end Opt67_Pkg;"}]}