{"sha": "fea10e36471d91c13fde543bfc565e2625cac8ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhMTBlMzY0NzFkOTFjMTNmZGU1NDNiZmM1NjVlMjYyNWNhYzhlZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-10-03T19:38:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-10-03T19:38:01Z"}, "message": "decl.c (duplicate_decls): Preserve linkage flags for mere redeclarations of gnu_inline definitions.\n\n2007-10-01  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* decl.c (duplicate_decls): Preserve linkage flags for mere\n\tredeclarations of gnu_inline definitions.\n\n\t* g++.dg/ext/gnu-inline-global-redecl.C: New.\n\nFrom-SVN: r128992", "tree": {"sha": "1ae0add9e43f6aca57f3c134fe96b708789803a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ae0add9e43f6aca57f3c134fe96b708789803a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fea10e36471d91c13fde543bfc565e2625cac8ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea10e36471d91c13fde543bfc565e2625cac8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea10e36471d91c13fde543bfc565e2625cac8ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea10e36471d91c13fde543bfc565e2625cac8ee/comments", "author": null, "committer": null, "parents": [{"sha": "0064fbe9b6d395c794fc021d6dc97b40f9d7ac92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0064fbe9b6d395c794fc021d6dc97b40f9d7ac92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0064fbe9b6d395c794fc021d6dc97b40f9d7ac92"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "2efe051eb8ff42950cb222e6b99878fac55dbac3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fea10e36471d91c13fde543bfc565e2625cac8ee", "patch": "@@ -1,3 +1,8 @@\n+2007-10-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* decl.c (duplicate_decls): Preserve linkage flags for mere\n+\tredeclarations of gnu_inline definitions.\n+\n 2007-10-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/15764"}, {"sha": "83195af1b49dec3a543df7f9a778befa02c6a421", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fea10e36471d91c13fde543bfc565e2625cac8ee", "patch": "@@ -1846,24 +1846,24 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n   new_template = NULL_TREE;\n   if (DECL_LANG_SPECIFIC (newdecl) && DECL_LANG_SPECIFIC (olddecl))\n     {\n-      bool old_decl_gnu_inline;\n+      bool new_redefines_gnu_inline = false;\n \n-      if ((DECL_INTERFACE_KNOWN (olddecl)\n-\t   && TREE_CODE (olddecl) == FUNCTION_DECL)\n-\t  || (TREE_CODE (olddecl) == TEMPLATE_DECL\n-\t      && TREE_CODE (DECL_TEMPLATE_RESULT (olddecl)) == FUNCTION_DECL))\n+      if (new_defines_function\n+\t  && ((DECL_INTERFACE_KNOWN (olddecl)\n+\t       && TREE_CODE (olddecl) == FUNCTION_DECL)\n+\t      || (TREE_CODE (olddecl) == TEMPLATE_DECL\n+\t\t  && (TREE_CODE (DECL_TEMPLATE_RESULT (olddecl))\n+\t\t      == FUNCTION_DECL))))\n \t{\n \t  tree fn = olddecl;\n \n \t  if (TREE_CODE (fn) == TEMPLATE_DECL)\n \t    fn = DECL_TEMPLATE_RESULT (olddecl);\n \n-\t  old_decl_gnu_inline = GNU_INLINE_P (fn) && DECL_INITIAL (fn);\n+\t  new_redefines_gnu_inline = GNU_INLINE_P (fn) && DECL_INITIAL (fn);\n \t}\n-      else\n-\told_decl_gnu_inline = false;\n \n-      if (!old_decl_gnu_inline)\n+      if (!new_redefines_gnu_inline)\n \t{\n \t  DECL_INTERFACE_KNOWN (newdecl) |= DECL_INTERFACE_KNOWN (olddecl);\n \t  DECL_NOT_REALLY_EXTERN (newdecl) |= DECL_NOT_REALLY_EXTERN (olddecl);"}, {"sha": "017341160a91cbd2fc4c0796effcedd9eb4377f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fea10e36471d91c13fde543bfc565e2625cac8ee", "patch": "@@ -1,3 +1,7 @@\n+2007-10-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* g++.dg/ext/gnu-inline-global-redecl.C: New.\n+\n 2007-10-03  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \tPR target/33635"}, {"sha": "fc72d26fb8f9b62731431020f5c99fe39417318a", "filename": "gcc/testsuite/g++.dg/ext/gnu-inline-global-redecl.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fgnu-inline-global-redecl.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fgnu-inline-global-redecl.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fgnu-inline-global-redecl.C?ref=fea10e36471d91c13fde543bfc565e2625cac8ee", "patch": "@@ -0,0 +1,19 @@\n+/* Test __attribute__((gnu_inline)).\n+\n+   Check that we don't get out-of-line definitions for extern inline\n+   gnu_inline functions, regardless of redeclaration.\n+\n+ */\n+\n+/* { dg-do link } */\n+/* { dg-options \"-O\" } */ // such that static functions are optimized out\n+\n+#include \"gnu-inline-common.h\"\n+\n+decl(extern, fn)\n+gnuindef(fn, 0)\n+decl(extern, fn)\n+\n+int main () {\n+  fn ();\n+}"}, {"sha": "424ccbe6fcb12de1200f06d171c55194fff2aac7", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea10e36471d91c13fde543bfc565e2625cac8ee/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=fea10e36471d91c13fde543bfc565e2625cac8ee", "patch": "@@ -443,7 +443,7 @@ finished_with_expr (temp_expr_table_p tab, int version, bool free_expr)\n }\n \n \n-/* Create an expression entry fora replaceable expression.  */\n+/* Create an expression entry for a replaceable expression.  */\n \n static void \n process_replaceable (temp_expr_table_p tab, tree stmt)"}]}