{"sha": "2ead1ab91123d2af20dac4dfa551355dacfef00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhZDFhYjkxMTIzZDJhZjIwZGFjNGRmYTU1MTM1NWRhY2ZlZjAwZA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2017-05-12T10:09:50Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2017-05-12T10:09:50Z"}, "message": "Limit perf data buffer during profiling\n\nWith high -j parallelism the autofdo tests can randomly fail.\nautofdo uses Linux perf to record profiling data.\nLinux perf uses a locked perf buffer. By default it has\naround 516k buffer per uid (/proc/sys/kernel/perf_event_mlock_kb).\n\nAn individual perf record tries to grab the full 516k,\nwhich makes parallel perf record fail.\n\nThis patch limits the perf buffer for individual perf record to 8k.\nWith the default settings this allows a parallelism of the test\ncases of 16, which is hopefully good enough\n\n(if not would need to add some kind of semaphore, or ask\nthe user to increase the limit as root)\n\nI also removed an unneeded -o perf.data option\n\nThanks to Marcin to finally spotting the problem.\n\nPasses bootstrap and test on x86_64-linux. Ok for trunk?\n\ngcc/testsuite/:\n\n2017-05-12  Andi Kleen  <ak@linux.intel.com>\n\n\tPR testsuite/77684\n\t* lib/target-supports.exp (profopt-perf-wrapper):\n\tAdd -m8 option to increase parallelism.\n\nFrom-SVN: r247962", "tree": {"sha": "accb4352f0ad827a9fd48ac1961a0d84dd890504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/accb4352f0ad827a9fd48ac1961a0d84dd890504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ead1ab91123d2af20dac4dfa551355dacfef00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ead1ab91123d2af20dac4dfa551355dacfef00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ead1ab91123d2af20dac4dfa551355dacfef00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ead1ab91123d2af20dac4dfa551355dacfef00d/comments", "author": null, "committer": null, "parents": [{"sha": "1e47f02b6390db82d2e7dcc7eec3bb888c78318a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e47f02b6390db82d2e7dcc7eec3bb888c78318a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e47f02b6390db82d2e7dcc7eec3bb888c78318a"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "7b73b92759e860dc7d022d3e26e3de5b5f61b274", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ead1ab91123d2af20dac4dfa551355dacfef00d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ead1ab91123d2af20dac4dfa551355dacfef00d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ead1ab91123d2af20dac4dfa551355dacfef00d", "patch": "@@ -1,3 +1,9 @@\n+2017-05-12  Andi Kleen  <ak@linux.intel.com>\n+\n+\tPR testsuite/77684\n+\t* lib/target-supports.exp (profopt-perf-wrapper):\n+\tAdd -m8 option to increase parallelism.\n+\n 2017-05-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c-c++-common/goacc/parallel-dims-1.c: New file."}, {"sha": "ded6383cc1f9a1489cd83e1dace0c2fc48e252c3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ead1ab91123d2af20dac4dfa551355dacfef00d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ead1ab91123d2af20dac4dfa551355dacfef00d/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=2ead1ab91123d2af20dac4dfa551355dacfef00d", "patch": "@@ -522,9 +522,16 @@ proc check_effective_target_keeps_null_pointer_checks { } {\n \n # Return the autofdo profile wrapper\n \n+# Linux by default allows 516KB of perf event buffers\n+# in /proc/sys/kernel/perf_event_mlock_kb\n+# Each individual perf tries to grab it\n+# This causes problems with parallel test suite runs. Instead\n+# limit us to 8 pages (32K), which should be good enough\n+# for the small test programs. With the default settings \n+# this allows parallelism of 16 and higher of parallel gcc-auto-profile\n proc profopt-perf-wrapper { } {\n     global srcdir\n-    return \"$srcdir/../config/i386/gcc-auto-profile -o perf.data \"\n+    return \"$srcdir/../config/i386/gcc-auto-profile -o perf.data -m8 \"\n }\n \n # Return true if profiling is supported on the target."}]}