{"sha": "755407600fec4e6ec6aefbc5e9192fa278e92035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1NDA3NjAwZmVjNGU2ZWM2YWVmYmM1ZTkxOTJmYTI3OGU5MjAzNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-11-19T02:43:32Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-11-19T02:43:32Z"}, "message": "mmix.c (mmix_cc1_ignored_option): Const-ify.\n\n\t* mmix.c (mmix_cc1_ignored_option): Const-ify.\n\t(mmix_init_machine_status): Make static to match declaration.\n\t(mmix_unique_section): Const-ify.\n\t(mmix_output_quoted_string): Avoid automatic aggregate\n\tinitialization.\n\t(mmix_output_register_setting): Likewise.\n\t(mmix_output_shiftvalue_op_from_str): Likewise.\n\n\t* mmix.h (mmix_cc1_ignored_option): Const-ify.\n\t(ASM_OUTPUT_BYTE): Fix format specifier warning.\n\t(ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\nFrom-SVN: r47164", "tree": {"sha": "031d9a480d3af83f18e734e00e48fbfd4465d0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031d9a480d3af83f18e734e00e48fbfd4465d0d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/755407600fec4e6ec6aefbc5e9192fa278e92035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755407600fec4e6ec6aefbc5e9192fa278e92035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755407600fec4e6ec6aefbc5e9192fa278e92035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755407600fec4e6ec6aefbc5e9192fa278e92035/comments", "author": null, "committer": null, "parents": [{"sha": "7db43d37b15e430b710d10bf4b8530ab6eee8a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db43d37b15e430b710d10bf4b8530ab6eee8a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db43d37b15e430b710d10bf4b8530ab6eee8a57"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "a3fd98742eb601caef06a5f42ace2dbbb1f397e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=755407600fec4e6ec6aefbc5e9192fa278e92035", "patch": "@@ -1,3 +1,17 @@\n+2001-11-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mmix.c (mmix_cc1_ignored_option): Const-ify.\n+\t(mmix_init_machine_status): Make static to match declaration.\n+\t(mmix_unique_section): Const-ify.\n+\t(mmix_output_quoted_string): Avoid automatic aggregate\n+\tinitialization.\n+\t(mmix_output_register_setting): Likewise.\n+\t(mmix_output_shiftvalue_op_from_str): Likewise.\n+\n+\t* mmix.h (mmix_cc1_ignored_option): Const-ify.\n+\t(ASM_OUTPUT_BYTE): Fix format specifier warning.\n+\t(ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\n 2001-11-18  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \tPR c/4448"}, {"sha": "42ee8ed0204f5a3e2c7d96901bd73a6a62ce9d76", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=755407600fec4e6ec6aefbc5e9192fa278e92035", "patch": "@@ -70,7 +70,7 @@ rtx mmix_compare_op1;\n /* We ignore some options with arguments.  They are passed to the linker,\n    but also ends up here because they start with \"-m\".  We tell the driver\n    to store them in a variable we don't inspect.  */\n-char *mmix_cc1_ignored_option;\n+const char *mmix_cc1_ignored_option;\n \n /* Declarations of locals.  */\n \n@@ -143,7 +143,7 @@ mmix_init_expanders ()\n \n /* Set the per-function data.  */\n \n-void\n+static void\n mmix_init_machine_status (f)\n      struct function *f;\n {\n@@ -1769,7 +1769,7 @@ mmix_unique_section (decl, reloc)\n   const char *name;\n   char *string;\n   const char *prefix;\n-  static const char *prefixes[4][2] =\n+  static const char *const prefixes[4][2] =\n   {\n     { \".text.\",   \".gnu.linkonce.t.\" },\n     { \".rodata.\", \".gnu.linkonce.r.\" },\n@@ -1857,7 +1857,7 @@ mmix_output_quoted_string (stream, string, length)\n      int length;\n {\n   const char * string_end = string + length;\n-  const char unwanted_chars[] = \"\\\"[]\\\\\";\n+  static const char *const unwanted_chars = \"\\\"[]\\\\\";\n \n   /* Output \"any character except newline and double quote character\".  We\n      play it safe and avoid all control characters too.  We also do not\n@@ -2569,7 +2569,7 @@ mmix_output_register_setting (stream, regno, value, do_begin_end)\n   else\n     {\n       /* The generic case.  2..4 insns.  */\n-      const char *const higher_parts[] = {\"L\", \"ML\", \"MH\", \"H\"};\n+      static const char *const higher_parts[] = {\"L\", \"ML\", \"MH\", \"H\"};\n       const char *op = \"SET\";\n       const char *line_begin = \"\";\n       int i;\n@@ -2871,7 +2871,7 @@ mmix_output_shiftvalue_op_from_str (stream, mainop, value)\n      const char *mainop;\n      HOST_WIDEST_INT value;\n {\n-  const char *const op_part[] = {\"L\", \"ML\", \"MH\", \"H\"};\n+  static const char *const op_part[] = {\"L\", \"ML\", \"MH\", \"H\"};\n   int i;\n \n   if (! mmix_shiftable_wyde_value (value))"}, {"sha": "5d72ce938ac89d7b8ce3cd453b1e57c2e916dd0e", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755407600fec4e6ec6aefbc5e9192fa278e92035/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=755407600fec4e6ec6aefbc5e9192fa278e92035", "patch": "@@ -129,7 +129,7 @@ struct machine_function\n   %{!melf:-m mmo}%{melf:-m elf64mmix}\"\n \n /* Put unused option values here.  */\n-extern char *mmix_cc1_ignored_option;\n+extern const char *mmix_cc1_ignored_option;\n \n #define TARGET_OPTIONS\t\t\t\t\t\\\n    {{\"set-program-start=\", &mmix_cc1_ignored_option,\t\\\n@@ -1017,7 +1017,7 @@ const_section ()\t\t\t\t\t\t\\\n  } while (0)\n \n #define ASM_OUTPUT_BYTE(STREAM, VALUE) \\\n- fprintf (STREAM, \"\\tBYTE %d\\n\", (VALUE) & 255)\n+ fprintf (STREAM, \"\\tBYTE %d\\n\", (int) (VALUE) & 255)\n \n #define ASM_BYTE_OP \"\\tBYTE\\t\"\n \n@@ -1066,7 +1066,7 @@ const_section ()\t\t\t\t\t\t\\\n \n /* We insert a \":\" to disambiguate against user symbols like L5.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM) \\\n- sprintf (LABEL, \"*%s:%ld\", PREFIX, NUM)\n+ sprintf (LABEL, \"*%s:%ld\", PREFIX, (long)(NUM))\n \n /* Insert \"::\"; these are rarer than internal labels.  FIXME: Make sure no\n    \":\" is seen in the object file; we don't really want that mmixal"}]}