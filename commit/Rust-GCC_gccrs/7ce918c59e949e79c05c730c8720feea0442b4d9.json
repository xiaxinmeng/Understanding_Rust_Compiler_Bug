{"sha": "7ce918c59e949e79c05c730c8720feea0442b4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlOTE4YzU5ZTk0OWU3OWMwNWM3MzBjODcyMGZlZWEwNDQyYjRkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-27T08:03:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-27T08:03:26Z"}, "message": "targhooks.c (default_hidden_stack_protect_fail): Fall back to default_external_stack_protect_fail if...\n\n\t* targhooks.c (default_hidden_stack_protect_fail): Fall back to\n\tdefault_external_stack_protect_fail if visibility is not supported\n\tor not flag_pic.\n\t* config/i386/i386.c (ix86_stack_protect_fail): New function.\n\t(TARGET_STACK_PROTECT_FAIL): Define.\n\t* config/i386/i386.md (stack_protect_si): Change CLOBBER into\n\tSET to zero.\n\t(stack_protect_di): Likewise.  Use %k2 instead of %2 to avoid\n\tinvalid instruction xorl %rax, %rax.\n\nFrom-SVN: r101349", "tree": {"sha": "b8b719d2e127252b7a6819c53db9212636451351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8b719d2e127252b7a6819c53db9212636451351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ce918c59e949e79c05c730c8720feea0442b4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce918c59e949e79c05c730c8720feea0442b4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce918c59e949e79c05c730c8720feea0442b4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce918c59e949e79c05c730c8720feea0442b4d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d69de618e732d343228a07d797a30e39a6363f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d69de618e732d343228a07d797a30e39a6363f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d69de618e732d343228a07d797a30e39a6363f4"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "dde7e57375efa4ee6648616fae64a7ab98c48f75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ce918c59e949e79c05c730c8720feea0442b4d9", "patch": "@@ -1,3 +1,15 @@\n+2005-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* targhooks.c (default_hidden_stack_protect_fail): Fall back to\n+\tdefault_external_stack_protect_fail if visibility is not supported\n+\tor not flag_pic.\n+\t* config/i386/i386.c (ix86_stack_protect_fail): New function.\n+\t(TARGET_STACK_PROTECT_FAIL): Define.\n+\t* config/i386/i386.md (stack_protect_si): Change CLOBBER into\n+\tSET to zero.\n+\t(stack_protect_di): Likewise.  Use %k2 instead of %2 to avoid\n+\tinvalid instruction xorl %rax, %rax.\n+\n 2005-06-27  Richard Henderson  <rth@redhat.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Add __SSP_ALL__ and __SSP__."}, {"sha": "620d862f3ff55684cb07f7bdb4fc879265a27f28", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7ce918c59e949e79c05c730c8720feea0442b4d9", "patch": "@@ -906,6 +906,7 @@ static bool ix86_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n static void ix86_init_builtins (void);\n static rtx ix86_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n static const char *ix86_mangle_fundamental_type (tree);\n+static tree ix86_stack_protect_fail (void);\n \n /* This function is only used on Solaris.  */\n static void i386_solaris_elf_named_section (const char *, unsigned int, tree)\n@@ -1082,7 +1083,7 @@ static void init_ext_80387_constants (void);\n #define TARGET_MANGLE_FUNDAMENTAL_TYPE ix86_mangle_fundamental_type\n \n #undef TARGET_STACK_PROTECT_FAIL\n-#define TARGET_STACK_PROTECT_FAIL default_hidden_stack_protect_fail\n+#define TARGET_STACK_PROTECT_FAIL ix86_stack_protect_fail\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \n@@ -17564,4 +17565,17 @@ ix86_mangle_fundamental_type (tree type)\n     }\n }\n \n+/* For 32-bit code we can save PIC register setup by using\n+   __stack_chk_fail_local hidden function instead of calling\n+   __stack_chk_fail directly.  64-bit code doesn't need to setup any PIC\n+   register, so it is better to call __stack_chk_fail directly.  */\n+\n+static tree\n+ix86_stack_protect_fail (void)\n+{\n+  return TARGET_64BIT\n+\t ? default_external_stack_protect_fail ()\n+\t : default_hidden_stack_protect_fail ();\n+}\n+\n #include \"gt-i386.h\""}, {"sha": "e8af640f825ff4ddff53f22efb6b0cfa1085d116", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7ce918c59e949e79c05c730c8720feea0442b4d9", "patch": "@@ -19613,7 +19613,7 @@\n (define_insn \"stack_protect_set_si\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n \t(unspec:SI [(match_operand:SI 1 \"memory_operand\" \"m\")] UNSPEC_SP_SET))\n-   (clobber (match_scratch:SI 2 \"=r\"))\n+   (set (match_scratch:SI 2 \"=&r\") (const_int 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"\"\n   \"mov{l}\\t{%1, %2|%2, %1}\\;mov{l}\\t{%2, %0|%0, %2}\\;xor{l}\\t%2, %2\"\n@@ -19622,10 +19622,10 @@\n (define_insn \"stack_protect_set_di\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n \t(unspec:DI [(match_operand:DI 1 \"memory_operand\" \"m\")] UNSPEC_SP_SET))\n-   (clobber (match_scratch:DI 2 \"=r\"))\n+   (set (match_scratch:DI 2 \"=&r\") (const_int 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT\"\n-  \"mov{q}\\t{%1, %2|%2, %1}\\;mov{q}\\t{%2, %0|%0, %2}\\;xor{l}\\t%2, %2\"\n+  \"mov{q}\\t{%1, %2|%2, %1}\\;mov{q}\\t{%2, %0|%0, %2}\\;xor{l}\\t%k2, %k2\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_expand \"stack_protect_test\""}, {"sha": "0664f2cfed670ac22a691f50efcdf8bb70854ea9", "filename": "gcc/targhooks.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce918c59e949e79c05c730c8720feea0442b4d9/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=7ce918c59e949e79c05c730c8720feea0442b4d9", "patch": "@@ -380,9 +380,15 @@ default_external_stack_protect_fail (void)\n tree\n default_hidden_stack_protect_fail (void)\n {\n+#ifndef HAVE_GAS_HIDDEN\n+  return default_external_stack_protect_fail ();\n+#else\n   tree t = stack_chk_fail_decl;\n \n-  if (stack_chk_fail_decl == NULL_TREE)\n+  if (!flag_pic)\n+    return default_external_stack_protect_fail ();\n+\n+  if (t == NULL_TREE)\n     {\n       t = build_function_type_list (void_type_node, NULL_TREE);\n       t = build_decl (FUNCTION_DECL,\n@@ -402,6 +408,7 @@ default_hidden_stack_protect_fail (void)\n     }\n \n   return build_function_call_expr (t, NULL_TREE);\n+#endif\n }\n \n #include \"gt-targhooks.h\""}]}