{"sha": "53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkZDNiY2NhYzZmN2Y1ZDRhNTc4NzVjYTVlZTJhY2ZlMmIyMDU2Zg==", "commit": {"author": {"name": "Luo Xiong Hu", "email": "luoxhu@linux.ibm.com", "date": "2019-11-15T08:17:31Z"}, "committer": {"name": "Xiong Hu Luo", "email": "luoxhu@gcc.gnu.org", "date": "2019-11-15T08:17:31Z"}, "message": "Fix comments typo\n\ngcc/ChangeLog:\n\n\t2019-11-15  Luo Xiong Hu  <luoxhu@linux.ibm.com>\n\n\t* ipa-comdats.c: Fix comments typo.\n\t* ipa-profile.c: Fix comments typo.\n\t* tree-profile.c (gimple_gen_ic_profiler): Use the new variable\n\t__gcov_indirect_call.counters and __gcov_indirect_call.callee.\n\t(gimple_gen_ic_func_profiler): Likewise.\n\t(pass_ipa_tree_profile::gate): Fix comments typo.\n\nFrom-SVN: r278278", "tree": {"sha": "d9f9225b942bf119a926d4999a6429f80d8a87d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9f9225b942bf119a926d4999a6429f80d8a87d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aae99f7a4ff1adb7b7b557eb98eccce83a437dc"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "e5d9e38196cab5127587d0887c7b31bbb72d9e51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "patch": "@@ -1,3 +1,12 @@\n+2019-11-15  Luo Xiong Hu  <luoxhu@linux.ibm.com>\n+\n+\t* ipa-comdats.c: Fix comments typo.\n+\t* ipa-profile.c: Fix comments typo.\n+\t* tree-profile.c (gimple_gen_ic_profiler): Use the new variable\n+\t__gcov_indirect_call.counters and __gcov_indirect_call.callee.\n+\t(gimple_gen_ic_func_profiler): Likewise.\n+\t(pass_ipa_tree_profile::gate): Fix comments typo.\n+\n 2019-11-15  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n \n \t* ipa-inline.c (inline_small_functions): Update iterator of next."}, {"sha": "0672d6d6575453512be2922cec92f7d52cece26e", "filename": "gcc/ipa-comdats.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Fipa-comdats.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Fipa-comdats.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-comdats.c?ref=53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "patch": "@@ -18,7 +18,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n /* This is very simple pass that looks for static symbols that are used\n-   exlusively by symbol within one comdat group.  In this case it makes\n+   exclusively by symbol within one comdat group.  In this case it makes\n    sense to bring the symbol itself into the group to avoid dead code\n    that would arrise when the comdat group from current unit is replaced\n    by a different copy.  Consider for example:"}, {"sha": "4b28b94aaad2e9ba0270ded1c750c50591d1205d", "filename": "gcc/ipa-profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Fipa-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Fipa-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-profile.c?ref=53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "patch": "@@ -563,7 +563,7 @@ ipa_profile (void)\n   histogram.release ();\n   histogram_pool.release ();\n \n-  /* Produce speculative calls: we saved common traget from porfiling into\n+  /* Produce speculative calls: we saved common target from porfiling into\n      e->common_target_id.  Now, at link time, we can look up corresponding\n      function node and produce speculative call.  */\n "}, {"sha": "b4435b9b2a8e3eef8c16ae263e15f7cde2e1945e", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=53dd3bccac6f7f5d4a57875ca5ee2acfe2b2056f", "patch": "@@ -73,8 +73,8 @@ static GTY(()) tree ic_tuple_callee_field;\n /* Do initialization work for the edge profiler.  */\n \n /* Add code:\n-   __thread gcov*\t__gcov_indirect_call_counters; // pointer to actual counter\n-   __thread void*\t__gcov_indirect_call_callee; // actual callee address\n+   __thread gcov*\t__gcov_indirect_call.counters; // pointer to actual counter\n+   __thread void*\t__gcov_indirect_call.callee; // actual callee address\n    __thread int __gcov_function_counter; // time profiler function counter\n */\n static void\n@@ -381,7 +381,7 @@ gimple_gen_ic_profiler (histogram_value value, unsigned tag)\n       f_1 = foo;\n       __gcov_indirect_call.counters = &__gcov4.main[0];\n       PROF_9 = f_1;\n-      __gcov_indirect_call_callee = PROF_9;\n+      __gcov_indirect_call.callee = PROF_9;\n       _4 = f_1 ();\n    */\n \n@@ -444,11 +444,11 @@ gimple_gen_ic_func_profiler (void)\n \n   /* Insert code:\n \n-     if (__gcov_indirect_call_callee != NULL)\n+     if (__gcov_indirect_call.callee != NULL)\n        __gcov_indirect_call_profiler_v3 (profile_id, &current_function_decl);\n \n      The function __gcov_indirect_call_profiler_v3 is responsible for\n-     resetting __gcov_indirect_call_callee to NULL.  */\n+     resetting __gcov_indirect_call.callee to NULL.  */\n \n   gimple_stmt_iterator gsi = gsi_start_bb (cond_bb);\n   void0 = build_int_cst (ptr_type_node, 0);\n@@ -890,7 +890,7 @@ pass_ipa_tree_profile::gate (function *)\n {\n   /* When profile instrumentation, use or test coverage shall be performed.\n      But for AutoFDO, this there is no instrumentation, thus this pass is\n-     diabled.  */\n+     disabled.  */\n   return (!in_lto_p && !flag_auto_profile\n \t  && (flag_branch_probabilities || flag_test_coverage\n \t      || profile_arc_flag));"}]}