{"sha": "aca02b7e0012d382259660d8d44917e30a24dfec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhMDJiN2UwMDEyZDM4MjI1OTY2MGQ4ZDQ0OTE3ZTMwYTI0ZGZlYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-06-24T22:09:15Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-06-24T22:09:15Z"}, "message": "verify-impl.c (verify_instructions_0): Correctly handle situation where PC falls off end.\n\ngcc/java/:\n\t* verify-impl.c (verify_instructions_0): Correctly handle\n\tsituation where PC falls off end.\nlibjava/:\n\t* verify.cc (verify_instructions_0): Correctly handle situation\n\twhere PC falls off end.\n\nFrom-SVN: r101299", "tree": {"sha": "dc3cacf7c6d08a5e1aadc432281d4ad24526b9b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc3cacf7c6d08a5e1aadc432281d4ad24526b9b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca02b7e0012d382259660d8d44917e30a24dfec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca02b7e0012d382259660d8d44917e30a24dfec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca02b7e0012d382259660d8d44917e30a24dfec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca02b7e0012d382259660d8d44917e30a24dfec/comments", "author": null, "committer": null, "parents": [{"sha": "6a05987083f4bb8812017baa0e3a134d21a4095e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a05987083f4bb8812017baa0e3a134d21a4095e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a05987083f4bb8812017baa0e3a134d21a4095e"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "bfc0df12a993cfaba6dffbadde8577c3464e625d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca02b7e0012d382259660d8d44917e30a24dfec/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca02b7e0012d382259660d8d44917e30a24dfec/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=aca02b7e0012d382259660d8d44917e30a24dfec", "patch": "@@ -1,3 +1,8 @@\n+2005-06-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify-impl.c (verify_instructions_0): Correctly handle\n+\tsituation where PC falls off end.\n+\n 2005-06-23  Bryce McKinlay  <mckinlay@redhat.com>\n \n \tPR java/20697"}, {"sha": "f78763874817943830fb12cd04eb6174a7b7087a", "filename": "gcc/java/verify-impl.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca02b7e0012d382259660d8d44917e30a24dfec/gcc%2Fjava%2Fverify-impl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca02b7e0012d382259660d8d44917e30a24dfec/gcc%2Fjava%2Fverify-impl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-impl.c?ref=aca02b7e0012d382259660d8d44917e30a24dfec", "patch": "@@ -2251,10 +2251,12 @@ verify_instructions_0 (void)\n       else\n \t{\n \t  /* We only have to do this checking in the situation where\n-\t     control flow falls through from the previous\n-\t     instruction.  Otherwise merging is done at the time we\n-\t     push the branch.  */\n-\t  if (vfr->states[vfr->PC] != NULL)\n+\t     control flow falls through from the previous instruction.\n+\t     Otherwise merging is done at the time we push the branch.\n+\t     Note that we'll catch the off-the-end problem just\n+\t     below.  */\n+\t  if (vfr->PC < vfr->current_method->code_length\n+\t      && vfr->states[vfr->PC] != NULL)\n \t    {\n \t      /* We've already visited this instruction.  So merge\n \t         the states together.  It is simplest, but not most"}, {"sha": "bcc1eabc343af3556307f1986bf12ad11384f408", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca02b7e0012d382259660d8d44917e30a24dfec/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca02b7e0012d382259660d8d44917e30a24dfec/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=aca02b7e0012d382259660d8d44917e30a24dfec", "patch": "@@ -1,3 +1,8 @@\n+2005-06-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (verify_instructions_0): Correctly handle situation\n+\twhere PC falls off end.\n+\n 2005-06-24  Tom Tromey  <tromey@redhat.com>\n \n \t* interpret.cc (compile): Handle case where table entry is"}, {"sha": "167d74cf8f6390ccfd1db36b8b8d98364727e350", "filename": "libjava/verify.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca02b7e0012d382259660d8d44917e30a24dfec/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca02b7e0012d382259660d8d44917e30a24dfec/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=aca02b7e0012d382259660d8d44917e30a24dfec", "patch": "@@ -2198,8 +2198,9 @@ class _Jv_BytecodeVerifier\n \t    // We only have to do this checking in the situation where\n \t    // control flow falls through from the previous\n \t    // instruction.  Otherwise merging is done at the time we\n-\t    // push the branch.\n-\t    if (states[PC] != NULL)\n+\t    // push the branch.  Note that we'll catch the\n+\t    // off-the-end problem just below.\n+\t    if (PC < current_method->code_length && states[PC] != NULL)\n \t      {\n \t\t// We've already visited this instruction.  So merge\n \t\t// the states together.  It is simplest, but not most"}]}