{"sha": "a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5NjcyMGM0ZTM2MjllYjM5YjJmZDAyZTRjMzA1M2YwNGEzYzZkZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2007-08-30T06:51:53Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-08-30T06:51:53Z"}, "message": "s390.md (\"*add<mode>3_alc_carry1_cc\", [...]): New insn definitions.\n\n2007-08-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n\n\t* config/s390/s390.md (\"*add<mode>3_alc_carry1_cc\",\n\t\"*add<mode>3_alc_carry1_cconly\", \"*add<mode>3_alc_carry2_cc\",\n\t\"*add<mode>3_alc_carry2_cconly\"): New insn definitions.\n\nFrom-SVN: r127921", "tree": {"sha": "8070f576335ae84edef4afc0a6baf91179263211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8070f576335ae84edef4afc0a6baf91179263211"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd/comments", "author": null, "committer": null, "parents": [{"sha": "a94a76a7324487f7b2963a103da606efa1c2aaba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94a76a7324487f7b2963a103da606efa1c2aaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94a76a7324487f7b2963a103da606efa1c2aaba"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "424cb3eca6a1be8cad3aa620bc59137c47705277", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "patch": "@@ -1,3 +1,9 @@\n+2007-08-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"*add<mode>3_alc_carry1_cc\",\n+\t\"*add<mode>3_alc_carry1_cconly\", \"*add<mode>3_alc_carry2_cc\",\n+\t\"*add<mode>3_alc_carry2_cconly\"): New insn definitions.\n+\n 2007-08-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_expand_addcc): Emit canonical alc"}, {"sha": "66cf5612da61468dc70b377ddb683dadddd997cf", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a996720c4e3629eb39b2fd02e4c3053f04a3c6dd/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=a996720c4e3629eb39b2fd02e4c3053f04a3c6dd", "patch": "@@ -4306,6 +4306,75 @@\n ; add(di|si)cc instruction pattern(s).\n ;\n \n+; the following 4 patterns are used when the result of an add with\n+; carry is checked for an overflow condition\n+\n+; op1 + op2 + c < op1\n+\n+; alcr, alc, alcgr, alcg\n+(define_insn \"*add<mode>3_alc_carry1_cc\"\n+  [(set (reg CC_REGNUM)\n+        (compare\n+          (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                              (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+          (match_dup 1)))\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n+        (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n+  \"@\n+   alc<g>r\\t%0,%2\n+   alc<g>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n+\n+; alcr, alc, alcgr, alcg\n+(define_insn \"*add<mode>3_alc_carry1_cconly\"\n+  [(set (reg CC_REGNUM)\n+        (compare\n+          (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                              (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+          (match_dup 1)))\n+   (clobber (match_scratch:GPR 0 \"=d,d\"))]\n+  \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n+  \"@\n+   alc<g>r\\t%0,%2\n+   alc<g>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n+\n+; op1 + op2 + c < op2\n+\n+; alcr, alc, alcgr, alcg\n+(define_insn \"*add<mode>3_alc_carry2_cc\"\n+  [(set (reg CC_REGNUM)\n+        (compare\n+          (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                              (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+          (match_dup 2)))\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n+        (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n+  \"@\n+   alc<g>r\\t%0,%2\n+   alc<g>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n+\n+; alcr, alc, alcgr, alcg\n+(define_insn \"*add<mode>3_alc_carry2_cconly\"\n+  [(set (reg CC_REGNUM)\n+        (compare\n+          (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                              (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+          (match_dup 2)))\n+   (clobber (match_scratch:GPR 0 \"=d,d\"))]\n+  \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n+  \"@\n+   alc<g>r\\t%0,%2\n+   alc<g>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RRE,RXY\")])\n+\n ; alcr, alc, alcgr, alcg\n (define_insn \"*add<mode>3_alc_cc\"\n   [(set (reg CC_REGNUM)"}]}