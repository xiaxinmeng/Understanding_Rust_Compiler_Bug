{"sha": "531b2c7b74cf54b2cf38523143948c3e0e503e4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxYjJjN2I3NGNmNTRiMmNmMzg1MjMxNDM5NDhjM2UwZTUwM2U0YQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-04-14T13:24:43Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-04-14T13:24:43Z"}, "message": "re PR libstdc++/52839 (double free or corruption running tr1/.../default_weaktoshared.exe)\n\n\tPR libstdc++/52839\n\t* acinclude.m4 (_GLIBCXX_ATOMIC_BUILTINS): Do not depend on\n\tglibcxx_cv_atomic_long_long.\n\t* configure: Regenerate.\n\nFrom-SVN: r186453", "tree": {"sha": "8d5a01f03c69bea976f56e97e4655ab97cc068f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d5a01f03c69bea976f56e97e4655ab97cc068f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/531b2c7b74cf54b2cf38523143948c3e0e503e4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531b2c7b74cf54b2cf38523143948c3e0e503e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/531b2c7b74cf54b2cf38523143948c3e0e503e4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531b2c7b74cf54b2cf38523143948c3e0e503e4a/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01e3d28cd5de4a47cbca0d7b94ad3a0c13516dde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e3d28cd5de4a47cbca0d7b94ad3a0c13516dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e3d28cd5de4a47cbca0d7b94ad3a0c13516dde"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "f4d4c1fd471921c13a4854b2c0c5efc877cfb264", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=531b2c7b74cf54b2cf38523143948c3e0e503e4a", "patch": "@@ -1,3 +1,10 @@\n+2012-04-14  Alan Modra  <amodra@gmail.com>\n+\n+\tPR libstdc++/52839\n+\t* acinclude.m4 (_GLIBCXX_ATOMIC_BUILTINS): Do not depend on\n+\tglibcxx_cv_atomic_long_long.\n+\t* configure: Regenerate.\n+\n 2012-04-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/26_numerics/cmath/51083.cc: Move..."}, {"sha": "6632725b7eca6cb435b4c7cbae755c4217a4f8b9", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=531b2c7b74cf54b2cf38523143948c3e0e503e4a", "patch": "@@ -2861,11 +2861,10 @@ EOF\n   CXXFLAGS=\"$old_CXXFLAGS\"\n   AC_LANG_RESTORE\n \n-  # Set atomicity_dir to builtins if all of above tests pass.\n+  # Set atomicity_dir to builtins if all but the long long test above passes.\n   if test $glibcxx_cv_atomic_bool = yes \\\n      && test $glibcxx_cv_atomic_short = yes \\\n-     && test $glibcxx_cv_atomic_int = yes \\\n-     && test $glibcxx_cv_atomic_long_long = yes ; then\n+     && test $glibcxx_cv_atomic_int = yes; then\n     AC_DEFINE(_GLIBCXX_ATOMIC_BUILTINS, 1,\n     [Define if the compiler supports C++11 atomics.])\n     atomicity_dir=cpu/generic/atomicity_builtins"}, {"sha": "468b413147157fd6b54d18d5f37920568c3c9724", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531b2c7b74cf54b2cf38523143948c3e0e503e4a/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=531b2c7b74cf54b2cf38523143948c3e0e503e4a", "patch": "@@ -15446,11 +15446,10 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n-  # Set atomicity_dir to builtins if all of above tests pass.\n+  # Set atomicity_dir to builtins if all but the long long test above passes.\n   if test $glibcxx_cv_atomic_bool = yes \\\n      && test $glibcxx_cv_atomic_short = yes \\\n-     && test $glibcxx_cv_atomic_int = yes \\\n-     && test $glibcxx_cv_atomic_long_long = yes ; then\n+     && test $glibcxx_cv_atomic_int = yes; then\n \n $as_echo \"#define _GLIBCXX_ATOMIC_BUILTINS 1\" >>confdefs.h\n \n@@ -15482,7 +15481,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15485 \"configure\"\n+#line 15484 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15524,7 +15523,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15527 \"configure\"\n+#line 15526 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15558,7 +15557,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15561 \"configure\"\n+#line 15560 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };"}]}