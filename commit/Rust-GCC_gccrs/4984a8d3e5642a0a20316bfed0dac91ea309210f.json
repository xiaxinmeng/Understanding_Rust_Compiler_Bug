{"sha": "4984a8d3e5642a0a20316bfed0dac91ea309210f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk4NGE4ZDNlNTY0MmEwYTIwMzE2YmZlZDBkYWM5MWVhMzA5MjEwZg==", "commit": {"author": {"name": "Jeff Sturm", "email": "jeff.sturm@commerceone.com", "date": "2000-12-17T09:15:51Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-12-17T09:15:51Z"}, "message": "Hashtable.java (put): Remove `last' variable.\n\n2000-12-17  Jeff Sturm  <jeff.sturm@commerceone.com>\n\n\t* java/util/Hashtable.java (put): Remove `last' variable.\n\tLink new entry to head of list.\n\t* java/util/HashMap.java (put): Ditto.\n\nFrom-SVN: r38325", "tree": {"sha": "6f1bdcd4144f68f8a537512910f98f6c7141a4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f1bdcd4144f68f8a537512910f98f6c7141a4bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4984a8d3e5642a0a20316bfed0dac91ea309210f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4984a8d3e5642a0a20316bfed0dac91ea309210f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4984a8d3e5642a0a20316bfed0dac91ea309210f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4984a8d3e5642a0a20316bfed0dac91ea309210f/comments", "author": null, "committer": null, "parents": [{"sha": "c9cdc03e3c7e98720990fffa10311ba7587f5765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cdc03e3c7e98720990fffa10311ba7587f5765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9cdc03e3c7e98720990fffa10311ba7587f5765"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "7d601646d354e9b9e9286ab0267ebb56082601be", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4984a8d3e5642a0a20316bfed0dac91ea309210f", "patch": "@@ -1,3 +1,9 @@\n+2000-12-17  Jeff Sturm  <jeff.sturm@commerceone.com>\n+\n+\t* java/util/Hashtable.java (put): Remove `last' variable.\n+\tLink new entry to head of list.\n+\t* java/util/HashMap.java (put): Ditto.\n+\n 2000-12-15  Tom Tromey  <tromey@redhat.com>\n \n \t* java/util/ResourceBundle.java (trySomeGetBundle): Pass class"}, {"sha": "9acbadb6da942b48229426e4360d6153f0b39e1d", "filename": "libjava/java/util/HashMap.java", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2Fjava%2Futil%2FHashMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2Fjava%2Futil%2FHashMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashMap.java?ref=4984a8d3e5642a0a20316bfed0dac91ea309210f", "patch": "@@ -60,8 +60,8 @@\n  * @author         Jon Zeppieri\n  * @author         Jochen Hoenicke\n  * @author\t   Bryce McKinlay\n- * @version        $Revision: 1.8 $\n- * @modified       $Id: HashMap.java,v 1.8 2000/10/26 10:19:00 bryce Exp $\n+ * @version        $Revision: 1.2 $\n+ * @modified       $Id: HashMap.java,v 1.2 2000/12/11 03:47:47 bryce Exp $\n  */\n public class HashMap extends AbstractMap\n   implements Map, Cloneable, Serializable\n@@ -297,7 +297,6 @@ public Object put(Object key, Object value)\n     modCount++;\n     int idx = hash(key);\n     Entry e = buckets[idx];\n-    Entry last = e; // Final entry in bucket's linked list, if any.\n     \n     while (e != null)\n       {\n@@ -309,7 +308,6 @@ public Object put(Object key, Object value)\n \t  }\n \telse\n \t  {\n-\t    last = e;\n \t    e = e.next;\n \t  }\n       }\n@@ -324,10 +322,8 @@ public Object put(Object key, Object value)\n \n     e = new Entry(key, value);\n     \n-    if (last != null)\n-      last.next = e;\n-    else\n-      buckets[idx] = e;\n+    e.next = buckets[idx];\n+    buckets[idx] = e;\n     \n     return null;\n   }\n@@ -664,8 +660,8 @@ private void readObject(ObjectInputStream s)\n    * as per the Javasoft spec.\n    *\n    * @author       Jon Zeppieri\n-   * @version      $Revision: 1.8 $\n-   * @modified     $Id: HashMap.java,v 1.8 2000/10/26 10:19:00 bryce Exp $\n+   * @version      $Revision: 1.2 $\n+   * @modified     $Id: HashMap.java,v 1.2 2000/12/11 03:47:47 bryce Exp $\n    */\n   class HashIterator implements Iterator\n   {"}, {"sha": "c30c9adf991f252b0374f7ad4c66861dca58bd84", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4984a8d3e5642a0a20316bfed0dac91ea309210f/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=4984a8d3e5642a0a20316bfed0dac91ea309210f", "patch": "@@ -64,8 +64,8 @@\n  * @author      Jon Zeppieri\n  * @author\tWarren Levy\n  * @author      Bryce McKinlay\n- * @version     $Revision: 1.7 $\n- * @modified    $Id: Hashtable.java,v 1.7 2000/12/11 03:47:47 bryce Exp $\n+ * @version     $Revision: 1.8 $\n+ * @modified    $Id: Hashtable.java,v 1.8 2000/12/11 04:54:55 bryce Exp $\n  */\n public class Hashtable extends Dictionary \n   implements Map, Cloneable, Serializable\n@@ -295,7 +295,6 @@ public synchronized Object put(Object key, Object value)\n     modCount++;\n     int idx = hash(key);\n     HashMap.Entry e = buckets[idx];\n-    HashMap.Entry last = e; // Final entry in bucket's linked list, if any.\n     \n     // Hashtable does not accept null values. This method doesn't dereference \n     // `value' anywhere, so check for it explicitly.\n@@ -312,7 +311,6 @@ public synchronized Object put(Object key, Object value)\n \t  }\n \telse\n \t  {\n-\t    last = e;\n \t    e = e.next;\n \t  }\n       }\n@@ -327,10 +325,8 @@ public synchronized Object put(Object key, Object value)\n \n     e = new Entry(key, value);\n     \n-    if (last != null)\n-      last.next = e;\n-    else\n-      buckets[idx] = e;\n+    e.next = buckets[idx];\n+    buckets[idx] = e;\n     \n     return null;\n   }\n@@ -724,8 +720,8 @@ private void readObject(ObjectInputStream s)\n    * as per the Javasoft spec.\n    *\n    * @author       Jon Zeppieri\n-   * @version      $Revision: 1.7 $\n-   * @modified     $Id: Hashtable.java,v 1.7 2000/12/11 03:47:47 bryce Exp $\n+   * @version      $Revision: 1.8 $\n+   * @modified     $Id: Hashtable.java,v 1.8 2000/12/11 04:54:55 bryce Exp $\n    */\n   class HashIterator implements Iterator\n   {\n@@ -829,8 +825,8 @@ public void remove()\n    * hashtable during enumeration causes indeterminate results.  Don't do it!\n    *\n    * @author       Jon Zeppieri\n-   * @version      $Revision: 1.7 $\n-   * @modified $Id: Hashtable.java,v 1.7 2000/12/11 03:47:47 bryce Exp $ */\n+   * @version      $Revision: 1.8 $\n+   * @modified $Id: Hashtable.java,v 1.8 2000/12/11 04:54:55 bryce Exp $ */\n   class Enumerator implements Enumeration\n   {\n     static final int KEYS = 0;"}]}