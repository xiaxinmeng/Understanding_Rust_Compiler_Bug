{"sha": "89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5MzlmZjg1YTdjMmVkMGMxZWIzM2U1MWQyNDFmMmE2ZGRhMDY5NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-09T12:29:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-09T12:29:51Z"}, "message": "re PR c/87953 (asan: stack-buffer-overflow in vectorizable_reduction)\n\n2018-11-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87953\n\t* tree-vect-loop.c (vectorizable_reduction): For analysis\n\talways pass ops[0] to vectorizable_condition.\n\nFrom-SVN: r265964", "tree": {"sha": "69a07fb15744d86dde1bcaf44a3b76c118d250df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a07fb15744d86dde1bcaf44a3b76c118d250df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3965b35f341cc99a10876518f707740a9e912a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3965b35f341cc99a10876518f707740a9e912a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3965b35f341cc99a10876518f707740a9e912a01"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "693ac972e5ffe3e1a81c5af18fa7dec4525b51c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "patch": "@@ -1,3 +1,9 @@\n+2018-11-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87953\n+\t* tree-vect-loop.c (vectorizable_reduction): For analysis\n+\talways pass ops[0] to vectorizable_condition.\n+\n 2018-11-09  Stafford Horne  <shorne@gmail.com>\n \t    Richard Henderson  <rth@twiddle.net>\n \t    Joel Sherrill  <joel@rtems.org>"}, {"sha": "0dc84f1f9e56871bf00d6e11ea2a97e78e3ed5b8", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89939ff85a7c2ed0c1eb33e51d241f2a6dda0695/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=89939ff85a7c2ed0c1eb33e51d241f2a6dda0695", "patch": "@@ -6485,9 +6485,10 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n   if (code == COND_EXPR)\n     {\n       /* Only call during the analysis stage, otherwise we'll lose\n-\t STMT_VINFO_TYPE.  */\n+\t STMT_VINFO_TYPE.  We'll pass ops[0] as reduc_op, it's only\n+\t used as a flag during analysis.  */\n       if (!vec_stmt && !vectorizable_condition (stmt_info, gsi, NULL,\n-\t\t\t\t\t\tops[reduc_index], 0, NULL,\n+\t\t\t\t\t\tops[0], 0, NULL,\n \t\t\t\t\t\tcost_vec))\n         {\n           if (dump_enabled_p ())"}]}