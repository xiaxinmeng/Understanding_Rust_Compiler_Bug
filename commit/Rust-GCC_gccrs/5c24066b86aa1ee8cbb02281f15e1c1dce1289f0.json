{"sha": "5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMyNDA2NmI4NmFhMWVlOGNiYjAyMjgxZjE1ZTFjMWRjZTEyODlmMA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-10-10T14:53:10Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-10T14:53:10Z"}, "message": "clean up debug functions\n\n2015-10-07  Aditya Kumar  <aditya.k7@samsung.com>\n                Sebastian Pop  <s.pop@samsung.com>\n\n        * graphite-poly.c (print_iteration_domain): Remove verbosity.\n        Remove OpenScop formatting.\n        (print_iteration_domains): Same.\n        (debug_iteration_domain): Same.\n        (debug_iteration_domains): Same.\n        (print_pdr): Same.\n        (debug_pdr): Same.\n        (dump_gbb_cases): Same.\n        (dump_gbb_conditions): Same.\n        (print_pdrs): Same.\n        (debug_pdrs): Same.\n        (print_pbb_body): Same.\n        (print_pbb): Same.\n        (print_scop_params): Same.\n        (print_scop_context): Same.\n        (print_scop): Same.\n        (debug_pbb_domain): Same.\n        (debug_pbb): Same.\n        (debug_scop_context): Same.\n        (debug_scop): Same.\n        (debug_scop_params): Same.\n        * graphite-poly.h: Same.\n        * graphite.c (graphite_transform_loops): Same.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r228676", "tree": {"sha": "aa93bd441a3ae3711610bb560784e96d7a546d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa93bd441a3ae3711610bb560784e96d7a546d48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a24a3cc20548677e2547a80cddc87ed0abc340f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a24a3cc20548677e2547a80cddc87ed0abc340f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a24a3cc20548677e2547a80cddc87ed0abc340f"}], "stats": {"total": 395, "additions": 155, "deletions": 240}, "files": [{"sha": "f29a94c0144bbea6a4bd2c14c529ab69ed0d46d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "patch": "@@ -1,3 +1,30 @@\n+2015-10-10  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-poly.c (print_iteration_domain): Remove verbosity.\n+\tRemove OpenScop formatting.\n+\t(print_iteration_domains): Same.\n+\t(debug_iteration_domain): Same.\n+\t(debug_iteration_domains): Same.\n+\t(print_pdr): Same.\n+\t(debug_pdr): Same.\n+\t(dump_gbb_cases): Same.\n+\t(dump_gbb_conditions): Same.\n+\t(print_pdrs): Same.\n+\t(debug_pdrs): Same.\n+\t(print_pbb_body): Same.\n+\t(print_pbb): Same.\n+\t(print_scop_params): Same.\n+\t(print_scop_context): Same.\n+\t(print_scop): Same.\n+\t(debug_pbb_domain): Same.\n+\t(debug_pbb): Same.\n+\t(debug_scop_context): Same.\n+\t(debug_scop): Same.\n+\t(debug_scop_params): Same.\n+\t* graphite-poly.h: Same.\n+\t* graphite.c (graphite_transform_loops): Same.\n+\n 2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* function.c (stack_protect_epilogue): Remove as_a<rtx_insn *> ()"}, {"sha": "c3a14c7fdd5952ab37286dda31754dfffb6f8434", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 109, "deletions": 221, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "patch": "@@ -69,44 +69,40 @@ debug_gmp_value (mpz_t val)\n   gmp_fprintf (stderr, \"%Zd\", val);\n }\n \n-/* Prints to FILE the iteration domain of PBB, at some VERBOSITY\n-   level.  */\n+/* Prints to FILE the iteration domain of PBB.  */\n \n void\n-print_iteration_domain (FILE *file, poly_bb_p pbb, int verbosity)\n+print_iteration_domain (FILE *file, poly_bb_p pbb)\n {\n-  print_pbb_domain (file, pbb, verbosity);\n+  print_pbb_domain (file, pbb);\n }\n \n-/* Prints to FILE the iteration domains of every PBB of SCOP, at some\n-   VERBOSITY level.  */\n+/* Prints to FILE the iteration domains of every PBB of SCOP.  */\n \n void\n-print_iteration_domains (FILE *file, scop_p scop, int verbosity)\n+print_iteration_domains (FILE *file, scop_p scop)\n {\n   int i;\n   poly_bb_p pbb;\n \n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    print_iteration_domain (file, pbb, verbosity);\n+    print_iteration_domain (file, pbb);\n }\n \n-/* Prints to STDERR the iteration domain of PBB, at some VERBOSITY\n-   level.  */\n+/* Prints to STDERR the iteration domain of PBB.  */\n \n DEBUG_FUNCTION void\n-debug_iteration_domain (poly_bb_p pbb, int verbosity)\n+debug_iteration_domain (poly_bb_p pbb)\n {\n-  print_iteration_domain (stderr, pbb, verbosity);\n+  print_iteration_domain (stderr, pbb);\n }\n \n-/* Prints to STDERR the iteration domains of every PBB of SCOP, at\n-   some VERBOSITY level.  */\n+/* Prints to STDERR the iteration domains of every PBB of SCOP.  */\n \n DEBUG_FUNCTION void\n-debug_iteration_domains (scop_p scop, int verbosity)\n+debug_iteration_domains (scop_p scop)\n {\n-  print_iteration_domains (stderr, scop, verbosity);\n+  print_iteration_domains (stderr, scop);\n }\n \n /* Apply graphite transformations to all the basic blocks of SCOP.  */\n@@ -205,55 +201,44 @@ free_poly_bb (poly_bb_p pbb)\n   XDELETE (pbb);\n }\n \n-/* Prints to FILE the polyhedral data reference PDR, at some VERBOSITY\n-   level.  */\n+/* Prints to FILE the polyhedral data reference PDR.  */\n \n void\n-print_pdr (FILE *file, poly_dr_p pdr, int verbosity)\n+print_pdr (FILE *file, poly_dr_p pdr)\n {\n-  if (verbosity > 1)\n-    {\n-      fprintf (file, \"# pdr_%d (\", PDR_ID (pdr));\n-\n-      switch (PDR_TYPE (pdr))\n-\t{\n-\tcase PDR_READ:\n-\t  fprintf (file, \"read \\n\");\n-\t  break;\n+  fprintf (file, \"pdr_%d (\", PDR_ID (pdr));\n \n-\tcase PDR_WRITE:\n-\t  fprintf (file, \"write \\n\");\n-\t  break;\n+  switch (PDR_TYPE (pdr))\n+    {\n+    case PDR_READ:\n+      fprintf (file, \"read \\n\");\n+      break;\n \n-\tcase PDR_MAY_WRITE:\n-\t  fprintf (file, \"may_write \\n\");\n-\t  break;\n+    case PDR_WRITE:\n+      fprintf (file, \"write \\n\");\n+      break;\n \n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+    case PDR_MAY_WRITE:\n+      fprintf (file, \"may_write \\n\");\n+      break;\n \n-      dump_data_reference (file, (data_reference_p) PDR_CDR (pdr));\n+    default:\n+      gcc_unreachable ();\n     }\n \n-  if (verbosity > 0)\n-    {\n-      fprintf (file, \"# data accesses (\\n\");\n-      print_isl_map (file, pdr->accesses);\n-      print_isl_set (file, pdr->subscript_sizes);\n-      fprintf (file, \"#)\\n\");\n-    }\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n+  fprintf (file, \"data accesses: \");\n+  print_isl_map (file, pdr->accesses);\n+  fprintf (file, \"subscript sizes: \");\n+  print_isl_set (file, pdr->subscript_sizes);\n+  fprintf (file, \")\\n\");\n }\n \n-/* Prints to STDERR the polyhedral data reference PDR, at some\n-   VERBOSITY level.  */\n+/* Prints to STDERR the polyhedral data reference PDR.  */\n \n DEBUG_FUNCTION void\n-debug_pdr (poly_dr_p pdr, int verbosity)\n+debug_pdr (poly_dr_p pdr)\n {\n-  print_pdr (stderr, pdr, verbosity);\n+  print_pdr (stderr, pdr);\n }\n \n /* Store the GRAPHITE representation of BB.  */\n@@ -359,10 +344,10 @@ free_scop (scop_p scop)\n   XDELETE (scop);\n }\n \n-/* Print to FILE the domain of PBB, at some VERBOSITY level.  */\n+/* Print to FILE the domain of PBB.  */\n \n void\n-print_pbb_domain (FILE *file, poly_bb_p pbb, int verbosity ATTRIBUTE_UNUSED)\n+print_pbb_domain (FILE *file, poly_bb_p pbb)\n {\n   print_isl_set (file, pbb->domain);\n }\n@@ -383,15 +368,12 @@ dump_gbb_cases (FILE *file, gimple_poly_bb_p gbb)\n   if (cases.is_empty ())\n     return;\n \n-  fprintf (file, \"# cases bb_%d (\\n\", GBB_BB (gbb)->index);\n+  fprintf (file, \"cases bb_%d (\\n\", GBB_BB (gbb)->index);\n \n   FOR_EACH_VEC_ELT (cases, i, stmt)\n-    {\n-      fprintf (file, \"# \");\n-      print_gimple_stmt (file, stmt, 0, 0);\n-    }\n+    print_gimple_stmt (file, stmt, 0, 0);\n \n-  fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n /* Dump conditions of a graphite basic block GBB on FILE.  */\n@@ -410,269 +392,175 @@ dump_gbb_conditions (FILE *file, gimple_poly_bb_p gbb)\n   if (conditions.is_empty ())\n     return;\n \n-  fprintf (file, \"# conditions bb_%d (\\n\", GBB_BB (gbb)->index);\n+  fprintf (file, \"conditions bb_%d (\\n\", GBB_BB (gbb)->index);\n \n   FOR_EACH_VEC_ELT (conditions, i, stmt)\n-    {\n-      fprintf (file, \"# \");\n-      print_gimple_stmt (file, stmt, 0, 0);\n-    }\n+    print_gimple_stmt (file, stmt, 0, 0);\n \n-  fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to FILE all the data references of PBB, at some VERBOSITY\n-   level.  */\n+/* Print to FILE all the data references of PBB.  */\n \n void\n-print_pdrs (FILE *file, poly_bb_p pbb, int verbosity)\n+print_pdrs (FILE *file, poly_bb_p pbb)\n {\n   int i;\n   poly_dr_p pdr;\n   int nb_reads = 0;\n   int nb_writes = 0;\n \n-  if (PBB_DRS (pbb).length () == 0)\n-    {\n-      if (verbosity > 0)\n-\tfprintf (file, \"# Access informations are not provided\\n\");\\\n-      fprintf (file, \"0\\n\");\n-      return;\n-    }\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"# Data references (\\n\");\n+  if (PBB_DRS (pbb).is_empty ())\n+    return;\n \n-  if (verbosity > 0)\n-    fprintf (file, \"# Access informations are provided\\n\");\n-  fprintf (file, \"1\\n\");\n+  fprintf (file, \"Data references (\\n\");\n \n   FOR_EACH_VEC_ELT (PBB_DRS (pbb), i, pdr)\n     if (PDR_TYPE (pdr) == PDR_READ)\n       nb_reads++;\n     else\n       nb_writes++;\n \n-  if (verbosity > 1)\n-    fprintf (file, \"# Read data references (\\n\");\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Read access informations\\n\");\n-  fprintf (file, \"%d\\n\", nb_reads);\n+  fprintf (file, \"Read data references (\\n\");\n \n   FOR_EACH_VEC_ELT (PBB_DRS (pbb), i, pdr)\n     if (PDR_TYPE (pdr) == PDR_READ)\n-      print_pdr (file, pdr, verbosity);\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"# Write data references (\\n\");\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Write access informations\\n\");\n-  fprintf (file, \"%d\\n\", nb_writes);\n+      print_pdr (file, pdr);\n \n+  fprintf (file, \")\\n\");\n+  fprintf (file, \"Write data references (\\n\");\n   FOR_EACH_VEC_ELT (PBB_DRS (pbb), i, pdr)\n     if (PDR_TYPE (pdr) != PDR_READ)\n-      print_pdr (file, pdr, verbosity);\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n+      print_pdr (file, pdr);\n+  fprintf (file, \")\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n /* Print to STDERR all the data references of PBB.  */\n \n DEBUG_FUNCTION void\n-debug_pdrs (poly_bb_p pbb, int verbosity)\n+debug_pdrs (poly_bb_p pbb)\n {\n-  print_pdrs (stderr, pbb, verbosity);\n+  print_pdrs (stderr, pbb);\n }\n \n-/* Print to FILE the body of PBB, at some VERBOSITY level.\n-   If statement_body_provided is false statement body is not printed.  */\n+/* Print to FILE the body of PBB.  */\n \n static void\n-print_pbb_body (FILE *file, poly_bb_p pbb, int verbosity,\n-\t\tbool statement_body_provided)\n+print_pbb_body (FILE *file, poly_bb_p pbb)\n {\n-  if (verbosity > 1)\n-    fprintf (file, \"# Body (\\n\");\n-\n-  if (!statement_body_provided)\n-    {\n-      if (verbosity > 0)\n-\tfprintf (file, \"# Statement body is not provided\\n\");\n-\n-      fprintf (file, \"0\\n\");\n-\n-      if (verbosity > 1)\n-\tfprintf (file, \"#)\\n\");\n-      return;\n-    }\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Statement body is provided\\n\");\n-  fprintf (file, \"1\\n\");\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Original iterator names\\n# Iterator names are not provided yet.\\n\");\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Statement body\\n\");\n-\n-  fprintf (file, \"{\\n\");\n+  fprintf (file, \"Body (\\n\");\n   dump_bb (file, pbb_bb (pbb), 0, 0);\n-  fprintf (file, \"}\\n\");\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to FILE the domain and scattering function of PBB, at some\n-   VERBOSITY level.  */\n+/* Print to FILE the domain and scattering function of PBB.  */\n \n void\n-print_pbb (FILE *file, poly_bb_p pbb, int verbosity)\n+print_pbb (FILE *file, poly_bb_p pbb)\n {\n-  if (verbosity > 1)\n-    {\n-      fprintf (file, \"# pbb_%d (\\n\", pbb_index (pbb));\n-      dump_gbb_conditions (file, PBB_BLACK_BOX (pbb));\n-      dump_gbb_cases (file, PBB_BLACK_BOX (pbb));\n-    }\n+  fprintf (file, \"pbb_%d (\\n\", pbb_index (pbb));\n+  dump_gbb_conditions (file, PBB_BLACK_BOX (pbb));\n+  dump_gbb_cases (file, PBB_BLACK_BOX (pbb));\n \n-  print_pbb_domain (file, pbb, verbosity);\n-  print_pdrs (file, pbb, verbosity);\n-  print_pbb_body (file, pbb, verbosity, false);\n+  print_pbb_domain (file, pbb);\n+  print_pdrs (file, pbb);\n+  print_pbb_body (file, pbb);\n \n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to FILE the parameters of SCOP, at some VERBOSITY level.  */\n+/* Print to FILE the parameters of SCOP.  */\n \n void\n-print_scop_params (FILE *file, scop_p scop, int verbosity)\n+print_scop_params (FILE *file, scop_p scop)\n {\n+  if (SESE_PARAMS (SCOP_REGION (scop)).is_empty ())\n+    return;\n+\n   int i;\n   tree t;\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"# parameters (\\n\");\n-\n-  if (SESE_PARAMS (SCOP_REGION (scop)).length ())\n-    {\n-      if (verbosity > 0)\n-\tfprintf (file, \"# Parameter names are provided\\n\");\n-\n-      fprintf (file, \"1\\n\");\n-\n-      if (verbosity > 0)\n-\tfprintf (file, \"# Parameter names\\n\");\n-    }\n-  else\n-    {\n-      if (verbosity > 0)\n-\tfprintf (file, \"# Parameter names are not provided\\n\");\n-      fprintf (file, \"0\\n\");\n-    }\n-\n+  fprintf (file, \"parameters (\");\n   FOR_EACH_VEC_ELT (SESE_PARAMS (SCOP_REGION (scop)), i, t)\n     {\n       print_generic_expr (file, t, 0);\n-      fprintf (file, \" \");\n+      fprintf (file, \", \");\n     }\n-\n-  fprintf (file, \"\\n\");\n-\n-  if (verbosity > 1)\n-    fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to FILE the context of SCoP, at some VERBOSITY level.  */\n+/* Print to FILE the context of SCoP.  */\n \n void\n-print_scop_context (FILE *file, scop_p scop, int verbosity)\n+print_scop_context (FILE *file, scop_p scop)\n {\n-  if (verbosity > 0)\n-    fprintf (file, \"# Context (\\n\");\n-\n-  if (scop->param_context)\n-    print_isl_set (file, scop->param_context);\n+  if (!scop->param_context)\n+    return;\n \n-  if (verbosity > 0)\n-    fprintf (file, \"# )\\n\");\n+  fprintf (file, \"Context (\\n\");\n+  print_isl_set (file, scop->param_context);\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to FILE the SCOP, at some VERBOSITY level.  */\n+/* Print to FILE the SCOP.  */\n \n void\n-print_scop (FILE *file, scop_p scop, int verbosity)\n+print_scop (FILE *file, scop_p scop)\n {\n   int i;\n   poly_bb_p pbb;\n \n-  fprintf (file, \"SCoP 1\\n#(\\n\");\n-  fprintf (file, \"# Language\\nGimple\\n\");\n-  print_scop_context (file, scop, verbosity);\n-  print_scop_params (file, scop, verbosity);\n-\n-  if (verbosity > 0)\n-    fprintf (file, \"# Number of statements\\n\");\n+  fprintf (file, \"SCoP (\\n\");\n+  print_scop_context (file, scop);\n+  print_scop_params (file, scop);\n \n+  fprintf (file, \"Number of statements: \");\n   fprintf (file, \"%d\\n\", scop->pbbs.length ());\n \n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    print_pbb (file, pbb, verbosity);\n+    print_pbb (file, pbb);\n \n-  fprintf (file, \"#)\\n\");\n+  fprintf (file, \")\\n\");\n }\n \n-/* Print to STDERR the domain of PBB, at some VERBOSITY level.  */\n+/* Print to STDERR the domain of PBB.  */\n \n DEBUG_FUNCTION void\n-debug_pbb_domain (poly_bb_p pbb, int verbosity)\n+debug_pbb_domain (poly_bb_p pbb)\n {\n-  print_pbb_domain (stderr, pbb, verbosity);\n+  print_pbb_domain (stderr, pbb);\n }\n \n-/* Print to FILE the domain and scattering function of PBB, at some\n-   VERBOSITY level.  */\n+/* Print to FILE the domain and scattering function of PBB.  */\n \n DEBUG_FUNCTION void\n-debug_pbb (poly_bb_p pbb, int verbosity)\n+debug_pbb (poly_bb_p pbb)\n {\n-  print_pbb (stderr, pbb, verbosity);\n+  print_pbb (stderr, pbb);\n }\n \n-/* Print to STDERR the context of SCOP, at some VERBOSITY level.  */\n+/* Print to STDERR the context of SCOP.  */\n \n DEBUG_FUNCTION void\n-debug_scop_context (scop_p scop, int verbosity)\n+debug_scop_context (scop_p scop)\n {\n-  print_scop_context (stderr, scop, verbosity);\n+  print_scop_context (stderr, scop);\n }\n \n-/* Print to STDERR the SCOP, at some VERBOSITY level.  */\n+/* Print to STDERR the SCOP.  */\n \n DEBUG_FUNCTION void\n-debug_scop (scop_p scop, int verbosity)\n+debug_scop (scop_p scop)\n {\n-  print_scop (stderr, scop, verbosity);\n+  print_scop (stderr, scop);\n }\n \n-/* Print to STDERR the parameters of SCOP, at some VERBOSITY\n-   level.  */\n+/* Print to STDERR the parameters of SCOP.  */\n \n DEBUG_FUNCTION void\n-debug_scop_params (scop_p scop, int verbosity)\n+debug_scop_params (scop_p scop)\n {\n-  print_scop_params (stderr, scop, verbosity);\n+  print_scop_params (stderr, scop);\n }\n \n extern isl_ctx *the_isl_ctx;"}, {"sha": "6b97b714c3c85e5fe8b996c952b1ad7d3203cc72", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "patch": "@@ -197,8 +197,8 @@ struct poly_dr\n void new_poly_dr (poly_bb_p, enum poly_dr_type, data_reference_p,\n \t\t  graphite_dim_t, isl_map *, isl_set *);\n void free_poly_dr (poly_dr_p);\n-void debug_pdr (poly_dr_p, int);\n-void print_pdr (FILE *, poly_dr_p, int);\n+void debug_pdr (poly_dr_p);\n+void print_pdr (FILE *, poly_dr_p);\n \n static inline bool\n pdr_read_p (poly_dr_p pdr)\n@@ -280,22 +280,22 @@ struct poly_bb\n extern poly_bb_p new_poly_bb (scop_p, gimple_poly_bb_p);\n extern void free_poly_bb (poly_bb_p);\n extern void debug_loop_vec (poly_bb_p);\n-extern void print_pbb_domain (FILE *, poly_bb_p, int);\n-extern void print_pbb (FILE *, poly_bb_p, int);\n-extern void print_scop_context (FILE *, scop_p, int);\n-extern void print_scop (FILE *, scop_p, int);\n-extern void debug_pbb_domain (poly_bb_p, int);\n-extern void debug_pbb (poly_bb_p, int);\n-extern void print_pdrs (FILE *, poly_bb_p, int);\n-extern void debug_pdrs (poly_bb_p, int);\n-extern void debug_scop_context (scop_p, int);\n-extern void debug_scop (scop_p, int);\n-extern void print_scop_params (FILE *, scop_p, int);\n-extern void debug_scop_params (scop_p, int);\n-extern void print_iteration_domain (FILE *, poly_bb_p, int);\n-extern void print_iteration_domains (FILE *, scop_p, int);\n-extern void debug_iteration_domain (poly_bb_p, int);\n-extern void debug_iteration_domains (scop_p, int);\n+extern void print_pbb_domain (FILE *, poly_bb_p);\n+extern void print_pbb (FILE *, poly_bb_p);\n+extern void print_scop_context (FILE *, scop_p);\n+extern void print_scop (FILE *, scop_p);\n+extern void debug_pbb_domain (poly_bb_p);\n+extern void debug_pbb (poly_bb_p);\n+extern void print_pdrs (FILE *, poly_bb_p);\n+extern void debug_pdrs (poly_bb_p);\n+extern void debug_scop_context (scop_p);\n+extern void debug_scop (scop_p);\n+extern void print_scop_params (FILE *, scop_p);\n+extern void debug_scop_params (scop_p);\n+extern void print_iteration_domain (FILE *, poly_bb_p);\n+extern void print_iteration_domains (FILE *, scop_p);\n+extern void debug_iteration_domain (poly_bb_p);\n+extern void debug_iteration_domains (scop_p);\n extern void print_isl_set (FILE *, isl_set *);\n extern void print_isl_map (FILE *, isl_map *);\n extern void print_isl_aff (FILE *, isl_aff *);"}, {"sha": "230b42e4662bab533c48f29c1aedd0e7a3a364bb", "filename": "gcc/graphite.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c24066b86aa1ee8cbb02281f15e1c1dce1289f0/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=5c24066b86aa1ee8cbb02281f15e1c1dce1289f0", "patch": "@@ -332,7 +332,7 @@ graphite_transform_loops (void)\n \tbuild_poly_scop (scop);\n \n \tif (dump_file && dump_flags)\n-\t  print_scop (dump_file, scop, 3);\n+\t  print_scop (dump_file, scop);\n \n \tif (POLY_SCOP_P (scop)\n \t    && apply_poly_transforms (scop)"}]}