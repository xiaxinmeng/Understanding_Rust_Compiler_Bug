{"sha": "c5fdd4ad9799cac7701e9ba82901f84a30957082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmZGQ0YWQ5Nzk5Y2FjNzcwMWU5YmE4MjkwMWY4NGEzMDk1NzA4Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T15:10:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T15:10:58Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* g-sha256.ads, s-sehamd.ads, s-sehamd.adb, g-sha512.ads, g-sha224.ads,\n\tg-sha384.ads: Minor reformatting\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* adaint.h (file_attributes): Reduce size of the structure, so that it\n\tis less costly to store in records.\n\t* makeutl.adb:\n\t(Check_Source_Info_In_ALI): use Full_Source_Name instead of a direct\n\tcall to Find_File, since the former provides caching when appropriate,\n\twhich limits the number of system calls in some cases.\n\t* osint.ads, prj.ads (Source_Data): do not store directly the timestamp,\n\tbut the file attributes since we also need access to the size of the\n\tALI file to parse it. This gives an opportunity for saving system calls\n\ton Unix systems.\n\nFrom-SVN: r154817", "tree": {"sha": "01ad137364b62365a4863ad5ac8f9130b5822119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01ad137364b62365a4863ad5ac8f9130b5822119"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5fdd4ad9799cac7701e9ba82901f84a30957082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fdd4ad9799cac7701e9ba82901f84a30957082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5fdd4ad9799cac7701e9ba82901f84a30957082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5fdd4ad9799cac7701e9ba82901f84a30957082/comments", "author": null, "committer": null, "parents": [{"sha": "9cf032ef7dcf113d3ac0db470df9b813198624ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf032ef7dcf113d3ac0db470df9b813198624ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf032ef7dcf113d3ac0db470df9b813198624ad"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "dbb8057d9710185fc2c6f6647f4ac94814704d72", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -1,3 +1,21 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-sha256.ads, s-sehamd.ads, s-sehamd.adb, g-sha512.ads, g-sha224.ads,\n+\tg-sha384.ads: Minor reformatting\n+\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* adaint.h (file_attributes): Reduce size of the structure, so that it\n+\tis less costly to store in records.\n+\t* makeutl.adb:\n+\t(Check_Source_Info_In_ALI): use Full_Source_Name instead of a direct\n+\tcall to Find_File, since the former provides caching when appropriate,\n+\twhich limits the number of system calls in some cases.\n+\t* osint.ads, prj.ads (Source_Data): do not store directly the timestamp,\n+\tbut the file attributes since we also need access to the size of the\n+\tALI file to parse it. This gives an opportunity for saving system calls\n+\ton Unix systems.\n+\n 2009-11-30  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, s-sechas.ads, s-sechas.adb: Minor reformatting."}, {"sha": "41b6357656f05db7478fb2af9f806916575d2a8b", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -74,15 +74,15 @@ typedef long OS_Time;\n */\n \n struct file_attributes {\n-  short exists;\n+  char exists;\n \n-  short writable;\n-  short readable;\n-  short executable;\n+  char writable;\n+  char readable;\n+  char executable;\n \n-  short symbolic_link;\n-  short regular;\n-  short directory;\n+  char symbolic_link;\n+  char regular;\n+  char directory;\n \n   OS_Time timestamp;\n   long file_length;"}, {"sha": "9b93a19e4e02a3db9b65d6b424bafe4b15674b2f", "filename": "gcc/ada/g-sha224.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha224.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha224.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha224.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -31,6 +31,7 @@\n \n with System.Secure_Hashes.SHA2_Common;\n with System.Secure_Hashes.SHA2_32;\n+\n package GNAT.SHA224 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.SHA2_Common.Block_Words,\n    State_Words    => 8,"}, {"sha": "ee8177fa2eb1fb69ec1728783f48d2d80a5e2cde", "filename": "gcc/ada/g-sha256.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha256.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha256.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha256.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -31,6 +31,7 @@\n \n with System.Secure_Hashes.SHA2_Common;\n with System.Secure_Hashes.SHA2_32;\n+\n package GNAT.SHA256 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.SHA2_Common.Block_Words,\n    State_Words    => 8,"}, {"sha": "4c1b8b5a3264626523d91390fd0a4be29f04f1ea", "filename": "gcc/ada/g-sha384.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha384.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha384.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha384.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -31,6 +31,7 @@\n \n with System.Secure_Hashes.SHA2_Common;\n with System.Secure_Hashes.SHA2_64;\n+\n package GNAT.SHA384 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.SHA2_Common.Block_Words,\n    State_Words    => 8,"}, {"sha": "c8ebd32f9696c2baa9f0bf03e14bb651248382b9", "filename": "gcc/ada/g-sha512.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha512.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fg-sha512.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha512.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -31,6 +31,7 @@\n \n with System.Secure_Hashes.SHA2_Common;\n with System.Secure_Hashes.SHA2_64;\n+\n package GNAT.SHA512 is new System.Secure_Hashes.H\n   (Block_Words    => System.Secure_Hashes.SHA2_Common.Block_Words,\n    State_Words    => 8,"}, {"sha": "ab00b5065782fcf7c14d29601a976420ea258050", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -272,7 +272,7 @@ package body Makeutl is\n                   if not Fname.Is_Internal_File_Name (SD.Sfile)\n                     or else\n                       (Check_Readonly_Files\n-                        and then Find_File (SD.Sfile, Osint.Source) = No_File)\n+                        and then Full_Source_Name (SD.Sfile) = No_File)\n                   then\n                      if Verbose_Mode then\n                         Write_Line"}, {"sha": "eeba80148aebf54034c5c2194f16ec0a109d2a19", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -735,7 +735,7 @@ private\n    --  detected, the file being written is deleted, and a fatal error is\n    --  signalled.\n \n-   File_Attributes_Size : constant Integer := 50;\n+   File_Attributes_Size : constant Natural := 24;\n    --  This should be big enough to fit a \"struct file_attributes\" on any\n    --  system. It doesn't matter if it is too big (which avoids the need for\n    --  either mapping the struct exactly or importing the sizeof from C, which"}, {"sha": "7fd97916ad1f5376bf91486281533cb507be4793", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -31,6 +31,7 @@\n \n with Casing; use Casing;\n with Namet;  use Namet;\n+with Osint;\n with Scans;  use Scans;\n with Types;  use Types;\n \n@@ -745,7 +746,7 @@ package Prj is\n       Dep_Path : Path_Name_Type := No_Path;\n       --  Path name of the real dependency file\n \n-      Dep_TS : Time_Stamp_Type := Empty_Time_Stamp;\n+      Dep_TS : aliased Osint.File_Attributes := Osint.Unknown_Attributes;\n       --  Dependency file time stamp\n \n       Switches : File_Name_Type := No_File;\n@@ -789,7 +790,7 @@ package Prj is\n                        Dep_Name               => No_File,\n                        Current_Dep_Path       => No_Path,\n                        Dep_Path               => No_Path,\n-                       Dep_TS                 => Empty_Time_Stamp,\n+                       Dep_TS                 => Osint.Unknown_Attributes,\n                        Switches               => No_File,\n                        Switches_Path          => No_Path,\n                        Switches_TS            => Empty_Time_Stamp,"}, {"sha": "cc04e6a777333e4201cea6da690ea93f27ff2384", "filename": "gcc/ada/s-sehamd.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fs-sehamd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fs-sehamd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sehamd.adb?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -35,8 +35,8 @@ package body System.Secure_Hashes.MD5 is\n \n    use Interfaces;\n \n-   --  The sixteen values used to rotate the context words.\n-   --  Four for each rounds. Used in procedure Transform.\n+   --  The sixteen values used to rotate the context words. Four for each\n+   --  rounds. Used in procedure Transform.\n \n    --  Round 1\n \n@@ -67,8 +67,8 @@ package body System.Secure_Hashes.MD5 is\n    S44 : constant := 21;\n \n    --  The following functions (F, FF, G, GG, H, HH, I and II) are the\n-   --  equivalent of the macros of the same name in the example\n-   --  C implementation in the annex of RFC 1321.\n+   --  equivalent of the macros of the same name in the example C\n+   --  implementation in the annex of RFC 1321.\n \n    function F (X, Y, Z : Unsigned_32) return Unsigned_32;\n    pragma Inline (F);"}, {"sha": "206050fb0ec204ed296fb6443d91bd2bd1cbdf12", "filename": "gcc/ada/s-sehamd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fs-sehamd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5fdd4ad9799cac7701e9ba82901f84a30957082/gcc%2Fada%2Fs-sehamd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sehamd.ads?ref=c5fdd4ad9799cac7701e9ba82901f84a30957082", "patch": "@@ -46,7 +46,7 @@ package System.Secure_Hashes.MD5 is\n             Hash_Bit_Order => System.Low_Order_First);\n    --  MD5 operates on 32-bit little endian words\n \n-   Block_Words  : constant := 16;\n+   Block_Words : constant := 16;\n    --  Messages are processed in chunks of 16 words\n \n    procedure Transform"}]}