{"sha": "a560e5d418a796c99d1c3d47209044a9cf5745c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU2MGU1ZDQxOGE3OTZjOTlkMWMzZDQ3MjA5MDQ0YTljZjU3NDVjNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-08-21T13:13:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-08-21T13:13:42Z"}, "message": "nvptx cleanup\n\nnvptx cleanup\n\t* lib/target-supports.exp (check_effective_target_freestanding): nvptx\n\tis freestanding.\n\t(check_effective_target_global_constructor): New.\n\t* lib/gcc.exp (gcc_target_compile): Set SIGNAL_SUPPRESS if needed.\n\t* gcc.dg/debug/debug.exp: Skip  for nvptx.\n\t* gcc.dg/debug/dwarf2/dwarf2.exp: Likewise.\n\n\t* gcc.c-torture/execute/981019-1.c: Ptx assembler bug.\n\t* gcc.c-torture/compile/limits-externdecl.c: Likewise.\n\t* gcc.c-torture/compile/pr33855.c: Likewise.\n\t* gcc.c-torture/compile/920723-1.c: Likewise.\n\t* gcc.c-torture/compile/pr35468.c: Ptx assembler objects to\n\twriting a const.\n\t* gcc.c-torture/compile/mangle-1.c: Ptx assembler objects to . in\n\tlabel.\n\t* gcc.c-torture/compile/callind.c: Ptx assembler objects to label\n\t'call'.\n\n\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.c: Make main\n\tprototype normal.\n\t* gcc.c-torture/execute/switch-1.c: Likewise.\n\n\t* gcc.c-torture/execute/pr34456.c: Require not freestanding\n\t* gcc.c-torture/execute/printf-1.c: Likewise.\n\t* gcc.c-torture/execute/printf-chk-1.c: Likewise.\n\t* gcc.c-torture/execute/fprintf-1.c: Likewise.\n\t* gcc.c-torture/execute/fprintf-chk-1.c: Likewise.\n\t* gcc.c-torture/execute/vprintf-1.c: Likewise.\n\t* gcc.c-torture/execute/vprintf-chk-1.c: Likewise.\n\t* gcc.c-torture/execute/vfprintf-1.c: Likewise.\n\t* gcc.c-torture/execute/vfprintf-chk-1.c: Likewise.\n\t* gcc.c-torture/execute/builtins/fputs.x: Likewise.\n\t* gcc.c-torture/execute/gofast.c: Likewise.\n\t* gcc.c-torture/execute/complex-6.c: Likewise.\n\n\t* gcc.c-torture/execute/builtins/memcpy-chk.x: Require nonlocal goto.\n\t* gcc.c-torture/execute/builtins/memmove-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/mempcpy-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/memset-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/snprintf-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/sprintf-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/stpcpy-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/stpncpy-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/strcat-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/strcpy-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/strncat-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/strncpy-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/vsnprintf-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/vsprintf-chk.x: Likewise.\n\t* gcc.c-torture/execute/builtins/pr23484-chk.x: Likewise.\n\t* gcc.dg/setjmp-1.c: Likewise.\n\t* gcc.dg/cleanup-5.c: Likewise.\n\t* gcc.dg/cleanup-12.c: Likewise.\n\t* gcc.dg/cleanup-13.c: Likewise.\n\n\t* gcc.dg/constructor-1.c: Require global ctor.\n\n\t* gcc.dg/fork-instrumentation.c: Require profiling.\n\t* gcc.dg/20030107-1.c: Likewise.\n\t* gcc.dg/20030702-1.c: Likewise.\n\n\t* gcc.dg/cpp/lexstrng.c: Avoid IO unless debugging.\n\t* gcc.dg/cpp/paste2.c: Likewise.\n\t* gcc.dg/cpp/strify3.c: Likewise.\n\t* gcc.dg/cpp/strify4.c: Likewise.\n\t* gcc.dg/cpp/lexnum.c: Likewise.\n\t* gcc.dg/cpp/digraphs.c: Likewise.\n\t* gcc.dg/cpp/macro1.c: Likewise.\n\nFrom-SVN: r227059", "tree": {"sha": "b97820f59ffa43f30a7aac3ebe7306ba1eaa99a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b97820f59ffa43f30a7aac3ebe7306ba1eaa99a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a560e5d418a796c99d1c3d47209044a9cf5745c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a560e5d418a796c99d1c3d47209044a9cf5745c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a560e5d418a796c99d1c3d47209044a9cf5745c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a560e5d418a796c99d1c3d47209044a9cf5745c6/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "838326d5d9bd97f9631f116b74e3b334b15180b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838326d5d9bd97f9631f116b74e3b334b15180b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838326d5d9bd97f9631f116b74e3b334b15180b8"}], "stats": {"total": 283, "additions": 276, "deletions": 7}, "files": [{"sha": "95c82570ba59294a4413b93639377d5fb663bab5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,74 @@\n+2015-08-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* lib/target-supports.exp (check_effective_target_freestanding): nvptx\n+\tis freestanding.\n+\t(check_effective_target_global_constructor): New.\n+\t* lib/gcc.exp (gcc_target_compile): Set SIGNAL_SUPPRESS if needed.\n+\t* gcc.dg/debug/debug.exp: Skip  for nvptx.\n+\t* gcc.dg/debug/dwarf2/dwarf2.exp: Likewise.\n+\n+\t* gcc.c-torture/execute/981019-1.c: Ptx assembler bug.\n+\t* gcc.c-torture/compile/limits-externdecl.c: Likewise.\n+\t* gcc.c-torture/compile/pr33855.c: Likewise.\n+\t* gcc.c-torture/compile/920723-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr35468.c: Ptx assembler objects to\n+\twriting a const.\n+\t* gcc.c-torture/compile/mangle-1.c: Ptx assembler objects to . in\n+\tlabel.\n+\t* gcc.c-torture/compile/callind.c: Ptx assembler objects to label\n+\t'call'.\n+\n+\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.c: Make main\n+\tprototype normal.\n+\t* gcc.c-torture/execute/switch-1.c: Likewise.\n+\n+\t* gcc.c-torture/execute/pr34456.c: Require not freestanding\n+\t* gcc.c-torture/execute/printf-1.c: Likewise.\n+\t* gcc.c-torture/execute/printf-chk-1.c: Likewise.\n+\t* gcc.c-torture/execute/fprintf-1.c: Likewise.\n+\t* gcc.c-torture/execute/fprintf-chk-1.c: Likewise.\n+\t* gcc.c-torture/execute/vprintf-1.c: Likewise.\n+\t* gcc.c-torture/execute/vprintf-chk-1.c: Likewise.\n+\t* gcc.c-torture/execute/vfprintf-1.c: Likewise.\n+\t* gcc.c-torture/execute/vfprintf-chk-1.c: Likewise.\n+\t* gcc.c-torture/execute/builtins/fputs.x: Likewise.\n+\t* gcc.c-torture/execute/gofast.c: Likewise.\n+\t* gcc.c-torture/execute/complex-6.c: Likewise.\n+\n+\t* gcc.c-torture/execute/builtins/memcpy-chk.x: Require nonlocal goto.\n+\t* gcc.c-torture/execute/builtins/memmove-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/mempcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/memset-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/snprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/sprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/stpcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/stpncpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strcat-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strncat-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strncpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/vsnprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/vsprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/pr23484-chk.x: Likewise.\n+\t* gcc.dg/setjmp-1.c: Likewise.\n+\t* gcc.dg/cleanup-5.c: Likewise.\n+\t* gcc.dg/cleanup-12.c: Likewise.\n+\t* gcc.dg/cleanup-13.c: Likewise.\n+\n+\t* gcc.dg/constructor-1.c: Require global ctor.\n+\n+\t* gcc.dg/fork-instrumentation.c: Require profiling.\n+\t* gcc.dg/20030107-1.c: Likewise.\n+\t* gcc.dg/20030702-1.c: Likewise.\n+\n+\t* gcc.dg/cpp/lexstrng.c: Avoid IO unless debugging.\n+\t* gcc.dg/cpp/paste2.c: Likewise.\n+\t* gcc.dg/cpp/strify3.c: Likewise.\n+\t* gcc.dg/cpp/strify4.c: Likewise.\n+\t* gcc.dg/cpp/lexnum.c: Likewise.\n+\t* gcc.dg/cpp/digraphs.c: Likewise.\n+\t* gcc.dg/cpp/macro1.c: Likewise.\n+\n 2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/zvector/vec-load_bndry-1.c: New test."}, {"sha": "26b83f6f8f7f830ed150e0ee5810708f92379920", "filename": "gcc/testsuite/gcc.c-torture/compile/920723-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"ptxas seg faults\" { nvptx-*-* } { \"-O2\" } { \"\" } } */\n+\n #if defined(STACK_SIZE) && STACK_SIZE < 65536\n # define GITT_SIZE 75\n #endif"}, {"sha": "5938d1b88fcfa59fbe2bb1772434584e6d41bd7c", "filename": "gcc/testsuite/gcc.c-torture/compile/callind.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcallind.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,8 +1,8 @@\n-call (foo, a)\n+bar (foo, a)\n      int (**foo) ();\n {\n \n-  (foo)[1] = call;\n+  (foo)[1] = bar;\n \n   foo[a] (1);\n }"}, {"sha": "f131eea3cf1bb230cfc668a40bad9852ce3824a0", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-externdecl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"ptxas runs out of memory\" { nvptx-*-* } { \"*\" } { \"\" } } */\n+\n /* { dg-require-effective-target int32plus } */\n /* Inspired by the test case for PR middle-end/52640.  */\n "}, {"sha": "6797bc2436f49c445e2eb805ef6b01dd568afc6b", "filename": "gcc/testsuite/gcc.c-torture/compile/mangle-1.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmangle-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmangle-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmangle-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,9 +1,17 @@\n+\n+#if __nvptx__\n+/* Doesn't like . in labels.  */\n+#define SEP \"$\"\n+#else\n+#define SEP \".\"\n+#endif\n+\n int foo(void)\n {\n   static int x asm (\"x\") = 3;\n   return x++;\n }\n \n-int X2 asm (\"x.0\") = 4;\n-int X3 asm (\"_x.0\") = 5;\n+int X2 asm (\"x\" SEP \"0\") = 4;\n+int X3 asm (\"_x\" SEP \"0\") = 5;\n "}, {"sha": "7e0d5ef0d735168a24fd38f5be8046240871e19d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33855.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"ptxas seg faults\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n /* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n /* Used to segfault due to cselim not marking the complex temp var\n    as GIMPLE reg.  */"}, {"sha": "68f55654f6919a5cfc02906bb3182ade3793a7ee", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35468.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/35468 */\n+/* { dg-do compile } */\n \n void\n foo (void)"}, {"sha": "a093dff41b02f0d7cecc4233c5cb0e0af2987dad", "filename": "gcc/testsuite/gcc.c-torture/execute/981019-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981019-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981019-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F981019-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"ptxas seg faults\" { nvptx-*-* } { \"-O2\" \"-O3*\" } { \"\" } } */\n+\n extern int f2(void);\n extern int f3(void);\n extern void f1(void);"}, {"sha": "c8fdaf5b2547360a93e3081feeb9d28ea3e7cfad", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/fputs.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Ffputs.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Ffputs.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Ffputs.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -0,0 +1,7 @@\n+load_lib target-supports.exp\n+\n+if { [check_effective_target_freestanding] } {\n+        return 1; \n+}\n+\n+return 0;"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memcpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "c34ebb1f78a3e524b54f792df6d7c78655736fb3", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memmove-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test5 struct A on epiphany would require"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/mempcpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "3019199fefdbbdb9bac57fca97c68d3c8a471671", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memset-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3 struct A on epiphany would require"}, {"sha": "6f4746d43fbc0c334a4d15c058f5a2a7176d6f3d", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/pr23484-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fpr23484-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fpr23484-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fpr23484-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -0,0 +1,7 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n+return 0"}, {"sha": "3019199fefdbbdb9bac57fca97c68d3c8a471671", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/snprintf-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3 struct A on epiphany would require"}, {"sha": "3019199fefdbbdb9bac57fca97c68d3c8a471671", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/sprintf-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3 struct A on epiphany would require"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/stpcpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/stpncpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpncpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpncpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpncpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "3019199fefdbbdb9bac57fca97c68d3c8a471671", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strcat-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3 struct A on epiphany would require"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strcpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "3019199fefdbbdb9bac57fca97c68d3c8a471671", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strncat-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3 struct A on epiphany would require"}, {"sha": "61ec1640a109878f005d84f00470e0fa22c3c3d0", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strncpy-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test4 struct A on epiphany would require"}, {"sha": "1decd1468e7623a0d67d3f96789693d8c6922f90", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/vsnprintf-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3_sub struct A on epiphany would require"}, {"sha": "1decd1468e7623a0d67d3f96789693d8c6922f90", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/vsprintf-chk.x", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,9 @@\n+load_lib target-supports.exp\n+\n+if { ! [check_effective_target_nonlocal_goto] } {\n+    return 1\n+}\n+\n if [istarget \"epiphany-*-*\"] {\n     # This test assumes the absence of struct padding.\n     # to make this true for test3_sub struct A on epiphany would require"}, {"sha": "2e7a6cdd71be6e94b5bc58edf17463ccad91faa2", "filename": "gcc/testsuite/gcc.c-torture/execute/complex-6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n /* This test tests complex conjugate and passing/returning of\n    complex parameter.  */\n "}, {"sha": "bd3069f5383423daef6afdf86184a671bef06624", "filename": "gcc/testsuite/gcc.c-torture/execute/fprintf-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #include <stdio.h>\n #include <stdlib.h>\n "}, {"sha": "caad0a4bb3daad0788a8b920149b9d98e93074e1", "filename": "gcc/testsuite/gcc.c-torture/execute/fprintf-chk-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-chk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-chk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-chk-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #include <stdio.h>\n #include <stdlib.h>\n #include <stdarg.h>"}, {"sha": "a0b6e04465acb1dd4a6a0dd2b7aadbfec1b81d49", "filename": "gcc/testsuite/gcc.c-torture/execute/gofast.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fgofast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fgofast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fgofast.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n /* Program to test gcc's usage of the gofast library.  */\n \n /* The main guiding themes are to make it trivial to add test cases over time"}, {"sha": "f4212146cd1fe06c2d0a78aae17ecf1b2b346dfa", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -57,7 +57,7 @@ struct\n   };\n \n int\n-main (int argc, char *argv[], char *envp[])\n+main ()\n {\n   unsigned int i;\n "}, {"sha": "53e46ed26a2cf887d6c2689137e8c91880fe5464", "filename": "gcc/testsuite/gcc.c-torture/execute/pr34456.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34456.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34456.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr34456.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires qsort\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #include <stdlib.h>\n \n int __attribute__ ((noinline)) debug (void) { return 1; }"}, {"sha": "13e331d3e576205765c6357a41dc7ede5a8acbb4", "filename": "gcc/testsuite/gcc.c-torture/execute/printf-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #include <stdio.h>\n #include <stdlib.h>\n "}, {"sha": "fde85f9944274346dbaf478175ccb903af78291a", "filename": "gcc/testsuite/gcc.c-torture/execute/printf-chk-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-chk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-chk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-chk-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #include <stdio.h>\n #include <stdlib.h>\n #include <stdarg.h>"}, {"sha": "22565576413f8e56657b68b0f21b06cb47f6c5fe", "filename": "gcc/testsuite/gcc.c-torture/execute/switch-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fswitch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fswitch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fswitch-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -22,7 +22,7 @@ foo (int x)\n }\n \n int\n-main (int argc)\n+main ()\n {\n   int i, r;\n "}, {"sha": "c9ce492e8b985e9a580edaf797284fe902641eb0", "filename": "gcc/testsuite/gcc.c-torture/execute/vfprintf-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #ifndef test\n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "a642209c19b917e38b1913b30c5eab80e3ee8380", "filename": "gcc/testsuite/gcc.c-torture/execute/vfprintf-chk-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-chk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-chk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvfprintf-chk-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #ifndef test\n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "8b7038fd7bf2fd02571aaf6d7425e61f6a9e506d", "filename": "gcc/testsuite/gcc.c-torture/execute/vprintf-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #ifndef test\n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "f9bda6ed856f4ce08d15c7289fb07c80440bd3b3", "filename": "gcc/testsuite/gcc.c-torture/execute/vprintf-chk-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-chk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-chk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvprintf-chk-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires io\" { freestanding } { \"*\" } { \"\" } }  */\n+\n #ifndef test\n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "91640807efda87f6b35a027594c68065c9177ba8", "filename": "gcc/testsuite/gcc.dg/20030107-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2F20030107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2F20030107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030107-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fprofile-arcs\" } */\n+/* { dg-require-profiling \"-fprofile-generate\" } */\n \n extern void bar(void) __attribute__((noreturn));\n int foo (void) { bar(); }"}, {"sha": "0bc1b1c88e1ad190e2575c840a0c1cec81e9db07", "filename": "gcc/testsuite/gcc.dg/20030702-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do compile { target fpic } } */\n /* { dg-options \"-O2 -fpic -fprofile-arcs\" } */\n /* { dg-skip-if \"requires unsupported run-time relocation\" { spu-*-* } { \"*\" } { \"\" } } */\n+/* { dg-require-profiling \"-fprofile-generate\" } */\n \n int fork (void);\n "}, {"sha": "15c079f63fb30e4f28b1eb31207f423f8459eaf5", "filename": "gcc/testsuite/gcc.dg/cleanup-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-12.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fexceptions\" } */\n /* { dg-skip-if \"\" { \"ia64-*-hpux11.*\" }  { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ! nonlocal_goto } { \"*\" } { \"\" } } */\n /* Verify unwind info in presence of alloca.  */\n \n #include <unwind.h>"}, {"sha": "0ab1ca27650204a72b22e9189ac0a70b35291bd1", "filename": "gcc/testsuite/gcc.dg/cleanup-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-13.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-fexceptions\" } */\n /* { dg-skip-if \"\" { \"ia64-*-hpux11.*\" }  { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ! nonlocal_goto } { \"*\" } { \"\" } } */\n /* Verify DW_OP_* handling in the unwinder.  */\n \n #include <unwind.h>"}, {"sha": "816d4cef0c1588904e4afe8cdfa490778550875d", "filename": "gcc/testsuite/gcc.dg/cleanup-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-5.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run } */\n /* { dg-options \"-fexceptions\" } */\n /* { dg-skip-if \"\" { \"ia64-*-hpux11.*\" }  { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ! nonlocal_goto } { \"*\" } { \"\" } } */\n /* Verify that cleanups work with exception handling.  */\n \n #include <unwind.h>"}, {"sha": "73e9fc320070692f035637bf0b452dff87c85e8a", "filename": "gcc/testsuite/gcc.dg/constructor-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"\" { ! global_constructor } { \"*\" } { \"\" } } */\n \n /* The ipa-split pass pulls the body of the if(!x) block\n    into a separate function to make foo a better inlining"}, {"sha": "55bc46b061f57934a69d6fabfb21a6ec988010b3", "filename": "gcc/testsuite/gcc.dg/cpp/digraphs.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdigraphs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdigraphs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdigraphs.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -8,7 +8,11 @@\n \n extern int strcmp (const char *, const char *);\n extern void abort (void);\n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n #define err(str) do { puts(str); abort(); } while (0)\n \n %:define glue(x, y) x %:%: y\t/* #define glue(x, y) x ## y. */"}, {"sha": "3d7a9a8ddf8787d3233ebe8de657dfb460936597", "filename": "gcc/testsuite/gcc.dg/cpp/lexnum.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexnum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexnum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexnum.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -5,7 +5,11 @@\n \n /* Test lexing of numbers.  */\n \n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n #define err(str) do { puts(str); abort(); } while (0)\n "}, {"sha": "9e13cd5fa336327eb0ecce59fe4204bc4ccd72ec", "filename": "gcc/testsuite/gcc.dg/cpp/lexstrng.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexstrng.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexstrng.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Flexstrng.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -11,7 +11,11 @@\n typedef __WCHAR_TYPE__ wchar_t;\n \n extern int strcmp (const char *, const char *);\n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n #define err(str) do { puts(str); abort(); } while (0)\n "}, {"sha": "a2b1a38e295ebe2e910c0cf6953cb2bbcd000522", "filename": "gcc/testsuite/gcc.dg/cpp/macro1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -4,7 +4,11 @@\n \n /* Tests various macro abuse is correctly expanded.  */\n \n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n extern int strcmp(const char *s1, const char *s2);\n "}, {"sha": "b9bc7c2a8d0574b15c141bdd43ddd9442b9ef020", "filename": "gcc/testsuite/gcc.dg/cpp/paste2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste2.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -12,7 +12,11 @@\n typedef __WCHAR_TYPE__ wchar_t;\n \n extern int strcmp (const char *, const char *);\n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n #define err(str) do { puts(str); abort(); } while (0)\n "}, {"sha": "b2ee4ab5562786dc73ee3e98d2b19e0a91a4823f", "filename": "gcc/testsuite/gcc.dg/cpp/strify3.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify3.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -9,7 +9,11 @@\n    Neil Booth, 24 Sep 2001.  */\n \n extern int strcmp (const char *, const char *);\n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n #define err(str) do { puts(str); abort(); } while (0)\n "}, {"sha": "9b4c0ddf4f1a790f235522144f9697f4baee4817", "filename": "gcc/testsuite/gcc.dg/cpp/strify4.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify4.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -4,7 +4,11 @@\n    Andrew Pinski */\n \n extern int strcmp (const char *, const char *);\n+#if DEBUG\n extern int puts (const char *);\n+#else\n+#define puts(X)\n+#endif\n extern void abort (void);\n #define err(str) do { puts(str); abort(); } while (0)\n "}, {"sha": "ac162ae64b48277654673ed99c971f6a845b43f9", "filename": "gcc/testsuite/gcc.dg/debug/debug.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdebug.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdebug.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdebug.exp?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -19,6 +19,11 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n+# Disable on ptx\n+if { [istarget nvptx-*-*] } {\n+    return\n+}\n+\n # Initialize `dg'.\n dg-init\n "}, {"sha": "9063eb1d3a5d5fb039552bade12d6e6a2d3c7686", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/dwarf2.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -19,6 +19,11 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n+# Disable on ptx\n+if { [istarget nvptx-*-*] } {\n+    return\n+}\n+\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {"}, {"sha": "aedb9ee797ec9093b28d44767204f1c8d8246637", "filename": "gcc/testsuite/gcc.dg/fork-instrumentation.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -fprofile-generate\" } */\n+/* { dg-require-profiling \"-fprofile-generate\" } */\n+\n int fork(void);\n int\n t()"}, {"sha": "c5dcef24934e0ef959de2de8218d6206a2e22b12", "filename": "gcc/testsuite/gcc.dg/setjmp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-1.c?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -3,6 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O -Wclobbered -Wextra -Wall\" } */\n+/* { dg-skip-if \"\" { ! nonlocal_goto } { \"*\" } { \"\" } } */\n \n #include <setjmp.h>\n "}, {"sha": "55e1c4fc22eaeaff20f40e4dccacecd07e7548b3", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -150,6 +150,9 @@ proc gcc_target_compile { source dest type options } {\n     if [target_info exists gcc,no_label_values] {\n \tlappend options \"additional_flags=-DNO_LABEL_VALUES\"\n     }\n+    if [target_info exists gcc,signal_suppress] {\n+\tlappend options \"additional_flags=-DSIGNAL_SUPPRESS\"\n+    }\n \n     # TEST_ALWAYS_FLAGS are flags that should be passed to every\n     # compilation.  They are passed first to allow individual"}, {"sha": "91fd35ba72271a4a3470e7c8e46fe724c8eb5510", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a560e5d418a796c99d1c3d47209044a9cf5745c6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=a560e5d418a796c99d1c3d47209044a9cf5745c6", "patch": "@@ -580,7 +580,10 @@ proc check_profiling_available { test_what } {\n # in Section 4 of C99 standard. Effectively, it is a target which supports no\n # extra headers or libraries other than what is considered essential.\n proc check_effective_target_freestanding { } {\n-\treturn 0\n+    if { [istarget nvptx-*-*] } {\n+\treturn 1\n+    }\n+    return 0\n }\n \n # Return 1 if target has packed layout of structure members by\n@@ -644,6 +647,15 @@ proc check_effective_target_nonlocal_goto {} {\n     return 1\n }\n \n+# Return 1 if global constructors are supported, 0 otherwise.\n+\n+proc check_effective_target_global_constructor {} {\n+    if { [istarget nvptx-*-*] } {\n+\treturn 0\n+    }\n+    return 1\n+}\n+\n # Return 1 if taking label values is supported, 0 otherwise.\n \n proc check_effective_target_label_values {} {"}]}