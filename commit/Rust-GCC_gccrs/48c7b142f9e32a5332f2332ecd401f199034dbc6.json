{"sha": "48c7b142f9e32a5332f2332ecd401f199034dbc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjN2IxNDJmOWUzMmE1MzMyZjIzMzJlY2Q0MDFmMTk5MDM0ZGJjNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-09-28T19:31:37Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-09-28T19:31:37Z"}, "message": "arith.c: Change conditional test for inclusion of arctangent().\n\n2006-09-28  Steven G. Kargl <kargl@gcc.gnu.org>\n\n\t* arith.c: Change conditional test for inclusion of arctangent().\n\t(gfc_check_real_range): Change conditional test for use of\n\tmpfr_subnormalize.\n\t* simplify.c (gfc_simplify_atan2): Fix conditional for use of\n\tmpfr_atan2() instead of arctangent().\n\t(gfc_simplify_exponent): Fix conditional for use of mpfr_get_exp().\n \t(gfc_simplify_log): Fix conditional for use of mpfr_atan2() instead\n\t of arctangent().\n\t(gfc_simplify_nearest): Fix conditional for use of mpfr_nextafter().\n\nFrom-SVN: r117289", "tree": {"sha": "36dec650567cc39b4056c5be6dbc618241ee6e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36dec650567cc39b4056c5be6dbc618241ee6e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c7b142f9e32a5332f2332ecd401f199034dbc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c7b142f9e32a5332f2332ecd401f199034dbc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c7b142f9e32a5332f2332ecd401f199034dbc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c7b142f9e32a5332f2332ecd401f199034dbc6/comments", "author": null, "committer": null, "parents": [{"sha": "0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0461b801bf19aa735ecdd2d65e70ca253d5b6fbd"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "8f2e3c34f4d025d01051ffdd024aebc7cc1821d8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=48c7b142f9e32a5332f2332ecd401f199034dbc6", "patch": "@@ -1,3 +1,15 @@\n+2006-09-28  Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\t* arith.c: Change conditional test for inclusion of arctangent().\n+\t(gfc_check_real_range): Change conditional test for use of\n+\tmpfr_subnormalize.\n+\t* simplify.c (gfc_simplify_atan2): Fix conditional for use of\n+\tmpfr_atan2() instead of arctangent().\n+\t(gfc_simplify_exponent): Fix conditional for use of mpfr_get_exp().\n+ \t(gfc_simplify_log): Fix conditional for use of mpfr_atan2() instead\n+\t of arctangent().\n+\t(gfc_simplify_nearest): Fix conditional for use of mpfr_nextafter(). \n+\n 2006-09-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* arith.c: Conditionally include arctangent2()."}, {"sha": "086ec4dbb382b52f957b4808d3c7ed86e1dcf0d0", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=48c7b142f9e32a5332f2332ecd401f199034dbc6", "patch": "@@ -75,7 +75,7 @@ gfc_set_model (mpfr_t x)\n   mpfr_set_default_prec (mpfr_get_prec (x));\n }\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n /* Calculate atan2 (y, x)\n \n atan2(y, x) = atan(y/x)\t\t\t\tif x > 0,\n@@ -408,7 +408,7 @@ gfc_check_real_range (mpfr_t p, int kind)\n     }\n   else if (mpfr_cmp (q, gfc_real_kinds[i].tiny) < 0)\n     {\n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n       /* MPFR operates on a number with a given precision and enormous\n \texponential range.  To represent subnormal numbers, the exponent is\n \tallowed to become smaller than emin, but always retains the full"}, {"sha": "c9ca2300a6763a84c6e2c08c05af8854439020b7", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c7b142f9e32a5332f2332ecd401f199034dbc6/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=48c7b142f9e32a5332f2332ecd401f199034dbc6", "patch": "@@ -607,7 +607,7 @@ gfc_simplify_atan2 (gfc_expr * y, gfc_expr * x)\n       return &gfc_bad_expr;\n     }\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n   arctangent2 (y->value.real, x->value.real, result->value.real);\n #else\n   mpfr_atan2 (result->value.real, y->value.real, x->value.real, GFC_RND_MODE);\n@@ -1060,7 +1060,7 @@ gfc_simplify_exponent (gfc_expr * x)\n   int i;\n   gfc_expr *result;\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n   mpfr_t tmp;\n #endif\n \n@@ -1078,7 +1078,7 @@ gfc_simplify_exponent (gfc_expr * x)\n       return result;\n     }\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n   /* PR fortran/28276 suffers from a buggy MPFR, and this block of code\n      does not function correctly.  */\n   mpfr_init (tmp);\n@@ -2161,7 +2161,7 @@ gfc_simplify_log (gfc_expr * x)\n       mpfr_init (xr);\n       mpfr_init (xi);\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n       arctangent2 (x->value.complex.i, x->value.complex.r, result->value.complex.i);\n #else\n       mpfr_atan2 (result->value.complex.i, x->value.complex.i, x->value.complex.r,\n@@ -2495,7 +2495,7 @@ gfc_simplify_nearest (gfc_expr * x, gfc_expr * s)\n   gfc_expr *result;\n   mpfr_t tmp;\n   int sgn;\n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n   int direction;\n #else\n   mp_exp_t emin, emax;\n@@ -2513,7 +2513,7 @@ gfc_simplify_nearest (gfc_expr * x, gfc_expr * s)\n   gfc_set_model_kind (x->ts.kind);\n   result = gfc_copy_expr (x);\n \n-#if !defined(MPFR_VERSION_MAJOR)\n+#if MPFR_VERSION_MAJOR < 2 || (MPFR_VERSION_MAJOR == 2 && MPFR_VERSION_MINOR < 2)\n \n   direction = mpfr_sgn (s->value.real);\n   sgn = mpfr_sgn (x->value.real);"}]}