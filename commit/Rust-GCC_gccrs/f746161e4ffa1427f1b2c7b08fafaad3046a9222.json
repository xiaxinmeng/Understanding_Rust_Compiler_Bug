{"sha": "f746161e4ffa1427f1b2c7b08fafaad3046a9222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0NjE2MWU0ZmZhMTQyN2YxYjJjN2IwOGZhZmFhZDMwNDZhOTIyMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-05-23T17:56:26Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-05-23T17:56:26Z"}, "message": "re PR c++/14821 (Duplicate namespace alias declaration should not conflict)\n\n\tPR c++/14821\n\t* name-lookup.c (supplement_binding): Allow redefinitions of\n\tnamespace aliases.\n\n\tPR c++/14883\n\t* parser.c (cp_parser_template_argument): Robustify.\n\n\tPR c++/14821\n\t* g++.dg/other/ns1.C: New test.\n\n\tPR c++/14883\n\t* g++.dg/template/invalid1.C: New test.\n\nFrom-SVN: r82170", "tree": {"sha": "939b992140fb6e653d3be72640963ab2c43bbe46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939b992140fb6e653d3be72640963ab2c43bbe46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f746161e4ffa1427f1b2c7b08fafaad3046a9222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f746161e4ffa1427f1b2c7b08fafaad3046a9222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f746161e4ffa1427f1b2c7b08fafaad3046a9222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f746161e4ffa1427f1b2c7b08fafaad3046a9222/comments", "author": null, "committer": null, "parents": [{"sha": "3972995b195de4ecd0055f63351987a128546208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3972995b195de4ecd0055f63351987a128546208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3972995b195de4ecd0055f63351987a128546208"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "e6a652443b68090cc75ad192a7d7aa6474feba61", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -1,3 +1,12 @@\n+2004-05-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14821\n+\t* name-lookup.c (supplement_binding): Allow redefinitions of\n+\tnamespace aliases.\n+\n+\tPR c++/14883\n+\t* parser.c (cp_parser_template_argument): Robustify.\n+\n 2004-05-23  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* class.c (alter_access): Use %E format specifier to print an"}, {"sha": "ad8003da91ba8e9a86ff735dd1a59d0be8350d61", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -503,11 +503,22 @@ supplement_binding (cxx_binding *binding, tree decl)\n       duplicate_decls (decl, binding->value);\n       ok = false;\n     }\n+  else if (TREE_CODE (decl) == NAMESPACE_DECL\n+\t   && TREE_CODE (bval) == NAMESPACE_DECL\n+\t   && DECL_NAMESPACE_ALIAS (decl)\n+\t   && DECL_NAMESPACE_ALIAS (bval)\n+\t   && ORIGINAL_NAMESPACE (bval) == ORIGINAL_NAMESPACE (decl))\n+    /* [namespace.alias]\n+       \n+      In a declarative region, a namespace-alias-definition can be\n+      used to redefine a namespace-alias declared in that declarative\n+      region to refer only to the namespace to which it already\n+      refers.  */\n+    ok = false;\n   else\n     {\n       error (\"declaration of `%#D'\", decl);\n-      cp_error_at (\"conflicts with previous declaration `%#D'\",\n-\t\t   binding->value);\n+      cp_error_at (\"conflicts with previous declaration `%#D'\", bval);\n       ok = false;\n     }\n "}, {"sha": "59ef23ff8553a8e7baa57b9ddde466d3ea671d51", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -8417,12 +8417,16 @@ cp_parser_template_argument (cp_parser* parser)\n     cp_parser_error (parser, \"expected template-argument\");\n   if (!cp_parser_error_occurred (parser))\n     {\n-      /* Figure out what is being referred to.  */\n-      argument = cp_parser_lookup_name (parser, argument,\n-\t\t\t\t\t/*is_type=*/false,\n-\t\t\t\t\t/*is_template=*/template_p,\n-\t\t\t\t\t/*is_namespace=*/false,\n-\t\t\t\t\t/*check_dependency=*/true);\n+      /* Figure out what is being referred to.  If the id-expression\n+\t was for a class template specialization, then we will have a\n+\t TYPE_DECL at this point.  There is no need to do name lookup\n+\t at this point in that case.  */\n+      if (TREE_CODE (argument) != TYPE_DECL)\n+\targument = cp_parser_lookup_name (parser, argument,\n+\t\t\t\t\t  /*is_type=*/false,\n+\t\t\t\t\t  /*is_template=*/template_p,\n+\t\t\t\t\t  /*is_namespace=*/false,\n+\t\t\t\t\t  /*check_dependency=*/true);\n       if (TREE_CODE (argument) != TEMPLATE_DECL\n \t  && TREE_CODE (argument) != UNBOUND_CLASS_TEMPLATE)\n \tcp_parser_error (parser, \"expected template-name\");"}, {"sha": "d93b5c9a60e52be3541470bc412833b72a67bb56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -1,3 +1,11 @@\n+2004-05-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14821\n+\t* g++.dg/other/ns1.C: New test.\n+\n+\tPR c++/14883\n+\t* g++.dg/template/invalid1.C: New test.\n+\n 2004-05-23  Paul Brook  <paul@codesourcery.com>\n \tVictor Leikehman  <lei@haifasphere.co.il>\n "}, {"sha": "cb77780dc166e47be0b23b34bed7207cacefdb62", "filename": "gcc/testsuite/g++.dg/other/ns1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fns1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fns1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fns1.C?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/14821\n+\n+namespace A {\n+  namespace B {}\n+}\n+\n+namespace A {\n+  namespace Alias = ::A::B;\n+}\n+\n+namespace A {\n+  namespace Alias = ::A::B;\n+}"}, {"sha": "04b871068c72c430de5a36e066eccb9f35d07eb0", "filename": "gcc/testsuite/g++.dg/template/invalid1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finvalid1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746161e4ffa1427f1b2c7b08fafaad3046a9222/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finvalid1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finvalid1.C?ref=f746161e4ffa1427f1b2c7b08fafaad3046a9222", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/14883\n+\n+template < class T > struct DomainTraits {};\n+template < int Dim > class Interval;\n+template < class DT > class Domain {};\n+template <> class Interval < 1 >:public Domain < DomainTraits < Interval < 1 >\n+>> {}; // { dg-error \"\" }"}]}