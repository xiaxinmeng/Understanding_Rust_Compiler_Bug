{"sha": "f2991b48202740f19566099850048e8718da03b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5OTFiNDgyMDI3NDBmMTk1NjYwOTk4NTAwNDhlODcxOGRhMDNiMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-08-30T16:35:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-08-30T16:35:54Z"}, "message": "raise-gcc.c: Do not include coretypes.h and tm.h.\n\n\t* raise-gcc.c: Do not include coretypes.h and tm.h.\n\t(setup_to_install): Remove test for compiler macro.\n\t* targext.c: Document use for the library.\n\t* gcc-interface/Makefile.in: Fix comment on the use of IN_GCC.\n\nFrom-SVN: r178333", "tree": {"sha": "387af934db628c3ee3e1116abae25c0808282141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/387af934db628c3ee3e1116abae25c0808282141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2991b48202740f19566099850048e8718da03b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2991b48202740f19566099850048e8718da03b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2991b48202740f19566099850048e8718da03b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2991b48202740f19566099850048e8718da03b1/comments", "author": null, "committer": null, "parents": [{"sha": "10a22f4330b9f0e5be5f36690617d6094024c290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a22f4330b9f0e5be5f36690617d6094024c290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10a22f4330b9f0e5be5f36690617d6094024c290"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "ffa538714253415f665973af60582b4522f0081c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2991b48202740f19566099850048e8718da03b1", "patch": "@@ -1,3 +1,10 @@\n+2011-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* raise-gcc.c: Do not include coretypes.h and tm.h.\n+\t(setup_to_install): Remove test for compiler macro.\n+\t* targext.c: Document use for the library.\n+\t* gcc-interface/Makefile.in: Fix comment on the use of IN_GCC.\n+\n 2011-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Do not convert"}, {"sha": "7fb16136d18dad31135b80f25c32e7965d342b39", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=f2991b48202740f19566099850048e8718da03b1", "patch": "@@ -223,8 +223,9 @@ endif\n \n all.indirect: Makefile ../gnat1$(exeext)\n \n-# IN_GCC distinguishes between code compiled into GCC itself and other\n-# programs built during a bootstrap.\n+# IN_GCC is meant to distinguish between code compiled into GCC itself, i.e.\n+# for the host, and the rest.  But we also use it for the tools (link.c) and\n+# even break the host/target wall by using it for the library (targext.c).\n # autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a cross\n # compiler which does not use the native libraries and headers.\n INTERNAL_CFLAGS = @CROSS@ -DIN_GCC"}, {"sha": "0ced5598c1476446ba0d215d231d56cab663f3bf", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=f2991b48202740f19566099850048e8718da03b1", "patch": "@@ -35,14 +35,6 @@\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n-/* In the top-of-tree GCC, tconfig does not include tm.h, but in GCC 3.2\n-   it does.  To avoid branching raise.c just for that purpose, we kludge by\n-   looking for a symbol always defined by tm.h and if it's not defined,\n-   we include it.  */\n-#ifndef FIRST_PSEUDO_REGISTER\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#endif\n #include <sys/stat.h>\n #include <stdarg.h>\n typedef char bool;\n@@ -1007,11 +999,6 @@ setup_to_install (_Unwind_Context *uw_context,\n                   _Unwind_Ptr uw_landing_pad,\n                   int uw_filter)\n {\n-#ifndef EH_RETURN_DATA_REGNO\n-  /* We should not be called if the appropriate underlying support is not\n-     there.  */\n-  abort ();\n-#else\n   /* 1/ exception object pointer, which might be provided back to\n      _Unwind_Resume (and thus to this personality routine) if we are jumping\n      to a cleanup.  */\n@@ -1026,7 +1013,6 @@ setup_to_install (_Unwind_Context *uw_context,\n   /* Setup the address we should jump at to reach the code where there is the\n      \"something\" we found.  */\n   _Unwind_SetIP (uw_context, uw_landing_pad);\n-#endif\n }\n \n /* The following is defined from a-except.adb. Its purpose is to enable"}, {"sha": "6a9f970c2862163db04620c74a750c491156dec8", "filename": "gcc/ada/targext.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Ftargext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2991b48202740f19566099850048e8718da03b1/gcc%2Fada%2Ftargext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargext.c?ref=f2991b48202740f19566099850048e8718da03b1", "patch": "@@ -31,7 +31,9 @@\n \n /*  This file contains target-specific parameters describing the file\n     extension for object and executable files.  It is used by the compiler,\n-    binder and tools.  */\n+    binder, library and tools.\n+    Note that, in order to have access to the TARGET_* macros used below,\n+    the file must be compiled with IN_GCC defined, even for the library.  */\n \n #ifdef __cplusplus\n extern \"C\" {"}]}