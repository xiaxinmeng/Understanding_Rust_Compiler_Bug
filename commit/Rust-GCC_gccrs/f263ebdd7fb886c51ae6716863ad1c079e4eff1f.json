{"sha": "f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2M2ViZGQ3ZmI4ODZjNTFhZTY3MTY4NjNhZDFjMDc5ZTRlZmYxZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-06T01:02:19Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-06T01:02:19Z"}, "message": "* libjava.jacks/jacks.exp: New file.\n\nFrom-SVN: r58850", "tree": {"sha": "5311185595109bacadf9fc55e8131243a9acd3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5311185595109bacadf9fc55e8131243a9acd3f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f263ebdd7fb886c51ae6716863ad1c079e4eff1f/comments", "author": null, "committer": null, "parents": [{"sha": "0a288b9a2556ff6f64d42612f413269d85fff919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a288b9a2556ff6f64d42612f413269d85fff919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a288b9a2556ff6f64d42612f413269d85fff919"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "7cdad4a06a5a0275ec6728a1381b95aa96fcbcb1", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f263ebdd7fb886c51ae6716863ad1c079e4eff1f/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f263ebdd7fb886c51ae6716863ad1c079e4eff1f/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "patch": "@@ -1,3 +1,7 @@\n+2002-11-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libjava.jacks/jacks.exp: New file.\n+\n 2002-11-04  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.compile/pr7912.java: New file."}, {"sha": "4e49503ec92a4eeba99f9aef342f385243932b91", "filename": "libjava/testsuite/libjava.jacks/jacks.exp", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f263ebdd7fb886c51ae6716863ad1c079e4eff1f/libjava%2Ftestsuite%2Flibjava.jacks%2Fjacks.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f263ebdd7fb886c51ae6716863ad1c079e4eff1f/libjava%2Ftestsuite%2Flibjava.jacks%2Fjacks.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jacks%2Fjacks.exp?ref=f263ebdd7fb886c51ae6716863ad1c079e4eff1f", "patch": "@@ -0,0 +1,81 @@\n+# Run the Jacks test suite.\n+# See http://www-124.ibm.com/developerworks/oss/cvs/jikes/~checkout~/jacks/jacks.html\n+\n+proc gcj_jacks_write {filename} {\n+  global GCJ_UNDER_TEST\n+\n+  set gcjl [split $GCJ_UNDER_TEST]\n+  set gcj_cmd [lindex $gcjl 0]\n+  set rest [join [lreplace $gcjl 0 0]]\n+  append rest \" -C\"\n+\n+  set fd [open $filename w]\n+  puts $fd \"set JAVAC $gcj_cmd\"\n+  puts $fd \"set JAVA_CLASSPATH \\\"\\\"\"\n+  puts $fd \"set JAVAC_FLAGS [list $rest]\"\n+  puts $fd \"set JAVA [list [libjava_find_gij]]\"\n+  puts $fd \"set JAVA_FLAGS \\\"\\\"\"\n+  puts $fd \"set JAVAC_ENCODING_FLAG --encoding=\"\n+  puts $fd \"set tcltest::testConstraints(encoding) 1\"\n+  puts $fd \"set tcltest::testConstraints(gcj) 1\"\n+  # \"Time-consuming JVM limitation tests\".\n+  # puts $fd \"set tcltest::testConstraints(jvm) 1\"\n+  close $fd\n+}\n+\n+proc gcj_jacks_parse {file} {\n+  if {[catch {open $file} fd]} {\n+    verbose \"couldn't parse Jacks output: $fd\"\n+    return\n+  }\n+\n+  while {! [eof $fd]} {\n+    set line [gets $fd]\n+    if {[string match RESULT* $line]} {\n+      set linelist [split $line]\n+      if {[lindex $linelist 2] == \"PASSED\"} {\n+\tpass [lindex $linelist 1]\n+      } else {\n+\tfail [lindex $linelist 1]\n+      }\n+    }\n+  }\n+\n+  close $fd\n+}\n+\n+proc gcj_jacks_run {} {\n+  global srcdir\n+\n+  if {! [file isdirectory $srcdir/libjava.jacks/jacks]} {\n+    # No tests.\n+    verbose \"Jacks tests not found\"\n+    return\n+  }\n+\n+  # Jacks forces us to do this.  You can't run it from a separate\n+  # tree.\n+  verbose \"Copying Jacks...\"\n+  catch {system \"rm -rf jacks\"}\n+  catch {system \"cp -r $srcdir/libjava.jacks/jacks jacks\"}\n+\n+  set here [pwd]\n+  cd jacks\n+\n+  verbose \"Writing Jacks setup file\"\n+  gcj_jacks_write gcj_setup\n+\n+  verbose \"Running Jacks...\"\n+  if {[catch {exec ./jacks gcj} msg]} {\n+    verbose \"jacks invocation failure: $msg\"\n+    fail \"running jacks\"\n+  } else {\n+    pass \"running jacks\"\n+\n+    gcj_jacks_parse logging/gcj.log\n+  }\n+\n+  cd $here\n+}\n+\n+gcj_jacks_run"}]}