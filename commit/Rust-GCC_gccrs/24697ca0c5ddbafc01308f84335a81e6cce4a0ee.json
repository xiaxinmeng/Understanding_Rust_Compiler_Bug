{"sha": "24697ca0c5ddbafc01308f84335a81e6cce4a0ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2OTdjYTBjNWRkYmFmYzAxMzA4Zjg0MzM1YTgxZTZjY2U0YTBlZQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2001-09-04T13:10:26Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2001-09-04T13:10:26Z"}, "message": "Simplify length insn attribute and make more judicious use of insn attribute defaulting.\n\n2001-09-04  David S. Miller  <davem@redhat.com>\n\n\tSimplify length insn attribute and make more judicious use\n\tof insn attribute defaulting.\n\t* config/sparc/sparc.md (all insns with length > one): Mark as\n\tinsn type multi if real instructions, else use default if\n\tit is a forced splitter.\n\t(all insns with length == one): Use default insn length.\n\t(all insns of type ialu): Use default insn type.\n\n\tFix erroneous insn attribute settings.\n\t(addx): Set insn type to misc.\n\t(mulsidi3_sp64, const_mulsidi3_sp64, umulsidi3_sp64,\n\tconst_umulsidi3_sp64): Set insn type to imul.\n\n\tTrack SFmode vs DFmode insns according to UltraSPARC\n\tscheduling rules.\n\t* config/sparc/sparc.md (\"fptype\"): New attribute, default\n\tto \"single\".\n\t(all DFmode single insns): Mark as fptype \"double\".\n\nFrom-SVN: r45377", "tree": {"sha": "6334d7388ae3db48ce2327f14e209892baeca60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6334d7388ae3db48ce2327f14e209892baeca60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24697ca0c5ddbafc01308f84335a81e6cce4a0ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24697ca0c5ddbafc01308f84335a81e6cce4a0ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24697ca0c5ddbafc01308f84335a81e6cce4a0ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24697ca0c5ddbafc01308f84335a81e6cce4a0ee/comments", "author": null, "committer": null, "parents": [{"sha": "da86f08fd77a8fdc841d4b9dfdc732efcbe4099a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da86f08fd77a8fdc841d4b9dfdc732efcbe4099a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da86f08fd77a8fdc841d4b9dfdc732efcbe4099a"}], "stats": {"total": 981, "additions": 418, "deletions": 563}, "files": [{"sha": "0c88b6c8dd5037757c043a7d36762255b78a2311", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24697ca0c5ddbafc01308f84335a81e6cce4a0ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24697ca0c5ddbafc01308f84335a81e6cce4a0ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24697ca0c5ddbafc01308f84335a81e6cce4a0ee", "patch": "@@ -24,6 +24,25 @@\n \treferences.  Replace TYPE_{UNARY,BINARY,MOVE} references with\n \tTYPE_IALU.\n \t\n+\tSimplify length insn attribute and make more judicious use\n+\tof insn attribute defaulting.\n+\t* config/sparc/sparc.md (all insns with length > one): Mark as\n+\tinsn type multi if real instructions, else use default if\n+\tit is a forced splitter.\n+\t(all insns with length == one): Use default insn length.\n+\t(all insns of type ialu): Use default insn type.\n+\n+\tFix erroneous insn attribute settings.\n+\t(addx): Set insn type to misc.\n+\t(mulsidi3_sp64, const_mulsidi3_sp64, umulsidi3_sp64,\n+\tconst_umulsidi3_sp64): Set insn type to imul.\n+\t\n+\tTrack SFmode vs DFmode insns according to UltraSPARC\n+\tscheduling rules.\n+\t* config/sparc/sparc.md (\"fptype\"): New attribute, default\n+\tto \"single\".\n+\t(all DFmode single insns): Mark as fptype \"double\".\n+\n 2001-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* loop.c (express_from_1): Fix CONSTANT_P(a) case."}, {"sha": "a4f380dae075f0a6fe589229fb254fe91db8375d", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 399, "deletions": 563, "changes": 962, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24697ca0c5ddbafc01308f84335a81e6cce4a0ee/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24697ca0c5ddbafc01308f84335a81e6cce4a0ee/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=24697ca0c5ddbafc01308f84335a81e6cce4a0ee"}]}