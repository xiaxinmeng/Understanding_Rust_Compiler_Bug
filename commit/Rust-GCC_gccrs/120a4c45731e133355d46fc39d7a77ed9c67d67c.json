{"sha": "120a4c45731e133355d46fc39d7a77ed9c67d67c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwYTRjNDU3MzFlMTMzMzU1ZDQ2ZmMzOWQ3YTc3ZWQ5YzY3ZDY3Yw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-31T19:59:04Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-31T19:59:04Z"}, "message": "re PR fortran/54679 (Erroneous \"Expected P edit descriptor\" in conjunction with L descriptor)\n\n2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/54679\n\t* io.c (check_format): Adjust checks for FMT_L to treat a zero\n\twidth as an extension, giving warnings or error as appropriate.\n\tImprove messages.\n\tPR libgfortran/54679\n\t* io/format.c (parse_format_list): Adjust checks for FMT_L to\n\ttreat a zero width as an extension, giving warnings or error\n\tas appropriate. Improve messages.\n\tPR fortran/54679\n\t* gfortran.dg/fmt_l.f90: Update test.\n\t* gfortran.dg/fmt_l0.f90: New test.\n\nFrom-SVN: r241720", "tree": {"sha": "292ac1fe7c5478186685607a63e690054cfb4986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292ac1fe7c5478186685607a63e690054cfb4986"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/120a4c45731e133355d46fc39d7a77ed9c67d67c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120a4c45731e133355d46fc39d7a77ed9c67d67c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120a4c45731e133355d46fc39d7a77ed9c67d67c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120a4c45731e133355d46fc39d7a77ed9c67d67c/comments", "author": null, "committer": null, "parents": [{"sha": "5cea3ad6b50bc3bc014b3ce26774e99789c14a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cea3ad6b50bc3bc014b3ce26774e99789c14a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cea3ad6b50bc3bc014b3ce26774e99789c14a2f"}], "stats": {"total": 128, "additions": 85, "deletions": 43}, "files": [{"sha": "d3120e59fdf3d7c78ddec463931582b95f06a51b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -1,3 +1,10 @@\n+2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/54679\n+\t* io.c (check_format): Adjust checks for FMT_L to treat a zero\n+\twidth as an extension, giving warnings or error as appropriate.\n+\tImprove messages.\n+\n 2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-types.c (gfc_get_array_descr_info): For -gdwarf-5 or"}, {"sha": "80cf8308da71fa705443e2efd7851a173d400072", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -601,7 +601,7 @@ check_format (bool is_input)\n   const char *unexpected_end\t  = _(\"Unexpected end of format string\");\n   const char *zero_width\t  = _(\"Zero width in format descriptor\");\n \n-  const char *error;\n+  const char *error = NULL;\n   format_token t, u;\n   int level;\n   int repeat;\n@@ -867,27 +867,31 @@ check_format (bool is_input)\n \tgoto fail;\n       if (t == FMT_POSINT)\n \tbreak;\n-\n-      switch (gfc_notification_std (GFC_STD_GNU))\n+      if (mode != MODE_FORMAT)\n+\tformat_locus.nextc += format_string_pos;\n+      if (t == FMT_ZERO)\n \t{\n-\t  case WARNING:\n-\t    if (mode != MODE_FORMAT)\n-\t      format_locus.nextc += format_string_pos;\n-\t    gfc_warning (0, \"Extension: Missing positive width after L \"\n-\t\t\t \"descriptor at %L\", &format_locus);\n-\t    saved_token = t;\n-\t    break;\n-\n-\t  case ERROR:\n-\t    error = posint_required;\n-\t    goto syntax;\n-\n-\t  case SILENT:\n-\t    saved_token = t;\n-\t    break;\n-\n-\t  default:\n-\t    gcc_unreachable ();\n+\t  switch (gfc_notification_std (GFC_STD_GNU))\n+\t    {\n+\t      case WARNING:\n+\t\tgfc_warning (0, \"Extension: Zero width after L \"\n+\t\t\t     \"descriptor at %L\", &format_locus);\n+\t\tbreak;\n+\t      case ERROR:\n+\t\tgfc_error (\"Extension: Zero width after L \"\n+\t\t\t     \"descriptor at %L\", &format_locus);\n+\t\tgoto fail;\n+\t      case SILENT:\n+\t\tbreak;\n+\t      default:\n+\t\tgcc_unreachable ();\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  saved_token = t;\n+\t  gfc_notify_std (GFC_STD_GNU, \"Missing positive width after \"\n+\t\t\t  \"L descriptor at %L\", &format_locus);\n \t}\n       break;\n "}, {"sha": "36b4d8ecb3209fb037aefc36840a4227bd7a37b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -1,3 +1,9 @@\n+2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/54679\n+\t* gfortran.dg/fmt_l.f90: Update test.\n+\t* gfortran.dg/fmt_l0.f90: New test.\n+\n 2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/78089"}, {"sha": "0fd195515fcd2d53595de358e128102eca4a234b", "filename": "gcc/testsuite/gfortran.dg/fmt_l.f90", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l.f90?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -52,34 +52,34 @@ program test_l\n \n end program test_l\n ! { dg-output \"At line 14 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 15 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 19 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 20 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 24 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 25 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 29 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 30 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 34 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 35 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 39 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 40 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 44 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 45 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 49 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }\n ! { dg-output \"At line 50 of file.*\" }\n-! { dg-output \"Fortran runtime warning: Positive width required in format(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"Fortran runtime warning: Positive width required with L descriptor(\\n|\\r\\n|\\r)\" }"}, {"sha": "fab1ffb1ce90fe144a061658849b05ac6c837157", "filename": "gcc/testsuite/gfortran.dg/fmt_l0.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_l0.f90?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! { dg-options \"-std=gnu -pedantic\" }\n+! Test the GNU extension of a L format descriptor without width\n+! PR libfortran/54679\n+program main\n+  implicit none\n+  character(len=20) :: str\n+  character(len=60) :: format2 = \"(2(1x,l0,1x))\"\n+  write(str,format2)\n+end program main\n+! { dg-output \"At line 9 of file.*\" }\n+! { dg-output \"Fortran runtime warning: Zero width after L descriptor(\\n|\\r\\n|\\r)\" }"}, {"sha": "745adf798d2e2382b44b67ee0fa39c4ec9f8ef73", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -1,3 +1,10 @@\n+2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/54679\n+\t* io/format.c (parse_format_list): Adjust checks for FMT_L to\n+\ttreat a zero width as an extension, giving warnings or error\n+\tas appropriate. Improve messages.\n+\n 2016-10-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/78123"}, {"sha": "8a1859749e160af041d2f84fc0d23ce4efd84994", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120a4c45731e133355d46fc39d7a77ed9c67d67c/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120a4c45731e133355d46fc39d7a77ed9c67d67c/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=120a4c45731e133355d46fc39d7a77ed9c67d67c", "patch": "@@ -870,19 +870,25 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n       t = format_lex (fmt);\n       if (t != FMT_POSINT)\n \t{\n-\t  if (notification_std(GFC_STD_GNU) == NOTIFICATION_ERROR)\n+\t  if (t == FMT_ZERO)\n \t    {\n-\t      fmt->error = posint_required;\n-\t      goto finished;\n+\t      if (notification_std(GFC_STD_GNU) == NOTIFICATION_ERROR)\n+\t\t{\n+\t\t  fmt->error = \"Extension: Zero width after L descriptor\";\n+\t\t  goto finished;\n+\t\t}\n+\t      else\n+\t\tnotify_std (&dtp->common, GFC_STD_GNU,\n+\t\t\t    \"Zero width after L descriptor\");\n \t    }\n \t  else\n \t    {\n \t      fmt->saved_token = t;\n-\t      fmt->value = 1;\t/* Default width */\n-\t      notify_std (&dtp->common, GFC_STD_GNU, posint_required);\n+\t      notify_std (&dtp->common, GFC_STD_GNU,\n+\t\t\t  \"Positive width required with L descriptor\");\n \t    }\n+\t  fmt->value = 1;\t/* Default width */\n \t}\n-\n       get_fnode (fmt, &head, &tail, FMT_L);\n       tail->u.n = fmt->value;\n       tail->repeat = repeat;"}]}