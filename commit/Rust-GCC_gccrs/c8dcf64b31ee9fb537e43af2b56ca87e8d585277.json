{"sha": "c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "node_id": "C_kwDOANBUbNoAKGM4ZGNmNjRiMzFlZTlmYjUzN2U0M2FmMmI1NmNhODdlOGQ1ODUyNzc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-13T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-13T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "8c8720907fcc8459827f67da76b5fb3ac9c8ba5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c8720907fcc8459827f67da76b5fb3ac9c8ba5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/comments", "author": null, "committer": null, "parents": [{"sha": "b8f7ff76d6f0b7fdffc314a19425423606b5e296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f7ff76d6f0b7fdffc314a19425423606b5e296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f7ff76d6f0b7fdffc314a19425423606b5e296"}], "stats": {"total": 105, "additions": 104, "deletions": 1}, "files": [{"sha": "890ddae11cebd2f603edb7c88936c8d0717dde34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,45 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* Makefile.in: Remove unique-ptr-tests.o.\n+\t* selftest-run-tests.c (selftest::run_tests): Remove\n+\tunique_ptr_tests_cc_tests.\n+\t* selftest.h (unique_ptr_tests_cc_tests): Remove.\n+\t* system.h: Check INCLUDE_MEMORY instead of INCLUDE_UNIQUE_PTR\n+\tand include <memory> instead of \"unique-ptr.h\".\n+\t* unique-ptr-tests.cc: Removed.\n+\n+2021-12-12  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/nvptx/nvptx-opts.h (ptx_isa): Add PTX_ISA_SM53 ISA level\n+\tto enumeration.\n+\t* config/nvptx/nvptx.opt: Add sm_53 to -misa.\n+\t* config/nvptx/nvptx-modes.def: Add support for HFmode.\n+\t* config/nvptx/nvptx.h (TARGET_SM53):\n+\tNew helper macro to conditionalize functionality on target ISA.\n+\t* config/nvptx/nvptx-c.c (nvptx_cpu_cpp_builtins): Add __PTX_SM__\n+\tsupport for the new ISA levels.\n+\t* config/nvptx/nvptx.c (nvtx_ptx_type_from_mode): Support new HFmode\n+\twith the \".f16\" suffix/qualifier.\n+\t(nvptx_file_start): Add support for TARGET_SM53.\n+\t(nvptx_omp_device_kind_arch_isa): Add support for TARGET_SM53\n+\tand tweak TARGET_SM35.\n+\t(nvptx_scalar_mode_supported_p): Target hook with conditional\n+\tHFmode support on TARGET_SM53 and higher.\n+\t(nvptx_libgcc_floating_mode_supported_p): Likewise.\n+\t(TARGET_SCALAR_MODE_SUPPORTED_P): Use nvptx_scalar_mode_supported_p.\n+\t(TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P): Likewise, use new hook.\n+\t* config/nvptx/nvptx.md (*movhf_insn): New define_insn.\n+\t(movhf): New define_expand for HFmode moves.\n+\t(addhf3, subhf3, mulhf, extendhf<mode>2, trunc<mode>hf2): New\n+\tinstructions conditional on TARGET_SM53 (i.e. -misa=sm_53).\n+\n+2021-12-12  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/103665\n+\t* ipa-modref.c (modref_access_analysis::analyze): Terminate BB\n+\tanalysis on NULL memory access.\n+\t* ipa-pure-const.c (analyze_function): Likewise.\n+\n 2021-12-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-profile.c (ipa_profile): Do not update hot bb threshold."}, {"sha": "6fc1d23247b82f11f58896b66177bc91e3bf7bf5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1 +1 @@\n-20211212\n+20211213"}, {"sha": "b526affb64ed3d8499decec3dd57d2d5aef61841", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,7 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* engine.cc: Define INCLUDE_MEMORY instead of INCLUDE_UNIQUE_PTR.\n+\n 2021-12-06  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/103533"}, {"sha": "605a484584e31213e195486bb6d19a0aae466bfa", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,10 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* known-headers.cc: Define INCLUDE_MEMORY instead of\n+\tINCLUDE_UNIQUE_PTR.\n+\t* name-hint.h: Likewise.\n+\t(class name_hint): Use std::unique_ptr instead of gnu::unique_ptr.\n+\n 2021-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR pch/71934"}, {"sha": "90c06402167d615532ed6bd9e5daf0aeaa36df0e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,8 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* c-decl.c: Define INCLUDE_MEMORY instead of INCLUDE_UNIQUE_PTR.\n+\t* c-parser.c: Likewise.\n+\n 2021-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR pch/71934"}, {"sha": "0cdb2e1810c511eddc786148bb0ff3170887aa4c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,15 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* error.c: Define INCLUDE_MEMORY instead of\n+\tINCLUDE_UNIQUE_PTR.\n+\t* lex.c: Likewise.\n+\t* name-lookup.c: Likewise.\n+\t(class namespace_limit_reached): Use std::unique_ptr instead of\n+\tgnu::unique_ptr.\n+\t(suggest_alternatives_for): Use std::move instead of gnu::move.\n+\t(suggest_alternatives_in_other_namespaces): Likewise.\n+\t* parser.c: Define INCLUDE_MEMORY instead of INCLUDE_UNIQUE_PTR.\n+\n 2021-12-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/103401"}, {"sha": "ab06d513ee8614f08dbb47eb2a603105ec3d534c", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,19 @@\n+2021-12-12  Antoni Boucher  <bouanto@zoho.com>\n+\n+\tPR target/100688\n+\t* docs/topics/compatibility.rst (LIBGCCJIT_ABI_18): New ABI\n+\ttag.\n+\t* docs/topics/expressions.rst: Add documentation for the\n+\tfunction gcc_jit_lvalue_set_link_section.\n+\t* jit-playback.h: New function (set_link_section).\n+\t* jit-recording.c: New function (set_link_section) and\n+\tsupport for setting the link section.\n+\t* jit-recording.h: New function (set_link_section) and new\n+\tfield m_link_section.\n+\t* libgccjit.c: New function (gcc_jit_lvalue_set_link_section).\n+\t* libgccjit.h: New function (gcc_jit_lvalue_set_link_section).\n+\t* libgccjit.map (LIBGCCJIT_ABI_18): New ABI tag.\n+\n 2021-12-12  Antoni Boucher  <bouanto@zoho.com>\n \n \tPR target/95415"}, {"sha": "836fa332e1dba07eaed17b9fce1cc7ac723de63a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,16 @@\n+2021-12-12  Antoni Boucher  <bouanto@zoho.com>\n+\n+\tPR target/100688\n+\t* jit.dg/all-non-failing-tests.h: Mention new test\n+\tlink-section-assembler.\n+\t* jit.dg/test-link-section-assembler.c: New test.\n+\t* jit.dg/jit.exp: New helper function to test that the\n+\tassembly contains a pattern.\n+\n+2021-12-12  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/nvptx/float16-1.c: New test case.\n+\n 2021-12-12  Antoni Boucher  <bouanto@zoho.com>\n \n \tPR target/95415"}, {"sha": "6f5f7a9caf235778b82576f84e374e358c0e7406", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dcf64b31ee9fb537e43af2b56ca87e8d585277/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=c8dcf64b31ee9fb537e43af2b56ca87e8d585277", "patch": "@@ -1,3 +1,7 @@\n+2021-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* unique-ptr.h: Removed.\n+\n 2021-12-10  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* gomp-constants.h (GOMP_VERSION_GCN): Bump."}]}