{"sha": "9490b8da72088fe6f1b23c323749d977e3aa02f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5MGI4ZGE3MjA4OGZlNmYxYjIzYzMyMzc0OWQ5NzdlM2FhMDJmMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-04-25T04:29:07Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-04-25T04:29:07Z"}, "message": "re PR go/60931 (libgo has issues when page size is not 4k)\n\n\tPR go/60931\n\nruntime: Fix garbage collector issue with non 4kB system page size\n\nThe go garbage collector tracks memory in terms of 4kB pages.\nMost of the code checks getpagesize() at runtime and does the\nright thing.\n\nOn a 64kB ppc64 box I see SEGVs in long running processes\nwhich has been diagnosed as a bug in scavengelist.\nscavengelist does a madvise(MADV_DONTNEED) without rounding\nthe arguments to the system page size.  A strace of one of the\nfailures shows the problem:\n\nmadvise(0xc211030000, 4096, MADV_DONTNEED) = 0\n\nThe kernel rounds the length up to 64kB and we mark 60kB of\nvalid data as no longer needed.\n\nRound start up to a system page and end down before calling\nmadvise.\n\nFrom-SVN: r209777", "tree": {"sha": "18c5834b67f481d5fc0ec27e474a13cf00b8dff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18c5834b67f481d5fc0ec27e474a13cf00b8dff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9490b8da72088fe6f1b23c323749d977e3aa02f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9490b8da72088fe6f1b23c323749d977e3aa02f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9490b8da72088fe6f1b23c323749d977e3aa02f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9490b8da72088fe6f1b23c323749d977e3aa02f1/comments", "author": null, "committer": null, "parents": [{"sha": "44875f92068ad4a61dc01fb8d0442273c1854739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44875f92068ad4a61dc01fb8d0442273c1854739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44875f92068ad4a61dc01fb8d0442273c1854739"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "1b8ab79160610b9cbb5b7acd069fd69949786457", "filename": "libgo/runtime/mheap.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9490b8da72088fe6f1b23c323749d977e3aa02f1/libgo%2Fruntime%2Fmheap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9490b8da72088fe6f1b23c323749d977e3aa02f1/libgo%2Fruntime%2Fmheap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmheap.c?ref=9490b8da72088fe6f1b23c323749d977e3aa02f1", "patch": "@@ -387,7 +387,7 @@ forcegchelper(void *vnote)\n static uintptr\n scavengelist(MSpan *list, uint64 now, uint64 limit)\n {\n-\tuintptr released, sumreleased;\n+\tuintptr released, sumreleased, start, end, pagesize;\n \tMSpan *s;\n \n \tif(runtime_MSpanList_IsEmpty(list))\n@@ -400,7 +400,17 @@ scavengelist(MSpan *list, uint64 now, uint64 limit)\n \t\t\tmstats.heap_released += released;\n \t\t\tsumreleased += released;\n \t\t\ts->npreleased = s->npages;\n-\t\t\truntime_SysUnused((void*)(s->start << PageShift), s->npages << PageShift);\n+\n+\t\t\tstart = s->start << PageShift;\n+\t\t\tend = start + (s->npages << PageShift);\n+\n+\t\t\t// Round start up and end down to ensure we\n+\t\t\t// are acting on entire pages.\n+\t\t\tpagesize = getpagesize();\n+\t\t\tstart = ROUND(start, pagesize);\n+\t\t\tend &= ~(pagesize - 1);\n+\t\t\tif(end > start)\n+\t\t\t\truntime_SysUnused((void*)start, end - start);\n \t\t}\n \t}\n \treturn sumreleased;"}]}