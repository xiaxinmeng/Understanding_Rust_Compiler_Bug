{"sha": "ed00b051d907c6f2383c906ee2354c7ba7488dff", "node_id": "C_kwDOANBUbNoAKGVkMDBiMDUxZDkwN2M2ZjIzODNjOTA2ZWUyMzU0YzdiYTc0ODhkZmY", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-10-19T16:00:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:22Z"}, "message": "[Ada] Change format of the ?? warning insertion sequence\n\ngcc/ada/\n\n\t* errout.adb (Skip_Msg_Insertion_Warning): Adapt and format as\n\tErroutc.Prescan_Message.Parse_Message_Class.\n\t(Warn_Insertion): Adapt to new format.\n\t* errout.ads: Update documentation.\n\t* erroutc.adb (Get_Warning_Tag): Adapt to new format.\n\t(Prescan_Message): Introduce Parse_Message_Class function.\n\t(Validate_Specific_Warnings): Update ?W? to ?.w?.\n\t* erroutc.ads: Update type and documentation.\n\t* checks.adb (Validity_Check_Range): Update ?X? to ?.x?.\n\t* exp_ch11.adb (Possible_Local_Raise): Update ?X? to ?.x?.\n\t(Warn_If_No_Local_Raise): Likewise.\n\t(Warn_If_No_Propagation): Likewise.\n\t(Warn_No_Exception_Propagation_Active): Likewise.\n\t* exp_ch4.adb (Expand_N_Allocator): Attach warning message to\n\t-gnatw_a.\n\t* exp_prag.adb (Expand_Pragma_Check): Update ?A? to ?.a?.\n\t* exp_util.adb (Activate_Atomic_Synchronization): Update ?N? to\n\t?.n?.\n\t(Add_Invariant_Check): Update ?L? to ?.l?.\n\t* freeze.adb (Check_Suspicious_Modulus): Update ?M? to ?.m?.\n\t(Freeze_Entity): Update ?T? to ?.t?, ?Z? to ?.z?.\n\t* par-util.adb (Warn_If_Standard_Redefinition): Update ?K? to\n\t?.k?.\n\t* sem_attr.adb (Min_Max): Update ?U? to ?.u?.\n\t* sem_ch13.adb (Adjust_Record_For_Reverse_Bit_Order): Update ?V?\n\tto ?.v?.\n\t(Adjust_Record_For_Reverse_Bit_Order_Ada_95): Update ?V? to ?.v?.\n\t(Component_Size_Case): Update ?S? to ?.s?.\n\t(Analyze_Record_Representation_Clause): Update ?S? to ?.s? and\n\t?C? to ?.c?.\n\t(Add_Call): Update ?L? to ?.l?.\n\t(Component_Order_Check): Attach warning message to -gnatw_r.\n\t(Check_Component_List): Update ?H? to ?.h?.\n\t(Set_Biased): Update ?B? to ?.b?.\n\t* sem_ch3.adb (Modular_Type_Declaration): Update ?M? to ?.m?.\n\t* sem_ch4.adb (Analyze_Mod): Update ?M? to ?.m?.\n\t(Analyze_Quantified_Expression): Update ?T? to ?.t?.\n\t* sem_ch6.adb (Check_Conformance): Attach warning message to\n\t-gnatw_p.\n\t(List_Inherited_Pre_Post_Aspects): Update ?L? to ?.l?.\n\t* sem_ch7.adb (Unit_Requires_Body_Info): Update ?Y? to ?.y?.\n\t* sem_ch8.adb (Analyze_Object_Renaming): Update ?R? to ?.r?.\n\t* sem_prag.adb (Validate_Compile_Time_Warning_Or_Error): Attach\n\twarning message to -gnatw_c.\n\t* sem_res.adb (Check_Argument_Order): Update ?P? to ?.p?.\n\t(Resolve_Comparison_Op): Update ?U? to ?.u?.\n\t(Resolve_Range): Update ?U? to ?.u?.\n\t(Resolve_Short_Circuit): Update ?A? to ?.a?.\n\t(Resolve_Unary_Op): Update ?M? to ?.m?.\n\t* sem_util.adb (Check_Result_And_Post_State): Update ?T? to ?.t?.\n\t* sem_warn.adb (Output_Unused_Warnings_Off_Warnings): Update ?W?\n\tto ?.w?.\n\t* warnsw.ads: Update documentation for -gnatw_c.", "tree": {"sha": "03a01f06eabff72ca13c01c2f83e17a88bba9ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03a01f06eabff72ca13c01c2f83e17a88bba9ac2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed00b051d907c6f2383c906ee2354c7ba7488dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed00b051d907c6f2383c906ee2354c7ba7488dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed00b051d907c6f2383c906ee2354c7ba7488dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed00b051d907c6f2383c906ee2354c7ba7488dff/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e6be717c5bc9817c1a344627929642547e104f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e6be717c5bc9817c1a344627929642547e104f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e6be717c5bc9817c1a344627929642547e104f"}], "stats": {"total": 375, "additions": 193, "deletions": 182}, "files": [{"sha": "bbccab765c0597ccbd1cf87a46c693b8d98ff9f7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -847,7 +847,7 @@ package body Checks is\n             else\n                Error_Msg_N\n                  (\"\\address value may be incompatible with alignment of \"\n-                  & \"object?X?\", AC);\n+                  & \"object?.x?\", AC);\n             end if;\n          end if;\n "}, {"sha": "76a82681c2d765418d3a88e6eced86728cd6240f", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -211,12 +211,9 @@ package body Errout is\n    --  This is called for warning messages only (so Warning_Msg_Char is set)\n    --  and returns a corresponding string to use at the beginning of generated\n    --  auxiliary messages, such as \"in instantiation at ...\".\n-   --    'a' .. 'z'   returns \"?x?\"\n-   --    'A' .. 'Z'   returns \"?X?\"\n-   --    '*'          returns \"?*?\"\n-   --    '$'          returns \"?$?info: \"\n-   --    ' '          returns \" \"\n-   --  No other settings are valid\n+   --    \"?\"     returns \"??\"\n+   --    \" \"     returns \"?\"\n+   --    other   trimmed, prefixed and suffixed with \"?\".\n \n    -----------------------\n    -- Change_Error_Text --\n@@ -1177,7 +1174,7 @@ package body Errout is\n                   Errors.Table (Cur_Msg).Warn := True;\n                   Errors.Table (Cur_Msg).Warn_Chr := Warning_Msg_Char;\n \n-               elsif Warning_Msg_Char /= ' ' then\n+               elsif Warning_Msg_Char /= \"  \" then\n                   Errors.Table (Cur_Msg).Warn_Chr := Warning_Msg_Char;\n                end if;\n             end if;\n@@ -3927,12 +3924,15 @@ package body Errout is\n       P : Natural;     -- Current index;\n \n       procedure Skip_Msg_Insertion_Warning (C : Character);\n-      --  Deal with ? ?? ?x? ?X? ?*? ?$? insertion sequences (and the same\n+      --  Skip the ? ?? ?x? ?*? ?$? insertion sequences (and the same\n       --  sequences using < instead of ?). The caller has already bumped\n       --  the pointer past the initial ? or < and C is set to this initial\n       --  character (? or <). This procedure skips past the rest of the\n       --  sequence. We do not need to set Msg_Insertion_Char, since this\n       --  was already done during the message prescan.\n+      --  No validity check is performed as the insertion sequence is\n+      --  supposed to be sane. See Prescan_Message.Parse_Message_Class in\n+      --  erroutc.adb for the validity checks.\n \n       --------------------------------\n       -- Skip_Msg_Insertion_Warning --\n@@ -3943,17 +3943,16 @@ package body Errout is\n          if P <= Text'Last and then Text (P) = C then\n             P := P + 1;\n \n-         elsif P + 1 <= Text'Last\n-           and then (Text (P) in 'a' .. 'z'\n-                       or else\n-                     Text (P) in 'A' .. 'Z'\n-                       or else\n-                     Text (P) = '*'\n-                       or else\n-                     Text (P) = '$')\n-           and then Text (P + 1) = C\n+         elsif P < Text'Last and then Text (P + 1) = C\n+           and then Text (P) in 'a' .. 'z' | '*' | '$'\n          then\n             P := P + 2;\n+\n+         elsif P + 1 < Text'Last and then Text (P + 2) = C\n+           and then Text (P) in '.' | '_'\n+           and then Text (P + 1) in 'a' .. 'z'\n+         then\n+            P := P + 3;\n          end if;\n       end Skip_Msg_Insertion_Warning;\n \n@@ -4404,19 +4403,15 @@ package body Errout is\n \n    function Warn_Insertion return String is\n    begin\n-      case Warning_Msg_Char is\n-         when '?' =>\n-            return \"??\";\n-\n-         when 'a' .. 'z' | 'A' .. 'Z' | '*' | '$' =>\n-            return '?' & Warning_Msg_Char & '?';\n-\n-         when ' ' =>\n-            return \"?\";\n-\n-         when others =>\n-            raise Program_Error;\n-      end case;\n+      if Warning_Msg_Char = \"? \" then\n+         return \"??\";\n+      elsif Warning_Msg_Char = \"  \" then\n+         return \"?\";\n+      elsif Warning_Msg_Char (2) = ' ' then\n+         return '?' & Warning_Msg_Char (1) & '?';\n+      else\n+         return '?' & Warning_Msg_Char & '?';\n+      end if;\n    end Warn_Insertion;\n \n end Errout;"}, {"sha": "60b1b4fb62dd7fe1bdd3148b9c94c1500c597b90", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -60,13 +60,13 @@ package Errout is\n    --  Exception raised if Raise_Exception_On_Error is true\n \n    Warning_Doc_Switch : Boolean renames Err_Vars.Warning_Doc_Switch;\n-   --  If this is set True, then the ??/?*?/?$?/?x?/?X? insertion sequences in\n-   --  error messages generate appropriate tags for the output error messages.\n-   --  If this switch is False, then these sequences are still recognized (for\n-   --  the purposes of implementing the pattern matching in pragmas Warnings\n-   --  (Off,..) and Warning_As_Pragma(...) but do not result in adding the\n-   --  error message tag. The -gnatw.d switch sets this flag True, -gnatw.D\n-   --  sets this flag False.\n+   --  If this is set True, then the ??/?*?/?$?/?x?/?.x?/?_x? insertion\n+   --  sequences in error messages generate appropriate tags for the output\n+   --  error messages. If this switch is False, then these sequences are still\n+   --  recognized (for the purposes of implementing the pattern matching in\n+   --  pragmas Warnings (Off,..) and Warning_As_Pragma(...) but do not result\n+   --  in adding the error message tag. The -gnatw.d switch sets this flag\n+   --  True, -gnatw.D sets this flag False.\n \n    Current_Node : Node_Id := Empty;\n    --  Used by Error_Msg as a default Node_Id.\n@@ -302,28 +302,23 @@ package Errout is\n    --      clear that the continuation is part of a warning message, but it is\n    --      not necessary to go through any computational effort to include it.\n    --\n-   --      Note: this usage is obsolete, use ?? ?*? ?$? ?x? ?X? to specify\n-   --      the string to be added when Warn_Doc_Switch is set to True. If this\n-   --      switch is True, then for simple ? messages it has no effect. This\n-   --      simple form is to ease transition and may be removed later except\n-   --      for GNATprove-specific messages (info and warnings) which are not\n-   --      subject to the same GNAT warning switches.\n+   --      Note: this usage is obsolete, use ?? ?*? ?$? ?x? ?.x? ?_x? to\n+   --      specify the string to be added when Warn_Doc_Switch is set to True.\n+   --      If this switch is True, then for simple ? messages it has no effect.\n+   --      This simple form is to ease transition and may be removed later\n+   --      except for GNATprove-specific messages (info and warnings) which are\n+   --      not subject to the same GNAT warning switches.\n \n    --    Insertion character ?? (Two question marks: default warning)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n    --      \"[enabled by default]\" at the end of the warning message. For\n    --      continuations, use this in each continuation message.\n \n-   --    Insertion character ?x? (warning with switch)\n+   --    Insertion character ?x? ?.x? ?_x? (warning with switch)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n-   --      \"[-gnatwx]\" at the end of the warning message. x is a lower case\n-   --      letter. For continuations, use this on each continuation message.\n-\n-   --    Insertion character ?X? (warning with dot switch)\n-   --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n-   --      \"[-gnatw.x]\" at the end of the warning message. X is an upper case\n-   --      letter corresponding to the lower case letter x in the message.\n-   --      For continuations, use this on each continuation message.\n+   --      \"[-gnatwx]\", \"[-gnatw.x]\", or \"[-gnatw_x]\", at the end of the\n+   --      warning message. x must be lower case. For continuations, use this\n+   --      on each continuation message.\n \n    --    Insertion character ?*? (restriction warning)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n@@ -339,8 +334,8 @@ package Errout is\n    --    Insertion character < (Less Than: conditional warning message)\n    --      The character < appearing anywhere in a message is used for a\n    --      conditional error message. If Error_Msg_Warn is True, then the\n-   --      effect is the same as ? described above, and in particular << <X<\n-   --      <x< <$< <*< have the effect of ?? ?X? ?x? ?$? ?*? respectively. If\n+   --      effect is the same as ? described above, and in particular << <x<\n+   --      <$< <*< have the effect of ?? ?x? ?$? ?*? respectively. If\n    --      Error_Msg_Warn is False, then the < << or <X< sequence is ignored\n    --      and the message is treated as a error rather than a warning.\n "}, {"sha": "8225fd451c62ab9fb4739836a87bbbc23896e5cb", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 58, "deletions": 32, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -364,20 +364,20 @@ package body Erroutc is\n    ---------------------\n \n    function Get_Warning_Tag (Id : Error_Msg_Id) return String is\n-      Warn     : constant Boolean    := Errors.Table (Id).Warn;\n-      Warn_Chr : constant Character  := Errors.Table (Id).Warn_Chr;\n+      Warn     : constant Boolean         := Errors.Table (Id).Warn;\n+      Warn_Chr : constant String (1 .. 2) := Errors.Table (Id).Warn_Chr;\n    begin\n-      if Warn and then Warn_Chr /= ' ' then\n-         if Warn_Chr = '?' then\n+      if Warn and then Warn_Chr /= \"  \" then\n+         if Warn_Chr = \"? \" then\n             return \"[enabled by default]\";\n-         elsif Warn_Chr = '*' then\n+         elsif Warn_Chr = \"* \" then\n             return \"[restriction warning]\";\n-         elsif Warn_Chr = '$' then\n+         elsif Warn_Chr = \"$ \" then\n             return \"[-gnatel]\";\n-         elsif Warn_Chr in 'a' .. 'z' then\n+         elsif Warn_Chr (2) = ' ' then\n+            return \"[-gnatw\" & Warn_Chr (1) & ']';\n+         else\n             return \"[-gnatw\" & Warn_Chr & ']';\n-         else pragma Assert (Warn_Chr in 'A' .. 'Z');\n-            return \"[-gnatw.\" & Fold_Lower (Warn_Chr) & ']';\n          end if;\n       else\n          return \"\";\n@@ -841,14 +841,59 @@ package body Erroutc is\n    procedure Prescan_Message (Msg : String) is\n       J : Natural;\n \n+      function Parse_Message_Class return String;\n+      --  Convert the warning insertion sequence to a warning class represented\n+      --  as a length-two string padded, if necessary, with spaces.\n+      --  Return the Message class and set the iterator J to the character\n+      --  following the sequence.\n+      --  Raise a Program_Error if the insertion sequence is not valid.\n+\n+      -------------------------\n+      -- Parse_Message_Class --\n+      -------------------------\n+\n+      function Parse_Message_Class return String is\n+         C : constant Character := Msg (J - 1);\n+         Message_Class : String (1 .. 2) := \"  \";\n+      begin\n+         if J <= Msg'Last and then Msg (J) = C then\n+            Message_Class := \"? \";\n+            J := J + 1;\n+\n+         elsif J < Msg'Last and then Msg (J + 1) = C\n+           and then Msg (J) in 'a' .. 'z' | '*' | '$'\n+         then\n+            Message_Class := Msg (J) & \" \";\n+            J := J + 2;\n+\n+         elsif J + 1 < Msg'Last and then Msg (J + 2) = C\n+           and then Msg (J) in '.' | '_'\n+           and then Msg (J + 1) in 'a' .. 'z'\n+         then\n+            Message_Class := Msg (J .. J + 1);\n+            J := J + 3;\n+         elsif (J < Msg'Last and then Msg (J + 1) = C) or else\n+            (J + 1 < Msg'Last and then Msg (J + 2) = C)\n+         then\n+            raise Program_Error;\n+         end if;\n+\n+         --  In any other cases, this is not a warning insertion sequence\n+         --  and the default \"  \" value is returned.\n+\n+         return Message_Class;\n+      end Parse_Message_Class;\n+\n+   --  Start of processing for Prescan_Message\n+\n    begin\n       --  Nothing to do for continuation line, unless -gnatdF is set\n \n       if not Debug_Flag_FF and then Msg (Msg'First) = '\\' then\n          return;\n \n       --  Some global variables are not set for continuation messages, as they\n-      --  only make sense for the initial mesage.\n+      --  only make sense for the initial message.\n \n       elsif Msg (Msg'First) /= '\\' then\n \n@@ -900,29 +945,10 @@ package body Erroutc is\n \n          elsif Msg (J) = '?' or else Msg (J) = '<' then\n             Is_Warning_Msg := Msg (J) = '?' or else Error_Msg_Warn;\n-            Warning_Msg_Char := ' ';\n             J := J + 1;\n \n             if Is_Warning_Msg then\n-               declare\n-                  C : constant Character := Msg (J - 1);\n-               begin\n-                  if J <= Msg'Last then\n-                     if Msg (J) = C then\n-                        Warning_Msg_Char := '?';\n-                        J := J + 1;\n-\n-                     elsif J < Msg'Last and then Msg (J + 1) = C\n-                       and then (Msg (J) in 'a' .. 'z' or else\n-                                 Msg (J) in 'A' .. 'Z' or else\n-                                 Msg (J) = '*'         or else\n-                                 Msg (J) = '$')\n-                     then\n-                        Warning_Msg_Char := Msg (J);\n-                        J := J + 2;\n-                     end if;\n-                  end if;\n-               end;\n+               Warning_Msg_Char := Parse_Message_Class;\n             end if;\n \n             --  Bomb if untagged warning message. This code can be uncommented\n@@ -1687,7 +1713,7 @@ package body Erroutc is\n \n                if SWE.Open then\n                   Eproc.all\n-                    (\"?W?pragma Warnings Off with no matching Warnings On\",\n+                    (\"?.w?pragma Warnings Off with no matching Warnings On\",\n                      SWE.Start);\n \n                --  Warn for ineffective Warnings (Off, ..)\n@@ -1702,7 +1728,7 @@ package body Erroutc is\n                    (SWE.Msg'Length > 3 and then SWE.Msg (2 .. 3) = \"-W\")\n                then\n                   Eproc.all\n-                    (\"?W?no warning suppressed by this pragma\", SWE.Start);\n+                    (\"?.w?no warning suppressed by this pragma\", SWE.Start);\n                end if;\n             end if;\n          end;"}, {"sha": "0c194e803d868637551566b1d022be4f7b64cb9f", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -80,14 +80,14 @@ package Erroutc is\n    --  Set True to indicate that the current message starts with one of\n    --  \"high: \", \"medium: \", \"low: \" and is to be treated as a check message.\n \n-   Warning_Msg_Char : Character;\n-   --  Warning character, valid only if Is_Warning_Msg is True\n-   --    ' '      -- ?   or <   appeared on its own in message\n-   --    '?'      -- ??  or <<  appeared in message\n-   --    'x'      -- ?x? or <x< appeared in message (x = a .. z)\n-   --    'X'      -- ?X? or <X< appeared in message (X = A .. Z)\n-   --    '*'      -- ?*? or <*< appeared in message\n-   --    '$'      -- ?$? or <$< appeared in message\n+   Warning_Msg_Char : String (1 .. 2);\n+   --  Warning switch, valid only if Is_Warning_Msg is True\n+   --    \"  \"      -- ?   or <   appeared on its own in message\n+   --    \"? \"      -- ??  or <<  appeared in message\n+   --    \"x \"      -- ?x? or <x< appeared in message\n+   --              -- (x = a .. z | A .. Z | * | $)\n+   --    \".x\"      -- ?.x? appeared in message (x = a .. z | A .. Z)\n+   --    \"_x\"      -- ?_x? appeared in message (x = a .. z | A .. Z)\n    --  In the case of the < sequences, this is set only if the message is\n    --  actually a warning, i.e. if Error_Msg_Warn is True\n \n@@ -239,16 +239,8 @@ package Erroutc is\n       --  True if this is a warning message which is to be treated as an error\n       --  as a result of a match with a Warning_As_Error pragma.\n \n-      Warn_Chr : Character;\n-      --  Warning character (note: set even if Warning_Doc_Switch is False)\n-      --    ' '      -- ?   or <   appeared on its own in message\n-      --    '?'      -- ??  or <<  appeared in message\n-      --    'x'      -- ?x? or <x< appeared in message (x = a .. z)\n-      --    'X'      -- ?X? or <X< appeared in message (X = A .. Z)\n-      --    '*'      -- ?*? or <*< appeared in message\n-      --    '$'      -- ?$? or <$< appeared in message\n-      --  In the case of the < sequences, this is set only if the message is\n-      --  actually a warning, i.e. if Error_Msg_Warn is True\n+      Warn_Chr : String (1 .. 2);\n+      --  See Warning_Msg_Char\n \n       Style : Boolean;\n       --  True if style message (starts with \"(style)\")"}, {"sha": "b8a9a8dee63872ff87d5d1afeca4451e49165012", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -1861,10 +1861,10 @@ package body Exp_Ch11 is\n \n             if Configurable_Run_Time_Mode then\n                Error_Msg_NE\n-                 (\"\\?X?& may call Last_Chance_Handler\", N, E);\n+                 (\"\\?.x?& may call Last_Chance_Handler\", N, E);\n             else\n                Error_Msg_NE\n-                 (\"\\?X?& may result in unhandled exception\", N, E);\n+                 (\"\\?.x?& may result in unhandled exception\", N, E);\n             end if;\n          end if;\n       end;\n@@ -2163,7 +2163,7 @@ package body Exp_Ch11 is\n          Warn_No_Exception_Propagation_Active (N);\n \n          Error_Msg_N\n-           (\"\\?X?this handler can never be entered, and has been removed\", N);\n+           (\"\\?.x?this handler can never be entered, and has been removed\", N);\n       end if;\n    end Warn_If_No_Local_Raise;\n \n@@ -2180,10 +2180,10 @@ package body Exp_Ch11 is\n \n          if Configurable_Run_Time_Mode then\n             Error_Msg_N\n-              (\"\\?X?Last_Chance_Handler will be called on exception\", N);\n+              (\"\\?.x?Last_Chance_Handler will be called on exception\", N);\n          else\n             Error_Msg_N\n-              (\"\\?X?execution may raise unhandled exception\", N);\n+              (\"\\?.x?execution may raise unhandled exception\", N);\n          end if;\n       end if;\n    end Warn_If_No_Propagation;\n@@ -2195,7 +2195,7 @@ package body Exp_Ch11 is\n    procedure Warn_No_Exception_Propagation_Active (N : Node_Id) is\n    begin\n       Error_Msg_N\n-        (\"?X?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n+        (\"?.x?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n    end Warn_No_Exception_Propagation_Active;\n \n end Exp_Ch11;"}, {"sha": "1eebde446e7a991e6fd198b20d53997ed2489e77", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -4592,7 +4592,7 @@ package body Exp_Ch4 is\n                        and then Nkind (Associated_Node_For_Itype (PtrT)) =\n                                   N_Object_Declaration)\n       then\n-         Error_Msg_N (\"??use of an anonymous access type allocator\", N);\n+         Error_Msg_N (\"?_a?use of an anonymous access type allocator\", N);\n       end if;\n \n       --  RM E.2.2(17). We enforce that the expected type of an allocator"}, {"sha": "f0b4b0b93cae68d176fe101f25707a437a570d5c", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -563,9 +563,9 @@ package body Exp_Prag is\n             null;\n \n          elsif Nam = Name_Assert then\n-            Error_Msg_N (\"?A?assertion will fail at run time\", N);\n+            Error_Msg_N (\"?.a?assertion will fail at run time\", N);\n          else\n-            Error_Msg_N (\"?A?check will fail at run time\", N);\n+            Error_Msg_N (\"?.a?check will fail at run time\", N);\n          end if;\n       end if;\n    end Expand_Pragma_Check;"}, {"sha": "b0ea44a7f7b7786a8a00fdfd89314b75cdf19909", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -315,10 +315,10 @@ package body Exp_Util is\n \n          if Present (Msg_Node) then\n             Error_Msg_N\n-              (\"info: atomic synchronization set for &?N?\", Msg_Node);\n+              (\"info: atomic synchronization set for &?.n?\", Msg_Node);\n          else\n             Error_Msg_N\n-              (\"info: atomic synchronization set?N?\", N);\n+              (\"info: atomic synchronization set?.n?\", N);\n          end if;\n       end if;\n    end Activate_Atomic_Synchronization;\n@@ -2849,7 +2849,7 @@ package body Exp_Util is\n          if Inherited and Opt.List_Inherited_Aspects then\n             Error_Msg_Sloc := Sloc (Prag);\n             Error_Msg_N\n-              (\"info: & inherits `Invariant''Class` aspect from #?L?\", Typ);\n+              (\"info: & inherits `Invariant''Class` aspect from #?.l?\", Typ);\n          end if;\n \n          --  Add the pragma to the list of processed pragmas"}, {"sha": "d57f6d50312a64df70cc720e2166c33213b0ef23", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -3371,7 +3371,7 @@ package body Freeze is\n \n                            Error_Msg_Uint_1 := Modv;\n                            Error_Msg_N\n-                             (\"?M?2 '*'*^' may have been intended here\",\n+                             (\"?.m?2 '*'*^' may have been intended here\",\n                               Modulus);\n                         end;\n                      end if;\n@@ -6412,7 +6412,7 @@ package body Freeze is\n                         then\n                            Error_Msg_NE\n                              (\"useless postcondition, & is marked \"\n-                              & \"No_Return?T?\", Exp, E);\n+                              & \"No_Return?.t?\", Exp, E);\n                         end if;\n                      end if;\n \n@@ -6793,24 +6793,24 @@ package body Freeze is\n                   if Sloc (SC) > Sloc (AC) then\n                      Loc := SC;\n                      Error_Msg_NE\n-                       (\"?Z?size is not a multiple of alignment for &\",\n+                       (\"?.z?size is not a multiple of alignment for &\",\n                         Loc, E);\n                      Error_Msg_Sloc := Sloc (AC);\n                      Error_Msg_Uint_1 := Alignment (E);\n-                     Error_Msg_N (\"\\?Z?alignment of ^ specified #\", Loc);\n+                     Error_Msg_N (\"\\?.z?alignment of ^ specified #\", Loc);\n \n                   else\n                      Loc := AC;\n                      Error_Msg_NE\n-                       (\"?Z?size is not a multiple of alignment for &\",\n+                       (\"?.z?size is not a multiple of alignment for &\",\n                         Loc, E);\n                      Error_Msg_Sloc := Sloc (SC);\n                      Error_Msg_Uint_1 := RM_Size (E);\n-                     Error_Msg_N (\"\\?Z?size of ^ specified #\", Loc);\n+                     Error_Msg_N (\"\\?.z?size of ^ specified #\", Loc);\n                   end if;\n \n                   Error_Msg_Uint_1 := ((RM_Size (E) / Abits) + 1) * Abits;\n-                  Error_Msg_N (\"\\?Z?Object_Size will be increased to ^\", Loc);\n+                  Error_Msg_N (\"\\?.z?Object_Size will be increased to ^\", Loc);\n                end if;\n             end;\n          end if;"}, {"sha": "1d7283c819066a165a9c93246f88ba968284fdbf", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -816,7 +816,7 @@ package body Util is\n             C : constant Entity_Id := Current_Entity (N);\n          begin\n             if Present (C) and then Sloc (C) = Standard_Location then\n-               Error_Msg_N (\"redefinition of entity& in Standard?K?\", N);\n+               Error_Msg_N (\"redefinition of entity& in Standard?.k?\", N);\n             end if;\n          end;\n       end if;"}, {"sha": "e1ee09e5500c400e17e7f6d7810d470d83fe545f", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -2854,7 +2854,7 @@ package body Sem_Attr is\n          if Bad_Unordered_Enumeration_Reference (N, P_Base_Type) then\n             Error_Msg_Sloc := Sloc (P_Base_Type);\n             Error_Msg_NE\n-              (\"comparison on unordered enumeration type& declared#?U?\",\n+              (\"comparison on unordered enumeration type& declared#?.u?\",\n                N, P_Base_Type);\n          end if;\n       end Min_Max;"}, {"sha": "6059cee002276144de4e538eed80d56c6b2da0a9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -483,16 +483,16 @@ package body Sem_Ch13 is\n                      if Warn_On_Reverse_Bit_Order then\n                         Error_Msg_N\n                           (\"info: multi-byte field specified with \"\n-                           & \"non-standard Bit_Order?V?\", CC);\n+                           & \"non-standard Bit_Order?.v?\", CC);\n \n                         if Bytes_Big_Endian then\n                            Error_Msg_N\n                              (\"\\bytes are not reversed \"\n-                              & \"(component is big-endian)?V?\", CC);\n+                              & \"(component is big-endian)?.v?\", CC);\n                         else\n                            Error_Msg_N\n                              (\"\\bytes are not reversed \"\n-                              & \"(component is little-endian)?V?\", CC);\n+                              & \"(component is little-endian)?.v?\", CC);\n                         end if;\n                      end if;\n \n@@ -707,17 +707,18 @@ package body Sem_Ch13 is\n                      Error_Msg_Uint_1 := MSS;\n                      Error_Msg_N\n                        (\"info: reverse bit order in machine scalar of \"\n-                        & \"length^?V?\", First_Bit (CC));\n+                        & \"length^?.v?\", First_Bit (CC));\n                      Error_Msg_Uint_1 := NFB;\n                      Error_Msg_Uint_2 := NLB;\n \n                      if Bytes_Big_Endian then\n                         Error_Msg_NE\n-                          (\"\\big-endian range for component & is ^ .. ^?V?\",\n+                          (\"\\big-endian range for component & is ^ .. ^?.v?\",\n                            First_Bit (CC), Comp);\n                      else\n                         Error_Msg_NE\n-                          (\"\\little-endian range for component & is ^ .. ^?V?\",\n+                          (\"\\little-endian range for component \" &\n+                           \"& is ^ .. ^?.v?\",\n                            First_Bit (CC), Comp);\n                      end if;\n                   end if;\n@@ -782,16 +783,16 @@ package body Sem_Ch13 is\n                   then\n                      Error_Msg_N\n                        (\"info: multi-byte field specified with non-standard \"\n-                        & \"Bit_Order?V?\", CLC);\n+                        & \"Bit_Order?.v?\", CLC);\n \n                      if Bytes_Big_Endian then\n                         Error_Msg_N\n                           (\"\\bytes are not reversed \"\n-                           & \"(component is big-endian)?V?\", CLC);\n+                           & \"(component is big-endian)?.v?\", CLC);\n                      else\n                         Error_Msg_N\n                           (\"\\bytes are not reversed \"\n-                           & \"(component is little-endian)?V?\", CLC);\n+                           & \"(component is little-endian)?.v?\", CLC);\n                      end if;\n \n                   --  Do not allow non-contiguous field\n@@ -815,13 +816,13 @@ package body Sem_Ch13 is\n                   then\n                      Error_Msg_N\n                        (\"info: Bit_Order clause does not affect byte \"\n-                        & \"ordering?V?\", Pos);\n+                        & \"ordering?.v?\", Pos);\n                      Error_Msg_Uint_1 :=\n                        Intval (Pos) + Intval (FB) /\n                        System_Storage_Unit;\n                      Error_Msg_N\n                        (\"info: position normalized to ^ before bit order \"\n-                        & \"interpreted?V?\", Pos);\n+                        & \"interpreted?.v?\", Pos);\n                   end if;\n \n                   --  Here is where we fix up the Component_Bit_Offset value\n@@ -6911,7 +6912,7 @@ package body Sem_Ch13 is\n                  and then RM_Size (Ctyp) /= Csize\n                then\n                   Error_Msg_NE\n-                    (\"component size overrides size clause for&?S?\", N, Ctyp);\n+                    (\"component size overrides size clause for&?.s?\", N, Ctyp);\n                end if;\n \n                Set_Has_Component_Size_Clause (Btype, True);\n@@ -8809,7 +8810,7 @@ package body Sem_Ch13 is\n                           and then RM_Size (Etype (Comp)) /= Esize (Comp)\n                         then\n                            Error_Msg_NE\n-                             (\"?S?component size overrides size clause for&\",\n+                             (\"?.s?component size overrides size clause for&\",\n                               Component_Name (CC), Etype (Comp));\n                         end if;\n \n@@ -8918,7 +8919,7 @@ package body Sem_Ch13 is\n                   then\n                      Error_Msg_Sloc := Sloc (Comp);\n                      Error_Msg_NE\n-                       (\"?C?no component clause given for & declared #\",\n+                       (\"?.c?no component clause given for & declared #\",\n                         N, Comp);\n                   end if;\n \n@@ -10125,7 +10126,7 @@ package body Sem_Ch13 is\n             then\n                Error_Msg_Sloc := Sloc (Predicate_Function (T));\n                Error_Msg_Node_2 := T;\n-               Error_Msg_N (\"info: & inherits predicate from & #?L?\", Typ);\n+               Error_Msg_N (\"info: & inherits predicate from & #?.l?\", Typ);\n             end if;\n          end if;\n       end Add_Call;\n@@ -11910,7 +11911,7 @@ package body Sem_Ch13 is\n          Clause : Node_Id := First (Component_Clauses (N));\n          Prev_Bit_Offset : Uint := Uint_0;\n          OOO : constant String :=\n-           \"?component clause out of order with respect to declaration\";\n+           \"?_r?component clause out of order with respect to declaration\";\n \n       begin\n          --  Step Comp through components and Clause through component clauses,\n@@ -11936,7 +11937,7 @@ package body Sem_Ch13 is\n                  and then not Reverse_Storage_Order (Rectype)\n                  and then Component_Bit_Offset (Comp) < Prev_Bit_Offset\n                then\n-                  Error_Msg_N (\"?memory layout out of order\", Clause);\n+                  Error_Msg_N (\"?_r?memory layout out of order\", Clause);\n                   exit;\n                end if;\n \n@@ -12176,7 +12177,7 @@ package body Sem_Ch13 is\n \n                         if Warn and then Error_Msg_Uint_1 > 0 then\n                            Error_Msg_NE\n-                             (\"?H?^-bit gap before component&\",\n+                             (\"?.h?^-bit gap before component&\",\n                               Component_Name (Component_Clause (CEnt)),\n                               CEnt);\n                         end if;\n@@ -16700,7 +16701,7 @@ package body Sem_Ch13 is\n \n          if Warn_On_Biased_Representation then\n             Error_Msg_NE\n-              (\"?B?\" & Msg & \" forces biased representation for&\", N, E);\n+              (\"?.b?\" & Msg & \" forces biased representation for&\", N, E);\n          end if;\n       end if;\n    end Set_Biased;"}, {"sha": "b8ff3ce6ab4ca2fe4a9f6818b4d361b80b6adfd0", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -19890,7 +19890,7 @@ package body Sem_Ch3 is\n         and then Intval (Right_Opnd (Mod_Expr)) <= Uint_128\n       then\n          Error_Msg_N\n-           (\"suspicious MOD value, was '*'* intended'??M?\", Mod_Expr);\n+           (\"suspicious MOD value, was '*'* intended'??.m?\", Mod_Expr);\n       end if;\n \n       --  Proceed with analysis of mod expression"}, {"sha": "6afce5d5aab65d1f518eb07b3114c9d9383ca999", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -3229,7 +3229,7 @@ package body Sem_Ch4 is\n         and then Intval (Right_Opnd (Parent (N))) <= Uint_128\n       then\n          Error_Msg_N\n-           (\"suspicious MOD value, was '*'* intended'??M?\", Parent (N));\n+           (\"suspicious MOD value, was '*'* intended'??.m?\", Parent (N));\n       end if;\n \n       --  Remaining processing is same as for other arithmetic operators\n@@ -4334,7 +4334,7 @@ package body Sem_Ch4 is\n                     (if Kind = Conjunct then \"conjunct\" else \"disjunct\");\n                begin\n                   Error_Msg_NE\n-                    (\"?T?unused variable & in \" & Sub, Expr, Loop_Id);\n+                    (\"?.t?unused variable & in \" & Sub, Expr, Loop_Id);\n                   Error_Msg_NE\n                     (\"\\consider extracting \" & Sub & \" from quantified \"\n                      & \"expression\", Expr, Loop_Id);\n@@ -4354,7 +4354,7 @@ package body Sem_Ch4 is\n            and then not (Modify_Tree_For_C and In_Inlined_Body)\n          then\n             if not Referenced (Loop_Id, Cond) then\n-               Error_Msg_N (\"?T?unused variable &\", Loop_Id);\n+               Error_Msg_N (\"?.t?unused variable &\", Loop_Id);\n             else\n                Check_Subexpr (Cond, Kind => Full);\n             end if;\n@@ -4375,7 +4375,7 @@ package body Sem_Ch4 is\n         and then Nkind (Cond) = N_If_Expression\n         and then No_Else_Or_Trivial_True (Cond)\n       then\n-         Error_Msg_N (\"?T?suspicious expression\", N);\n+         Error_Msg_N (\"?.t?suspicious expression\", N);\n          Error_Msg_N (\"\\\\did you mean (for all X ='> (if P then Q))\", N);\n          Error_Msg_N (\"\\\\or (for some X ='> P and then Q) instead'?\", N);\n       end if;"}, {"sha": "af8756b2cca18f111510b4fc9b6a7199d106a2b8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -6254,7 +6254,7 @@ package body Sem_Ch6 is\n                           (Old_Id, Old_Type, New_Type)\n          then\n             Error_Msg_N (\"result subtypes conform but come from different \"\n-                          & \"declarations??\", New_Id);\n+                          & \"declarations?_p?\", New_Id);\n          end if;\n \n          --  Ada 2005 (AI-231): In case of anonymous access types check the\n@@ -6462,7 +6462,7 @@ package body Sem_Ch6 is\n                           (Old_Id, Old_Formal_Base, New_Formal_Base)\n          then\n             Error_Msg_N (\"formal subtypes conform but come from \"\n-                          & \"different declarations??\", New_Formal);\n+                          & \"different declarations?_p?\", New_Formal);\n          end if;\n \n          --  For mode conformance, mode must match\n@@ -10918,11 +10918,11 @@ package body Sem_Ch6 is\n                         if Pragma_Name (Prag) = Name_Precondition then\n                            Error_Msg_N\n                              (\"info: & inherits `Pre''Class` aspect from \"\n-                              & \"#?L?\", E);\n+                              & \"#?.l?\", E);\n                         else\n                            Error_Msg_N\n                              (\"info: & inherits `Post''Class` aspect from \"\n-                              & \"#?L?\", E);\n+                              & \"#?.l?\", E);\n                         end if;\n                      end if;\n "}, {"sha": "a0bddb192887b616e11a7554dca5c0ff2e2ea135", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -3363,12 +3363,12 @@ package body Sem_Ch7 is\n       --  Body required if library package with pragma Elaborate_Body\n \n       elsif Has_Pragma_Elaborate_Body (Pack_Id) then\n-         Error_Msg_N (\"info: & requires body (Elaborate_Body)?Y?\", Pack_Id);\n+         Error_Msg_N (\"info: & requires body (Elaborate_Body)?.y?\", Pack_Id);\n \n       --  Body required if subprogram\n \n       elsif Is_Subprogram_Or_Generic_Subprogram (Pack_Id) then\n-         Error_Msg_N (\"info: & requires body (subprogram case)?Y?\", Pack_Id);\n+         Error_Msg_N (\"info: & requires body (subprogram case)?.y?\", Pack_Id);\n \n       --  Body required if generic parent has Elaborate_Body\n \n@@ -3381,7 +3381,7 @@ package body Sem_Ch7 is\n          begin\n             if Has_Pragma_Elaborate_Body (G_P) then\n                Error_Msg_N\n-                 (\"info: & requires body (generic parent Elaborate_Body)?Y?\",\n+                 (\"info: & requires body (generic parent Elaborate_Body)?.y?\",\n                   Pack_Id);\n             end if;\n          end;\n@@ -3399,7 +3399,7 @@ package body Sem_Ch7 is\n                        (Node (First_Elmt (Abstract_States (Pack_Id))))\n       then\n          Error_Msg_N\n-           (\"info: & requires body (non-null abstract state aspect)?Y?\",\n+           (\"info: & requires body (non-null abstract state aspect)?.y?\",\n             Pack_Id);\n       end if;\n \n@@ -3410,7 +3410,8 @@ package body Sem_Ch7 is\n          if Requires_Completion_In_Body (E, Pack_Id) then\n             Error_Msg_Node_2 := E;\n             Error_Msg_NE\n-              (\"info: & requires body (& requires completion)?Y?\", E, Pack_Id);\n+              (\"info: & requires body (& requires completion)?.y?\", E,\n+               Pack_Id);\n          end if;\n \n          Next_Entity (E);"}, {"sha": "3590e5557c5c4ef086033d0d12bec07498cd1f4d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -1327,13 +1327,13 @@ package body Sem_Ch8 is\n                  and then Comes_From_Source (Nam)\n                then\n                   Error_Msg_N\n-                    (\"renaming function result object is suspicious?R?\", Nam);\n+                    (\"renaming function result object is suspicious?.r?\", Nam);\n                   Error_Msg_NE\n-                    (\"\\function & will be called only once?R?\", Nam,\n+                    (\"\\function & will be called only once?.r?\", Nam,\n                      Entity (Name (Nam)));\n                   Error_Msg_N -- CODEFIX\n                     (\"\\suggest using an initialized constant object \"\n-                     & \"instead?R?\", Nam);\n+                     & \"instead?.r?\", Nam);\n                end if;\n          end case;\n       end if;"}, {"sha": "10ad82fd8a4465a66c23289931c0002530dc7b3e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -31976,7 +31976,7 @@ package body Sem_Prag is\n          Error_Msg_N (\"condition is not known at compile time\", Arg1x);\n \n       elsif Warn_On_Unknown_Compile_Time_Warning then\n-         Error_Msg_N (\"??condition is not known at compile time\", Arg1x);\n+         Error_Msg_N (\"?_c?condition is not known at compile time\", Arg1x);\n       end if;\n    end Validate_Compile_Time_Warning_Or_Error;\n "}, {"sha": "f61eca21261b93423fb3669deca50f48f546aedf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -3712,7 +3712,7 @@ package body Sem_Res is\n \n                if Wrong_Order then\n                   Error_Msg_N\n-                    (\"?P?actuals for this call may be in wrong order\", N);\n+                    (\"?.p?actuals for this call may be in wrong order\", N);\n                end if;\n             end;\n          end;\n@@ -7488,7 +7488,7 @@ package body Sem_Res is\n       if Bad_Unordered_Enumeration_Reference (N, Etype (L)) then\n          Error_Msg_Sloc := Sloc (Etype (L));\n          Error_Msg_NE\n-           (\"comparison on unordered enumeration type& declared#?U?\",\n+           (\"comparison on unordered enumeration type& declared#?.u?\",\n             N, Etype (L));\n       end if;\n \n@@ -10647,7 +10647,7 @@ package body Sem_Res is\n       then\n          Error_Msg_Sloc := Sloc (Typ);\n          Error_Msg_NE\n-           (\"subrange of unordered enumeration type& declared#?U?\", N, Typ);\n+           (\"subrange of unordered enumeration type& declared#?.u?\", N, Typ);\n       end if;\n \n       Check_Unset_Reference (L);\n@@ -11163,7 +11163,7 @@ package body Sem_Res is\n                      --  of the First_Node call here.\n \n                      Error_Msg_F\n-                       (\"?A?assertion would fail at run time!\",\n+                       (\"?.a?assertion would fail at run time!\",\n                         Expression\n                           (First (Pragma_Argument_Associations (Orig))));\n                   end if;\n@@ -11194,7 +11194,7 @@ package body Sem_Res is\n                      --  comment above for an explanation of why we do this.\n \n                      Error_Msg_F\n-                       (\"?A?check would fail at run time!\",\n+                       (\"?.a?check would fail at run time!\",\n                         Expression\n                           (Last (Pragma_Argument_Associations (Orig))));\n                   end if;\n@@ -12185,7 +12185,7 @@ package body Sem_Res is\n         and then Expr_Value (R) > Uint_1\n       then\n          Error_Msg_N\n-           (\"?M?negative literal of modular type is in fact positive\", N);\n+           (\"?.m?negative literal of modular type is in fact positive\", N);\n          Error_Msg_Uint_1 := (-Expr_Value (R)) mod Modulus (B_Typ);\n          Error_Msg_Uint_2 := Expr_Value (R);\n          Error_Msg_N (\"\\do you really mean^ when writing -^ '?\", N);"}, {"sha": "724068138573eb39e438c2c97fe861d05e7422ff", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -4854,17 +4854,17 @@ package body Sem_Util is\n                if Pragma_Name (Prag) = Name_Contract_Cases then\n                   Error_Msg_NE (Adjust_Message\n                     (\"contract case does not check the outcome of calling \"\n-                     & \"&?T?\"), Expr, Subp_Id);\n+                     & \"&?.t?\"), Expr, Subp_Id);\n \n                elsif Pragma_Name (Prag) = Name_Refined_Post then\n                   Error_Msg_NE (Adjust_Message\n                     (\"refined postcondition does not check the outcome of \"\n-                     & \"calling &?T?\"), Err_Node, Subp_Id);\n+                     & \"calling &?.t?\"), Err_Node, Subp_Id);\n \n                else\n                   Error_Msg_NE (Adjust_Message\n                     (\"postcondition does not check the outcome of calling \"\n-                     & \"&?T?\"), Err_Node, Subp_Id);\n+                     & \"&?.t?\"), Err_Node, Subp_Id);\n                end if;\n             end if;\n          end Check_Conjunct;\n@@ -5132,20 +5132,20 @@ package body Sem_Util is\n       then\n          Error_Msg_N\n            (\"neither postcondition nor contract cases mention function \"\n-            & \"result?T?\", Post_Prag);\n+            & \"result?.t?\", Post_Prag);\n \n       --  The function has contract cases only and they do not mention\n       --  attribute 'Result.\n \n       elsif Present (Case_Prag) and then not Seen_In_Case then\n-         Error_Msg_N (\"contract cases do not mention result?T?\", Case_Prag);\n+         Error_Msg_N (\"contract cases do not mention result?.t?\", Case_Prag);\n \n       --  The function has postconditions only and they do not mention\n       --  attribute 'Result.\n \n       elsif Present (Post_Prag) and then not Seen_In_Post then\n          Error_Msg_N\n-           (\"postcondition does not mention function result?T?\", Post_Prag);\n+           (\"postcondition does not mention function result?.t?\", Post_Prag);\n       end if;\n    end Check_Result_And_Post_State;\n "}, {"sha": "d9d5d9583150ba8bdc89056ccd4f9269c78b7fdf", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -3293,21 +3293,21 @@ package body Sem_Warn is\n \n             elsif Warnings_Off_Used_Unmodified (E) then\n                Error_Msg_NE\n-                 (\"?W?could use Unmodified instead of \"\n+                 (\"?.w?could use Unmodified instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Used only in context where Unreferenced would have worked\n \n             elsif Warnings_Off_Used_Unreferenced (E) then\n                Error_Msg_NE\n-                 (\"?W?could use Unreferenced instead of \"\n+                 (\"?.w?could use Unreferenced instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Not used at all\n \n             else\n                Error_Msg_NE\n-                 (\"?W?pragma Warnings Off for & unused, \"\n+                 (\"?.w?pragma Warnings Off for & unused, \"\n                   & \"could be omitted\", N, E);\n             end if;\n          end;\n@@ -3863,7 +3863,7 @@ package body Sem_Warn is\n                      --  This is one of the messages\n \n                      Error_Msg_FE\n-                       (\"<I<writable actual for & overlaps with actual for &\",\n+                       (\"<.i<writable actual for & overlaps with actual for &\",\n                         Act1, Form1);\n                   end if;\n                end if;\n@@ -4220,11 +4220,11 @@ package body Sem_Warn is\n                if Nkind (Par) = N_Op_Eq then\n                   Error_Msg_N\n                     (\"suspicious equality test with modified version of \"\n-                     & \"same object?T?\", Par);\n+                     & \"same object?.t?\", Par);\n                else\n                   Error_Msg_N\n                     (\"suspicious inequality test with modified version of \"\n-                     & \"same object?T?\", Par);\n+                     & \"same object?.t?\", Par);\n                end if;\n             end if;\n          end if;"}, {"sha": "f58be1ea34e983898766e055cc3175f6a13640a4", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed00b051d907c6f2383c906ee2354c7ba7488dff/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=ed00b051d907c6f2383c906ee2354c7ba7488dff", "patch": "@@ -50,7 +50,8 @@ package Warnsw is\n \n    Warn_On_Unknown_Compile_Time_Warning : Boolean := True;\n    --  Warn on a pragma Compile_Time_Warning whose condition has a value that\n-   --  is not known at compile time.\n+   --  is not known at compile time. On by default, modified by use\n+   --  of -gnatw_c/_C and set as part of -gnatwa.\n \n    Warn_On_Overridden_Size : Boolean := False;\n    --  Warn when explicit record component clause or array component_size"}]}