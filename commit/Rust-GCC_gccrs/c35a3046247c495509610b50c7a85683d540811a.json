{"sha": "c35a3046247c495509610b50c7a85683d540811a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM1YTMwNDYyNDdjNDk1NTA5NjEwYjUwYzdhODU2ODNkNTQwODExYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-01-16T07:50:57Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-01-16T07:50:57Z"}, "message": "PR93253 \u2013 Document BOZ changes, make it friendlier in legacy code\n\n        PR fortran/93253\n        * check.c (gfc_invalid_boz): Mention -fallow-invalid-boz\n        in the error message.\n        * gfortran.texi (BOZ literal constants): List another missing\n        extension and refer to -fallow-invalid-boz.\n        * lang.opt (fallow-invalid-boz): Also mention 'X' in the help text\n        as it is not covered by the previous wording.\n        * primary.c (match_boz_constant): Tweak wording such that it is\n        clear how to fix the nonstandard use.\n\n        PR fortran/93253\n        * fortran.dg/boz_7.f90: Updated dg-error.", "tree": {"sha": "330563b37abe5109f2834b61a9593807f05c231e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/330563b37abe5109f2834b61a9593807f05c231e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c35a3046247c495509610b50c7a85683d540811a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35a3046247c495509610b50c7a85683d540811a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c35a3046247c495509610b50c7a85683d540811a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35a3046247c495509610b50c7a85683d540811a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03647d2e26176bb874460b67deab0c30aa715d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03647d2e26176bb874460b67deab0c30aa715d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03647d2e26176bb874460b67deab0c30aa715d59"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "889f01bce26b8add24901c698493e36be8341558", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -1,3 +1,15 @@\n+2020-01-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93253\n+\t* check.c (gfc_invalid_boz): Mention -fallow-invalid-boz\n+\tin the error message.\n+\t* gfortran.texi (BOZ literal constants): List another missing\n+\textension and refer to -fallow-invalid-boz.\n+\t* lang.opt (fallow-invalid-boz): Also mention 'X' in the help text\n+\tas it is not covered by the previous wording.\n+\t* primary.c (match_boz_constant): Tweak wording such that it is\n+\tclear how to fix the nonstandard use.\n+\n 2020-01-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/65428"}, {"sha": "519aa8b8c2b640b4ee8fa03211aa7b810e47eab2", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -67,7 +67,12 @@ gfc_invalid_boz (const char *msg, locus *loc)\n       return false;\n     }\n \n-  gfc_error (msg, loc);\n+  const char hint[] = \" [see %<-fno-allow-invalid-boz%>]\";\n+  size_t len = strlen (msg) + strlen (hint) + 1;\n+  char *msg2 = (char *) alloca (len);\n+  strcpy (msg2, msg);\n+  strcat (msg2, hint);\n+  gfc_error (msg2, loc);\n   return true;\n }\n "}, {"sha": "a50634ab9d26cbb5e628d3058d99847e55da7051", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -1863,9 +1863,12 @@ Fortran standard states that the treatment of the sign bit is processor\n dependent.  Gfortran interprets the sign bit as a user would expect.\n \n As a deprecated extension, GNU Fortran allows hexadecimal BOZ literal\n-constants to be specified using the @code{X} prefix.  The BOZ literal\n+constants to be specified using the @code{X} prefix.  That the BOZ literal\n constant can also be specified by adding a suffix to the string, for\n-example, @code{Z'ABC'} and @code{'ABC'X} are equivalent.\n+example, @code{Z'ABC'} and @code{'ABC'X} are equivalent.  Additionally,\n+as extension, BOZ literals are permitted in some contexts outside of\n+@code{DATA} and the intrinsic functions listed in the Fortran standard.\n+Use @option{-fallow-invalid-boz} to enable the extension.\n \n @node Real array indices\n @subsection Real array indices"}, {"sha": "59523f74acf9189a277971fdcf70f39c70a07f5c", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -387,7 +387,7 @@ All intrinsics procedures are available regardless of selected standard.\n \n fallow-invalid-boz\n Fortran RejectNegative Var(flag_allow_invalid_boz)\n-Allow a BOZ literal constant to appear in an invalid context.\n+Allow a BOZ literal constant to appear in an invalid context and with X instead of Z.\n \n fallow-leading-underscore\n Fortran Undocumented Var(flag_allow_leading_underscore)"}, {"sha": "07b8ac08ba20faf99bf91d3d144f01ea7d712b89", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -433,7 +433,7 @@ match_boz_constant (gfc_expr **result)\n \n   if (x_hex\n       && gfc_invalid_boz (\"Hexadecimal constant at %L uses \"\n-\t\t\t  \"nonstandard syntax\", &gfc_current_locus))\n+\t\t\t  \"nonstandard X instead of Z\", &gfc_current_locus))\n     return MATCH_ERROR;\n \n   old_loc = gfc_current_locus;"}, {"sha": "d6ba8d6474d4f48ac0890b0466e62a2cca0f6674", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -1,3 +1,8 @@\n+2020-01-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93253\n+\t* fortran.dg/boz_7.f90: Updated dg-error.\n+\n 2020-01-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/91073"}, {"sha": "d2a51ac03e206f38bfb7055fb0923454514116b5", "filename": "gcc/testsuite/gfortran.dg/boz_7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35a3046247c495509610b50c7a85683d540811a/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_7.f90?ref=c35a3046247c495509610b50c7a85683d540811a", "patch": "@@ -7,6 +7,6 @@\n !\n integer :: k, m\n integer :: j = z'000abc' ! { dg-error \"BOZ used outside a DATA statement\" }\n-data k/x'0003'/ ! { dg-error \"nonstandard syntax\" }\n+data k/x'0003'/ ! { dg-error \"nonstandard X instead of Z\" }\n data m/'0003'z/ ! { dg-error \"nonstandard postfix\" }\n end"}]}