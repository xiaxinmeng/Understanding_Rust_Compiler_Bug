{"sha": "c4e861e80b499e06cbe79677d29d89fe517d356b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlODYxZTgwYjQ5OWUwNmNiZTc5Njc3ZDI5ZDg5ZmU1MTdkMzU2Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-23T22:43:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-23T22:43:26Z"}, "message": "(try_combine, simplify_shift_const): Add initializations for some\nuninitialized variables.\n\nFrom-SVN: r6148", "tree": {"sha": "c4e9f8f5b2aa206488648880d27e7e286144ff40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4e9f8f5b2aa206488648880d27e7e286144ff40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4e861e80b499e06cbe79677d29d89fe517d356b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e861e80b499e06cbe79677d29d89fe517d356b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e861e80b499e06cbe79677d29d89fe517d356b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e861e80b499e06cbe79677d29d89fe517d356b/comments", "author": null, "committer": null, "parents": [{"sha": "d66230e738488d10f7c6242163d8325024e90b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66230e738488d10f7c6242163d8325024e90b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66230e738488d10f7c6242163d8325024e90b75"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f4da033f10cd2b5493c1e3b4251298e4d545b543", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e861e80b499e06cbe79677d29d89fe517d356b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e861e80b499e06cbe79677d29d89fe517d356b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c4e861e80b499e06cbe79677d29d89fe517d356b", "patch": "@@ -1162,7 +1162,7 @@ try_combine (i3, i2, i1)\n   /* PATTERN (I2), or a copy of it in certain cases.  */\n   rtx i2pat;\n   /* Indicates if I2DEST or I1DEST is in I2SRC or I1_SRC.  */\n-  int i2dest_in_i2src, i1dest_in_i1src = 0, i2dest_in_i1src = 0;\n+  int i2dest_in_i2src = 0, i1dest_in_i1src = 0, i2dest_in_i1src = 0;\n   int i1_feeds_i3 = 0;\n   /* Notes that must be added to REG_NOTES in I3 and I2.  */\n   rtx new_i3_notes, new_i2_notes;\n@@ -1262,7 +1262,7 @@ try_combine (i3, i2, i1)\n \t      subst_insn = i3;\n \t      subst_low_cuid = INSN_CUID (i2);\n \n-\t      added_sets_2 = 0;\n+\t      added_sets_2 = added_sets_1 = 0;\n \t      i2dest = SET_SRC (PATTERN (i3));\n \n \t      /* Replace the dest in I2 with our dest and make the resulting\n@@ -7257,7 +7257,7 @@ simplify_shift_const (x, code, result_mode, varop, count)\n     = (GET_MODE_SIZE (mode) + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD;\n   /* We form (outer_op (code varop count) (outer_const)).  */\n   enum rtx_code outer_op = NIL;\n-  HOST_WIDE_INT outer_const;\n+  HOST_WIDE_INT outer_const = 0;\n   rtx const_rtx;\n   int complement_p = 0;\n   rtx new;"}]}