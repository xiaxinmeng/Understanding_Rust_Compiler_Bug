{"sha": "fa53ca71968d55090aad54653415cd38029b4421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1M2NhNzE5NjhkNTUwOTBhYWQ1NDY1MzQxNWNkMzgwMjliNDQyMQ==", "commit": {"author": {"name": "Evgeny Stupachenko", "email": "evstupac@gmail.com", "date": "2014-10-13T17:28:24Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-13T17:28:24Z"}, "message": "i386.c (ix86_address_cost): Lower cost for when address contains GOT register.\n\n\ngcc/\n\t* config/i386/i386.c (ix86_address_cost): Lower cost for\n\twhen address contains GOT register.\n\nFrom-SVN: r216155", "tree": {"sha": "b3f4799d15bc80d8b0006bd099241bf97e15e97d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f4799d15bc80d8b0006bd099241bf97e15e97d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa53ca71968d55090aad54653415cd38029b4421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa53ca71968d55090aad54653415cd38029b4421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa53ca71968d55090aad54653415cd38029b4421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa53ca71968d55090aad54653415cd38029b4421/comments", "author": {"login": "evstupac", "id": 38332307, "node_id": "MDQ6VXNlcjM4MzMyMzA3", "avatar_url": "https://avatars.githubusercontent.com/u/38332307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evstupac", "html_url": "https://github.com/evstupac", "followers_url": "https://api.github.com/users/evstupac/followers", "following_url": "https://api.github.com/users/evstupac/following{/other_user}", "gists_url": "https://api.github.com/users/evstupac/gists{/gist_id}", "starred_url": "https://api.github.com/users/evstupac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evstupac/subscriptions", "organizations_url": "https://api.github.com/users/evstupac/orgs", "repos_url": "https://api.github.com/users/evstupac/repos", "events_url": "https://api.github.com/users/evstupac/events{/privacy}", "received_events_url": "https://api.github.com/users/evstupac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcb21886b9ea0c3836e401b75e0b8304b38aed2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb21886b9ea0c3836e401b75e0b8304b38aed2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb21886b9ea0c3836e401b75e0b8304b38aed2f"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "7dfd1b80bb0dcbf39b8e10f430a68e9e2e6f0899", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa53ca71968d55090aad54653415cd38029b4421/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa53ca71968d55090aad54653415cd38029b4421/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa53ca71968d55090aad54653415cd38029b4421", "patch": "@@ -1,3 +1,8 @@\n+2014-10-13  Evgeny Stupachenko  <evstupac@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_address_cost): Lower cost for\n+\twhen address contains GOT register.\n+\n 2014-10-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n \t    Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "1c38353cc9c22c0135f237b2030ea601d3bffb08", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa53ca71968d55090aad54653415cd38029b4421/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa53ca71968d55090aad54653415cd38029b4421/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fa53ca71968d55090aad54653415cd38029b4421", "patch": "@@ -12455,9 +12455,18 @@ ix86_address_cost (rtx x, enum machine_mode, addr_space_t, bool)\n \t      || REGNO (parts.index) >= FIRST_PSEUDO_REGISTER)))\n     cost++;\n \n+  /* When address base or index is \"pic_offset_table_rtx\" we don't increase\n+     address cost.  When a memopt with \"pic_offset_table_rtx\" is not invariant\n+     itself it most likely means that base or index is not invariant.\n+     Therefore only \"pic_offset_table_rtx\" could be hoisted out, which is not\n+     profitable for x86.  */\n   if (parts.base\n+      && (!pic_offset_table_rtx\n+\t  || REGNO (pic_offset_table_rtx) != REGNO(parts.base))\n       && (!REG_P (parts.base) || REGNO (parts.base) >= FIRST_PSEUDO_REGISTER)\n       && parts.index\n+      && (!pic_offset_table_rtx\n+\t  || REGNO (pic_offset_table_rtx) != REGNO(parts.index))\n       && (!REG_P (parts.index) || REGNO (parts.index) >= FIRST_PSEUDO_REGISTER)\n       && parts.base != parts.index)\n     cost++;"}]}