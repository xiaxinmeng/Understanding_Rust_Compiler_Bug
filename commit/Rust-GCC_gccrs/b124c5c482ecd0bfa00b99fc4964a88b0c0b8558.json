{"sha": "b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEyNGM1YzQ4MmVjZDBiZmEwMGI5OWZjNDk2NGE4OGIwYzBiODU1OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-02-17T20:26:32Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-02-17T20:26:32Z"}, "message": "re PR libstdc++/47058 (\"--enable-maintainer-mode --disable-werror\" wrongly upgrades warnings to errors in libstdc++)\n\n2012-02-17  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/47058\n\t* acinclude.m4 (GLIBCXX_ENABLE_WERROR): New.\n\t(GLIBCXX_EXPORT_FLAGS): Add -Wabi to WARN_FLAGS\n\t* configure.ac: Use it.\n\t* fragment.am: Set WERROR_FLAG conditionally on --disable-werror.\n\t* configure: Regenerate.\n\t* python/Makefile.in: Same.\n\t* Makefile.in: Same.\n\t* doc/Makefile.in: Same.\n\t* include/Makefile.in: Same.\n\t* po/Makefile.in: Same.\n\t* python/Makefile.in: Same.\n\t* src/Makefile.in: Same.\n\t* src/c++11/Makefile.in: Same.\n\t* src/c++98/Makefile.in: Same.\n\t* testsuite/Makefile.in: Same.\n\nFrom-SVN: r184349", "tree": {"sha": "9b181e25f4c9662252530db362b30ffcf42f7b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b181e25f4c9662252530db362b30ffcf42f7b28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/comments", "author": null, "committer": null, "parents": [{"sha": "5a815b930afa24b49723919b0e7da0bd04028d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a815b930afa24b49723919b0e7da0bd04028d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a815b930afa24b49723919b0e7da0bd04028d28"}], "stats": {"total": 140, "additions": 117, "deletions": 23}, "files": [{"sha": "617cce6966cb368fafa219e37565072c4e67e24f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -1,3 +1,22 @@\n+2012-02-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/47058\n+\t* acinclude.m4 (GLIBCXX_ENABLE_WERROR): New.\n+\t(GLIBCXX_EXPORT_FLAGS): Add -Wabi to WARN_FLAGS\n+\t* configure.ac: Use it.\n+\t* fragment.am: Set WERROR_FLAG conditionally on --disable-werror.\n+\t* configure: Regenerate.\n+\t* python/Makefile.in: Same.\n+\t* Makefile.in: Same.\n+\t* doc/Makefile.in: Same.\n+\t* include/Makefile.in: Same.\n+\t* po/Makefile.in: Same.\n+\t* python/Makefile.in: Same.\n+\t* src/Makefile.in: Same.\n+\t* src/c++11/Makefile.in: Same.\n+\t* src/c++98/Makefile.in: Same.\n+\t* testsuite/Makefile.in: Same.\n+\n 2012-02-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libstdc++/52189"}, {"sha": "6a66c60a6519717b659edfda01bfad5149fe9cfc", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -288,14 +288,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "46a5532e2d4d971fb16574cf3a4b794f34970e13", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -729,7 +729,7 @@ AC_DEFUN([GLIBCXX_EXPORT_FLAGS], [\n   # OPTIMIZE_CXXFLAGS = -O3 -fstrict-aliasing -fvtable-gc\n   AC_SUBST(OPTIMIZE_CXXFLAGS)\n \n-  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual'\n+  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi'\n   AC_SUBST(WARN_FLAGS)\n ])\n \n@@ -3591,6 +3591,17 @@ AC_SUBST(python_mod_dir)\n GLIBCXX_CONDITIONAL(ENABLE_PYTHONDIR, test $python_mod_dir != no)\n ])\n \n+dnl\n+dnl Check to see if -Werror is disabled.\n+dnl\n+dnl --enable-werror/--disable-werror\n+AC_DEFUN([GLIBCXX_ENABLE_WERROR], [\n+  AC_MSG_CHECKING([for -Werror])\n+  GLIBCXX_ENABLE(werror,$1,,[turns on -Werror])\n+  AC_MSG_RESULT($enable_werror)\n+  GLIBCXX_CONDITIONAL(ENABLE_WERROR, test $enable_werror = yes)\n+])\n+\n \n # Macros from the top-level gcc directory.\n m4_include([../config/gc++filt.m4])"}, {"sha": "c053be390267d2eeaadd189f5927e51c419dc518", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -664,6 +664,8 @@ LIBICONV\n OPT_LDFLAGS\n SECTION_LDFLAGS\n GLIBCXX_LIBS\n+ENABLE_WERROR_FALSE\n+ENABLE_WERROR_TRUE\n ENABLE_PYTHONDIR_FALSE\n ENABLE_PYTHONDIR_TRUE\n python_mod_dir\n@@ -860,6 +862,7 @@ enable_cxx_flags\n enable_fully_dynamic_string\n enable_extern_template\n with_python_dir\n+enable_werror\n enable_libstdcxx_time\n enable_tls\n enable_rpath\n@@ -1549,6 +1552,7 @@ Optional Features:\n                           memory [default=no]\n   --enable-extern-template\n                           enable extern template [default=yes]\n+  --enable-werror         turns on -Werror [default=yes]\n   --enable-libstdcxx-time[=KIND]\n                           use KIND for check type [default=no]\n   --enable-tls            Use thread-local storage [default=yes]\n@@ -11495,7 +11499,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11498 \"configure\"\n+#line 11502 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11601,7 +11605,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11604 \"configure\"\n+#line 11608 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14959,7 +14963,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14962 \"configure\"\n+#line 14966 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15294,7 +15298,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15297 \"configure\"\n+#line 15301 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15329,7 +15333,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15332 \"configure\"\n+#line 15336 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15364,7 +15368,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15367 \"configure\"\n+#line 15371 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15400,7 +15404,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15403 \"configure\"\n+#line 15407 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15480,7 +15484,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15483 \"configure\"\n+#line 15487 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15522,7 +15526,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15525 \"configure\"\n+#line 15529 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15556,7 +15560,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15559 \"configure\"\n+#line 15563 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -17269,6 +17273,26 @@ python_mod_dir=\"${with_python_dir}\"\n \n \n \n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -Werror\" >&5\n+$as_echo_n \"checking for -Werror... \" >&6; }\n+   # Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror;\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) as_fn_error \"Argument to enable/disable werror must be yes or no\" \"$LINENO\" 5 ;;\n+      esac\n+\n+else\n+  enable_werror=yes\n+fi\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_werror\" >&5\n+$as_echo \"$enable_werror\" >&6; }\n+\n+\n+\n # Checks for operating systems support that doesn't require linking.\n \n \n@@ -66123,6 +66147,15 @@ else\n fi\n \n \n+    if test $enable_werror = yes; then\n+  ENABLE_WERROR_TRUE=\n+  ENABLE_WERROR_FALSE='#'\n+else\n+  ENABLE_WERROR_TRUE='#'\n+  ENABLE_WERROR_FALSE=\n+fi\n+\n+\n     if test $enable_symvers != no; then\n   ENABLE_SYMVERS_TRUE=\n   ENABLE_SYMVERS_FALSE='#'\n@@ -66399,7 +66432,7 @@ $as_echo \"$gxx_include_dir\" >&6; }\n   # OPTIMIZE_CXXFLAGS = -O3 -fstrict-aliasing -fvtable-gc\n \n \n-  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual'\n+  WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi'\n \n \n \n@@ -66580,6 +66613,10 @@ if test -z \"${ENABLE_PYTHONDIR_TRUE}\" && test -z \"${ENABLE_PYTHONDIR_FALSE}\"; th\n   as_fn_error \"conditional \\\"ENABLE_PYTHONDIR\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_WERROR_TRUE}\" && test -z \"${ENABLE_WERROR_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_WERROR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ENABLE_SYMVERS_TRUE}\" && test -z \"${ENABLE_SYMVERS_FALSE}\"; then\n   as_fn_error \"conditional \\\"ENABLE_SYMVERS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "49de141be7b753dec091c9dc35ca698b146b58bd", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -131,6 +131,7 @@ GLIBCXX_ENABLE_CXX_FLAGS\n GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING([no])\n GLIBCXX_ENABLE_EXTERN_TEMPLATE([yes])\n GLIBCXX_ENABLE_PYTHON\n+GLIBCXX_ENABLE_WERROR([yes])\n \n # Checks for operating systems support that doesn't require linking.\n GLIBCXX_CHECK_MATH_PROTO"}, {"sha": "39c7e1f5b2781e3bfaad37e4d18bfb2bd2b566d3", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -272,14 +272,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "304d39637d94f61d2f50aa41b6418f1bb41cddab", "filename": "libstdc++-v3/fragment.am", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Ffragment.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Ffragment.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ffragment.am?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -13,12 +13,18 @@ STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n \n+if ENABLE_WERROR\n+WERROR_FLAG=$(WERROR)\n+else\n+WERROR_FLAG=\n+endif\n+\n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)"}, {"sha": "19a7c0edd38a7b5120fe475614c2ce0ff567b45a", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -262,14 +262,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "ee65762bdcb8aee605c5cd8c36885d6a05ed6da6", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -322,14 +322,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "4392d89d11804fe1cd391d7d579fc7689caf883f", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -262,14 +262,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "f83fac87a09c0f9a1377c782d23300824403fc99", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -286,14 +286,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "93ed4402784153810ef6137eeda2177caba69195", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -313,14 +313,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "b7f362af6897bf8ea15fce110069b29eb66d7752", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -280,14 +280,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "b0e6c14d04861a7b23d25dab1e670c43124d7fde", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -299,14 +299,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}, {"sha": "0826f05e72a1852a3ca178347077fdace2a601f9", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b124c5c482ecd0bfa00b99fc4964a88b0c0b8558/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=b124c5c482ecd0bfa00b99fc4964a88b0c0b8558", "patch": "@@ -265,14 +265,16 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibcxx_toolexecdir)\n toolexeclibdir = $(glibcxx_toolexeclibdir)\n+@ENABLE_WERROR_FALSE@WERROR_FLAG = \n+@ENABLE_WERROR_TRUE@WERROR_FLAG = $(WERROR)\n \n # These bits are all figured out from configure.  Look in acinclude.m4\n # or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n CONFIG_CXXFLAGS = \\\n \t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n \n WARN_CXXFLAGS = \\\n-\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n \n # -I/-D flags to pass when compiling."}]}