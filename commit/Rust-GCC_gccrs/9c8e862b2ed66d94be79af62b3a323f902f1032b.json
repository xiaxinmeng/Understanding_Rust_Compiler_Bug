{"sha": "9c8e862b2ed66d94be79af62b3a323f902f1032b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM4ZTg2MmIyZWQ2NmQ5NGJlNzlhZjYyYjNhMzIzZjkwMmYxMDMyYg==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2010-10-11T09:49:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:49:37Z"}, "message": "utils2.c (maybe_wrap_malloc): Fix crash when allocating very large object on VMS.\n\n2010-10-11  Tristan Gingold  <gingold@adacore.com>\n\n\t* gcc-interface/utils2.c (maybe_wrap_malloc): Fix crash when allocating\n\tvery large object on VMS.\n\nFrom-SVN: r165288", "tree": {"sha": "9594c1a01efaaa2774cdb28b86a2da014d6d3f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9594c1a01efaaa2774cdb28b86a2da014d6d3f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c8e862b2ed66d94be79af62b3a323f902f1032b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8e862b2ed66d94be79af62b3a323f902f1032b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8e862b2ed66d94be79af62b3a323f902f1032b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8e862b2ed66d94be79af62b3a323f902f1032b/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76e3504fad8d01df1ac2cc110051f593fdf49faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e3504fad8d01df1ac2cc110051f593fdf49faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e3504fad8d01df1ac2cc110051f593fdf49faf"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2915c1ae6ea2cf5386872998e0e5c0844de9a6e4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8e862b2ed66d94be79af62b3a323f902f1032b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8e862b2ed66d94be79af62b3a323f902f1032b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9c8e862b2ed66d94be79af62b3a323f902f1032b", "patch": "@@ -1,3 +1,8 @@\n+2010-10-11  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gcc-interface/utils2.c (maybe_wrap_malloc): Fix crash when allocating\n+\tvery large object on VMS.\n+\n 2010-10-11  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch10.adb (Analyze_With_Clause): Add missing test to ensure"}, {"sha": "62380deab9826927974e16ddcca216fd2d6320f9", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c8e862b2ed66d94be79af62b3a323f902f1032b/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c8e862b2ed66d94be79af62b3a323f902f1032b/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=9c8e862b2ed66d94be79af62b3a323f902f1032b", "patch": "@@ -1820,9 +1820,10 @@ maybe_wrap_malloc (tree data_size, tree data_type, Node_Id gnat_node)\n   /* On VMS, if pointers are 64-bit and the allocator size is 32-bit or\n      Convention C, allocate 32-bit memory.  */\n   if (TARGET_ABI_OPEN_VMS\n-      && (POINTER_SIZE == 64\n-\t     && (UI_To_Int (Esize (Etype (gnat_node))) == 32\n-\t\t || Convention (Etype (gnat_node)) == Convention_C)))\n+      && POINTER_SIZE == 64\n+      && Nkind (gnat_node) == N_Allocator\n+      && (UI_To_Int (Esize (Etype (gnat_node))) == 32\n+          || Convention (Etype (gnat_node)) == Convention_C))\n     malloc_ptr = build_call_1_expr (malloc32_decl, size_to_malloc);\n   else\n     malloc_ptr = build_call_1_expr (malloc_decl, size_to_malloc);"}]}