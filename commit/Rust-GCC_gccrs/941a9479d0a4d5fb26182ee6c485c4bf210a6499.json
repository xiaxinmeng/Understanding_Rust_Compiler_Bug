{"sha": "941a9479d0a4d5fb26182ee6c485c4bf210a6499", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxYTk0NzlkMGE0ZDVmYjI2MTgyZWU2YzQ4NWM0YmYyMTBhNjQ5OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-07-11T12:44:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-07-11T12:44:26Z"}, "message": "re PR tree-optimization/36765 (Revision 137573 miscompiles 464.h264ref in SPEC CPU 2006)\n\n2008-07-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36765\n\t* tree-ssa-alias.c (compute_flow_insensitive_aliasing): Add\n\taliases from HEAP vars to SMTs.\n\n\t* gcc.c-torture/execute/pr36765.c: New testcase.\n\nFrom-SVN: r137715", "tree": {"sha": "29119b8b42e6cea42c417962f700ad7f2f026831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29119b8b42e6cea42c417962f700ad7f2f026831"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/941a9479d0a4d5fb26182ee6c485c4bf210a6499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941a9479d0a4d5fb26182ee6c485c4bf210a6499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941a9479d0a4d5fb26182ee6c485c4bf210a6499", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941a9479d0a4d5fb26182ee6c485c4bf210a6499/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5e1c95e49927a55aef30e2c8f4091fdd49aba2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e1c95e49927a55aef30e2c8f4091fdd49aba2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e1c95e49927a55aef30e2c8f4091fdd49aba2d"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "04004fa76df3daaa42b050244e5450c8d9fea5c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=941a9479d0a4d5fb26182ee6c485c4bf210a6499", "patch": "@@ -1,3 +1,9 @@\n+2008-07-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36765\n+\t* tree-ssa-alias.c (compute_flow_insensitive_aliasing): Add\n+\taliases from HEAP vars to SMTs.\n+\n 2008-07-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (LOOSE_WARN, STRICT_WARN): Update comments."}, {"sha": "f26bcbf46e6d6bf9180f9da5353c1ad9fad470c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=941a9479d0a4d5fb26182ee6c485c4bf210a6499", "patch": "@@ -1,3 +1,8 @@\n+2008-07-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36765\n+\t* gcc.c-torture/execute/pr36765.c: New testcase.\n+\n 2008-07-10  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR middle-end/29056"}, {"sha": "6883b0cfd753f77c8618d1a26b6ba8eca4786e44", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36765.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36765.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36765.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36765.c?ref=941a9479d0a4d5fb26182ee6c485c4bf210a6499", "patch": "@@ -0,0 +1,15 @@\n+int __attribute__((noinline))\n+foo(int i)\n+{\n+  int *p = __builtin_malloc (4 * sizeof(int));\n+  *p = 0;\n+  p[i] = 1;\n+  return *p;\n+}\n+extern void abort (void);\n+int main()\n+{\n+  if (foo(0) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "3aa79feddd6ac13752e51e13ea265c3fcd4ff077", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941a9479d0a4d5fb26182ee6c485c4bf210a6499/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=941a9479d0a4d5fb26182ee6c485c4bf210a6499", "patch": "@@ -2370,6 +2370,8 @@ have_common_aliases_p (bitmap tag1aliases, bitmap tag2aliases)\n static void\n compute_flow_insensitive_aliasing (struct alias_info *ai)\n {\n+  referenced_var_iterator rvi;\n+  tree var;\n   size_t i;\n \n   timevar_push (TV_FLOW_INSENSITIVE);\n@@ -2460,6 +2462,24 @@ compute_flow_insensitive_aliasing (struct alias_info *ai)\n \t  add_may_alias (tag1, tag2);\n \t}\n     }\n+\n+  /* We have to add all HEAP variables to all SMTs aliases bitmaps.\n+     As we don't know which effective type the HEAP will have we cannot\n+     do better here and we need the conflicts with obfuscated pointers\n+     (a simple (*(int[n] *)ptr)[i] will do, with ptr from a VLA array\n+     allocation).  */\n+  for (i = 0; i < ai->num_pointers; i++)\n+    {\n+      struct alias_map_d *p_map = ai->pointers[i];\n+      tree tag = symbol_mem_tag (p_map->var);\n+\n+      FOR_EACH_REFERENCED_VAR (var, rvi)\n+\t{\n+\t  if (var_ann (var)->is_heapvar)\n+\t    add_may_alias (tag, var);\n+\t}\n+    }\n+\n   timevar_pop (TV_FLOW_INSENSITIVE);\n }\n "}]}