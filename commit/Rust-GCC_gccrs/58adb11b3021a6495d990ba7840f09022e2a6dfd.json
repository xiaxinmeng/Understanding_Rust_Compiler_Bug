{"sha": "58adb11b3021a6495d990ba7840f09022e2a6dfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThhZGIxMWIzMDIxYTY0OTVkOTkwYmE3ODQwZjA5MDIyZTJhNmRmZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-01-04T15:42:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-01-04T15:42:36Z"}, "message": "i386.md (HI/SImode test with imm to QImode splitters): Use gen_int_mode instead of gen_lopwart for const_int operands.\n\n\t* config/i386/i386.md (HI/SImode test with imm to QImode splitters):\n\tUse gen_int_mode instead of gen_lopwart for const_int operands.\n\nFrom-SVN: r244058", "tree": {"sha": "ebcd9be14c2bd55dab8801d9191c900bbcccc406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebcd9be14c2bd55dab8801d9191c900bbcccc406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58adb11b3021a6495d990ba7840f09022e2a6dfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58adb11b3021a6495d990ba7840f09022e2a6dfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58adb11b3021a6495d990ba7840f09022e2a6dfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58adb11b3021a6495d990ba7840f09022e2a6dfd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a792efe7f9c17b3a89a1e281cb9cbe814c91e16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a792efe7f9c17b3a89a1e281cb9cbe814c91e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a792efe7f9c17b3a89a1e281cb9cbe814c91e16"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "d43c9bcc5a0935f2b9fda2e0f4dc98b5facc895a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58adb11b3021a6495d990ba7840f09022e2a6dfd", "patch": "@@ -1,3 +1,8 @@\n+2017-01-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (HI/SImode test with imm to QImode splitters):\n+\tUse gen_int_mode instead of gen_lopwart for const_int operands.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/71563"}, {"sha": "807dc6559f5484325aa6630d6129deb7b929dc36", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=58adb11b3021a6495d990ba7840f09022e2a6dfd", "patch": "@@ -8092,7 +8092,7 @@\n \t\t\t (const_int 0)]))]\n {\n   operands[2] = gen_lowpart (QImode, operands[2]);\n-  operands[3] = gen_lowpart (QImode, operands[3]);\n+  operands[3] = gen_int_mode (INTVAL (operands[3]), QImode);\n })\n \n ;; %%% This used to optimize known byte-wide and operations to memory,\n@@ -8574,7 +8574,7 @@\n {\n   operands[0] = gen_lowpart (QImode, operands[0]);\n   operands[1] = gen_lowpart (QImode, operands[1]);\n-  operands[2] = gen_lowpart (QImode, operands[2]);\n+  operands[2] = gen_int_mode (INTVAL (operands[2]), QImode);\n })\n \n (define_insn \"*andndi3_doubleword\"\n@@ -8933,7 +8933,7 @@\n {\n   operands[0] = gen_lowpart (QImode, operands[0]);\n   operands[1] = gen_lowpart (QImode, operands[1]);\n-  operands[2] = gen_lowpart (QImode, operands[2]);\n+  operands[2] = gen_int_mode (INTVAL (operands[2]), QImode);\n })\n \n (define_expand \"xorqi_ext_1_cc\""}, {"sha": "32b490154b45799edef7aca44d9c42c56acaebdf", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58adb11b3021a6495d990ba7840f09022e2a6dfd/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=58adb11b3021a6495d990ba7840f09022e2a6dfd", "patch": "@@ -1181,8 +1181,8 @@\n \t\t\t (match_operand:DF 3 \"memory_operand\")))]\n   \"TARGET_SSE2 && TARGET_SSE_UNALIGNED_LOAD_OPTIMAL\n    && ix86_operands_ok_for_move_multiple (operands, true, DFmode)\"\n-  [(set (match_dup 2) (match_dup 4))]\n-  \"operands[4] = adjust_address (operands[1], V2DFmode, 0);\")\n+  [(set (match_dup 2) (match_dup 5))]\n+  \"operands[5] = adjust_address (operands[1], V2DFmode, 0);\")\n \n (define_peephole2\n   [(set (match_operand:DF 0 \"sse_reg_operand\")\n@@ -1193,8 +1193,8 @@\n   \"TARGET_SSE2 && TARGET_SSE_UNALIGNED_LOAD_OPTIMAL\n    && REGNO (operands[4]) == REGNO (operands[2])\n    && ix86_operands_ok_for_move_multiple (operands, true, DFmode)\"\n-  [(set (match_dup 2) (match_dup 4))]\n-  \"operands[4] = adjust_address (operands[1], V2DFmode, 0);\")\n+  [(set (match_dup 2) (match_dup 5))]\n+  \"operands[5] = adjust_address (operands[1], V2DFmode, 0);\")\n \n ;; Merge movlpd/movhpd to movupd for TARGET_SSE_UNALIGNED_STORE_OPTIMAL targets.\n (define_peephole2"}]}