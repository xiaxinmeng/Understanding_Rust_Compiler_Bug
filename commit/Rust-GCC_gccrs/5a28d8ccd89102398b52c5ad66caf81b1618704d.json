{"sha": "5a28d8ccd89102398b52c5ad66caf81b1618704d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEyOGQ4Y2NkODkxMDIzOThiNTJjNWFkNjZjYWY4MWIxNjE4NzA0ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-04-18T14:05:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-04-18T14:05:03Z"}, "message": "i386.h (SSE_FLOAT_MODE_P): Kill bogus TARGET_SSE_MATH check.\n\n\t* i386.h (SSE_FLOAT_MODE_P): Kill bogus TARGET_SSE_MATH check.\n\t* i386.md (sse_mov?fcc*): Swap operands for cases they will be swapped\n\tlater.\n\nFrom-SVN: r52471", "tree": {"sha": "423435863f4ef707fe4097e5ce55c7569501bc5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/423435863f4ef707fe4097e5ce55c7569501bc5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a28d8ccd89102398b52c5ad66caf81b1618704d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a28d8ccd89102398b52c5ad66caf81b1618704d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a28d8ccd89102398b52c5ad66caf81b1618704d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a28d8ccd89102398b52c5ad66caf81b1618704d/comments", "author": null, "committer": null, "parents": [{"sha": "8152c32042aa5376d1f994b571c2b66444b35416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8152c32042aa5376d1f994b571c2b66444b35416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8152c32042aa5376d1f994b571c2b66444b35416"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "c71ed9a8613aa4469528be9d3e8daa0a658cd2fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a28d8ccd89102398b52c5ad66caf81b1618704d", "patch": "@@ -1,3 +1,9 @@\n+Thu Apr 18 15:49:12 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.h (SSE_FLOAT_MODE_P): Kill bogus TARGET_SSE_MATH check.\n+\t* i386.md (sse_mov?fcc*): Swap operands for cases they will be swapped\n+\tlater.\n+\n 2002-04-18  Bernd Schmidt  <bernds@redhat.com>\n \n \t* attribs.c (vector_type_node_list): New static variable."}, {"sha": "0a0ce26a45a3c06325365b63d60009a813d3b4d4", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5a28d8ccd89102398b52c5ad66caf81b1618704d", "patch": "@@ -1316,7 +1316,7 @@ enum reg_class\n #define SSE_REG_P(N) (REG_P (N) && SSE_REGNO_P (REGNO (N)))\n \n #define SSE_FLOAT_MODE_P(MODE) \\\n-  ((TARGET_SSE_MATH && (MODE) == SFmode) || (TARGET_SSE2 && (MODE) == DFmode))\n+  ((MODE) == SFmode || (TARGET_SSE2 && (MODE) == DFmode))\n \n #define MMX_REGNO_P(N) ((N) >= FIRST_MMX_REG && (N) <= LAST_MMX_REG)\n #define MMX_REG_P(XOP) (REG_P (XOP) && MMX_REGNO_P (REGNO (XOP)))"}, {"sha": "3ebc99757a33a6b4478f3125ac9e973b0e55ae9d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a28d8ccd89102398b52c5ad66caf81b1618704d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5a28d8ccd89102398b52c5ad66caf81b1618704d", "patch": "@@ -16533,8 +16533,8 @@\n (define_insn \"sse_movsfcc\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&x#rf,x#rf,?f#xr,?f#xr,?f#xr,?f#xr,?r#xf,?r#xf,?r#xf,?r#xf\")\n \t(if_then_else:SF (match_operator 1 \"sse_comparison_operator\"\n-\t\t\t[(match_operand:SF 4 \"nonimmediate_operand\" \"0#fx,x#fx,f#x,f#x,xm#f,xm#f,f#x,f#x,xm#f,xm#f\")\n-\t\t\t (match_operand:SF 5 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,f#x,x#f,x#f,f#x,f#x,x#f,x#f\")])\n+\t\t\t[(match_operand:SF 4 \"nonimmediate_operand\" \"0#fx,x#fx,f#x,f#x,x#f,x#f,f#x,f#x,x#f,x#f\")\n+\t\t\t (match_operand:SF 5 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,f#x,xm#f,xm#f,f#x,f#x,xm#f,xm#f\")])\n \t\t      (match_operand:SF 2 \"nonimmediate_operand\" \"x#fr,0#fr,f#fx,0#fx,f#fx,0#fx,rm#rx,0#rx,rm#rx,0#rx\")\n \t\t      (match_operand:SF 3 \"nonimmediate_operand\" \"x#fr,x#fr,0#fx,f#fx,0#fx,f#fx,0#fx,rm#rx,0#rx,rm#rx\")))\n    (clobber (match_scratch:SF 6 \"=2,&4,X,X,X,X,X,X,X,X\"))\n@@ -16547,8 +16547,8 @@\n \n (define_insn \"sse_movsfcc_eq\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&x#rf,x#rf,?f#xr,?f#xr,?r#xf,?r#xf\")\n-\t(if_then_else:SF (eq (match_operand:SF 3 \"nonimmediate_operand\" \"%0#fx,x#fx,f#x,xm#f,f#x,xm#f\")\n-\t\t\t     (match_operand:SF 4 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,x#f,f#x,x#f\"))\n+\t(if_then_else:SF (eq (match_operand:SF 3 \"nonimmediate_operand\" \"%0#fx,x#fx,f#x,x#f,f#x,x#f\")\n+\t\t\t     (match_operand:SF 4 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,xm#f,f#x,xm#f\"))\n \t\t      (match_operand:SF 1 \"nonimmediate_operand\" \"x#fr,0#fr,0#fx,0#fx,0#rx,0#rx\")\n \t\t      (match_operand:SF 2 \"nonimmediate_operand\" \"x#fr,x#fr,f#fx,f#fx,rm#rx,rm#rx\")))\n    (clobber (match_scratch:SF 5 \"=1,&3,X,X,X,X\"))\n@@ -16560,8 +16560,8 @@\n (define_insn \"sse_movdfcc\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&x#rf,x#rf,?f#xr,?f#xr,?f#xr,?f#xr,?r#xf,?r#xf,?r#xf,?r#xf\")\n \t(if_then_else:DF (match_operator 1 \"sse_comparison_operator\"\n-\t\t\t[(match_operand:DF 4 \"nonimmediate_operand\" \"0#fx,x#fx,f#x,f#x,xm#f,xm#f,f#x,f#x,xm#f,xm#f\")\n-\t\t\t (match_operand:DF 5 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,f#x,x#f,x#f,f#x,f#x,x#f,x#f\")])\n+\t\t\t[(match_operand:DF 4 \"nonimmediate_operand\" \"0#fx,x#fx,f#x,f#x,x#f,x#f,f#x,f#x,x#f,x#f\")\n+\t\t\t (match_operand:DF 5 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,f#x,xm#f,xm#f,f#x,f#x,xm#f,xm#f\")])\n \t\t      (match_operand:DF 2 \"nonimmediate_operand\" \"x#fr,0#fr,f#fx,0#fx,f#fx,0#fx,rm#rx,0#rx,rm#rx,0#rx\")\n \t\t      (match_operand:DF 3 \"nonimmediate_operand\" \"x#fr,x#fr,0#fx,f#fx,0#fx,f#fx,0#fx,rm#rx,0#rx,rm#rx\")))\n    (clobber (match_scratch:DF 6 \"=2,&4,X,X,X,X,X,X,X,X\"))\n@@ -16574,8 +16574,8 @@\n \n (define_insn \"sse_movdfcc_eq\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&x#rf,x#rf,?f#xr,?f#xr,?r#xf,?r#xf\")\n-\t(if_then_else:DF (eq (match_operand:DF 3 \"nonimmediate_operand\" \"%0#fx,x#fx,f#x,xm#f,f#x,xm#f\")\n-\t\t\t     (match_operand:DF 4 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,x#f,f#x,x#f\"))\n+\t(if_then_else:DF (eq (match_operand:DF 3 \"nonimmediate_operand\" \"%0#fx,x#fx,f#x,x#f,f#x,x#f\")\n+\t\t\t     (match_operand:DF 4 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,xm#f,f#x,xm#f\"))\n \t\t      (match_operand:DF 1 \"nonimmediate_operand\" \"x#fr,0#fr,0#fx,0#fx,0#rx,0#rx\")\n \t\t      (match_operand:DF 2 \"nonimmediate_operand\" \"x#fr,x#fr,f#fx,f#fx,rm#rx,rm#rx\")))\n    (clobber (match_scratch:DF 5 \"=1,&3,X,X,X,X\"))\n@@ -16589,7 +16589,7 @@\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t[(match_operand 4 \"nonimmediate_operand\" \"\")\n-\t\t\t (match_operand 5 \"register_operand\" \"\")])\n+\t\t\t (match_operand 5 \"nonimmediate_operand\" \"\")])\n \t\t      (match_operand 2 \"nonimmediate_operand\" \"\")\n \t\t      (match_operand 3 \"nonimmediate_operand\" \"\")))\n    (clobber (match_operand 6 \"\" \"\"))"}]}