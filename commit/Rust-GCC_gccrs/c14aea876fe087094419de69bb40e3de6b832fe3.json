{"sha": "c14aea876fe087094419de69bb40e3de6b832fe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE0YWVhODc2ZmUwODcwOTQ0MTlkZTY5YmI0MGUzZGU2YjgzMmZlMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-10-01T18:54:46Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-10-01T18:54:46Z"}, "message": "except.h (MUST_USE_SJLJ_EXCEPTIONS): Revert 2003-09-23 change.\n\n\t* except.h (MUST_USE_SJLJ_EXCEPTIONS): Revert 2003-09-23 change.\n\tAllow override.\n\t* doc/tm.texi (MUST_USE_SJLJ_EXCEPTIONS): Document.\n\nFrom-SVN: r71985", "tree": {"sha": "9192a91f17e5dc4aa3a0be454aace83b91fdad35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9192a91f17e5dc4aa3a0be454aace83b91fdad35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c14aea876fe087094419de69bb40e3de6b832fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14aea876fe087094419de69bb40e3de6b832fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14aea876fe087094419de69bb40e3de6b832fe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14aea876fe087094419de69bb40e3de6b832fe3/comments", "author": null, "committer": null, "parents": [{"sha": "c0590bfdf1776a266e7490c5dee838376a4db86e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0590bfdf1776a266e7490c5dee838376a4db86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0590bfdf1776a266e7490c5dee838376a4db86e"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "1ae0fbd432ef275e308f5af9f49f090eb55c2026", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c14aea876fe087094419de69bb40e3de6b832fe3", "patch": "@@ -1,3 +1,9 @@\n+2003-10-01  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* except.h (MUST_USE_SJLJ_EXCEPTIONS): Revert 2003-09-23 change.\n+\tAllow override.\n+\t* doc/tm.texi (MUST_USE_SJLJ_EXCEPTIONS): Document.\n+\n 2003-09-23  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/linux.h (LINK_GCC_C_SEQUENCE_SPEC): Undefine"}, {"sha": "74616d8476339a75f8c2493a2f1dce380d9bd9f8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c14aea876fe087094419de69bb40e3de6b832fe3", "patch": "@@ -7497,6 +7497,13 @@ If this macro is defined to anything, the DWARF 2 unwinder will be used\n instead of inline unwinders and @code{__unwind_function} in the non-@code{setjmp} case.\n @end defmac\n \n+@defmac MUST_USE_SJLJ_EXCEPTIONS\n+This macro need only be defined if @code{DWARF2_UNWIND_INFO} is\n+runtime-variable.  In that case, @file{except.h} cannot correctly\n+determine the corresponding definition of\n+@code{MUST_USE_SJLJ_EXCEPTIONS}, so the target must provide it directly.\n+@end defmac\n+\n @defmac DWARF_CIE_DATA_ALIGNMENT\n This macro need only be defined if the target might save registers in the\n function prologue at an offset to the stack pointer that is not aligned to"}, {"sha": "75bbd6f9c3886b8daaf675c13ee8a0e8f93b53b4", "filename": "gcc/except.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14aea876fe087094419de69bb40e3de6b832fe3/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=c14aea876fe087094419de69bb40e3de6b832fe3", "patch": "@@ -142,17 +142,15 @@ extern tree (*lang_eh_runtime_type) (tree);\n    mean that we can use call frame exceptions.  Detect that the target\n    has appropriate support.  */\n \n-#if ! (defined (EH_RETURN_DATA_REGNO)\t\t\t\\\n+#ifndef MUST_USE_SJLJ_EXCEPTIONS\n+# if !(defined (EH_RETURN_DATA_REGNO)\t\t\t\\\n        && (defined (IA64_UNWIND_INFO)\t\t\t\\\n \t   || (DWARF2_UNWIND_INFO\t\t\t\\\n \t       && (defined (EH_RETURN_HANDLER_RTX)\t\\\n \t\t   || defined (HAVE_eh_return)))))\n-# define MUST_USE_SJLJ_EXCEPTIONS\t1\n-#else\n-# ifdef IA64_UNWIND_INFO\n-#  define MUST_USE_SJLJ_EXCEPTIONS\t0\n+#  define MUST_USE_SJLJ_EXCEPTIONS\t1\n # else\n-#  define MUST_USE_SJLJ_EXCEPTIONS\t(DWARF2_UNWIND_INFO == 0)\n+#  define MUST_USE_SJLJ_EXCEPTIONS\t0\n # endif\n #endif\n "}]}