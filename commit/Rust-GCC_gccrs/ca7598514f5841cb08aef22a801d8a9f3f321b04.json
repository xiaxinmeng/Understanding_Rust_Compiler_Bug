{"sha": "ca7598514f5841cb08aef22a801d8a9f3f321b04", "node_id": "C_kwDOANBUbNoAKGNhNzU5ODUxNGY1ODQxY2IwOGFlZjIyYTgwMWQ4YTlmM2YzMjFiMDQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T14:09:25Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T14:53:39Z"}, "message": "Add missing type inferencing rules for arrays and slices", "tree": {"sha": "2f7975f1b11a49e01b984c93b5988249ead5547a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f7975f1b11a49e01b984c93b5988249ead5547a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca7598514f5841cb08aef22a801d8a9f3f321b04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7598514f5841cb08aef22a801d8a9f3f321b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7598514f5841cb08aef22a801d8a9f3f321b04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7598514f5841cb08aef22a801d8a9f3f321b04/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e13db1fa12d3ff8751a293595cbf01fd1ac236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e13db1fa12d3ff8751a293595cbf01fd1ac236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e13db1fa12d3ff8751a293595cbf01fd1ac236"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c862de5bc62f82b22b7a69e4548e415bbd03a7a3", "filename": "gcc/rust/typecheck/rust-tyty-coercion.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7598514f5841cb08aef22a801d8a9f3f321b04/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7598514f5841cb08aef22a801d8a9f3f321b04/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-coercion.h?ref=ca7598514f5841cb08aef22a801d8a9f3f321b04", "patch": "@@ -856,6 +856,18 @@ class ArrayCoercionRules : public BaseCoercionRules\n \t\t       TyVar (base_resolved->get_ref ()));\n   }\n \n+  void visit (InferType &type) override\n+  {\n+    if (type.get_infer_kind () != InferType::InferTypeKind::GENERAL)\n+      {\n+\tBaseCoercionRules::visit (type);\n+\treturn;\n+      }\n+\n+    resolved = base->clone ();\n+    resolved->set_ref (type.get_ref ());\n+  }\n+\n private:\n   BaseType *get_base () override { return base; }\n \n@@ -902,6 +914,18 @@ class SliceCoercionRules : public BaseCoercionRules\n \t\t\t      TyVar (base_resolved->get_ref ()));\n   }\n \n+  void visit (InferType &type) override\n+  {\n+    if (type.get_infer_kind () != InferType::InferTypeKind::GENERAL)\n+      {\n+\tBaseCoercionRules::visit (type);\n+\treturn;\n+      }\n+\n+    resolved = base->clone ();\n+    resolved->set_ref (type.get_ref ());\n+  }\n+\n private:\n   BaseType *get_base () override { return base; }\n "}]}