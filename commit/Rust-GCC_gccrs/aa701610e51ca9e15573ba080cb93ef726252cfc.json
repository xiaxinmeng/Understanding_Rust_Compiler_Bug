{"sha": "aa701610e51ca9e15573ba080cb93ef726252cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE3MDE2MTBlNTFjYTllMTU1NzNiYTA4MGNiOTNlZjcyNjI1MmNmYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-30T13:30:43Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-30T13:30:43Z"}, "message": "Fix thunk info WRT PCH\n\n\tPR pch/97593\n\t* cgraph.c (cgraph_node::create_thunk): Register thunk as early during\n\tparsing.\n\t* cgraphunit.c (analyze_functions): Call\n\tthunk_info::process_early_thunks.\n\t* symtab-thunks.cc (struct unprocessed_thunk): New struct.\n\t(thunks): New static variable.\n\t(thunk_info::register_early): New member function.\n\t(thunk_info::process_early_thunks): New member function.\n\t* symtab-thunks.h (thunk_info::register_early): Declare.\n\t(thunk_info::process_early_thunks): Declare.", "tree": {"sha": "df843230a64856ebefdf8d5a021f3ee7d11851b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df843230a64856ebefdf8d5a021f3ee7d11851b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa701610e51ca9e15573ba080cb93ef726252cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa701610e51ca9e15573ba080cb93ef726252cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa701610e51ca9e15573ba080cb93ef726252cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa701610e51ca9e15573ba080cb93ef726252cfc/comments", "author": null, "committer": null, "parents": [{"sha": "40cb3f8ac875c6cf6610a5f93da571cfdd2a1513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40cb3f8ac875c6cf6610a5f93da571cfdd2a1513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40cb3f8ac875c6cf6610a5f93da571cfdd2a1513"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "9129bcf12d25e8bfc1e60208145e00ca37de6e52", "filename": "gcc/cgraph.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=aa701610e51ca9e15573ba080cb93ef726252cfc", "patch": "@@ -633,13 +633,20 @@ cgraph_node::create_thunk (tree alias, tree, bool this_adjusting,\n   node->thunk = true;\n   node->definition = true;\n \n-  thunk_info *i = thunk_info::get_create (node);\n+  thunk_info *i;\n+  thunk_info local_info;\n+  if (symtab->state < CONSTRUCTION)\n+    i = &local_info;\n+  else\n+    i = thunk_info::get_create (node);\n   i->fixed_offset = fixed_offset;\n   i->virtual_value = virtual_value;\n   i->indirect_offset = indirect_offset;\n   i->alias = real_alias;\n   i->this_adjusting = this_adjusting;\n   i->virtual_offset_p = virtual_offset != NULL;\n+  if (symtab->state < CONSTRUCTION)\n+    i->register_early (node);\n \n   return node;\n }"}, {"sha": "3a9895825b18bccbc3c034862bc6948f100c59d9", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=aa701610e51ca9e15573ba080cb93ef726252cfc", "patch": "@@ -1155,6 +1155,8 @@ analyze_functions (bool first_time)\n   symtab->state = CONSTRUCTION;\n   input_location = UNKNOWN_LOCATION;\n \n+  thunk_info::process_early_thunks ();\n+\n   /* Ugly, but the fixup cannot happen at a time same body alias is created;\n      C++ FE is confused about the COMDAT groups being right.  */\n   if (symtab->cpp_implicit_aliases_done)"}, {"sha": "2199f4e62147eaf23d00e3ce279cf660f233931a", "filename": "gcc/symtab-thunks.cc", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fsymtab-thunks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fsymtab-thunks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab-thunks.cc?ref=aa701610e51ca9e15573ba080cb93ef726252cfc", "patch": "@@ -52,6 +52,14 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Used for vtable lookup in thunk adjusting.  */\n static GTY (()) tree vtable_entry_type;\n+struct GTY (()) unprocessed_thunk\n+{\n+  cgraph_node *node;\n+  thunk_info *info;\n+};\n+/* To be PCH safe we store thunks into a vector before end of compilation\n+   unit.  */\n+static GTY (()) vec<unprocessed_thunk, va_gc> *thunks;\n \n namespace {\n \n@@ -147,6 +155,33 @@ thunk_info::hash ()\n   return hstate.end ();\n }\n \n+/* Add unprocessed thunk.  */\n+void\n+thunk_info::register_early (cgraph_node *node)\n+{\n+  unprocessed_thunk entry = {node, new (ggc_alloc <thunk_info> ()) thunk_info};\n+  *entry.info = *this;\n+  vec_safe_push (thunks, entry);\n+}\n+\n+/* Attach recorded thunks to cgraph_nodes.\n+   All this is done only to avoid need to stream summaries to PCH.  */\n+void\n+thunk_info::process_early_thunks ()\n+{\n+  unprocessed_thunk *e;\n+  unsigned int i;\n+  if (!thunks)\n+    return;\n+\n+  FOR_EACH_VEC_ELT (*thunks, i, e)\n+    {\n+      *thunk_info::get_create (e->node) = *e->info;\n+    }\n+  vec_free (thunks);\n+  thunks = NULL;\n+}\n+\n /* Adjust PTR by the constant FIXED_OFFSET, by the vtable offset indicated by\n    VIRTUAL_OFFSET, and by the indirect offset indicated by INDIRECT_OFFSET, if\n    it is non-null. THIS_ADJUSTING is nonzero for a this adjusting thunk and zero"}, {"sha": "41a684995b31688e3b3f3df173b22f4542875e04", "filename": "gcc/symtab-thunks.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fsymtab-thunks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa701610e51ca9e15573ba080cb93ef726252cfc/gcc%2Fsymtab-thunks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab-thunks.h?ref=aa701610e51ca9e15573ba080cb93ef726252cfc", "patch": "@@ -77,6 +77,7 @@ struct GTY(()) thunk_info {\n     fixed_offset = other.fixed_offset;\n     virtual_value = other.virtual_value;\n     indirect_offset = other.indirect_offset;\n+    alias = other.alias;\n     this_adjusting = other.this_adjusting;\n     virtual_offset_p = other.virtual_offset_p;\n     return *this;\n@@ -133,6 +134,12 @@ struct GTY(()) thunk_info {\n   /* Remove thunk_info.  */\n   static void remove (cgraph_node *node);\n \n+  /* Add unprocessed thunk.  */\n+  void register_early (cgraph_node *node);\n+\n+  /* Attach recorded thunks to cgraph_nodes.  */\n+  static void process_early_thunks ();\n+\n   /* Release all thunk_infos.  */\n   static void release (void);\n };"}]}