{"sha": "47a9a9e949d7660ae7fc7cd4642f668bf438c970", "node_id": "C_kwDOANBUbNoAKDQ3YTlhOWU5NDlkNzY2MGFlN2ZjN2NkNDY0MmY2NjhiZjQzOGM5NzA", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2023-02-04T23:42:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-04T23:42:46Z"}, "message": "Merge #1826\n\n1826: Removed comment copy-pasted from gcc/tree.def r=philberty a=powerboat9\n\nAddresses #1640.\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "b75357dda422788c3d7d7318071113af6dff281e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75357dda422788c3d7d7318071113af6dff281e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47a9a9e949d7660ae7fc7cd4642f668bf438c970", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3u12CRBK7hj4Ov3rIwAAIt8IAILUrjtThIwuillZ/fL7FCDb\nI8PHxvxOchJN5JpdWvK8HjUM7yjhNCZFxL4qIOGmM+2mbD42Dvf/QQrDo1U/exhP\nQrmkGgfFexwihqXcGVlYs/LWOgBRsc9Z9ADe3uX+VchooPLdP1S1yhjTpkc9ljcB\n6/x55wsrwww/zMUGcsJ3gL0Y2b2MafFOJZmKflrxpxXeqoCeK+8iBf2GZu0Jx/TJ\n4YNoqUqZxxiJEgGsrKtjl4ExkVkmbSrtI3Be1mZbA4WLvKzj0xsfGwf3zF1u2nl+\nbKaf4AC8ORHdtYxt60qjbW8v7HsoL6jRTALXiKq2A6hlRofB52UtEYNdn/RudJ0=\n=Xhb0\n-----END PGP SIGNATURE-----\n", "payload": "tree b75357dda422788c3d7d7318071113af6dff281e\nparent 8d96698ffcb5d716e9ab41ba0c1775adb3ef15fe\nparent 7ffdfcbd244e771ae47f3b4cfbfb9d9f84a4bc3c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1675554166 +0000\ncommitter GitHub <noreply@github.com> 1675554166 +0000\n\nMerge #1826\n\n1826: Removed comment copy-pasted from gcc/tree.def r=philberty a=powerboat9\n\nAddresses #1640.\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a9a9e949d7660ae7fc7cd4642f668bf438c970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a9a9e949d7660ae7fc7cd4642f668bf438c970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a9a9e949d7660ae7fc7cd4642f668bf438c970/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d96698ffcb5d716e9ab41ba0c1775adb3ef15fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d96698ffcb5d716e9ab41ba0c1775adb3ef15fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d96698ffcb5d716e9ab41ba0c1775adb3ef15fe"}, {"sha": "7ffdfcbd244e771ae47f3b4cfbfb9d9f84a4bc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffdfcbd244e771ae47f3b4cfbfb9d9f84a4bc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffdfcbd244e771ae47f3b4cfbfb9d9f84a4bc3c"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "76d70cc7605de15ac360de40ffe3c49434f4a2a1", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a9a9e949d7660ae7fc7cd4642f668bf438c970/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a9a9e949d7660ae7fc7cd4642f668bf438c970/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=47a9a9e949d7660ae7fc7cd4642f668bf438c970", "patch": "@@ -1341,30 +1341,6 @@ CompileExpr::visit (HIR::MatchExpr &expr)\n   // SWITCH_ALL_CASES_P is true if the switch includes a default label or the\n   // case label ranges cover all possible values of the condition expression\n \n-  /* Switch expression.\n-\n-     TREE_TYPE is the original type of the condition, before any\n-     language required type conversions.  It may be NULL, in which case\n-     the original type and final types are assumed to be the same.\n-\n-     Operand 0 is the expression used to perform the branch,\n-     Operand 1 is the body of the switch, which probably contains\n-       CASE_LABEL_EXPRs.  It may also be NULL, in which case operand 2\n-       must not be NULL.  */\n-  // DEFTREECODE (SWITCH_EXPR, \"switch_expr\", tcc_statement, 2)\n-\n-  /* Used to represent a case label.\n-\n-     Operand 0 is CASE_LOW.  It may be NULL_TREE, in which case the label\n-       is a 'default' label.\n-     Operand 1 is CASE_HIGH.  If it is NULL_TREE, the label is a simple\n-       (one-value) case label.  If it is non-NULL_TREE, the case is a range.\n-     Operand 2 is CASE_LABEL, which has the corresponding LABEL_DECL.\n-     Operand 3 is CASE_CHAIN.  This operand is only used in tree-cfg.cc to\n-       speed up the lookup of case labels which use a particular edge in\n-       the control flow graph.  */\n-  // DEFTREECODE (CASE_LABEL_EXPR, \"case_label_expr\", tcc_statement, 4)\n-\n   TyTy::TypeKind scrutinee_kind = check_match_scrutinee (expr, ctx);\n   if (scrutinee_kind == TyTy::TypeKind::ERROR)\n     {"}]}