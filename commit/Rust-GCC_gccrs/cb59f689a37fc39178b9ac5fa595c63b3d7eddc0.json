{"sha": "cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1OWY2ODlhMzdmYzM5MTc4YjlhYzVmYTU5NWM2M2IzZDdlZGRjMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-06-09T18:36:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-06-09T18:36:50Z"}, "message": "builtin-attrs.def (ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST, [...]): New.\n\n\n\t* builtin-attrs.def (ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST,\n\tATTR_CONST_NORETURN_NOTHROW_LEAF_COLD_LIST,\n\tATTR_TMPURE_NORETURN_NOTHROW_LEAF_COLD_LIST): New.\n\t* builtins.def (abort, trap, unreachable): Declare cold.\n\t* calls.c (flags_from_decl_or_type): Lookup ECF_COLD.\n\t* tree-core.h (ECF_COLD): New.\n\t* tree.c (set_call_expr_flags): Handle ECF_COLD.\n\t(build_common_builtin_nodes): Mark unreachable and abort as cold.\n\n\t* class.c (build_vtbl_initializer): Mark dvirt_fn as cold.\n\t* decl.c (cxx_init_decl_processing, push_throw_library_fn): Likewise.\n\t(excpet.c): Mark terminate as cold.\n\n\t* gcc.dg/predict-14.c: Avoid cold function detection.\n\t* gcc.target/i386/umod-3.c: Likewise.\n\nFrom-SVN: r249070", "tree": {"sha": "20113d73599fd0ff67d931b5c31ceee4a1749191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20113d73599fd0ff67d931b5c31ceee4a1749191"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/comments", "author": null, "committer": null, "parents": [{"sha": "d225aa745d015e453ae4d47307b486b5c21824fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d225aa745d015e453ae4d47307b486b5c21824fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d225aa745d015e453ae4d47307b486b5c21824fb"}], "stats": {"total": 73, "additions": 56, "deletions": 17}, "files": [{"sha": "866f3ab2c9f5c02f3dfea5eab93b6336488ce871", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -1,3 +1,14 @@\n+2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* builtin-attrs.def (ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST,\n+\tATTR_CONST_NORETURN_NOTHROW_LEAF_COLD_LIST,\n+\tATTR_TMPURE_NORETURN_NOTHROW_LEAF_COLD_LIST): New.\n+\t* builtins.def (abort, trap, unreachable): Declare cold.\n+\t* calls.c (flags_from_decl_or_type): Lookup ECF_COLD.\n+\t* tree-core.h (ECF_COLD): New.\n+\t* tree.c (set_call_expr_flags): Handle ECF_COLD.\n+\t(build_common_builtin_nodes): Mark unreachable and abort as cold.\n+\n 2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (unlikely_executed_stmt_p): Cleanup."}, {"sha": "53e67e62844af99fa5f8460e771277b286294119", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -136,6 +136,8 @@ DEF_ATTR_TREE_LIST (ATTR_NORETURN_NOTHROW_LIST, ATTR_NORETURN,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_NORETURN_NOTHROW_LEAF_LIST, ATTR_NORETURN,\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST, ATTR_COLD,\\\n+\t\t\tATTR_NULL, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_RT_NOTHROW_LEAF_LIST, ATTR_RETURNS_TWICE,\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_COLD_NOTHROW_LEAF_LIST, ATTR_COLD,\\\n@@ -144,6 +146,8 @@ DEF_ATTR_TREE_LIST (ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST, ATTR_COLD,\\\n \t\t\tATTR_NULL, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST, ATTR_CONST,\\\n \t\t\tATTR_NULL, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_CONST_NORETURN_NOTHROW_LEAF_COLD_LIST, ATTR_COLD,\\\n+\t\t\tATTR_NULL, ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LIST, ATTR_MALLOC,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LEAF_LIST, ATTR_MALLOC,\t\\\n@@ -387,6 +391,9 @@ DEF_ATTR_TREE_LIST (ATTR_TMPURE_NOTHROW_LEAF_LIST,\n \t\t    ATTR_TM_TMPURE, ATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST,\n \t\t    ATTR_TM_TMPURE, ATTR_NULL, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_TMPURE_NORETURN_NOTHROW_LEAF_COLD_LIST,\n+\t\t    ATTR_COLD, ATTR_NULL,\n+\t\t    ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST)\n \n /* Construct a tree for a format_arg attribute.  */\n #define DEF_FORMAT_ARG_ATTRIBUTE(FA)\t\t\t\t\t\\"}, {"sha": "1c887db7cb94b1077762458c8d2ba36f3e4c82e6", "filename": "gcc/builtins.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -775,7 +775,7 @@ DEF_GCC_BUILTIN        (BUILT_IN_UMULL_OVERFLOW, \"umull_overflow\", BT_FN_BOOL_UL\n DEF_GCC_BUILTIN        (BUILT_IN_UMULLL_OVERFLOW, \"umulll_overflow\", BT_FN_BOOL_ULONGLONG_ULONGLONG_ULONGLONGPTR, ATTR_NOTHROW_NONNULL_LEAF_LIST)\n \n /* Category: miscellaneous builtins.  */\n-DEF_LIB_BUILTIN        (BUILT_IN_ABORT, \"abort\", BT_FN_VOID, ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST)\n+DEF_LIB_BUILTIN        (BUILT_IN_ABORT, \"abort\", BT_FN_VOID, ATTR_TMPURE_NORETURN_NOTHROW_LEAF_COLD_LIST)\n DEF_LIB_BUILTIN        (BUILT_IN_ABS, \"abs\", BT_FN_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_AGGREGATE_INCOMING_ADDRESS, \"aggregate_incoming_address\", BT_FN_PTR_VAR, ATTR_LEAF_LIST)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_ALLOCA, \"alloca\", BT_FN_PTR_SIZE, ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST)\n@@ -881,8 +881,8 @@ DEF_GCC_BUILTIN        (BUILT_IN_SAVEREGS, \"saveregs\", BT_FN_PTR_VAR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_SETJMP, \"setjmp\", BT_FN_INT_PTR, ATTR_RT_NOTHROW_LEAF_LIST)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRFMON, \"strfmon\", BT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR, ATTR_FORMAT_STRFMON_NOTHROW_3_4)\n DEF_LIB_BUILTIN        (BUILT_IN_STRFTIME, \"strftime\", BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_TM_PTR, ATTR_FORMAT_STRFTIME_NOTHROW_3_0)\n-DEF_GCC_BUILTIN        (BUILT_IN_TRAP, \"trap\", BT_FN_VOID, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n-DEF_GCC_BUILTIN        (BUILT_IN_UNREACHABLE, \"unreachable\", BT_FN_VOID, ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST)\n+DEF_GCC_BUILTIN        (BUILT_IN_TRAP, \"trap\", BT_FN_VOID, ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST)\n+DEF_GCC_BUILTIN        (BUILT_IN_UNREACHABLE, \"unreachable\", BT_FN_VOID, ATTR_CONST_NORETURN_NOTHROW_LEAF_COLD_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_UNWIND_INIT, \"unwind_init\", BT_FN_VOID, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_UPDATE_SETJMP_BUF, \"update_setjmp_buf\", BT_FN_VOID_PTR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_VA_COPY, \"va_copy\", BT_FN_VOID_VALIST_REF_VALIST_ARG, ATTR_NOTHROW_LEAF_LIST)"}, {"sha": "8a23b50fc66661d8b53f0b2e3fe19a3a7ef9d156", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -821,6 +821,8 @@ flags_from_decl_or_type (const_tree exp)\n \tflags |= ECF_NOVOPS;\n       if (lookup_attribute (\"leaf\", DECL_ATTRIBUTES (exp)))\n \tflags |= ECF_LEAF;\n+      if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (exp)))\n+\tflags |= ECF_COLD;\n \n       if (TREE_NOTHROW (exp))\n \tflags |= ECF_NOTHROW;"}, {"sha": "f1235a9de9ba031c10da708c5048ef791eb1750b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -1,3 +1,9 @@\n+2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* class.c (build_vtbl_initializer): Mark dvirt_fn as cold.\n+\t* decl.c (cxx_init_decl_processing, push_throw_library_fn): Likewise.\n+\t(excpet.c): Mark terminate as cold.\n+\n 2017-06-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/81006"}, {"sha": "66f42627715f891cc6b5d4ff2a5930e292a5dbbc", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -9727,7 +9727,7 @@ build_vtbl_initializer (tree binfo,\n \t\t    dvirt_fn = push_library_fn\n \t\t      (name,\n \t\t       build_function_type_list (void_type_node, NULL_TREE),\n-\t\t       NULL_TREE, ECF_NORETURN);\n+\t\t       NULL_TREE, ECF_NORETURN | ECF_COLD);\n \t\t}\n \t      fn = dvirt_fn;\n \t      if (!TARGET_VTABLE_USES_DESCRIPTORS)"}, {"sha": "b0df3c9835c21c65fd2a13daa2ce12ae29e69a7e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -4269,7 +4269,7 @@ cxx_init_decl_processing (void)\n \n   abort_fndecl\n     = build_library_fn_ptr (\"__cxa_pure_virtual\", void_ftype,\n-\t\t\t    ECF_NORETURN | ECF_NOTHROW);\n+\t\t\t    ECF_NORETURN | ECF_NOTHROW | ECF_COLD);\n \n   /* Perform other language dependent initializations.  */\n   init_class_processing ();\n@@ -4550,7 +4550,7 @@ push_void_library_fn (tree name, tree parmtypes, int ecf_flags)\n tree\n push_throw_library_fn (tree name, tree type)\n {\n-  tree fn = push_library_fn (name, type, NULL_TREE, ECF_NORETURN);\n+  tree fn = push_library_fn (name, type, NULL_TREE, ECF_NORETURN | ECF_COLD);\n   return fn;\n }\n \f"}, {"sha": "ab7ab5db1586d6b9303c096c61d84cb593440759", "filename": "gcc/cp/except.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -54,9 +54,10 @@ init_exception_processing (void)\n   push_namespace (std_identifier);\n   tmp = build_function_type_list (void_type_node, NULL_TREE);\n   terminate_fn = build_cp_library_fn_ptr (\"terminate\", tmp,\n-\t\t\t\t\t   ECF_NOTHROW | ECF_NORETURN);\n-  TREE_THIS_VOLATILE (terminate_fn) = 1;\n-  TREE_NOTHROW (terminate_fn) = 1;\n+\t\t\t\t\t   ECF_NOTHROW | ECF_NORETURN\n+\t\t\t\t\t   | ECF_COLD);\n+  gcc_checking_assert (TREE_THIS_VOLATILE (terminate_fn)\n+\t\t       && TREE_NOTHROW (terminate_fn));\n   pop_namespace ();\n \n   /* void __cxa_call_unexpected(void *); */"}, {"sha": "8a1c361fbedee002f66c0c474e171b98828eee5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -1,3 +1,8 @@\n+2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/predict-14.c: Avoid cold function detection.\n+\t* gcc.target/i386/umod-3.c: Likewise.\n+\n 2017-06-09  Tamar Christina  <tamar.christina@arm.com>\n \n \t* gcc.target/aarch64/lrint-matherr.h: New."}, {"sha": "a1b283699ec7d4d92dc96efba5162badb604a1a9", "filename": "gcc/testsuite/gcc.dg/predict-14.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-14.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -1,16 +1,18 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n \n+void test(void) __attribute__ ((noreturn));\n+\n int main(int argc, char **argv)\n {\n   switch (argc)\n     {\n     case 1:\n-      __builtin_abort();\n+      test();\n     case 4:\n-      __builtin_abort();\n+      test();\n     default:\n-      __builtin_abort();\n+      test();\n     }\n \n   return 10;"}, {"sha": "e1fb988263a6363288506c659c9bb03a8336664c", "filename": "gcc/testsuite/gcc.target/i386/umod-3.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fumod-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fumod-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fumod-3.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mtune=atom\" } */\n \n-extern void abort (void);\n extern void exit (int);\n \n unsigned char cx = 7;\n@@ -11,8 +10,8 @@ main ()\n {\n   unsigned char cy;\n   \n-  cy = cx / 6; if (cy != 1) abort ();\n-  cy = cx % 6; if (cy != 1) abort ();\n+  cy = cx / 6; if (cy != 1) exit (1);\n+  cy = cx % 6; if (cy != 1) exit (1);\n \n   exit(0);\n }"}, {"sha": "34e5c17ab22a846f5ea21ac150a2b248bf4a07e6", "filename": "gcc/tree-core.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -93,6 +93,9 @@ struct die_struct;\n /* Nonzero if this is an indirect call by descriptor.  */\n #define ECF_BY_DESCRIPTOR\t  (1 << 14)\n \n+/* Nonzero if this is a cold function.  */\n+#define ECF_COLD\t\t  (1 << 15)\n+\n /* Call argument flags.  */\n /* Nonzero if the argument is not dereferenced recursively, thus only\n    directly reachable memory is read or written.  */"}, {"sha": "3ba11be3261b41009ff2c310220a755c92bbb1d9", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb59f689a37fc39178b9ac5fa595c63b3d7eddc0/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cb59f689a37fc39178b9ac5fa595c63b3d7eddc0", "patch": "@@ -10625,6 +10625,9 @@ set_call_expr_flags (tree decl, int flags)\n   if (flags & ECF_LEAF)\n     DECL_ATTRIBUTES (decl) = tree_cons (get_identifier (\"leaf\"),\n \t\t\t\t\tNULL, DECL_ATTRIBUTES (decl));\n+  if (flags & ECF_COLD)\n+    DECL_ATTRIBUTES (decl) = tree_cons (get_identifier (\"cold\"),\n+\t\t\t\t\tNULL, DECL_ATTRIBUTES (decl));\n   if (flags & ECF_RET1)\n     DECL_ATTRIBUTES (decl)\n       = tree_cons (get_identifier (\"fn spec\"),\n@@ -10674,11 +10677,11 @@ build_common_builtin_nodes (void)\n \t\t\t      BUILT_IN_UNREACHABLE,\n \t\t\t      \"__builtin_unreachable\",\n \t\t\t      ECF_NOTHROW | ECF_LEAF | ECF_NORETURN\n-\t\t\t      | ECF_CONST);\n+\t\t\t      | ECF_CONST | ECF_COLD);\n       if (!builtin_decl_explicit_p (BUILT_IN_ABORT))\n \tlocal_define_builtin (\"__builtin_abort\", ftype, BUILT_IN_ABORT,\n \t\t\t      \"abort\",\n-\t\t\t      ECF_LEAF | ECF_NORETURN | ECF_CONST);\n+\t\t\t      ECF_LEAF | ECF_NORETURN | ECF_CONST | ECF_COLD);\n     }\n \n   if (!builtin_decl_explicit_p (BUILT_IN_MEMCPY)"}]}