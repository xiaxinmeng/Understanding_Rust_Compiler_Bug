{"sha": "adc881318b71864ad27821825c7cb9dce3c30aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjODgxMzE4YjcxODY0YWQyNzgyMTgyNWM3Y2I5ZGNlM2MzMGFhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-01-29T18:31:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-01-29T18:31:35Z"}, "message": "i386.md (addqi_1_lea): Fix mode (QI instead of HI).\n\n\t* config/i386/i386.md (addqi_1_lea): Fix mode (QI instead of HI).\n\t(testqi_1, andqi_2): If widening to SImode, make sure CONST_INT does\n\tnot have any upper bits set.\n\n\t* gcc.c-torture/execute/20010129-1.c: New test.\n\t* gcc.c-torture/execute/20010129-1.x: Add -mcpu=i686 on ia32.\n\nFrom-SVN: r39331", "tree": {"sha": "3c7a9d201bb834dad90bf9e5539025446147f142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7a9d201bb834dad90bf9e5539025446147f142"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adc881318b71864ad27821825c7cb9dce3c30aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc881318b71864ad27821825c7cb9dce3c30aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc881318b71864ad27821825c7cb9dce3c30aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc881318b71864ad27821825c7cb9dce3c30aa2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42c0c80add6f801ec0f57a1651555115e941c39b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c0c80add6f801ec0f57a1651555115e941c39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42c0c80add6f801ec0f57a1651555115e941c39b"}], "stats": {"total": 114, "additions": 103, "deletions": 11}, "files": [{"sha": "3123cf60a8d70f171094f92bf87b0f2b1f897ea6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adc881318b71864ad27821825c7cb9dce3c30aa2", "patch": "@@ -1,3 +1,9 @@\n+2001-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (addqi_1_lea): Fix mode (QI instead of HI).\n+\t(testqi_1, andqi_2): If widening to SImode, make sure CONST_INT does\n+\tnot have any upper bits set.\n+\n 2001-01-29  Phil Edwards  <pme@sources.redhat.com>\n \n \t* COPYING.LIB:  Update to LGPL 2.1 from the FSF."}, {"sha": "df16d5b608deda166332363185c5452f9f5926cf", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=adc881318b71864ad27821825c7cb9dce3c30aa2", "patch": "@@ -4983,10 +4983,10 @@\n   [(set (attr \"type\")\n      (if_then_else (eq_attr \"alternative\" \"3\")\n \t(const_string \"lea\")\n-\t(if_then_else (match_operand:HI 2 \"incdec_operand\" \"\")\n+\t(if_then_else (match_operand:QI 2 \"incdec_operand\" \"\")\n \t   (const_string \"incdec\")\n \t   (const_string \"alu\"))))\n-   (set_attr \"mode\" \"HI,HI,SI,SI\")])\n+   (set_attr \"mode\" \"QI,QI,SI,SI\")])\n \n (define_insn \"*addqi_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,q,r\")\n@@ -5959,11 +5959,17 @@\n \t\t\t (match_operand:QI 1 \"nonmemory_operand\" \"n,n,qn,n\"))\n \t\t (const_int 0)))]\n   \"ix86_match_ccmode (insn, CCNOmode)\"\n-  \"@\n-   test{b}\\\\t{%1, %0|%0, %1} \n-   test{b}\\\\t{%1, %0|%0, %1} \n-   test{b}\\\\t{%1, %0|%0, %1} \n-   test{l}\\\\t{%1, %k0|%k0, %1}\"\n+  \"*\n+{\n+  if (which_alternative == 3)\n+    {\n+      if (GET_CODE (operands[1]) == CONST_INT\n+\t  && (INTVAL (operands[1]) & 0xffffff00))\n+\toperands[1] = GEN_INT (INTVAL (operands[1]) & 0xff);\n+      return \\\"test{l}\\\\t{%1, %k0|%k0, %1}\\\";\n+    }\n+  return \\\"test{b}\\\\t{%1, %0|%0, %1}\\\";\n+}\"\n   [(set_attr \"type\" \"test\")\n    (set_attr \"modrm\" \"0,1,1,1\")\n    (set_attr \"mode\" \"QI,QI,QI,SI\")\n@@ -6283,10 +6289,17 @@\n \t(and:QI (match_dup 1) (match_dup 2)))]\n   \"ix86_match_ccmode (insn, CCNOmode)\n    && ix86_binary_operator_ok (AND, QImode, operands)\"\n-  \"@\n-   and{b}\\\\t{%2, %0|%0, %2}\n-   and{b}\\\\t{%2, %0|%0, %2}\n-   and{l}\\\\t{%2, %k0|%k0, %2}\"\n+  \"*\n+{\n+  if (which_alternative == 2)\n+    {\n+      if (GET_CODE (operands[2]) == CONST_INT\n+          && (INTVAL (operands[2]) & 0xffffff00))\n+        operands[2] = GEN_INT (INTVAL (operands[2]) & 0xff);\n+      return \\\"and{l}\\\\t{%2, %k0|%k0, %2}\\\";\n+    }\n+  return \\\"and{b}\\\\t{%2, %0|%0, %2}\\\";\n+}\"\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"QI,QI,SI\")])\n "}, {"sha": "74015cffbfcbf7d0217977d9c0702b5f24cb18af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=adc881318b71864ad27821825c7cb9dce3c30aa2", "patch": "@@ -1,3 +1,8 @@\n+2001-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20010129-1.c: New test.\n+\t* gcc.c-torture/execute/20010129-1.x: Add -mcpu=i686 on ia32.\n+\n 2001-01-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * gcc.dg/cpp/avoidpaste1.c: Test case."}, {"sha": "a4ea5e4d97ecd3496f2364ed6b45a8c0bfbc0e94", "filename": "gcc/testsuite/gcc.c-torture/execute/20010129-1.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.c?ref=adc881318b71864ad27821825c7cb9dce3c30aa2", "patch": "@@ -0,0 +1,64 @@\n+long baz1 (void *a)\n+{\n+  static long l;\n+  return l++;\n+}\n+\n+int baz2 (const char *a)\n+{\n+  return 0;\n+}\n+\n+int baz3 (int i)\n+{\n+  if (!i)\n+    abort ();\n+  return 1;\n+}\n+\n+void **bar;\n+\n+int foo (void *a, long b, int c)\n+{\n+  int d = 0, e, f = 0, i;\n+  char g[256];\n+  void **h;\n+\n+  g[0] = '\\n';\n+  g[1] = 0;\n+\n+  while (baz1 (a) < b) {\n+    if (g[0] != ' ' && g[0] != '\\t') {\n+      f = 1;\n+      e = 0;\n+      if (!d && baz2 (g) == 0) {\n+\tif ((c & 0x10) == 0)\n+\t  continue;\n+\te = d = 1;\n+      }\n+      if (!((c & 0x10) && (c & 0x4000) && e) && (c & 2))\n+\tcontinue;\n+      if ((c & 0x2000) && baz2 (g) == 0)\n+\tcontinue;\n+      if ((c & 0x1408) && baz2 (g) == 0)\n+\tcontinue;\n+      if ((c & 0x200) && baz2 (g) == 0)\n+\tcontinue;\n+      if (c & 0x80) {\n+\tfor (h = bar, i = 0; h; h = (void **)*h, i++)\n+\t  if (baz3 (i))\n+\t    break;\n+      }\n+      f = 0;\n+    }\n+  }\n+  return 0;\n+}\n+\n+int main ()\n+{\n+  void *n = 0;\n+  bar = &n;\n+  foo (&n, 1, 0xc811);\n+  exit (0);\n+}"}, {"sha": "1d34c19959f900d2b1c083c4fd31370d2717f723", "filename": "gcc/testsuite/gcc.c-torture/execute/20010129-1.x", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc881318b71864ad27821825c7cb9dce3c30aa2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010129-1.x?ref=adc881318b71864ad27821825c7cb9dce3c30aa2", "patch": "@@ -0,0 +1,4 @@\n+if { [istarget \"i?86-*-*\"] } {\n+  set additional_flags \"-mcpu=i686\"\n+}\n+return 0"}]}