{"sha": "9f33e12137b0216052c230fb653b130828ad575d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzM2UxMjEzN2IwMjE2MDUyYzIzMGZiNjUzYjEzMDgyOGFkNTc1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-30T09:52:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-30T09:52:01Z"}, "message": "re PR tree-optimization/92262 (ICE: verify_gimple failed (error: incorrect sharing of tree nodes))\n\n\tPR tree-optimization/92262\n\t* tree-ssa-loop-ivopts.c (get_debug_computation_at): Don't unshare\n\tubase or cbase here.\n\t(remove_unused_ivs): Unshare comp before using it.\n\n\t* g++.dg/opt/pr92262.C: New test.\n\nFrom-SVN: r277605", "tree": {"sha": "fe0fbc2360bda4a08182c72407ada5d6b688adaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe0fbc2360bda4a08182c72407ada5d6b688adaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f33e12137b0216052c230fb653b130828ad575d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f33e12137b0216052c230fb653b130828ad575d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f33e12137b0216052c230fb653b130828ad575d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f33e12137b0216052c230fb653b130828ad575d/comments", "author": null, "committer": null, "parents": [{"sha": "fd776d2834d40b6b49e1e2880d4cbde7f568ba29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd776d2834d40b6b49e1e2880d4cbde7f568ba29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd776d2834d40b6b49e1e2880d4cbde7f568ba29"}], "stats": {"total": 176, "additions": 136, "deletions": 40}, "files": [{"sha": "821d97a233d28a3c306aef7e830777c934ecc4e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f33e12137b0216052c230fb653b130828ad575d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f33e12137b0216052c230fb653b130828ad575d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f33e12137b0216052c230fb653b130828ad575d", "patch": "@@ -1,3 +1,10 @@\n+2019-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92262\n+\t* tree-ssa-loop-ivopts.c (get_debug_computation_at): Don't unshare\n+\tubase or cbase here.\n+\t(remove_unused_ivs): Unshare comp before using it.\n+\n 2019-10-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-prop.c (update_jump_functions_after_inlining):\n@@ -9459,24 +9466,24 @@\n \t* config/i386/i386-builtins.c (processor_model) :\n \tAdd M_INTEL_COREI7_TIGERLAKE and M_INTEL_COREI7_COOPERLAKE.\n \t(arch_names_table): Add tigerlake and cooperlake.\n-\t(get_builtin_code_for_version) : Handle PROCESSOR_TIGERLAKE\n+\t(get_builtin_code_for_version): Handle PROCESSOR_TIGERLAKE\n \tand PROCESSOR_COOPERLAKE.\n \t* config/i386/i386-c.c\n \t(ix86_target_macros_internal): Handle tigerlake and cooperlake.\n \t* config/i386/i386-options.c\n-\t(m_TIGERLAKE)  : Define.\n-\t(m_COOPERLAKE) : Ditto.\n+\t(m_TIGERLAKE): Define.\n+\t(m_COOPERLAKE): Ditto.\n \t(m_CORE_AVX512): Ditto.\n \t(processor_cost_table): Add cascadelake.\n \t(ix86_option_override_internal): Hadle PTA_MOVDIRI, PTA_MOVDIR64B.\n \t* config/i386/i386.h\n-\t(ix86_size_cost) : Define TARGET_TIGERLAKE and TARGET_COOPERLAKE.\n-\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n+\t(ix86_size_cost): Define TARGET_TIGERLAKE and TARGET_COOPERLAKE.\n+\t(processor_type): Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n \t(PTA_MOVDIRI): Ditto.\n \t(PTA_MOVDIR64B): Ditto.\n-\t(PTA_COOPERLAKE) : Ditto.\n-\t(PTA_TIGERLAKE)  : Ditto.\n-\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n+\t(PTA_COOPERLAKE): Ditto.\n+\t(PTA_TIGERLAKE): Ditto.\n+\t(processor_type): Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n \t* doc/extend.texi: Add tigerlake and cooperlake.\n \t* doc/invoke.texi: Add tigerlake and cooperlake.\n \n@@ -23009,7 +23016,7 @@\n 2019-04-08  wu yuan  <wuyuan5@huawei.com>\n \n \t* config/aarch64/aarch64-cores.def (tsv1100): Change scheduling model.\n-\t* config/aarch64/aarch64.md : Add \"tsv110.md\"\n+\t* config/aarch64/aarch64.md: Add \"tsv110.md\".\n \t* config/aarch64/tsv110.md: New file.\n \n 2019-04-08  Richard Biener  <rguenther@suse.de>"}, {"sha": "2d1d47ab26b17f7492b08cf8e4188e38e5317138", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f33e12137b0216052c230fb653b130828ad575d", "patch": "@@ -1,3 +1,8 @@\n+2019-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92262\n+\t* g++.dg/opt/pr92262.C: New test.\n+\n 2019-10-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65930\n@@ -319,8 +324,8 @@\n 2019-10-27  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/86248\n-\t* gfortran.dg/char_result_19.f90 : New test.\n-\t* gfortran.dg/char_result_mod_19.f90 : Module for the new test.\n+\t* gfortran.dg/char_result_19.f90: New test.\n+\t* gfortran.dg/char_result_mod_19.f90: Module for the new test.\n \n 2019-10-26  Hongtao Liu  <hongtao.liu@intel.com>\n \n@@ -1424,9 +1429,9 @@\n 2019-10-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91926\n-\t* gfortran.dg/ISO_Fortran_binding_13.f90 : New test.\n-\t* gfortran.dg/ISO_Fortran_binding_13.c : Additional source.\n-\t* gfortran.dg/ISO_Fortran_binding_14.f90 : New test.\n+\t* gfortran.dg/ISO_Fortran_binding_13.f90: New test.\n+\t* gfortran.dg/ISO_Fortran_binding_13.c: Additional source.\n+\t* gfortran.dg/ISO_Fortran_binding_14.f90: New test.\n \n 2019-10-05  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1815,7 +1820,7 @@\n 2019-09-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91726\n-\t* gfortran.dg/coarray_poly_9.f90 : New test.\n+\t* gfortran.dg/coarray_poly_9.f90: New test.\n \n 2019-09-29  Kewen Lin  <linkw@gcc.gnu.org>\n \n@@ -2047,8 +2052,8 @@\n 2019-09-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91729\n-\t* gfortran.dg/select_rank_2.f90 : Add two more errors in foo2.\n-\t* gfortran.dg/select_rank_3.f90 : New test.\n+\t* gfortran.dg/select_rank_2.f90: Add two more errors in foo2.\n+\t* gfortran.dg/select_rank_3.f90: New test.\n \n 2019-09-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -2415,7 +2420,7 @@\n 2019-09-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91588\n-\t* gfortran.dg/associate_49.f90 : New test.\n+\t* gfortran.dg/associate_49.f90: New test.\n \n 2019-09-17  Yannick Moy  <moy@adacore.com>\n \n@@ -2544,7 +2549,7 @@\n 2019-09-13  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91717\n-\t* gfortran.dg/dependency_55.f90 : New test.\n+\t* gfortran.dg/dependency_55.f90: New test.\n \n 2019-09-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n@@ -3477,7 +3482,7 @@\n 2019-09-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91589\n-\t* gfortran.dg/pr91589.f90 : New test.\n+\t* gfortran.dg/pr91589.f90: New test.\n \n 2019-09-02  Steven G. Kargl  <kargl@gc.gnu.org>\n \n@@ -3521,8 +3526,8 @@\n \n 2019-09-01  Paul Thomas  <pault@gcc.gnu.org>\n \n-\t* gfortran.dg/select_rank_1.f90 : New test.\n-\t* gfortran.dg/select_rank_2.f90 : New test.\n+\t* gfortran.dg/select_rank_1.f90: New test.\n+\t* gfortran.dg/select_rank_2.f90: New test.\n \n 2019-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -6485,7 +6490,7 @@\n 2019-07-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91077\n-\t* gfortran.dg/pointer_array_11.f90 : New test.\n+\t* gfortran.dg/pointer_array_11.f90: New test.\n \n 2019-07-06  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -8133,12 +8138,12 @@\n 019-06-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/89365\n-\t* gfortran.dg/assumed_rank_bounds_3.f90 : New test.\n+\t* gfortran.dg/assumed_rank_bounds_3.f90: New test.\n \n 2019-06-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/90786\n-\t* gfortran.dg/proc_ptr_51.f90 : New test.\n+\t* gfortran.dg/proc_ptr_51.f90: New test.\n \n 2019-06-08  Marek Polacek  <polacek@redhat.com>\n \n@@ -8873,7 +8878,7 @@\n \t* gcc.target/i386/pr82699-6.c: Likewise.\n \t* gcc.target/i386/returninst1.c: Likewise.\n \t* gcc.target/i386/returninst2.c: Likewise.\n-\t* gcc.target/i386/returninst3.c : Likewise.\n+\t* gcc.target/i386/returninst3.c: Likewise.\n \n 2019-05-23  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n@@ -9239,7 +9244,7 @@\n 2019-05-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/90498\n-\t* gfortran.dg/associate_48.f90 : New test.\n+\t* gfortran.dg/associate_48.f90: New test.\n \n 2019-05-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n@@ -12799,21 +12804,21 @@\n 2019-02-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88117\n-\t* gfortran.dg/deferred_character_32.f90 : New test\n+\t* gfortran.dg/deferred_character_32.f90: New test.\n \n 2019-02-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/89385\n-\t* gfortran.dg/ISO_Fortran_binding_1.f90 : Correct test for\n+\t* gfortran.dg/ISO_Fortran_binding_1.f90: Correct test for\n \tpreviously incorrect lbound for allocatable expressions. Also\n \tcorrect stop values to avoid repetition.\n-\t* gfortran.dg/ISO_Fortran_binding_5.f90 : New test\n-\t* gfortran.dg/ISO_Fortran_binding_5.c : Support previous test.\n+\t* gfortran.dg/ISO_Fortran_binding_5.f90: New test\n+\t* gfortran.dg/ISO_Fortran_binding_5.c: Support previous test.\n \n \tPR fortran/89366\n-\t* gfortran.dg/ISO_Fortran_binding_6.f90 : New test\n-\t* gfortran.dg/ISO_Fortran_binding_6.c : Support previous test.\n-\t* gfortran.dg/pr32599.f03 : Set standard to F2008.\n+\t* gfortran.dg/ISO_Fortran_binding_6.f90: New test.\n+\t* gfortran.dg/ISO_Fortran_binding_6.c: Support previous test.\n+\t* gfortran.dg/pr32599.f03: Set standard to F2008.\n \n 2019-02-22  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -13453,7 +13458,7 @@\n 2019-02-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/89200\n-\t* gfortran.dg/array_reference_2.f90 : New test.\n+\t* gfortran.dg/array_reference_2.f90: New test.\n \n 2019-02-09  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -13713,17 +13718,17 @@\n 2019-02-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88393\n-\t* gfortran.dg/alloc_comp_assign_16.f03 : New test.\n+\t* gfortran.dg/alloc_comp_assign_16.f03: New test.\n \n 2019-02-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88980\n-\t* gfortran.dg/realloc_on_assign_32.f90 : New test.\n+\t* gfortran.dg/realloc_on_assign_32.f90: New test.\n \n 2019-02-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88685\n-\t* gfortran.dg/pointer_array_component_3.f90 : New test.\n+\t* gfortran.dg/pointer_array_component_3.f90: New test.\n \n 2019-02-02  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "3a6478bcf41ea1bb5a5d013a5382a0c115352514", "filename": "gcc/testsuite/g++.dg/opt/pr92262.C", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92262.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92262.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92262.C?ref=9f33e12137b0216052c230fb653b130828ad575d", "patch": "@@ -0,0 +1,85 @@\n+// PR tree-optimization/92262\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2 -ftree-loop-distribution -g\" }\n+\n+struct A;\n+struct B { template <typename T> using b = T *; };\n+template <typename, typename T> using c = B::b<T>;\n+void *operator new (__SIZE_TYPE__, void *p) { return p; }\n+struct C {\n+  template <typename T, typename... U> void\n+  foo (T *x, U... y) { new (x) T(y...); }\n+};\n+template <typename> class D : public C {};\n+template <typename> struct E;\n+template <typename T> struct E<D<T>> {\n+  using e = D<T>;\n+  template <typename U> using f = D<U>;\n+  template <typename U, typename... V>\n+  static void\n+  bar (e x, U y, V... z) { x.foo (y, z...); }\n+};\n+template <typename T> struct F : E<T> {\n+  template <typename U> struct G { typedef typename E<T>::template f<U> O; };\n+};\n+template <typename T, typename U, typename V> void\n+baz (T x, U y, V z)\n+{\n+  F<V>::bar (z, y, *x);\n+}\n+struct H {\n+  typedef c<int, A> I;\n+  typedef c<int, I> J;\n+  I i;\n+  J j;\n+  void qux (J x) { j = x; }\n+};\n+template <typename>\n+struct K {\n+  K(D<A> x) : k (x) {}\n+  typedef H::J L;\n+  struct M { L m; H n, o; };\n+  struct N : F<D<int>>::G<A>::O, M { N (F<D>::G<A>::O); };\n+  void quux ();\n+  N k;\n+};\n+template <typename T>\n+void\n+K<T>::quux ()\n+{\n+  L K (k.m - 1);\n+  k.n.qux (K);\n+}\n+template <typename, typename = int>\n+struct P : K<int> {\n+  template <typename T>\n+  P (T x, T, D<A> y = D<A> ()) : K (y) { corge (x); }\n+  template <typename T> void corge (T);\n+  typedef L L;\n+};\n+template <typename T, typename U>\n+template <typename V>\n+void P<T, U>::corge (V y)\n+{\n+  quux ();\n+  for (L x = k.n.j; x < k.o.j; ++x)\n+  {\n+    ++y;\n+    D<int> pv;\n+    baz (y, *x, pv);\n+  }\n+  D<int> z;\n+  baz (y, k.o.i, z);\n+}\n+struct A {\n+  A (int x) : a (x) {}\n+  int a;\n+};\n+int a[2]{};\n+\n+int\n+main ()\n+{\n+  P<int> (a, a);\n+  return 0;\n+}"}, {"sha": "5938cfec08b2de510ef9173b2cf266e7664fff3f", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f33e12137b0216052c230fb653b130828ad575d/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=9f33e12137b0216052c230fb653b130828ad575d", "patch": "@@ -4152,8 +4152,6 @@ get_debug_computation_at (class loop *loop, gimple *at,\n       var = fold_convert (ctype, var);\n     }\n \n-  ubase = unshare_expr (ubase);\n-  cbase = unshare_expr (cbase);\n   if (stmt_after_increment (loop, cand, at))\n     var = fold_build2 (MINUS_EXPR, TREE_TYPE (var), var,\n \t\t       unshare_expr (cstep));\n@@ -7648,6 +7646,7 @@ remove_unused_ivs (struct ivopts_data *data, bitmap toremove)\n \t      if (!best_cand)\n \t\tcontinue;\n \n+\t      comp = unshare_expr (comp);\n \t      if (count > 1)\n \t\t{\n \t\t  tree vexpr = make_node (DEBUG_EXPR_DECL);"}]}