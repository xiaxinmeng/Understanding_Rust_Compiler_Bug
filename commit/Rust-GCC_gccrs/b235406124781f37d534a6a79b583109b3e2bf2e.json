{"sha": "b235406124781f37d534a6a79b583109b3e2bf2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIzNTQwNjEyNDc4MWYzN2Q1MzRhNmE3OWI1ODMxMDliM2UyYmYyZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-08-20T17:39:20Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-08-20T17:39:20Z"}, "message": "Test of gcov line coverage information.\n\nFrom-SVN: r45057", "tree": {"sha": "e643ae1f606bc0cd32a933b98c7ace2f66b5c7bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e643ae1f606bc0cd32a933b98c7ace2f66b5c7bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b235406124781f37d534a6a79b583109b3e2bf2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b235406124781f37d534a6a79b583109b3e2bf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b235406124781f37d534a6a79b583109b3e2bf2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b235406124781f37d534a6a79b583109b3e2bf2e/comments", "author": null, "committer": null, "parents": [{"sha": "8c9bdd540e9761eaafc13a8cf0e6ff788d0decba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9bdd540e9761eaafc13a8cf0e6ff788d0decba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9bdd540e9761eaafc13a8cf0e6ff788d0decba"}], "stats": {"total": 271, "additions": 271, "deletions": 0}, "files": [{"sha": "d5986fe4b8b7f1420e39cd425ab89d2bf66a897d", "filename": "gcc/testsuite/gcc.misc-tests/gcov-4.c", "status": "added", "additions": 271, "deletions": 0, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b235406124781f37d534a6a79b583109b3e2bf2e/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b235406124781f37d534a6a79b583109b3e2bf2e/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c?ref=b235406124781f37d534a6a79b583109b3e2bf2e", "patch": "@@ -0,0 +1,271 @@\n+/* Check that execution counts for various C constructs are reported\n+   correctly by gcov. */\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+\n+int do_something (int i)\n+{\n+  return i;\n+}\n+\n+/* Check static inline functions. */\n+\n+int unref_val;\n+\n+static inline int\n+unreferenced (int i, int j)\n+{\n+  return i - j;\n+}\n+\n+static inline int\n+uncalled (int i, int j)\n+{\n+  return i * j;\n+}\n+\n+static inline int\n+called (int i, int j)\n+{\n+    return i + j;\t\t\t/* count(1) */\n+}\n+\n+void\n+call_unref ()\n+{\n+  if (unref_val)\t\t\t/* count(1) */\n+    unref_val = uncalled (1, 2);\n+  unref_val = called (unref_val, 4);\t/* count(1) */\n+}\n+\n+\n+/* Check for loops. */\n+\n+int for_val1;\n+int for_val2;\n+int for_temp;\n+\n+int\n+test_for1 (int n)\n+{\n+  int i;\n+  for_temp = 1;\t\t\t\t/* count(3) */\n+  for (i = 0; i < n; i++)\n+    for_temp++;\t\t\t\t/* count(9) */\n+  return for_temp;\t\t\t/* count(3) */\n+}\n+\n+int\n+test_for2 (int m, int n, int o)\n+{\n+  int i, j, k;\n+  for_temp = 1;\t\t\t\t/* count(6) */\n+  for (i = 0; i < n; i++)\n+    for (j = 0; j < m; j++)\n+      for (k = 0; k < o; k++)\n+\tfor_temp++;\t\t\t/* count(81) */\n+  return for_temp;\t\t\t/* count(6) */\n+}\n+\n+int\n+call_for ()\n+{\n+  for_val1 += test_for1 (0);\n+  for_val1 += test_for1 (2);\n+  for_val1 += test_for1 (7);\n+\n+  for_val2 += test_for2 (0, 0, 0);\n+  for_val2 += test_for2 (1, 0, 0);\n+  for_val2 += test_for2 (1, 3, 0);\n+  for_val2 += test_for2 (1, 3, 1);\n+  for_val2 += test_for2 (3, 1, 5);\n+  for_val2 += test_for2 (3, 7, 3);\n+}\n+\n+/* Check the use of goto. */\n+\n+int goto_val;\n+\n+int\n+test_goto1 (int f)\n+{\n+  if (f)\t\t\t\t/* count(2) */\n+    goto lab1;\t\t\t\t/* count(1) */\n+  return 1;\t\t\t\t/* count(1) */\n+lab1:\n+  return 2;\t\t\t\t/* count(1) */\n+}\n+\n+int\n+test_goto2 (int f)\n+{\n+  int i;\n+  for (i = 0; i < 10; i++)\t\t/* count(15) */\n+    if (i == f) goto lab2;\t\t/* count(14) */\n+  return 4;\t\t\t\t/* count(1) */\n+lab2:\n+  return 8;\t\t\t\t/* count(1) */\n+}\n+\n+void\n+call_goto ()\n+{\n+  goto_val += test_goto1 (0);\n+  goto_val += test_goto1 (1);\n+  goto_val += test_goto2 (3);\n+  goto_val += test_goto2 (30);\n+}\n+\n+/* Check nested if-then-else statements. */\n+\n+int ifelse_val1;\n+int ifelse_val2;\n+int ifelse_val3;\n+\n+int\n+test_ifelse1 (int i, int j)\n+{\n+  int result = 0;\n+  if (i)\t\t\t\t/* count(5) */\n+    if (j)\t\t\t\t/* count(3) */\n+      result = do_something (4);\t/* count(3) */\n+    else\n+      result = do_something (1024);\n+  else\n+    if (j)\t\t\t\t/* count(2) */\n+      result = do_something (1);\t/* count(1) */\n+    else\n+      result = do_something (2);\t/* count(1) */\n+  if (i > j)\t\t\t\t/* count(5) */\n+    result = do_something (result*2);\t/* count(1) */\n+  if (i > 10)\t\t\t\t/* count(5) */\n+    if (j > 10)\t\t\t\t/* count(1) */\n+      result = do_something (result*4);\t/* count(1) */\n+  return result;\t\t\t/* count(5) */\n+}\n+\n+int\n+test_ifelse2 (int i)\n+{\n+  int result = 0;\n+  if (!i)\t\t\t\t/* count(6) */\n+    result = do_something (1);\t\t/* count(1) */\n+  if (i == 1)\t\t\t\t/* count(6) */\n+    result = do_something (1024);\n+  if (i == 2)\t\t\t\t/* count(6) */\n+    result = do_something (2);\t\t/* count(3) */\n+  if (i == 3)\t\t\t\t/* count(6) */\n+    return do_something (8);\t\t/* count(2) */\n+  if (i == 4)\t\t\t\t/* count(4) */\n+    return do_something (2048);\n+  return result;\t\t\t/* count(4) */\n+}\n+\n+int\n+test_ifelse3 (int i, int j)\n+{\n+  int result = 1;\n+  if (i > 10 && j > i && j < 20)\t/* count(11) */\n+    result = do_something (16);\t\t/* count(1) */\n+  if (i > 20)\t\t\t\t/* count(11) */\n+    if (j > i)\t\t\t\t/* count(5) */\n+      if (j < 30)\t\t\t/* count(2) */\n+\tresult = do_something (32);\t/* count(1) */\n+  if (i == 3 || j == 47 || i == j)\t/* count(11) */\n+    result = do_something (64);\t\t/* count(3) */\n+  return result;\t\t\t/* count(11) */\n+}\n+\n+void\n+call_ifelse ()\n+{\n+  ifelse_val1 += test_ifelse1 (0, 2);\n+  ifelse_val1 += test_ifelse1 (0, 0);\n+  ifelse_val1 += test_ifelse1 (1, 2);\n+  ifelse_val1 += test_ifelse1 (10, 2);\n+  ifelse_val1 += test_ifelse1 (11, 11);\n+\n+  ifelse_val2 += test_ifelse2 (0);\n+  ifelse_val2 += test_ifelse2 (2);\n+  ifelse_val2 += test_ifelse2 (2);\n+  ifelse_val2 += test_ifelse2 (2);\n+  ifelse_val2 += test_ifelse2 (3);\n+  ifelse_val2 += test_ifelse2 (3);\n+\n+  ifelse_val3 += test_ifelse3 (11, 19);\n+  ifelse_val3 += test_ifelse3 (25, 27);\n+  ifelse_val3 += test_ifelse3 (11, 22);\n+  ifelse_val3 += test_ifelse3 (11, 10);\n+  ifelse_val3 += test_ifelse3 (21, 32);\n+  ifelse_val3 += test_ifelse3 (21, 20);\n+  ifelse_val3 += test_ifelse3 (1, 2);\n+  ifelse_val3 += test_ifelse3 (32, 31);\n+  ifelse_val3 += test_ifelse3 (3, 0);\n+  ifelse_val3 += test_ifelse3 (0, 47);\n+  ifelse_val3 += test_ifelse3 (65, 65);\n+}\n+\n+/* Check switch statements. */\n+\n+int switch_val, switch_m;\n+\n+int\n+test_switch (int i, int j)\n+{\n+  int result = 0;\t\t\t/* count(5) */\n+\n+  switch (i)\t\t\t\t/* count(5) */\n+    {\n+      case 1:\n+        result = do_something (2);\t/* count(1) */\n+        break;\n+      case 2:\n+        result = do_something (1024);\n+        break;\n+      case 3:\n+      case 4:\n+        if (j == 2)\t\t\t/* count(3) */\n+          return do_something (4);\t/* count(1) */\n+        result = do_something (8);\t/* count(2) */\n+        break;\n+      default:\n+\tresult = do_something (32);\t/* count(1) */\n+\tswitch_m++;\t\t\t/* count(1) */\n+        break;\n+    }\n+  return result;\t\t\t/* count(4) */\n+}\n+\n+void\n+call_switch ()\n+{\n+  switch_val += test_switch (1, 0);\n+  switch_val += test_switch (3, 0);\n+  switch_val += test_switch (3, 2);\n+  switch_val += test_switch (4, 0);\n+  switch_val += test_switch (16, 0);\t\n+  switch_val += switch_m;\n+}\n+\n+int\n+main()\n+{\n+  call_for ();\n+  call_goto ();\n+  call_ifelse ();\n+  call_switch ();\n+  call_unref ();\n+  if ((for_val1 != 12)\n+      || (for_val2 != 87)\n+      || (goto_val != 15)\n+      || (ifelse_val1 != 31)\n+      || (ifelse_val2 != 23)\n+      || (ifelse_val3 != 246)\n+      || (switch_val != 55)\n+      || (unref_val != 4))\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { run-gcov gcov-4.c } } */"}]}