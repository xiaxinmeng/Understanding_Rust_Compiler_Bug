{"sha": "deb9351fafe1032ced16f9608068f65930e06841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGViOTM1MWZhZmUxMDMyY2VkMTZmOTYwODA2OGY2NTkzMGUwNjg0MQ==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2016-08-23T09:01:42Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-08-23T09:01:42Z"}, "message": "S/390: Add splitter for \"and\" with complement.\n\nSplit ~b & a to (b & a) ^ a.  This is benefitial on z Systems since we\notherwise need a big -1 constant to be loaded for the ~b.\n\t\ngcc/ChangeLog:\n\n2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"*andc_split\"): New splitter for and with\n\tcomplement.\n\ngcc/testsuite/ChangeLog:\n\n2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/md/andc-splitter-1.c: New test case.\n\t* gcc.target/s390/md/andc-splitter-2.c: Likewise.\n\nFrom-SVN: r239685", "tree": {"sha": "f500d077aa5fb6b297c28e717a86ed721f7cfbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f500d077aa5fb6b297c28e717a86ed721f7cfbc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deb9351fafe1032ced16f9608068f65930e06841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb9351fafe1032ced16f9608068f65930e06841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb9351fafe1032ced16f9608068f65930e06841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb9351fafe1032ced16f9608068f65930e06841/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1fd9f058f37ba4c17cd34e961fe4879e7dd7e3bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd9f058f37ba4c17cd34e961fe4879e7dd7e3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd9f058f37ba4c17cd34e961fe4879e7dd7e3bc"}], "stats": {"total": 159, "additions": 159, "deletions": 0}, "files": [{"sha": "8b1dc4ba0512470e5e533281ec518fb3379e8659", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9351fafe1032ced16f9608068f65930e06841/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9351fafe1032ced16f9608068f65930e06841/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=deb9351fafe1032ced16f9608068f65930e06841", "patch": "@@ -1,3 +1,8 @@\n+2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"*andc_split\"): New splitter for and with\n+\tcomplement.\n+\n 2016-08-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/27336"}, {"sha": "30ddc14a46f609e65fd0d22f9fe91547cc406e3d", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=deb9351fafe1032ced16f9608068f65930e06841", "patch": "@@ -7266,6 +7266,33 @@\n   [(set_attr \"op_type\"  \"RR,SI,SS\")\n    (set_attr \"z10prop\" \"z10_super_E1,z10_super,*\")])\n \n+;\n+; And with complement\n+;\n+; c = ~b & a = (b & a) ^ a\n+\n+(define_insn_and_split \"*andc_split_<mode>\"\n+  [(set (match_operand:GPR 0 \"nonimmediate_operand\" \"\")\n+\t(and:GPR (not:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"\"))\n+\t\t (match_operand:GPR 2 \"general_operand\" \"\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"! reload_completed && s390_logical_operator_ok_p (operands)\"\n+  \"#\"\n+  \"&& 1\"\n+  [\n+  (parallel\n+   [(set (match_dup 3) (and:GPR (match_dup 1) (match_dup 2)))\n+   (clobber (reg:CC CC_REGNUM))])\n+  (parallel\n+   [(set (match_dup 0) (xor:GPR (match_dup 3) (match_dup 2)))\n+   (clobber (reg:CC CC_REGNUM))])]\n+{\n+  if (reg_overlap_mentioned_p (operands[0], operands[2]))\n+    operands[3] = gen_reg_rtx (<MODE>mode);\n+  else\n+    operands[3] = operands[0];\n+})\n+\n ;\n ; Block and (NC) patterns.\n ;"}, {"sha": "c02a4b821e3de54c255e7d83aed4d4130c62aceb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=deb9351fafe1032ced16f9608068f65930e06841", "patch": "@@ -1,3 +1,8 @@\n+2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/md/andc-splitter-1.c: New test case.\n+\t* gcc.target/s390/md/andc-splitter-2.c: Likewise.\n+\n 2016-08-23  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/27336"}, {"sha": "ed78921e5c9646e7d3b93bdd955adac30e49c361", "filename": "gcc/testsuite/gcc.target/s390/md/andc-splitter-1.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c?ref=deb9351fafe1032ced16f9608068f65930e06841", "patch": "@@ -0,0 +1,61 @@\n+/* Machine description pattern tests.  */\n+\n+/* { dg-do run { target { lp64 } } } */\n+/* { dg-options \"-mzarch -save-temps -dP\" } */\n+/* Skip test if -O0 is present on the command line:\n+\n+    { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } }\n+\n+   Skip test if the -O option is missing from the command line\n+    { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O*\" } }\n+*/\n+\n+__attribute__ ((noinline))\n+unsigned long andc_vv(unsigned long a, unsigned long b)\n+{ return ~b & a; }\n+/* { dg-final { scan-assembler \":15 .\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":15 .\\* \\{\\\\*xordi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned long andc_pv(unsigned long *a, unsigned long b)\n+{ return ~b & *a; }\n+/* { dg-final { scan-assembler \":21 .\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":21 .\\* \\{\\\\*xordi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned long andc_vp(unsigned long a, unsigned long *b)\n+{ return ~*b & a; }\n+/* { dg-final { scan-assembler \":27 .\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":27 .\\* \\{\\\\*xordi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned long andc_pp(unsigned long *a, unsigned long *b)\n+{ return ~*b & *a; }\n+/* { dg-final { scan-assembler \":33 .\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":33 .\\* \\{\\\\*xordi3\\}\" } } */\n+\n+/* { dg-final { scan-assembler-times \"\\tngr\\?k\\?\\t\" 4 } } */\n+/* { dg-final { scan-assembler-times \"\\txgr\\?\\t\" 4 } } */\n+\n+int\n+main (void)\n+{\n+  unsigned long a = 0xc00000000000000cllu;\n+  unsigned long b = 0x500000000000000allu;\n+  unsigned long e = 0x8000000000000004llu;\n+  unsigned long c;\n+\n+  c = andc_vv (a, b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_pv (&a, b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_vp (a, &b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_pp (&a, &b);\n+  if (c != e)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "d88da4d4f6b17e488d6effc1d928b5f6ea09bdbb", "filename": "gcc/testsuite/gcc.target/s390/md/andc-splitter-2.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deb9351fafe1032ced16f9608068f65930e06841/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c?ref=deb9351fafe1032ced16f9608068f65930e06841", "patch": "@@ -0,0 +1,61 @@\n+/* Machine description pattern tests.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -dP\" } */\n+/* Skip test if -O0 is present on the command line:\n+\n+    { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } }\n+\n+   Skip test if the -O option is missing from the command line\n+    { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O*\" } }\n+*/\n+\n+__attribute__ ((noinline))\n+unsigned int andc_vv(unsigned int a, unsigned int b)\n+{ return ~b & a; }\n+/* { dg-final { scan-assembler \":15 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":15 .\\* \\{\\\\*xorsi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned int andc_pv(unsigned int *a, unsigned int b)\n+{ return ~b & *a; }\n+/* { dg-final { scan-assembler \":21 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":21 .\\* \\{\\\\*xorsi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned int andc_vp(unsigned int a, unsigned int *b)\n+{ return ~*b & a; }\n+/* { dg-final { scan-assembler \":27 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":27 .\\* \\{\\\\*xorsi3\\}\" } } */\n+\n+__attribute__ ((noinline))\n+unsigned int andc_pp(unsigned int *a, unsigned int *b)\n+{ return ~*b & *a; }\n+/* { dg-final { scan-assembler \":33 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":33 .\\* \\{\\\\*xorsi3\\}\" } } */\n+\n+/* { dg-final { scan-assembler-times \"\\tnr\\?k\\?\\t\" 4 } } */\n+/* { dg-final { scan-assembler-times \"\\txr\\?k\\?\\t\" 4 } } */\n+\n+int\n+main (void)\n+{\n+  unsigned int a = 0xc000000cu;\n+  unsigned int b = 0x5000000au;\n+  unsigned int e = 0x80000004u;\n+  unsigned int c;\n+\n+  c = andc_vv (a, b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_pv (&a, b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_vp (a, &b);\n+  if (c != e)\n+    __builtin_abort ();\n+  c = andc_pp (&a, &b);\n+  if (c != e)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}