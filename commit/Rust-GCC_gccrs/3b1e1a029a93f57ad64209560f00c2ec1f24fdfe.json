{"sha": "3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IxZTFhMDI5YTkzZjU3YWQ2NDIwOTU2MGYwMGMyZWMxZjI0ZmRmZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-08-08T13:39:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-08-08T13:39:33Z"}, "message": "Don't return identity for CONST or symbolic reference\n\ngcc/\n\n\tPR rtl-optimization/54157\n\t* combine.c (gen_lowpart_for_combine): Don't return identity\n\tfor CONST or symbolic reference.\n\ngcc/testsuite/\n\n\tPR rtl-optimization/54157\n\t* gcc.target/i386/pr54157.c: New file.\n\nFrom-SVN: r190228", "tree": {"sha": "5a809c37df1938d156b3f35a25564342c3c68d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a809c37df1938d156b3f35a25564342c3c68d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/comments", "author": null, "committer": null, "parents": [{"sha": "d05e383bc7a06abdc444ff6f42a91fdce0ff3551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05e383bc7a06abdc444ff6f42a91fdce0ff3551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05e383bc7a06abdc444ff6f42a91fdce0ff3551"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "7e94097a10ff41be54830f9b5f0ef3ac53156c9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "patch": "@@ -1,3 +1,10 @@\n+2012-08-08  Richard Sandiford  <rdsandiford@googlemail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/54157\n+\t* combine.c (gen_lowpart_for_combine): Don't return identity\n+\tfor CONST or symbolic reference.\n+\n 2012-08-08 Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_ADX_SET): New."}, {"sha": "2b91eb9ccb338d217f9950a3a5a8bd14709f11e9", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "patch": "@@ -10634,13 +10634,6 @@ gen_lowpart_for_combine (enum machine_mode omode, rtx x)\n   if (omode == imode)\n     return x;\n \n-  /* Return identity if this is a CONST or symbolic reference.  */\n-  if (omode == Pmode\n-      && (GET_CODE (x) == CONST\n-\t  || GET_CODE (x) == SYMBOL_REF\n-\t  || GET_CODE (x) == LABEL_REF))\n-    return x;\n-\n   /* We can only support MODE being wider than a word if X is a\n      constant integer or has a mode the same size.  */\n   if (GET_MODE_SIZE (omode) > UNITS_PER_WORD"}, {"sha": "bd2e3f37268c93e32c66e0f064b9ef63c5bd3ee8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "patch": "@@ -1,3 +1,8 @@\n+2012-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/54157\n+\t* gcc.target/i386/pr54157.c: New file.\n+\n 2012-08-08 Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n \n \t* gcc.target/i386/adx-addcarryx32-1.c: New."}, {"sha": "b5c4528b80f43d370e77ecfba0f25a14100cdc4e", "filename": "gcc/testsuite/gcc.target/i386/pr54157.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54157.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1e1a029a93f57ad64209560f00c2ec1f24fdfe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54157.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54157.c?ref=3b1e1a029a93f57ad64209560f00c2ec1f24fdfe", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target { ! { ia32 } } } } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=long -ftree-vectorize\" } */\n+\n+struct s2{\n+  int n[24 -1][24 -1][24 -1];\n+};\n+\n+struct test2{\n+  struct s2 e;\n+};\n+\n+struct test2 tmp2[4];\n+\n+void main1 ()\n+{\n+  int i,j;\n+\n+  for (i = 0; i < 24 -4; i++)\n+      for (j = 0; j < 24 -4; j++)\n+          tmp2[2].e.n[1][i][j] = 8;\n+}"}]}