{"sha": "fe3465d17c0a85e7c0f491df6331793df84e4438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUzNDY1ZDE3YzBhODVlN2MwZjQ5MWRmNjMzMTc5M2RmODRlNDQzOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-07-23T12:11:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-07-23T12:11:14Z"}, "message": "mips.h (GR_REG_CLASS_P, [...]): Delete.\n\ngcc/\n\t* config/mips/mips.h (GR_REG_CLASS_P, COP_REG_CLASS_P): Delete.\n\t(SECONDARY_MEMORY_NEEDED): Delete commented-out definition.\n\t* config/mips/mips.c (mips_init_libfuncs): Use reg_class_subset_p\n\tinstead of GR_REG_CLASS_P and COP_REG_CLASS_P.\n\nFrom-SVN: r126844", "tree": {"sha": "b1fd2fafd8f26609f302057ec533818ba9ce45a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1fd2fafd8f26609f302057ec533818ba9ce45a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe3465d17c0a85e7c0f491df6331793df84e4438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3465d17c0a85e7c0f491df6331793df84e4438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3465d17c0a85e7c0f491df6331793df84e4438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3465d17c0a85e7c0f491df6331793df84e4438/comments", "author": null, "committer": null, "parents": [{"sha": "2b656cfda836b429c35cae05ddde41ed79871f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b656cfda836b429c35cae05ddde41ed79871f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b656cfda836b429c35cae05ddde41ed79871f4e"}], "stats": {"total": 54, "additions": 16, "deletions": 38}, "files": [{"sha": "02d833380a948cbd7ce37913efd0f3bad8544c60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe3465d17c0a85e7c0f491df6331793df84e4438", "patch": "@@ -1,3 +1,10 @@\n+2007-07-23  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/mips.h (GR_REG_CLASS_P, COP_REG_CLASS_P): Delete.\n+\t(SECONDARY_MEMORY_NEEDED): Delete commented-out definition.\n+\t* config/mips/mips.c (mips_init_libfuncs): Use reg_class_subset_p\n+\tinstead of GR_REG_CLASS_P and COP_REG_CLASS_P.\n+\n 2007-07-23  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/constraints.md (ks): New constraint."}, {"sha": "a7adf170cbc0f4c6bf3e15335e012922c5dd4b24", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=fe3465d17c0a85e7c0f491df6331793df84e4438", "patch": "@@ -10164,17 +10164,17 @@ int\n mips_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n \t\t\t enum reg_class to, enum reg_class from)\n {\n-  if (from == M16_REGS && GR_REG_CLASS_P (to))\n+  if (from == M16_REGS && reg_class_subset_p (to, GENERAL_REGS))\n     return 2;\n-  else if (from == M16_NA_REGS && GR_REG_CLASS_P (to))\n+  else if (from == M16_NA_REGS && reg_class_subset_p (to, GENERAL_REGS))\n     return 2;\n-  else if (GR_REG_CLASS_P (from))\n+  else if (reg_class_subset_p (from, GENERAL_REGS))\n     {\n       if (to == M16_REGS)\n \treturn 2;\n       else if (to == M16_NA_REGS)\n \treturn 2;\n-      else if (GR_REG_CLASS_P (to))\n+      else if (reg_class_subset_p (to, GENERAL_REGS))\n \t{\n \t  if (TARGET_MIPS16)\n \t    return 4;\n@@ -10190,14 +10190,14 @@ mips_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n \t  else\n \t    return 6;\n \t}\n-      else if (COP_REG_CLASS_P (to))\n+      else if (reg_class_subset_p (to, ALL_COP_REGS))\n \t{\n \t  return 5;\n \t}\n     }\n   else if (from == FP_REGS)\n     {\n-      if (GR_REG_CLASS_P (to))\n+      if (reg_class_subset_p (to, GENERAL_REGS))\n \treturn 4;\n       else if (to == FP_REGS)\n \treturn 2;\n@@ -10206,17 +10206,17 @@ mips_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n     }\n   else if (reg_class_subset_p (from, ACC_REGS))\n     {\n-      if (GR_REG_CLASS_P (to))\n+      if (reg_class_subset_p (to, GENERAL_REGS))\n \t{\n \t  if (TARGET_MIPS16)\n \t    return 12;\n \t  else\n \t    return 6;\n \t}\n     }\n-  else if (from == ST_REGS && GR_REG_CLASS_P (to))\n+  else if (from == ST_REGS && reg_class_subset_p (to, GENERAL_REGS))\n     return 4;\n-  else if (COP_REG_CLASS_P (from))\n+  else if (reg_class_subset_p (from, ALL_COP_REGS))\n     {\n       return 5;\n     }"}, {"sha": "dbc947d4b6b573c378a60c08af16dadc8225268b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3465d17c0a85e7c0f491df6331793df84e4438/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=fe3465d17c0a85e7c0f491df6331793df84e4438", "patch": "@@ -1688,17 +1688,6 @@ extern const enum reg_class mips_regno_to_class[];\n \n #define SMALL_REGISTER_CLASSES (TARGET_MIPS16)\n \n-/* This macro is used later on in the file.  */\n-#define GR_REG_CLASS_P(CLASS)\t\t\t\t\t\t\\\n-  ((CLASS) == GR_REGS || (CLASS) == M16_REGS || (CLASS) == T_REG\t\\\n-   || (CLASS) == M16_T_REGS || (CLASS) == M16_NA_REGS\t\t\t\\\n-   || (CLASS) == V1_REG\t\t\t\t\t\t\t\\\n-   || (CLASS) == PIC_FN_ADDR_REG || (CLASS) == LEA_REGS)\n-\n-/* This macro is also used later on in the file.  */\n-#define COP_REG_CLASS_P(CLASS)\t\t\t\t\t\t\\\n-  ((CLASS)  == COP0_REGS || (CLASS) == COP2_REGS || (CLASS) == COP3_REGS)\n-\n /* REG_ALLOC_ORDER is to order in which to allocate registers.  This\n    is the default value (allocate the registers in numeric order).  We\n    define it just so that we can override it for the mips16 target in\n@@ -1768,24 +1757,6 @@ extern const enum reg_class mips_regno_to_class[];\n #define PREFERRED_RELOAD_CLASS(X,CLASS)\t\t\t\t\t\\\n   mips_preferred_reload_class (X, CLASS)\n \n-/* Certain machines have the property that some registers cannot be\n-   copied to some other registers without using memory.  Define this\n-   macro on those machines to be a C expression that is nonzero if\n-   objects of mode MODE in registers of CLASS1 can only be copied to\n-   registers of class CLASS2 by storing a register of CLASS1 into\n-   memory and loading that memory location into a register of CLASS2.\n-\n-   Do not define this macro if its value would always be zero.  */\n-#if 0\n-#define SECONDARY_MEMORY_NEEDED(CLASS1, CLASS2, MODE)\t\t\t\\\n-  ((!TARGET_DEBUG_H_MODE\t\t\t\t\t\t\\\n-    && GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\\\n-    && ((CLASS1 == FP_REGS && GR_REG_CLASS_P (CLASS2))\t\t\t\\\n-\t|| (GR_REG_CLASS_P (CLASS1) && CLASS2 == FP_REGS)))\t\t\\\n-   || (TARGET_FLOAT64 && !TARGET_64BIT && (MODE) == DFmode\t\t\\\n-       && ((GR_REG_CLASS_P (CLASS1) && CLASS2 == FP_REGS)\t\t\\\n-\t   || (GR_REG_CLASS_P (CLASS2) && CLASS1 == FP_REGS))))\n-#endif\n /* The HI and LO registers can only be reloaded via the general\n    registers.  Condition code registers can only be loaded to the\n    general registers, and from the floating point registers.  */"}]}