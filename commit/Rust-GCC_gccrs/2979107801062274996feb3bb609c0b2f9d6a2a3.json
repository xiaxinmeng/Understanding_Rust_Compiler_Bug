{"sha": "2979107801062274996feb3bb609c0b2f9d6a2a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3OTEwNzgwMTA2MjI3NDk5NmZlYjNiYjYwOWMwYjJmOWQ2YTJhMw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-13T23:09:30Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-13T23:09:30Z"}, "message": "demangle-expected: Add two tests for anonymous namespaces.\n\n\t* testsuite/demangle-expected: Add two tests for anonymous\n\tnamespaces.\n\t* cplus-dem.c (gnu_special): Handle anonymous namespaces.\n\nFrom-SVN: r36398", "tree": {"sha": "86b4407658b5168aba27a07662f1ac9c9230e16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b4407658b5168aba27a07662f1ac9c9230e16f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2979107801062274996feb3bb609c0b2f9d6a2a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2979107801062274996feb3bb609c0b2f9d6a2a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2979107801062274996feb3bb609c0b2f9d6a2a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2979107801062274996feb3bb609c0b2f9d6a2a3/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a16ff93622eedf5d6064c52aa813de2154bec09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a16ff93622eedf5d6064c52aa813de2154bec09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a16ff93622eedf5d6064c52aa813de2154bec09"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "bb91224f4afc88fad4ef5637807aa31dc810825a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=2979107801062274996feb3bb609c0b2f9d6a2a3", "patch": "@@ -1,3 +1,9 @@\n+2000-09-14  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* testsuite/demangle-expected: Add two tests for anonymous\n+\tnamespaces.\n+\t* cplus-dem.c (gnu_special): Handle anonymous namespaces.\n+\n 2000-09-10  Mark Mitchell  <mark@codesourcery.com>\n \n \t* splay-tree.c (splay_tree_predecessor): New function.\n@@ -7,7 +13,6 @@\n \n \t* testsuite/demangle-expected: Add four tests for type_info\n \tmangling.\n-\n \t* cplus-dem.c (gnu_special): Use do_type, not demangle_fund_type,\n \tfor a non-template non-qualified type_info function or node.\n "}, {"sha": "3fe70b4030dbcbcc0cd61589a7aee7895ebbce38", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=2979107801062274996feb3bb609c0b2f9d6a2a3", "patch": "@@ -2811,6 +2811,25 @@ gnu_special (work, mangled, declp)\n \t      success = 0;\n \t      break;\n \t    }\n+\n+\t  if (n > 10 && strncmp (*mangled, \"_GLOBAL_\", 8) == 0\n+\t      && (*mangled)[9] == 'N'\n+\t      && (*mangled)[8] == (*mangled)[10]\n+\t      && strchr (cplus_markers, (*mangled)[8]))\n+\t    {\n+\t      /* A member of the anonymous namespace.  There's information\n+\t\t about what identifier or filename it was keyed to, but\n+\t\t it's just there to make the mangled name unique; we just\n+\t\t step over it.  */\n+\t      string_append (declp, \"{anonymous}\");\n+\t      (*mangled) += n;\n+\n+\t      /* Now p points to the marker before the N, so we need to\n+\t\t update it to the first marker after what we consumed.  */\n+\t      p = strpbrk (*mangled, cplus_markers);\n+\t      break;\n+\t    }\n+\n \t  string_appendn (declp, *mangled, n);\n \t  (*mangled) += n;\n \t}"}, {"sha": "a5d72fab0fe6b9a01f896f35d3c21f010cbc68e3", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2979107801062274996feb3bb609c0b2f9d6a2a3/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=2979107801062274996feb3bb609c0b2f9d6a2a3", "patch": "@@ -2558,3 +2558,11 @@ sockaddr * type_info node\n --format=gnu\n __tiPQ25libcwt16option_event_tct1Z12burst_app_ct\n libcw::option_event_tct<burst_app_ct> * type_info node\n+#\n+--format=gnu\n+_27_GLOBAL_.N.__12burst_app_ct.app_instance\n+{anonymous}::app_instance\n+#\n+--format=gnu\n+_26_GLOBAL_\\$N\\$_tmp_n.iilg4Gya\\$app_instance\n+{anonymous}::app_instance"}]}