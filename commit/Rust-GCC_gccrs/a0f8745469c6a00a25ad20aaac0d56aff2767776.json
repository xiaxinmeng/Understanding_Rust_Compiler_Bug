{"sha": "a0f8745469c6a00a25ad20aaac0d56aff2767776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmODc0NTQ2OWM2YTAwYTI1YWQyMGFhYWMwZDU2YWZmMjc2Nzc3Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-26T07:15:41Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-26T07:15:41Z"}, "message": "re PR driver/31107 (--target-help doesn't say which options are compiler, assembler or linker options)\n\ngcc/\n\tPR driver/31107\n\t* doc/invoke.texi (%:print-asm-header): Document.\n\t* gcc.c (asm_options): Use %:print-asm-header() for --target-help\n\tand -ftarget-help.\n\t(static_spec_functions): Add print-asm-header.\n\t(main): Print a banner before the --target-help linker options.\n\t(print_asm_header_spec_function): New function.\n\nFrom-SVN: r124175", "tree": {"sha": "010c4663638f6a5bafb1150041a9a53385dc84a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/010c4663638f6a5bafb1150041a9a53385dc84a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0f8745469c6a00a25ad20aaac0d56aff2767776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f8745469c6a00a25ad20aaac0d56aff2767776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f8745469c6a00a25ad20aaac0d56aff2767776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f8745469c6a00a25ad20aaac0d56aff2767776/comments", "author": null, "committer": null, "parents": [{"sha": "289c40ed97f6048a9e17d592ba4eb165488cfb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289c40ed97f6048a9e17d592ba4eb165488cfb1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289c40ed97f6048a9e17d592ba4eb165488cfb1d"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "5dec3751ec024f739436e7b2b2a84245a4b5b364", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0f8745469c6a00a25ad20aaac0d56aff2767776", "patch": "@@ -1,3 +1,13 @@\n+2007-04-26  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tPR driver/31107\n+\t* doc/invoke.texi (%:print-asm-header): Document.\n+\t* gcc.c (asm_options): Use %:print-asm-header() for --target-help\n+\tand -ftarget-help.\n+\t(static_spec_functions): Add print-asm-header.\n+\t(main): Print a banner before the --target-help linker options.\n+\t(print_asm_header_spec_function): New function.\n+\n 2007-04-25  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/31403"}, {"sha": "cc5feb9c8fbbd4efa989649005e840a8d874a35b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a0f8745469c6a00a25ad20aaac0d56aff2767776", "patch": "@@ -7663,6 +7663,19 @@ is a small example of its usage:\n %@{fgnu-runtime:%:replace-outfile(-lobjc -lobjc-gnu)@}\n @end smallexample\n \n+@item @code{print-asm-header}\n+The @code{print-asm-header} function takes no arguments and simply\n+prints a banner like:\n+\n+@smallexample\n+Assember options\n+================\n+\n+Use \"-Wa,OPTION\" to pass \"OPTION\" to the assembler.\n+@end smallexample\n+\n+It is used to separate compiler options from assembler options\n+in the @option{--target-help} output.\n @end table\n \n @item %@{@code{S}@}"}, {"sha": "10468026939eb995fbd969cd022d60d62269ed65", "filename": "gcc/gcc.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f8745469c6a00a25ad20aaac0d56aff2767776/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a0f8745469c6a00a25ad20aaac0d56aff2767776", "patch": "@@ -361,6 +361,7 @@ static const char *if_exists_else_spec_function (int, const char **);\n static const char *replace_outfile_spec_function (int, const char **);\n static const char *version_compare_spec_function (int, const char **);\n static const char *include_spec_function (int, const char **);\n+static const char *print_asm_header_spec_function (int, const char **);\n \f\n /* The Specs Language\n \n@@ -821,7 +822,8 @@ static const char *cc1_options =\n  %{coverage:-fprofile-arcs -ftest-coverage}\";\n \n static const char *asm_options =\n-\"%a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\";\n+\"%{ftarget-help:%:print-asm-header()} \\\n+%a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\";\n \n static const char *invoke_as =\n #ifdef AS_NEEDS_DASH_FOR_PIPED_INPUT\n@@ -1617,6 +1619,7 @@ static const struct spec_function static_spec_functions[] =\n   { \"replace-outfile\",\t\treplace_outfile_spec_function },\n   { \"version-compare\",\t\tversion_compare_spec_function },\n   { \"include\",\t\t\tinclude_spec_function },\n+  { \"print-asm-header\",\t\tprint_asm_header_spec_function },\n #ifdef EXTRA_SPEC_FUNCTIONS\n   EXTRA_SPEC_FUNCTIONS\n #endif\n@@ -6708,6 +6711,13 @@ main (int argc, char **argv)\n       putenv_from_prefixes (&exec_prefixes, \"COMPILER_PATH\", false);\n       putenv_from_prefixes (&startfile_prefixes, LIBRARY_PATH_ENV, true);\n \n+      if (print_subprocess_help == 1)\n+\t{\n+\t  printf (_(\"\\nLinker options\\n==============\\n\\n\"));\n+\t  printf (_(\"Use \\\"-Wl,OPTION\\\" to pass \\\"OPTION\\\"\"\n+\t\t    \" to the linker.\\n\\n\"));\n+\t  fflush (stdout);\n+\t}\n       value = do_spec (link_command_spec);\n       if (value < 0)\n \terror_count = 1;\n@@ -7883,3 +7893,16 @@ include_spec_function (int argc, const char **argv)\n \n   return NULL;\n }\n+\n+/* %:print-asm-header spec function.  Print a banner to say that the\n+   following output is from the assembler.  */\n+\n+static const char *\n+print_asm_header_spec_function (int arg ATTRIBUTE_UNUSED,\n+\t\t\t\tconst char **argv ATTRIBUTE_UNUSED)\n+{\n+  printf (_(\"Assember options\\n================\\n\\n\"));\n+  printf (_(\"Use \\\"-Wa,OPTION\\\" to pass \\\"OPTION\\\" to the assembler.\\n\\n\"));\n+  fflush (stdout);\n+  return NULL;\n+}"}]}