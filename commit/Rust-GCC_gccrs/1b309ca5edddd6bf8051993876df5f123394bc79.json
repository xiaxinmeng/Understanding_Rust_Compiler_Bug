{"sha": "1b309ca5edddd6bf8051993876df5f123394bc79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIzMDljYTVlZGRkZDZiZjgwNTE5OTM4NzZkZjVmMTIzMzk0YmM3OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-03T12:42:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-03T12:42:02Z"}, "message": "Support N values in libgcov for single value counter type.\n\n2019-07-03  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/tree-prof/val-prof-2.c: Update scanned pattern\n\tas we do now better.\n2019-07-03  Martin Liska  <mliska@suse.cz>\n\n\t* libgcov-merge.c (merge_single_value_set): Support N values.\n\t* libgcov-profiler.c (__gcov_one_value_profiler_body): Likewise.\n\nFrom-SVN: r273004", "tree": {"sha": "403bccc3950ad5d8c2f3b4fd08e0d79ed37327c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403bccc3950ad5d8c2f3b4fd08e0d79ed37327c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b309ca5edddd6bf8051993876df5f123394bc79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b309ca5edddd6bf8051993876df5f123394bc79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b309ca5edddd6bf8051993876df5f123394bc79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b309ca5edddd6bf8051993876df5f123394bc79/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e157be919b83177d57666234cd19f6b042140ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e157be919b83177d57666234cd19f6b042140ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e157be919b83177d57666234cd19f6b042140ac1"}], "stats": {"total": 105, "additions": 70, "deletions": 35}, "files": [{"sha": "0214647af9746a59473b278cf5f95f61b3e2650a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b309ca5edddd6bf8051993876df5f123394bc79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b309ca5edddd6bf8051993876df5f123394bc79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b309ca5edddd6bf8051993876df5f123394bc79", "patch": "@@ -1,3 +1,8 @@\n+2019-07-03  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-prof/val-prof-2.c: Update scanned pattern\n+\tas we do now better.\n+\n 2019-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/debug1.ads: New test."}, {"sha": "b3bbadfeb40a27cae0e2f1098ce8838d0dd48006", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-2.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b309ca5edddd6bf8051993876df5f123394bc79/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b309ca5edddd6bf8051993876df5f123394bc79/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c?ref=1b309ca5edddd6bf8051993876df5f123394bc79", "patch": "@@ -25,8 +25,5 @@ main ()\n   return 0;\n }\n /* autofdo does not do value profiling so far */\n-/* { dg-final-use-not-autofdo { scan-ipa-dump \"Transformation done: mod power of 2\" \"profile\" } } */\n-/* This is part of code checking that n is power of 2, so we are sure that the transformation\n-   didn't get optimized out.  */\n-/* { dg-final-use-not-autofdo { scan-tree-dump \"n_\\[0-9\\]* \\\\+ (4294967295|0x0*ffffffff)\" \"optimized\"} } */\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Transformation done: div/mod by constant 256\" \"profile\" } } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */"}, {"sha": "90183dcb393bf124ca5d8202179992276c4160df", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=1b309ca5edddd6bf8051993876df5f123394bc79", "patch": "@@ -1,3 +1,8 @@\n+2019-07-03  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-merge.c (merge_single_value_set): Support N values.\n+\t* libgcov-profiler.c (__gcov_one_value_profiler_body): Likewise.\n+\n 2019-06-27  Ilia Diachkov  <ilia.diachkov@optimitech.com>\n \n \t* Makefile.in (USE_TM_CLONE_REGISTRY): New."}, {"sha": "84367005663da1968470df2aa443bb47708cc3a8", "filename": "libgcc/libgcov-merge.c", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2Flibgcov-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2Flibgcov-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-merge.c?ref=1b309ca5edddd6bf8051993876df5f123394bc79", "patch": "@@ -89,49 +89,53 @@ __gcov_merge_time_profile (gcov_type *counters, unsigned n_counters)\n static void\n merge_single_value_set (gcov_type *counters)\n {\n-  unsigned j;\n-  gcov_type value, counter;\n-\n   /* First value is number of total executions of the profiler.  */\n   gcov_type all = gcov_get_counter_ignore_scaling (-1);\n   counters[0] += all;\n   ++counters;\n \n+  /* Read all part values.  */\n+  gcov_type read_counters[2 * GCOV_DISK_SINGLE_VALUES];\n+\n   for (unsigned i = 0; i < GCOV_DISK_SINGLE_VALUES; i++)\n     {\n-      value = gcov_get_counter_target ();\n-      counter = gcov_get_counter_ignore_scaling (-1);\n+      read_counters[2 * i] = gcov_get_counter_target ();\n+      read_counters[2 * i + 1] = gcov_get_counter_ignore_scaling (-1);\n+    }\n \n-      if (counter == -1)\n-\t{\n-\t  counters[1] = -1;\n-\t  /* We can't return as we need to read all counters.  */\n-\t  continue;\n-\t}\n-      else if (counter == 0 || counters[1] == -1)\n-\t{\n-\t  /* We can't return as we need to read all counters.  */\n-\t  continue;\n-\t}\n+  if (read_counters[1] == -1)\n+    {\n+      counters[1] = -1;\n+      return;\n+    }\n+\n+  for (unsigned i = 0; i < GCOV_DISK_SINGLE_VALUES; i++)\n+    {\n+      if (read_counters[2 * i + 1] == 0)\n+\treturn;\n \n+      unsigned j;\n       for (j = 0; j < GCOV_DISK_SINGLE_VALUES; j++)\n \t{\n-\t  if (counters[2 * j] == value)\n+\t  if (counters[2 * j] == read_counters[2 * i])\n \t    {\n-\t      counters[2 * j + 1] += counter;\n+\t      counters[2 * j + 1] += read_counters[2 * i + 1];\n \t      break;\n \t    }\n \t  else if (counters[2 * j + 1] == 0)\n \t    {\n-\t      counters[2 * j] = value;\n-\t      counters[2 * j + 1] = counter;\n+\t      counters[2 * j] += read_counters[2 * i];\n+\t      counters[2 * j + 1] += read_counters[2 * i + 1];\n \t      break;\n \t    }\n \t}\n \n-      /* We haven't found a free slot for the value, mark overflow.  */\n+      /* We haven't found a slot, bail out.  */\n       if (j == GCOV_DISK_SINGLE_VALUES)\n-\tcounters[1] = -1;\n+\t{\n+\t  counters[1] = -1;\n+\t  return;\n+\t}\n     }\n }\n "}, {"sha": "04d6f9c0e409c99f68646503e1c6e7cc33f30c0f", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b309ca5edddd6bf8051993876df5f123394bc79/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=1b309ca5edddd6bf8051993876df5f123394bc79", "patch": "@@ -118,20 +118,44 @@ static inline void\n __gcov_one_value_profiler_body (gcov_type *counters, gcov_type value,\n \t\t\t\tint use_atomic)\n {\n-  if (value == counters[1])\n-    counters[2]++;\n-  else if (counters[2] == 0)\n+  if (use_atomic)\n+    __atomic_fetch_add (&counters[0], 1, __ATOMIC_RELAXED);\n+  else\n+    counters[0]++;\n+\n+  ++counters;\n+\n+  /* We have GCOV_DISK_SINGLE_VALUES as we can keep multiple values\n+     next to each other.  */\n+  unsigned sindex = 0;\n+\n+  for (unsigned i = 0; i < GCOV_DISK_SINGLE_VALUES; i++)\n     {\n-      counters[2] = 1;\n-      counters[1] = value;\n+      if (value == counters[2 * i])\n+\t{\n+\t  if (use_atomic)\n+\t    __atomic_fetch_add (&counters[2 * i + 1], 1, __ATOMIC_RELAXED);\n+\t  else\n+\t    counters[2 * i + 1]++;\n+\t  return;\n+\t}\n+      else if (counters[2 * i + 1] == 0)\n+\t{\n+\t  /* We found an empty slot.  */\n+\t  counters[2 * i] = value;\n+\t  counters[2 * i + 1] = 1;\n+\t  return;\n+\t}\n+\n+      if (counters[2 * i + 1] < counters[2 * sindex + 1])\n+\tsindex = i;\n     }\n-  else\n-    counters[2]--;\n \n+  /* We haven't found an empty slot, then decrement the smallest.  */\n   if (use_atomic)\n-    __atomic_fetch_add (&counters[0], 1, __ATOMIC_RELAXED);\n+    __atomic_fetch_sub (&counters[2 * sindex + 1], 1, __ATOMIC_RELAXED);\n   else\n-    counters[0]++;\n+    counters[2 * sindex + 1]--;\n }\n \n #ifdef L_gcov_one_value_profiler_v2"}]}