{"sha": "a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgzOTNkNWRjMmQyYzRjNzY1OGFhNTNiNWI2Nzk5MjBiMDc3NDFhMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-19T03:44:58Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-19T03:44:58Z"}, "message": "rtlanal.c (insn_dependant_p, [...]): New.\n\n        * rtlanal.c (insn_dependant_p, insn_dependant_p_1): New.\n        * rtl.h (insn_dependant_p): Declare it.\n        * loop.c (strength_reduce): Use it.\n\nFrom-SVN: r34010", "tree": {"sha": "d5333410ff7875c1b503f1494dbce8488dfa6e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5333410ff7875c1b503f1494dbce8488dfa6e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/comments", "author": null, "committer": null, "parents": [{"sha": "14806ff142e7207cefc4c45196981df5a1d4fac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14806ff142e7207cefc4c45196981df5a1d4fac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14806ff142e7207cefc4c45196981df5a1d4fac3"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "e623248b43a315af0b71ab1395e47d0502bb2457", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "patch": "@@ -1,3 +1,9 @@\n+2000-05-18  Richard Henderson  <rth@cygnus.com>\n+\n+\t* rtlanal.c (insn_dependant_p, insn_dependant_p_1): New.\n+\t* rtl.h (insn_dependant_p): Declare it.\n+\t* loop.c (strength_reduce): Use it.\n+\n 2000-05-18  Alexandre Oliva  <aoliva@cygnus.com>\n \n \t* config/mn10300/mn10300.c (expand_prologue, expand_epilogue):"}, {"sha": "70c307ab82cbbbd74596c30ae9a30b78c64cf904", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "patch": "@@ -4119,10 +4119,9 @@ strength_reduce (loop, insn_count, flags)\n \n \t\t  for (next = NEXT_INSN (dominator); ; next = NEXT_INSN (next))\n \t\t    {\n-\t\t      if ((INSN_P (next)\n-\t\t\t   && (reg_mentioned_p (giv, PATTERN (next))\n-\t\t\t       || reg_set_p (bl2->biv->src_reg, next)))\n-\t\t\t  || GET_CODE (next) == JUMP_INSN)\n+\t\t      if (GET_CODE (next) == JUMP_INSN\n+\t\t\t  || (INSN_P (next)\n+\t\t\t      && insn_dependant_p (giv_insn, next)))\n \t\t\tbreak;\n #ifdef HAVE_cc0\n \t\t      if (! INSN_P (next)"}, {"sha": "4ab7407f335d013c9edad762c44358132979ee82", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "patch": "@@ -1212,6 +1212,7 @@ extern int modified_between_p\t\tPARAMS ((rtx, rtx, rtx));\n extern int no_labels_between_p\t\tPARAMS ((rtx, rtx));\n extern int no_jumps_between_p\t\tPARAMS ((rtx, rtx));\n extern int modified_in_p\t\tPARAMS ((rtx, rtx));\n+extern int insn_dependant_p\t\tPARAMS ((rtx, rtx));\n extern int reg_set_p\t\t\tPARAMS ((rtx, rtx));\n extern rtx single_set\t\t\tPARAMS ((rtx));\n extern int multiple_sets\t\tPARAMS ((rtx));"}, {"sha": "e9a98162952c339019a47c895402a2f72ec822c6", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8393d5dc2d2c4c7658aa53b5b679920b07741a3/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=a8393d5dc2d2c4c7658aa53b5b679920b07741a3", "patch": "@@ -26,6 +26,7 @@ Boston, MA 02111-1307, USA.  */\n \n static int rtx_addr_can_trap_p\tPARAMS ((rtx));\n static void reg_set_p_1\t\tPARAMS ((rtx, rtx, void *));\n+static void insn_dependant_p_1\tPARAMS ((rtx, rtx, void *));\n static void reg_set_last_1\tPARAMS ((rtx, rtx, void *));\n \n \n@@ -687,6 +688,45 @@ modified_in_p (x, insn)\n \n   return 0;\n }\n+\n+/* Return true if anything in insn X is (anti,output,true) dependant on\n+   anything in insn Y.  */\n+\n+int\n+insn_dependant_p (x, y)\n+     rtx x, y;\n+{\n+  rtx tmp;\n+\n+  if (! INSN_P (x) || ! INSN_P (y))\n+    abort ();\n+\n+  tmp = PATTERN (y);\n+  note_stores (PATTERN (x), insn_dependant_p_1, &tmp);\n+  if (tmp == NULL_RTX)\n+    return 1;\n+\n+  tmp = PATTERN (x);\n+  note_stores (PATTERN (y), insn_dependant_p_1, &tmp);\n+  if (tmp == NULL_RTX)\n+    return 1;\n+\n+  return 0;\n+}\n+\n+/* A helper routine for insn_dependant_p called through note_stores.  */\n+\n+static void\n+insn_dependant_p_1 (x, pat, data)\n+     rtx x;\n+     rtx pat ATTRIBUTE_UNUSED;\n+     void *data;\n+{\n+  rtx * pinsn = (rtx *) data;\n+\n+  if (*pinsn && reg_mentioned_p (x, *pinsn))\n+    *pinsn = NULL_RTX;\n+}\n \f\n /* Given an INSN, return a SET expression if this insn has only a single SET.\n    It may also have CLOBBERs, USEs, or SET whose output"}]}