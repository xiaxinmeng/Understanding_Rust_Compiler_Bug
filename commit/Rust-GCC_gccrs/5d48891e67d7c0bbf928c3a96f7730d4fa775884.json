{"sha": "5d48891e67d7c0bbf928c3a96f7730d4fa775884", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ0ODg5MWU2N2Q3YzBiYmY5MjhjM2E5NmY3NzMwZDRmYTc3NTg4NA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2006-02-06T21:27:51Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2006-02-06T21:27:51Z"}, "message": "re PR target/25917 (gcc.c-torture/compile/20051228-1.c fails)\n\n\tPR target/25917\n\t* config/ia64/predicates.md (extr_len_operand): New predicate.\n\t* config/ia64/ia64.md (extv): Tighten constraints.\n\t(extzv): Ditto.\n\t(*tbit_and_2): Ditto.\n\t(*tbit_and_3): Ditto.\n\t(*tbit_or_2): Ditto.\n\t(*tbit_or_3): Ditto.\n\t(*bit_zero): Ditto.\n\t(*bit_one): Ditto.\n\nFrom-SVN: r110665", "tree": {"sha": "ed43c8424edeff5ed03e218f7b3e72c41eb2aff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed43c8424edeff5ed03e218f7b3e72c41eb2aff4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d48891e67d7c0bbf928c3a96f7730d4fa775884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d48891e67d7c0bbf928c3a96f7730d4fa775884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d48891e67d7c0bbf928c3a96f7730d4fa775884", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d48891e67d7c0bbf928c3a96f7730d4fa775884/comments", "author": null, "committer": null, "parents": [{"sha": "eaa90d25da32a3329c9e434f8117c9122de1fa80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa90d25da32a3329c9e434f8117c9122de1fa80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa90d25da32a3329c9e434f8117c9122de1fa80"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "ba34e22d5a1bb5c0a45421c069460b3a07c47ab3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d48891e67d7c0bbf928c3a96f7730d4fa775884", "patch": "@@ -1,3 +1,16 @@\n+2006-02-06  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/25917\n+\t* config/ia64/predicates.md (extr_len_operand): New predicate.\n+\t* config/ia64/ia64.md (extv): Tighten constraints.\n+\t(extzv): Ditto.\n+\t(*tbit_and_2): Ditto.\n+\t(*tbit_and_3): Ditto.\n+\t(*tbit_or_2): Ditto.\n+\t(*tbit_or_3): Ditto.\n+\t(*bit_zero): Ditto.\n+\t(*bit_one): Ditto.\n+\n 2006-02-06  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR target/23359"}, {"sha": "da7fe6d6674f0779c17c66c06c42f646adfc72fc", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=5d48891e67d7c0bbf928c3a96f7730d4fa775884", "patch": "@@ -1023,17 +1023,17 @@\n (define_insn \"extv\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(sign_extract:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\")\n-\t\t\t (match_operand:DI 3 \"const_int_operand\" \"n\")))]\n+\t\t\t (match_operand:DI 2 \"extr_len_operand\" \"n\")\n+\t\t\t (match_operand:DI 3 \"shift_count_operand\" \"M\")))]\n   \"\"\n   \"extr %0 = %1, %3, %2\"\n   [(set_attr \"itanium_class\" \"ishf\")])\n \n (define_insn \"extzv\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(zero_extract:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\")\n-\t\t\t (match_operand:DI 3 \"const_int_operand\" \"n\")))]\n+\t\t\t (match_operand:DI 2 \"extr_len_operand\" \"n\")\n+\t\t\t (match_operand:DI 3 \"shift_count_operand\" \"M\")))]\n   \"\"\n   \"extr.u %0 = %1, %3, %2\"\n   [(set_attr \"itanium_class\" \"ishf\")])\n@@ -1429,7 +1429,7 @@\n \t(and:BI (ne:BI (zero_extract:DI\n \t\t\t (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\"))\n+\t\t\t (match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t\t       (const_int 0))\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n@@ -1441,7 +1441,7 @@\n \t(and:BI (eq:BI (zero_extract:DI\n \t\t\t (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\"))\n+\t\t\t (match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t\t       (const_int 0))\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n@@ -1553,7 +1553,7 @@\n \t(ior:BI (ne:BI (zero_extract:DI\n \t\t\t (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\"))\n+\t\t\t (match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t\t       (const_int 0))\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n@@ -1565,7 +1565,7 @@\n \t(ior:BI (eq:BI (zero_extract:DI\n \t\t\t (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 2 \"const_int_operand\" \"n\"))\n+\t\t\t (match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t\t       (const_int 0))\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n@@ -5009,7 +5009,7 @@\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n \t(eq:BI (zero_extract:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t\t(const_int 1)\n-\t\t\t\t(match_operand:DI 2 \"immediate_operand\" \"n\"))\n+\t\t\t\t(match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t       (const_int 0)))]\n   \"\"\n   \"tbit.z %0, %I0 = %1, %2\"\n@@ -5019,7 +5019,7 @@\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n \t(ne:BI (zero_extract:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n \t\t\t\t(const_int 1)\n-\t\t\t\t(match_operand:DI 2 \"immediate_operand\" \"n\"))\n+\t\t\t\t(match_operand:DI 2 \"shift_count_operand\" \"M\"))\n \t       (const_int 0)))]\n   \"\"\n   \"tbit.nz %0, %I0 = %1, %2\""}, {"sha": "ec0f8c318314d43c3e3dd758cf6d0d1a8f05300c", "filename": "gcc/config/ia64/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2Fconfig%2Fia64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d48891e67d7c0bbf928c3a96f7730d4fa775884/gcc%2Fconfig%2Fia64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fpredicates.md?ref=5d48891e67d7c0bbf928c3a96f7730d4fa775884", "patch": "@@ -486,6 +486,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"CONST_OK_FOR_M (INTVAL (op))\")))\n \n+;; True if OP-1 is a 6 bit immediate operand, used in extr instruction.\n+(define_predicate \"extr_len_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"CONST_OK_FOR_M (INTVAL (op) - 1)\")))\n+\n ;; True if OP is a 5 bit immediate operand.\n (define_predicate \"shift_32bit_count_operand\"\n    (and (match_code \"const_int\")"}]}