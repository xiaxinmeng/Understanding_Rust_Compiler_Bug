{"sha": "d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4ZWJkZTEwZDM0Y2ZjMDI3YWZmNmYxZTFiYjZmN2E1MjgzNWQ2ZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-11-07T13:58:21Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-11-07T13:58:21Z"}, "message": "decl.c (build_ptrmemfunc_type): Allow error_mark_node.\n\ncp:\n\t* decl.c (build_ptrmemfunc_type): Allow error_mark_node.\ntestsuite:\n\t* g++.old-deja/g++.pt/crash60.C: New test.\n\nFrom-SVN: r37289", "tree": {"sha": "8454d98f3a77718378e6d41394bdf2e33e09f82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8454d98f3a77718378e6d41394bdf2e33e09f82a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/comments", "author": null, "committer": null, "parents": [{"sha": "665d66d647a24dd78c881d9473b06d861468f06f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665d66d647a24dd78c881d9473b06d861468f06f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/665d66d647a24dd78c881d9473b06d861468f06f"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "62edaf5401c1d409e9cad85a05b073d95e479aea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "patch": "@@ -1,3 +1,7 @@\n+2000-11-07  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl.c (build_ptrmemfunc_type): Allow error_mark_node.\n+\n 2000-11-05  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (c++.distdir): Remove."}, {"sha": "f4d170a9f3073c1d7444c7a499b9608df8ec45d1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "patch": "@@ -9215,6 +9215,9 @@ build_ptrmemfunc_type (type)\n   tree u;\n   tree unqualified_variant = NULL_TREE;\n \n+  if (type == error_mark_node)\n+    return type;\n+  \n   /* If a canonical type already exists for this type, use it.  We use\n      this method instead of type_hash_canon, because it only does a\n      simple equality check on the list of field members.  */"}, {"sha": "61bc1c18beb816cf6ab2125263664c091c5d6cc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "patch": "@@ -1,3 +1,7 @@\n+2000-11-07  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.pt/crash60.C: New test.\n+\n 2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.old-deja/g++.other/crash24.C: New test."}, {"sha": "3d7eb1ce3ba7b33ce48ee3651a0a5c215727aae2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash60.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C?ref=d48ebde10d34cfc027aff6f1e1bb6f7a52835d6d", "patch": "@@ -0,0 +1,18 @@\n+// Build don't link:\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 7 Nov 2000 <nathan@codesourcery.com>\n+\n+// We ICE'd rather than fail to instantiate.\n+\n+template< typename SID, class SDR >\n+void k( SID sid, SDR* p,\n+ void (SDR::*)\n+ ( typename SID::T ) );\n+\n+struct E { };\n+struct S { void f( int ); };\n+\n+void f()\n+{\n+  k( E(), (S*)0, &S::f );   // ERROR - no match\n+} "}]}