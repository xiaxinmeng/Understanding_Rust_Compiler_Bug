{"sha": "aa18f20e7406ee235e94d6360bf4b3e349088544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExOGYyMGU3NDA2ZWUyMzVlOTRkNjM2MGJmNGIzZTM0OTA4ODU0NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-06-12T10:22:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-06-12T10:22:22Z"}, "message": "loop.c: Include predict.h\n\n\t* loop.c: Include predict.h\n\t(strength_reduce): Drop branch prediction note in case\n\tnumber of iterations is known.\n\t* predict.def (PRED_LOOP_ITERATIONS): new.\n\t* Makefile.in (loop.o): Add dependancy on predict.h\n\nFrom-SVN: r43251", "tree": {"sha": "487d80a5d58a9011b3ff04980963adc35c2b444a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/487d80a5d58a9011b3ff04980963adc35c2b444a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa18f20e7406ee235e94d6360bf4b3e349088544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa18f20e7406ee235e94d6360bf4b3e349088544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa18f20e7406ee235e94d6360bf4b3e349088544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa18f20e7406ee235e94d6360bf4b3e349088544/comments", "author": null, "committer": null, "parents": [{"sha": "7bdcf888aaa78808dc2dd4e16e70458244a607be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bdcf888aaa78808dc2dd4e16e70458244a607be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bdcf888aaa78808dc2dd4e16e70458244a607be"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "6ed6e3f9283d48aa92c0cc02eeed9ee54b347c95", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=aa18f20e7406ee235e94d6360bf4b3e349088544", "patch": "@@ -1438,7 +1438,7 @@ profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n    insn-config.h output.h $(REGS_H) $(EXPR_H) function.h \\\n    gcov-io.h toplev.h $(GGC_H) hard-reg-set.h $(BASIC_BLOCK_H)\n loop.o : loop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(LOOP_H) insn-config.h \\\n-   $(REGS_H) hard-reg-set.h $(RECOG_H) $(EXPR_H) real.h \\\n+   $(REGS_H) hard-reg-set.h $(RECOG_H) $(EXPR_H) real.h $(PREDICT_H) \\\n    $(BASIC_BLOCK_H) function.h toplev.h varray.h except.h cselib.h $(TM_P_H)\n doloop.o : doloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(LOOP_H) \\\n    $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) toplev.h"}, {"sha": "fac9a840bc8deeddc361068fb6432a0068b3e06c", "filename": "gcc/loop.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=aa18f20e7406ee235e94d6360bf4b3e349088544", "patch": "@@ -52,6 +52,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cselib.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n+#include \"predict.h\"\n \n #define LOOP_REG_LIFETIME(LOOP, REGNO) \\\n ((REGNO_LAST_LUID (REGNO) - REGNO_FIRST_LUID (REGNO)))\n@@ -4498,6 +4499,18 @@ strength_reduce (loop, flags)\n     doloop_optimize (loop);\n #endif  /* HAVE_doloop_end  */\n \n+  /* In case number of iterations is known, drop branch prediction note\n+     in the branch.  Do that only in second loop pass, as loop unrolling\n+     may change the number of iterations performed.  */\n+  if ((flags & LOOP_BCT)\n+      && loop_info->n_iterations / loop_info->unroll_number > 1)\n+    {\n+      int n = loop_info->n_iterations / loop_info->unroll_number - 1;\n+      predict_insn (PREV_INSN (loop->end),\n+\t\t    PRED_LOOP_ITERATIONS,\n+\t\t    REG_BR_PROB_BASE - REG_BR_PROB_BASE / n);\n+    }\n+\n   if (loop_dump_stream)\n     fprintf (loop_dump_stream, \"\\n\");\n "}, {"sha": "01d87a4c3f0cc29e27c35ff84afb08d372e95ab3", "filename": "gcc/predict.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa18f20e7406ee235e94d6360bf4b3e349088544/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=aa18f20e7406ee235e94d6360bf4b3e349088544", "patch": "@@ -38,6 +38,7 @@ Boston, MA 02111-1307, USA.  */\n \n DEF_PREDICTOR (PRED_FIRST_MATCH, \"first match\", PROB_ALWAYS)\n DEF_PREDICTOR (PRED_UNCONDITIONAL, \"unconditional jump\", PROB_ALWAYS)\n+DEF_PREDICTOR (PRED_LOOP_ITERATIONS, \"loop iterations\", PROB_ALWAYS)\n DEF_PREDICTOR (PRED_BUILTIN_EXPECT, \"__builtin_expect\", PROB_VERY_LIKELY)\n DEF_PREDICTOR (PRED_NORETURN, \"noreturn call\", PROB_ALWAYS)\n DEF_PREDICTOR (PRED_LOOP_BRANCH, \"loop branch\", PROB_VERY_LIKELY)"}]}