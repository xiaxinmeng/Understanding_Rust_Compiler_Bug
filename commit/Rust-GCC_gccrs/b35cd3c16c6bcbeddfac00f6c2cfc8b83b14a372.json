{"sha": "b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM1Y2QzYzE2YzZiY2JlZGRmYWMwMGY2YzJjZmM4YjgzYjE0YTM3Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T10:21:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T10:21:39Z"}, "message": "(expand_assignment): Don't pre-evaluate RHS if a CALL_EXPR with a\nvariable-size return.\n\nFrom-SVN: r11804", "tree": {"sha": "82b49be23ab82c6c92a10003d393c5a297e7da13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82b49be23ab82c6c92a10003d393c5a297e7da13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372/comments", "author": null, "committer": null, "parents": [{"sha": "21b2a157ce0498394301452f8744bd782078825d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21b2a157ce0498394301452f8744bd782078825d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21b2a157ce0498394301452f8744bd782078825d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "512a083937f83e587deecd4216e49b33f0d5331b", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "patch": "@@ -2803,6 +2803,7 @@ expand_assignment (to, from, want_value, suggest_reg)\n      Handling this in the normal way is safe because no computation is done\n      before the call.  */\n   if (TREE_CODE (from) == CALL_EXPR && ! aggregate_value_p (from)\n+      && TREE_CODE (TYPE_SIZE (TREE_TYPE (from))) == INTEGER_CST\n       && ! (TREE_CODE (to) == VAR_DECL && GET_CODE (DECL_RTL (to)) == REG))\n     {\n       rtx value;"}]}