{"sha": "e9af03e0bcd93e9e077d744e7c250482a3b76893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhZjAzZTBiY2Q5M2U5ZTA3N2Q3NDRlN2MyNTA0ODJhM2I3Njg5Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-11-26T22:54:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-11-26T22:54:14Z"}, "message": "list_read.c (nml_parse_qualifier): Use ssize_t instead of int in dtp->u.p.value.\n\n        * io/list_read.c (nml_parse_qualifier): Use ssize_t instead of int\n        in dtp->u.p.value.\n\nFrom-SVN: r107545", "tree": {"sha": "a8925144ed1fab2ca70a087be9aa3350b1583de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8925144ed1fab2ca70a087be9aa3350b1583de4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9af03e0bcd93e9e077d744e7c250482a3b76893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9af03e0bcd93e9e077d744e7c250482a3b76893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9af03e0bcd93e9e077d744e7c250482a3b76893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9af03e0bcd93e9e077d744e7c250482a3b76893/comments", "author": null, "committer": null, "parents": [{"sha": "75ce3d489ce44d6eeb8e59d88d76eb6d4682bbd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ce3d489ce44d6eeb8e59d88d76eb6d4682bbd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ce3d489ce44d6eeb8e59d88d76eb6d4682bbd1"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "d0bae6e2c90b45257eebbe56263d0535a0dc6f36", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9af03e0bcd93e9e077d744e7c250482a3b76893/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9af03e0bcd93e9e077d744e7c250482a3b76893/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e9af03e0bcd93e9e077d744e7c250482a3b76893", "patch": "@@ -1,3 +1,8 @@\n+2005-11-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* io/list_read.c (nml_parse_qualifier): Use ssize_t instead of int\n+\tin dtp->u.p.value.\n+\n 2005-11-26  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libgfortran/24945"}, {"sha": "939c4a10683c3e278769487148c7cd61e725a751", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9af03e0bcd93e9e077d744e7c250482a3b76893/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9af03e0bcd93e9e077d744e7c250482a3b76893/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=e9af03e0bcd93e9e077d744e7c250482a3b76893", "patch": "@@ -1563,7 +1563,7 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t\t}\n \n \t      /* Now read the index.  */\n-\t      if (convert_integer (dtp, sizeof(int), neg))\n+\t      if (convert_integer (dtp, sizeof(ssize_t), neg))\n \t\t{\n \t\t  st_sprintf (parse_err_msg, \"Bad integer in index\");\n \t\t  goto err_ret;\n@@ -1575,19 +1575,19 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t  if (!null_flag)\n \t    {\n \t      if (indx == 0)\n-\t\tmemcpy (&ls[dim].start, dtp->u.p.value, sizeof(int));\n+\t\tmemcpy (&ls[dim].start, dtp->u.p.value, sizeof(ssize_t));\n \t      if (indx == 1)\n-\t\tmemcpy (&ls[dim].end, dtp->u.p.value, sizeof(int));\n+\t\tmemcpy (&ls[dim].end, dtp->u.p.value, sizeof(ssize_t));\n \t      if (indx == 2)\n-\t\tmemcpy (&ls[dim].step, dtp->u.p.value, sizeof(int));\n+\t\tmemcpy (&ls[dim].step, dtp->u.p.value, sizeof(ssize_t));\n \t    }\n \n \t  /* Singlet or doublet indices.  */\n \t  if (c==',' || c==')')\n \t    {\n \t      if (indx == 0)\n \t\t{\n-\t\t  memcpy (&ls[dim].start, dtp->u.p.value, sizeof(int));\n+\t\t  memcpy (&ls[dim].start, dtp->u.p.value, sizeof(ssize_t));\n \t\t  ls[dim].end = ls[dim].start;\n \t\t}\n \t      break;"}]}