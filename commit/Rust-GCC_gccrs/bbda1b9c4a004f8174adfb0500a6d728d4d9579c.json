{"sha": "bbda1b9c4a004f8174adfb0500a6d728d4d9579c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkYTFiOWM0YTAwNGY4MTc0YWRmYjA1MDBhNmQ3MjhkNGQ5NTc5Yw==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-08-31T07:04:09Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-08-31T07:04:09Z"}, "message": "(TARGET_DEFAULT,VALUE_REGNO,FUNCTION_VALUE_REGNO): Moved from unix target files (aix386.h...\n\n(TARGET_DEFAULT,VALUE_REGNO,FUNCTION_VALUE_REGNO): Moved from unix target\nfiles (aix386.h, i386gas.h, i386sun.h, i386v.h, i386v4.h, i386vgas.h,\nseq386.h).\n(TARGET_DEFAULT): Make TARGET_IEEE_FP default on.\n(VALUE_REGNO): Test for MODE_FLOAT instead of specific modes.\n(VALUE_REGNO,FUNCTION_VALUE_REGNO): MODE_FLOAT return reg depends on\nTARGET_FLOAT_RETURNS_IN_80387.\n\nFrom-SVN: r2000", "tree": {"sha": "ab2d1d6c496794e68e1cad92884b0168be9244bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab2d1d6c496794e68e1cad92884b0168be9244bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbda1b9c4a004f8174adfb0500a6d728d4d9579c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda1b9c4a004f8174adfb0500a6d728d4d9579c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbda1b9c4a004f8174adfb0500a6d728d4d9579c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda1b9c4a004f8174adfb0500a6d728d4d9579c/comments", "author": null, "committer": null, "parents": [{"sha": "582329cb7600bb4f409e59c62f2ad248d89d93c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582329cb7600bb4f409e59c62f2ad248d89d93c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582329cb7600bb4f409e59c62f2ad248d89d93c4"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "16d4a35cdb215c9087390da4f5a5db0f9c8906df", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda1b9c4a004f8174adfb0500a6d728d4d9579c/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda1b9c4a004f8174adfb0500a6d728d4d9579c/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=bbda1b9c4a004f8174adfb0500a6d728d4d9579c", "patch": "@@ -125,3 +125,21 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   (fputs (\".globl \", FILE), assemble_name (FILE, NAME), fputs (\"\\n\", FILE))\n+\n+/* By default, target has a 80387, uses IEEE compatible arithmetic,\n+   and returns float values in the 387, ie,\n+   (TARGET_80387 | TARGET_IEEE_FP | TARGET_FLOAT_RETURNS_IN_80387) */\n+\n+#define TARGET_DEFAULT 0301\n+\n+/* Floating-point return values come in the FP register.  */\n+\n+#define VALUE_REGNO(MODE) \\\n+  (GET_MODE_CLASS (MODE) == MODE_FLOAT\t\t\t\t\\\n+   && TARGET_FLOAT_RETURNS_IN_80387 ? FIRST_FLOAT_REG : 0)\n+\n+/* 1 if N is a possible register number for a function value. */\n+\n+#define FUNCTION_VALUE_REGNO_P(N) \\\n+  ((N) == 0 || ((N)== FIRST_FLOAT_REG && TARGET_FLOAT_RETURNS_IN_80387))\n+"}]}