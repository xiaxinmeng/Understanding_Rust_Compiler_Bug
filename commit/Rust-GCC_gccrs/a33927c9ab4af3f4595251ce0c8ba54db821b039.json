{"sha": "a33927c9ab4af3f4595251ce0c8ba54db821b039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMzOTI3YzlhYjRhZjNmNDU5NTI1MWNlMGM4YmE1NGRiODIxYjAzOQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2021-02-15T16:38:33Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2021-02-15T16:39:24Z"}, "message": "rtl-optimization: Fix uninitialized use of opaque mode variable ICE [PR98872]\n\nThe initialize_uninitialized_regs function emits (set (reg:) (CONST0_RTX))\nfor all uninitialized pseudo uses.  However, some modes (eg, opaque modes)\nmay not have a CONST0_RTX defined, leading to an ICE when we try and create\nthe initialization insn.  The fix is to skip emitting the initialization\nif there is no CONST0_RTX defined for the mode.\n\n2021-02-15  Peter Bergner  <bergner@linux.ibm.com>\n\ngcc/\n\tPR rtl-optimization/98872\n\t* init-regs.c (initialize_uninitialized_regs): Skip initialization\n\tif CONST0_RTX is NULL.\n\ngcc/testsuite/\n\tPR rtl-optimization/98872\n\t* gcc.target/powerpc/pr98872.c: New test.", "tree": {"sha": "5f79735742d5e3d77c1993dbbce39b08027367e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f79735742d5e3d77c1993dbbce39b08027367e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a33927c9ab4af3f4595251ce0c8ba54db821b039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a33927c9ab4af3f4595251ce0c8ba54db821b039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a33927c9ab4af3f4595251ce0c8ba54db821b039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a33927c9ab4af3f4595251ce0c8ba54db821b039/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc9a0a3d79d6abb08753a819c9ea21a25015e962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9a0a3d79d6abb08753a819c9ea21a25015e962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9a0a3d79d6abb08753a819c9ea21a25015e962"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "72e898f3e334654263ceb1c9f79030e4b83d35e6", "filename": "gcc/init-regs.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a33927c9ab4af3f4595251ce0c8ba54db821b039/gcc%2Finit-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a33927c9ab4af3f4595251ce0c8ba54db821b039/gcc%2Finit-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finit-regs.c?ref=a33927c9ab4af3f4595251ce0c8ba54db821b039", "patch": "@@ -105,7 +105,10 @@ initialize_uninitialized_regs (void)\n \n \t\t  start_sequence ();\n \t\t  emit_clobber (reg);\n-\t\t  emit_move_insn (reg, CONST0_RTX (GET_MODE (reg)));\n+\t\t  /* PR98872: Only emit an initialization if MODE has a\n+\t\t     CONST0_RTX defined.  */\n+\t\t  if (CONST0_RTX (GET_MODE (reg)))\n+\t\t    emit_move_insn (reg, CONST0_RTX (GET_MODE (reg)));\n \t\t  move_insn = get_insns ();\n \t\t  end_sequence ();\n \t\t  emit_insn_before (move_insn, insn);"}, {"sha": "f33ad9b48b6276b276b241e44a1687340460c61e", "filename": "gcc/testsuite/gcc.target/powerpc/pr98872.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a33927c9ab4af3f4595251ce0c8ba54db821b039/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr98872.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a33927c9ab4af3f4595251ce0c8ba54db821b039/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr98872.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr98872.c?ref=a33927c9ab4af3f4595251ce0c8ba54db821b039", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/98872 */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power10\" } */\n+\n+/* Verify we do not ICE on the following tests.  */\n+\n+void\n+foo (__vector_quad *dst)\n+{\n+  __vector_quad acc;\n+  *dst = acc;\n+}\n+\n+void\n+bar (__vector_pair *dst)\n+{\n+  __vector_pair pair;\n+  *dst = pair;\n+}"}]}