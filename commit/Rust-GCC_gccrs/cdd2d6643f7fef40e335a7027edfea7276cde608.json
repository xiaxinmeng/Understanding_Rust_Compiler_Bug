{"sha": "cdd2d6643f7fef40e335a7027edfea7276cde608", "node_id": "C_kwDOANBUbNoAKGNkZDJkNjY0M2Y3ZmVmNDBlMzM1YTcwMjdlZGZlYTcyNzZjZGU2MDg", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2023-04-04T02:47:44Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2023-04-04T05:11:54Z"}, "message": "rs6000: Fix vector parity support [PR108699]\n\nThe failures on the original failed case builtin-bitops-1.c\nand the associated test case pr108699.c here show that the\ncurrent support of parity vector mode is wrong on Power.\nThe hardware insns vprtyb[wdq] which operate on the least\nsignificant bit of each byte per element, they doesn't match\nwhat RTL opcode parity needs, but the current implementation\nexpands it with them wrongly.\n\nThis patch is to fix the handling with one more insn vpopcntb.\n\n\tPR target/108699\n\ngcc/ChangeLog:\n\n\t* config/rs6000/altivec.md (*p9v_parity<mode>2): Rename to ...\n\t(rs6000_vprtyb<mode>2): ... this.\n\t* config/rs6000/rs6000-builtins.def (VPRTYBD): Replace parityv2di2 with\n\trs6000_vprtybv2di2.\n\t(VPRTYBW): Replace parityv4si2 with rs6000_vprtybv4si2.\n\t(VPRTYBQ): Replace parityv1ti2 with rs6000_vprtybv1ti2.\n\t* config/rs6000/vector.md (parity<mode>2 with VEC_IP): Expand with\n\tpopcountv16qi2 and the corresponding rs6000_vprtyb<mode>2.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/powerpc/p9-vparity.c: Add scan-assembler-not for vpopcntb\n\tto distinguish parity byte from parity.\n\t* gcc.target/powerpc/pr108699.c: New test.", "tree": {"sha": "ae236e9936e15c6b0ace63f6bab9566849635066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae236e9936e15c6b0ace63f6bab9566849635066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdd2d6643f7fef40e335a7027edfea7276cde608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd2d6643f7fef40e335a7027edfea7276cde608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd2d6643f7fef40e335a7027edfea7276cde608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd2d6643f7fef40e335a7027edfea7276cde608/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dfbb28a9549c2503204b0338bf550f1bff9c681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dfbb28a9549c2503204b0338bf550f1bff9c681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dfbb28a9549c2503204b0338bf550f1bff9c681"}], "stats": {"total": 68, "additions": 61, "deletions": 7}, "files": [{"sha": "49b0c964f4da76120b35380ad8fbf77c61747125", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=cdd2d6643f7fef40e335a7027edfea7276cde608", "patch": "@@ -4195,9 +4195,11 @@\n   [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector parity\n-(define_insn \"*p9v_parity<mode>2\"\n-  [(set (match_operand:VParity 0 \"register_operand\" \"=v\")\n-        (parity:VParity (match_operand:VParity 1 \"register_operand\" \"v\")))]\n+(define_insn \"rs6000_vprtyb<mode>2\"\n+  [(set (match_operand:VEC_IP 0 \"register_operand\" \"=v\")\n+        (unspec:VEC_IP\n+          [(match_operand:VEC_IP 1 \"register_operand\" \"v\")]\n+          UNSPEC_PARITY))]\n   \"TARGET_P9_VECTOR\"\n   \"vprtyb<wd> %0,%1\"\n   [(set_attr \"type\" \"vecsimple\")])"}, {"sha": "03fb194b15108c5cfd7d1c1b4219f2fc34386ff5", "filename": "gcc/config/rs6000/rs6000-builtins.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def?ref=cdd2d6643f7fef40e335a7027edfea7276cde608", "patch": "@@ -2666,13 +2666,13 @@\n     VMSUMUDM altivec_vmsumudm {}\n \n   const vsll __builtin_altivec_vprtybd (vsll);\n-    VPRTYBD parityv2di2 {}\n+    VPRTYBD rs6000_vprtybv2di2 {}\n \n   const vsq __builtin_altivec_vprtybq (vsq);\n-    VPRTYBQ parityv1ti2 {}\n+    VPRTYBQ rs6000_vprtybv1ti2 {}\n \n   const vsi __builtin_altivec_vprtybw (vsi);\n-    VPRTYBW parityv4si2 {}\n+    VPRTYBW rs6000_vprtybv4si2 {}\n \n   const vsll __builtin_altivec_vrldmi (vsll, vsll, vsll);\n     VRLDMI altivec_vrldmi {}"}, {"sha": "1ae04c8e0a801bfe8ab7caeff9b465467e8ae62b", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=cdd2d6643f7fef40e335a7027edfea7276cde608", "patch": "@@ -1226,7 +1226,16 @@\n (define_expand \"parity<mode>2\"\n   [(set (match_operand:VEC_IP 0 \"register_operand\")\n \t(parity:VEC_IP (match_operand:VEC_IP 1 \"register_operand\")))]\n-  \"TARGET_P9_VECTOR\")\n+  \"TARGET_P9_VECTOR\"\n+{\n+  rtx op1 = gen_lowpart (V16QImode, operands[1]);\n+  rtx res = gen_reg_rtx (V16QImode);\n+  emit_insn (gen_popcountv16qi2 (res, op1));\n+  emit_insn (gen_rs6000_vprtyb<mode>2 (operands[0],\n+\t\t\t\t       gen_lowpart (<MODE>mode, res)));\n+\n+  DONE;\n+})\n \n \f\n ;; Same size conversions"}, {"sha": "8f6f1239f7a006af2b023edd4e83508077ff7d94", "filename": "gcc/testsuite/gcc.target/powerpc/p9-vparity.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c?ref=cdd2d6643f7fef40e335a7027edfea7276cde608", "patch": "@@ -105,3 +105,4 @@ parity_ti_4u (__uint128_t a)\n /* { dg-final { scan-assembler \"vprtybd\" } } */\n /* { dg-final { scan-assembler \"vprtybq\" } } */\n /* { dg-final { scan-assembler \"vprtybw\" } } */\n+/* { dg-final { scan-assembler-not \"vpopcntb\" } } */"}, {"sha": "f02bac130cc7883fa73c7c71d6870698e6ff4dad", "filename": "gcc/testsuite/gcc.target/powerpc/pr108699.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108699.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd2d6643f7fef40e335a7027edfea7276cde608/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108699.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108699.c?ref=cdd2d6643f7fef40e335a7027edfea7276cde608", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-run } */\n+/* { dg-options \"-O2 -ftree-vectorize -fno-vect-cost-model\" } */\n+\n+#define N 16\n+\n+unsigned long long vals[N];\n+unsigned int res[N];\n+unsigned int expects[N] = {0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+\n+unsigned long long inputs[N]\n+  = {0x0000000000000000ULL, 0x0000000000000001ULL, 0x8000000000000000ULL,\n+     0x0000000000000002ULL, 0x4000000000000000ULL, 0x0000000100000000ULL,\n+     0x0000000080000000ULL, 0xa5a5a5a5a5a5a5a5ULL, 0x5a5a5a5a5a5a5a5aULL,\n+     0xcafecafe00000000ULL, 0x0000cafecafe0000ULL, 0x00000000cafecafeULL,\n+     0x8070600000000000ULL, 0xffffffffffffffffULL};\n+\n+__attribute__ ((noipa)) void\n+init ()\n+{\n+  for (int i = 0; i < N; i++)\n+    vals[i] = inputs[i];\n+}\n+\n+__attribute__ ((noipa)) void\n+do_parity ()\n+{\n+  for (int i = 0; i < N; i++)\n+    res[i] = __builtin_parityll (vals[i]);\n+}\n+\n+int\n+main (void)\n+{\n+  init ();\n+  do_parity ();\n+  for (int i = 0; i < N; i++)\n+    if (res[i] != expects[i])\n+      __builtin_abort();\n+\n+  return 0;\n+}\n+"}]}