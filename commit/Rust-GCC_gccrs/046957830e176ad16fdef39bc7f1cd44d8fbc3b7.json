{"sha": "046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2OTU3ODMwZTE3NmFkMTZmZGVmMzliYzdmMWNkNDRkOGZiYzNiNw==", "commit": {"author": {"name": "Jim Meyering", "email": "meyering@gcc.gnu.org", "date": "2011-04-20T18:19:03Z"}, "committer": {"name": "Jim Meyering", "email": "meyering@gcc.gnu.org", "date": "2011-04-20T18:19:03Z"}, "message": "remove useless if-before-free tests\n\nChange \"if (E) free (E);\" to \"free (E);\" everywhere except in the\nlibgo/, intl/, zlib/ and classpath/ directories.\nAlso transform equivalent variants like\n\"if (E != NULL) free (E);\" and allow an extra cast on the\nargument to free.  Otherwise, the tested and freed \"E\"\nexpressions must be identical, modulo white space.\n\nFrom-SVN: r172785", "tree": {"sha": "e56a024bf4863c42aaa3f941f466a849bb9d3b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56a024bf4863c42aaa3f941f466a849bb9d3b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/comments", "author": null, "committer": null, "parents": [{"sha": "53eebfbf949c9cfe6a060a91a09242cb7204f6d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53eebfbf949c9cfe6a060a91a09242cb7204f6d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53eebfbf949c9cfe6a060a91a09242cb7204f6d8"}], "stats": {"total": 537, "additions": 267, "deletions": 270}, "files": [{"sha": "86a2b832cf1e12307806f462c5ec40010f64254e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,42 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\tRemove useless if-before-free tests.\n+\t* calls.c (expand_call, save_area): Likewise.\n+\t* cfgcleanup.c (try_forward_edges): Likewise.\n+\t* collect2.c (collect_execute): Likewise.\n+\t* config/i386/i386.c (ix86_valid_target_attribute_tree): Likewise.\n+\t* config/mcore/mcore.c (mcore_expand_prolog): Likewise.\n+\t* coverage.c (coverage_checksum_string): Likewise.\n+\t* cse.c (init_cse_reg_info, delete_trivially_dead_insns): Likewise.\n+\t* cselib.c (cselib_init): Likewise.\n+\t* df-core.c (rest_of_handle_df_finish, df_analyze): Likewise.\n+\t(df_set_clean_cfg): Likewise.\n+\t* function.c (free_after_compilation): Likewise.\n+\t* gcc.c (do_spec_1, main): Likewise.\n+\t* gcov.c (create_file_names): Likewise.\n+\t* gensupport.c (identify_predicable_attribute): Likewise.\n+\t* graphite-clast-to-gimple.c (save_clast_name_index): Likewise.\n+\t* graphite-sese-to-poly.c (free_data_refs_aux): Likewise.\n+\t* haifa-sched.c (haifa_finish_h_i_d): Likewise.\n+\t* ipa-prop.c (ipa_free_node_params_substructures): Likewise.\n+\t* ipa-pure-const.c (local_pure_const): Likewise.\n+\t* ipa-reference.c (propagate): Likewise.\n+\t* ira-costs.c (free_ira_costs): Likewise.\n+\t* ira.c (free_register_move_costs, build_insn_chain): Likewise.\n+\t* matrix-reorg.c (mat_free): Likewise.\n+\t* prefix.c (get_key_value): Likewise.\n+\t* profile.c (compute_value_histograms): Likewise.\n+\t* reload1.c (free_reg_equiv): Likewise.\n+\t* sched-deps.c (free_deps): Likewise.\n+\t* sel-sched-ir.c (fence_clear): Likewise.\n+\t* sese.c (set_rename, if_region_set_false_region): Likewise.\n+\t* tree-data-ref.c (free_rdg): Likewise.\n+\t* tree-eh.c (lower_try_finally): Likewise.\n+\t* tree-ssa-coalesce.c (delete_coalesce_list): Likewise.\n+\t* tree-ssa-live.c (delete_var_map): Likewise.\n+\t* tree-ssa-loop-ivopts.c (free_loop_data): Likewise.\n+\t* tree-ssa-pre.c (phi_trans_add): Likewise.\n+\n 2011-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/48611"}, {"sha": "c2758d1b0cc7a26768581933f9f3f20f8c4e7282", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,7 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* initialize.c (__gnat_initialize): Remove useless if-before-free.\n+\n 2011-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Make-lang.in (gnatbind): Replace $(ALL_CFLAGS) with"}, {"sha": "e2ad904e9b22a4a627a766f8316f84f04ad8b535", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -217,8 +217,7 @@ __gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n \n \t\t     FindClose (hDir);\n \n-\t\t     if (dir != NULL)\n-\t\t       free (dir);\n+\t\t     free (dir);\n \t\t   }\n \t       }\n \t     else"}, {"sha": "b0f27c510d433b0a0930f7943c8aeb50b5d179f8", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,8 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* c-format.c (init_dollar_format_checking): Remove useless\n+\tif-before-free.\n+\n 2011-04-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-objc.h (objc_get_interface_ivars): Removed.\n@@ -1105,7 +1110,7 @@\n \t* c-common.c: Include gt-c-family-c-common.h.\n \t* c-pragma.c: Include gt-c-family-c-pragma.h.\n \f\n-Copyright (C) 2010 Free Software Foundation, Inc.\n+Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "0c5115a9360a1d045cd51ed54d6d256471f96154", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1107,10 +1107,8 @@ init_dollar_format_checking (int first_arg_num, tree params)\n     }\n   if (dollar_arguments_alloc < dollar_arguments_count)\n     {\n-      if (dollar_arguments_used)\n-\tfree (dollar_arguments_used);\n-      if (dollar_arguments_pointer_p)\n-\tfree (dollar_arguments_pointer_p);\n+      free (dollar_arguments_used);\n+      free (dollar_arguments_pointer_p);\n       dollar_arguments_alloc = dollar_arguments_count;\n       dollar_arguments_used = XNEWVEC (char, dollar_arguments_alloc);\n       dollar_arguments_pointer_p = XNEWVEC (char, dollar_arguments_alloc);"}, {"sha": "bb95852bf84014a43916e6e0fca8e2322f0effc1", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -2555,8 +2555,7 @@ expand_call (tree exp, rtx target, int ignore)\n \t\t  highest_outgoing_arg_in_use = MAX (initial_highest_arg_in_use,\n \t\t\t\t\t\t     needed);\n #endif\n-\t\t  if (stack_usage_map_buf)\n-\t\t    free (stack_usage_map_buf);\n+\t\t  free (stack_usage_map_buf);\n \t\t  stack_usage_map_buf = XNEWVEC (char, highest_outgoing_arg_in_use);\n \t\t  stack_usage_map = stack_usage_map_buf;\n \n@@ -2661,8 +2660,7 @@ expand_call (tree exp, rtx target, int ignore)\n \t\t    = stack_arg_under_construction;\n \t\t  stack_arg_under_construction = 0;\n \t\t  /* Make a new map for the new argument list.  */\n-\t\t  if (stack_usage_map_buf)\n-\t\t    free (stack_usage_map_buf);\n+\t\t  free (stack_usage_map_buf);\n \t\t  stack_usage_map_buf = XCNEWVEC (char, highest_outgoing_arg_in_use);\n \t\t  stack_usage_map = stack_usage_map_buf;\n \t\t  highest_outgoing_arg_in_use = 0;\n@@ -3152,8 +3150,7 @@ expand_call (tree exp, rtx target, int ignore)\n \n       /* Free up storage we no longer need.  */\n       for (i = 0; i < num_actuals; ++i)\n-\tif (args[i].aligned_regs)\n-\t  free (args[i].aligned_regs);\n+\tfree (args[i].aligned_regs);\n \n       insns = get_insns ();\n       end_sequence ();\n@@ -3208,8 +3205,7 @@ expand_call (tree exp, rtx target, int ignore)\n \n   currently_expanding_call--;\n \n-  if (stack_usage_map_buf)\n-    free (stack_usage_map_buf);\n+  free (stack_usage_map_buf);\n \n   return target;\n }\n@@ -3966,8 +3962,7 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n       stack_usage_map = initial_stack_usage_map;\n     }\n \n-  if (stack_usage_map_buf)\n-    free (stack_usage_map_buf);\n+  free (stack_usage_map_buf);\n \n   return value;\n "}, {"sha": "179cd00ad0c8b741dcb5fba981b09144cd1876e5", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -646,8 +646,7 @@ try_forward_edges (int mode, basic_block b)\n       ei_next (&ei);\n     }\n \n-  if (threaded_edges)\n-    free (threaded_edges);\n+  free (threaded_edges);\n   return changed;\n }\n \f"}, {"sha": "0c554f0534670c58955296e816611cd67e7e7e49", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -2087,8 +2087,7 @@ collect_execute (const char *prog, char **argv, const char *outname,\n \tfatal (errmsg);\n     }\n \n-  if (response_arg)\n-    free (response_arg);\n+  free (response_arg);\n \n   return pex;\n }"}, {"sha": "80cb104b06e966e1d03f6e906f7ce85769cd25cd", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -4783,8 +4783,7 @@ ix86_valid_target_attribute_tree (tree args)\n \n       /* Free up memory allocated to hold the strings */\n       for (i = 0; i < IX86_FUNCTION_SPECIFIC_MAX; i++)\n-\tif (option_strings[i])\n-\t  free (option_strings[i]);\n+\tfree (option_strings[i]);\n     }\n \n   return t;"}, {"sha": "741452ec05fbb149b0807c255dd1e7dca1c5cc7b", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1980,8 +1980,7 @@ mcore_expand_prolog (void)\n       \n       gcc_assert (GET_CODE (x) == SYMBOL_REF);\n       \n-      if (mcore_current_function_name)\n-\tfree (mcore_current_function_name);\n+      free (mcore_current_function_name);\n       \n       mcore_current_function_name = xstrdup (XSTR (x, 0));\n       "}, {"sha": "58b7c69e893f4ccf7c9ccc0cb4e34be0add1e600", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -522,8 +522,7 @@ coverage_checksum_string (unsigned chksum, const char *string)\n     }\n \n   chksum = crc32_string (chksum, string);\n-  if (dup)\n-    free (dup);\n+  free (dup);\n \n   return chksum;\n }"}, {"sha": "e854651ecb6f264ef3069881925ee84e9ea2c7ef", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,7 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* tree.c (cxx_printable_name_internal): Remove useless if-before-free.\n+\n 2011-04-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/46304"}, {"sha": "23daa6c45e0383a38bdd31352f599620828af4aa", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1509,8 +1509,7 @@ cxx_printable_name_internal (tree decl, int v, bool translate)\n       gcc_assert (uid_ring[ring_counter] != DECL_UID (current_function_decl));\n     }\n \n-  if (print_ring[ring_counter])\n-    free (print_ring[ring_counter]);\n+  free (print_ring[ring_counter]);\n \n   print_ring[ring_counter] = xstrdup (lang_decl_name (decl, v, translate));\n   uid_ring[ring_counter] = DECL_UID (decl);"}, {"sha": "d83b38a60b80d097e8c22ecbaa3b91c6f7cb64a1", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -796,8 +796,7 @@ init_cse_reg_info (unsigned int nregs)\n \t}\n \n       /* Reallocate the table with NEW_SIZE entries.  */\n-      if (cse_reg_info_table)\n-\tfree (cse_reg_info_table);\n+      free (cse_reg_info_table);\n       cse_reg_info_table = XNEWVEC (struct cse_reg_info, new_size);\n       cse_reg_info_table_size = new_size;\n       cse_reg_info_table_first_uninitialized = 0;\n@@ -6975,8 +6974,7 @@ delete_trivially_dead_insns (rtx insns, int nreg)\n \t\tdf_insn_rescan (insn);\n \t      }\n \t  }\n-      if (replacements)\n-\tfree (replacements);\n+      free (replacements);\n     }\n \n   if (dump_file && ndead)"}, {"sha": "56e6d178576cfeeac9ea33ca8d1b7275c8e5c4f4", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -2462,8 +2462,7 @@ cselib_init (int record_what)\n   if (!reg_values || reg_values_size < cselib_nregs\n       || (reg_values_size > 10 && reg_values_size > cselib_nregs * 4))\n     {\n-      if (reg_values)\n-\tfree (reg_values);\n+      free (reg_values);\n       /* Some space for newly emit instructions so we don't end up\n \t reallocating in between passes.  */\n       reg_values_size = cselib_nregs + (63 + cselib_nregs) / 16;"}, {"sha": "9f3ea4295621a91658a6adf30180bf677c47f63d", "filename": "gcc/df-core.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -811,10 +811,8 @@ rest_of_handle_df_finish (void)\n       dflow->problem->free_fun ();\n     }\n \n-  if (df->postorder)\n-    free (df->postorder);\n-  if (df->postorder_inverted)\n-    free (df->postorder_inverted);\n+  free (df->postorder);\n+  free (df->postorder_inverted);\n   free (df->hard_regs_live_count);\n   free (df);\n   df = NULL;\n@@ -1183,10 +1181,8 @@ df_analyze (void)\n   bool everything;\n   int i;\n \n-  if (df->postorder)\n-    free (df->postorder);\n-  if (df->postorder_inverted)\n-    free (df->postorder_inverted);\n+  free (df->postorder);\n+  free (df->postorder_inverted);\n   df->postorder = XNEWVEC (int, last_basic_block);\n   df->postorder_inverted = XNEWVEC (int, last_basic_block);\n   df->n_blocks = post_order_compute (df->postorder, true, true);\n@@ -1725,8 +1721,7 @@ df_check_cfg_clean (void)\n static void\n df_set_clean_cfg (void)\n {\n-  if (saved_cfg)\n-    free (saved_cfg);\n+  free (saved_cfg);\n   saved_cfg = df_compute_cfg_image ();\n }\n "}, {"sha": "9e949b3fb0aa7e02864dc1d82f11534e8c9bee02", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,10 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* expr.c (free_expr0): Remove useless if-before-free.\n+\t* gfortranspec.c (lang_specific_pre_link): Likewise.\n+\t* interface.c (gfc_extend_expr): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_array_reduction): Likewise.\n+\n 2011-04-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48588"}, {"sha": "dae2149b1dec8b15312d87f210403e8371632be6", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -433,8 +433,7 @@ free_expr0 (gfc_expr *e)\n \t}\n \n       /* Free the representation.  */\n-      if (e->representation.string)\n-\tfree (e->representation.string);\n+      free (e->representation.string);\n \n       break;\n "}, {"sha": "4d939a05bf8683b874ce39a2624705d6a7a5a2d3", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -472,9 +472,8 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n int\n lang_specific_pre_link (void)\n {\n-  if (spec_file)\n-    free (spec_file);\n-  else if (library)\n+  free (spec_file);\n+  if (spec_file == NULL && library)\n     do_spec (\"%:include(libgfortran.spec)\");\n \n   return 0;"}, {"sha": "5e7a1dce196d22355edb1609e38c894fd8c47719", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -3141,8 +3141,7 @@ gfc_extend_expr (gfc_expr *e, bool *real_error)\n \t}\n \n       /* Don't use gfc_free_actual_arglist().  */\n-      if (actual->next != NULL)\n-\tfree (actual->next);\n+      free (actual->next);\n       free (actual);\n \n       return FAILURE;"}, {"sha": "625daebe8b293ed05ddb3855bbe3882c3ecfc267", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -714,8 +714,7 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n   free (symtree1);\n   free (symtree2);\n   free (symtree3);\n-  if (symtree4)\n-    free (symtree4);\n+  free (symtree4);\n   gfc_free_array_spec (outer_sym.as);\n }\n "}, {"sha": "d7d56ddfb5e2f5f8cdc9f3c32940bb32e88e8115", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -211,8 +211,7 @@ free_after_compilation (struct function *f)\n   prologue_insn_hash = NULL;\n   epilogue_insn_hash = NULL;\n \n-  if (crtl->emit.regno_pointer_align)\n-    free (crtl->emit.regno_pointer_align);\n+  free (crtl->emit.regno_pointer_align);\n \n   memset (crtl, 0, sizeof (struct rtl_data));\n   f->eh = NULL;"}, {"sha": "f9a2bb2105c94957a4f6e6ccb852ea9b129992ea", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -4806,8 +4806,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t    t->filename_length = temp_filename_length;\n \t\t  }\n \n-\t\tif (saved_suffix)\n-\t\t  free (saved_suffix);\n+\t\tfree (saved_suffix);\n \n \t\tobstack_grow (&obstack, t->filename, t->filename_length);\n \t\tdelete_this_arg = 1;\n@@ -6724,12 +6723,10 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t    {\n \t      if (compare_debug)\n \t\t{\n-\t\t  if (debug_check_temp_file[0])\n-\t\t    free (debug_check_temp_file[0]);\n+\t\t  free (debug_check_temp_file[0]);\n \t\t  debug_check_temp_file[0] = NULL;\n \n-\t\t  if (debug_check_temp_file[1])\n-\t\t    free (debug_check_temp_file[1]);\n+\t\t  free (debug_check_temp_file[1]);\n \t\t  debug_check_temp_file[1] = NULL;\n \t\t}\n \n@@ -6773,12 +6770,10 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \n \t      if (compare_debug)\n \t\t{\n-\t\t  if (debug_check_temp_file[0])\n-\t\t    free (debug_check_temp_file[0]);\n+\t\t  free (debug_check_temp_file[0]);\n \t\t  debug_check_temp_file[0] = NULL;\n \n-\t\t  if (debug_check_temp_file[1])\n-\t\t    free (debug_check_temp_file[1]);\n+\t\t  free (debug_check_temp_file[1]);\n \t\t  debug_check_temp_file[1] = NULL;\n \t\t}\n \t    }"}, {"sha": "bb2791324a3e5d35c889cf11199f2bfc92439d6a", "filename": "gcc/gcov.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -661,10 +661,8 @@ create_file_names (const char *file_name)\n   int base;\n \n   /* Free previous file names.  */\n-  if (bbg_file_name)\n-    free (bbg_file_name);\n-  if (da_file_name)\n-    free (da_file_name);\n+  free (bbg_file_name);\n+  free (da_file_name);\n   da_file_name = bbg_file_name = NULL;\n   bbg_file_time = 0;\n   bbg_stamp = 0;"}, {"sha": "682d2ac69590d0ff4c643a6abb20d598fd56163a", "filename": "gcc/gensupport.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -594,8 +594,7 @@ identify_predicable_attribute (void)\n   if (p_true == NULL || strchr (++p_true, ',') != NULL)\n     {\n       error_with_line (elem->lineno, \"attribute `predicable' is not a boolean\");\n-      if (p_false)\n-        free (p_false);\n+      free (p_false);\n       return;\n     }\n   p_true[-1] = '\\0';\n@@ -611,15 +610,13 @@ identify_predicable_attribute (void)\n \n     case CONST:\n       error_with_line (elem->lineno, \"attribute `predicable' cannot be const\");\n-      if (p_false)\n-\tfree (p_false);\n+      free (p_false);\n       return;\n \n     default:\n       error_with_line (elem->lineno,\n \t\t       \"attribute `predicable' must have a constant default\");\n-      if (p_false)\n-\tfree (p_false);\n+      free (p_false);\n       return;\n     }\n \n@@ -631,8 +628,7 @@ identify_predicable_attribute (void)\n     {\n       error_with_line (elem->lineno,\n \t\t       \"unknown value `%s' for `predicable' attribute\", value);\n-      if (p_false)\n-\tfree (p_false);\n+      free (p_false);\n     }\n }\n "}, {"sha": "c8356d34a63296fd0090fbd89410f603428b2895", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -114,8 +114,7 @@ save_clast_name_index (htab_t index_table, const char *name, int index)\n \n   if (slot)\n     {\n-      if (*slot)\n-\tfree (*slot);\n+      free (*slot);\n \n       *slot = new_clast_name_index (name, index);\n     }"}, {"sha": "7474be016c3f147fa8972699e7047c10ca51e498", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -190,8 +190,7 @@ free_data_refs_aux (VEC (data_reference_p, heap) *datarefs)\n       {\n \tbase_alias_pair *bap = (base_alias_pair *)(dr->aux);\n \n-\tif (bap->alias_set)\n-\t  free (bap->alias_set);\n+\tfree (bap->alias_set);\n \n \tfree (bap);\n \tdr->aux = NULL;"}, {"sha": "d67aee8f827a58843e6d47d661018698e1de903e", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -5582,8 +5582,7 @@ haifa_finish_h_i_d (void)\n \n   FOR_EACH_VEC_ELT (haifa_insn_data_def, h_i_d, i, data)\n     {\n-      if (data->reg_pressure != NULL)\n-\tfree (data->reg_pressure);\n+      free (data->reg_pressure);\n       for (use = data->reg_use_list; use != NULL; use = next)\n \t{\n \t  next = use->next_insn_use;"}, {"sha": "d73865459904b2d6db2efcf7651b94d7790d2a0b", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1936,8 +1936,7 @@ ipa_free_all_edge_args (void)\n void\n ipa_free_node_params_substructures (struct ipa_node_params *info)\n {\n-  if (info->params)\n-    free (info->params);\n+  free (info->params);\n \n   memset (info, 0, sizeof (*info));\n }"}, {"sha": "67022c4edbbba09fef803aac3b44aabd7c731a70", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1662,8 +1662,7 @@ local_pure_const (void)\n \t\t lang_hooks.decl_printable_name (current_function_decl,\n \t\t\t\t\t\t 2));\n     }\n-  if (l)\n-    free (l);\n+  free (l);\n   if (changed)\n     return execute_fixup_cfg ();\n   else"}, {"sha": "40fa6bc1bcb2a46fa337822513992121c849f098", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -913,8 +913,7 @@ propagate (void)\n \t\t\t\t  node_g->statics_written);\n \t    }\n \t}\n-      if (node_info)\n-\tfree (node_info);\n+      free (node_info);\n       if (node->aux)\n \t{\n \t  free (node->aux);"}, {"sha": "de894a25223b2000c40c4b8acea979c3869fa3a8", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1968,19 +1968,15 @@ free_ira_costs (void)\n {\n   int i;\n \n-  if (init_cost != NULL)\n-    free (init_cost);\n+  free (init_cost);\n   init_cost = NULL;\n   for (i = 0; i < MAX_RECOG_OPERANDS; i++)\n     {\n-      if (op_costs[i] != NULL)\n-\tfree (op_costs[i]);\n-      if (this_op_costs[i] != NULL)\n-\tfree (this_op_costs[i]);\n+      free (op_costs[i]);\n+      free (this_op_costs[i]);\n       op_costs[i] = this_op_costs[i] = NULL;\n     }\n-  if (temp_costs != NULL)\n-    free (temp_costs);\n+  free (temp_costs);\n   temp_costs = NULL;\n }\n "}, {"sha": "49f3e764ed02bec7d65b50140dae66daa540f081", "filename": "gcc/ira.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1556,16 +1556,11 @@ free_register_move_costs (void)\n \n   for (mode = 0; mode < MAX_MACHINE_MODE; mode++)\n     {\n-      if (ira_max_register_move_cost[mode] != NULL)\n-\tfree (ira_max_register_move_cost[mode]);\n-      if (ira_may_move_in_cost[mode] != NULL)\n-\tfree (ira_may_move_in_cost[mode]);\n-      if (ira_may_move_out_cost[mode] != NULL)\n-\tfree (ira_may_move_out_cost[mode]);\n-      if (ira_max_may_move_in_cost[mode] != NULL)\n-\tfree (ira_max_may_move_in_cost[mode]);\n-      if (ira_max_may_move_out_cost[mode] != NULL)\n-\tfree (ira_max_may_move_out_cost[mode]);\n+      free (ira_max_register_move_cost[mode]);\n+      free (ira_may_move_in_cost[mode]);\n+      free (ira_may_move_out_cost[mode]);\n+      free (ira_max_may_move_in_cost[mode]);\n+      free (ira_max_may_move_out_cost[mode]);\n       ira_register_move_cost[mode] = NULL;\n       ira_max_register_move_cost[mode] = NULL;\n       ira_may_move_in_cost[mode] = NULL;\n@@ -3461,8 +3456,7 @@ build_insn_chain (void)\n     }\n \n   for (i = 0; i < (unsigned int) max_regno; i++)\n-    if (live_subregs[i])\n-      free (live_subregs[i]);\n+    free (live_subregs[i]);\n \n   reload_insn_chain = c;\n   *p = NULL;"}, {"sha": "dec7e0b79ed367191b750f33ebe8762f51b4939c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,7 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* jcf-parse.c (java_parse_file): Remove useless if-before-free.\n+\n 2011-04-18  Jim Meyering  <meyering@redhat.com>\n \n \t* jcf-parse.c: Fix typo in comment.\n@@ -22471,7 +22475,7 @@ Tue Mar  9 11:52:08 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \f\n Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+2006, 2007, 2008, 2009, 2011 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "37cea2870a872de4ddee4fceb083da467eafe152", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1843,8 +1843,7 @@ java_parse_file (void)\n       list = next;\n     }\n \n-  if (file_list != NULL)\n-    free (file_list);\n+  free (file_list);\n \n   if (filename_count == 0)\n     warning (0, \"no input file specified\");"}, {"sha": "6f75d3320c103660ce5f0768ffaa938fa545b786", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -529,12 +529,9 @@ mat_free (void *e)\n   if (!mat)\n     return;\n \n-  if (mat->free_stmts)\n-    free (mat->free_stmts);\n-  if (mat->dim_hot_level)\n-    free (mat->dim_hot_level);\n-  if (mat->malloc_for_level)\n-    free (mat->malloc_for_level);\n+  free (mat->free_stmts);\n+  free (mat->dim_hot_level);\n+  free (mat->malloc_for_level);\n }\n \n /* Find all potential matrices."}, {"sha": "90261ae6ffec3695cdfbe675400d5a0019d5fd66", "filename": "gcc/prefix.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fprefix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fprefix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -103,8 +103,7 @@ get_key_value (char *key)\n   if (prefix == 0)\n     prefix = std_prefix;\n \n-  if (temp)\n-    free (temp);\n+  free (temp);\n \n   return prefix;\n }"}, {"sha": "e40bfecca90fa5d9692436eed4f85612d9ee0f72", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -828,8 +828,7 @@ compute_value_histograms (histogram_values values)\n     }\n \n   for (t = 0; t < GCOV_N_VALUE_COUNTERS; t++)\n-    if (histogram_counts[t])\n-      free (histogram_counts[t]);\n+    free (histogram_counts[t]);\n }\n \n /* The entry basic block will be moved around so that it has index=1,"}, {"sha": "7fb427078f3a0b61eda35e38308798df48c1fd12", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -4213,10 +4213,8 @@ free_reg_equiv (void)\n   int i;\n \n \n-  if (offsets_known_at)\n-    free (offsets_known_at);\n-  if (offsets_at)\n-    free (offsets_at);\n+  free (offsets_known_at);\n+  free (offsets_at);\n   offsets_at = 0;\n   offsets_known_at = 0;\n "}, {"sha": "09bf65d9093d3170d0aacde0e3318bca222ac8b7", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -3547,8 +3547,7 @@ free_deps (struct deps_desc *deps)\n \n   /* As we initialize reg_last lazily, it is possible that we didn't allocate\n      it at all.  */\n-  if (deps->reg_last)\n-    free (deps->reg_last);\n+  free (deps->reg_last);\n   deps->reg_last = NULL;\n \n   deps = NULL;"}, {"sha": "a12617ce3eecfd04a3e6eb8ed9da39665ffd0e03", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -581,8 +581,7 @@ fence_clear (fence_t f)\n   gcc_assert ((s != NULL && dc != NULL && tc != NULL)\n \t      || (s == NULL && dc == NULL && tc == NULL));\n \n-  if (s != NULL)\n-    free (s);\n+  free (s);\n \n   if (dc != NULL)\n     delete_deps_context (dc);"}, {"sha": "3ce83b9f7c1ae4c97717b614a69ead240da4d428", "filename": "gcc/sese.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -449,8 +449,7 @@ set_rename (htab_t rename_map, tree old_name, tree expr)\n   if (!slot)\n     return;\n \n-  if (*slot)\n-    free (*slot);\n+  free (*slot);\n \n   *slot = new_rename_map_elt (old_name, expr);\n }\n@@ -676,8 +675,7 @@ if_region_set_false_region (ifsese if_region, sese region)\n \n   SESE_EXIT (region) = false_edge;\n \n-  if (if_region->false_region)\n-    free (if_region->false_region);\n+  free (if_region->false_region);\n   if_region->false_region = region;\n \n   if (slot)"}, {"sha": "046060522259a76e63d14b04e9a1f5b5b88d5358", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -5127,11 +5127,9 @@ free_rdg (struct graph *rdg)\n       struct graph_edge *e;\n \n       for (e = v->succ; e; e = e->succ_next)\n-\tif (e->data)\n-\t  free (e->data);\n+\tfree (e->data);\n \n-      if (v->data)\n-\tfree (v->data);\n+      free (v->data);\n     }\n \n   htab_delete (rdg->indices);"}, {"sha": "60e2236823b3cc9e5cfe9a36246d6765525ff7fb", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1619,8 +1619,7 @@ lower_try_finally (struct leh_state *state, gimple tp)\n     }\n \n   VEC_free (tree, heap, this_tf.dest_array);\n-  if (this_tf.goto_queue)\n-    free (this_tf.goto_queue);\n+  free (this_tf.goto_queue);\n   if (this_tf.goto_queue_map)\n     pointer_map_destroy (this_tf.goto_queue_map);\n "}, {"sha": "2dfe37eca534b5432d2b6f696b9138cc7c009d1e", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -242,8 +242,7 @@ delete_coalesce_list (coalesce_list_p cl)\n {\n   gcc_assert (cl->cost_one_list == NULL);\n   htab_delete (cl->list);\n-  if (cl->sorted)\n-    free (cl->sorted);\n+  free (cl->sorted);\n   gcc_assert (cl->num_sorted == 0);\n   free (cl);\n }"}, {"sha": "4216b22585109252f681c93d1f0e6c53f5c54c27", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -157,10 +157,8 @@ delete_var_map (var_map map)\n {\n   var_map_base_fini (map);\n   partition_delete (map->var_partition);\n-  if (map->partition_to_view)\n-    free (map->partition_to_view);\n-  if (map->view_to_partition)\n-    free (map->view_to_partition);\n+  free (map->partition_to_view);\n+  free (map->view_to_partition);\n   free (map);\n }\n "}, {"sha": "b00b8d44ac38afc2466adb612c195b9c2d0c1a19", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -6254,8 +6254,7 @@ free_loop_data (struct ivopts_data *data)\n       struct version_info *info;\n \n       info = ver_info (data, i);\n-      if (info->iv)\n-\tfree (info->iv);\n+      free (info->iv);\n       info->iv = NULL;\n       info->has_nonlin_use = false;\n       info->preserve_biv = false;\n@@ -6282,8 +6281,7 @@ free_loop_data (struct ivopts_data *data)\n     {\n       struct iv_cand *cand = iv_cand (data, i);\n \n-      if (cand->iv)\n-\tfree (cand->iv);\n+      free (cand->iv);\n       if (cand->depends_on)\n \tBITMAP_FREE (cand->depends_on);\n       free (cand);"}, {"sha": "a833a041bbbe388a8c5238e6420aeced0a293be2", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -580,8 +580,7 @@ phi_trans_add (pre_expr e, pre_expr v, basic_block pred)\n \n   slot = htab_find_slot_with_hash (phi_translate_table, new_pair,\n \t\t\t\t   new_pair->hashcode, INSERT);\n-  if (*slot)\n-    free (*slot);\n+  free (*slot);\n   *slot = (void *) new_pair;\n }\n "}, {"sha": "eb93719e27bee67ecc8a1e14b77a885d6397b613", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,10 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* files.c (destroy_cpp_file): Remove useless if-before-free.\n+\t* init.c (cpp_destroy): Likewise.\n+\t* macro.c (replace_args): Likewise.\n+\t* pch.c (cpp_valid_state): Likewise.\n+\n 2011-03-25  Kai Tietz  <ktietz@redhat.com>\n \n \t* files.c (file_hash_eq): Use filename_cmp"}, {"sha": "cd0bc4847b2c2dd178d99f08f304c2a1f2d17463", "filename": "libcpp/files.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -996,8 +996,7 @@ make_cpp_file (cpp_reader *pfile, cpp_dir *dir, const char *fname)\n static void\n destroy_cpp_file (_cpp_file *file)\n {\n-  if (file->buffer_start)\n-    free ((void *) file->buffer_start);\n+  free ((void *) file->buffer_start);\n   free ((void *) file->name);\n   free (file);\n }"}, {"sha": "5ba666650e8e465508e9853f552f06050601336f", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -259,8 +259,7 @@ cpp_destroy (cpp_reader *pfile)\n   while (CPP_BUFFER (pfile) != NULL)\n     _cpp_pop_buffer (pfile);\n \n-  if (pfile->out.base)\n-    free (pfile->out.base);\n+  free (pfile->out.base);\n \n   if (pfile->macro_buffer)\n     {"}, {"sha": "eba2349954a3e949bb29b592f0917e08cc0b7151", "filename": "libcpp/macro.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1064,8 +1064,7 @@ replace_args (cpp_reader *pfile, cpp_hashnode *node, cpp_macro *macro, macro_arg\n \n   /* Free the expanded arguments.  */\n   for (i = 0; i < macro->paramc; i++)\n-    if (args[i].expanded)\n-      free (args[i].expanded);\n+    free (args[i].expanded);\n \n   push_ptoken_context (pfile, node, buff, first, dest - first);\n }"}, {"sha": "d278f14370e74a50d0e0d034f686731da0db3eaf", "filename": "libcpp/pch.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Fpch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libcpp%2Fpch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpch.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -713,12 +713,9 @@ cpp_valid_state (cpp_reader *r, const char *name, int fd)\n   return -1;\n \n  fail:\n-  if (namebuf != NULL)\n-    free (namebuf);\n-  if (undeftab != NULL)\n-    free (undeftab);\n-  if (nl.defs != NULL)\n-    free (nl.defs);\n+  free (namebuf);\n+  free (undeftab);\n+  free (nl.defs);\n   return 1;\n }\n "}, {"sha": "8a19499a5301492520b95ec4d4c6ebd4b7d2cfbc", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,12 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* decNumber.c (decNumberFromString): Remove useless\n+\tif-before-free test.\n+\t(decNumberCompareTotalMag, decNumberExp, decNumberFMA): Likewise.\n+\t(decNumberLn, decNumberLog10, decNumberPower): Likewise.\n+\t(decNumberReduce, decNumberSquareRoot, decAddOp): Likewise.\n+\t(decDivideOp, NEEDTWO, decExpOp, LN2): Likewise.\n+\n 2011-03-28  Mike Frysinger  <vapier@gentoo.org>\n \n \t* .gitignore: New file."}, {"sha": "cf2d32e40d4d7135672d11870a937ab365ebf089", "filename": "libdecnumber/decNumber.c", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libdecnumber%2FdecNumber.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libdecnumber%2FdecNumber.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecNumber.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -711,7 +711,7 @@ decNumber * decNumberFromString(decNumber *dn, const char chars[],\n     /* decNumberShow(dn); */\n     } while(0); \t\t\t/* [for break] */\n \n-  if (allocres!=NULL) free(allocres);\t/* drop any storage used */\n+  free(allocres);\t/* drop any storage used */\n   if (status!=0) decStatus(dn, status, set);\n   return dn;\n   } /* decNumberFromString */\n@@ -970,8 +970,8 @@ decNumber * decNumberCompareTotalMag(decNumber *res, const decNumber *lhs,\n     decCompareOp(res, lhs, rhs, set, COMPTOTAL, &status);\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocbufa!=NULL) free(allocbufa); /* drop any storage used */\n-  if (allocbufb!=NULL) free(allocbufb); /* .. */\n+  free(allocbufa); /* drop any storage used */\n+  free(allocbufb); /* .. */\n   if (status!=0) decStatus(res, status, set);\n   return res;\n   } /* decNumberCompareTotalMag */\n@@ -1074,7 +1074,7 @@ decNumber * decNumberExp(decNumber *res, const decNumber *rhs,\n     } while(0); \t\t\t/* end protected */\n \n   #if DECSUBSET\n-  if (allocrhs !=NULL) free(allocrhs);\t/* drop any storage used */\n+  free(allocrhs);\t/* drop any storage used */\n   #endif\n   /* apply significant status */\n   if (status!=0) decStatus(res, status, set);\n@@ -1169,7 +1169,7 @@ decNumber * decNumberFMA(decNumber *res, const decNumber *lhs,\n     decAddOp(res, acc, fhs, set, 0, &status);\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocbufa!=NULL) free(allocbufa); /* drop any storage used */\n+  free(allocbufa); /* drop any storage used */\n   if (status!=0) decStatus(res, status, set);\n   #if DECCHECK\n   decCheckInexact(res, set);\n@@ -1296,7 +1296,7 @@ decNumber * decNumberLn(decNumber *res, const decNumber *rhs,\n     } while(0); \t\t\t/* end protected */\n \n   #if DECSUBSET\n-  if (allocrhs !=NULL) free(allocrhs);\t/* drop any storage used */\n+  free(allocrhs);\t/* drop any storage used */\n   #endif\n   /* apply significant status */\n   if (status!=0) decStatus(res, status, set);\n@@ -1509,10 +1509,10 @@ decNumber * decNumberLog10(decNumber *res, const decNumber *rhs,\n     decDivideOp(res, a, b, &aset, DIVIDE, &status); /* into result */\n     } while(0); \t\t\t/* [for break] */\n \n-  if (allocbufa!=NULL) free(allocbufa); /* drop any storage used */\n-  if (allocbufb!=NULL) free(allocbufb); /* .. */\n+  free(allocbufa); /* drop any storage used */\n+  free(allocbufb); /* .. */\n   #if DECSUBSET\n-  if (allocrhs !=NULL) free(allocrhs);\t/* .. */\n+  free(allocrhs);\t/* .. */\n   #endif\n   /* apply significant status */\n   if (status!=0) decStatus(res, status, set);\n@@ -2253,11 +2253,11 @@ decNumber * decNumberPower(decNumber *res, const decNumber *lhs,\n     #endif\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocdac!=NULL) free(allocdac);\t/* drop any storage used */\n-  if (allocinv!=NULL) free(allocinv);\t/* .. */\n+  free(allocdac);\t/* drop any storage used */\n+  free(allocinv);\t/* .. */\n   #if DECSUBSET\n-  if (alloclhs!=NULL) free(alloclhs);\t/* .. */\n-  if (allocrhs!=NULL) free(allocrhs);\t/* .. */\n+  free(alloclhs);\t/* .. */\n+  free(allocrhs);\t/* .. */\n   #endif\n   if (status!=0) decStatus(res, status, set);\n   #if DECCHECK\n@@ -2349,7 +2349,7 @@ decNumber * decNumberReduce(decNumber *res, const decNumber *rhs,\n     } while(0); \t\t\t     /* end protected */\n \n   #if DECSUBSET\n-  if (allocrhs !=NULL) free(allocrhs);\t     /* .. */\n+  free(allocrhs);\t     /* .. */\n   #endif\n   if (status!=0) decStatus(res, status, set);/* then report status */\n   return res;\n@@ -3111,11 +3111,11 @@ decNumber * decNumberSquareRoot(decNumber *res, const decNumber *rhs,\n     decNumberCopy(res, a);\t\t     /* a is now the result */\n     } while(0); \t\t\t     /* end protected */\n \n-  if (allocbuff!=NULL) free(allocbuff);      /* drop any storage used */\n-  if (allocbufa!=NULL) free(allocbufa);      /* .. */\n-  if (allocbufb!=NULL) free(allocbufb);      /* .. */\n+  free(allocbuff);      /* drop any storage used */\n+  free(allocbufa);      /* .. */\n+  free(allocbufb);      /* .. */\n   #if DECSUBSET\n-  if (allocrhs !=NULL) free(allocrhs);\t     /* .. */\n+  free(allocrhs);\t     /* .. */\n   #endif\n   if (status!=0) decStatus(res, status, set);/* then report status */\n   #if DECCHECK\n@@ -4130,10 +4130,10 @@ static decNumber * decAddOp(decNumber *res, const decNumber *lhs,\n       }\n     } while(0); \t\t\t     /* end protected */\n \n-  if (allocacc!=NULL) free(allocacc);\t     /* drop any storage used */\n+  free(allocacc);\t     /* drop any storage used */\n   #if DECSUBSET\n-  if (allocrhs!=NULL) free(allocrhs);\t     /* .. */\n-  if (alloclhs!=NULL) free(alloclhs);\t     /* .. */\n+  free(allocrhs);\t     /* .. */\n+  free(alloclhs);\t     /* .. */\n   #endif\n   return res;\n   } /* decAddOp */\n@@ -4782,11 +4782,11 @@ static decNumber * decDivideOp(decNumber *res,\n     #endif\n     } while(0); \t\t\t     /* end protected */\n \n-  if (varalloc!=NULL) free(varalloc);\t/* drop any storage used */\n-  if (allocacc!=NULL) free(allocacc);\t/* .. */\n+  free(varalloc);\t/* drop any storage used */\n+  free(allocacc);\t/* .. */\n   #if DECSUBSET\n-  if (allocrhs!=NULL) free(allocrhs);\t/* .. */\n-  if (alloclhs!=NULL) free(alloclhs);\t/* .. */\n+  free(allocrhs);\t/* .. */\n+  free(alloclhs);\t/* .. */\n   #endif\n   return res;\n   } /* decDivideOp */\n@@ -5127,14 +5127,14 @@ static decNumber * decMultiplyOp(decNumber *res, const decNumber *lhs,\n     decFinish(res, set, &residue, status);   /* final cleanup */\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocacc!=NULL) free(allocacc);\t/* drop any storage used */\n+  free(allocacc);\t/* drop any storage used */\n   #if DECSUBSET\n-  if (allocrhs!=NULL) free(allocrhs);\t/* .. */\n-  if (alloclhs!=NULL) free(alloclhs);\t/* .. */\n+  free(allocrhs);\t/* .. */\n+  free(alloclhs);\t/* .. */\n   #endif\n   #if FASTMUL\n-  if (allocrhi!=NULL) free(allocrhi);\t/* .. */\n-  if (alloclhi!=NULL) free(alloclhi);\t/* .. */\n+  free(allocrhi);\t/* .. */\n+  free(alloclhi);\t/* .. */\n   #endif\n   return res;\n   } /* decMultiplyOp */\n@@ -5483,9 +5483,9 @@ decNumber * decExpOp(decNumber *res, const decNumber *rhs,\n     decFinish(res, set, &residue, status);\t /* cleanup/set flags */\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocrhs !=NULL) free(allocrhs);\t/* drop any storage used */\n-  if (allocbufa!=NULL) free(allocbufa); /* .. */\n-  if (allocbuft!=NULL) free(allocbuft); /* .. */\n+  free(allocrhs);\t/* drop any storage used */\n+  free(allocbufa); /* .. */\n+  free(allocbuft); /* .. */\n   /* [status is handled by caller] */\n   return res;\n   } /* decExpOp */\n@@ -5794,8 +5794,8 @@ decNumber * decLnOp(decNumber *res, const decNumber *rhs,\n     decFinish(res, set, &residue, status);\t /* cleanup/set flags */\n     } while(0); \t\t\t/* end protected */\n \n-  if (allocbufa!=NULL) free(allocbufa); /* drop any storage used */\n-  if (allocbufb!=NULL) free(allocbufb); /* .. */\n+  free(allocbufa); /* drop any storage used */\n+  free(allocbufb); /* .. */\n   /* [status is handled by caller] */\n   return res;\n   } /* decLnOp */\n@@ -5959,8 +5959,8 @@ static decNumber * decQuantizeOp(decNumber *res, const decNumber *lhs,\n     } while(0); \t\t\t/* end protected */\n \n   #if DECSUBSET\n-  if (allocrhs!=NULL) free(allocrhs);\t/* drop any storage used */\n-  if (alloclhs!=NULL) free(alloclhs);\t/* .. */\n+  free(allocrhs);\t/* drop any storage used */\n+  free(alloclhs);\t/* .. */\n   #endif\n   return res;\n   } /* decQuantizeOp */\n@@ -6142,8 +6142,8 @@ decNumber * decCompareOp(decNumber *res, const decNumber *lhs,\n       }\n     }\n   #if DECSUBSET\n-  if (allocrhs!=NULL) free(allocrhs);\t/* free any storage used */\n-  if (alloclhs!=NULL) free(alloclhs);\t/* .. */\n+  free(allocrhs);\t/* free any storage used */\n+  free(alloclhs);\t/* .. */\n   #endif\n   return res;\n   } /* decCompareOp */\n@@ -6277,7 +6277,7 @@ static Int decUnitCompare(const Unit *a, Int alength,\n     result=(*u==0 ? 0 : +1);\n     }\n   /* clean up and return the result */\n-  if (allocacc!=NULL) free(allocacc);\t/* drop any storage used */\n+  free(allocacc);\t/* drop any storage used */\n   return result;\n   } /* decUnitCompare */\n "}, {"sha": "11202c34eb8fc133113a44e9b278f5dcd939a06a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,13 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* intrinsics/move_alloc.c (move_alloc): Remove useless\n+\tif-before-free test.\n+\t* io/fbuf.c (fbuf_destroy): Likewise.\n+\t* io/format.c (save_parsed_format): Likewise.\n+\t* io/open.c (already_open): Likewise.\n+\t* io/unit.c (free_internal_unit, close_unit_1): Likewise.\n+\t* io/unix.c (mem_close): Likewise.\n+\n 2011-04-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/48602"}, {"sha": "f76c20c7b6d49640b9362ded8b293e4df2c26a3b", "filename": "libgfortran/intrinsics/move_alloc.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fintrinsics%2Fmove_alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fintrinsics%2Fmove_alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fmove_alloc.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -37,8 +37,7 @@ move_alloc (gfc_array_char * from, gfc_array_char * to)\n {\n   int i;\n \n-  if (to->data)\n-    free (to->data);\n+  free (to->data);\n \n   for (i = 0; i < GFC_DESCRIPTOR_RANK (from); i++)\n     {"}, {"sha": "353e5aec9d31749b1e8003412a67e127ea887cb4", "filename": "libgfortran/io/fbuf.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Ffbuf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Ffbuf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -51,8 +51,7 @@ fbuf_destroy (gfc_unit * u)\n {\n   if (u->fbuf == NULL)\n     return;\n-  if (u->fbuf->buf)\n-    free (u->fbuf->buf);\n+  free (u->fbuf->buf);\n   free (u->fbuf);\n   u->fbuf = NULL;\n }"}, {"sha": "518dc809ecbcae168c6e0ce30931a4655cb38189", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -149,8 +149,7 @@ save_parsed_format (st_parameter_dt *dtp)\n     free_format_data (u->format_hash_table[hash].hashed_fmt);\n   u->format_hash_table[hash].hashed_fmt = NULL;\n \n-  if (u->format_hash_table[hash].key != NULL)\n-    free (u->format_hash_table[hash].key);\n+  free (u->format_hash_table[hash].key);\n   u->format_hash_table[hash].key = get_mem (dtp->format_len);\n   memcpy (u->format_hash_table[hash].key, dtp->format, dtp->format_len);\n "}, {"sha": "b26d14d8069f8324cf7808cad196e733881e5f22", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -688,8 +688,7 @@ already_open (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \t}\n \n       u->s = NULL;\n-      if (u->file)\n-\tfree (u->file);\n+      free (u->file);\n       u->file = NULL;\n       u->file_len = 0;\n "}, {"sha": "e8a9b8483672539bf964a6b71b0eeb145b98a382", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -483,11 +483,9 @@ free_internal_unit (st_parameter_dt *dtp)\n \n   if (dtp->u.p.current_unit != NULL)\n     {\n-      if (dtp->u.p.current_unit->ls != NULL)\n-\tfree (dtp->u.p.current_unit->ls);\n+      free (dtp->u.p.current_unit->ls);\n   \n-      if (dtp->u.p.current_unit->s)\n-\tfree (dtp->u.p.current_unit->s);\n+      free (dtp->u.p.current_unit->s);\n   \n       destroy_unit_mutex (dtp->u.p.current_unit);\n     }\n@@ -652,8 +650,7 @@ close_unit_1 (gfc_unit *u, int locked)\n \n   delete_unit (u);\n \n-  if (u->file)\n-    free (u->file);\n+  free (u->file);\n   u->file = NULL;\n   u->file_len = 0;\n "}, {"sha": "ee2fd172517837ebee40757ae0740d345409ea25", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -850,8 +850,7 @@ mem_flush (unix_stream * s __attribute__ ((unused)))\n static int\n mem_close (unix_stream * s)\n {\n-  if (s != NULL)\n-    free (s);\n+  free (s);\n \n   return 0;\n }"}, {"sha": "0e88ea3cc9e523d41403bdbd8d6cc838c3c7c7ee", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,16 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* cp-demint.c (cplus_demangle_v3_components): Remove useless\n+\tif-before-free.\n+\t* cplus-dem.c (squangle_mop_up): Likewise.\n+\t(delete_non_B_K_work_stuff): Likewise.\n+\t* pex-common.c (pex_free): Likewise.\n+\t* pex-msdos.c (pex_msdos_cleanup): Likewise.\n+\t* pex-win32.c (mingw_rootify, msys_rootify): Likewise.\n+\t(win32_spawn): Likewise.\n+\t* regex.c (FREE_VAR, weak_alias): Likewise.\n+\t* spaces.c (spaces): Likewise.\n+\n 2011-04-10  Jim Meyering  <meyering@redhat.com>\n \n \tAvoid memory overrun in a test leading to potential double-free."}, {"sha": "1d1a77af748ba2485272db761fa4244e25b5e2e2", "filename": "libiberty/cp-demint.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fcp-demint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fcp-demint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demint.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -206,10 +206,8 @@ cplus_demangle_v3_components (const char *mangled, int options, void **mem)\n \t     malloc (di.num_subs * sizeof (struct demangle_component *)));\n   if (di.comps == NULL || di.subs == NULL)\n     {\n-      if (di.comps != NULL)\n-\tfree (di.comps);\n-      if (di.subs != NULL)\n-\tfree (di.subs);\n+      free (di.comps);\n+      free (di.subs);\n       return NULL;\n     }\n "}, {"sha": "e94848767e780847ca9e4bd6f879906c72d99fcf", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1311,8 +1311,7 @@ delete_non_B_K_work_stuff (struct work_stuff *work)\n       int i;\n \n       for (i = 0; i < work->ntmpl_args; i++)\n-\tif (work->tmpl_argvec[i])\n-\t  free ((char*) work->tmpl_argvec[i]);\n+\tfree ((char*) work->tmpl_argvec[i]);\n \n       free ((char*) work->tmpl_argvec);\n       work->tmpl_argvec = NULL;"}, {"sha": "6fd3fdecd808b38ad024a7db14163795eb99a91f", "filename": "libiberty/pex-common.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-common.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -623,12 +623,9 @@ pex_free (struct pex_obj *obj)\n \n   if (obj->next_input_name_allocated)\n     free (obj->next_input_name);\n-  if (obj->children != NULL)\n-    free (obj->children);\n-  if (obj->status != NULL)\n-    free (obj->status);\n-  if (obj->time != NULL)\n-    free (obj->time);\n+  free (obj->children);\n+  free (obj->status);\n+  free (obj->time);\n \n   if (obj->remove_count > 0)\n     {"}, {"sha": "fa0f40ac9edaad32e9834abf6d1cb94010a152b6", "filename": "libiberty/pex-msdos.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-msdos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-msdos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-msdos.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -310,10 +310,8 @@ pex_msdos_cleanup (struct pex_obj  *obj)\n \n   ms = (struct pex_msdos *) obj->sysdep;\n   for (i = 0; i < PEX_MSDOS_FILE_COUNT; ++i)\n-    if (msdos->files[i] != NULL)\n-      free (msdos->files[i]);\n-  if (msdos->statuses != NULL)\n-    free (msdos->statuses);\n+    free (msdos->files[i]);\n+  free (msdos->statuses);\n   free (msdos);\n   obj->sysdep = NULL;\n }"}, {"sha": "107ac6fdcc1e8a0dbfa003dc6d59e4bc76fb6db5", "filename": "libiberty/pex-win32.c", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fpex-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-win32.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -210,10 +210,8 @@ mingw_rootify (const char *executable)\n   if (!namebuf || !foundbuf)\n     {\n       RegCloseKey (hKey);\n-      if (namebuf)\n-\tfree (namebuf);\n-      if (foundbuf)\n-\tfree (foundbuf);\n+      free (namebuf);\n+      free (foundbuf);\n       return executable;\n     }\n \n@@ -315,8 +313,7 @@ msys_rootify (const char *executable)\n     return tack_on_executable (buf, executable);\n \n   /* failed */\n-  if (buf)\n-    free (buf);\n+  free (buf);\n   return executable;\n }\n #endif\n@@ -607,8 +604,7 @@ win32_spawn (const char *executable,\n \t\t      si,\n \t\t      pi))\n     {\n-      if (env_block)\n-        free (env_block);\n+      free (env_block);\n \n       free (full_executable);\n \n@@ -618,18 +614,14 @@ win32_spawn (const char *executable,\n   /* Clean up.  */\n   CloseHandle (pi->hThread);\n   free (full_executable);\n-  if (env_block)\n-    free (env_block);\n+  free (env_block);\n \n   return (pid_t) pi->hProcess;\n \n  error:\n-  if (env_block)\n-    free (env_block);\n-  if (cmdline)\n-    free (cmdline);\n-  if (full_executable)\n-    free (full_executable);\n+  free (env_block);\n+  free (cmdline);\n+  free (full_executable);\n \n   return (pid_t) -1;\n }"}, {"sha": "d65eedb16704313a58f293c0c9e00600e51a29a2", "filename": "libiberty/regex.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fregex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fregex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fregex.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -4970,7 +4970,7 @@ weak_alias (__re_search_2, re_search_2)\n #ifdef MATCH_MAY_ALLOCATE\n # define FREE_VAR(var) if (var) REGEX_FREE (var); var = NULL\n #else\n-# define FREE_VAR(var) if (var) free (var); var = NULL\n+# define FREE_VAR(var) free (var); var = NULL\n #endif\n \n #ifdef WCHAR\n@@ -8111,20 +8111,17 @@ weak_alias (__regerror, regerror)\n void\n regfree (regex_t *preg)\n {\n-  if (preg->buffer != NULL)\n-    free (preg->buffer);\n+  free (preg->buffer);\n   preg->buffer = NULL;\n \n   preg->allocated = 0;\n   preg->used = 0;\n \n-  if (preg->fastmap != NULL)\n-    free (preg->fastmap);\n+  free (preg->fastmap);\n   preg->fastmap = NULL;\n   preg->fastmap_accurate = 0;\n \n-  if (preg->translate != NULL)\n-    free (preg->translate);\n+  free (preg->translate);\n   preg->translate = NULL;\n }\n #ifdef _LIBC"}, {"sha": "69d7a2d3f834778242b24840f1c3c9fdbb351a26", "filename": "libiberty/spaces.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fspaces.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libiberty%2Fspaces.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fspaces.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -53,10 +53,7 @@ spaces (int count)\n \n   if (count > maxsize)\n     {\n-      if (buf)\n-\t{\n-\t  free (buf);\n-\t}\n+      free (buf);\n       buf = (char *) malloc (count + 1);\n       if (buf == (char *) 0)\n \treturn 0;"}, {"sha": "0c65c31f90c84dc820f5c73806cb6640f706d43a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,8 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* libsupc++/del_opnt.cc (operator delete): Remove useless\n+\tif-before-free.\n+\n 2011-04-19  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/48521"}, {"sha": "29eab1022ee454ebad9d05d92e12cbadcead86cd", "filename": "libstdc++-v3/libsupc++/del_opnt.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opnt.cc?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -31,6 +31,5 @@ extern \"C\" void free (void *);\n _GLIBCXX_WEAK_DEFINITION void\n operator delete (void *ptr, const std::nothrow_t&) throw ()\n {\n-  if (ptr)\n-    free (ptr);\n+  free (ptr);\n }"}, {"sha": "8ceb13c4dad0da7db782e71262074cc732d5819e", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -1,3 +1,7 @@\n+2011-04-20  Jim Meyering  <meyering@redhat.com>\n+\n+\t* lto-plugin.c (free_1, free_2): Remove useless if-before-free.\n+\n 2011-04-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR bootstrap/48431"}, {"sha": "4b5828b3912b823e8ab57b0929a82019fb9096bd", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046957830e176ad16fdef39bc7f1cd44d8fbc3b7/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=046957830e176ad16fdef39bc7f1cd44d8fbc3b7", "patch": "@@ -312,8 +312,7 @@ free_1 (void)\n \t{\n \t  struct ld_plugin_symbol *s = &symtab->syms[j];\n \t  free (s->name);\n-\t  if (s->comdat_key)\n-\t    free (s->comdat_key);\n+\t  free (s->comdat_key);\n \t}\n       free (symtab->syms);\n       symtab->syms = NULL;\n@@ -342,8 +341,7 @@ free_2 (void)\n   claimed_files = NULL;\n   num_claimed_files = 0;\n \n-  if (arguments_file_name)\n-    free (arguments_file_name);\n+  free (arguments_file_name);\n   arguments_file_name = NULL;\n }\n "}]}