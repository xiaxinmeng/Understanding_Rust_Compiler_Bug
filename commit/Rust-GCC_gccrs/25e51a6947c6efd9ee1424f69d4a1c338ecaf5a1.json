{"sha": "25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlNTFhNjk0N2M2ZWZkOWVlMTQyNGY2OWQ0YTFjMzM4ZWNhZjVhMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-03-22T23:30:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-03-22T23:30:13Z"}, "message": "Fix #endif foo; don't alter sh options; clean up all DONE files\n\nFrom-SVN: r3832", "tree": {"sha": "0a3dbc09e9ca5cdf143cdc1059872c43e5e7c7bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a3dbc09e9ca5cdf143cdc1059872c43e5e7c7bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1/comments", "author": null, "committer": null, "parents": [{"sha": "bb64c9871c74e6da869cae60170a0966bf6aed2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb64c9871c74e6da869cae60170a0966bf6aed2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb64c9871c74e6da869cae60170a0966bf6aed2c"}], "stats": {"total": 95, "additions": 59, "deletions": 36}, "files": [{"sha": "87f0d610dbace5b6b21f83da2a9bdc72d66722f6", "filename": "gcc/fixincludes", "status": "modified", "additions": 59, "deletions": 36, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=25e51a6947c6efd9ee1424f69d4a1c338ecaf5a1", "patch": "@@ -211,7 +211,8 @@ if $LINKS; then\n   done\n fi\n \n-set - $treetops\n+set x $treetops\n+shift\n while [ $# != 0 ]; do\n   # $1 is an old directory to copy, and $2 is the new directory to copy to.\n   cd ${INPUT}\n@@ -241,41 +242,62 @@ while [ $# != 0 ]; do\n # Thus, matching every #endif is unacceptable.\n # But the argument to egrep must be kept small, or many versions of egrep\n # won't be able to handle it.\n-# rms: I removed `|#[el].*if.*[^/ \t]' because it made egrep fail.\n-    if egrep '//|[ \t_]_IO|CTRL|#define.NULL|#[el]*if.*([0-9]|sparc|vax|sun|pyr)' $file > /dev/null; then\n+#\n+# We use the pattern [!-.0-~] instead of [^/ \t] to match a noncomment\n+# following #else or #endif because some buggy egreps think [^/] matches\n+# newline, and they thus think `#else ' matches `#e[ndiflse]*[ \t]+[^/ \t]'.\n+#\n+# We use the pattern [^a-zA-Z0-9_][_a-ce-km-z][a-z0-9] to match an identifier\n+# following #if or #elif that is not surrounded by __.  The `a-ce-km-z'\n+# in this pattern lacks `d' and `l'; this means we don't worry about\n+# identifiers starting with `d' or `l'.  This is OK, since none of the\n+# identifiers below start with `d' or `l'.  It also greatly improves\n+# performance, since many files contain lines of the form `#if ... defined ...'\n+# or `#if lint'.\n+    if egrep '//|[ \t_]_IO|CTRL|^#define.NULL|^#e[nl][ds][ief]*[ \t]+[!-.0-~]|^#[el]*if.*[^a-zA-Z0-9_][_a-ce-km-z][a-z0-9]' $file >/dev/null; then\n       if [ -r $file ]; then\n \tcp $file $2/$file >/dev/null 2>&1\t\\\n \t|| echo \"Can't copy $file\"\n \tchmod +w $2/$file\n \tchmod a+r $2/$file\n-# Following two lines removed.\n-#\t  s%^\\([ \t]*#[ \t]*endif[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n-#\t  s%^\\([ \t]*#[ \t]*else[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n-\n \tsed -e '\n \t\t\t\t   :loop\n \t  /\\\\$/\t\t\tN\n \t  /\\\\$/\t\t\tb loop\n+\t  s%^\\([ \t]*#[ \t]*endif[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n+\t  s%^\\([ \t]*#[ \t]*else[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n \t  /\\/\\/[^*]/\t\t\ts|//\\(.*\\)$|/*\\1*/|\n \t  /[ \t]_IO[A-Z]*[ \t]*(/\ts/(\\(.\\),/('\\''\\1'\\'',/\n \t  /[ \t]BSD43__IO[A-Z]*[ \t]*(/\ts/(\\(.\\),/('\\''\\1'\\'',/\n \t  /#define._IO/\t\t\ts/'\\''\\([cgx]\\)'\\''/\\1/g\n-\t  /#define.BSD43__IO/\t\ts/'\\''\\(]cgx]\\)'\\''/\\1/g\n+\t  /#define.BSD43__IO/\t\ts/'\\''\\([cgx]\\)'\\''/\\1/g\n \t  /[^A-Z]CTRL[ \t]*(/\t\ts/\\([^'\\'']\\))/'\\''\\1'\\'')/\n \t  /#define.CTRL/\t\ts/'\\''\\([cgx]\\)'\\''/\\1/g\n \t  /#define._CTRL/\t\ts/'\\''\\([cgx]\\)'\\''/\\1/g\n \t  /#define.BSD43_CTRL/\t\ts/'\\''\\([cgx]\\)'\\''/\\1/g\n-\t  /#[a-z]*if.*[\t (]m68k/\ts/\\([^_]\\)m68k/\\1__m68k__/g\n-\t  /#[a-z]*if.*[\t (]__i386/\ts/__i386/__i386__/g\n-\t  /#[a-z]*if.*[\t (]i386/\ts/\\([^_]\\)i386/\\1__i386__/g\n-\t  /#[a-z]*if.*[\t (]sparc/\ts/\\([^_]\\)sparc/\\1__sparc__/g\n-\t  /#[a-z]*if.*[\t (]mc68000/\ts/\\([^_]\\)mc68000/\\1__mc68000__/g\n-\t  /#[a-z]*if.*[\t (]vax/\t\ts/\\([^_]\\)vax/\\1__vax__/g\n-\t  /#[a-z]*if.*[\t (]sun/\t\ts/\\([^_]\\)\\(sun[a-z0-9]*\\)\\([^a-z0-9_]\\)/\\1__\\2__\\3/g\n-\t  /#[a-z]*if.*[\t (]sun/\t\ts/\\([^_]\\)\\(sun[a-z0-9]*\\)$/\\1__\\2__/g\n-\t  /#[a-z]*if.*[\t (]ns32000/\ts/\\([^_]\\)ns32000/\\1__ns32000__/g\n-\t  /#[a-z]*if.*[\t (]pyr/\t\ts/\\([^_]\\)pyr/\\1__pyr__/g\n-\t  /#[a-z]*if.*[\t (]is68k/\ts/\\([^_]\\)is68k/\\1__is68k__/g\n+\t  /#[el]*if/{\n+\t\t# Surround each word with spaces, to simplify matching below.\n+\t\ts/[a-zA-Z0-9_][a-zA-Z0-9_]*/ & /g\n+\n+\t\t# ANSIfy each pre-ANSI machine-dependent symbol\n+\t\t# by surrounding it with __ __.\n+\t\ts/ bsd4\\([0-9]\\) / __bsd4\\1__ /g\n+\t\ts/ _*i386 / __i386__ /g\n+\t\ts/ is68k / __is68k__ /g\n+\t\ts/ m68k / __m68k__ /g\n+\t\ts/ mc680\\([0-9]\\)0 / __mc680\\10__ /g\n+\t\ts/ news\\([0-9]*\\) / __news\\1__ /g\n+\t\ts/ ns32000 / __ns32000__ /g\n+\t\ts/ pyr / __pyr__ /g\n+\t\ts/ sony_news / __sony_news__ /g\n+\t\ts/ sparc / __sparc__ /g\n+\t\ts/ sun\\([a-z0-9]*\\) / __sun\\1__ /g\n+\t\ts/ unix / __unix__ /g\n+\t\ts/ vax / __vax__ /g\n+\n+\t\t# Remove the spaces that we inserted around each word.\n+\t\ts/ \\([a-zA-Z0-9_][a-zA-Z0-9_]*\\) /\\1/g\n+\t  }\n \t  /^#define.NULL[ \t]/\ti\\\n \t\t#undef NULL\n \t' $2/$file > $2/$file.sed\n@@ -497,21 +519,21 @@ fi\n \n # Remove nested comments created by #endifs in a comment (Ultrix 4.1)\n # Only needed if commenting out junk after #endif.\n-#file=signal.h\n-#if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-#  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-#  chmod +w ${LIB}/$file 2>/dev/null\n-#  chmod a+r ${LIB}/$file 2>/dev/null\n-#fi\n-#\n-#if [ -r ${LIB}/$file ]; then\n-#  echo Fixing $file, nested comments\n-#  sed -e 's/#endif.*/#endif/' ${LIB}/$file > ${LIB}/${file}.sed\n-#  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-#  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-#    rm -f ${LIB}/$file\n-#  fi\n-#fi\n+file=signal.h\n+if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+  chmod +w ${LIB}/$file 2>/dev/null\n+  chmod a+r ${LIB}/$file 2>/dev/null\n+fi\n+\n+if [ -r ${LIB}/$file ]; then\n+  echo Fixing $file, nested comments\n+  sed -e 's/#endif.*/#endif/' ${LIB}/$file > ${LIB}/${file}.sed\n+  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    rm -f ${LIB}/$file\n+  fi\n+fi\n \n # Check for superfluous `static' (in Ultrix 4.2)\n file=machine/cpu.h\n@@ -1010,7 +1032,8 @@ if $LINKS; then\n   done\n fi\n \n-# Prevent premature exit when subsequently processing OTHER_FIXINCLUDES_DIRS.\n-rm ${LIB}/DONE\n+echo 'Cleaning up DONE files.'\n+cd $LIB\n+find . -name DONE -exec rm -f {} ';'\n \n exit 0"}]}