{"sha": "b603e37b4de24c0f1e39eb1e376baddc55f43522", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwM2UzN2I0ZGUyNGMwZjFlMzllYjFlMzc2YmFkZGM1NWY0MzUyMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T09:13:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T09:13:36Z"}, "message": "[multiple changes]\n\n2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch7.adb (Build_Final_List): If the list is being built for a\n\tTaft-Amendment type, place the finalization list in the package body,\n\tto ensure that the tree for the spec is identical whenever it is\n\tcompiled.\n\n2009-07-10  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): Use the full-view when\n\tinheriting attributes from a private Parent_Base.\n\nFrom-SVN: r149464", "tree": {"sha": "545ebdf1d66b3c1307cd152af4c36a628b08b9c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/545ebdf1d66b3c1307cd152af4c36a628b08b9c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b603e37b4de24c0f1e39eb1e376baddc55f43522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b603e37b4de24c0f1e39eb1e376baddc55f43522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b603e37b4de24c0f1e39eb1e376baddc55f43522", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b603e37b4de24c0f1e39eb1e376baddc55f43522/comments", "author": null, "committer": null, "parents": [{"sha": "426908f87ab8ea423221533f456be986f470d555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426908f87ab8ea423221533f456be986f470d555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426908f87ab8ea423221533f456be986f470d555"}], "stats": {"total": 105, "additions": 68, "deletions": 37}, "files": [{"sha": "c40a2434af5f41a862f2baef1bc3a99663002082", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b603e37b4de24c0f1e39eb1e376baddc55f43522", "patch": "@@ -1,3 +1,43 @@\n+2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze pragma, case Task_Name): Analyze argument of\n+\tpragma, to capture global references if the context is generic.\n+\n+\t* exp_ch2.adb (Expand_Discriminant): If a task type discriminant\n+\tappears within the initialization procedure for the corresponding\n+\trecord, replace it with the proper discriminal.\n+\n+2009-07-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb: Do not include object directories or library ALI\n+\tdirectories of library projects in the object path.\n+\n+2009-07-10  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb (Find_Interface_Tag): Reorder processing of incoming\n+\tTyp argument to ensure proper management of access types.\n+\n+2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Final_List): If the list is being built for a\n+\tTaft-Amendment type, place the finalization list in the package body,\n+\tto ensure that the tree for the spec is identical whenever it is\n+\tcompiled.\n+\n+2009-07-10  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Use the full-view when\n+\tinheriting attributes from a private Parent_Base.\n+\n+2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch11.adb (analyze_raise_xxx_error): Remove consecutive raise\n+\tstatements with the same condition.\n+\n+2009-07-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Raise_Accessibility_Error): New procedure\n+\n 2009-07-09  Tom Tromey  <tromey@redhat.com>\n \n \t* raise-gcc.c: Include dwarf2h (unconditionally)."}, {"sha": "44da95fbf0c6b08d636e4749ba438c213271e1d9", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=b603e37b4de24c0f1e39eb1e376baddc55f43522", "patch": "@@ -442,51 +442,31 @@ package body Exp_Ch7 is\n             New_Reference_To\n               (RTE (RE_List_Controller), Loc));\n \n+      --  If the type is declared in a package declaration and designates a\n+      --  Taft amendment type that requires finalization, place declaration\n+      --  of finaliztion list in the body, because no client of the package\n+      --  can create objects of the type and thus make use of this list.\n+\n       if Has_Completion_In_Body (Directly_Designated_Type (Typ))\n         and then In_Package_Body (Current_Scope)\n         and then Nkind (Unit (Cunit (Current_Sem_Unit))) = N_Package_Body\n         and then\n           Nkind (Parent (Declaration_Node (Typ))) = N_Package_Specification\n       then\n-         --  The type is declared in a package declaration and designates a\n-         --  Taft amendment type that requires finalization. In general we\n-         --  assume that TA types are controlled, but we inhibit this\n-         --  worst-case assumption for runtime files, for efficiency reasons\n-         --  (see exp_ch3.adb). The reference to RE_List_Controller may have\n-         --  added a with_clause to the current body. Formally the spec needs\n-         --  the with_clause as well, so we add it now, for use by Codepeer.\n-         --  We verify that we are within a package body, because this code\n-         --  can also be invoked within a package instantiation.\n-\n-         declare\n-            Loc         : constant Source_Ptr := Sloc (Typ);\n-            Spec_Unit   : constant Node_Id :=\n-                            Library_Unit (Cunit (Current_Sem_Unit));\n-            List_Scope  : constant Entity_Id :=\n-                            Scope (RTE (RE_List_Controller));\n-            With_Clause : constant Node_Id :=\n-                            Make_With_Clause (Loc,\n-                              Name => New_Occurrence_Of (List_Scope, Loc));\n-         begin\n-            Set_Library_Unit\n-              (With_Clause, Parent (Unit_Declaration_Node (List_Scope)));\n-            Set_Corresponding_Spec (With_Clause, List_Scope);\n-            Set_Implicit_With (With_Clause);\n-            Append (With_Clause, Context_Items (Spec_Unit));\n-         end;\n-      end if;\n+         Insert_Action (Parent (Designated_Type (Typ)), Decl);\n \n       --  The type may have been frozen already, and this is a late freezing\n       --  action, in which case the declaration must be elaborated at once.\n       --  If the call is for an allocator, the chain must also be created now,\n       --  because the freezing of the type does not build one. Otherwise, the\n       --  declaration is one of the freezing actions for a user-defined type.\n \n-      if Is_Frozen (Typ)\n+      elsif Is_Frozen (Typ)\n         or else (Nkind (N) = N_Allocator\n                   and then Ekind (Etype (N)) = E_Anonymous_Access_Type)\n       then\n          Insert_Action (N, Decl);\n+\n       else\n          Append_Freeze_Action (Typ, Decl);\n       end if;"}, {"sha": "a5d6f97b14f43802501b6d20bba1d6a1eeb7858f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b603e37b4de24c0f1e39eb1e376baddc55f43522/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b603e37b4de24c0f1e39eb1e376baddc55f43522", "patch": "@@ -6987,13 +6987,13 @@ package body Sem_Ch3 is\n       --  Fields inherited from the Parent_Type\n \n       Set_Discard_Names\n-        (Derived_Type, Einfo.Discard_Names      (Parent_Type));\n+        (Derived_Type, Einfo.Discard_Names  (Parent_Type));\n       Set_Has_Specified_Layout\n-        (Derived_Type, Has_Specified_Layout     (Parent_Type));\n+        (Derived_Type, Has_Specified_Layout (Parent_Type));\n       Set_Is_Limited_Composite\n-        (Derived_Type, Is_Limited_Composite     (Parent_Type));\n+        (Derived_Type, Is_Limited_Composite (Parent_Type));\n       Set_Is_Private_Composite\n-        (Derived_Type, Is_Private_Composite     (Parent_Type));\n+        (Derived_Type, Is_Private_Composite (Parent_Type));\n \n       --  Fields inherited from the Parent_Base\n \n@@ -7014,10 +7014,22 @@ package body Sem_Ch3 is\n       --  Fields inherited from the Parent_Base for record types\n \n       if Is_Record_Type (Derived_Type) then\n-         Set_OK_To_Reorder_Components\n-           (Derived_Type, OK_To_Reorder_Components (Parent_Base));\n-         Set_Reverse_Bit_Order\n-           (Derived_Type, Reverse_Bit_Order (Parent_Base));\n+\n+         --  Ekind (Parent_Base) is not necessarily E_Record_Type since\n+         --  Parent_Base can be a private type or private extension.\n+\n+         if Present (Full_View (Parent_Base)) then\n+            Set_OK_To_Reorder_Components\n+              (Derived_Type,\n+               OK_To_Reorder_Components (Full_View (Parent_Base)));\n+            Set_Reverse_Bit_Order\n+              (Derived_Type, Reverse_Bit_Order (Full_View (Parent_Base)));\n+         else\n+            Set_OK_To_Reorder_Components\n+              (Derived_Type, OK_To_Reorder_Components (Parent_Base));\n+            Set_Reverse_Bit_Order\n+              (Derived_Type, Reverse_Bit_Order (Parent_Base));\n+         end if;\n       end if;\n \n       --  Direct controlled types do not inherit Finalize_Storage_Only flag\n@@ -7049,7 +7061,6 @@ package body Sem_Ch3 is\n          else\n             Set_Component_Alignment\n               (Derived_Type, Component_Alignment (Parent_Base));\n-\n             Set_C_Pass_By_Copy\n               (Derived_Type, C_Pass_By_Copy      (Parent_Base));\n          end if;"}]}