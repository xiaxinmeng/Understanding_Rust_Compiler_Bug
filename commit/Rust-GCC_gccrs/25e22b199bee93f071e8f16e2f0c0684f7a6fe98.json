{"sha": "25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlMjJiMTk5YmVlOTNmMDcxZThmMTZlMmYwYzA2ODRmN2E2ZmU5OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-10-17T14:34:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-10-17T14:34:15Z"}, "message": "i386: Add clear_ratio to processor_costs\n\ni386.h has\n\n #define CLEAR_RATIO(speed) ((speed) ? MIN (6, ix86_cost->move_ratio) : 2)\n\nIt is impossible to have CLEAR_RATIO > 6.  This patch adds clear_ratio\nto processor_costs, sets it to the minimum of 6 and move_ratio in all\ncost models and defines CLEAR_RATIO with clear_ratio.\n\n\t* config/i386/i386.h (processor_costs): Add clear_ratio.\n\t(CLEAR_RATIO): Remove MIN and use ix86_cost->clear_ratio.\n\t* config/i386/x86-tune-costs.h: Set clear_ratio to the minimum\n\tof 6 and move_ratio in all cost models.\n\nFrom-SVN: r277114", "tree": {"sha": "a0f9e6750cfcca0834f5fa08a27d27c713c45153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f9e6750cfcca0834f5fa08a27d27c713c45153"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47519a5687d48af4b932d54b0525fafcdc0e48d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47519a5687d48af4b932d54b0525fafcdc0e48d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47519a5687d48af4b932d54b0525fafcdc0e48d6"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "7cc72d7ee021b23b817c009fed3a50225df1196c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "patch": "@@ -1,3 +1,10 @@\n+2019-10-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.h (processor_costs): Add clear_ratio.\n+\t(CLEAR_RATIO): Remove MIN and use ix86_cost->clear_ratio.\n+\t* config/i386/x86-tune-costs.h: Set clear_ratio to the minimum\n+\tof 6 and move_ratio in all cost models.\n+\n 2019-10-17  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (check_reduction_path): Compute reduction"}, {"sha": "afa0aa83ddf305c5130fbd8948c92cd4c7876656", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "patch": "@@ -291,6 +291,8 @@ struct processor_costs {\n   const int large_insn;\t\t/* insns larger than this cost more */\n   const int move_ratio;\t\t/* The threshold of number of scalar\n \t\t\t\t   memory-to-memory move insns.  */\n+  const int clear_ratio;\t/* The threshold of number of scalar\n+\t\t\t\t   memory clearing insns.  */\n   const int int_load[3];\t/* cost of loading integer registers\n \t\t\t\t   in QImode, HImode and SImode relative\n \t\t\t\t   to reg-reg move (2).  */\n@@ -1947,7 +1949,7 @@ typedef struct ix86_args {\n /* If a clear memory operation would take CLEAR_RATIO or more simple\n    move-instruction sequences, we will do a clrmem or libcall instead.  */\n \n-#define CLEAR_RATIO(speed) ((speed) ? MIN (6, ix86_cost->move_ratio) : 2)\n+#define CLEAR_RATIO(speed) ((speed) ? ix86_cost->clear_ratio : 2)\n \n /* Define if shifts truncate the shift count which implies one can\n    omit a sign-extension or zero-extension of a shift count."}, {"sha": "99816aeaebc1fcaa900807db156149613c4aeb68", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e22b199bee93f071e8f16e2f0c0684f7a6fe98/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=25e22b199bee93f071e8f16e2f0c0684f7a6fe98", "patch": "@@ -81,6 +81,7 @@ struct processor_costs ix86_size_cost = {/* costs for tuning for size */\n   COSTS_N_BYTES (3),\t\t\t/* cost of movzx */\n   0,\t\t\t\t\t/* \"large\" insn */\n   2,\t\t\t\t\t/* MOVE_RATIO */\n+  2,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 2, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -185,6 +186,7 @@ struct processor_costs i386_cost = {\t/* 386 specific costs */\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   15,\t\t\t\t\t/* \"large\" insn */\n   3,\t\t\t\t\t/* MOVE_RATIO */\n+  3,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 4, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -286,6 +288,7 @@ struct processor_costs i486_cost = {\t/* 486 specific costs */\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   15,\t\t\t\t\t/* \"large\" insn */\n   3,\t\t\t\t\t/* MOVE_RATIO */\n+  3,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 4, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -389,6 +392,7 @@ struct processor_costs pentium_cost = {\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   6,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 4, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -483,6 +487,7 @@ struct processor_costs lakemont_cost = {\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 4, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -592,6 +597,7 @@ struct processor_costs pentiumpro_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   6,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -692,6 +698,7 @@ struct processor_costs geode_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   4,\t\t\t\t\t/* MOVE_RATIO */\n+  4,\t\t\t\t\t/* CLEAR_RATIO */\n   {2, 2, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -792,6 +799,7 @@ struct processor_costs k6_cost = {\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   4,\t\t\t\t\t/* MOVE_RATIO */\n+  4,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 5, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -898,6 +906,7 @@ struct processor_costs athlon_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {3, 4, 3},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1006,6 +1015,7 @@ struct processor_costs k8_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {3, 4, 3},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1127,6 +1137,7 @@ struct processor_costs amdfam10_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {3, 4, 3},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1240,6 +1251,7 @@ const struct processor_costs bdver_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {8, 8, 8},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1364,6 +1376,7 @@ struct processor_costs znver1_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx.  */\n   8,\t\t\t\t\t/* \"large\" insn.  */\n   9,\t\t\t\t\t/* MOVE_RATIO.  */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {6, 6, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1503,6 +1516,7 @@ struct processor_costs znver2_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx.  */\n   8,\t\t\t\t\t/* \"large\" insn.  */\n   9,\t\t\t\t\t/* MOVE_RATIO.  */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {6, 6, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1635,6 +1649,7 @@ struct processor_costs skylake_cost = {\n   COSTS_N_INSNS (0),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1740,6 +1755,7 @@ const struct processor_costs btver1_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {6, 8, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1843,6 +1859,7 @@ const struct processor_costs btver2_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   9,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {8, 8, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -1945,6 +1962,7 @@ struct processor_costs pentium4_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   16,\t\t\t\t\t/* \"large\" insn */\n   6,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 5, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2050,6 +2068,7 @@ struct processor_costs nocona_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   16,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2153,6 +2172,7 @@ struct processor_costs atom_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {6, 6, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2256,6 +2276,7 @@ struct processor_costs slm_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {8, 8, 8},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2359,6 +2380,7 @@ struct processor_costs intel_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2469,6 +2491,7 @@ struct processor_costs generic_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {6, 6, 6},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n@@ -2585,6 +2608,7 @@ struct processor_costs core_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n+  6,\t\t\t\t\t/* CLEAR_RATIO */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */"}]}