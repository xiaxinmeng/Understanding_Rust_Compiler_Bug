{"sha": "3f02735bcff518fbab938e98795f81d0a2fb7603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwMjczNWJjZmY1MThmYmFiOTM4ZTk4Nzk1ZjgxZDBhMmZiNzYwMw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2015-07-23T03:32:47Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2015-07-23T03:32:47Z"}, "message": "t-msp430 (MULTILIB_DIRNAMES): Remove trailing slashes.\n\n* config/msp430/t-msp430 (MULTILIB_DIRNAMES): Remove trailing\nslashes.\n\n* config/msp430/msp430.md (ashlhi3): Optimize shifts of subregs.\n(ashrhi3): Likewise.\n(lshrhi3): Likewise.\n(movhi): Take advantage of zero-extend to load small constants.\n(movpsi): Likewise.\n(and<mode>3): Likewise.\n(zero_extendqihi2): Likewise.\n(zero_extendqisi2): New.\n* config/msp430/constraints.md (N,O): New.\n* config/msp430/msp430.h (WORD_REGISTER_OPERATIONS): Define.\n\nFrom-SVN: r226085", "tree": {"sha": "134a86acb07ed73712d7b520669862ffd2c11f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/134a86acb07ed73712d7b520669862ffd2c11f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f02735bcff518fbab938e98795f81d0a2fb7603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f02735bcff518fbab938e98795f81d0a2fb7603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f02735bcff518fbab938e98795f81d0a2fb7603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f02735bcff518fbab938e98795f81d0a2fb7603/comments", "author": null, "committer": null, "parents": [{"sha": "bcf122bec248a353ee475997211db0e8ab382f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf122bec248a353ee475997211db0e8ab382f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf122bec248a353ee475997211db0e8ab382f2e"}], "stats": {"total": 71, "additions": 60, "deletions": 11}, "files": [{"sha": "b926ed038071e9d5e91420fd26d2abfa70b57a3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f02735bcff518fbab938e98795f81d0a2fb7603", "patch": "@@ -1,3 +1,19 @@\n+2015-07-22  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/msp430/t-msp430 (MULTILIB_DIRNAMES): Remove trailing\n+\tslashes.\n+\n+\t* config/msp430/msp430.md (ashlhi3): Optimize shifts of subregs.\n+\t(ashrhi3): Likewise.\n+\t(lshrhi3): Likewise.\n+\t(movhi): Take advantage of zero-extend to load small constants.\n+\t(movpsi): Likewise.\n+\t(and<mode>3): Likewise.\n+\t(zero_extendqihi2): Likewise.\n+\t(zero_extendqisi2): New.\n+\t* config/msp430/constraints.md (N,O): New.\n+\t* config/msp430/msp430.h (WORD_REGISTER_OPERATIONS): Define.\n+\n 2015-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/66954"}, {"sha": "30f944c790e193998c4d3e3c415cdac8540fa85d", "filename": "gcc/config/msp430/constraints.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fconstraints.md?ref=3f02735bcff518fbab938e98795f81d0a2fb7603", "patch": "@@ -39,6 +39,16 @@\n   (and (match_code \"const_int\")\n        (match_test \"IN_RANGE (ival, 1, 4)\")))\n \n+(define_constraint \"N\"\n+  \"Integer constant 0-255.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (ival, 0, 255)\")))\n+\n+(define_constraint \"O\"\n+  \"Integer constant 256-65535.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (ival, 256, 65535)\")))\n+\n ;; We do not allow arbitrary constants, eg symbols or labels,\n ;; because their address may be above the 16-bit address limit\n ;; supported by the offset used in the MOVA instruction."}, {"sha": "2c5d99b9953f6bc1a4074ff6483b0fcf51b27691", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=3f02735bcff518fbab938e98795f81d0a2fb7603", "patch": "@@ -166,7 +166,7 @@ extern bool msp430x;\n #define HAS_LONG_UNCOND_BRANCH\t\t0\n \n #define LOAD_EXTEND_OP(M)\t\tZERO_EXTEND\n-/*#define WORD_REGISTER_OPERATIONS\t1*/\n+#define WORD_REGISTER_OPERATIONS\t1\n \n #define MOVE_MAX \t\t\t8\n #define STARTING_FRAME_OFFSET\t\t0"}, {"sha": "4b48d6aef5e2e2d38384b3ab6476c16a53fe1d47", "filename": "gcc/config/msp430/msp430.md", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.md?ref=3f02735bcff518fbab938e98795f81d0a2fb7603", "patch": "@@ -199,10 +199,11 @@\n )\n \n (define_insn \"movhi\"\n-  [(set (match_operand:HI 0 \"msp_nonimmediate_operand\" \"=rYs,rm\")\n-\t(match_operand:HI 1 \"msp_general_operand\" \"riYs,rmi\"))]\n+  [(set (match_operand:HI 0 \"msp_nonimmediate_operand\" \"=r,rYs,rm\")\n+\t(match_operand:HI 1 \"msp_general_operand\" \"N,riYs,rmi\"))]\n   \"\"\n   \"@\n+  MOV.B\\t%1, %0\n   MOV.W\\t%1, %0\n   MOV%X0.W\\t%1, %0\"\n )\n@@ -242,10 +243,12 @@\n \n ;; Some MOVX.A cases can be done with MOVA, this is only a few of them.\n (define_insn \"movpsi\"\n-  [(set (match_operand:PSI 0 \"msp_nonimmediate_operand\" \"=r,Ya,rm\")\n-\t(match_operand:PSI 1 \"msp_general_operand\" \"riYa,r,rmi\"))]\n+  [(set (match_operand:PSI 0 \"msp_nonimmediate_operand\" \"=r,r,r,Ya,rm\")\n+\t(match_operand:PSI 1 \"msp_general_operand\" \"N,O,riYa,r,rmi\"))]\n   \"\"\n   \"@\n+  MOV.B\\t%1, %0\n+  MOV.W\\t%1, %0\n   MOVA\\t%1, %0\n   MOVA\\t%1, %0\n   MOVX.A\\t%1, %0\")\n@@ -500,11 +503,12 @@\n )\n \n (define_insn \"and<mode>3\"\n-  [(set (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"=rYs,rm\")\n-\t(and:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"%0,0\")\n-\t\t (match_operand:QHI 2 \"msp_general_operand\" \"riYs,rmi\")))]\n+  [(set (match_operand:QHI 0 \"msp_nonimmediate_operand\" \"=r,rYs,rm\")\n+\t(and:QHI (match_operand:QHI 1 \"msp_nonimmediate_operand\" \"%0,0,0\")\n+\t\t (match_operand:QHI 2 \"msp_general_operand\" \"N,riYs,rmi\")))]\n   \"\"\n   \"@\n+   AND%x0.B\\t%2, %0\n    AND%x0%b0\\t%2, %0\n    AND%X0%b0\\t%2, %0\"\n )\n@@ -549,11 +553,13 @@\n )\n \n (define_insn \"zero_extendqihi2\"\n-  [(set (match_operand:HI                 0 \"msp_nonimmediate_operand\" \"=rYs,m\")\n-\t(zero_extend:HI (match_operand:QI 1 \"msp_nonimmediate_operand\" \"0,0\")))]\n+  [(set (match_operand:HI                 0 \"msp_nonimmediate_operand\" \"=rYs,r,r,m\")\n+\t(zero_extend:HI (match_operand:QI 1 \"msp_nonimmediate_operand\" \"0,rYs,m,0\")))]\n   \"\"\n   \"@\n    AND\\t#0xff, %0\n+   MOV.B\\t%1, %0\n+   MOV%X0.B\\t%1, %0\n    AND%X0\\t#0xff, %0\"\n )\n \n@@ -602,6 +608,14 @@\n ;; to missing patterns, despite us not having opcodes for these\n ;; patterns.  Doing these manually allows for alternate optimization\n ;; paths.\n+\n+(define_insn \"zero_extendqisi2\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r\")\n+\t(zero_extend:SI (subreg:HI (match_operand:QI 1 \"nonimmediate_operand\" \"rm\") 0)))]\n+  \"msp430x\"\n+  \"MOV.B\\t%1,%L0 { CLR\\t%H0\"\n+)\n+\n (define_insn \"zero_extendhisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(zero_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"0,r\")))]\n@@ -734,6 +748,9 @@\n \t\t   (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n+    if (GET_CODE (operands[1]) == SUBREG\n+        && REG_P (XEXP (operands[1], 0)))\n+      operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])\n         && REG_P (operands[1])\n@@ -800,6 +817,9 @@\n \t\t     (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n+    if (GET_CODE (operands[1]) == SUBREG\n+        && REG_P (XEXP (operands[1], 0)))\n+      operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])\n         && REG_P (operands[1])\n@@ -882,6 +902,9 @@\n \t\t     (match_operand:HI 2 \"general_operand\")))]\n   \"\"\n   {\n+    if (GET_CODE (operands[1]) == SUBREG\n+        && REG_P (XEXP (operands[1], 0)))\n+      operands[1] = force_reg (HImode, operands[1]);\n     if (msp430x\n         && REG_P (operands[0])\n         && REG_P (operands[1])"}, {"sha": "dfdd827d583c2d5a14a7c5750e005cbc1362aa70", "filename": "gcc/config/msp430/t-msp430", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f02735bcff518fbab938e98795f81d0a2fb7603/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Ft-msp430?ref=3f02735bcff518fbab938e98795f81d0a2fb7603", "patch": "@@ -255,7 +255,7 @@ MULTILIB_EXCEPTIONS = mcpu=msp430/mlarge\n # Multilibs for different types of hardware multiply support:\n \n MULTILIB_OPTIONS   += mhwmult=none/mhwmult=32bit/mhwmult=f5series\n-MULTILIB_DIRNAMES  +=        nomul/        32mul/        f5mul\n+MULTILIB_DIRNAMES  +=        nomul         32mul         f5mul\n \n MULTILIB_EXCEPTIONS += mcpu=msp430/mlarge/mhwmult=none\n MULTILIB_EXCEPTIONS += mcpu=msp430/mlarge/mhwmult=32bit"}]}