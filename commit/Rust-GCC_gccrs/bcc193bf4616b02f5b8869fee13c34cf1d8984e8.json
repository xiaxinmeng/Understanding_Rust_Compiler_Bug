{"sha": "bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNjMTkzYmY0NjE2YjAyZjViODg2OWZlZTEzYzM0Y2YxZDg5ODRlOA==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2013-06-13T03:04:58Z"}, "committer": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2013-06-13T03:04:58Z"}, "message": "re PR libstdc++/56430 (In __airy: return-statement with a value, in function returning 'void'.)\n\n2013-06-12  Ed Smith-Rowland  <3dw4rd@verizon.net>\n\n\tPR libstdc++/56430\n\t* include/tr1/modified_bessel_func.tcc (__airy): Remove return\n\tfrom void function.\n\t(__gnu_cxx::__airy_ai(), __gnu_cxx::__airy_bi()): New functions.\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t10_cyl_bessel_k/airy.cc: New.\n\nFrom-SVN: r200054", "tree": {"sha": "4ee8430b2647bf2a5ffa74912381b4745ae53906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ee8430b2647bf2a5ffa74912381b4745ae53906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5665a4daaf486c3b2d30708aff577e3169146249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5665a4daaf486c3b2d30708aff577e3169146249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5665a4daaf486c3b2d30708aff577e3169146249"}], "stats": {"total": 108, "additions": 100, "deletions": 8}, "files": [{"sha": "b8896bed4f17ea4cf2539a9457f9d522c5028a45", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "patch": "@@ -1,3 +1,12 @@\n+2013-06-12  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR libstdc++/56430\n+\t* include/tr1/modified_bessel_func.tcc (__airy): Remove return\n+\tfrom void function.\n+\t(__gnu_cxx::__airy_ai(), __gnu_cxx::__airy_bi()): New functions.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t10_cyl_bessel_k/airy.cc: New.\n+\n 2013-06-11  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tFix library literals error involving namespace __detail."}, {"sha": "830bf1686084221116d717a2b72b4598553983ac", "filename": "libstdc++-v3/include/tr1/modified_bessel_func.tcc", "status": "modified", "additions": 54, "deletions": 8, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc?ref=bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "patch": "@@ -357,12 +357,13 @@ namespace tr1\n      *           derivatives @f$ Ai'(x) @f$ and @f$ Bi(x) @f$\n      *           respectively.\n      *\n-     *   @param  __n  The order of the Airy functions.\n      *   @param  __x  The argument of the Airy functions.\n-     *   @param  __i_n  The output Airy function.\n-     *   @param  __k_n  The output Airy function.\n-     *   @param  __ip_n  The output derivative of the Airy function.\n-     *   @param  __kp_n  The output derivative of the Airy function.\n+     *   @param  __Ai  The output Airy function of the first kind.\n+     *   @param  __Bi  The output Airy function of the second kind.\n+     *   @param  __Aip  The output derivative of the Airy function\n+     *                  of the first kind.\n+     *   @param  __Bip  The output derivative of the Airy function\n+     *                  of the second kind.\n      */\n     template <typename _Tp>\n     void\n@@ -372,9 +373,7 @@ namespace tr1\n       const _Tp __rootx = std::sqrt(__absx);\n       const _Tp __z = _Tp(2) * __absx * __rootx / _Tp(3);\n \n-      if (__isnan(__x))\n-        return std::numeric_limits<_Tp>::quiet_NaN();\n-      else if (__x > _Tp(0))\n+      if (__x > _Tp(0))\n         {\n           _Tp __I_nu, __Ip_nu, __K_nu, __Kp_nu;\n \n@@ -432,4 +431,51 @@ namespace tr1\n }\n }\n \n+\n+namespace __gnu_cxx\n+{\n+\n+  /**\n+   *   @brief  Compute the Airy function of the first kind @f$ Ai(x) @f$.\n+   *\n+   *   @param  __x  The argument of the Airy function.\n+   *   @return  The Airy function of the first kind at x.\n+   */\n+  template<typename _Tp>\n+    _Tp\n+    __airy_ai(_Tp __x)\n+    {\n+      if (__isnan(__x))\n+        return std::numeric_limits<_Tp>::quiet_NaN();\n+      else\n+        {\n+          _Tp __Ai, __Bi, __Aip, __Bip;\n+          std::tr1::__detail::__airy(__x, __Ai, __Bi, __Aip, __Bip);\n+          return __Ai;\n+        }\n+    }\n+\n+\n+  /**\n+   *   @brief  Compute the Airy function of the second kind @f$ Bi(x) @f$.\n+   *\n+   *   @param  __x  The argument of the Airy function.\n+   *   @return  The Airy function of the second kind at x.\n+   */\n+  template<typename _Tp>\n+    _Tp\n+    __airy_bi(_Tp __x)\n+    {\n+      if (__isnan(__x))\n+        return std::numeric_limits<_Tp>::quiet_NaN();\n+      else\n+        {\n+          _Tp __Ai, __Bi, __Aip, __Bip;\n+          std::tr1::__detail::__airy(__x, __Ai, __Bi, __Aip, __Bip);\n+          return __Bi;\n+        }\n+    }\n+\n+} // namespace __gnu_cxx\n+\n #endif // _GLIBCXX_TR1_MODIFIED_BESSEL_FUNC_TCC"}, {"sha": "57d75e5ec272f7bc1023a4266dadaa88d22d46ca", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/10_cyl_bessel_k/airy.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fairy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc193bf4616b02f5b8869fee13c34cf1d8984e8/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fairy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fairy.cc?ref=bcc193bf4616b02f5b8869fee13c34cf1d8984e8", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile }\n+\n+// 2013-02-13  Edward Smith-Rowland <3dw4rd@verizon.net>\n+//\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/56430 - In __airy: return-statement with a value,\n+//\t\t\t\t   in function returning 'void'.\n+\n+#include <tr1/cmath>\n+\n+int\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  double x, Ai, Bi, Aip, Bip;\n+  x = 1.0;\n+  std::tr1::__detail::__airy(x, Ai, Bi, Aip, Bip);\n+\n+  double Ai2 = __gnu_cxx::__airy_ai(x);\n+  double Bi2 = __gnu_cxx::__airy_bi(x);\n+}"}]}