{"sha": "aa4d56e2ce1d89599654d33051486cb58aadbc2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZDU2ZTJjZTFkODk1OTk2NTRkMzMwNTE0ODZjYjU4YWFkYmMyZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-19T23:10:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-19T23:10:55Z"}, "message": "compiler: don't export bodies for functions marked \"go:noinline\"\n    \n    The current Mark_inline_candidates helper looks only at budget when\n    deciding to mark a function or method as inline (with the proviso that\n    IR constructs not yet supported by the inliner are given artificially\n    high cost). This patch changes the helper to also look at whether a\n    function has the \"go:noinline\" pragma; if it does have the pragma\n    there is no point putting it into the export data (it will just make\n    the export data bigger).\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/186923\n\nFrom-SVN: r273611", "tree": {"sha": "afb15aed0fb2e6dea6137505fac6a2629ff0aa19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb15aed0fb2e6dea6137505fac6a2629ff0aa19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4d56e2ce1d89599654d33051486cb58aadbc2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4d56e2ce1d89599654d33051486cb58aadbc2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4d56e2ce1d89599654d33051486cb58aadbc2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4d56e2ce1d89599654d33051486cb58aadbc2e/comments", "author": null, "committer": null, "parents": [{"sha": "c35504626ec008d97b61e4bda17038333d51a8f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35504626ec008d97b61e4bda17038333d51a8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c35504626ec008d97b61e4bda17038333d51a8f2"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2c536025f28331c950dbcab2d7569540ac365dc5", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4d56e2ce1d89599654d33051486cb58aadbc2e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4d56e2ce1d89599654d33051486cb58aadbc2e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=aa4d56e2ce1d89599654d33051486cb58aadbc2e", "patch": "@@ -1,4 +1,4 @@\n-4df7c8d7af894ee93f50c3a50debdcf4e369a2c6\n+e242929304e7a524ced56dc94605bbf6d83e6489\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "30523f7209a415e9855f5f9c7fb18b4659f8afb1", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4d56e2ce1d89599654d33051486cb58aadbc2e/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4d56e2ce1d89599654d33051486cb58aadbc2e/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=aa4d56e2ce1d89599654d33051486cb58aadbc2e", "patch": "@@ -5109,6 +5109,8 @@ int\n Mark_inline_candidates::function(Named_object* no)\n {\n   Function* func = no->func_value();\n+  if ((func->pragmas() & GOPRAGMA_NOINLINE) != 0)\n+    return TRAVERSE_CONTINUE;\n   int budget = budget_heuristic;\n   Inline_within_budget iwb(&budget);\n   func->block()->traverse(&iwb);\n@@ -5138,6 +5140,8 @@ Mark_inline_candidates::type(Type* t)\n       Named_object* no = *p;\n       go_assert(no->is_function());\n       Function *func = no->func_value();\n+      if ((func->pragmas() & GOPRAGMA_NOINLINE) != 0)\n+        continue;\n       int budget = budget_heuristic;\n       Inline_within_budget iwb(&budget);\n       func->block()->traverse(&iwb);"}]}