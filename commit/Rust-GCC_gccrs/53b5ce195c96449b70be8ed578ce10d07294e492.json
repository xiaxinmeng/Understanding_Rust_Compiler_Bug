{"sha": "53b5ce195c96449b70be8ed578ce10d07294e492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiNWNlMTk1Yzk2NDQ5YjcwYmU4ZWQ1NzhjZTEwZDA3Mjk0ZTQ5Mg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1999-04-23T19:41:03Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "1999-04-23T19:41:03Z"}, "message": "acconfig.h (HAVE_GAS_FILDS_FISTS): Add.\n\n\t* acconfig.h (HAVE_GAS_FILDS_FISTS): Add.\n\t* configure.in: Check assembler instructions.\n\t* configure: Rebuild.\n\t* config.in: Likewise.\n\t* i386.md (floathisf2, floathidf2, floathixf2): New patterns.\n\t* i386.c (print_operand): Use the proper suffix for a 387 HImode\n\toperand.  Abort if a 387 operand has an unsupported size.\n\nFrom-SVN: r26608", "tree": {"sha": "9c863568a597265314722ecb9fada3fd21ed7fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c863568a597265314722ecb9fada3fd21ed7fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b5ce195c96449b70be8ed578ce10d07294e492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b5ce195c96449b70be8ed578ce10d07294e492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b5ce195c96449b70be8ed578ce10d07294e492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b5ce195c96449b70be8ed578ce10d07294e492/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c020733f4af9a0045f152013a7063d8dae1c1fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c020733f4af9a0045f152013a7063d8dae1c1fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c020733f4af9a0045f152013a7063d8dae1c1fd"}], "stats": {"total": 188, "additions": 183, "deletions": 5}, "files": [{"sha": "dd95dcc41451ef5389d133381d424ad3e7817c11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -1,3 +1,13 @@\n+Fri Apr 23 22:35:41 EDT 1999  John Wehle  (john@feith.com)\n+\n+\t* acconfig.h (HAVE_GAS_FILDS_FISTS): Add.\n+\t* configure.in: Check assembler instructions.\n+\t* configure: Rebuild.\n+\t* config.in: Likewise.\n+\t* i386.md (floathisf2, floathidf2, floathixf2): New patterns.\n+\t* i386.c (print_operand): Use the proper suffix for a 387 HImode\n+\toperand.  Abort if a 387 operand has an unsupported size.\n+\n Fri Apr 23 16:57:40 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (alpha_write_verstamp): Mark `file' unused."}, {"sha": "68bee4f7cbdb621ec728c251565171059c9cbe84", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -33,6 +33,9 @@\n    emitting at the beginning of your section */\n #undef HAVE_GAS_SUBSECTION_ORDERING\n \n+/* Define if your assembler uses the old HImode fild and fist notation.  */\n+#undef HAVE_GAS_FILDS_FISTS\n+\n /* Define if you have a working <inttypes.h> header file.  */\n #undef HAVE_INTTYPES_H\n "}, {"sha": "0b14498ec93322dc16c9b0ca7f54501a23a43ebd", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -34,6 +34,9 @@\n    emitting at the beginning of your section */\n #undef HAVE_GAS_SUBSECTION_ORDERING\n \n+/* Define if your assembler uses the old HImode fild and fist notation.  */\n+#undef HAVE_GAS_FILDS_FISTS\n+\n /* Define if you have a working <inttypes.h> header file.  */\n #undef HAVE_INTTYPES_H\n "}, {"sha": "a63718e97b936bc5c24eef80feb5fee20292f741", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -3382,12 +3382,10 @@ print_operand (file, x, code)\n \t  /* this is the size of op from size of operand */\n \t  switch (GET_MODE_SIZE (GET_MODE (x)))\n \t    {\n-\t    case 1:\n-\t      PUT_OP_SIZE ('B', 'b', file);\n-\t      return;\n-\n \t    case 2:\n-\t      PUT_OP_SIZE ('W', 'w', file);\n+#ifdef HAVE_GAS_FILDS_FISTS\n+\t      PUT_OP_SIZE ('W', 's', file);\n+#endif\n \t      return;\n \n \t    case 4:\n@@ -3417,6 +3415,9 @@ print_operand (file, x, code)\n \n \t      PUT_OP_SIZE ('Q', 'l', file);\n \t      return;\n+\n+\t    default:\n+\t      abort ();\n \t    }\n \n \tcase 'b':"}, {"sha": "2d02ef69ef20dfc98c04b42b5eac5dff802e0ff8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -2897,6 +2897,47 @@\n   \"* return AS1 (fild%z1,%1);\"\n   [(set_attr \"type\" \"fpop\")])\n \n+(define_expand \"floathisf2\"\n+  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t\t   (float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))\n+\t      (clobber (match_dup 2))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (HImode, 0);\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,!r\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))]\n+  \"TARGET_80387\"\n+  \"#\")\n+\n+(define_split\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:HI 1 \"memory_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 0)\n+\t(float:SF (match_dup 1)))]\n+  \"\")\n+\n+(define_split\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:HI 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (set (match_dup 0)\n+\t(float:SF (match_dup 2)))]\n+  \"\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(float:SF (match_operand:HI 1 \"memory_operand\" \"m\")))]\n+  \"TARGET_80387\"\n+  \"* return AS1 (fild%z1,%1);\"\n+  [(set_attr \"type\" \"fpop\")])\n+\n (define_expand \"floatdisf2\"\n   [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t\t   (float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))\n@@ -2979,6 +3020,47 @@\n   \"* return AS1 (fild%z1,%1);\"\n   [(set_attr \"type\" \"fpop\")])\n \n+(define_expand \"floathidf2\"\n+  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t\t   (float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))\n+\t      (clobber (match_dup 2))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (HImode, 0);\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,!r\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))]\n+  \"TARGET_80387\"\n+  \"#\")\n+\n+(define_split\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float:DF (match_operand:HI 1 \"memory_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 0)\n+\t(float:DF (match_dup 1)))]\n+  \"\")\n+\n+(define_split\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float:DF (match_operand:HI 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (set (match_dup 0)\n+\t(float:DF (match_dup 2)))]\n+  \"\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(float:DF (match_operand:HI 1 \"memory_operand\" \"m\")))]\n+  \"TARGET_80387\"\n+  \"* return AS1 (fild%z1,%1);\"\n+  [(set_attr \"type\" \"fpop\")])\n+\n (define_expand \"floatdidf2\"\n   [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t\t   (float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))\n@@ -3061,6 +3143,47 @@\n   \"* return AS1 (fild%z1,%1);\"\n   [(set_attr \"type\" \"fpop\")])\n \n+(define_expand \"floathixf2\"\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t\t   (float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))\n+\t      (clobber (match_dup 2))])]\n+  \"TARGET_80387\"\n+  \"operands[2] = assign_386_stack_local (HImode, 0);\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n+\t(float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"m,!r\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))]\n+  \"TARGET_80387\"\n+  \"#\")\n+\n+(define_split\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(float:XF (match_operand:HI 1 \"memory_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 0)\n+\t(float:XF (match_dup 1)))]\n+  \"\")\n+\n+(define_split\n+  [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t(float:XF (match_operand:HI 1 \"register_operand\" \"\")))\n+   (clobber (match_operand:HI 2 \"memory_operand\" \"\"))]\n+  \"TARGET_80387 && reload_completed\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (set (match_dup 0)\n+\t(float:XF (match_dup 2)))]\n+  \"\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(float:XF (match_operand:HI 1 \"memory_operand\" \"m\")))]\n+  \"TARGET_80387\"\n+  \"* return AS1 (fild%z1,%1);\"\n+  [(set_attr \"type\" \"fpop\")])\n+\n (define_expand \"floatdixf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t\t   (float:XF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))"}, {"sha": "9ccf55430b2080364189e64f10753ea8bd1fbc7c", "filename": "gcc/configure", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -8126,6 +8126,27 @@ EOF\n fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n+echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n+echo \"configure:8131: checking assembler instructions\" >&5\n+gcc_cv_as_instructions=\n+if test x$gcc_cv_as != x; then\n+\tset \"filds fists\" \"filds mem; fists mem\"\n+\twhile test $# -gt 0\n+  \tdo\n+\t\techo \"$2\" > conftest.s\n+\t\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\t\tgcc_cv_as_instructions=${gcc_cv_as_instructions}$1\" \"\n+\t\t\tcat >> confdefs.h <<EOF\n+#define HAVE_GAS_`echo \"$1\" | tr 'a-z ' 'A-Z_'` 1\n+EOF\n+\n+\t\tfi\n+\t\tshift 2\n+\tdone\n+\trm -f conftest.s conftest.o\n+fi\n+echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n+\n # Figure out what language subdirectories are present.\n # Look if the user specified --enable-languages=\"...\"; if not, use\n # the environment variable $LANGUAGES if defined. $LANGUAGES might"}, {"sha": "e343d27860fab5b9b9bc06c18b3d7a43f5acdf08", "filename": "gcc/configure.in", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b5ce195c96449b70be8ed578ce10d07294e492/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=53b5ce195c96449b70be8ed578ce10d07294e492", "patch": "@@ -3975,6 +3975,23 @@ EOF\n fi\n AC_MSG_RESULT($gcc_cv_as_subsections)\n \n+AC_MSG_CHECKING(assembler instructions)\n+gcc_cv_as_instructions=\n+if test x$gcc_cv_as != x; then\n+\tset \"filds fists\" \"filds mem; fists mem\"\n+\twhile test $# -gt 0\n+  \tdo\n+\t\techo \"$2\" > conftest.s\n+\t\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\t\tgcc_cv_as_instructions=${gcc_cv_as_instructions}$1\" \"\n+\t\t\tAC_DEFINE_UNQUOTED(HAVE_GAS_`echo \"$1\" | tr '[a-z ]' '[A-Z_]'`)\n+\t\tfi\n+\t\tshift 2\n+\tdone\n+\trm -f conftest.s conftest.o\n+fi\n+AC_MSG_RESULT($gcc_cv_as_instructions)\n+\n # Figure out what language subdirectories are present.\n # Look if the user specified --enable-languages=\"...\"; if not, use\n # the environment variable $LANGUAGES if defined. $LANGUAGES might"}]}