{"sha": "d2db2e6b0563787bcc40c025ae5888020ded364f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkYjJlNmIwNTYzNzg3YmNjNDBjMDI1YWU1ODg4MDIwZGVkMzY0Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-05-23T16:20:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-05-23T16:20:53Z"}, "message": "cgraphunit.c (symbol_table::process_new_functions): Update.\n\n\n\t* cgraphunit.c (symbol_table::process_new_functions): Update.\n\t* ipa-fnsummary.c (pass_data_inline_parameters): Remove.\n\t(inline_generate_summary): Rename to ...\n\t(ipa_fn_summary_generate): ... this one.\n\t(inline_read_summary): Rename to ...\n\t(ipa_fn_summary_read): ... this one.\n\t(inline_write_summary): Rename to ...\n\t(ipa_fn_summary_write): ... this one.\n\t(inline_free_summary): Rename to ...\n\t(ipa_free_fn_summary): ... this one.\n\t(pass_data_local_fn_summary, pass_local_fn_summary,\n\tmake_pass_local_fn_summary, pass_data_ipa_free_fn_summary,\n\tpass_ipa_free_fn_summary, make_pass_ipa_free_fn_summary,\n\tpass_data_ipa_fn_summary, pass_ipa_fn_summary,\n\tmake_pass_ipa_fn_summary): New.\n\t* ipa-fnsummary.h (inline_generate_summary, inline_read_summary,\n\tinline_write_summary, inline_free_summary): Remove.\n\t(ipa_free_fn_summary) : New.\n\t* ipa-inline.c (ipa_inline): Update.\n\t(pass_ipa_inline): Do not generate summaries.\n\t* ipa.c (pass_data_ipa_free_fn_summary, pass_ipa_free_fn_summary):\n\tRemove.\n\t* passes.def: Replace pass_inline_parameters by pass_local_fn_summary\n\tand add pass_ipa_fn_summary.\n\t* tree-pass.h (make_pass_ipa_fn_summary, make_pass_local_fn_summary):\n\tNew.\n\t(make_pass_inline_parameters): Remove.\n\n\t* lto.c (do_whole_program_analysis): Replace inline_free_summary\n\tby ipa_free_fn_summary.\n\n\t* gcc.dg/ipa/ctor-empty-1.c: Update template.\n\t* gcc.dg/ipa/inline-5.c: Likewise.\n\t* gfortran.dg/pr48636.f90: Likewise.\n\nFrom-SVN: r248375", "tree": {"sha": "4fbb34d10531b2ddc637167a7a5ef9cf59510b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fbb34d10531b2ddc637167a7a5ef9cf59510b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2db2e6b0563787bcc40c025ae5888020ded364f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2db2e6b0563787bcc40c025ae5888020ded364f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2db2e6b0563787bcc40c025ae5888020ded364f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2db2e6b0563787bcc40c025ae5888020ded364f/comments", "author": null, "committer": null, "parents": [{"sha": "78aa76df40b581bbc79a8ada55e437845b88d764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aa76df40b581bbc79a8ada55e437845b88d764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78aa76df40b581bbc79a8ada55e437845b88d764"}], "stats": {"total": 310, "additions": 197, "deletions": 113}, "files": [{"sha": "57849a84e233ce0a2ad9bbb3ae686c42d212ff58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,3 +1,33 @@\n+2017-05-23  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraphunit.c (symbol_table::process_new_functions): Update.\n+\t* ipa-fnsummary.c (pass_data_inline_parameters): Remove.\n+\t(inline_generate_summary): Rename to ...\n+\t(ipa_fn_summary_generate): ... this one.\n+\t(inline_read_summary): Rename to ...\n+\t(ipa_fn_summary_read): ... this one.\n+\t(inline_write_summary): Rename to ...\n+\t(ipa_fn_summary_write): ... this one.\n+\t(inline_free_summary): Rename to ...\n+\t(ipa_free_fn_summary): ... this one.\n+\t(pass_data_local_fn_summary, pass_local_fn_summary,\n+\tmake_pass_local_fn_summary, pass_data_ipa_free_fn_summary,\n+\tpass_ipa_free_fn_summary, make_pass_ipa_free_fn_summary,\n+\tpass_data_ipa_fn_summary, pass_ipa_fn_summary,\n+\tmake_pass_ipa_fn_summary): New.\n+\t* ipa-fnsummary.h (inline_generate_summary, inline_read_summary,\n+\tinline_write_summary, inline_free_summary): Remove.\n+\t(ipa_free_fn_summary) : New.\n+\t* ipa-inline.c (ipa_inline): Update.\n+\t(pass_ipa_inline): Do not generate summaries.\n+\t* ipa.c (pass_data_ipa_free_fn_summary, pass_ipa_free_fn_summary):\n+\tRemove.\n+\t* passes.def: Replace pass_inline_parameters by pass_local_fn_summary\n+\tand add pass_ipa_fn_summary.\n+\t* tree-pass.h (make_pass_ipa_fn_summary, make_pass_local_fn_summary):\n+\tNew.\n+\t(make_pass_inline_parameters): Remove.\n+\n 2017-05-23  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* omp-low.c (struct omp_context): Remove \"default_kind\" member."}, {"sha": "7b4f47e6efb41e7c401e7347d86fffca6618c4e9", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -339,7 +339,7 @@ symbol_table::process_new_functions (void)\n \t\t and splitting.  This is redundant for functions added late.\n \t\t Just throw away whatever it did.  */\n \t      if (!summaried_computed)\n-\t\tinline_free_summary ();\n+\t\tipa_free_fn_summary ();\n \t    }\n \t  else if (ipa_fn_summaries != NULL)\n \t    compute_fn_summary (node, true);"}, {"sha": "0e74fc3192735cd27056c4b6f57f15844f07a9ea", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 136, "deletions": 48, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -2504,46 +2504,6 @@ compute_fn_summary_for_current (void)\n   return 0;\n }\n \n-namespace {\n-\n-const pass_data pass_data_inline_parameters =\n-{\n-  GIMPLE_PASS, /* type */\n-  \"inline_param\", /* name */\n-  OPTGROUP_INLINE, /* optinfo_flags */\n-  TV_INLINE_PARAMETERS, /* tv_id */\n-  0, /* properties_required */\n-  0, /* properties_provided */\n-  0, /* properties_destroyed */\n-  0, /* todo_flags_start */\n-  0, /* todo_flags_finish */\n-};\n-\n-class pass_inline_parameters : public gimple_opt_pass\n-{\n-public:\n-  pass_inline_parameters (gcc::context *ctxt)\n-    : gimple_opt_pass (pass_data_inline_parameters, ctxt)\n-  {}\n-\n-  /* opt_pass methods: */\n-  opt_pass * clone () { return new pass_inline_parameters (m_ctxt); }\n-  virtual unsigned int execute (function *)\n-    {\n-      return compute_fn_summary_for_current ();\n-    }\n-\n-}; // class pass_inline_parameters\n-\n-} // anon namespace\n-\n-gimple_opt_pass *\n-make_pass_inline_parameters (gcc::context *ctxt)\n-{\n-  return new pass_inline_parameters (ctxt);\n-}\n-\n-\n /* Estimate benefit devirtualizing indirect edge IE, provided KNOWN_VALS,\n    KNOWN_CONTEXTS and KNOWN_AGGS.  */\n \n@@ -3207,8 +3167,8 @@ ipa_fn_summary_t::insert (struct cgraph_node *node, ipa_fn_summary *)\n \n /* Note function body size.  */\n \n-void\n-inline_generate_summary (void)\n+static void\n+ipa_fn_summary_generate (void)\n {\n   struct cgraph_node *node;\n \n@@ -3226,7 +3186,7 @@ inline_generate_summary (void)\n   ipa_fn_summaries->enable_insertion_hook ();\n \n   ipa_register_cgraph_hooks ();\n-  inline_free_summary ();\n+  ipa_free_fn_summary ();\n \n   FOR_EACH_DEFINED_FUNCTION (node)\n     if (!node->alias)\n@@ -3358,8 +3318,8 @@ inline_read_section (struct lto_file_decl_data *file_data, const char *data,\n    and inliner, so when ipa-cp is active, we don't need to write them\n    twice.  */\n \n-void\n-inline_read_summary (void)\n+static void\n+ipa_fn_summary_read (void)\n {\n   struct lto_file_decl_data **file_data_vec = lto_get_file_decl_data ();\n   struct lto_file_decl_data *file_data;\n@@ -3419,8 +3379,8 @@ write_ipa_call_summary (struct output_block *ob, struct cgraph_edge *e)\n    Jump functions are shared among ipa-cp and inliner, so when ipa-cp is\n    active, we don't need to write them twice.  */\n \n-void\n-inline_write_summary (void)\n+static void\n+ipa_fn_summary_write (void)\n {\n   struct output_block *ob = create_output_block (LTO_section_ipa_fn_summary);\n   lto_symtab_encoder_t encoder = ob->decl_state->symtab_node_encoder;\n@@ -3510,7 +3470,7 @@ inline_write_summary (void)\n /* Release inline summary.  */\n \n void\n-inline_free_summary (void)\n+ipa_free_fn_summary (void)\n {\n   struct cgraph_node *node;\n   if (!ipa_call_summaries)\n@@ -3525,3 +3485,131 @@ inline_free_summary (void)\n   ipa_call_summaries = NULL;\n   edge_predicate_pool.release ();\n }\n+\n+namespace {\n+\n+const pass_data pass_data_local_fn_summary =\n+{\n+  GIMPLE_PASS, /* type */\n+  \"local-fnsummary\", /* name */\n+  OPTGROUP_INLINE, /* optinfo_flags */\n+  TV_INLINE_PARAMETERS, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n+};\n+\n+class pass_local_fn_summary : public gimple_opt_pass\n+{\n+public:\n+  pass_local_fn_summary (gcc::context *ctxt)\n+    : gimple_opt_pass (pass_data_local_fn_summary, ctxt)\n+  {}\n+\n+  /* opt_pass methods: */\n+  opt_pass * clone () { return new pass_local_fn_summary (m_ctxt); }\n+  virtual unsigned int execute (function *)\n+    {\n+      return compute_fn_summary_for_current ();\n+    }\n+\n+}; // class pass_local_fn_summary\n+\n+} // anon namespace\n+\n+gimple_opt_pass *\n+make_pass_local_fn_summary (gcc::context *ctxt)\n+{\n+  return new pass_local_fn_summary (ctxt);\n+}\n+\n+\n+/* Free inline summary.  */\n+\n+namespace {\n+\n+const pass_data pass_data_ipa_free_fn_summary =\n+{\n+  SIMPLE_IPA_PASS, /* type */\n+  \"free-fnsummary\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  TV_IPA_FREE_INLINE_SUMMARY, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  /* Early optimizations may make function unreachable.  We can not\n+     remove unreachable functions as part of the ealry opts pass because\n+     TODOs are run before subpasses.  Do it here.  */\n+  ( TODO_remove_functions | TODO_dump_symtab ), /* todo_flags_finish */\n+};\n+\n+class pass_ipa_free_fn_summary : public simple_ipa_opt_pass\n+{\n+public:\n+  pass_ipa_free_fn_summary (gcc::context *ctxt)\n+    : simple_ipa_opt_pass (pass_data_ipa_free_fn_summary, ctxt)\n+  {}\n+\n+  /* opt_pass methods: */\n+  virtual unsigned int execute (function *)\n+    {\n+      ipa_free_fn_summary ();\n+      return 0;\n+    }\n+\n+}; // class pass_ipa_free_fn_summary\n+\n+} // anon namespace\n+\n+simple_ipa_opt_pass *\n+make_pass_ipa_free_fn_summary (gcc::context *ctxt)\n+{\n+  return new pass_ipa_free_fn_summary (ctxt);\n+}\n+\n+namespace {\n+\n+const pass_data pass_data_ipa_fn_summary =\n+{\n+  IPA_PASS, /* type */\n+  \"fnsummary\", /* name */\n+  OPTGROUP_INLINE, /* optinfo_flags */\n+  TV_IPA_INLINING, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  ( TODO_dump_symtab ), /* todo_flags_finish */\n+};\n+\n+class pass_ipa_fn_summary : public ipa_opt_pass_d\n+{\n+public:\n+  pass_ipa_fn_summary (gcc::context *ctxt)\n+    : ipa_opt_pass_d (pass_data_ipa_fn_summary, ctxt,\n+\t\t      ipa_fn_summary_generate, /* generate_summary */\n+\t\t      ipa_fn_summary_write, /* write_summary */\n+\t\t      ipa_fn_summary_read, /* read_summary */\n+\t\t      NULL, /* write_optimization_summary */\n+\t\t      NULL, /* read_optimization_summary */\n+\t\t      NULL, /* stmt_fixup */\n+\t\t      0, /* function_transform_todo_flags_start */\n+\t\t      NULL, /* function_transform */\n+\t\t      NULL) /* variable_transform */\n+  {}\n+\n+  /* opt_pass methods: */\n+  virtual unsigned int execute (function *) { return 0; }\n+\n+}; // class pass_ipa_fn_summary\n+\n+} // anon namespace\n+\n+ipa_opt_pass_d *\n+make_pass_ipa_fn_summary (gcc::context *ctxt)\n+{\n+  return new pass_ipa_fn_summary (ctxt);\n+}"}, {"sha": "f50d6806e61a92add83e10e35f006be18f8d68fe", "filename": "gcc/ipa-fnsummary.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-fnsummary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-fnsummary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.h?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -231,10 +231,7 @@ void ipa_debug_fn_summary (struct cgraph_node *);\n void ipa_dump_fn_summaries (FILE *f);\n void ipa_dump_fn_summary (FILE *f, struct cgraph_node *node);\n void ipa_dump_hints (FILE *f, ipa_hints);\n-void inline_generate_summary (void);\n-void inline_read_summary (void);\n-void inline_write_summary (void);\n-void inline_free_summary (void);\n+void ipa_free_fn_summary (void);\n void inline_analyze_function (struct cgraph_node *node);\n void estimate_ipcp_clone_size_and_time (struct cgraph_node *,\n \t\t\t\t\tvec<tree>,"}, {"sha": "0ebe1477f6cbd28a6bd7c59a30769af47817113d", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -2502,7 +2502,7 @@ ipa_inline (void)\n     ipa_dump_fn_summaries (dump_file);\n   /* In WPA we use inline summaries for partitioning process.  */\n   if (!flag_wpa)\n-    inline_free_summary ();\n+    ipa_free_fn_summary ();\n   return remove_functions ? TODO_remove_functions : 0;\n }\n \n@@ -2808,9 +2808,9 @@ class pass_ipa_inline : public ipa_opt_pass_d\n public:\n   pass_ipa_inline (gcc::context *ctxt)\n     : ipa_opt_pass_d (pass_data_ipa_inline, ctxt,\n-\t\t      inline_generate_summary, /* generate_summary */\n-\t\t      inline_write_summary, /* write_summary */\n-\t\t      inline_read_summary, /* read_summary */\n+\t\t      NULL, /* generate_summary */\n+\t\t      NULL, /* write_summary */\n+\t\t      NULL, /* read_summary */\n \t\t      NULL, /* write_optimization_summary */\n \t\t      NULL, /* read_optimization_summary */\n \t\t      NULL, /* stmt_fixup */"}, {"sha": "3dc8e41a7ff759893bf78e2886b12ed875076328", "filename": "gcc/ipa.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -843,50 +843,6 @@ ipa_discover_readonly_nonaddressable_vars (void)\n   return remove_p;\n }\n \n-/* Free inline summary.  */\n-\n-namespace {\n-\n-const pass_data pass_data_ipa_free_fn_summary =\n-{\n-  SIMPLE_IPA_PASS, /* type */\n-  \"free-inline-summary\", /* name */\n-  OPTGROUP_NONE, /* optinfo_flags */\n-  TV_IPA_FREE_INLINE_SUMMARY, /* tv_id */\n-  0, /* properties_required */\n-  0, /* properties_provided */\n-  0, /* properties_destroyed */\n-  0, /* todo_flags_start */\n-  /* Early optimizations may make function unreachable.  We can not\n-     remove unreachable functions as part of the ealry opts pass because\n-     TODOs are run before subpasses.  Do it here.  */\n-  ( TODO_remove_functions | TODO_dump_symtab ), /* todo_flags_finish */\n-};\n-\n-class pass_ipa_free_fn_summary : public simple_ipa_opt_pass\n-{\n-public:\n-  pass_ipa_free_fn_summary (gcc::context *ctxt)\n-    : simple_ipa_opt_pass (pass_data_ipa_free_fn_summary, ctxt)\n-  {}\n-\n-  /* opt_pass methods: */\n-  virtual unsigned int execute (function *)\n-    {\n-      inline_free_summary ();\n-      return 0;\n-    }\n-\n-}; // class pass_ipa_free_fn_summary\n-\n-} // anon namespace\n-\n-simple_ipa_opt_pass *\n-make_pass_ipa_free_fn_summary (gcc::context *ctxt)\n-{\n-  return new pass_ipa_free_fn_summary (ctxt);\n-}\n-\n /* Generate and emit a static constructor or destructor.  WHICH must\n    be one of 'I' (for a constructor), 'D' (for a destructor), 'P'\n    (for chp static vars constructor) or 'B' (for chkp static bounds"}, {"sha": "e63f2037191a049d0f24b30f4d2f32a7935ed4a7", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,3 +1,8 @@\n+2017-05-23  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto.c (do_whole_program_analysis): Replace inline_free_summary\n+\tby ipa_free_fn_summary.\n+\n 2017-05-23  Martin Liska  <mliska@suse.cz>\n \n \t* lto-symtab.c (lto_cgraph_replace_node): Use"}, {"sha": "44ddf4195704027494b58cb51e627241c5954c11", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -3129,7 +3129,7 @@ do_whole_program_analysis (void)\n \n   /* Inline summaries are needed for balanced partitioning.  Free them now so\n      the memory can be used for streamer caches.  */\n-  inline_free_summary ();\n+  ipa_free_fn_summary ();\n \n   /* AUX pointers are used by partitioning code to bookkeep number of\n      partitions symbol is in.  This is no longer needed.  */"}, {"sha": "10a18bf075147a2b85bd2aa44dd8c0eaea35f6d3", "filename": "gcc/passes.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -75,7 +75,7 @@ along with GCC; see the file COPYING3.  If not see\n   PUSH_INSERT_PASSES_WITHIN (pass_local_optimization_passes)\n       NEXT_PASS (pass_fixup_cfg);\n       NEXT_PASS (pass_rebuild_cgraph_edges);\n-      NEXT_PASS (pass_inline_parameters);\n+      NEXT_PASS (pass_local_fn_summary);\n       NEXT_PASS (pass_early_inline);\n       NEXT_PASS (pass_all_early_optimizations);\n       PUSH_INSERT_PASSES_WITHIN (pass_all_early_optimizations)\n@@ -110,7 +110,7 @@ along with GCC; see the file COPYING3.  If not see\n       POP_INSERT_PASSES ()\n       NEXT_PASS (pass_release_ssa_names);\n       NEXT_PASS (pass_rebuild_cgraph_edges);\n-      NEXT_PASS (pass_inline_parameters);\n+      NEXT_PASS (pass_local_fn_summary);\n   POP_INSERT_PASSES ()\n \n   NEXT_PASS (pass_ipa_oacc);\n@@ -157,6 +157,7 @@ along with GCC; see the file COPYING3.  If not see\n   NEXT_PASS (pass_ipa_cp);\n   NEXT_PASS (pass_ipa_cdtor_merge);\n   NEXT_PASS (pass_ipa_hsa);\n+  NEXT_PASS (pass_ipa_fn_summary);\n   NEXT_PASS (pass_ipa_inline);\n   NEXT_PASS (pass_ipa_pure_const);\n   NEXT_PASS (pass_ipa_reference);"}, {"sha": "e5d4fce0dbec662bd1965daf1e4f40594f58fe38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,3 +1,9 @@\n+2017-05-23  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/ipa/ctor-empty-1.c: Update template.\n+\t* gcc.dg/ipa/inline-5.c: Likewise.\n+\t* gfortran.dg/pr48636.f90: Likewise.\n+\n 2017-05-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/parse/ctor9.C: Adjust expected error."}, {"sha": "0807d494c034e5cdd5ff0e8fe2d5e344a99c6e20", "filename": "gcc/testsuite/gcc.dg/ipa/ctor-empty-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -c -fdump-ipa-free-inline-summary\"  } */\n+/* { dg-options \"-O3 -c -fdump-ipa-free-fnsummary\"  } */\n static __attribute__((constructor))\n void empty_constructor()\n {\n }\n-/* { dg-final { scan-ipa-dump \"Reclaiming functions: empty_constructor\"  \"free-inline-summary\"  } } */\n+/* { dg-final { scan-ipa-dump \"Reclaiming functions: empty_constructor\"  \"free-fnsummary\"  } } */"}, {"sha": "559e258955e43b6100823ce113f8c2f0ca0e7180", "filename": "gcc/testsuite/gcc.dg/ipa/inline-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finline-5.c?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,6 +1,6 @@\n /* Check statements that are eliminated by inlining.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-inline-details -fno-early-inlining -fno-partial-inlining -fno-ipa-cp\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-fnsummary-details -fno-early-inlining -fno-partial-inlining -fno-ipa-cp\"  } */\n \n struct a {int a,b,c,d,e;};\n void t(int);\n@@ -34,5 +34,5 @@ accessreference (struct a *a)\n     /* Will be eliminated by inlining */\n }\n \n-/* { dg-final { scan-ipa-dump-times \"Will be eliminated\" 4 \"inline\" { xfail { { hppa*-*-* } && { ! lp64 } } } } } */\n-/* { dg-final { scan-ipa-dump-times \"50. will be eliminated\" 1 \"inline\"  } } */\n+/* { dg-final { scan-ipa-dump-times \"Will be eliminated\" 4 \"fnsummary\" { xfail { { hppa*-*-* } && { ! lp64 } } } } } */\n+/* { dg-final { scan-ipa-dump-times \"50. will be eliminated\" 1 \"fnsummary\"  } } */"}, {"sha": "8b16680c5b6baeeb292f224aa4833f5ad47df7be", "filename": "gcc/testsuite/gfortran.dg/pr48636.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48636.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48636.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48636.f90?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-O3 -fdump-ipa-inline-details -fno-ipa-cp\" }\n+! { dg-options \"-O3 -fdump-ipa-inline-details -fdump-ipa-fnsummary-details -fno-ipa-cp\" }\n \n module foo\n   implicit none\n@@ -34,5 +34,5 @@ program main\n end program main\n \n ! { dg-final { scan-ipa-dump \"bar\\[^\\\\n\\]*inline copy in MAIN\" \"inline\" } }\n-! { dg-final { scan-ipa-dump-times \"phi predicate:\" 3 \"inline\" } }\n-! { dg-final { scan-ipa-dump \"inline hints: loop_iterations\" \"inline\" } }\n+! { dg-final { scan-ipa-dump-times \"phi predicate:\" 3 \"fnsummary\" } }\n+! { dg-final { scan-ipa-dump \"inline hints: loop_iterations\" \"fnsummary\" } }"}, {"sha": "cfa4b01f81ab46b6a3f006cad2ffaf47cc7f49b0", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2db2e6b0563787bcc40c025ae5888020ded364f/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=d2db2e6b0563787bcc40c025ae5888020ded364f", "patch": "@@ -494,6 +494,7 @@ extern ipa_opt_pass_d *make_pass_ipa_whole_program_visibility (gcc::context\n \t\t\t\t\t\t\t       *ctxt);\n extern simple_ipa_opt_pass *make_pass_ipa_increase_alignment (gcc::context\n \t\t\t\t\t\t\t      *ctxt);\n+extern ipa_opt_pass_d *make_pass_ipa_fn_summary (gcc::context *ctxt);\n extern ipa_opt_pass_d *make_pass_ipa_inline (gcc::context *ctxt);\n extern simple_ipa_opt_pass *make_pass_ipa_free_lang_data (gcc::context *ctxt);\n extern simple_ipa_opt_pass *make_pass_ipa_free_fn_summary (gcc::context *ctxt);\n@@ -617,7 +618,7 @@ extern rtl_opt_pass *make_pass_final (gcc::context *ctxt);\n extern rtl_opt_pass *make_pass_rtl_seqabstr (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_release_ssa_names (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_early_inline (gcc::context *ctxt);\n-extern gimple_opt_pass *make_pass_inline_parameters (gcc::context *ctxt);\n+extern gimple_opt_pass *make_pass_local_fn_summary (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_update_address_taken (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_convert_switch (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_lower_vaarg (gcc::context *ctxt);"}]}