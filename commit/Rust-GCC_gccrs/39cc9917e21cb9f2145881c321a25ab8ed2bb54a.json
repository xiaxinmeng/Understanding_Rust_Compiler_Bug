{"sha": "39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljYzk5MTdlMjFjYjlmMjE0NTg4MWMzMjFhMjVhYjhlZDJiYjU0YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-01T01:13:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-01T01:13:51Z"}, "message": "jump.c (jump_optimize_1): Amend last change to test only the form of the operand, not the insn.\n\n        * jump.c (jump_optimize_1): Amend last change to test only the\n        form of the operand, not the insn.\n\nFrom-SVN: r29741", "tree": {"sha": "76f8bfd2ba50763adcf42702ea6522d0bc52c905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76f8bfd2ba50763adcf42702ea6522d0bc52c905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39cc9917e21cb9f2145881c321a25ab8ed2bb54a/comments", "author": null, "committer": null, "parents": [{"sha": "6d97e0b42ed9661ed26c122062b724ce64f84f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d97e0b42ed9661ed26c122062b724ce64f84f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d97e0b42ed9661ed26c122062b724ce64f84f36"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "34656de2a12b7cb5304d6885c49c624eb673a65b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cc9917e21cb9f2145881c321a25ab8ed2bb54a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cc9917e21cb9f2145881c321a25ab8ed2bb54a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "patch": "@@ -1,5 +1,8 @@\n Thu Sep 30 18:04:13 1999  Richard Henderson  <rth@cygnus.com>\n \n+\t* jump.c (jump_optimize_1): Amend last change to test only the\n+\tform of the operand, not the insn.\n+\n \t* jump.c (jump_optimize_1) [conditional_move]: Use general_operand\n \tnot register_operand to determine when B may need preloading.\n "}, {"sha": "dcd1a6a5c33768908930dbbb1352681440470464", "filename": "gcc/jump.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cc9917e21cb9f2145881c321a25ab8ed2bb54a/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cc9917e21cb9f2145881c321a25ab8ed2bb54a/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=39cc9917e21cb9f2145881c321a25ab8ed2bb54a", "patch": "@@ -1169,11 +1169,11 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)\n \n \t\tstart_sequence ();\n \n-\t\t/* If we're not dealing with a simple operand or the insn is\n-\t\t   more complex than a simple SET, duplicate the computation\n-\t\t   and replace the destination with a new temporary.  */\n-\t\tif (general_operand (temp2, GET_MODE (var))\n-\t\t    && GET_CODE (PATTERN (temp)) == SET)\n+\t\t/* We're dealing with a single_set insn with no side effects\n+\t\t   on SET_SRC.  We do need to be reasonably certain that if\n+\t\t   we need to force BVAL into a register that we won't \n+\t\t   clobber the flags -- general_operand should suffice.  */\n+\t\tif (general_operand (temp2, GET_MODE (var)))\n \t\t  bval = temp2;\n \t\telse\n \t\t  {\n@@ -1183,7 +1183,7 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)\n \t\t    SET_DEST (temp6) = bval;\n \t\t    emit_insn (PATTERN (new_insn));\n \t\t  }\n-\t\t  \n+\n \t\ttarget = emit_conditional_move (var, code,\n \t\t\t\t\t\tcond0, cond1, VOIDmode,\n \t\t\t\t\t\taval, bval, GET_MODE (var),"}]}