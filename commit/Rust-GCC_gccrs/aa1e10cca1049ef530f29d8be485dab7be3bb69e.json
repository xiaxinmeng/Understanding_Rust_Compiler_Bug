{"sha": "aa1e10cca1049ef530f29d8be485dab7be3bb69e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExZTEwY2NhMTA0OWVmNTMwZjI5ZDhiZTQ4NWRhYjdiZTNiYjY5ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-09T11:44:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-09T11:44:27Z"}, "message": "lto-streamer-out.c (output_function): Renumber PHIs.\n\n\n\t* lto-streamer-out.c (output_function): Renumber PHIs.\n\t* lto-streamer-in.c (input_function): Likewise.\n\nFrom-SVN: r201627", "tree": {"sha": "1c25e859a3f97f323de1162ed071b83dc222a419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c25e859a3f97f323de1162ed071b83dc222a419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa1e10cca1049ef530f29d8be485dab7be3bb69e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1e10cca1049ef530f29d8be485dab7be3bb69e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1e10cca1049ef530f29d8be485dab7be3bb69e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1e10cca1049ef530f29d8be485dab7be3bb69e/comments", "author": null, "committer": null, "parents": [{"sha": "65a372f494f5db55b3f806fdf7853f931bf085d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a372f494f5db55b3f806fdf7853f931bf085d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a372f494f5db55b3f806fdf7853f931bf085d7"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "ef8197630c411cd5de2a6a17dfbea307801e27f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa1e10cca1049ef530f29d8be485dab7be3bb69e", "patch": "@@ -1,3 +1,8 @@\n+2013-08-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-streamer-out.c (output_function): Renumber PHIs.\n+\t* lto-streamer-in.c (input_function): Likewise.\n+\n 2013-08-09  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def (get_lane_signed): Remove."}, {"sha": "9dc8438aa4776afffebc68258bc9b7594bee4491", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=aa1e10cca1049ef530f29d8be485dab7be3bb69e", "patch": "@@ -908,6 +908,11 @@ input_function (tree fn_decl, struct data_in *data_in,\n   FOR_ALL_BB (bb)\n     {\n       gimple_stmt_iterator gsi;\n+      for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t{\n+\t  gimple stmt = gsi_stmt (gsi);\n+\t  gimple_set_uid (stmt, inc_gimple_stmt_max_uid (cfun));\n+\t}\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n \t  gimple stmt = gsi_stmt (gsi);\n@@ -917,7 +922,14 @@ input_function (tree fn_decl, struct data_in *data_in,\n   stmts = (gimple *) xcalloc (gimple_stmt_max_uid (fn), sizeof (gimple));\n   FOR_ALL_BB (bb)\n     {\n-      gimple_stmt_iterator bsi = gsi_start_bb (bb);\n+      gimple_stmt_iterator bsi = gsi_start_phis (bb);\n+      while (!gsi_end_p (bsi))\n+\t{\n+\t  gimple stmt = gsi_stmt (bsi);\n+\t  gsi_next (&bsi);\n+\t  stmts[gimple_uid (stmt)] = stmt;\n+\t}\n+      bsi = gsi_start_bb (bb);\n       while (!gsi_end_p (bsi))\n \t{\n \t  gimple stmt = gsi_stmt (bsi);"}, {"sha": "ea0ff177c47ea783196fd1e9eae6729db3367e5a", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1e10cca1049ef530f29d8be485dab7be3bb69e/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=aa1e10cca1049ef530f29d8be485dab7be3bb69e", "patch": "@@ -1792,12 +1792,32 @@ output_function (struct cgraph_node *node)\n       FOR_ALL_BB (bb)\n \t{\n \t  gimple_stmt_iterator gsi;\n+\t  for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t    {\n+\t      gimple stmt = gsi_stmt (gsi);\n+\n+\t      /* Virtual PHIs are not going to be streamed.  */\n+\t      if (!virtual_operand_p (gimple_phi_result (stmt)))\n+\t        gimple_set_uid (stmt, inc_gimple_stmt_max_uid (cfun));\n+\t    }\n \t  for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t    {\n \t      gimple stmt = gsi_stmt (gsi);\n \t      gimple_set_uid (stmt, inc_gimple_stmt_max_uid (cfun));\n \t    }\n \t}\n+      /* To avoid keeping duplicate gimple IDs in the statements, renumber\n+\t virtual phis now.  */\n+      FOR_ALL_BB (bb)\n+\t{\n+\t  gimple_stmt_iterator gsi;\n+\t  for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t    {\n+\t      gimple stmt = gsi_stmt (gsi);\n+\t      if (virtual_operand_p (gimple_phi_result (stmt)))\n+\t        gimple_set_uid (stmt, inc_gimple_stmt_max_uid (cfun));\n+\t    }\n+\t}\n \n       /* Output the code for the function.  */\n       FOR_ALL_BB_FN (bb, fn)"}]}