{"sha": "81edaf2fc6328f5eba841744da40c3f0dd4d174f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlZGFmMmZjNjMyOGY1ZWJhODQxNzQ0ZGE0MGMzZjBkZDRkMTc0Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-05-28T08:00:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-28T08:00:21Z"}, "message": "trans.c (walk_nesting_tree): New static function.\n\n\t* gcc-interface/trans.c (walk_nesting_tree): New static function.\n\t(finalize_nrv): Use it to walk the entire nesting tree.\n\nFrom-SVN: r271685", "tree": {"sha": "7118d53fb510238196bf16e7578f0bda69caaefc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7118d53fb510238196bf16e7578f0bda69caaefc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81edaf2fc6328f5eba841744da40c3f0dd4d174f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81edaf2fc6328f5eba841744da40c3f0dd4d174f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81edaf2fc6328f5eba841744da40c3f0dd4d174f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81edaf2fc6328f5eba841744da40c3f0dd4d174f/comments", "author": null, "committer": null, "parents": [{"sha": "3e86c778cb135d6efa1bb4d97cf84c83ca867fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e86c778cb135d6efa1bb4d97cf84c83ca867fb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e86c778cb135d6efa1bb4d97cf84c83ca867fb8"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "608a417ff4553a2e90a36abc83a299a2b9c85e32", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=81edaf2fc6328f5eba841744da40c3f0dd4d174f", "patch": "@@ -1,3 +1,8 @@\n+2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (walk_nesting_tree): New static function.\n+\t(finalize_nrv): Use it to walk the entire nesting tree.\n+\n 2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Remove"}, {"sha": "da1da506beb1564a11f35622d70abd921eb3ea9d", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=81edaf2fc6328f5eba841744da40c3f0dd4d174f", "patch": "@@ -4280,14 +4280,27 @@ finalize_nrv_unc_r (tree *tp, int *walk_subtrees, void *data)\n   return NULL_TREE;\n }\n \n+/* Apply FUNC to all the sub-trees of nested functions in NODE.  FUNC is called\n+   with the DATA and the address of each sub-tree.  If FUNC returns a non-NULL\n+   value, the traversal is stopped.  */\n+\n+static void\n+walk_nesting_tree (struct cgraph_node *node, walk_tree_fn func, void *data)\n+{\n+  for (node = node->nested; node; node = node->next_nested)\n+    {\n+      walk_tree_without_duplicates (&DECL_SAVED_TREE (node->decl), func, data);\n+      walk_nesting_tree (node, func, data);\n+    }\n+}\n+\n /* Finalize the Named Return Value optimization for FNDECL.  The NRV bitmap\n    contains the candidates for Named Return Value and OTHER is a list of\n    the other return values.  GNAT_RET is a representative return node.  */\n \n static void\n finalize_nrv (tree fndecl, bitmap nrv, vec<tree, va_gc> *other, Node_Id gnat_ret)\n {\n-  struct cgraph_node *node;\n   struct nrv_data data;\n   walk_tree_fn func;\n   unsigned int i;\n@@ -4308,10 +4321,7 @@ finalize_nrv (tree fndecl, bitmap nrv, vec<tree, va_gc> *other, Node_Id gnat_ret\n     return;\n \n   /* Prune also the candidates that are referenced by nested functions.  */\n-  node = cgraph_node::get_create (fndecl);\n-  for (node = node->nested; node; node = node->next_nested)\n-    walk_tree_without_duplicates (&DECL_SAVED_TREE (node->decl), prune_nrv_r,\n-\t\t\t\t  &data);\n+  walk_nesting_tree (cgraph_node::get_create (fndecl), prune_nrv_r, &data);\n   if (bitmap_empty_p (nrv))\n     return;\n "}, {"sha": "7cc476d4be95189d4ca2698d0e946ba15387f951", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81edaf2fc6328f5eba841744da40c3f0dd4d174f", "patch": "@@ -1,3 +1,7 @@\n+2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt79.ad[sb]: New test.\n+\n 2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/discr5.ads: New test."}, {"sha": "f58e25bc11dc879f75cf26a2609d5484e50899c1", "filename": "gcc/testsuite/gnat.dg/opt79.adb", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.adb?ref=81edaf2fc6328f5eba841744da40c3f0dd4d174f", "patch": "@@ -0,0 +1,28 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+package body Opt79 is\n+\n+  function F (I : Integer) return Arr is\n+    A : Arr;\n+\n+    procedure Nested is\n+\n+      procedure Inner is\n+      begin\n+        A (1) := 0;\n+      end;\n+\n+    begin\n+       Inner;\n+    end;\n+\n+  begin\n+    Nested;\n+    for J in A'Range loop\n+      A (J) := I;\n+    end loop;\n+    return A;\n+  end;\n+\n+end Opt79;"}, {"sha": "aa90c17f8dd4aee0f412329abbfab26facf4e9a2", "filename": "gcc/testsuite/gnat.dg/opt79.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81edaf2fc6328f5eba841744da40c3f0dd4d174f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt79.ads?ref=81edaf2fc6328f5eba841744da40c3f0dd4d174f", "patch": "@@ -0,0 +1,7 @@\n+package Opt79 is\n+\n+  type Arr is array (1 .. 8) of Integer;\n+\n+  function F (I : Integer) return Arr;\n+\n+end Opt79;"}]}