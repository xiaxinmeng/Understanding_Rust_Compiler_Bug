{"sha": "74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlZGM4YTliOWY1YmU4MjQzYTNjZGE3MGY1ZWFjODZmZDQyY2YzYw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2016-12-11T19:37:05Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2016-12-11T19:37:05Z"}, "message": "[Darwin, configury] No longer expect to find cross-target headers on the host.\n\nEarlier Darwin (esp. Darwin8 and Darwin9) had FAT libraries and suitable header\ninstallations in /usr/include such that one could build a cross-toolchain \n(including cross-arch) using a common sysroot (including / for \u201ccurrent\u201d version).\n\nHowever this is no longer true on a number of levels.  A vanilla Darwin system has\nno headers installed in /usr and it's certainly not appropriate to try and find\nheaders/libs for (say) x86-64-darwinNN X powerpc-darwin in /usr on any Darwin NN > 10 \n(even Darwin10 is incomplete in that it omits the ppc64 multilib).  In the latter\nexample, the catch-all in the current configury to mean that \n\"foo-darwin\" == \u201cfoo-version-on-this-system\u201d breaks the cross case \n\u2014target=powerpc-apple-darwin \u2014host=some-system-later-than-darwin10.\n\ngcc/\n\n2016-12-11  Iain Sandoe  <iain@codesourcery.com>\n\n\t* configure.ac (CROSS directory tests): Remove the assumption that\n\tDarwin hosts contain suitable target sysroots in \"/\".\n\t* configure: Regenerate.\n\nFrom-SVN: r243533", "tree": {"sha": "4ec724c82666dfbb790d9b1c3d5b4f19ca3a79d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ec724c82666dfbb790d9b1c3d5b4f19ca3a79d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38dce2c34c72c8292775fdd2099517143b86da33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38dce2c34c72c8292775fdd2099517143b86da33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38dce2c34c72c8292775fdd2099517143b86da33"}], "stats": {"total": 52, "additions": 8, "deletions": 44}, "files": [{"sha": "c9a48b0c02e66b122fef1974ae2263d59dacc944", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "patch": "@@ -1,3 +1,9 @@\n+2016-12-11  Iain Sandoe  <iain@codesourcery.com>\n+\n+\t* configure.ac (CROSS directory tests): Remove the assumption that\n+\tDarwin hosts contain suitable target sysroots in \"/\".\n+\t* configure: Regenerate.\n+\n 2016-12-11  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR rtl-optimization/71496"}, {"sha": "2348f091abcf911e21ca60d441748a14325660c8", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "patch": "@@ -12205,27 +12205,6 @@ then\n \tCROSS=\"-DCROSS_DIRECTORY_STRUCTURE\"\n \tALL=all.cross\n \tSYSTEM_HEADER_DIR=$build_system_header_dir\n-\tcase \"$host\",\"$target\" in\n-\t# Darwin crosses can use the host system's libraries and headers,\n-\t# because of the fat library support.  Of course, it must be the\n-\t# same version of Darwin on both sides.  Allow the user to\n-\t# just say --target=foo-darwin without a version number to mean\n-\t# \"the version on this system\".\n-\t    *-*-darwin*,*-*-darwin*)\n-\t\thostos=`echo $host | sed 's/.*-darwin/darwin/'`\n-\t\ttargetos=`echo $target | sed 's/.*-darwin/darwin/'`\n-\t\tif test $hostos = $targetos -o $targetos = darwin ; then\n-\t\t    CROSS=\n-\t\t    SYSTEM_HEADER_DIR='$(NATIVE_SYSTEM_HEADER_DIR)'\n-\t\t    with_headers=yes\n-\t\tfi\n-\t\t;;\n-\n-\t    i?86-*-*,x86_64-*-* \\\n-\t    | powerpc*-*-*,powerpc64*-*-*)\n-\t\tCROSS=\"$CROSS -DNATIVE_CROSS\" ;;\n-\tesac\n-\n \tcase $target in\n \t\t*-*-mingw*)\n \t\t\tif test \"x$with_headers\" = x; then\n@@ -18430,7 +18409,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18433 \"configure\"\n+#line 18417 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18536,7 +18515,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18539 \"configure\"\n+#line 18523 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "08e6851fc96eea89e1d645733228ace713ddd73f", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=74edc8a9b9f5be8243a3cda70f5eac86fd42cf3c", "patch": "@@ -2010,27 +2010,6 @@ then\n \tCROSS=\"-DCROSS_DIRECTORY_STRUCTURE\"\n \tALL=all.cross\n \tSYSTEM_HEADER_DIR=$build_system_header_dir\n-\tcase \"$host\",\"$target\" in\n-\t# Darwin crosses can use the host system's libraries and headers,\n-\t# because of the fat library support.  Of course, it must be the\n-\t# same version of Darwin on both sides.  Allow the user to\n-\t# just say --target=foo-darwin without a version number to mean\n-\t# \"the version on this system\".\n-\t    *-*-darwin*,*-*-darwin*)\n-\t\thostos=`echo $host | sed 's/.*-darwin/darwin/'`\n-\t\ttargetos=`echo $target | sed 's/.*-darwin/darwin/'`\n-\t\tif test $hostos = $targetos -o $targetos = darwin ; then\n-\t\t    CROSS=\n-\t\t    SYSTEM_HEADER_DIR='$(NATIVE_SYSTEM_HEADER_DIR)'\n-\t\t    with_headers=yes\n-\t\tfi\n-\t\t;;\n-\n-\t    i?86-*-*,x86_64-*-* \\\n-\t    | powerpc*-*-*,powerpc64*-*-*)\n-\t\tCROSS=\"$CROSS -DNATIVE_CROSS\" ;;\n-\tesac\n-\n \tcase $target in\n \t\t*-*-mingw*)\n \t\t\tif test \"x$with_headers\" = x; then"}]}