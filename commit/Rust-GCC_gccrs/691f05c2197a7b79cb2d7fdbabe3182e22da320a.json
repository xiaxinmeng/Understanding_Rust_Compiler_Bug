{"sha": "691f05c2197a7b79cb2d7fdbabe3182e22da320a", "node_id": "C_kwDOANBUbNoAKDY5MWYwNWMyMTk3YTdiNzljYjJkN2ZkYmFiZTMxODJlMjJkYTMyMGE", "commit": {"author": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2021-12-02T07:30:17Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-12-08T06:12:07Z"}, "message": "Add combine splitter to transform vpcmpeqd/vpxor/vblendvps to vblendvps for ~op0\n\ngcc/ChangeLog:\n\n\tPR target/100738\n\t* config/i386/sse.md\n\t(*<sse4_1>_blendv<ssefltmodesuffix><avxsizesuffix>_not_ltint):\n\tAdd new define_insn_and_split.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/100738\n\t* g++.target/i386/pr100738-1.C: New test.", "tree": {"sha": "49e20b2fd48793f10020881605236998c0cb2c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49e20b2fd48793f10020881605236998c0cb2c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/691f05c2197a7b79cb2d7fdbabe3182e22da320a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691f05c2197a7b79cb2d7fdbabe3182e22da320a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691f05c2197a7b79cb2d7fdbabe3182e22da320a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691f05c2197a7b79cb2d7fdbabe3182e22da320a/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0485ce9128f272fe7ccb48672f69d7be6bb26a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0485ce9128f272fe7ccb48672f69d7be6bb26a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0485ce9128f272fe7ccb48672f69d7be6bb26a9c"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "5421fb5168490ecd3e3b9ec0e1864419dff233a7", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/691f05c2197a7b79cb2d7fdbabe3182e22da320a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/691f05c2197a7b79cb2d7fdbabe3182e22da320a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=691f05c2197a7b79cb2d7fdbabe3182e22da320a", "patch": "@@ -20767,6 +20767,33 @@\n    (set_attr \"btver2_decode\" \"vector,vector,vector\") \n    (set_attr \"mode\" \"<ssefltvecmode>\")])\n \n+;; PR target/100738: Transform vpcmpeqd + vpxor + vblendvps to vblendvps for inverted mask;\n+(define_insn_and_split \"*<sse4_1>_blendv<ssefltmodesuffix><avxsizesuffix>_not_ltint\"\n+  [(set (match_operand:<ssebytemode> 0 \"register_operand\")\n+\t(unspec:<ssebytemode>\n+\t  [(match_operand:<ssebytemode> 1 \"register_operand\")\n+\t   (match_operand:<ssebytemode> 2 \"vector_operand\")\n+\t   (subreg:<ssebytemode>\n+\t     (lt:VI48_AVX\n+\t       (subreg:VI48_AVX\n+\t       (not:<ssebytemode>\n+\t\t (match_operand:<ssebytemode> 3 \"register_operand\")) 0)\n+\t       (match_operand:VI48_AVX 4 \"const0_operand\")) 0)]\n+\t  UNSPEC_BLENDV))]\n+  \"TARGET_SSE4_1 && ix86_pre_reload_split ()\"\n+  \"#\"\n+  \"&& 1\"\n+  [(set (match_dup 0)\n+\t(unspec:<ssefltvecmode>\n+\t [(match_dup 2) (match_dup 1) (match_dup 3)] UNSPEC_BLENDV))]\n+{\n+  operands[0] = gen_lowpart (<ssefltvecmode>mode, operands[0]);\n+  operands[1] = gen_lowpart (<ssefltvecmode>mode, operands[1]);\n+  operands[2] = force_reg (<ssefltvecmode>mode,\n+\t\t\t   gen_lowpart (<ssefltvecmode>mode, operands[2]));\n+  operands[3] = gen_lowpart (<ssefltvecmode>mode, operands[3]);\n+})\n+\n (define_insn \"<sse4_1>_dp<ssemodesuffix><avxsizesuffix>\"\n   [(set (match_operand:VF_128_256 0 \"register_operand\" \"=Yr,*x,x\")\n \t(unspec:VF_128_256"}, {"sha": "ace186660fa36b44bced22618e4dab2d2d34b052", "filename": "gcc/testsuite/g++.target/i386/pr100738-1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/691f05c2197a7b79cb2d7fdbabe3182e22da320a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr100738-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/691f05c2197a7b79cb2d7fdbabe3182e22da320a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr100738-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr100738-1.C?ref=691f05c2197a7b79cb2d7fdbabe3182e22da320a", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mavx2\" } */\n+/* { dg-final {scan-assembler-times \"vblendvps\\[ \\\\t\\]\" 2 } } */\n+/* { dg-final {scan-assembler-not \"vpcmpeqd\\[ \\\\t\\]\" } } */\n+/* { dg-final {scan-assembler-not \"vpxor\\[ \\\\t\\]\" } } */\n+\n+typedef int v4si __attribute__((vector_size(16)));\n+typedef char v16qi __attribute__((vector_size(16)));\n+v4si\n+foo_1 (v16qi a, v4si b, v4si c, v4si d)\n+{\n+  return ((v4si)~a) < 0 ? c : d;\n+}\n+\n+v4si\n+foo_2 (v16qi a, v4si b, v4si c, v4si d)\n+{\n+  return ((v4si)~a) >= 0 ? c : d;\n+}"}]}