{"sha": "8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlOGFmYTNhNTY5ZmY2ZjhkNTQ1MTZmMWU5YjllZDAxZThjN2EzMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-21T16:41:10Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-21T16:41:45Z"}, "message": "Improve hasing of anonymous namespace types\n\n\t* ipa-icf.c (sem_function::equals_wpa): Do not compare ODR type with\n\t-fno-devirtualize.\n\t(sem_item_optimizer::update_hash_by_addr_refs): Hash anonymous ODR\n\ttypes by TYPE_UID of their main variant.", "tree": {"sha": "78a2030d4f94362b4133754234c5e43058e65258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78a2030d4f94362b4133754234c5e43058e65258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31/comments", "author": null, "committer": null, "parents": [{"sha": "c84add5c13d292b339e90b154587439e4721a8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84add5c13d292b339e90b154587439e4721a8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84add5c13d292b339e90b154587439e4721a8c5"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "5bbbec6c806fac05054010fea795a91f73020f5e", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=8ee8afa3a569ff6f8d54516f1e9b9ed01e8c7a31", "patch": "@@ -575,6 +575,7 @@ sem_function::equals_wpa (sem_item *item,\n      type memory location for ipa-polymorphic-call and we do not want\n      it to get confused by wrong type.  */\n   if (DECL_CXX_CONSTRUCTOR_P (decl)\n+      && opt_for_fn (decl, flag_devirtualize)\n       && TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE)\n     {\n       if (TREE_CODE (TREE_TYPE (item->decl)) != METHOD_TYPE)\n@@ -2536,11 +2537,24 @@ sem_item_optimizer::update_hash_by_addr_refs ()\n \t\t  = TYPE_METHOD_BASETYPE (TREE_TYPE (m_items[i]->decl));\n \t\tinchash::hash hstate (m_items[i]->get_hash ());\n \n+\t\t/* Hash ODR types by mangled name if it is defined.\n+\t\t   If not we know that type is anonymous of free_lang_data\n+\t\t   was not run and in that case type main variants are\n+\t\t   unique.  */\n \t\tif (TYPE_NAME (class_type)\n-\t\t     && DECL_ASSEMBLER_NAME_SET_P (TYPE_NAME (class_type)))\n+\t\t     && DECL_ASSEMBLER_NAME_SET_P (TYPE_NAME (class_type))\n+\t\t     && !type_in_anonymous_namespace_p\n+\t\t\t\t (class_type))\n \t\t  hstate.add_hwi\n \t\t    (IDENTIFIER_HASH_VALUE\n \t\t       (DECL_ASSEMBLER_NAME (TYPE_NAME (class_type))));\n+\t\telse\n+\t\t  {\n+\t\t    gcc_checking_assert\n+\t\t\t (!in_lto_p\n+\t\t\t  || type_in_anonymous_namespace_p (class_type));\n+\t\t    hstate.add_hwi (TYPE_UID (TYPE_MAIN_VARIANT (class_type)));\n+\t\t  }\n \n \t\tm_items[i]->set_hash (hstate.end ());\n \t     }"}]}