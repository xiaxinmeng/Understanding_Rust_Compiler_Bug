{"sha": "ae8b85c2ad253791fc8059e5f90b4ec68989e290", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4Yjg1YzJhZDI1Mzc5MWZjODA1OWU1ZjkwYjRlYzY4OTg5ZTI5MA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-07T17:16:54Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-07T17:16:54Z"}, "message": "(TARGET_VERSION): Define.\n\n(CPP_PREDEFINES): Delete sun, sparc, unix.  Delete OS assertions.\n(ASM_SPEC): Define.\n(LINK_SPEC): Delete solaris stuff, this is an embedded target.\n(STARTFILE_SPEC, ENDFILE_SPEC): Define.\n\nFrom-SVN: r9127", "tree": {"sha": "5bc0745089719310d5ed0353654f013932f85c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bc0745089719310d5ed0353654f013932f85c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8b85c2ad253791fc8059e5f90b4ec68989e290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8b85c2ad253791fc8059e5f90b4ec68989e290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8b85c2ad253791fc8059e5f90b4ec68989e290", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8b85c2ad253791fc8059e5f90b4ec68989e290/comments", "author": null, "committer": null, "parents": [{"sha": "94a8b9feee8369dc15f004c07b583bcdeb52a15f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a8b9feee8369dc15f004c07b583bcdeb52a15f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94a8b9feee8369dc15f004c07b583bcdeb52a15f"}], "stats": {"total": 81, "additions": 46, "deletions": 35}, "files": [{"sha": "a373f18804f2325f06a2ec52e773a554875fe0b9", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 46, "deletions": 35, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8b85c2ad253791fc8059e5f90b4ec68989e290/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8b85c2ad253791fc8059e5f90b4ec68989e290/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=ae8b85c2ad253791fc8059e5f90b4ec68989e290", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Sun SPARC-V9 on a hypothetical elf format machine.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Doug Evans, dje@cygnus.com.\n \n This file is part of GNU CC.\n@@ -37,17 +37,22 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"sparc/sol2.h\"\n \n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (sparc64-elf)\")\n+\n /* A v9 compiler with stack-bias, 32 bit integers and 64 bit pointers,\n    in a Medium/Anywhere code model environment.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n   (MASK_V9 + MASK_STACK_BIAS + MASK_MEDANY + MASK_PTR64 + MASK_HARD_QUAD + MASK_EPILOGUE + MASK_FPU)\n \n+/* __svr4__ is used by the C library */\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n- \"-Dsun -Dsparc -Dunix -D__svr4__ -D__sparc_v9__ \\\n-  -Asystem(unix) -Asystem(svr4) -Acpu(sparc64) -Amachine(sparc64)\"\n+#define CPP_PREDEFINES \"\\\n+-D__sparc__ -D__sparc_v9__ -D__svr4__ \\\n+-Acpu(sparc64) -Amachine(sparc64) \\\n+\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"\\\n@@ -58,27 +63,31 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n-/* Use the default (for now).  */\n-#undef STARTFILE_SPEC\n-\n-/* Use the default (for now).  */\n-#undef LIB_SPEC\n+#undef ASM_SPEC\n+#define ASM_SPEC \"\\\n+%{V} %{v:%{!V:-V}} -s %{fpic:-K PIC} %{fPIC:-K PIC} \\\n+\"\n \n /* This is taken from sol2.h.  */\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n-%{!nostdlib:%{!r*:%{!e*:-e _start}}} \\\n-%{h*} %{V} %{v:%{!V:-V}} \\\n-%{b} %{Wl,*:%*} \\\n-%{static:-dn -Bstatic} \\\n-%{shared:-G -dy} \\\n-%{symbolic:-Bsymbolic -G -dy} \\\n-%{G:-G} \\\n-%{YP,*} \\\n-%{R*} \\\n-%{Qy:} %{!Qn:-Qy} \\\n+%{V} %{v:%{!V:-V}} \\\n \"\n \n+/* We need something a little simpler for the embedded environment.\n+   Profiling doesn't really work yet so we just copy the default.  */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\\\n+%{!shared:%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}} \\\n+crtbegin.o%s \\\n+\"\n+\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \"%{!nostartfiles:crtend.o%s}\"\n+\n+/* Use the default (for now).  */\n+#undef LIB_SPEC\n+\n /* Unfortunately, svr4.h redefines these so we have to restore them to\n    their original values in sparc.h.  */\n /* ??? It might be possible to eventually get svr4.h to do the right thing.  */\n@@ -120,22 +129,24 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* DWARF stuff.  */\n \n-#define ASM_OUTPUT_DWARF_ADDR(FILE,LABEL)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\t\\\n-\tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n+#define ASM_OUTPUT_DWARF_ADDR(FILE, LABEL) \\\n+do {\t\t\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\\\n+  assemble_name ((FILE), (LABEL));\t\t\t\t\\\n+  fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n+} while (0)\n \n-#define ASM_OUTPUT_DWARF_ADDR_CONST(FILE,RTX)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\t\\\n-    output_addr_const ((FILE), (RTX));\t\t\t\t\t\\\n-    fputc ('\\n', (FILE));\t\t\t\t\t\t\\\n-  } while (0)\n+#define ASM_OUTPUT_DWARF_ADDR_CONST(FILE, RTX) \\\n+do {\t\t\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\\\n+  output_addr_const ((FILE), (RTX));\t\t\t\t\\\n+  fputc ('\\n', (FILE));\t\t\t\t\t\t\\\n+} while (0)\n \n /* ??? Not sure if this should be 4 or 8 bytes.  4 works for now.  */\n-#define ASM_OUTPUT_DWARF_REF(FILE,LABEL)\t\t\t\t\\\n- do {\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n-\tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n+#define ASM_OUTPUT_DWARF_REF(FILE, LABEL) \\\n+do {\t\t\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n+  assemble_name ((FILE), (LABEL));\t\t\t\t\\\n+  fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n+} while (0)"}]}