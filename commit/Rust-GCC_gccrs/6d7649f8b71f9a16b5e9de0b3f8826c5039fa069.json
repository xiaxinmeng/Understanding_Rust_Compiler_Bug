{"sha": "6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ3NjQ5ZjhiNzFmOWExNmI1ZTlkZTBiM2Y4ODI2YzUwMzlmYTA2OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-28T11:56:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-28T11:56:47Z"}, "message": "Set DECL_VALUE_EXPR after a debug stmt is generated (PR sanitizer/81340).\n\n2017-07-28  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/81340\n\t* sanopt.c (sanitize_rewrite_addressable_params): Set VALUE_EXPR after\n\tgimple_build_debug_bind.\n2017-07-28  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/81340\n\t* g++.dg/asan/pr81340.C: New test.\n\nFrom-SVN: r250660", "tree": {"sha": "813973611a321535c3cd8332ad2c600149d0820b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/813973611a321535c3cd8332ad2c600149d0820b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92e29a5e86c8adc88ee17a483d7284d7bb9e090c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e29a5e86c8adc88ee17a483d7284d7bb9e090c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e29a5e86c8adc88ee17a483d7284d7bb9e090c"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "5aaf5856701555fe84e30a36199729a14ce1388b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "patch": "@@ -1,3 +1,9 @@\n+2017-07-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/81340\n+\t* sanopt.c (sanitize_rewrite_addressable_params): Set VALUE_EXPR after\n+\tgimple_build_debug_bind.\n+\n 2017-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81502"}, {"sha": "f6dd14da00d451c49a6571729a902b69e1e60d19", "filename": "gcc/sanopt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Fsanopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Fsanopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.c?ref=6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "patch": "@@ -916,8 +916,6 @@ sanitize_rewrite_addressable_params (function *fun)\n \t\t     IDENTIFIER_POINTER (DECL_NAME (arg)));\n \n \t  gcc_assert (!DECL_HAS_VALUE_EXPR_P (arg));\n-\t  DECL_HAS_VALUE_EXPR_P (arg) = 1;\n-\t  SET_DECL_VALUE_EXPR (arg, var);\n \n \t  SET_DECL_PT_UID (var, DECL_PT_UID (arg));\n \n@@ -946,6 +944,9 @@ sanitize_rewrite_addressable_params (function *fun)\n \t      gimple_seq_add_stmt (&stmts, g);\n \t      clear_value_expr_list.safe_push (arg);\n \t    }\n+\n+\t  DECL_HAS_VALUE_EXPR_P (arg) = 1;\n+\t  SET_DECL_VALUE_EXPR (arg, var);\n \t}\n     }\n "}, {"sha": "b82e9bdd9be1be95abfd23f41f6f2285794749d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "patch": "@@ -1,3 +1,8 @@\n+2017-07-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/81340\n+\t* g++.dg/asan/pr81340.C: New test.\n+\n 2017-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81502"}, {"sha": "76ac08a9a5622c9fcde1c980a4381005b22674ca", "filename": "gcc/testsuite/g++.dg/asan/pr81340.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81340.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d7649f8b71f9a16b5e9de0b3f8826c5039fa069/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81340.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fpr81340.C?ref=6d7649f8b71f9a16b5e9de0b3f8826c5039fa069", "patch": "@@ -0,0 +1,22 @@\n+// { dg-options \"-fsanitize=address -O2 -g -Wno-write-strings\" }\n+\n+class a {\n+  struct b {\n+    b(int, int);\n+  } c;\n+\n+public:\n+  int d;\n+  a(char *) : c(0, d) {}\n+};\n+class e {\n+  int f(const int &, const int &, const int &, bool, bool, bool, int, bool);\n+};\n+class g {\n+public:\n+  static g *h();\n+  void i(a, void *);\n+};\n+int e::f(const int &, const int &, const int &, bool j, bool, bool, int, bool) {\n+  g::h()->i(\"\", &j);\n+}"}]}