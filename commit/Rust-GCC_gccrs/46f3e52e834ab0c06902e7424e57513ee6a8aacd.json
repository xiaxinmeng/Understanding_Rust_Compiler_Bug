{"sha": "46f3e52e834ab0c06902e7424e57513ee6a8aacd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmM2U1MmU4MzRhYjBjMDY5MDJlNzQyNGU1NzUxM2VlNmE4YWFjZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-13T00:09:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-13T00:09:34Z"}, "message": "re PR target/92904 (varargs for __int128 is placed at an unaligned location and uses movdqa for the load)\n\n\tPR target/92904\n\t* config/i386/i386.c (ix86_gimplify_va_arg): If need_intregs and\n\tnot need_temp, decrease alignment of the read because the GPR save\n\tarea only guarantees 8-byte alignment.\n\n\t* gcc.c-torture/execute/pr92904.c: New test.\n\nFrom-SVN: r279327", "tree": {"sha": "33d98955ff15abf7eb2f742fdd31c20447e0510e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33d98955ff15abf7eb2f742fdd31c20447e0510e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f3e52e834ab0c06902e7424e57513ee6a8aacd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f3e52e834ab0c06902e7424e57513ee6a8aacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f3e52e834ab0c06902e7424e57513ee6a8aacd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f3e52e834ab0c06902e7424e57513ee6a8aacd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e4bb241476d2cd81fc1dac1bede902d3dd9c1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4bb241476d2cd81fc1dac1bede902d3dd9c1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4bb241476d2cd81fc1dac1bede902d3dd9c1e3"}], "stats": {"total": 413, "additions": 413, "deletions": 0}, "files": [{"sha": "d9bf5f7841c1234f533acd317257baa5eefd6ad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46f3e52e834ab0c06902e7424e57513ee6a8aacd", "patch": "@@ -1,3 +1,10 @@\n+2019-12-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92904\n+\t* config/i386/i386.c (ix86_gimplify_va_arg): If need_intregs and\n+\tnot need_temp, decrease alignment of the read because the GPR save\n+\tarea only guarantees 8-byte alignment.\n+\n 2019-12-12  Georg-Johann Lay  <avr@gjlay.de>\n \n \tAdd support for some more AVR devices from avrxmega3 family."}, {"sha": "551e77a855a05400268babe8941510ea9f9cc7f8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=46f3e52e834ab0c06902e7424e57513ee6a8aacd", "patch": "@@ -4277,6 +4277,7 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n   tree ptrtype;\n   machine_mode nat_mode;\n   unsigned int arg_boundary;\n+  unsigned int type_align;\n \n   /* Only 64bit target needs something special.  */\n   if (is_va_list_char_pointer (TREE_TYPE (valist)))\n@@ -4334,6 +4335,7 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n   /* Pull the value out of the saved registers.  */\n \n   addr = create_tmp_var (ptr_type_node, \"addr\");\n+  type_align = TYPE_ALIGN (type);\n \n   if (container)\n     {\n@@ -4504,6 +4506,9 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t  t = build2 (PLUS_EXPR, TREE_TYPE (gpr), gpr,\n \t\t      build_int_cst (TREE_TYPE (gpr), needed_intregs * 8));\n \t  gimplify_assign (gpr, t, pre_p);\n+\t  /* The GPR save area guarantees only 8-byte alignment.  */\n+\t  if (!need_temp)\n+\t    type_align = MIN (type_align, 64);\n \t}\n \n       if (needed_sseregs)\n@@ -4548,6 +4553,7 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n   if (container)\n     gimple_seq_add_stmt (pre_p, gimple_build_label (lab_over));\n \n+  type = build_aligned_type (type, type_align);\n   ptrtype = build_pointer_type_for_mode (type, ptr_mode, true);\n   addr = fold_convert (ptrtype, addr);\n "}, {"sha": "224f8abf93407283773da84d7f0163a4c3930619", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46f3e52e834ab0c06902e7424e57513ee6a8aacd", "patch": "@@ -1,3 +1,8 @@\n+2019-12-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92904\n+\t* gcc.c-torture/execute/pr92904.c: New test.\n+\n 2019-12-12  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/92898"}, {"sha": "25cb0b8c595c8f15a0b91292d2ff1bfc1d8c29d3", "filename": "gcc/testsuite/gcc.c-torture/execute/pr92904.c", "status": "added", "additions": 395, "deletions": 0, "changes": 395, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr92904.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f3e52e834ab0c06902e7424e57513ee6a8aacd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr92904.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr92904.c?ref=46f3e52e834ab0c06902e7424e57513ee6a8aacd", "patch": "@@ -0,0 +1,395 @@\n+/* PR target/92904 */\n+\n+#include <stdarg.h>\n+\n+struct S { long long a, b; };\n+struct __attribute__((aligned (16))) T { long long a, b; };\n+struct U { double a, b, c, d; };\n+struct __attribute__((aligned (32))) V { double a, b, c, d; };\n+struct W { double a; long long b; };\n+struct __attribute__((aligned (16))) X { double a; long long b; };\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+__int128 b;\n+#endif\n+struct S c;\n+struct T d;\n+struct U e;\n+struct V f;\n+struct W g;\n+struct X h;\n+\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+__attribute__((noipa)) __int128\n+f1 (int x, ...)\n+{\n+  __int128 r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  r = va_arg (ap, __int128);\n+  va_end (ap);\n+  return r;\n+}\n+#endif\n+\n+__attribute__((noipa)) struct S\n+f2 (int x, ...)\n+{\n+  struct S r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  r = va_arg (ap, struct S);\n+  va_end (ap);\n+  return r;\n+}\n+\n+__attribute__((noipa)) struct T\n+f3 (int x, ...)\n+{\n+  struct T r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  r = va_arg (ap, struct T);\n+  va_end (ap);\n+  return r;\n+}\n+\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+__attribute__((noipa)) void\n+f4 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  b = va_arg (ap, __int128);\n+  va_end (ap);\n+}\n+#endif\n+\n+__attribute__((noipa)) void\n+f5 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  c = va_arg (ap, struct S);\n+  va_end (ap);\n+}\n+\n+__attribute__((noipa)) void\n+f6 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, int);\n+  d = va_arg (ap, struct T);\n+  va_end (ap);\n+}\n+\n+__attribute__((noipa)) struct U\n+f7 (int x, ...)\n+{\n+  struct U r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, double);\n+  r = va_arg (ap, struct U);\n+  va_end (ap);\n+  return r;\n+}\n+\n+__attribute__((noipa)) struct V\n+f8 (int x, ...)\n+{\n+  struct V r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, double);\n+  r = va_arg (ap, struct V);\n+  va_end (ap);\n+  return r;\n+}\n+\n+__attribute__((noipa)) void\n+f9 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, double);\n+  e = va_arg (ap, struct U);\n+  va_end (ap);\n+}\n+\n+__attribute__((noipa)) void\n+f10 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    va_arg (ap, double);\n+  f = va_arg (ap, struct V);\n+  va_end (ap);\n+}\n+\n+__attribute__((noipa)) struct W\n+f11 (int x, ...)\n+{\n+  struct W r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    {\n+      va_arg (ap, int);\n+      va_arg (ap, double);\n+    }\n+  r = va_arg (ap, struct W);\n+  va_end (ap);\n+  return r;\n+}\n+\n+__attribute__((noipa)) struct X\n+f12 (int x, ...)\n+{\n+  struct X r;\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    {\n+      va_arg (ap, int);\n+      va_arg (ap, double);\n+    }\n+  r = va_arg (ap, struct X);\n+  va_end (ap);\n+  return r;\n+}\n+\n+__attribute__((noipa)) void\n+f13 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    {\n+      va_arg (ap, int);\n+      va_arg (ap, double);\n+    }\n+  g = va_arg (ap, struct W);\n+  va_end (ap);\n+}\n+\n+__attribute__((noipa)) void\n+f14 (int x, ...)\n+{\n+  va_list ap;\n+  va_start (ap, x);\n+  while (x--)\n+    {\n+      va_arg (ap, int);\n+      va_arg (ap, double);\n+    }\n+  h = va_arg (ap, struct X);\n+  va_end (ap);\n+}\n+\n+int\n+main ()\n+{\n+  union Y {\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+    __int128 b;\n+#endif\n+    struct S c;\n+    struct T d;\n+    struct U e;\n+    struct V f;\n+    struct W g;\n+    struct X h;\n+  } u, v;\n+  u.c.a = 0x5555555555555555ULL;\n+  u.c.b = 0xaaaaaaaaaaaaaaaaULL;\n+#define C(x) \\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if (u.c.a != x.c.a || u.c.b != x.c.b) __builtin_abort ();\t\\\n+    u.c.a++;\t\t\t\t\t\t\t\\\n+    u.c.b--;\t\t\t\t\t\t\t\\\n+  } while (0)\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+  v.b = f1 (0, u.b); C (v);\n+  v.b = f1 (1, 0, u.b); C (v);\n+  v.b = f1 (2, 0, 0, u.b); C (v);\n+  v.b = f1 (3, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (4, 0, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (5, 0, 0, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (6, 0, 0, 0, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (7, 0, 0, 0, 0, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.b); C (v);\n+  v.b = f1 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.b); C (v);\n+#endif\n+  v.c = f2 (0, u.c); C (v);\n+  v.c = f2 (1, 0, u.c); C (v);\n+  v.c = f2 (2, 0, 0, u.c); C (v);\n+  v.c = f2 (3, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (4, 0, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (5, 0, 0, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (6, 0, 0, 0, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (7, 0, 0, 0, 0, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.c); C (v);\n+  v.c = f2 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.c); C (v);\n+  v.d = f3 (0, u.d); C (v);\n+  v.d = f3 (1, 0, u.d); C (v);\n+  v.d = f3 (2, 0, 0, u.d); C (v);\n+  v.d = f3 (3, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (4, 0, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (5, 0, 0, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (6, 0, 0, 0, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (7, 0, 0, 0, 0, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.d); C (v);\n+  v.d = f3 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.d); C (v);\n+#if __SIZEOF_INT128__ == 2 * __SIZEOF_LONG_LONG__\n+  f4 (0, u.b); v.b = b; C (v);\n+  f4 (1, 0, u.b); v.b = b; C (v);\n+  f4 (2, 0, 0, u.b); v.b = b; C (v);\n+  f4 (3, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (4, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (5, 0, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (6, 0, 0, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (7, 0, 0, 0, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+  f4 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.b); v.b = b; C (v);\n+#endif\n+  f5 (0, u.c); v.c = c; C (v);\n+  f5 (1, 0, u.c); v.c = c; C (v);\n+  f5 (2, 0, 0, u.c); v.c = c; C (v);\n+  f5 (3, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (4, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (5, 0, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (6, 0, 0, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (7, 0, 0, 0, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f5 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.c); v.c = c; C (v);\n+  f6 (0, u.d); v.d = d; C (v);\n+  f6 (1, 0, u.d); v.d = d; C (v);\n+  f6 (2, 0, 0, u.d); v.d = d; C (v);\n+  f6 (3, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (4, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (5, 0, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (6, 0, 0, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (7, 0, 0, 0, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (8, 0, 0, 0, 0, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  f6 (9, 0, 0, 0, 0, 0, 0, 0, 0, 0, u.d); v.d = d; C (v);\n+  u.e.a = 1.25;\n+  u.e.b = 2.75;\n+  u.e.c = -3.5;\n+  u.e.d = -2.0;\n+#undef C\n+#define C(x) \\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if (u.e.a != x.e.a || u.e.b != x.e.b\t\t\t\\\n+\t|| u.e.c != x.e.c || u.e.d != x.e.d) __builtin_abort ();\\\n+    u.e.a++;\t\t\t\t\t\t\t\\\n+    u.e.b--;\t\t\t\t\t\t\t\\\n+    u.e.c++;\t\t\t\t\t\t\t\\\n+    u.e.d--;\t\t\t\t\t\t\t\\\n+  } while (0)\n+  v.e = f7 (0, u.e); C (v);\n+  v.e = f7 (1, 0.0, u.e); C (v);\n+  v.e = f7 (2, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (3, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (4, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (5, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.e = f7 (9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); C (v);\n+  v.f = f8 (0, u.f); C (v);\n+  v.f = f8 (1, 0.0, u.f); C (v);\n+  v.f = f8 (2, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (3, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (4, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (5, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  v.f = f8 (9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); C (v);\n+  f9 (0, u.e); v.e = e; C (v);\n+  f9 (1, 0.0, u.e); v.e = e; C (v);\n+  f9 (2, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (3, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (4, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (5, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f9 (9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.e); v.e = e; C (v);\n+  f10 (0, u.f); v.f = f; C (v);\n+  f10 (1, 0.0, u.f); v.f = f; C (v);\n+  f10 (2, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (3, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (4, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (5, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  f10 (9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, u.f); v.f = f; C (v);\n+  u.g.a = 9.5;\n+  u.g.b = 0x5555555555555555ULL;\n+#undef C\n+#define C(x) \\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if (u.e.a != x.e.a || u.e.b != x.e.b) __builtin_abort ();\t\\\n+    u.e.a++;\t\t\t\t\t\t\t\\\n+    u.e.b--;\t\t\t\t\t\t\t\\\n+  } while (0)\n+  v.g = f11 (0, u.g); C (v);\n+  v.g = f11 (1, 0, 0.0, u.g); C (v);\n+  v.g = f11 (2, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (3, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (4, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (5, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (6, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (7, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (8, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.g = f11 (9, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); C (v);\n+  v.h = f12 (0, u.h); C (v);\n+  v.h = f12 (1, 0, 0.0, u.h); C (v);\n+  v.h = f12 (2, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (3, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (4, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (5, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (6, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (7, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (8, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  v.h = f12 (9, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); C (v);\n+  f13 (0, u.g); v.g = g; C (v);\n+  f13 (1, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (2, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (3, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (4, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (5, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (6, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (7, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (8, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f13 (9, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.g); v.g = g; C (v);\n+  f14 (0, u.h); v.h = h; C (v);\n+  f14 (1, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (2, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (3, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (4, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (5, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (6, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (7, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (8, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  f14 (9, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, u.h); v.h = h; C (v);\n+  return 0;\n+}"}]}