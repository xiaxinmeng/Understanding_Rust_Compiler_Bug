{"sha": "86219cc76f52066bc849b7693fe0bc5ebf41503d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYyMTljYzc2ZjUyMDY2YmM4NDliNzY5M2ZlMGJjNWViZjQxNTAzZA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-10-22T15:48:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-22T15:48:47Z"}, "message": "loop.c (express_from): Make sure that when generating a PLUS of a PLUS...\n\n        * loop.c (express_from): Make sure that when generating a PLUS of\n        a PLUS, any constant expression appears on the outermost PLUS.\n\nFrom-SVN: r23226", "tree": {"sha": "270ce0b12b84ef428fc1dfd6d44bd996d1165aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/270ce0b12b84ef428fc1dfd6d44bd996d1165aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86219cc76f52066bc849b7693fe0bc5ebf41503d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86219cc76f52066bc849b7693fe0bc5ebf41503d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86219cc76f52066bc849b7693fe0bc5ebf41503d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86219cc76f52066bc849b7693fe0bc5ebf41503d/comments", "author": null, "committer": null, "parents": [{"sha": "db1b5e8135ad094bb6a8a7f78d857272603dec49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db1b5e8135ad094bb6a8a7f78d857272603dec49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db1b5e8135ad094bb6a8a7f78d857272603dec49"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "f1e69851af9126b1d7ed8631922489b312a9ea3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86219cc76f52066bc849b7693fe0bc5ebf41503d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86219cc76f52066bc849b7693fe0bc5ebf41503d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86219cc76f52066bc849b7693fe0bc5ebf41503d", "patch": "@@ -1,3 +1,8 @@\n+Thu Oct 22 16:46:35 1998  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n+\n+\t* loop.c (express_from): Make sure that when generating a PLUS of\n+\ta PLUS, any constant expression appears on the outermost PLUS.\n+\n Thu Oct 22 15:46:23 1998  Per Bothner (bothner@cygnus.com)\n \n \t* Makefile.in (distdir-cvs, distdir-start):  Clean up so it"}, {"sha": "c8b0954e2271f1837663119e119cbc82e2803591", "filename": "gcc/loop.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86219cc76f52066bc849b7693fe0bc5ebf41503d/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86219cc76f52066bc849b7693fe0bc5ebf41503d/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=86219cc76f52066bc849b7693fe0bc5ebf41503d", "patch": "@@ -6221,7 +6221,18 @@ express_from (g1, g2)\n   if (add == const0_rtx)\n     return mult;\n   else\n-    return gen_rtx_PLUS (g2->mode, mult, add);\n+    {\n+      if (GET_CODE (add) == PLUS\n+\t  && CONSTANT_P (XEXP (add, 1)))\n+\t{\n+\t  rtx tem = XEXP (add, 1);\n+\t  mult = gen_rtx_PLUS (g2->mode, mult, XEXP (add, 0));\n+\t  add = tem;\n+\t}\n+      \n+      return gen_rtx_PLUS (g2->mode, mult, add);\n+    }\n+  \n }\n \f\n /* Return an rtx, if any, that expresses giv G2 as a function of the register"}]}