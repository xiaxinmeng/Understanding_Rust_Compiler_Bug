{"sha": "d9338471b91bbe6e1579088c7d40ab257ac3764d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkzMzg0NzFiOTFiYmU2ZTE1NzkwODhjN2Q0MGFiMjU3YWMzNzY0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-25T21:03:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-25T21:03:07Z"}, "message": "PR c++/85815 - reference to member of enclosing template.\n\n\t* search.c (lookup_base): Use currently_open_class.\n\t(lookup_member): Use it regardless of -fconcepts.\n\t* parser.c (cp_parser_postfix_dot_deref_expression): Check it.\n\nFrom-SVN: r260782", "tree": {"sha": "97053fdc89d47552fdc5cc2938a2c33fcea48fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97053fdc89d47552fdc5cc2938a2c33fcea48fe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9338471b91bbe6e1579088c7d40ab257ac3764d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9338471b91bbe6e1579088c7d40ab257ac3764d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9338471b91bbe6e1579088c7d40ab257ac3764d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9338471b91bbe6e1579088c7d40ab257ac3764d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99dcfb5fc184d4eeb2753ae9475bda4d58266161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99dcfb5fc184d4eeb2753ae9475bda4d58266161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99dcfb5fc184d4eeb2753ae9475bda4d58266161"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "58fc696c571cf1b2984e524eb59416d065c9ac9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d9338471b91bbe6e1579088c7d40ab257ac3764d", "patch": "@@ -1,5 +1,10 @@\n 2018-05-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85815 - reference to member of enclosing template.\n+\t* search.c (lookup_base): Use currently_open_class.\n+\t(lookup_member): Use it regardless of -fconcepts.\n+\t* parser.c (cp_parser_postfix_dot_deref_expression): Check it.\n+\n \tCWG 616, 1213 - value category of subobject references.\n \t* tree.c (lvalue_kind): Fix handling of ARRAY_REF of pointer.\n "}, {"sha": "ab68b9be42a661c18feb4c159d1854f05c1279a0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d9338471b91bbe6e1579088c7d40ab257ac3764d", "patch": "@@ -7462,8 +7462,8 @@ pop_class_stack (void)\n     --current_class_stack[current_class_depth - 1].hidden;\n }\n \n-/* Returns 1 if the class type currently being defined is either T or\n-   a nested type of T.  Returns the type from the current_class_stack,\n+/* If the class type currently being defined is either T or\n+   a nested type of T, returns the type from the current_class_stack,\n    which might be equivalent to but not equal to T in case of\n    constrained partial specializations.  */\n "}, {"sha": "d17beb8f93078194596f934b516631911e2cddd3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d9338471b91bbe6e1579088c7d40ab257ac3764d", "patch": "@@ -7488,10 +7488,7 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n \t access (5.2.5) outside the member function body.  */\n       if (postfix_expression != current_class_ref\n \t  && scope != error_mark_node\n-\t  && !(processing_template_decl\n-\t       && current_class_type\n-\t       && (same_type_ignoring_top_level_qualifiers_p\n-\t\t   (scope, current_class_type))))\n+\t  && !currently_open_class (scope))\n \t{\n \t  scope = complete_type (scope);\n \t  if (!COMPLETE_TYPE_P (scope)"}, {"sha": "c2860b0dc9a8e20e7d4690971afcfa4953e9ee62", "filename": "gcc/cp/search.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=d9338471b91bbe6e1579088c7d40ab257ac3764d", "patch": "@@ -192,6 +192,9 @@ lookup_base (tree t, tree base, base_access access,\n   else\n     {\n       t = complete_type (TYPE_MAIN_VARIANT (t));\n+      if (dependent_type_p (t))\n+\tif (tree open = currently_open_class (t))\n+\t  t = open;\n       t_binfo = TYPE_BINFO (t);\n     }\n \n@@ -1117,7 +1120,7 @@ lookup_member (tree xbasetype, tree name, int protect, bool want_type,\n \n   /* Make sure we're looking for a member of the current instantiation in the\n      right partial specialization.  */\n-  if (flag_concepts && dependent_type_p (type))\n+  if (dependent_type_p (type))\n     if (tree t = currently_open_class (type))\n       type = t;\n "}, {"sha": "6fd2bb379bfa8df8da933bcabd1238e2f02a3187", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-dependent1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-dependent1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9338471b91bbe6e1579088c7d40ab257ac3764d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-dependent1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-dependent1.C?ref=d9338471b91bbe6e1579088c7d40ab257ac3764d", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/85815\n+// { dg-do compile { target c++11 } }\n+\n+template<class T>\n+class A {\n+    static A* INSTANCE;\n+    void foobar();\n+    void moo() {}\n+};\n+\n+template<class T>\n+A<T>* A<T>::INSTANCE = nullptr;\n+\n+template<class T>\n+void A<T>::foobar() {\n+    auto x = []() {\n+        INSTANCE->moo();\n+    };\n+}"}]}