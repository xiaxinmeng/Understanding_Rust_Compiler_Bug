{"sha": "54e73f88026e7c167232328e55d70551fa4aadda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlNzNmODgwMjZlN2MxNjcyMzIzMjhlNTVkNzA1NTFmYTRhYWRkYQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2011-09-09T13:57:41Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2011-09-09T13:57:41Z"}, "message": "arm-cores.def (generic-armv7-a): New architecture.\n\n2011-09-09  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm-cores.def (generic-armv7-a): New architecture.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Regenerate.\n\t* config/arm/arm.c (arm_file_start): Output .arch directive when\n\tuser passes -mcpu=generic-*.\n\t(arm_issue_rate): Add genericv7a support.\n\t* config/arm/arm.h (EXTRA_SPECS): Add asm_cpu_spec.\n\t(ASM_CPU_SPEC): New define.\n\t* config/arm/elf.h (ASM_SPEC): Use %(asm_cpu_spec).\n\t* config/arm/semi.h (ASM_SPEC): Likewise.\n\t* doc/invoke.texi (ARM Options): Document -mcpu=generic-*\n\tand -mtune=generic-*.\n\nFrom-SVN: r178731", "tree": {"sha": "9c033b5edef5afded6ef93aa699087355bd82618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c033b5edef5afded6ef93aa699087355bd82618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e73f88026e7c167232328e55d70551fa4aadda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e73f88026e7c167232328e55d70551fa4aadda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e73f88026e7c167232328e55d70551fa4aadda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e73f88026e7c167232328e55d70551fa4aadda/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c52571dff7e18a173732e2697f06dcc11424c6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52571dff7e18a173732e2697f06dcc11424c6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52571dff7e18a173732e2697f06dcc11424c6bb"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "ce7c22c52eeb2e26e340acea28d5be28aebe7eda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -1,3 +1,18 @@\n+2011-09-09  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/arm/arm-cores.def (generic-armv7-a): New architecture.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* config/arm/arm.c (arm_file_start): Output .arch directive when\n+\tuser passes -mcpu=generic-*.\n+\t(arm_issue_rate): Add genericv7a support.\n+\t* config/arm/arm.h (EXTRA_SPECS): Add asm_cpu_spec.\n+\t(ASM_CPU_SPEC): New define.\n+\t* config/arm/elf.h (ASM_SPEC): Use %(asm_cpu_spec).\n+\t* config/arm/semi.h (ASM_SPEC): Likewise.\n+\t* doc/invoke.texi (ARM Options): Document -mcpu=generic-*\n+\tand -mtune=generic-*.\n+\n 2011-09-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50328"}, {"sha": "742b5e80ccd1c8fe313546ab2aa37d25e0003cf5", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -124,6 +124,7 @@ ARM_CORE(\"mpcorenovfp\",\t  mpcorenovfp,\t6K,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"mpcore\",\t  mpcore,\t6K,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"arm1156t2-s\",\t  arm1156t2s,\t6T2,\t\t\t\t FL_LDSCHED, v6t2)\n ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, v6t2)\n+ARM_CORE(\"generic-armv7-a\", genericv7a,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex_a5)\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n@@ -135,3 +136,4 @@ ARM_CORE(\"cortex-m4\",\t  cortexm4,\t7EM,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-m3\",\t  cortexm3,\t7M,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-m1\",\t  cortexm1,\t6M,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-m0\",\t  cortexm0,\t6M,\t\t\t\t FL_LDSCHED, cortex)\n+"}, {"sha": "d86e376b15d28c91a45fbd6c822243e02536c236", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -231,6 +231,9 @@ Enum(processor_type) String(arm1156t2-s) Value(arm1156t2s)\n EnumValue\n Enum(processor_type) String(arm1156t2f-s) Value(arm1156t2fs)\n \n+EnumValue\n+Enum(processor_type) String(generic-armv7-a) Value(genericv7a)\n+\n EnumValue\n Enum(processor_type) String(cortex-a5) Value(cortexa5)\n "}, {"sha": "4b439d03e4253e4109ed71ce7151be2bb71ff19e", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from arm-cores.def\n (define_attr \"tune\"\n-\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,cortexa5,cortexa8,cortexa9,cortexa15,cortexr4,cortexr4f,cortexr5,cortexm4,cortexm3,cortexm1,cortexm0\"\n+\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,genericv7a,cortexa5,cortexa8,cortexa9,cortexa15,cortexr4,cortexr4f,cortexr5,cortexm4,cortexm3,cortexm1,cortexm0\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "754956262a90bb4f738f85f86944dde879779d43", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -22209,6 +22209,8 @@ arm_file_start (void)\n       const char *fpu_name;\n       if (arm_selected_arch)\n \tasm_fprintf (asm_out_file, \"\\t.arch %s\\n\", arm_selected_arch->name);\n+      else if (strncmp (arm_selected_cpu->name, \"generic\", 7) == 0)\n+\tasm_fprintf (asm_out_file, \"\\t.arch %s\\n\", arm_selected_cpu->name + 8);\n       else\n \tasm_fprintf (asm_out_file, \"\\t.cpu %s\\n\", arm_selected_cpu->name);\n \n@@ -23733,6 +23735,7 @@ arm_issue_rate (void)\n     case cortexr4:\n     case cortexr4f:\n     case cortexr5:\n+    case genericv7a:\n     case cortexa5:\n     case cortexa8:\n     case cortexa9:"}, {"sha": "1e8c29a1b1f5ce6e8c936b476157a6c569fa6c70", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -189,6 +189,7 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n    Do not define this macro if it does not need to do anything.  */\n #define EXTRA_SPECS\t\t\t\t\t\t\\\n   { \"subtarget_cpp_spec\",\tSUBTARGET_CPP_SPEC },           \\\n+  { \"asm_cpu_spec\",\t\tASM_CPU_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n #ifndef SUBTARGET_EXTRA_SPECS\n@@ -2223,4 +2224,8 @@ extern int making_const_table;\n    instruction.  */\n #define MAX_LDM_STM_OPS 4\n \n+#define ASM_CPU_SPEC \\\n+   \" %{mcpu=generic-*:-march=%*;\"\t\t\t\t\\\n+   \"   :%{mcpu=*:-mcpu=%*} %{march=*:-march=%*}}\"\n+\n #endif /* ! GCC_ARM_H */"}, {"sha": "e0a0aa06c186a3fffc89b2d0f74b4fa5c46575f0", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -56,8 +56,7 @@\n #define ASM_SPEC \"\\\n %{mbig-endian:-EB} \\\n %{mlittle-endian:-EL} \\\n-%{mcpu=*:-mcpu=%*} \\\n-%{march=*:-march=%*} \\\n+%(asm_cpu_spec) \\\n %{mapcs-*:-mapcs-%*} \\\n %(subtarget_asm_float_spec) \\\n %{mthumb-interwork:-mthumb-interwork} \\"}, {"sha": "bbececef83f8bbd1848bd2a974dbcbed3e7f4411", "filename": "gcc/config/arm/semi.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Fsemi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fconfig%2Farm%2Fsemi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemi.h?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -61,8 +61,7 @@\n #define ASM_SPEC \"\\\n %{fpic|fpie: -k} %{fPIC|fPIE: -k} \\\n %{mbig-endian:-EB} \\\n-%{mcpu=*:-mcpu=%*} \\\n-%{march=*:-march=%*} \\\n+%(arm_cpu_spec) \\\n %{mapcs-float:-mfloat} \\\n %{mfloat-abi=*} %{mfpu=*} \\\n %{mthumb-interwork:-mthumb-interwork} \\"}, {"sha": "957d75ce964a247e87f2ecdc0c04fff15ce446ac", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e73f88026e7c167232328e55d70551fa4aadda/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=54e73f88026e7c167232328e55d70551fa4aadda", "patch": "@@ -10329,6 +10329,10 @@ assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{fa526}, @samp{fa626},\n @samp{fa606te}, @samp{fa626te}, @samp{fmp626}, @samp{fa726te}.\n \n+@option{-mcpu=generic-@var{arch}} is also permissible, and is\n+equivalent to @option{-march=@var{arch} -mtune=generic-@var{arch}}.\n+See @option{-mtune} for more information.\n+\n @item -mtune=@var{name}\n @opindex mtune\n This option is very similar to the @option{-mcpu=} option, except that\n@@ -10340,6 +10344,13 @@ will generate based on the CPU specified by a @option{-mcpu=} option.\n For some ARM implementations better performance can be obtained by using\n this option.\n \n+@option{-mtune=generic-@var{arch}} specifies that GCC should tune the\n+performance for a blend of processors within architecture @var{arch}.\n+The aim is to generate code that run well on the current most popular\n+processors, balancing between optimizations that benefit some CPUs in the\n+range, and avoiding performance pitfalls of other CPUs.  The effects of\n+this option may change in future GCC versions as CPU models come and go.\n+\n @item -march=@var{name}\n @opindex march\n This specifies the name of the target ARM architecture.  GCC uses this"}]}