{"sha": "6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRjOGVlNDE5ZWE5MWEyNjQxZTM1YjdiMDBiODE2MzlmNWJiNGE4ZQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@linaro.org", "date": "2018-10-31T10:05:54Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2018-10-31T10:05:54Z"}, "message": "Fix PR87374: ICE with -mslow-flash-data and -mword-relocations\n\nGCC ICEs under -mslow-flash-data and -mword-relocations because there\nis no way to load an address, both literal pools and MOVW/MOVT being\nforbidden. This patch gives an error message when both options are\nspecified by the user and adds the according dg-skip-if directives for\ntests that use either of these options. It also explicitely set the\noption when in PIC mode as per documentation rather than always check\nfor target_word_relocation together with flag_pic.\n\n2018-10-31  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n\n    gcc/\n    PR target/87374\n    * config/arm/arm.c (arm_option_check_internal): Disable the combined\n    use of -mslow-flash-data and -mword-relocations.\n    (arm_option_override): Enable -mword-relocations if -fpic or -fPIC.\n    * config/arm/arm.md (SYMBOL_REF MOVT splitter): Stop checking for\n    flag_pic.\n    * doc/invoke.texi (-mword-relocations): Mention conflict with\n    -mslow-flash-data.\n    (-mslow-flash-data): Reciprocally.\n\n    gcc/testsuite/\n    PR target/87374\n    * gcc.target/arm/movdi_movt.c: Skip if both -mslow-flash-data and\n    -mword-relocations would be passed when compiling the test.\n    * gcc.target/arm/movsi_movt.c: Likewise.\n    * gcc.target/arm/pr81863.c: Likewise.\n    * gcc.target/arm/thumb2-slow-flash-data-1.c: Likewise.\n    * gcc.target/arm/thumb2-slow-flash-data-2.c: Likewise.\n    * gcc.target/arm/thumb2-slow-flash-data-3.c: Likewise.\n    * gcc.target/arm/thumb2-slow-flash-data-4.c: Likewise.\n    * gcc.target/arm/thumb2-slow-flash-data-5.c: Likewise.\n    * gcc.target/arm/tls-disable-literal-pool.c: Likewise.\n\nFrom-SVN: r265662", "tree": {"sha": "6c961f24d64d8d5e92316459ffdcfc5ac195e8d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c961f24d64d8d5e92316459ffdcfc5ac195e8d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/comments", "author": {"login": "tpreudhomme-linaro", "id": 43454833, "node_id": "MDQ6VXNlcjQzNDU0ODMz", "avatar_url": "https://avatars.githubusercontent.com/u/43454833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpreudhomme-linaro", "html_url": "https://github.com/tpreudhomme-linaro", "followers_url": "https://api.github.com/users/tpreudhomme-linaro/followers", "following_url": "https://api.github.com/users/tpreudhomme-linaro/following{/other_user}", "gists_url": "https://api.github.com/users/tpreudhomme-linaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpreudhomme-linaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpreudhomme-linaro/subscriptions", "organizations_url": "https://api.github.com/users/tpreudhomme-linaro/orgs", "repos_url": "https://api.github.com/users/tpreudhomme-linaro/repos", "events_url": "https://api.github.com/users/tpreudhomme-linaro/events{/privacy}", "received_events_url": "https://api.github.com/users/tpreudhomme-linaro/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "563cc649beaf11d707c422e5f4e9e5cdacb818c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563cc649beaf11d707c422e5f4e9e5cdacb818c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563cc649beaf11d707c422e5f4e9e5cdacb818c3"}], "stats": {"total": 63, "additions": 53, "deletions": 10}, "files": [{"sha": "de50a8fe5644597541063d269ff26b040de5a030", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -1,3 +1,15 @@\n+2018-10-31  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n+\n+\tPR target/87374\n+\t* config/arm/arm.c (arm_option_check_internal): Disable the combined\n+\tuse of -mslow-flash-data and -mword-relocations.\n+\t(arm_option_override): Enable -mword-relocations if -fpic or -fPIC.\n+\t* config/arm/arm.md (SYMBOL_REF MOVT splitter): Stop checking for\n+\tflag_pic.\n+\t* doc/invoke.texi (-mword-relocations): Mention conflict with\n+\t-mslow-flash-data.\n+\t(-mslow-flash-data): Reciprocally.\n+\n 2018-10-31  Richard Henderson  <richard.henderson@linaro.org>\n \n \t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Force"}, {"sha": "8393f0b87f34c04c9dcc89c63d2e9bbd042c969c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -2893,17 +2893,22 @@ arm_option_check_internal (struct gcc_options *opts)\n       flag_pic = 0;\n     }\n \n-  /* We only support -mpure-code and -mslow-flash-data on M-profile targets\n-     with MOVT.  */\n-  if ((target_pure_code || target_slow_flash_data)\n-      && (!TARGET_HAVE_MOVT || arm_arch_notm || flag_pic || TARGET_NEON))\n+  if (target_pure_code || target_slow_flash_data)\n     {\n       const char *flag = (target_pure_code ? \"-mpure-code\" :\n \t\t\t\t\t     \"-mslow-flash-data\");\n-      error (\"%s only supports non-pic code on M-profile targets with the \"\n-\t     \"MOVT instruction\", flag);\n-    }\n \n+      /* We only support -mpure-code and -mslow-flash-data on M-profile targets\n+\t with MOVT.  */\n+      if (!TARGET_HAVE_MOVT || arm_arch_notm || flag_pic || TARGET_NEON)\n+\terror (\"%s only supports non-pic code on M-profile targets with the \"\n+\t       \"MOVT instruction\", flag);\n+\n+      /* Cannot load addresses: -mslow-flash-data forbids literal pool and\n+\t -mword-relocations forbids relocation of MOVT/MOVW.  */\n+      if (target_word_relocations)\n+\terror (\"%s incompatible with -mword-relocations\", flag);\n+    }\n }\n \n /* Recompute the global settings depending on target attribute options.  */\n@@ -3489,6 +3494,9 @@ arm_option_override (void)\n \tarm_pic_register = pic_register;\n     }\n \n+  if (flag_pic)\n+    target_word_relocations = 1;\n+\n   /* Enable -mfix-cortex-m3-ldrd by default for Cortex-M3 cores.  */\n   if (fix_cm3_ldrd == 2)\n     {"}, {"sha": "a773518cefaf8451e77fead9e072ee8ef39f1eb8", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -6128,7 +6128,7 @@\n   [(set (match_operand:SI 0 \"arm_general_register_operand\" \"\")\n        (match_operand:SI 1 \"general_operand\" \"\"))]\n   \"TARGET_USE_MOVT && GET_CODE (operands[1]) == SYMBOL_REF\n-   && !flag_pic && !target_word_relocations\n+   && !target_word_relocations\n    && !arm_tls_referenced_p (operands[1])\"\n   [(clobber (const_int 0))]\n {"}, {"sha": "3d83bf56cafa9cb8bdb7682078a75462da8bf4da", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -17034,7 +17034,7 @@ this option and always use the original scheme.\n Only generate absolute relocations on word-sized values (i.e. R_ARM_ABS32).\n This is enabled by default on targets (uClinux, SymbianOS) where the runtime\n loader imposes this restriction, and when @option{-fpic} or @option{-fPIC}\n-is specified.\n+is specified. This option conflicts with @option{-mslow-flash-data}.\n \n @item -mfix-cortex-m3-ldrd\n @opindex mfix-cortex-m3-ldrd\n@@ -17071,7 +17071,7 @@ to Neon is high.\n Assume loading data from flash is slower than fetching instruction.\n Therefore literal load is minimized for better performance.\n This option is only supported when compiling for ARMv7 M-profile and\n-off by default.\n+off by default. It conflicts with @option{-mword-relocations}.\n \n @item -masm-syntax-unified\n @opindex masm-syntax-unified"}, {"sha": "74e1ece85300ec2901752fe083ff8543709bcf21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -1,3 +1,17 @@\n+2018-10-31  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n+\n+\tPR target/87374\n+\t* gcc.target/arm/movdi_movt.c: Skip if both -mslow-flash-data and\n+\t-mword-relocations would be passed when compiling the test.\n+\t* gcc.target/arm/movsi_movt.c: Likewise.\n+\t* gcc.target/arm/pr81863.c: Likewise.\n+\t* gcc.target/arm/thumb2-slow-flash-data-1.c: Likewise.\n+\t* gcc.target/arm/thumb2-slow-flash-data-2.c: Likewise.\n+\t* gcc.target/arm/thumb2-slow-flash-data-3.c: Likewise.\n+\t* gcc.target/arm/thumb2-slow-flash-data-4.c: Likewise.\n+\t* gcc.target/arm/thumb2-slow-flash-data-5.c: Likewise.\n+\t* gcc.target/arm/tls-disable-literal-pool.c: Likewise.\n+\n 2018-10-31  Richard Biener  <rguenther@suse.de>\n \n \tPR testsuite/87802"}, {"sha": "a01ffa0dc933d14678fc43e70c7dbe61eca4584b", "filename": "gcc/testsuite/gcc.target/arm/movdi_movt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovdi_movt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovdi_movt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovdi_movt.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile { target { arm_cortex_m && { arm_thumb2_ok || arm_thumb1_movt_ok } } } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-O2 -mslow-flash-data\" } */\n \n unsigned long long"}, {"sha": "19d202ecd330574432f13fd003586815b5efc8d3", "filename": "gcc/testsuite/gcc.target/arm/movsi_movt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovsi_movt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovsi_movt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmovsi_movt.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile { target { arm_cortex_m && { arm_thumb2_ok || arm_thumb1_movt_ok } } } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-O2 -mslow-flash-data\" } */\n \n unsigned"}, {"sha": "225a0c5cc2b358416ec2dea14b11bb4f726e0649", "filename": "gcc/testsuite/gcc.target/arm/pr81863.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr81863.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr81863.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr81863.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -1,5 +1,6 @@\n /* testsuite/gcc.target/arm/pr48183.c */\n /* { dg-do compile } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mslow-flash-data\" } } */\n /* { dg-options \"-O2 -mword-relocations -march=armv7-a -marm\" } */\n /* { dg-final { scan-assembler-not \"\\[\\\\t \\]+movw\" } } */\n "}, {"sha": "d10391a69ac0cfa5c9cbee877e7235e2c240a591", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -6,6 +6,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_cortex_m } */\n /* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-O2 -mthumb -mslow-flash-data\" } */\n \n float sf;"}, {"sha": "90bd44e27e5c53d34f2816f4d6320acbc1dc709b", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target arm_thumb2_ok } */\n /* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n /* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-march=armv7e-m+fp -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n \n float f (float);"}, {"sha": "5d9cd9c4df28837b81b2de48c25d38cdf2c15999", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target arm_thumb2_ok } */\n /* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n /* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-march=armv7e-m+fp -mfloat-abi=hard -mthumb -mslow-flash-data\" } */\n \n /* From PR71607 */"}, {"sha": "0eeddd5e6ec1f42a96fc6220277f9ecb7cad44f5", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target arm_thumb2_ok } */\n /* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n /* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-march=armv7e-m+fp -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n \n double __attribute__ ((target (\"fpu=fpv5-d16\")))"}, {"sha": "7d52f3801b6d4b62b27833871ac830d6d077894d", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target arm_thumb2_ok } */\n /* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n /* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-march=armv7e-m+fp -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n \n double __attribute__ ((target (\"fpu=fpv5-sp-d16\")))"}, {"sha": "834eaf6db92c0239deb397c7d002086d83577be2", "filename": "gcc/testsuite/gcc.target/arm/tls-disable-literal-pool.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c?ref=6dc8ee419ea91a2641e35b7b00b81639f5bb4a8e", "patch": "@@ -2,6 +2,7 @@\n /* { dg-require-effective-target tls_native } */\n /* { dg-require-effective-target arm_cortex_m } */\n /* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"-mslow-flash-data and -mword-relocations incompatible\" { *-*-* } { \"-mword-relocations\" } } */\n /* { dg-options \"-mslow-flash-data\" } */\n \n __thread int x = 0;"}]}