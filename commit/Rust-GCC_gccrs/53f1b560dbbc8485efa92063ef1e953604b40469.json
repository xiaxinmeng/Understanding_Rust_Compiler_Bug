{"sha": "53f1b560dbbc8485efa92063ef1e953604b40469", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmMWI1NjBkYmJjODQ4NWVmYTkyMDYzZWYxZTk1MzYwNGI0MDQ2OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-02-27T02:25:57Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-02-27T02:25:57Z"}, "message": "re PR middle-end/19983 (__builtin_nan should allow 0X as well as 0x)\n\n\n\tPR middle-end/19983\n\t* real.c (real_nan): Allow both 0x and 0X as hexadecimal prefixes.\n\n\t* gcc.c-torture/execute/ieee/builtin-nan-1.c: New test case.\n\nFrom-SVN: r111470", "tree": {"sha": "39a95215865328da09197e35b41bcda3f4b5ffae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a95215865328da09197e35b41bcda3f4b5ffae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f1b560dbbc8485efa92063ef1e953604b40469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f1b560dbbc8485efa92063ef1e953604b40469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f1b560dbbc8485efa92063ef1e953604b40469", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f1b560dbbc8485efa92063ef1e953604b40469/comments", "author": null, "committer": null, "parents": [{"sha": "efa1cdf01850b28c2f6f7035ebd4420259494615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa1cdf01850b28c2f6f7035ebd4420259494615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efa1cdf01850b28c2f6f7035ebd4420259494615"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "a97c50ade2fbbdbed5794691982313ea94480dbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53f1b560dbbc8485efa92063ef1e953604b40469", "patch": "@@ -1,3 +1,8 @@\n+2006-02-26  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/19983\n+\t* real.c (real_nan): Allow both 0x and 0X as hexadecimal prefixes.\n+\n 2006-02-26  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* opts.c (decode_options): Do not handle flag_strength_reduce."}, {"sha": "c4b6479067f9081043a7125fed615c37876d9300", "filename": "gcc/real.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=53f1b560dbbc8485efa92063ef1e953604b40469", "patch": "@@ -2193,8 +2193,12 @@ real_nan (REAL_VALUE_TYPE *r, const char *str, int quiet,\n \tstr++;\n       if (*str == '0')\n \t{\n-\t  if (*++str == 'x')\n-\t    str++, base = 16;\n+\t  str++;\n+\t  if (*str == 'x' || *str == 'X')\n+\t    {\n+\t      base = 16;\n+\t      str++;\n+\t    }\n \t  else\n \t    base = 8;\n \t}"}, {"sha": "af218682acd2c549c9f19729735645e66e95e70b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53f1b560dbbc8485efa92063ef1e953604b40469", "patch": "@@ -1,3 +1,8 @@\n+2006-02-26  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/19983\n+\t* gcc.c-torture/execute/ieee/builtin-nan-1.c: New test case.\n+\n 2006-02-26  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* gcc.target/i386/20000614-2.c: Do not use -fno-strength-reduce."}, {"sha": "a487dd4afd90e40f73f5163bbe15d7c6e05cff20", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/builtin-nan-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fbuiltin-nan-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f1b560dbbc8485efa92063ef1e953604b40469/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fbuiltin-nan-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fbuiltin-nan-1.c?ref=53f1b560dbbc8485efa92063ef1e953604b40469", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/19983 */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern void abort(void);\n+extern int memcmp(const void *, const void *, size_t);\n+\n+double n1 = __builtin_nan(\"0x1\");\n+double n2 = __builtin_nan(\"0X1\");\n+\n+int main()\n+{\n+  if (memcmp (&n1, &n2, sizeof(double)))\n+    abort();\n+  return 0;\n+}\n+"}]}