{"sha": "2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0ODFhMmZmNTBlNzVlZjNiOGVmYjY2NDRiNDFhMjYwZjgxM2QzYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-30T13:46:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-30T13:46:31Z"}, "message": "re PR middle-end/21602 (builtin memmove could be memcpy if src and dst don't alias)\n\n2010-08-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/21602\n\t* builtins.c (fold_builtin_memory_op): Fold memmove to memcpy\n\tusing points-to information.\n\nFrom-SVN: r163646", "tree": {"sha": "8615e6c45a047e637c31d93acb54d8ebb695d522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8615e6c45a047e637c31d93acb54d8ebb695d522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e481a2ff50e75ef3b8efb6644b41a260f813d3a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3727f43413cd6b5d708977fec7d21a010efccedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3727f43413cd6b5d708977fec7d21a010efccedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3727f43413cd6b5d708977fec7d21a010efccedd"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "685c2f6918a9490b2a9d9cfc467fae93cba1b7d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e481a2ff50e75ef3b8efb6644b41a260f813d3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e481a2ff50e75ef3b8efb6644b41a260f813d3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "patch": "@@ -1,3 +1,9 @@\n+2010-08-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/21602\n+\t* builtins.c (fold_builtin_memory_op): Fold memmove to memcpy\n+\tusing points-to information.\n+\n 2010-08-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/linux.h (TARGET_HAS_SINCOS): Replace | with ||."}, {"sha": "e4e3f9cac8b89f58f729a5ce58d12dcdf684b60f", "filename": "gcc/builtins.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e481a2ff50e75ef3b8efb6644b41a260f813d3a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e481a2ff50e75ef3b8efb6644b41a260f813d3a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2e481a2ff50e75ef3b8efb6644b41a260f813d3a", "patch": "@@ -8467,6 +8467,27 @@ fold_builtin_memory_op (location_t loc, tree dest, tree src,\n \t\treturn NULL_TREE;\n \t      return build_call_expr_loc (loc, fn, 3, dest, src, len);\n \t    }\n+\n+\t  /* If the destination and source do not alias optimize into\n+\t     memcpy as well.  */\n+\t  if ((is_gimple_min_invariant (dest)\n+\t       || TREE_CODE (dest) == SSA_NAME)\n+\t      && (is_gimple_min_invariant (src)\n+\t\t  || TREE_CODE (src) == SSA_NAME))\n+\t    {\n+\t      ao_ref destr, srcr;\n+\t      ao_ref_init_from_ptr_and_size (&destr, dest, len);\n+\t      ao_ref_init_from_ptr_and_size (&srcr, src, len);\n+\t      if (!refs_may_alias_p_1 (&destr, &srcr, false))\n+\t\t{\n+\t\t  tree fn;\n+\t\t  fn = implicit_built_in_decls[BUILT_IN_MEMCPY];\n+\t\t  if (!fn)\n+\t\t    return NULL_TREE;\n+\t\t  return build_call_expr_loc (loc, fn, 3, dest, src, len);\n+\t\t}\n+\t    }\n+\n \t  return NULL_TREE;\n \t}\n "}]}