{"sha": "74153f8e013408b48b0ef5cedee01a338890e4fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQxNTNmOGUwMTM0MDhiNDhiMGVmNWNlZGVlMDFhMzM4ODkwZTRmYg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-10-27T06:00:53Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-10-27T06:00:53Z"}, "message": "dwarfout.c (ASM_OUTPUT_DWARF_STRING_NEWLINE): ASM_OUTPUT_DWARF_STRING has been changed to not include a newline.\n\n* dwarfout.c (ASM_OUTPUT_DWARF_STRING_NEWLINE): ASM_OUTPUT_DWARF_STRING\n        has been changed to not include a newline. Use this macro instead.\n        (output_enumeral_list, const_value_attribute, name_attribute,\n        comp_dir_attribute, prototyped_attribute, producer_attribute,\n        inline_attribute, pure_or_virtual_attribute, output_inheritance_die,\n        dwarfout_file_scope_decl, generate_new_sfname_entry,\n        generate_macinfo_entry, dwarfout_init, dwarfout_finish): Use\n        ASM_OUTPUT_DWARF_STRING_NEWLINE macro.\n\nFrom-SVN: r23363", "tree": {"sha": "ac82f4ad34e99da84c7966e4fb18fd56e1a7dc67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac82f4ad34e99da84c7966e4fb18fd56e1a7dc67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74153f8e013408b48b0ef5cedee01a338890e4fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74153f8e013408b48b0ef5cedee01a338890e4fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74153f8e013408b48b0ef5cedee01a338890e4fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74153f8e013408b48b0ef5cedee01a338890e4fb/comments", "author": null, "committer": null, "parents": [{"sha": "21c0d0f5b2299074fe36ef42c1212b5343102333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c0d0f5b2299074fe36ef42c1212b5343102333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c0d0f5b2299074fe36ef42c1212b5343102333"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "a747d15fbde43a5403796f77b503db10bf78658c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74153f8e013408b48b0ef5cedee01a338890e4fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74153f8e013408b48b0ef5cedee01a338890e4fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74153f8e013408b48b0ef5cedee01a338890e4fb", "patch": "@@ -1,3 +1,14 @@\n+Tue Oct 27 08:56:46 EST 1998  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* dwarfout.c (ASM_OUTPUT_DWARF_STRING_NEWLINE): ASM_OUTPUT_DWARF_STRING\n+\thas been changed to not include a newline. Use this macro instead.\n+\t(output_enumeral_list, const_value_attribute, name_attribute,\n+\tcomp_dir_attribute, prototyped_attribute, producer_attribute,\n+\tinline_attribute, pure_or_virtual_attribute, output_inheritance_die,\n+\tdwarfout_file_scope_decl, generate_new_sfname_entry,\n+\tgenerate_macinfo_entry, dwarfout_init, dwarfout_finish): Use\n+\tASM_OUTPUT_DWARF_STRING_NEWLINE macro.\n+\n Mon Oct 26 13:35:02 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* combine.c (subst): Process the inputs to a parallel asm_operands"}, {"sha": "5c33cfc4d585572c8dcdf71c7a14a8397d9579ab", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74153f8e013408b48b0ef5cedee01a338890e4fb/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74153f8e013408b48b0ef5cedee01a338890e4fb/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=74153f8e013408b48b0ef5cedee01a338890e4fb", "patch": "@@ -857,10 +857,20 @@ static int is_redundant_typedef\t\tPROTO((tree));\n   } while (0)\n #endif\n \n+/* ASM_OUTPUT_DWARF_STRING is defined to output an ascii string, but to\n+   NOT issue a trailing newline. We define ASM_OUTPUT_DWARF_STRING_NEWLINE\n+   based on whether ASM_OUTPUT_DWARF_STRING is defined or not. If it is\n+   defined, we call it, then issue the line feed. If not, we supply a\n+   default defintion of calling ASM_OUTPUT_ASCII */\n+\n #ifndef ASM_OUTPUT_DWARF_STRING\n-#define ASM_OUTPUT_DWARF_STRING(FILE,P) \\\n+#define ASM_OUTPUT_DWARF_STRING_NEWLINE(FILE,P) \\\n   ASM_OUTPUT_ASCII ((FILE), P, strlen (P)+1)\n+#else\n+#define ASM_OUTPUT_DWARF_STRING_NEWLINE(FILE,P) \\\n+  ASM_OUTPUT_DWARF_STRING (FILE,P), ASM_OUTPUT_DWARF_STRING (FILE,\"\\n\") \n #endif\n+\n \f\n /************************ general utility functions **************************/\n \n@@ -1893,7 +1903,7 @@ output_enumeral_list (link)\n       output_enumeral_list (TREE_CHAIN (link));\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file,\n \t\t\t      (unsigned) TREE_INT_CST_LOW (TREE_VALUE (link)));\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file,\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file,\n \t\t\t       IDENTIFIER_POINTER (TREE_PURPOSE (link)));\n     }\n }\n@@ -2256,7 +2266,7 @@ const_value_attribute (rtl)\n \tbreak;\n \n       case CONST_STRING:\n-\tASM_OUTPUT_DWARF_STRING (asm_out_file, XSTR (rtl, 0));\n+\tASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, XSTR (rtl, 0));\n \tbreak;\n \n       case SYMBOL_REF:\n@@ -2466,7 +2476,7 @@ name_attribute (name_string)\n   if (name_string && *name_string)\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_name);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, name_string);\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, name_string);\n     }\n }\n \n@@ -2904,7 +2914,7 @@ comp_dir_attribute (dirname)\n      register char *dirname;\n {\n   ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_comp_dir);\n-  ASM_OUTPUT_DWARF_STRING (asm_out_file, dirname);\n+  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, dirname);\n }\n \n static inline void\n@@ -2942,7 +2952,7 @@ prototyped_attribute (func_type)\n       && (TYPE_ARG_TYPES (func_type) != NULL))\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_prototyped);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n }\n \n@@ -2951,7 +2961,7 @@ producer_attribute (producer)\n      register char *producer;\n {\n   ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_producer);\n-  ASM_OUTPUT_DWARF_STRING (asm_out_file, producer);\n+  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, producer);\n }\n \n static inline void\n@@ -2961,7 +2971,7 @@ inline_attribute (decl)\n   if (DECL_INLINE (decl))\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_inline);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n }\n \n@@ -3024,7 +3034,7 @@ pure_or_virtual_attribute (func_decl)\n       else\n #endif\n         ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_virtual);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n }\n \n@@ -3751,17 +3761,17 @@ output_inheritance_die (arg)\n   if (TREE_VIA_VIRTUAL (binfo))\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_virtual);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n   if (TREE_VIA_PUBLIC (binfo))\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_public);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n   else if (TREE_VIA_PROTECTED (binfo))\n     {\n       ASM_OUTPUT_DWARF_ATTRIBUTE (asm_out_file, AT_protected);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n     }\n }  \n \n@@ -5121,7 +5131,7 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \t  ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n \t  sprintf (label, PUB_DIE_LABEL_FMT, next_pubname_number);\n \t  ASM_OUTPUT_DWARF_ADDR (asm_out_file, label);\n-\t  ASM_OUTPUT_DWARF_STRING (asm_out_file,\n+\t  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file,\n \t\t\t\t   IDENTIFIER_POINTER (DECL_NAME (decl)));\n \t  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t}\n@@ -5159,7 +5169,7 @@ dwarfout_file_scope_decl (decl, set_finalizing)\n \t      ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n \t      sprintf (label, PUB_DIE_LABEL_FMT, next_pubname_number);\n \t      ASM_OUTPUT_DWARF_ADDR (asm_out_file, label);\n-\t      ASM_OUTPUT_DWARF_STRING (asm_out_file,\n+\t      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file,\n \t\t\t\t       IDENTIFIER_POINTER (DECL_NAME (decl)));\n \t      ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t    }\n@@ -5386,7 +5396,7 @@ generate_new_sfname_entry ()\n   ASM_OUTPUT_PUSH_SECTION (asm_out_file, SFNAMES_SECTION);\n   sprintf (label, SFNAMES_ENTRY_LABEL_FMT, filename_table[0].number);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n-  ASM_OUTPUT_DWARF_STRING (asm_out_file,\n+  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file,\n     \t\t\t   filename_table[0].name\n \t\t\t     ? filename_table[0].name\n \t\t\t     : \"\");\n@@ -5559,7 +5569,7 @@ generate_macinfo_entry (type_and_offset, string)\n   fputc ('\\n', asm_out_file);\n   ASM_OUTPUT_PUSH_SECTION (asm_out_file, MACINFO_SECTION);\n   fprintf (asm_out_file, \"\\t%s\\t%s\\n\", UNALIGNED_INT_ASM_OP, type_and_offset);\n-  ASM_OUTPUT_DWARF_STRING (asm_out_file, string);\n+  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, string);\n   ASM_OUTPUT_POP_SECTION (asm_out_file);\n }\n \n@@ -5740,7 +5750,7 @@ dwarfout_init (asm_out_file, main_input_filename)\n     \n \t    strcpy (dirname, pwd);\n \t    strcpy (dirname + len, \"/\");\n-\t    ASM_OUTPUT_DWARF_STRING (asm_out_file, dirname);\n+\t    ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, dirname);\n \t    free (dirname);\n \t  }\n \t  ASM_OUTPUT_POP_SECTION (asm_out_file);\n@@ -5944,7 +5954,7 @@ dwarfout_finish ()\n \t  fputc ('\\n', asm_out_file);\n \t  ASM_OUTPUT_PUSH_SECTION (asm_out_file, MACINFO_SECTION);\n \t  ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n-\t  ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+\t  ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n \t  ASM_OUTPUT_POP_SECTION (asm_out_file);\n \t}\n     \n@@ -5953,7 +5963,7 @@ dwarfout_finish ()\n       fputc ('\\n', asm_out_file);\n       ASM_OUTPUT_PUSH_SECTION (asm_out_file, PUBNAMES_SECTION);\n       ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n-      ASM_OUTPUT_DWARF_STRING (asm_out_file, \"\");\n+      ASM_OUTPUT_DWARF_STRING_NEWLINE (asm_out_file, \"\");\n       ASM_OUTPUT_POP_SECTION (asm_out_file);\n     \n       /* Generate the terminating entries for the .debug_aranges section."}]}