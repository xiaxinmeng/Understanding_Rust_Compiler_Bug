{"sha": "be454565bef7db066e0b660d900f7e722226f6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU0NTQ1NjViZWY3ZGIwNjZlMGI2NjBkOTAwZjdlNzIyMjI2ZjZkNQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2001-02-19T05:37:28Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-02-19T05:37:28Z"}, "message": "CharArrayReader.java (CharArrayReader): Throw IllegalArgumentException if constructor arguments are illegal.\n\n\t* java/io/CharArrayReader.java (CharArrayReader): Throw\n\tIllegalArgumentException if constructor arguments are illegal.\n\t(ready): Return false if no more characters can be read.\n\t* java/io/ByteArrayInputStream.java (ByteArrayInputStream): Likewise.\n\nFrom-SVN: r39876", "tree": {"sha": "068a69ffaa1bb533ad837de14d4b4840d8c09bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068a69ffaa1bb533ad837de14d4b4840d8c09bab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be454565bef7db066e0b660d900f7e722226f6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be454565bef7db066e0b660d900f7e722226f6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be454565bef7db066e0b660d900f7e722226f6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be454565bef7db066e0b660d900f7e722226f6d5/comments", "author": null, "committer": null, "parents": [{"sha": "612164eb464933b98366aeb4c4cf2b59861d4607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612164eb464933b98366aeb4c4cf2b59861d4607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612164eb464933b98366aeb4c4cf2b59861d4607"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "275699403302bb68dce3d90b61446a913b917b80", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=be454565bef7db066e0b660d900f7e722226f6d5", "patch": "@@ -4,6 +4,11 @@\n \tproperty is not set. Don't call decode with null argument.\n \t* java/lang/Long.java (getLong): Likewise.\n \n+\t* java/io/CharArrayReader.java (CharArrayReader): Throw \n+\tIllegalArgumentException if constructor arguments are illegal.\n+\t(ready): Return false if no more characters can be read.\n+\t* java/io/ByteArrayInputStream.java (ByteArrayInputStream): Likewise.\n+\n 2001-02-17  Mark Wielaard <mark@klomp.org>\n \n \t* java/util/TimerTask.java: New version from Classpath."}, {"sha": "0d9339363c1c2afd99129952c218581615357645", "filename": "libjava/java/io/ByteArrayInputStream.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2Fjava%2Fio%2FByteArrayInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2Fjava%2Fio%2FByteArrayInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FByteArrayInputStream.java?ref=be454565bef7db066e0b660d900f7e722226f6d5", "patch": "@@ -40,17 +40,16 @@ public ByteArrayInputStream(byte[] buffer)\n \n   public ByteArrayInputStream(byte[] buffer, int offset, int length)\n   {\n+    if (offset < 0  || length < 0 || offset > buffer.length)\n+      throw new IllegalArgumentException();\n+\n     buf = buffer;\n \n     count = offset + length;\n     if (count > buf.length)\n       count = buf.length;\n \n     pos = offset;\n-    // TBD: What should we do if pos is neg. or > count?  E.g. throw exc. or:\n-    // if (pos < 0 || pos > count)\n-    //   pos = 0;\n-\n     mark = pos;\n   }\n "}, {"sha": "d67c7c79f5c0b2227fff9cc7baf97eade2f171fa", "filename": "libjava/java/io/CharArrayReader.java", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2Fjava%2Fio%2FCharArrayReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be454565bef7db066e0b660d900f7e722226f6d5/libjava%2Fjava%2Fio%2FCharArrayReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FCharArrayReader.java?ref=be454565bef7db066e0b660d900f7e722226f6d5", "patch": "@@ -41,17 +41,16 @@ public CharArrayReader(char[] buffer)\n   public CharArrayReader(char[] buffer, int offset, int length)\n   {\n     super();\n+    if (offset < 0  || length < 0 || offset > buffer.length)\n+      throw new IllegalArgumentException();\n+    \n     buf = buffer;\n \n     count = offset + length;\n     if (count > buf.length)\n       count = buf.length;\n-\n+    \n     pos = offset;\n-    // TBD: What should we do if pos is neg. or > count?  E.g. throw exc. or:\n-    // if (pos < 0 || pos > count)\n-    //   pos = 0;\n-\n     markedPos = pos;\n   }\n \n@@ -116,12 +115,17 @@ public int read(char[] b, int off, int len) throws IOException\n     }\n   }\n \n+  /** Return true if more characters are available to be read. \n+    *\n+    * @specnote The JDK 1.3 API docs are wrong here. This method will\n+    *           return false if there are no more characters available.\n+    */\n   public boolean ready() throws IOException\n   {\n     if (buf == null)\n       throw new IOException(\"Stream closed\");\n \n-    return true;\n+    return (pos < count);\n   }\n \n   public void reset() throws IOException"}]}