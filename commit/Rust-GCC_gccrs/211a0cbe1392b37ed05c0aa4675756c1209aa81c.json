{"sha": "211a0cbe1392b37ed05c0aa4675756c1209aa81c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjExYTBjYmUxMzkyYjM3ZWQwNWMwYWE0Njc1NzU2YzEyMDlhYTgxYw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2002-05-23T23:37:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-05-23T23:37:09Z"}, "message": "mingw32.h (OUTPUT_QUOTED_STRING): Properly output quoted strings.\n\n\t* config/i386/mingw32.h (OUTPUT_QUOTED_STRING): Properly output\n\tquoted strings.\n\t* dwarf2out.c (lookup_filename): Properly quote filename in .file\n\tdirective in assembly file.\n\t* config/m68k/dpx2.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n\t* config/m88k/m88k.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n\t* config/pj/pj.h (ASM_FILE_START): Likewise.\n\t* config/rs6000/xcoff.h (ASM_FILE_START): Likewise.\n\t* config/avr/avr.c (asm_file_end): Likewise.\n\t* toplev.c (output_quoted_string): Handle possibly signed plain\n\tchar.\n\t* toplev.h (output_clean_symbol_name): Declare\n\t* toplev.c (output_clean_symbol_name): Define.\n\t* config/alpha/alpha.c (unicosmk_output_module_name): Use it.\n\t* config/1750a/1750a.h (ASM_FILE_START): Likewise.\n\nCo-Authored-By: Zack Weinberg <zack@codesourcery.com>\n\nFrom-SVN: r53817", "tree": {"sha": "eefaec1514eb73c58eef6e91f4c09e4a714d9818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eefaec1514eb73c58eef6e91f4c09e4a714d9818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/211a0cbe1392b37ed05c0aa4675756c1209aa81c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211a0cbe1392b37ed05c0aa4675756c1209aa81c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211a0cbe1392b37ed05c0aa4675756c1209aa81c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211a0cbe1392b37ed05c0aa4675756c1209aa81c/comments", "author": null, "committer": null, "parents": [{"sha": "2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a"}], "stats": {"total": 130, "additions": 97, "deletions": 33}, "files": [{"sha": "3b089560e7e08eb2e153d2a746183faa83f7b508", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -1,3 +1,22 @@\n+2002-05-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n+            Zack Weinberg     <zack@codesourcery.com>\n+\n+\t* config/i386/mingw32.h (OUTPUT_QUOTED_STRING): Properly output\n+\tquoted strings.\n+\t* dwarf2out.c (lookup_filename): Properly quote filename in .file\n+\tdirective in assembly file. \n+\t* config/m68k/dpx2.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n+\t* config/m88k/m88k.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n+\t* config/pj/pj.h (ASM_FILE_START): Likewise.\n+\t* config/rs6000/xcoff.h (ASM_FILE_START): Likewise.\n+\t* config/avr/avr.c (asm_file_end): Likewise.\n+\t* toplev.c (output_quoted_string): Handle possibly signed plain\n+\tchar. \n+\t* toplev.h (output_clean_symbol_name): Declare\n+\t* toplev.c (output_clean_symbol_name): Define.\n+\t* config/alpha/alpha.c (unicosmk_output_module_name): Use it.\n+\t* config/1750a/1750a.h (ASM_FILE_START): Likewise.\n+\n 2002-05-24  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (output_toc): Mask longs to 32 bits."}, {"sha": "c6116942077392bd83da98003438db7ea129549a", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -833,7 +833,9 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n    strcpy(name,p);\t\t\t\t\t\t\t\\\n    if ((p2 = strchr(name,'.')))\t\t\t\t\t\t\\\n \t*p2 = '\\0';\t\t\t\t\t\t\t\\\n-   fprintf(FILE,\"\\tname %s\\n\",name); \t\t\t\t\t\\\n+   fputs (\"\\tname \", FILE);                                             \\\n+   output_clean_symbol_name (FILE, name);                               \\\n+   putc ('\\n', FILE);                                                   \\\n    fprintf(FILE,\"\\tnolist\\n\\tinclude \\\"ms1750.inc\\\"\\n\\tlist\\n\\n\");\t\\\n    fprintf(FILE,\"\\tglobal\\t__main\\n\\n\");  }\n "}, {"sha": "41cb31e0bea1fc3753d3f598c302ec8970a88e18", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -8439,9 +8439,8 @@ unicosmk_output_module_name (file)\n      prefix the module name with a '$' if necessary.  */\n \n   if (!ISALPHA (*name))\n-    fprintf (file, \"$%s\", name);\n-  else\n-    fputs (name, file);\n+    putc ('$', file);\n+  output_clean_symbol_name (file, name);\n }\n \n /* Output text that to appear at the beginning of an assembler file.  */"}, {"sha": "3ba0eee33a4796a610d332b15dfb5d5674ce7ea9", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -4801,9 +4801,10 @@ void\n asm_file_end (file)\n      FILE *file;\n {\n+  fputs (\"/* File \", file);\n+  output_quoted_string (file, main_input_filename);\n   fprintf (file,\n-\t   \"/* File %s: code %4d = 0x%04x (%4d), prologues %3d, epilogues %3d */\\n\",\n-\t   main_input_filename,\n+\t   \": code %4d = 0x%04x (%4d), prologues %3d, epilogues %3d */\\n\",\n \t   commands_in_file,\n \t   commands_in_file,\n \t   commands_in_file - commands_in_prologues - commands_in_epilogues,"}, {"sha": "561022c7186f515b87d496976ab7c4e532e0d279", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -85,25 +85,31 @@ Boston, MA 02111-1307, USA.  */\n #define MATH_LIBRARY \"\"\n \n /* Output STRING, a string representing a filename, to FILE.\n-   We canonicalize it to be in MS-DOS format.  */\n+   We canonicalize it to be in Unix format (backslashe are replaced\n+   forward slashes.  */\n #undef OUTPUT_QUOTED_STRING\n-#define OUTPUT_QUOTED_STRING(FILE, STRING) \\\n-do {\t\t\t\t\t\t\\\n-  char c;\t\t\t\t\t\\\n-\t\t\t\t\t\t\\\n-  putc ('\\\"', asm_file);\t\t\t\\\n-\t\t\t\t\t\t\\\n-  while ((c = *string++) != 0)\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      if (c == '\\\\')\t\t\t\t\\\n-\tc = '/';\t\t\t\t\\\n-\t\t\t\t\t\t\\\n-      if (c == '\\\"')\t\t\t\t\\\n-\tputc ('\\\\', asm_file);\t\t\t\\\n-      putc (c, asm_file);\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\\\n-  putc ('\\\"', asm_file);\t\t\t\\\n+#define OUTPUT_QUOTED_STRING(FILE, STRING)               \\\n+do {\t\t\t\t\t\t         \\\n+  char c;\t\t\t\t\t         \\\n+\t\t\t\t\t\t         \\\n+  putc ('\\\"', asm_file);\t\t\t         \\\n+\t\t\t\t\t\t         \\\n+  while ((c = *string++) != 0)\t\t\t         \\\n+    {\t\t\t\t\t\t         \\\n+      if (c == '\\\\')\t\t\t\t         \\\n+\tc = '/';\t\t\t\t         \\\n+\t\t\t\t\t\t         \\\n+      if (ISPRINT (c))                                   \\\n+        {                                                \\\n+          if (c == '\\\"')\t\t\t         \\\n+\t    putc ('\\\\', asm_file);\t\t         \\\n+          putc (c, asm_file);\t\t\t         \\\n+        }                                                \\\n+      else                                               \\\n+        fprintf (asm_file, \"\\\\%03o\", (unsigned char) c); \\\n+    }\t\t\t\t\t\t         \\\n+\t\t\t\t\t\t         \\\n+  putc ('\\\"', asm_file);\t\t\t         \\\n } while (0)\n \n /* Override Cygwin's definition. This is necessary now due to the way"}, {"sha": "0686b736065998ca297e422bbf1c7b12641e8742", "filename": "gcc/config/m68k/dpx2.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -113,7 +113,11 @@ Boston, MA 02111-1307, USA.  */\n \n #undef ASM_OUTPUT_SOURCE_FILENAME\n #define ASM_OUTPUT_SOURCE_FILENAME(FILE, NA)\t\\\n-  do { fprintf ((FILE), \"\\t.file\\t'%s'\\n\", (NA)); } while (0)\n+  do {                                          \\\n+    fprintf (FILE, \"\\t.file\\t\");                \\\n+    output_quoted_string (FILE, NA);            \\\n+    putc ('\\n', FILE);                          \\\n+  } while (0)\n \n /* \n  * we don't seem to support any of:"}, {"sha": "38bc2e0a629738c7a2ac1217902259cbad007aee", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -1740,7 +1740,11 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #undef\tASM_FILE_END\n \n #define ASM_OUTPUT_SOURCE_FILENAME(FILE, NAME) \\\n-  fprintf (FILE, \"%s\\\"%s\\\"\\n\", FILE_ASM_OP, NAME)\n+  do {                                         \\\n+    fprintf (FILE_ASM_OP, FILE);               \\\n+    output_quoted_string (FILE, NAME);         \\\n+    putc ('\\n', FILE);                         \\\n+  } while (0)\n \n #ifdef SDB_DEBUGGING_INFO\n #undef ASM_OUTPUT_SOURCE_LINE"}, {"sha": "4167973c2c8e0da33044b97cc6614d0dc97f4636", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -1017,10 +1017,13 @@ struct pj_args\n /* The text to go at the start of the assembler file.  */\n \n #undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)                                                 \\\n-  fprintf (FILE,\"\\t.file\\t\\\"%s\\\"\\n\", main_input_filename);                   \\\n-  fprintf (FILE,\"\\t! %s\\n\", TARGET_LITTLE_ENDIAN ? \".little\" : \".big\");      \\\n-  fprintf (FILE,\"\\t.align 4\\n\");\n+#define ASM_FILE_START(FILE)                                              \\\n+  do {                                                                    \\\n+    fputs (\"\\t.file\\t\", FILE);                                            \\\n+    output_quoted_string (FILE, main_input_filename);                     \\\n+    fprintf (FILE,\"\\t! %s\\n\", TARGET_LITTLE_ENDIAN ? \".little\" : \".big\"); \\\n+    fprintf (FILE,\"\\t.align 4\\n\");                                        \\\n+  } while (0)\n \n #define ASM_APP_ON              \"\"\n #define ASM_APP_OFF             \"\""}, {"sha": "45c7054963f1558d7020ff14d47c6d32f127672d", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -221,7 +221,9 @@ toc_section ()\t\t\t\t\t\t\\\n   rs6000_gen_section_name (&xcoff_read_only_section_name,\t\\\n \t\t\t   main_input_filename, \".ro_\");\t\\\n \t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", main_input_filename);\t\\\n+  fputs (\"\\t.file\\t\", FILE);                                    \\\n+  output_quoted_string (FILE, main_input_filename);             \\\n+  fputc ('\\n', FILE);                                           \\\n   if (TARGET_64BIT)\t\t\t\t\t\t\\\n     fputs (\"\\t.machine\\t\\\"ppc64\\\"\\n\", FILE);\t\t\t\\\n   toc_section ();\t\t\t\t\t\t\\"}, {"sha": "31daf427069d18c66e0ee5ad38f2de0bda28e8fd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -11826,7 +11826,11 @@ lookup_filename (file_name)\n   file_table.last_lookup_index = i;\n \n   if (DWARF2_ASM_LINE_DEBUG_INFO)\n-    fprintf (asm_out_file, \"\\t.file %u \\\"%s\\\"\\n\", i, file_name);\n+    {\n+      fprintf (asm_out_file, \"\\t.file %u \", i);\n+      output_quoted_string (asm_out_file, file_name);\n+      fputc ('\\n', asm_out_file);\n+    }\n \n   return i;\n }"}, {"sha": "13dc17d367eea7086cb7bffbfce458ac37674dc3", "filename": "gcc/toplev.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -1704,12 +1704,31 @@ output_quoted_string (asm_file, string)\n \t  putc (c, asm_file);\n \t}\n       else\n-\tfprintf (asm_file, \"\\\\%03o\", c);\n+\tfprintf (asm_file, \"\\\\%03o\", (unsigned char) c);\n     }\n   putc ('\\\"', asm_file);\n #endif\n }\n \n+/* Output NAME into FILE after having turned it into something\n+   usable as an identifier in a target's assembly file.  */\n+void\n+output_clean_symbol_name (file, name)\n+    FILE *file;\n+    const char *name;\n+{\n+  /* Make a copy of NAME.  */\n+  char *id = (char *)xmalloc (strlen (name) + 1);\n+  strcpy (id, name);\n+\n+  /* Make it look like a valid identifier for an assembler.  */\n+  clean_symbol_name (id);\n+  \n+  fputs (file, name);\n+  free (id);\n+}\n+\n+\n /* Output a file name in the form wanted by System V.  */\n \n void"}, {"sha": "4be8099efe23ca80b75123336d5afcdf42dcc4e8", "filename": "gcc/toplev.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211a0cbe1392b37ed05c0aa4675756c1209aa81c/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=211a0cbe1392b37ed05c0aa4675756c1209aa81c", "patch": "@@ -89,6 +89,7 @@ extern void warning_for_asm\t\tPARAMS ((struct rtx_def *,\n \t\t\t\t\t\t const char *, ...));\n extern void warn_deprecated_use\t\tPARAMS ((union tree_node *));\n \n+extern void output_clean_symbol_name    PARAMS ((FILE *, const char *));\n #ifdef BUFSIZ\n extern void output_quoted_string\tPARAMS ((FILE *, const char *));\n extern void output_file_directive\tPARAMS ((FILE *, const char *));"}]}