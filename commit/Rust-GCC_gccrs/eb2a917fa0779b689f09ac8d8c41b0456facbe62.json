{"sha": "eb2a917fa0779b689f09ac8d8c41b0456facbe62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIyYTkxN2ZhMDc3OWI2ODlmMDlhYzhkOGM0MWIwNDU2ZmFjYmU2Mg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-19T22:13:13Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-19T22:13:13Z"}, "message": "PR c/100619 - ICE on a VLA parameter with too many dimensions\n\ngcc/c-family/ChangeLog:\n\n\tPR c/100619\n\t* c-attribs.c (build_attr_access_from_parms): Handle arbitrarily many\n\tbounds.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/100619\n\t* gcc.dg/pr100619.c: New test.", "tree": {"sha": "6bfff1209e0215811ca4c0c230bc7c2c684d1b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bfff1209e0215811ca4c0c230bc7c2c684d1b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb2a917fa0779b689f09ac8d8c41b0456facbe62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2a917fa0779b689f09ac8d8c41b0456facbe62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2a917fa0779b689f09ac8d8c41b0456facbe62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2a917fa0779b689f09ac8d8c41b0456facbe62/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6758f03effbf7d6946d8c314576c7a6c0003af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6758f03effbf7d6946d8c314576c7a6c0003af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6758f03effbf7d6946d8c314576c7a6c0003af"}], "stats": {"total": 60, "additions": 49, "deletions": 11}, "files": [{"sha": "ccf9e4ccf0b9c44091d49a98d04a6fec59791b92", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2a917fa0779b689f09ac8d8c41b0456facbe62/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2a917fa0779b689f09ac8d8c41b0456facbe62/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=eb2a917fa0779b689f09ac8d8c41b0456facbe62", "patch": "@@ -5043,16 +5043,25 @@ build_attr_access_from_parms (tree parms, bool skip_voidptr)\n       /* Create the attribute access string from the arg spec string,\n \t optionally followed by position of the VLA bound argument if\n \t it is one.  */\n-      char specbuf[80];\n-      int len = snprintf (specbuf, sizeof specbuf, \"%c%u%s\",\n-\t\t\t  attr_access::mode_chars[access_deferred],\n-\t\t\t  argpos, s);\n-      gcc_assert ((size_t) len < sizeof specbuf);\n-\n-      if (!spec.length ())\n-\tspec += '+';\n+      {\n+\tsize_t specend = spec.length ();\n+\tif (!specend)\n+\t  {\n+\t    spec = '+';\n+\t    specend = 1;\n+\t  }\n \n-      spec += specbuf;\n+\t/* Format the access string in place.  */\n+\tint len = snprintf (NULL, 0, \"%c%u%s\",\n+\t\t\t    attr_access::mode_chars[access_deferred],\n+\t\t\t    argpos, s);\n+\tspec.resize (specend + len + 1);\n+\tsprintf (&spec[specend], \"%c%u%s\",\n+\t\t attr_access::mode_chars[access_deferred],\n+\t\t argpos, s);\n+\t/* Trim the trailing NUL.  */\n+\tspec.resize (specend + len);\n+      }\n \n       /* The (optional) list of expressions denoting the VLA bounds\n \t N in ARGTYPE <arg>[Ni]...[Nj]...[Nk].  */\n@@ -5077,8 +5086,13 @@ build_attr_access_from_parms (tree parms, bool skip_voidptr)\n \t\t{\n \t\t  /* BOUND previously seen in the parameter list.  */\n \t\t  TREE_PURPOSE (vb) = size_int (*psizpos);\n-\t\t  sprintf (specbuf, \"$%u\", *psizpos);\n-\t\t  spec += specbuf;\n+\t\t  /* Format the position string in place.  */\n+\t\t  int len = snprintf (NULL, 0, \"$%u\", *psizpos);\n+\t\t  size_t specend = spec.length ();\n+\t\t  spec.resize (specend + len + 1);\n+\t\t  sprintf (&spec[specend], \"$%u\", *psizpos);\n+\t\t  /* Trim the trailing NUL.  */\n+\t\t  spec.resize (specend + len);\n \t\t}\n \t      else\n \t\t{"}, {"sha": "5df02bdb8209785aa874aa3f385f7b103a779f05", "filename": "gcc/testsuite/gcc.dg/pr100619.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2a917fa0779b689f09ac8d8c41b0456facbe62/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100619.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2a917fa0779b689f09ac8d8c41b0456facbe62/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100619.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100619.c?ref=eb2a917fa0779b689f09ac8d8c41b0456facbe62", "patch": "@@ -0,0 +1,24 @@\n+/* PR c/100619 - ICE on a VLA parameter with too many dimensions\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+extern int n;\n+\n+#define A10     [n][n][n][n][n][n][n][n][n][n]\n+#define A100    A10 A10 A10 A10 A10 A10 A10 A10 A10 A10 A10\n+#define A1000   A100 A100 A100 A100 A100 A100 A100 A100 A100 A100 A100\n+\n+void f10 (int A10);\n+void f10 (int A10);\n+\n+void f100 (int A100);\n+void f100 (int A100);\n+\n+void f1000 (int A1000);\n+void f1000 (int A1000);\n+\n+void fx_1000 (int [ ]A1000);\n+void fx_1000 (int [1]A1000);        // { dg-warning \"-Warray-parameter\" }\n+\n+void fn_1000 (int [n    ]A1000);\n+void fn_1000 (int [n + 1]A1000);    // { dg-warning \"-Wvla-parameter\" }"}]}