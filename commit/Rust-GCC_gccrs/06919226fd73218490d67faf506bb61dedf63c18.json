{"sha": "06919226fd73218490d67faf506bb61dedf63c18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY5MTkyMjZmZDczMjE4NDkwZDY3ZmFmNTA2YmI2MWRlZGY2M2MxOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-11-16T14:19:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-11-16T14:19:38Z"}, "message": "re PR fortran/38095 (character ICE)\n\n2008-11-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/38095\n        * trans-expr.c (gfc_map_intrinsic_function): Fix pointer access.\n\n2008-11-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/38095\n        * gfortran.dg/char_length_13.f90: New test.\n\nFrom-SVN: r141917", "tree": {"sha": "52f1a0e5c1acfebc7fecf51a5b4eab527c7f3346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52f1a0e5c1acfebc7fecf51a5b4eab527c7f3346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06919226fd73218490d67faf506bb61dedf63c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06919226fd73218490d67faf506bb61dedf63c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06919226fd73218490d67faf506bb61dedf63c18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06919226fd73218490d67faf506bb61dedf63c18/comments", "author": null, "committer": null, "parents": [{"sha": "7cf98868513b35e5b9607e03577c17f490a172bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf98868513b35e5b9607e03577c17f490a172bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf98868513b35e5b9607e03577c17f490a172bb"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "ceb2f7c00e09fdf2ad16852a3026bf6d4438599f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=06919226fd73218490d67faf506bb61dedf63c18", "patch": "@@ -1,3 +1,8 @@\n+2008-11-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/38095\n+\t* trans-expr.c (gfc_map_intrinsic_function): Fix pointer access.\n+\n 2008-11-16  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38119\n@@ -14,8 +19,8 @@\n \n 2008-11-15  Paul Thomas  <pault@gcc.gnu.org>\n \n-        PR fortran/37926\n-        * trans-expr.c (gfc_add_interface_mapping): Transfer the formal\n+\tPR fortran/37926\n+\t* trans-expr.c (gfc_add_interface_mapping): Transfer the formal\n \targlist and the always_explicit attribute if the dummy arg is a\n \tprocedure.\n "}, {"sha": "58a18b9e2f94be266c1d6e7a13bf8aca454c608e", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=06919226fd73218490d67faf506bb61dedf63c18", "patch": "@@ -1922,8 +1922,9 @@ gfc_map_intrinsic_function (gfc_expr *expr, gfc_interface_mapping *mapping)\n     case GFC_ISYM_LEN:\n       /* TODO figure out why this condition is necessary.  */\n       if (sym->attr.function\n-\t    && arg1->ts.cl->length->expr_type != EXPR_CONSTANT\n-\t    && arg1->ts.cl->length->expr_type != EXPR_VARIABLE)\n+\t  && (arg1->ts.cl->length == NULL\n+\t      || (arg1->ts.cl->length->expr_type != EXPR_CONSTANT\n+\t\t  && arg1->ts.cl->length->expr_type != EXPR_VARIABLE)))\n \treturn false;\n \n       new_expr = gfc_copy_expr (arg1->ts.cl->length);"}, {"sha": "d2b74b1ded9f665a2dffeecb71ff59e7ad8b1b09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06919226fd73218490d67faf506bb61dedf63c18", "patch": "@@ -1,3 +1,8 @@\n+2008-11-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/38095\n+\t* gfortran.dg/char_length_13.f90: New test.\n+\n 2008-11-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr36246.c: Add -fomit-frame-pointer to dg-options."}, {"sha": "576d5be7775571cdc47c1b5c640f744f17a6798c", "filename": "gcc/testsuite/gfortran.dg/char_length_13.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06919226fd73218490d67faf506bb61dedf63c18/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_13.f90?ref=06919226fd73218490d67faf506bb61dedf63c18", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+!\n+! PR fortran/38095\n+!\n+! Contributed by Vivek Rao\n+!\n+! Compiling the program below gave an ICE\n+!\n+module bar\n+  implicit none\n+contains\n+elemental function trim_append(xx,yy) result(xy)\n+  character (len=*), intent(in) :: xx,yy\n+  character (len=len(xx) + len(yy)) :: xy\n+  xy = trim(xx) // yy\n+end function trim_append\n+function same(xx) result(yy)\n+  character (len=*), intent(in) :: xx(:)\n+  character (len=len(xx))       :: yy(size(xx))\n+  yy = [xx]\n+end function same\n+subroutine foo(labels)\n+  character (len=*), intent(in) :: labels(:)\n+  print*,\"size(labels)=\",size(labels)\n+end subroutine foo\n+subroutine xmain()\n+  call foo(trim_append([\"a\"],same([\"b\"])))\n+end subroutine xmain\n+end module bar\n+\n+program main\n+  use bar\n+  call xmain()\n+end program main\n+\n+! { dg-final { cleanup-modules \"bar\" } }"}]}