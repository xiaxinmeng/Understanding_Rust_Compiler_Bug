{"sha": "8cc4f9cd824d195178632569c749f96b306475f9", "node_id": "C_kwDOANBUbNoAKDhjYzRmOWNkODI0ZDE5NTE3ODYzMjU2OWM3NDlmOTZiMzA2NDc1Zjk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-10T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-10T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "acb75094f5b0db48a327387b289ec1631e000a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb75094f5b0db48a327387b289ec1631e000a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cc4f9cd824d195178632569c749f96b306475f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc4f9cd824d195178632569c749f96b306475f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc4f9cd824d195178632569c749f96b306475f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc4f9cd824d195178632569c749f96b306475f9/comments", "author": null, "committer": null, "parents": [{"sha": "65857caee8ccfac5007a9fd0e5f18cce5e5fe934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65857caee8ccfac5007a9fd0e5f18cce5e5fe934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65857caee8ccfac5007a9fd0e5f18cce5e5fe934"}], "stats": {"total": 239, "additions": 238, "deletions": 1}, "files": [{"sha": "b5062561da55081959fec6f373d6ab14075860bf", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,9 @@\n+2022-03-09  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* Makefile.def (dependencies): Make configure-sim depend on\n+\tall-readline.\n+\t* Makefile.in: Regenerate.\n+\n 2022-02-22  Christophe Lyon  <christophe.lyon@foss.st.com>\n \n \t* MAINTAINERS (Write After Approval): Update my e-mail address."}, {"sha": "4d7bbbb1ab5afdab435697d5f6384938b84cd8bc", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,9 @@\n+2022-03-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR other/102664\n+\t* git-descr.sh: Use portable sed commands.\n+\t* git-undescr.sh: Likewise.\n+\n 2022-03-08  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR other/102664"}, {"sha": "26ae44a1eeca80d23e4ae790fd57287e9fe2d51a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,48 @@\n+2022-03-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* cfgexpand.cc (expand_gimple_asm): Special-case MEM_REF\n+\twith non-decl operand, avoiding a copy.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104781\n+\t* config/i386/i386.h (LIBGCC2_UNWIND_ATTRIBUTE): Define for ia32.\n+\n+2022-03-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104786\n+\t* cfgexpand.cc (expand_asm_stmt): Do not generate a copy\n+\tfor VLAs without an upper size bound.\n+\n+2022-03-09  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\tPR tree-optimization/104851\n+\t* optabs-query.cc (supports_vec_convert_optab_p): Fix off-by-one\n+\terror.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104711\n+\t* doc/invoke.texi (-Wextra): Document that -Wshift-negative-value\n+\tis enabled by it only for C++11 to C++17 rather than for C++03 or\n+\tlater.\n+\t(-Wshift-negative-value): Similarly (except here we stated\n+\tthat it is enabled for C++11 or later).\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104839\n+\t* simplify-rtx.cc (simplify_unary_operation_1) <case SIGN_EXTEND>:\n+\tUse SRP_SIGNED instead of incorrect 1 in SUBREG_PROMOTED_SET.\n+\t(simplify_unary_operation_1) <case ZERO_EXTEND>: Use SRP_UNSIGNED\n+\tinstead of incorrect 0 in SUBREG_PROMOTED_SET.\n+\n+2022-03-09  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\tPR target/104842\n+\t* config/mips/mips.h (LUI_OPERAND): Cast the input to an unsigned\n+\tvalue before adding an offset.\n+\n 2022-03-08  Christophe Lyon  <christophe.lyon@arm.com>\n \n \t* config/arm/arm-builtins.cc"}, {"sha": "284de79460a817c88f04d9c1dedf371765158d2f", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1 +1 @@\n-20220309\n+20220310"}, {"sha": "a034d8fa99184e2cd081eab2f570e67eb7a2a1bc", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,12 @@\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104711\n+\t* c-opts.cc (c_common_post_options): Don't enable\n+\t-Wshift-negative-value from -Wextra for C++20 or later.\n+\t* c-ubsan.cc (ubsan_instrument_shift): Adjust comments.\n+\t* c-warn.cc (maybe_warn_shift_overflow): Use TYPE_OVERFLOW_WRAPS\n+\tinstead of TYPE_UNSIGNED.\n+\n 2022-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-attribs.cc: Fix up duplicated word issue in a comment."}, {"sha": "e97a42b09f8ab971ff7bba1943fe2f2c3c27c3ac", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,16 @@\n+2022-03-09  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-typeck.cc (function_types_compatible_p): Do not handle C2X\n+\tdifferently from earlier standards for unprototyped function type\n+\tcompatibility.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104711\n+\t* c-fold.cc (c_fully_fold_internal): Don't emit\n+\t-Wshift-negative-value warning if TYPE_OVERFLOW_WRAPS.\n+\t* c-typeck.cc (build_binary_op): Likewise.\n+\n 2022-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-parser.cc (c_parser_omp_clause_map): Add missing space in string"}, {"sha": "1aeacce647c0a886b72bcdd91656751f0ec424d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,56 @@\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104823\n+\t* except.cc (build_noexcept_spec): Strengthen dependence check\n+\tto instantiation_dependent_expression_p.\n+\t* parser.cc (cp_parser_parenthesized_expression_list_elt):\n+\tRemove fold_expr_p parameter, and don't call\n+\tinstantiate_non_dependent_expr.\n+\t(cp_parser_parenthesized_expression_list): Adjust accordingly.\n+\t* pt.cc (expand_integer_pack): Strengthen dependence check\n+\tto instantiation_dependent_expression_p.\n+\t(instantiate_non_dependent_expr_internal): Adjust comment.\n+\t(instantiate_non_dependent_expr_sfinae): Likewise.  Drop\n+\tthe potentially-constant check, and relax and turn the\n+\tdependence check into a checking assert.\n+\t(instantiate_non_dependent_or_null): Adjust comment.\n+\t* semantics.cc (finish_decltype_type): Keep\n+\tprocessing_template_decl cleared after calling\n+\tinstantiate_non_dependent_expr_sfinae.\n+\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102137\n+\tPR c++/87820\n+\t* cp-tree.h (is_copy_initialization): Declare.\n+\t* decl.cc (cp_finish_decl): Set LOOKUP_ONLYCONVERTING\n+\twhen is_copy_initialization is true.\n+\t* init.cc (build_aggr_init): Split out copy-initialization\n+\tcheck into ...\n+\t(is_copy_initialization): ... here.\n+\t* pt.cc (instantiate_decl): Pass 0 instead of\n+\tLOOKUP_ONLYCONVERTING as flags to cp_finish_decl.\n+\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/65396\n+\t* cp-tree.h (merge_default_template_args): Declare.\n+\t* decl.cc (merge_default_template_args): Define, factored out\n+\tfrom redeclare_class_template.\n+\t(duplicate_decls): Use it when merging member function template\n+\tand free function declarations.\n+\t* pt.cc (redeclare_class_template): Factor out default argument\n+\tmerging logic into merge_default_template_args.  Improve location\n+\tof a note when there's a template parameter kind mismatch.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104711\n+\t* constexpr.cc (cxx_eval_check_shift_p): Use TYPE_OVERFLOW_WRAPS\n+\tinstead of TYPE_UNSIGNED.\n+\t* typeck.cc (cp_build_binary_op): Don't emit\n+\t-Wshift-negative-value warning if TYPE_OVERFLOW_WRAPS.\n+\n 2022-03-08  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR c++/96440"}, {"sha": "f49b8e2de9bbff9a87ff1473f55411578991e6bd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,13 @@\n+2022-03-09  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104849\n+\t* expr.cc (find_array_section): Avoid NULL pointer dereference on\n+\tinvalid array section.\n+\n+2022-03-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* trans-intrinsic.cc (gfc_conv_intrinsic_sizeof): Fix CLASS handling.\n+\n 2022-03-08  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/104126"}, {"sha": "8073258408a143c6312d9d7eabfbe11259beff05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,83 @@\n+2022-03-09  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c11-unproto-1.c, gcc.dg/c11-unproto-2.c: Update comments.\n+\t* gcc.dg/c2x-unproto-1.c, gcc.dg/c2x-unproto-2.c: Expect same\n+\tresults as in C11 mode.  Update comments.\n+\n+2022-03-09  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104849\n+\t* gfortran.dg/pr104849.f90: New test.\n+\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104823\n+\t* g++.dg/cpp0x/Wnarrowing19.C: New test.\n+\t* g++.dg/cpp0x/constexpr-attribute4.C: New file.\n+\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102137\n+\tPR c++/87820\n+\t* g++.dg/cpp0x/explicit15.C: New test.\n+\t* g++.dg/cpp1z/class-deduction108.C: New test.\n+\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/65396\n+\t* g++.dg/cpp0x/vt-34314.C: Adjust expected location of\n+\t\"redeclared here\" note.\n+\t* g++.dg/template/pr92440.C: Likewise.\n+\t* g++.old-deja/g++.pt/redecl1.C: Adjust expected location of\n+\t\"redefinition of default argument\" error.\n+\t* g++.dg/template/defarg23.C: New test.\n+\t* g++.dg/template/defarg23a.C: New test.\n+\n+2022-03-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/104759\n+\t* gcc.dg/vect/vect-multitypes-12.c: Adjust.\n+\n+2022-03-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104786\n+\t* gcc.dg/pr104786.c: New testcase.\n+\n+2022-03-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/sizeof_6.f90: New test.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104711\n+\t* c-c++-common/Wshift-negative-value-1.c: Remove\n+\tdg-additional-options, instead in target selectors of each diagnostic\n+\tcheck for exact C++ versions where it should be diagnosed.\n+\t* c-c++-common/Wshift-negative-value-2.c: Likewise.\n+\t* c-c++-common/Wshift-negative-value-3.c: Likewise.\n+\t* c-c++-common/Wshift-negative-value-4.c: Likewise.\n+\t* c-c++-common/Wshift-negative-value-7.c: New test.\n+\t* c-c++-common/Wshift-negative-value-8.c: New test.\n+\t* c-c++-common/Wshift-negative-value-9.c: New test.\n+\t* c-c++-common/Wshift-negative-value-10.c: New test.\n+\t* c-c++-common/Wshift-overflow-1.c: Remove\n+\tdg-additional-options, instead in target selectors of each diagnostic\n+\tcheck for exact C++ versions where it should be diagnosed.\n+\t* c-c++-common/Wshift-overflow-2.c: Likewise.\n+\t* c-c++-common/Wshift-overflow-5.c: Likewise.\n+\t* c-c++-common/Wshift-overflow-6.c: Likewise.\n+\t* c-c++-common/Wshift-overflow-7.c: Likewise.\n+\t* c-c++-common/Wshift-overflow-8.c: New test.\n+\t* c-c++-common/Wshift-overflow-9.c: New test.\n+\t* c-c++-common/Wshift-overflow-10.c: New test.\n+\t* c-c++-common/Wshift-overflow-11.c: New test.\n+\t* c-c++-common/Wshift-overflow-12.c: New test.\n+\n+2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104839\n+\t* gcc.c-torture/execute/pr104839.c: New test.\n+\n 2022-03-08  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR c++/96440"}, {"sha": "f023ce26507462834718a1677b06cc785a90371f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,11 @@\n+2022-03-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR target/102215\n+\t* config/gcn/atomic.c (__sync_val_compare_and_swap_##SIZE): Move\n+\ta line up to non-arg-dependent value first.\n+\t(__ATOMIC_COMPARE_EXCHANGE): Define + call to generate\n+\t__atomic_compare_exchange_{1,2}.\n+\n 2022-03-04  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/rs6000/t-darwin-ehs: Add darwin-fallback.o."}, {"sha": "4893e51e98296427c805ff8d05830651084a2f06", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc4f9cd824d195178632569c749f96b306475f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc4f9cd824d195178632569c749f96b306475f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8cc4f9cd824d195178632569c749f96b306475f9", "patch": "@@ -1,3 +1,10 @@\n+2022-03-09  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/104859\n+\t* src/c++17/floating_to_chars.cc (__floating_to_chars_hex):\n+\tBe explicit when narrowing the shifted effective_mantissa,\n+\tsince it may have an integer-class type.\n+\n 2022-03-08  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/uses_allocator_args.h: Remove incorrect copyright"}]}