{"sha": "ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4Yzk3NTQ2YjMzOWFiMTExN2RjNmEwY2E0ZjIzYzFjMGY3MjJkOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-10-07T05:34:30Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-10-07T05:34:30Z"}, "message": "re PR middle-end/16815 (MIPS n32/n64 inefficient code for float arguments)\n\n\tPR target/16815\n\t* function.c (assign_parm_setup_block_p): Tighten BLOCK_REG_PADDING\n\tcheck.\n\t* config/pa/pa.h (BLOCK_REG_PADDING): Define in terms of\n\tfunction_arg_padding.\n\nFrom-SVN: r88660", "tree": {"sha": "eda689a8e928119de5a8f2c187f0a1f9a7d6ac62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda689a8e928119de5a8f2c187f0a1f9a7d6ac62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/comments", "author": null, "committer": null, "parents": [{"sha": "ed00ab959d5ec3ba62791bfb0c6b1fa078c19ece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed00ab959d5ec3ba62791bfb0c6b1fa078c19ece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed00ab959d5ec3ba62791bfb0c6b1fa078c19ece"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "7f361f9ade1128ba7ec88ac0d36e021de98cd22a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "patch": "@@ -1,3 +1,11 @@\n+2004-10-07  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR target/16815\n+\t* function.c (assign_parm_setup_block_p): Tighten BLOCK_REG_PADDING\n+\tcheck.\n+\t* config/pa/pa.h (BLOCK_REG_PADDING): Define in terms of\n+\tfunction_arg_padding.\n+\n 2004-10-07  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR bootstrap/17857"}, {"sha": "18fb21706a3143df2216fedf30319dcccad0a693", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "patch": "@@ -918,7 +918,8 @@ struct hppa_args {int words, nargs_prototype, incoming, indirect; };\n    We use a DImode register in the parallel for 5 to 7 byte structures\n    so that there is only one element.  This allows the object to be\n    correctly padded.  */\n-#define BLOCK_REG_PADDING(MODE, TYPE, FIRST) (TARGET_64BIT ? upward : downward)\n+#define BLOCK_REG_PADDING(MODE, TYPE, FIRST) \\\n+  function_arg_padding ((MODE), (TYPE))\n \n /* Do not expect to understand this without reading it several times.  I'm\n    tempted to try and simply it, but I worry about breaking something.  */"}, {"sha": "4c8d6c409c120bf2383f14e258299d45e6a173dc", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ae8c97546b339ab1117dc6a0ca4f23c1c0f722d8", "patch": "@@ -2513,8 +2513,12 @@ assign_parm_setup_block_p (struct assign_parm_data_one *data)\n     return true;\n \n #ifdef BLOCK_REG_PADDING\n-  if (data->locate.where_pad == (BYTES_BIG_ENDIAN ? upward : downward)\n-      && GET_MODE_SIZE (data->promoted_mode) < UNITS_PER_WORD)\n+  /* Only assign_parm_setup_block knows how to deal with register arguments\n+     that are padded at the least significant end.  */\n+  if (REG_P (data->entry_parm)\n+      && GET_MODE_SIZE (data->promoted_mode) < UNITS_PER_WORD\n+      && (BLOCK_REG_PADDING (data->passed_mode, data->passed_type, 1)\n+\t  == (BYTES_BIG_ENDIAN ? upward : downward)))\n     return true;\n #endif\n "}]}