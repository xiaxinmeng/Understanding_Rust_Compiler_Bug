{"sha": "575056672b3fec0cb4f5ddafd2d4a8c42b83589b", "node_id": "C_kwDOANBUbNoAKDU3NTA1NjY3MmIzZmVjMGNiNGY1ZGRhZmQyZDRhOGM0MmI4MzU4OWI", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-01-27T01:52:07Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-01-27T01:52:07Z"}, "message": "[docs] note that -g opts are implicitly negatable too\n\nBack in 2017, I made -g* options implicitly negatable, without\nrealizing there was documentation that required updating.  Oops.\nFixed, at last!\n\n\nfor gcc/ChangeLog\n\n\t* doc/options.texi (option, RejectNegative): Mention that\n\t-g-started options are also implicitly negatable.", "tree": {"sha": "92c41d17528d3d40a8577a1616653fb5a6e3e4ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92c41d17528d3d40a8577a1616653fb5a6e3e4ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575056672b3fec0cb4f5ddafd2d4a8c42b83589b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575056672b3fec0cb4f5ddafd2d4a8c42b83589b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575056672b3fec0cb4f5ddafd2d4a8c42b83589b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575056672b3fec0cb4f5ddafd2d4a8c42b83589b/comments", "author": null, "committer": null, "parents": [{"sha": "2371d100b946ec96384e4541235fb87e0659d87b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2371d100b946ec96384e4541235fb87e0659d87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2371d100b946ec96384e4541235fb87e0659d87b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f50063c97870be87db32b6b93463f8ea1b5483b7", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575056672b3fec0cb4f5ddafd2d4a8c42b83589b/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575056672b3fec0cb4f5ddafd2d4a8c42b83589b/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=575056672b3fec0cb4f5ddafd2d4a8c42b83589b", "patch": "@@ -161,7 +161,7 @@ the help text to use for @option{--help} (omitted if the second field\n contains the @code{Undocumented} property).\n @end enumerate\n \n-By default, all options beginning with ``f'', ``W'' or ``m'' are\n+By default, all options beginning with ``f'', ``g'', ``W'' or ``m'' are\n implicitly assumed to take a ``no-'' form.  This form should not be\n listed separately.  If an option beginning with one of these letters\n does not have a ``no-'' form, you can use the @code{RejectNegative}\n@@ -239,8 +239,8 @@ and should not be accepted by the driver.\n \n @item RejectNegative\n The option does not have a ``no-'' form.  All options beginning with\n-``f'', ``W'' or ``m'' are assumed to have a ``no-'' form unless this\n-property is used.\n+``f'', ``g'', ``W'' or ``m'' are assumed to have a ``no-'' form unless\n+this property is used.\n \n @item Negative(@var{othername})\n The option will turn off another option @var{othername}, which is"}]}