{"sha": "b625fdb7508b5f4e2eac0300e96cd664549d22a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyNWZkYjc1MDhiNWY0ZTJlYWMwMzAwZTk2Y2Q2NjQ1NDlkMjJhMg==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2003-05-15T02:24:13Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2003-05-15T02:24:13Z"}, "message": "* testsuite/thread/pthread4.cc: Tweak test.\n\nFrom-SVN: r66817", "tree": {"sha": "a8a5fa0c262ae82bcc8a719502f4c983b9b7f862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8a5fa0c262ae82bcc8a719502f4c983b9b7f862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b625fdb7508b5f4e2eac0300e96cd664549d22a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b625fdb7508b5f4e2eac0300e96cd664549d22a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b625fdb7508b5f4e2eac0300e96cd664549d22a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b625fdb7508b5f4e2eac0300e96cd664549d22a2/comments", "author": null, "committer": null, "parents": [{"sha": "3b3acc8107f8038480c486e7c3a26e131f57490d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3acc8107f8038480c486e7c3a26e131f57490d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3acc8107f8038480c486e7c3a26e131f57490d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "d5cb45daecb1ddcc56aa0dfb6990a256af6929dc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b625fdb7508b5f4e2eac0300e96cd664549d22a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b625fdb7508b5f4e2eac0300e96cd664549d22a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b625fdb7508b5f4e2eac0300e96cd664549d22a2", "patch": "@@ -1,3 +1,7 @@\n+2003-05-14  Loren J. Rittle  <ljrittle@acm.org>\n+\n+\t* testsuite/thread/pthread4.cc: Tweak test.\n+\n 2003-05-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/ios_base/cons/copy_neg.cc: Remove"}, {"sha": "d297fc28e67e46f0e14b64897527c9999e53d3e6", "filename": "libstdc++-v3/testsuite/thread/pthread4.cc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b625fdb7508b5f4e2eac0300e96cd664549d22a2/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b625fdb7508b5f4e2eac0300e96cd664549d22a2/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc?ref=b625fdb7508b5f4e2eac0300e96cd664549d22a2", "patch": "@@ -35,6 +35,8 @@ using namespace std;\n \n static list<string> foo;\n static pthread_mutex_t fooLock = PTHREAD_MUTEX_INITIALIZER;\n+static pthread_cond_t fooCondOverflow = PTHREAD_COND_INITIALIZER;\n+static pthread_cond_t fooCondUnderflow = PTHREAD_COND_INITIALIZER;\n static unsigned max_size = 10;\n #if defined(__CYGWIN__)\n static int iters = 10000;\n@@ -50,11 +52,12 @@ produce (void*)\n       string str (\"test string\");\n \n       pthread_mutex_lock (&fooLock);\n-      if (foo.size () < max_size)\n-\t{\n-\t  foo.push_back (str);\n-\t  num++;\n-\t}\n+      while (foo.size () >= max_size)\n+\tpthread_cond_wait (&fooCondOverflow, &fooLock);\n+      foo.push_back (str);\n+      num++;\n+      if (foo.size () >= (max_size / 2))\n+\tpthread_cond_signal (&fooCondUnderflow);\n       pthread_mutex_unlock (&fooLock);\n     }\n \n@@ -67,12 +70,15 @@ consume (void*)\n   for (int num = 0; num < iters; )\n     {\n       pthread_mutex_lock (&fooLock);\n+      while (foo.size () == 0)\n+\tpthread_cond_wait (&fooCondUnderflow, &fooLock);\n       while (foo.size () > 0)\n \t{\n \t  string str = foo.back ();\n \t  foo.pop_back ();\n \t  num++;\n \t}\n+      pthread_cond_signal (&fooCondOverflow);\n       pthread_mutex_unlock (&fooLock);\n     }\n "}]}