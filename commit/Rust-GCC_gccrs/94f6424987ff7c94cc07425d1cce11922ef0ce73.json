{"sha": "94f6424987ff7c94cc07425d1cce11922ef0ce73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmNjQyNDk4N2ZmN2M5NGNjMDc0MjVkMWNjZTExOTIyZWYwY2U3Mw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-05-11T15:05:36Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-05-11T15:05:36Z"}, "message": "lto-coff.c (validate_file): Add x64-coff support.\n\n2010-05-11  Kai Tietz  <kai.tietz@onevision.com>\n\n        * lto-coff.c (validate_file): Add x64-coff support.\n        * lto-coff.h (IMAGE_FILE_MACHINE_ADM64): New.\n        (COFF_KNOWN_MACHINES): Add IMAGE_FILE_MACHINE_ADM64.\n        * lto-lang.c (lto_build_c_type_nodes): Add check for\n        'long long unsigned int' for x64-windows.\n        (lto_init): Likewise.\n\nFrom-SVN: r159271", "tree": {"sha": "6d05e77f721564aad5732a62616235507a19d6f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d05e77f721564aad5732a62616235507a19d6f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f6424987ff7c94cc07425d1cce11922ef0ce73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f6424987ff7c94cc07425d1cce11922ef0ce73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f6424987ff7c94cc07425d1cce11922ef0ce73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f6424987ff7c94cc07425d1cce11922ef0ce73/comments", "author": null, "committer": null, "parents": [{"sha": "90829bcb0ca688af71c19ca3c72f4da6cae455fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90829bcb0ca688af71c19ca3c72f4da6cae455fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90829bcb0ca688af71c19ca3c72f4da6cae455fd"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "a86396a14fd8bc952541c9102e763d84242877f9", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=94f6424987ff7c94cc07425d1cce11922ef0ce73", "patch": "@@ -1,3 +1,13 @@\n+2010-05-11  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* lto-coff.c (validate_file): Add x64-coff support.\n+\t* lto-coff.h (IMAGE_FILE_MACHINE_ADM64): New.\n+\t(COFF_KNOWN_MACHINES): Add IMAGE_FILE_MACHINE_ADM64.\n+\t* lto-lang.c (lto_build_c_type_nodes): Add check for\n+\t'long long unsigned int' for x64-windows.\n+\t(lto_init): Likewise.\n+\n+\n 2010-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lto.h (struct lto_file_struct): Document offset member."}, {"sha": "6c15e66d41d5c4e5325825c6125e9e65cc03401f", "filename": "gcc/lto/lto-coff.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-coff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-coff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-coff.c?ref=94f6424987ff7c94cc07425d1cce11922ef0ce73", "patch": "@@ -379,9 +379,10 @@ validate_file (lto_coff_file *coff_file)\n       return false;\n     }\n \n-  if (COFF_CHARACTERISTICS != (COFF_CHARACTERISTICS & charact))\n+  if (mach != IMAGE_FILE_MACHINE_ADM64\n+      && COFF_CHARACTERISTICS != (COFF_CHARACTERISTICS & charact))\n     {\n-      /* ECOFF/XCOFF/PE+ support not implemented.  */\n+      /* ECOFF/XCOFF support not implemented.  */\n       error (\"not a 32-bit COFF object file\");\n       return false;\n     }"}, {"sha": "5792f3dc5965624b4ccf81179f4117dbcfd52d3c", "filename": "gcc/lto/lto-coff.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-coff.h?ref=94f6424987ff7c94cc07425d1cce11922ef0ce73", "patch": "@@ -79,11 +79,13 @@ along with GCC; see the file COPYING3.  If not see\n /* COFF header machine codes.  */\n \n #define IMAGE_FILE_MACHINE_I386\t(0x014c)\n+#define IMAGE_FILE_MACHINE_ADM64 (0x8664)\n \n /* Known header magics for validation, as an array initialiser.  */\n \n #define COFF_KNOWN_MACHINES \\\n-  { IMAGE_FILE_MACHINE_I386/*, ... add more here when working.  */ }\n+  { IMAGE_FILE_MACHINE_I386, \\\n+    IMAGE_FILE_MACHINE_ADM64/*, ... add more here when working.  */ }\n \n /* COFF object file header, section and symbol flags and types.  These are\n    currently specific to PE-COFF, which is the only LTO-COFF format at the"}, {"sha": "35d133b68e20c526b5730bf62e231a1ea21c2107", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f6424987ff7c94cc07425d1cce11922ef0ce73/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=94f6424987ff7c94cc07425d1cce11922ef0ce73", "patch": "@@ -1019,6 +1019,12 @@ lto_build_c_type_nodes (void)\n       uintmax_type_node = long_unsigned_type_node;\n       signed_size_type_node = long_integer_type_node;\n     }\n+  else if (strcmp (SIZE_TYPE, \"long long unsigned int\") == 0)\n+    {\n+      intmax_type_node = long_long_integer_type_node;\n+      uintmax_type_node = long_long_unsigned_type_node;\n+      signed_size_type_node = long_long_integer_type_node;\n+    }\n   else\n     gcc_unreachable ();\n \n@@ -1062,6 +1068,11 @@ lto_init (void)\n       set_sizetype (long_unsigned_type_node);\n       size_type_node = long_unsigned_type_node;\n     }\n+  else if (strcmp (SIZE_TYPE, \"long long unsigned int\") == 0)\n+    {\n+      set_sizetype (long_long_unsigned_type_node);\n+      size_type_node = long_long_unsigned_type_node;\n+    }\n   else\n     gcc_unreachable ();\n "}]}