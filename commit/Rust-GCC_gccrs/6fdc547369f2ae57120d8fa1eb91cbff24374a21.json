{"sha": "6fdc547369f2ae57120d8fa1eb91cbff24374a21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkYzU0NzM2OWYyYWU1NzEyMGQ4ZmExZWI5MWNiZmYyNDM3NGEyMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-12-14T00:36:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-12-14T00:36:15Z"}, "message": "re PR c++/51464 ([c++0x] ICE with invalid use of [])\n\n/cp\n2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51464\n\t* semantics.c (begin_lambda_type): Check begin_class_definition return\n\tvalue for error_mark_node.\n\t* parser.c (cp_parser_lambda_expression): Check begin_lambda_type\n\treturn value for error_mark_node.\n\n/testsuite\n2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51464\n\t* g++.dg/cpp0x/lambda/lambda-ice6.C: New.\n\nFrom-SVN: r182320", "tree": {"sha": "d197ef935d53902daf9e61d3930064960868693a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d197ef935d53902daf9e61d3930064960868693a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fdc547369f2ae57120d8fa1eb91cbff24374a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc547369f2ae57120d8fa1eb91cbff24374a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fdc547369f2ae57120d8fa1eb91cbff24374a21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc547369f2ae57120d8fa1eb91cbff24374a21/comments", "author": null, "committer": null, "parents": [{"sha": "639166b250def5cb1b57500193fc414f4f142142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/639166b250def5cb1b57500193fc414f4f142142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/639166b250def5cb1b57500193fc414f4f142142"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "23748d8bdd8eee27a573e8a9361e7a6a9d72a3e8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6fdc547369f2ae57120d8fa1eb91cbff24374a21", "patch": "@@ -1,3 +1,11 @@\n+2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51464\n+\t* semantics.c (begin_lambda_type): Check begin_class_definition return\n+\tvalue for error_mark_node.\n+\t* parser.c (cp_parser_lambda_expression): Check begin_lambda_type\n+\treturn value for error_mark_node.\n+\n 2011-12-13  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \tPR c++/14258"}, {"sha": "49b508ce83a07bbb41d7e9d4c81cbd9aaf8d8d71", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6fdc547369f2ae57120d8fa1eb91cbff24374a21", "patch": "@@ -8033,6 +8033,8 @@ cp_parser_lambda_expression (cp_parser* parser)\n   cp_parser_lambda_introducer (parser, lambda_expr);\n \n   type = begin_lambda_type (lambda_expr);\n+  if (type == error_mark_node)\n+    return error_mark_node;\n \n   record_lambda_scope (lambda_expr);\n "}, {"sha": "7e1a396332c8ec1c64f77e9d5c7c7be54e817429", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6fdc547369f2ae57120d8fa1eb91cbff24374a21", "patch": "@@ -8623,6 +8623,8 @@ begin_lambda_type (tree lambda)\n \n   /* Start the class.  */\n   type = begin_class_definition (type, /*attributes=*/NULL_TREE);\n+  if (type == error_mark_node)\n+    return error_mark_node;\n \n   /* Cross-reference the expression and the type.  */\n   LAMBDA_EXPR_CLOSURE (lambda) = type;"}, {"sha": "5011d2c10863f549a411a7f216a4e711a5e8eed3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fdc547369f2ae57120d8fa1eb91cbff24374a21", "patch": "@@ -1,3 +1,8 @@\n+2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51464\n+\t* g++.dg/cpp0x/lambda/lambda-ice6.C: New.\n+\n 2011-12-13  Andrew Pinski  <apinski@cavium.com>\n             Adam Nemet  <anemet@caviumnetworks.com>\n "}, {"sha": "ddf352766eb7c9ddb29e5a082418c3ec1655a3fc", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice6.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc547369f2ae57120d8fa1eb91cbff24374a21/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice6.C?ref=6fdc547369f2ae57120d8fa1eb91cbff24374a21", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/51464\n+// { dg-options \"-std=c++0x\" }\n+\n+template<int = sizeof([])> struct A {}; // { dg-error \"lambda\" } "}]}