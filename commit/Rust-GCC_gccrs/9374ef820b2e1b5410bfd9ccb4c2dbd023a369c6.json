{"sha": "9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3NGVmODIwYjJlMWI1NDEwYmZkOWNjYjRjMmRiZDAyM2EzNjljNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-03-05T17:49:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-05T17:49:49Z"}, "message": "re PR ipa/65318 (wrong code at -Os and above on x86_64-linux-gnu)\n\n\tPR ipa/65318\n\t* ipa-icf.c (sem_variable::equals): Compare variables types.\n\t* gcc.dg/ipa/pr65318.c: New test.\n\nFrom-SVN: r221221", "tree": {"sha": "3a32f1c92334c72cd658898f32c981ab9b792fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a32f1c92334c72cd658898f32c981ab9b792fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2755b64ed5855eddc6f7ae554116870735065632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2755b64ed5855eddc6f7ae554116870735065632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2755b64ed5855eddc6f7ae554116870735065632"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "f78091957da115ee2244d1ea57b362beaaff51da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "patch": "@@ -1,3 +1,8 @@\n+2015-03-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/65318\n+\t* ipa-icf.c (sem_variable::equals): Compare variables types.\n+\n 2015-03-05  Alex Velenko  <alex.velenko@arm.com>\n \n \t* config/arm/arm.c (arm_function_in_section_p): Fix predicate to"}, {"sha": "a7f19d6fd8d69ed0312dc815bb7289a824ce27cd", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "patch": "@@ -1501,6 +1501,11 @@ sem_variable::equals (sem_item *item,\n   if (DECL_INITIAL (item->decl) == error_mark_node && in_lto_p)\n     dyn_cast <varpool_node *>(item->node)->get_constructor ();\n \n+  /* As seen in PR ipa/65303 we have to compare variables types.  */\n+  if (!func_checker::compatible_types_p (TREE_TYPE (decl),\n+\t\t\t\t\t TREE_TYPE (item->decl)))\n+    return return_false_with_msg (\"variables types are different\");\n+\n   ret = sem_variable::equals (DECL_INITIAL (decl),\n \t\t\t      DECL_INITIAL (item->node->decl));\n   if (dump_file && (dump_flags & TDF_DETAILS))"}, {"sha": "09d42b3d851b43b38cb51d2ed1fe7372ff603725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "patch": "@@ -1,3 +1,8 @@\n+2015-03-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/65318\n+\t* gcc.dg/ipa/pr65318.c: New test.\n+\n 2015-03-05  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/bounds-6.c: Use dg-do run."}, {"sha": "f23b3a2c36fa11bfc8907ef7ab1f09c874dea327", "filename": "gcc/testsuite/gcc.dg/ipa/pr65318.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr65318.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr65318.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr65318.c?ref=9374ef820b2e1b5410bfd9ccb4c2dbd023a369c6", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-details\"  } */\n+\n+static short a = 0;\n+short b = -1;\n+static unsigned short c = 0;\n+\n+int\n+main ()\n+{\n+  if (a <= b)\n+   return 1;\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}