{"sha": "00449933e6832a4a21de8b0f8dd2c8888c636222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0NDk5MzNlNjgzMmE0YTIxZGU4YjBmOGRkMmM4ODg4YzYzNjIyMg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2011-11-17T02:28:07Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2011-11-17T02:28:07Z"}, "message": "inclhack.def (aix_once_init_[12]): New fixes.\n\n        * inclhack.def (aix_once_init_[12]): New fixes.\n        * fixincl.x: Regenerate.\n        * tests/base/pthread.h: Update.\n\nFrom-SVN: r181434", "tree": {"sha": "cf78e3a13bf620d4cdb370eaf5e37b9bda3c6471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf78e3a13bf620d4cdb370eaf5e37b9bda3c6471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00449933e6832a4a21de8b0f8dd2c8888c636222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00449933e6832a4a21de8b0f8dd2c8888c636222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00449933e6832a4a21de8b0f8dd2c8888c636222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00449933e6832a4a21de8b0f8dd2c8888c636222/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "091d26a69c0788ba0a7629c00642be9d2441a189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091d26a69c0788ba0a7629c00642be9d2441a189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091d26a69c0788ba0a7629c00642be9d2441a189"}], "stats": {"total": 149, "additions": 144, "deletions": 5}, "files": [{"sha": "bbdfc17622add239c11ae8b908c1a0a3495c193b", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=00449933e6832a4a21de8b0f8dd2c8888c636222", "patch": "@@ -1,3 +1,9 @@\n+2011-11-16  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_once_init_[12]): New fixes.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/pthread.h: Update.\n+\n 2011-10-25  Mike Stump  <mikestump@comcast.net>\n \n \tPR target/48851"}, {"sha": "dac0a4ed229e04c4da165c25ddb05752fae37b7c", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 95, "deletions": 5, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=00449933e6832a4a21de8b0f8dd2c8888c636222", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Sunday October 23, 2011 at 12:18:29 PM EST\n+ * It has been AutoGen-ed  November  7, 2011 at 01:16:39 PM by AutoGen 5.10\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Oct 23 12:18:29 EST 2011\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Nov  7 13:16:39 EST 2011\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 220 fixup descriptions.\n+ * This file contains 222 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -557,6 +557,84 @@ static const char* apzAix_Net_If_ArpPatch[] = {\n     \"typedef struct _fc_softc {\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Once_Init_1 fix\n+ */\n+tSCC zAix_Once_Init_1Name[] =\n+     \"aix_once_init_1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Once_Init_1List[] =\n+  \"pthread.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Once_Init_1Machs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Once_Init_1Select0[] =\n+       \"#define[ \\t]PTHREAD_ONCE_INIT \\\\\\\\\\n\\\n+\\\\{ \\\\\\\\\\n\";\n+\n+#define    AIX_ONCE_INIT_1_TEST_CT  1\n+static tTestDesc aAix_Once_Init_1Tests[] = {\n+  { TT_EGREP,    zAix_Once_Init_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Once_Init_1\n+ */\n+static const char* apzAix_Once_Init_1Patch[] = {\n+    \"format\",\n+    \"#define PTHREAD_ONCE_INIT \\\\\\n\\\n+{{ \\\\\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Once_Init_2 fix\n+ */\n+tSCC zAix_Once_Init_2Name[] =\n+     \"aix_once_init_2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Once_Init_2List[] =\n+  \"pthread.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Once_Init_2Machs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Once_Init_2Select0[] =\n+       \"[ \\t]0 \\\\\\\\\\n\\\n+\\\\}\\n\";\n+\n+#define    AIX_ONCE_INIT_2_TEST_CT  1\n+static tTestDesc aAix_Once_Init_2Tests[] = {\n+  { TT_EGREP,    zAix_Once_Init_2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Once_Init_2\n+ */\n+static const char* apzAix_Once_Init_2Patch[] = {\n+    \"format\",\n+    \"\\t0 \\\\\\n\\\n+}}\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Pthread fix\n@@ -8956,9 +9034,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          262\n+#define REGEX_COUNT          264\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            220\n+#define FIX_COUNT            222\n \n /*\n  *  Enumerate the fixes\n@@ -8974,6 +9052,8 @@ typedef enum {\n     AAB_SUN_MEMCPY_FIXIDX,\n     AIX_COMPLEX_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n+    AIX_ONCE_INIT_1_FIXIDX,\n+    AIX_ONCE_INIT_2_FIXIDX,\n     AIX_PTHREAD_FIXIDX,\n     AIX_STDINT_1_FIXIDX,\n     AIX_STDINT_2_FIXIDX,\n@@ -9237,6 +9317,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_NET_IF_ARP_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Net_If_ArpTests,   apzAix_Net_If_ArpPatch, 0 },\n \n+  {  zAix_Once_Init_1Name,    zAix_Once_Init_1List,\n+     apzAix_Once_Init_1Machs,\n+     AIX_ONCE_INIT_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Once_Init_1Tests,   apzAix_Once_Init_1Patch, 0 },\n+\n+  {  zAix_Once_Init_2Name,    zAix_Once_Init_2List,\n+     apzAix_Once_Init_2Machs,\n+     AIX_ONCE_INIT_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Once_Init_2Tests,   apzAix_Once_Init_2Patch, 0 },\n+\n   {  zAix_PthreadName,    zAix_PthreadList,\n      apzAix_PthreadMachs,\n      AIX_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "0567bf474e08932e9252eaf5ec2f495efec182e6", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=00449933e6832a4a21de8b0f8dd2c8888c636222", "patch": "@@ -383,6 +383,35 @@ fix = {\n     test_text = \"struct  fc_softc {\\n  int a;\\n};\";\n };\n \n+/*\n+ *  pthread.h on AIX defines PTHREAD_ONCE_INIT without enough braces.\n+ */\n+fix = {\n+    hackname  = aix_once_init_1;\n+    mach      = \"*-*-aix*\";\n+    files     = \"pthread.h\";\n+    select    = \"#define[ \\t]PTHREAD_ONCE_INIT \\\\\\\\\\n\"\n+\t\t\"\\\\{ \\\\\\\\\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#define PTHREAD_ONCE_INIT \\\\\\n\"\n+\t\t\"{{ \\\\\\n\";\n+    test_text = \"#define PTHREAD_ONCE_INIT \\\\\\\\\\n\"\n+\t\t\"{ \\\\\\\\\\n\";\n+};\n+\n+fix = {\n+    hackname  = aix_once_init_2;\n+    mach      = \"*-*-aix*\";\n+    files     = \"pthread.h\";\n+    select    = \"[ \\t]0 \\\\\\\\\\n\"\n+\t\t\"\\\\}\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"\t0 \\\\\\n\"\n+\t\t\"}}\\n\";\n+    test_text = \"\t0 \\\\\\\\\\n\"\n+\t\t\"}\\n\";\n+};\n+\n /*\n  *  pthread.h on AIX 4.3.3 tries to define a macro without whitspace\n  *  which violates a requirement of ISO C."}, {"sha": "24a215fa47f51331a911448f2e77d4dc7c7a5f94", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00449933e6832a4a21de8b0f8dd2c8888c636222/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=00449933e6832a4a21de8b0f8dd2c8888c636222", "patch": "@@ -9,6 +9,20 @@\n \n \n \n+#if defined( AIX_ONCE_INIT_1_CHECK )\n+#define PTHREAD_ONCE_INIT \\\n+{{ \\\n+\n+#endif  /* AIX_ONCE_INIT_1_CHECK */\n+\n+\n+#if defined( AIX_ONCE_INIT_2_CHECK )\n+\t0 \\\n+}}\n+\n+#endif  /* AIX_ONCE_INIT_2_CHECK */\n+\n+\n #if defined( AIX_PTHREAD_CHECK )\n #define PTHREAD_MUTEX_INITIALIZER \\\n {...init stuff...}"}]}