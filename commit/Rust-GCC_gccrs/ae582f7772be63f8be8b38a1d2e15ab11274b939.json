{"sha": "ae582f7772be63f8be8b38a1d2e15ab11274b939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1ODJmNzc3MmJlNjNmOGJlOGIzOGExZDJlMTVhYjExMjc0YjkzOQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-04-08T20:38:25Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-04-08T20:38:25Z"}, "message": "Add missing part of rth patch.\n\nFrom-SVN: r112787", "tree": {"sha": "d3624837f6bbc0f1add630524084978a70edf67f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3624837f6bbc0f1add630524084978a70edf67f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae582f7772be63f8be8b38a1d2e15ab11274b939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae582f7772be63f8be8b38a1d2e15ab11274b939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae582f7772be63f8be8b38a1d2e15ab11274b939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae582f7772be63f8be8b38a1d2e15ab11274b939/comments", "author": null, "committer": null, "parents": [{"sha": "a3bd7058ffbc9084db46da78de9b90517911249f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3bd7058ffbc9084db46da78de9b90517911249f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3bd7058ffbc9084db46da78de9b90517911249f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1d47a606e724e88e14fe4ebbc473b8de3f0e441f", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae582f7772be63f8be8b38a1d2e15ab11274b939/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae582f7772be63f8be8b38a1d2e15ab11274b939/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=ae582f7772be63f8be8b38a1d2e15ab11274b939", "patch": "@@ -1923,9 +1923,9 @@ number as al, and ax.\n #define DBX_REGISTER_NUMBER(N) \\\n   (TARGET_64BIT ? dbx64_register_map[(N)] : dbx_register_map[(N)])\n \n-extern int const dbx_register_map[FIRST_PSEUDO_REGISTER];\n-extern int const dbx64_register_map[FIRST_PSEUDO_REGISTER];\n-extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER];\n+extern int const dbx_register_map[FIRST_PSEUDO_REGISTER+1];\n+extern int const dbx64_register_map[FIRST_PSEUDO_REGISTER+1];\n+extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER+1];\n \n /* Before the prologue, RA is at 0(%esp).  */\n #define INCOMING_RETURN_ADDR_RTX \\"}]}