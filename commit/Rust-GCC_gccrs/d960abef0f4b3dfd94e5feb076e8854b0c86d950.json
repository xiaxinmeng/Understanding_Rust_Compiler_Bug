{"sha": "d960abef0f4b3dfd94e5feb076e8854b0c86d950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2MGFiZWYwZjRiM2RmZDk0ZTVmZWIwNzZlODg1NGIwYzg2ZDk1MA==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1993-01-27T02:28:16Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1993-01-27T02:28:16Z"}, "message": "fix typos\n\nFrom-SVN: r3361", "tree": {"sha": "2b606bb3bd5f1621074cbf24ddb7448323f47d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b606bb3bd5f1621074cbf24ddb7448323f47d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d960abef0f4b3dfd94e5feb076e8854b0c86d950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d960abef0f4b3dfd94e5feb076e8854b0c86d950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d960abef0f4b3dfd94e5feb076e8854b0c86d950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d960abef0f4b3dfd94e5feb076e8854b0c86d950/comments", "author": null, "committer": null, "parents": [{"sha": "721f13b342e1fd2f354668535197b659221342e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721f13b342e1fd2f354668535197b659221342e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721f13b342e1fd2f354668535197b659221342e3"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "8353c2c12ffb0e7ff5c75f4485b12c2e01182e90", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d960abef0f4b3dfd94e5feb076e8854b0c86d950/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d960abef0f4b3dfd94e5feb076e8854b0c86d950/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d960abef0f4b3dfd94e5feb076e8854b0c86d950", "patch": "@@ -958,19 +958,19 @@ alloca.o:\talloca.c\n # versions of make which don't like empty commands (nothing after the\n # trailing `;'), we call true for each.\n \n-insn-config.h: stamp-config ; true\n+insn-config.h: stamp-config ; @true\n stamp-config : md genconfig $(srcdir)/move-if-change\n \t./genconfig md > tmp-config.h\n \t$(srcdir)/move-if-change tmp-config.h insn-config.h\n \ttouch stamp-config\n \n-insn-flags.h: stamp-flags ; true\n+insn-flags.h: stamp-flags ; @true\n stamp-flags : md genflags $(srcdir)/move-if-change\n \t./genflags md > tmp-flags.h\n \t$(srcdir)/move-if-change tmp-flags.h insn-flags.h\n \ttouch stamp-flags\n \n-insn-codes.h: stamp-codes ; true\n+insn-codes.h: stamp-codes ; @true\n stamp-codes : md gencodes $(srcdir)/move-if-change\n \t./gencodes md > tmp-codes.h\n \t$(srcdir)/move-if-change tmp-codes.h insn-codes.h\n@@ -980,7 +980,7 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) expr.h real.h output.h \\\n   insn-config.h insn-flags.h insn-codes.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n \n-insn-emit.c: stamp-emit ; true\n+insn-emit.c: stamp-emit ; @true\n stamp-emit : md genemit $(srcdir)/move-if-change\n \t./genemit md > tmp-emit.c\n \t$(srcdir)/move-if-change tmp-emit.c insn-emit.c\n@@ -990,7 +990,7 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h recog.h \\\n   real.h output.h flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c\n \n-insn-recog.c: stamp-recog ; true\n+insn-recog.c: stamp-recog ; @true\n stamp-recog : md genrecog $(srcdir)/move-if-change\n \t./genrecog md > tmp-recog.c\n \t$(srcdir)/move-if-change tmp-recog.c insn-recog.c\n@@ -999,7 +999,7 @@ stamp-recog : md genrecog $(srcdir)/move-if-change\n insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c\n \n-insn-extract.c: stamp-extract ; true\n+insn-extract.c: stamp-extract ; @true\n stamp-extract : md genextract $(srcdir)/move-if-change\n \t./genextract md > tmp-extract.c\n \t$(srcdir)/move-if-change tmp-extract.c insn-extract.c\n@@ -1008,7 +1008,7 @@ stamp-extract : md genextract $(srcdir)/move-if-change\n insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) regs.h output.h real.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c\n \n-insn-peep.c: stamp-peep ; true\n+insn-peep.c: stamp-peep ; @true\n stamp-peep : md genpeep $(srcdir)/move-if-change\n \t./genpeep md > tmp-peep.c\n \t$(srcdir)/move-if-change tmp-peep.c insn-peep.c\n@@ -1018,13 +1018,13 @@ insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) regs.h real.h output.h \\\n      insn-attr.h insn-config.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n \n-insn-attr.h: stamp-attr ; true\n+insn-attr.h: stamp-attr ; @true\n stamp-attr : md genattr $(srcdir)/move-if-change\n \t./genattr md > tmp-attr.h\n \t$(srcdir)/move-if-change tmp-attr.h insn-attr.h\n \ttouch stamp-attr\n \n-insn-attrtab.c: stamp-attrtab ; true\n+insn-attrtab.c: stamp-attrtab ; @true\n stamp-attrtab : md genattrtab $(srcdir)/move-if-change\n \tif cmp -s $(PREMADE_ATTRTAB_MD) md;\t\\\n \tthen\t\t\t\t\t\\\n@@ -1041,7 +1041,7 @@ insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) regs.h real.h conditions.h \\\n     insn-codes.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c\n \n-insn-output.c: stamp-output ; true\n+insn-output.c: stamp-output ; @true\n stamp-output : md genoutput $(srcdir)/move-if-change\n \t./genoutput md > tmp-output.c\n \t$(srcdir)/move-if-change tmp-output.c insn-output.c\n@@ -1198,12 +1198,12 @@ proto: config.status protoize unprotoize SYSCALLS.c.X\n protoize: protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n \t  protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n-protoize.o: stamp-proto ; true\n+protoize.o: stamp-proto ; @true\n \n unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n \t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n-unprotoize.o:\tstamp-proto ; true\n+unprotoize.o:\tstamp-proto ; @true\n \n stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n@@ -1434,7 +1434,7 @@ realclean: distclean\n # The semicolon is to prevent the install.sh -> install default rule\n # from doing anything.  Having it run true helps avoid problems and\n # noise from versions of make which don't like to have null commands.\n-install: $(INSTALL_TARGET) ; true\n+install: $(INSTALL_TARGET) ; @true\n \n # Copy the compiler files into directories where they will be run.\n install-normal: install-common install-libgcc $(INSTALL_HEADERS) install-man"}]}