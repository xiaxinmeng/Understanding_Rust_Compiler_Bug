{"sha": "de66168d60454ab3cb39479bfe86a27254b679ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2NjE2OGQ2MDQ1NGFiM2NiMzk0NzliZmU4NmEyNzI1NGI2NzllYQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-10-28T23:24:41Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-10-28T23:24:41Z"}, "message": "re PR tree-optimization/16728 (std::set tests for allocator/insert core in make check-performance)\n\n\n\tPR tree-optimization/16728\n\t* tree-flow.h (get_ptr_info): Declare.\n\t* tree-ssa-alias.c (get_ptr_info): Make extern.\n\t* tree-ssa-copy.c (merge_alias_info): Merge flow-sensitive\n\talias information.\n\nFrom-SVN: r89792", "tree": {"sha": "b25d116db892766e4a7456df5b0f900fccef4a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b25d116db892766e4a7456df5b0f900fccef4a11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de66168d60454ab3cb39479bfe86a27254b679ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de66168d60454ab3cb39479bfe86a27254b679ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de66168d60454ab3cb39479bfe86a27254b679ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de66168d60454ab3cb39479bfe86a27254b679ea/comments", "author": null, "committer": null, "parents": [{"sha": "55dbfb488ebbd45e512648083e5fd700cde7389e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dbfb488ebbd45e512648083e5fd700cde7389e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55dbfb488ebbd45e512648083e5fd700cde7389e"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "8cde54e11f156f3cce6d12e5be3c16304f72556f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de66168d60454ab3cb39479bfe86a27254b679ea", "patch": "@@ -1,3 +1,11 @@\n+2004-10-28  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR tree-optimization/16728\n+\t* tree-flow.h (get_ptr_info): Declare.\n+\t* tree-ssa-alias.c (get_ptr_info): Make extern.\n+\t* tree-ssa-copy.c (merge_alias_info): Merge flow-sensitive\n+\talias information.\n+\n 2004-10-28  Stan Shebs  <shebs@apple.com>\n \n \t* config/rs6000/darwin.h (SUBTARGET_EXTRA_SPECS): Handle -m64."}, {"sha": "82ebd6dd9c447d1374a57aa62216821614433c9f", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=de66168d60454ab3cb39479bfe86a27254b679ea", "patch": "@@ -556,6 +556,7 @@ extern void debug_points_to_info (void);\n extern void dump_points_to_info_for (FILE *, tree);\n extern void debug_points_to_info_for (tree);\n extern bool may_be_aliased (tree);\n+extern struct ptr_info_def *get_ptr_info (tree);\n \n /* Call-back function for walk_use_def_chains().  At each reaching\n    definition, a function with this prototype is called.  */"}, {"sha": "bedba4f109e4803e23d1f60ee966e0f7636bdd14", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=de66168d60454ab3cb39479bfe86a27254b679ea", "patch": "@@ -152,7 +152,6 @@ static void collect_points_to_info_for (struct alias_info *, tree);\n static bool ptr_is_dereferenced_by (tree, tree, bool *);\n static void maybe_create_global_var (struct alias_info *ai);\n static void group_aliases (struct alias_info *);\n-static struct ptr_info_def *get_ptr_info (tree t);\n static void set_pt_anything (tree ptr);\n static void set_pt_malloc (tree ptr);\n \n@@ -2262,7 +2261,7 @@ debug_alias_info (void)\n /* Return the alias information associated with pointer T.  It creates a\n    new instance if none existed.  */\n \n-static struct ptr_info_def *\n+struct ptr_info_def *\n get_ptr_info (tree t)\n {\n   struct ptr_info_def *pi;"}, {"sha": "e7f51c5c759a383cc496fea8633d0afbcbdfea6d", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de66168d60454ab3cb39479bfe86a27254b679ea/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=de66168d60454ab3cb39479bfe86a27254b679ea", "patch": "@@ -178,6 +178,8 @@ merge_alias_info (tree orig, tree new)\n   tree orig_sym = SSA_NAME_VAR (orig);\n   var_ann_t new_ann = var_ann (new_sym);\n   var_ann_t orig_ann = var_ann (orig_sym);\n+  struct ptr_info_def *new_ptr_info;\n+  struct ptr_info_def *orig_ptr_info;\n \n   gcc_assert (POINTER_TYPE_P (TREE_TYPE (orig)));\n   gcc_assert (POINTER_TYPE_P (TREE_TYPE (new)));\n@@ -192,14 +194,28 @@ merge_alias_info (tree orig, tree new)\n \t      == get_alias_set (TREE_TYPE (TREE_TYPE (orig_sym))));\n #endif\n \n-  /* Merge type-based alias info.  */\n+  /* Synchronize the type tags.  If both pointers had a tag and they\n+     are different, then something has gone wrong.  */\n   if (new_ann->type_mem_tag == NULL_TREE)\n     new_ann->type_mem_tag = orig_ann->type_mem_tag;\n   else if (orig_ann->type_mem_tag == NULL_TREE)\n     orig_ann->type_mem_tag = new_ann->type_mem_tag;\n   else\n     gcc_assert (new_ann->type_mem_tag == orig_ann->type_mem_tag);\n-}\n+\n+  /* Synchronize flow sensitive alias information.  If both pointers\n+     had flow information and they are inconsistent, then something\n+     has gone wrong.  */\n+  new_ptr_info = get_ptr_info (new);\n+  orig_ptr_info = get_ptr_info (orig);\n+\n+  if (new_ptr_info->name_mem_tag == NULL_TREE)\n+    memcpy (new_ptr_info, orig_ptr_info, sizeof (*new_ptr_info));\n+  else if (orig_ptr_info->name_mem_tag == NULL_TREE)\n+    memcpy (orig_ptr_info, new_ptr_info, sizeof (*orig_ptr_info));\n+  else if (orig_ptr_info->name_mem_tag != new_ptr_info->name_mem_tag)\n+    abort ();\n+}   \n \n \n /* Common code for propagate_value and replace_exp."}]}