{"sha": "88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg3MTlmMmQzNTZjM2U5MzJmMjNmYWZkYWQzNGQ5YTM5YzNiOGYyZg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2014-03-14T21:28:59Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2014-03-14T21:28:59Z"}, "message": "re PR fortran/60392 (Problem with TRANSPOSE and CONTIGUOUS dummy arguments)\n\nfortran/\n        PR fortran/60392\n        * trans-array.c (gfc_conv_array_parameter): Don't reuse the descriptor\n        if it has transposed dimensions.\n\ntestsuite/\n        PR fortran/60392\n        * gfortran.dg/transpose_4.f90: New test.\n\nFrom-SVN: r208581", "tree": {"sha": "5b9f0bb1d7b904442e83b8a446310c15d19ae89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b9f0bb1d7b904442e83b8a446310c15d19ae89e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/comments", "author": null, "committer": null, "parents": [{"sha": "7e343703fe22b55b9e6a446a0c0fdef989207c9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e343703fe22b55b9e6a446a0c0fdef989207c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e343703fe22b55b9e6a446a0c0fdef989207c9d"}], "stats": {"total": 134, "additions": 133, "deletions": 1}, "files": [{"sha": "ba4bdf05d98dc03c294c09e4044a2bc876406b73", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "patch": "@@ -1,3 +1,9 @@\n+2014-03-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/60392\n+\t* trans-array.c (gfc_conv_array_parameter): Don't reuse the descriptor\n+\tif it has transposed dimensions.\n+\n 2014-03-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/60447"}, {"sha": "dee422cc13024680a977b6bc22715b913ca288e1", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "patch": "@@ -7227,7 +7227,50 @@ gfc_conv_array_parameter (gfc_se * se, gfc_expr * expr, bool g77,\n       else\n \t{\n \t  tmp = build_fold_indirect_ref_loc (input_location, desc);\n-\t  gfc_conv_descriptor_data_set (&se->pre, tmp, ptr);\n+\n+\t  gfc_ss * ss = gfc_walk_expr (expr);\n+\t  if (!transposed_dims (ss))\n+\t    gfc_conv_descriptor_data_set (&se->pre, tmp, ptr);\n+\t  else\n+\t    {\n+\t      tree old_field, new_field;\n+\n+\t      /* The original descriptor has transposed dims so we can't reuse\n+\t\t it directly; we have to create a new one.  */\n+\t      tree old_desc = tmp;\n+\t      tree new_desc = gfc_create_var (TREE_TYPE (old_desc), \"arg_desc\");\n+\n+\t      old_field = gfc_conv_descriptor_dtype (old_desc);\n+\t      new_field = gfc_conv_descriptor_dtype (new_desc);\n+\t      gfc_add_modify (&se->pre, new_field, old_field);\n+\n+\t      old_field = gfc_conv_descriptor_offset (old_desc);\n+\t      new_field = gfc_conv_descriptor_offset (new_desc);\n+\t      gfc_add_modify (&se->pre, new_field, old_field);\n+\n+\t      for (int i = 0; i < expr->rank; i++)\n+\t\t{\n+\t\t  old_field = gfc_conv_descriptor_dimension (old_desc,\n+\t\t\tgfc_rank_cst[get_array_ref_dim_for_loop_dim (ss, i)]);\n+\t\t  new_field = gfc_conv_descriptor_dimension (new_desc,\n+\t\t\tgfc_rank_cst[i]);\n+\t\t  gfc_add_modify (&se->pre, new_field, old_field);\n+\t\t}\n+\n+\t      if (gfc_option.coarray == GFC_FCOARRAY_LIB\n+\t\t  && GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (old_desc))\n+\t\t  && GFC_TYPE_ARRAY_AKIND (TREE_TYPE (old_desc))\n+\t\t     == GFC_ARRAY_ALLOCATABLE)\n+\t\t{\n+\t\t  old_field = gfc_conv_descriptor_token (old_desc);\n+\t\t  new_field = gfc_conv_descriptor_token (new_desc);\n+\t\t  gfc_add_modify (&se->pre, new_field, old_field);\n+\t\t}\n+\n+\t      gfc_conv_descriptor_data_set (&se->pre, new_desc, ptr);\n+\t      se->expr = gfc_build_addr_expr (NULL_TREE, new_desc);\n+\t    }\n+\t  gfc_free_ss (ss);\n \t}\n \n       if (gfc_option.rtcheck & GFC_RTCHECK_ARRAY_TEMPS)"}, {"sha": "19557d8ad7def734bed5b21c50c16f2484a2693e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "patch": "@@ -1,3 +1,8 @@\n+2014-03-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/60392\n+\t* gfortran.dg/transpose_4.f90: New test.\n+\n 2014-03-14  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/60508"}, {"sha": "c4db1ffeba8ad0db26d215838df72557cb478031", "filename": "gcc/testsuite/gfortran.dg/transpose_4.f90", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftranspose_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88719f2d356c3e932f23fafdad34d9a39c3b8f2f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftranspose_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftranspose_4.f90?ref=88719f2d356c3e932f23fafdad34d9a39c3b8f2f", "patch": "@@ -0,0 +1,78 @@\n+! { dg-do run }\n+!\n+! PR fortran/60392\n+! In the transposed case call to my_mul_cont, the compiler used to (wrongly)\n+! reuse a transposed descriptor for an array that was not transposed as a result\n+! of packing.\n+!\n+! Original test case from Alexander Vogt <a.vogt@fulguritus.com>.\n+\n+program test\n+  implicit none\n+\n+  integer, dimension(2,2) :: A, R, RT\n+  integer, dimension(2,2) :: B1, B2\n+\n+  ! \n+  ! A = [  2   17 ]\n+  !     [ 82  257 ]\n+  !\n+  ! matmul(a,a) = [  1398   4403 ]\n+  !               [ 21238  67443 ]\n+  !\n+  ! matmul(transpose(a), a) = [  6728  21108 ]\n+  !                           [ 21108  66338 ]\n+  A(1,1) =   2\n+  A(1,2) =  17\n+  A(2,1) =  82\n+  A(2,2) = 257\n+\n+  R(1,1) =  1398\n+  R(1,2) =  4403\n+  R(2,1) = 21238\n+  R(2,2) = 67443\n+  \n+  RT(1,1) =  6728\n+  RT(1,2) = 21108\n+  RT(2,1) = 21108\n+  RT(2,2) = 66338\n+\n+  ! Normal argument\n+  B1 = 0\n+  B2 = 0\n+  B1 = my_mul(A,A)\n+  B2 = my_mul_cont(A,A)\n+! print *,'Normal:    ',maxval(abs(B1-B2))\n+! print *,B1\n+! print *,B2\n+  if (any(B1 /= R)) call abort\n+  if (any(B2 /= R)) call abort\n+\n+  ! Transposed argument\n+  B1 = 0\n+  B2 = 0\n+  B1 = my_mul(transpose(A),A)\n+  B2 = my_mul_cont(transpose(A),A)\n+! print *,'Transposed:',maxval(abs(B1-B2))\n+! print *,B1\n+! print *,B2\n+  if (any(B1 /= RT)) call abort\n+  if (any(B2 /= RT)) call abort\n+\n+contains\n+\n+  function my_mul(A,C) result (B)\n+    use, intrinsic :: ISO_Fortran_env\n+    integer, intent(in) :: A(2,2), C(2,2)\n+    integer :: B(2,2)\n+    B = matmul(A, C)\n+  end function\n+\n+  function my_mul_cont(A,C) result (B)\n+    use, intrinsic :: ISO_Fortran_env\n+    integer, intent(in), contiguous :: A(:,:), C(:,:)\n+    integer :: B(2,2)\n+    B = matmul(A, C)\n+  end function\n+\n+end program"}]}