{"sha": "2364b584552208ce715fa4fd44c510b7e5210d1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2NGI1ODQ1NTIyMDhjZTcxNWZhNGZkNDRjNTEwYjdlNTIxMGQxZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-05-28T20:17:51Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-05-29T05:45:11Z"}, "message": "Fix i686 bootstrap by temporarily disabling exporting of global ranges.\n\nThe patch converting evrp to the get_range_query(fun) API broke i686\nbootstrap (commit 57bf37515).  The problem seems to be in a subsequent\npass that has more up-to-date global ranges.  I won't be able to look at\nthis until next week, so I am reverting the problematic bit of the\npatch-- the exporting of global ranges once evrp finishes.  The use of\nthe new API remains.\n\nReverting the behavior shouldn't be a problem as we never used to export\nglobal ranges from ranger.  This was new behavior in the patchset.\n\nTested on x86-64 Linux with a bootstrap and regtest, and on x86-32 with\nonly a bootstrap and the configure flags from the PR:\n\n--enable-clocale=gnu --with-system-zlib --with-demangler-in-ld --with-fpmath=sse --enable-languages=c,c++ --enable-cet i686-linux --enable-bootstrap --with-fpmath=sse --disable-libcc1 --disable-libcilkrts --disable-libsanitizer\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/100787\n\t* gimple-ssa-evrp.c: Disable exporting of global ranges.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/Wstringop-overflow-55.c:\n\t* gcc.dg/pr80776-1.c:", "tree": {"sha": "e7b3f3c5928cf4fe12887bb9ba7e3ff5ea6b97bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7b3f3c5928cf4fe12887bb9ba7e3ff5ea6b97bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2364b584552208ce715fa4fd44c510b7e5210d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2364b584552208ce715fa4fd44c510b7e5210d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2364b584552208ce715fa4fd44c510b7e5210d1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2364b584552208ce715fa4fd44c510b7e5210d1e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48166757dcf46d92cf1795dd7333dda7030179c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48166757dcf46d92cf1795dd7333dda7030179c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48166757dcf46d92cf1795dd7333dda7030179c8"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "f1eea206afd88a82d32040ec801cd9ec5a170a41", "filename": "gcc/gimple-ssa-evrp.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Fgimple-ssa-evrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Fgimple-ssa-evrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-evrp.c?ref=2364b584552208ce715fa4fd44c510b7e5210d1e", "patch": "@@ -127,7 +127,8 @@ class rvrp_folder : public substitute_and_fold_engine\n     if (dump_file && (dump_flags & TDF_DETAILS))\n       m_ranger->dump (dump_file);\n \n-    m_ranger->export_global_ranges ();\n+    // FIXME: Do not export ranges until PR100787 is fixed.\n+    //m_ranger->export_global_ranges ();\n     disable_ranger (cfun);\n   }\n \n@@ -193,7 +194,8 @@ class hybrid_folder : public evrp_folder\n     if (dump_file && (dump_flags & TDF_DETAILS))\n       m_ranger->dump (dump_file);\n \n-    m_ranger->export_global_ranges ();\n+    // FIXME: Do not export ranges until PR100787 is fixed.\n+    //m_ranger->export_global_ranges ();\n     disable_ranger (cfun);\n   }\n "}, {"sha": "5f83af7c57fe9c9ee05e9a33ff769250382132d4", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-55.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-55.c?ref=2364b584552208ce715fa4fd44c510b7e5210d1e", "patch": "@@ -66,15 +66,15 @@ void warn_ptrdiff_anti_range_add (ptrdiff_t i)\n {\n   i |= 1;\n \n-  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" }\n+  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" { xfail *-*-* } }\n   char *p0 = ca5;           // offset\n   char *p1 = p0 + i;        //  1-5\n   char *p2 = p1 + i;        //  2-5\n   char *p3 = p2 + i;        //  3-5\n   char *p4 = p3 + i;        //  4-5\n   char *p5 = p4 + i;        //   5\n \n-  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size\" \"pr?????\" }\n+  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size 0\" \"pr?????\" { xfail *-*-* } }\n \n   sink (p0, p1, p2, p3, p4, p5);\n }\n@@ -83,15 +83,15 @@ void warn_int_anti_range (int i)\n {\n   i |= 1;\n \n-  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" }\n+  char ca5[5];              // { dg-message \"at offset \\\\\\[1, 5]\" \"pr?????\" { xfail *-*-* } }\n   char *p0 = ca5;           // offset\n   char *p1 = p0 + i;        //  1-5\n   char *p2 = p1 + i;        //  2-5\n   char *p3 = p2 + i;        //  3-5\n   char *p4 = p3 + i;        //  4-5\n   char *p5 = p4 + i;        //   5\n \n-  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size\" \"pr?????\" }\n+  memset (p5, 0, 5);        // { dg-warning \"writing 5 bytes into a region of size 0\" \"pr?????\" { xfail *-*-* } }\n \n   sink (p0, p1, p2, p3, p4, p5);\n }"}, {"sha": "af41c0c2ffabf74396bd6196d11657e87e078105", "filename": "gcc/testsuite/gcc.dg/pr80776-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2364b584552208ce715fa4fd44c510b7e5210d1e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80776-1.c?ref=2364b584552208ce715fa4fd44c510b7e5210d1e", "patch": "@@ -17,5 +17,7 @@ Foo (void)\n     __builtin_unreachable ();\n   if (! (0 <= i && i <= 999999))\n     __builtin_unreachable ();\n-  sprintf (number, \"%d\", i); /* { dg-bogus \"writing\" \"\" } */\n+  /* The correctness bits for [E]VRP cannot handle chained conditionals\n+     when deciding to ignore a unreachable branch for setting SSA range info. */\n+  sprintf (number, \"%d\", i); /* { dg-bogus \"writing\" \"\" { xfail *-*-* } } */\n }"}]}