{"sha": "48fb792a91a6b0850d723dc87bcc18eeab7ac3f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmYjc5MmE5MWE2YjA4NTBkNzIzZGM4N2JjYzE4ZWVhYjdhYzNmNQ==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1993-01-15T00:19:25Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1993-01-15T00:19:25Z"}, "message": "gcc.c (process_command): Only accept input files which exist and can be read...\n\n        * gcc.c (process_command): Only accept input files which exist and\n        can be read; prevent link phase if an input file was rejected.\n        (error_count): Make into a static global variable.\n\nFrom-SVN: r3249", "tree": {"sha": "a829405d785547f5ed120c3fb1ab765e260dd857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a829405d785547f5ed120c3fb1ab765e260dd857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5/comments", "author": null, "committer": null, "parents": [{"sha": "3dac0de51f62b67c842e8dc1092043ee63c49c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dac0de51f62b67c842e8dc1092043ee63c49c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dac0de51f62b67c842e8dc1092043ee63c49c7b"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "30a0d32a9d7d4ec24994363f83ee1844700d2421", "filename": "gcc/gcc.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb792a91a6b0850d723dc87bcc18eeab7ac3f5/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=48fb792a91a6b0850d723dc87bcc18eeab7ac3f5", "patch": "@@ -144,6 +144,10 @@ static int cross_compile = 1;\n static int cross_compile = 0;\n #endif\n \n+/* The number of errors that have occurred; the link phase will not be\n+   run if this is non-zero.  */\n+static int error_count = 0;\n+\n /* This is the obstack which we use to allocate many strings.  */\n \n static struct obstack obstack;\n@@ -2279,8 +2283,16 @@ process_command (argc, argv)\n \t}\n       else\n \t{\n-\t  infiles[n_infiles].language = spec_lang;\n-\t  infiles[n_infiles++].name = argv[i];\n+\t  if (access (argv[i], R_OK) < 0)\n+\t    {\n+\t      perror_with_name (argv[i]);\n+\t      error_count++;\n+\t    }\n+\t  else\n+\t    {\n+\t      infiles[n_infiles].language = spec_lang;\n+\t      infiles[n_infiles++].name = argv[i];\n+\t    }\n \t}\n     }\n \n@@ -3354,7 +3366,6 @@ main (argc, argv)\n   register int i;\n   int j;\n   int value;\n-  int error_count = 0;\n   int linker_was_run = 0;\n   char *explicit_link_files;\n   char *specs_file;"}]}