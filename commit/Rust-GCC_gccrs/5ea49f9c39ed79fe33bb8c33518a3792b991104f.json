{"sha": "5ea49f9c39ed79fe33bb8c33518a3792b991104f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhNDlmOWMzOWVkNzlmZTMzYmI4YzMzNTE4YTM3OTJiOTkxMTA0Zg==", "commit": {"author": {"name": "Jim Blandy", "email": "jimb@codesourcery.com", "date": "2006-04-12T06:24:40Z"}, "committer": {"name": "Jim Blandy", "email": "jimb@gcc.gnu.org", "date": "2006-04-12T06:24:40Z"}, "message": "pex-common.c (temp_file): New function, containing guts of pex-style temporary file name generation.\n\n2006-04-10  Jim Blandy  <jimb@codesourcery.com>\n\n\t* pex-common.c (temp_file): New function, containing guts of\n\tpex-style temporary file name generation.\n\t(pex_run): Use it.\n\nFrom-SVN: r112882", "tree": {"sha": "153d88b95194f16886d9bb4f3b71a493c6657de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/153d88b95194f16886d9bb4f3b71a493c6657de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ea49f9c39ed79fe33bb8c33518a3792b991104f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea49f9c39ed79fe33bb8c33518a3792b991104f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea49f9c39ed79fe33bb8c33518a3792b991104f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea49f9c39ed79fe33bb8c33518a3792b991104f/comments", "author": null, "committer": null, "parents": [{"sha": "79773478a6f5b426dd51f8ee13ac6fb54cb45007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79773478a6f5b426dd51f8ee13ac6fb54cb45007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79773478a6f5b426dd51f8ee13ac6fb54cb45007"}], "stats": {"total": 109, "additions": 66, "deletions": 43}, "files": [{"sha": "c588c1afdc2109ca1232f7872c5ed0b087e078c4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea49f9c39ed79fe33bb8c33518a3792b991104f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea49f9c39ed79fe33bb8c33518a3792b991104f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5ea49f9c39ed79fe33bb8c33518a3792b991104f", "patch": "@@ -1,3 +1,9 @@\n+2006-04-10  Jim Blandy  <jimb@codesourcery.com>\n+\n+\t* pex-common.c (temp_file): New function, containing guts of\n+\tpex-style temporary file name generation.\n+\t(pex_run): Use it.\n+\n 2006-04-06  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.in: Add install-html, install-html-am, and"}, {"sha": "eb14ce5b1ff77b506592656edeaa6e91b7b4c070", "filename": "libiberty/pex-common.c", "status": "modified", "additions": 60, "deletions": 43, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea49f9c39ed79fe33bb8c33518a3792b991104f/libiberty%2Fpex-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea49f9c39ed79fe33bb8c33518a3792b991104f/libiberty%2Fpex-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-common.c?ref=5ea49f9c39ed79fe33bb8c33518a3792b991104f", "patch": "@@ -91,6 +91,56 @@ pex_add_remove (struct pex_obj *obj, const char *name, int allocated)\n   obj->remove[obj->remove_count - 1] = add;\n }\n \n+/* Generate a temporary file name based on OBJ, FLAGS, and NAME.\n+   Return NULL if we were unable to reserve a temporary filename.\n+\n+   If non-NULL, the result is either allocated with malloc, or the\n+   same pointer as NAME.  */\n+static char *\n+temp_file (struct pex_obj *obj, int flags, char *name)\n+{\n+  if (name == NULL)\n+    {\n+      if (obj->tempbase == NULL)\n+        {\n+          name = make_temp_file (NULL);\n+        }\n+      else\n+        {\n+          int len = strlen (obj->tempbase);\n+          int out;\n+\n+          if (len >= 6\n+              && strcmp (obj->tempbase + len - 6, \"XXXXXX\") == 0)\n+            name = xstrdup (obj->tempbase);\n+          else\n+            name = concat (obj->tempbase, \"XXXXXX\", NULL);\n+\n+          out = mkstemps (name, 0);\n+          if (out < 0)\n+            {\n+              free (name);\n+              return NULL;\n+            }\n+\n+          /* This isn't obj->funcs->close because we got the\n+             descriptor from mkstemps, not from a function in\n+             obj->funcs.  Calling close here is just like what\n+             make_temp_file does.  */\n+          close (out);\n+        }\n+    }\n+  else if ((flags & PEX_SUFFIX) != 0)\n+    {\n+      if (obj->tempbase == NULL)\n+        name = make_temp_file (name);\n+      else\n+        name = concat (obj->tempbase, name, NULL);\n+    }\n+\n+  return name;\n+}\n+\n /* Run a program.  */\n \n const char *\n@@ -161,49 +211,16 @@ pex_run (struct pex_obj *obj, int flags, const char *executable,\n     }\n   else if ((obj->flags & PEX_USE_PIPES) == 0)\n     {\n-      if (outname == NULL)\n-\t{\n-\t  if (obj->tempbase == NULL)\n-\t    {\n-\t      outname = make_temp_file (NULL);\n-\t      outname_allocated = 1;\n-\t    }\n-\t  else\n-\t    {\n-\t      int len = strlen (obj->tempbase);\n-\n-\t      if (len >= 6\n-\t\t  && strcmp (obj->tempbase + len - 6, \"XXXXXX\") == 0)\n-\t\toutname = xstrdup (obj->tempbase);\n-\t      else\n-\t\toutname = concat (obj->tempbase, \"XXXXXX\", NULL);\n-\n-\t      outname_allocated = 1;\n-\n-\t      out = mkstemps (outname, 0);\n-\t      if (out < 0)\n-\t\t{\n-\t\t  *err = 0;\n-\t\t  errmsg = \"could not create temporary output file\";\n-\t\t  goto error_exit;\n-\t\t}\n-\n-\t      /* This isn't obj->funcs->close because we got the\n-\t\t descriptor from mkstemps, not from a function in\n-\t\t obj->funcs.  Calling close here is just like what\n-\t\t make_temp_file does.  */\n-\t      close (out);\n-\t      out = -1;\n-\t    }\n-\t}\n-      else if ((flags & PEX_SUFFIX) != 0)\n-\t{\n-\t  if (obj->tempbase == NULL)\n-\t    outname = make_temp_file (outname);\n-\t  else\n-\t    outname = concat (obj->tempbase, outname, NULL);\n-\t  outname_allocated = 1;\n-\t}\n+      outname = temp_file (obj, flags, outname);\n+      if (! outname)\n+        {\n+          *err = 0;\n+          errmsg = \"could not create temporary file\";\n+          goto error_exit;\n+        }\n+\n+      if (outname != orig_outname)\n+        outname_allocated = 1;\n \n       if ((obj->flags & PEX_SAVE_TEMPS) == 0)\n \t{"}]}