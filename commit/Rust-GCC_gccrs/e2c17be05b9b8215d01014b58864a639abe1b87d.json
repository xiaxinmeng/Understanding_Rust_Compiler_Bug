{"sha": "e2c17be05b9b8215d01014b58864a639abe1b87d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJjMTdiZTA1YjliODIxNWQwMTAxNGI1ODg2NGE2MzlhYmUxYjg3ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-01T00:03:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-01T00:03:58Z"}, "message": "re PR c++/49569 (-std=gnu++0x causes segmentation fault)\n\n\tPR c++/49569\n\t* method.c (implicitly_declare_fn): Set DECL_PARM_LEVEL and\n\tDECL_PARM_INDEX on rhs parm.\n\nFrom-SVN: r175738", "tree": {"sha": "f062fcd42d3963620dec8b718c77ca45e171e33e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f062fcd42d3963620dec8b718c77ca45e171e33e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2c17be05b9b8215d01014b58864a639abe1b87d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c17be05b9b8215d01014b58864a639abe1b87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2c17be05b9b8215d01014b58864a639abe1b87d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c17be05b9b8215d01014b58864a639abe1b87d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98ff3996628e649bd2ae54f0d68e47395ee51db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ff3996628e649bd2ae54f0d68e47395ee51db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ff3996628e649bd2ae54f0d68e47395ee51db9"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "e3f98455c37c56977dcd06b7e5ff097d1bd181c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e2c17be05b9b8215d01014b58864a639abe1b87d", "patch": "@@ -1,5 +1,9 @@\n 2011-06-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49569\n+\t* method.c (implicitly_declare_fn): Set DECL_PARM_LEVEL and\n+\tDECL_PARM_INDEX on rhs parm.\n+\n \t* pt.c (iterative_hash_template_arg): Use cp_tree_operand_length.\n \n \tPR c++/49355"}, {"sha": "9b9eb9a9df9c7a3f8c076a3b5026fdfa4227d1b1", "filename": "gcc/cp/method.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=e2c17be05b9b8215d01014b58864a639abe1b87d", "patch": "@@ -1528,8 +1528,11 @@ implicitly_declare_fn (special_function_kind kind, tree type, bool const_p)\n       /* Note that this parameter is *not* marked DECL_ARTIFICIAL; we\n \t want its type to be included in the mangled function\n \t name.  */\n-      DECL_ARGUMENTS (fn) = cp_build_parm_decl (NULL_TREE, rhs_parm_type);\n-      TREE_READONLY (DECL_ARGUMENTS (fn)) = 1;\n+      tree decl = cp_build_parm_decl (NULL_TREE, rhs_parm_type);\n+      TREE_READONLY (decl) = 1;\n+      retrofit_lang_decl (decl);\n+      DECL_PARM_INDEX (decl) = DECL_PARM_LEVEL (decl) = 1;\n+      DECL_ARGUMENTS (fn) = decl;\n     }\n   /* Add the \"this\" parameter.  */\n   this_parm = build_this_parm (fn_type, TYPE_UNQUALIFIED);"}, {"sha": "382e0981a707a83abba893a79f76035a8f52f97a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2c17be05b9b8215d01014b58864a639abe1b87d", "patch": "@@ -1,5 +1,8 @@\n 2011-06-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49569\n+\t* g++.dg/cpp0x/regress/ctor1.C: New.\n+\n \tPR c++/49355\n \t* g++.dg/cpp0x/initlist54.C: New.\n "}, {"sha": "c35d6011f3bfcd393e0740bd0b591f8e3f6ecff7", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/ctor1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2c17be05b9b8215d01014b58864a639abe1b87d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fctor1.C?ref=e2c17be05b9b8215d01014b58864a639abe1b87d", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/49569\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  virtual void f() = 0;\n+};\n+\n+struct B: A\n+{\n+  int i;\n+  virtual void f() { }\n+};\n+\n+struct C\n+{\n+  B b;\n+  C(): b() { }\n+  C(const B& b): b(b) { }\n+};\n+"}]}