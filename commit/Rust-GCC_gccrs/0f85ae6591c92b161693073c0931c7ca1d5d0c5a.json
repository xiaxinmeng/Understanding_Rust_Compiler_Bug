{"sha": "0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "node_id": "C_kwDOANBUbNoAKDBmODVhZTY1OTFjOTJiMTYxNjkzMDczYzA5MzFjN2NhMWQ1ZDBjNWE", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2023-01-18T19:51:59Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2023-01-18T21:49:57Z"}, "message": "c: ICE with nullptr as case expression [PR108424]\n\nIn this ICE-on-invalid, we crash on\n\n  gcc_assert (INTEGRAL_TYPE_P (type));\n\nin perform_integral_promotions, because a nullptr is an INTEGER_CST,\nbut not INTEGRAL_TYPE_P, and check_case_value is only checking the\nformer.  In the test I'm testing other \"shall be an integral constant\nexpression\" contexts as well.\n\n\tPR c/108424\n\ngcc/c-family/ChangeLog:\n\n\t* c-common.cc (check_case_value): Check INTEGRAL_TYPE_P.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/c2x-nullptr-6.c: New test.", "tree": {"sha": "ccbdeeb12858685e825db52f7c7f9e27d418d0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccbdeeb12858685e825db52f7c7f9e27d418d0df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85ae6591c92b161693073c0931c7ca1d5d0c5a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33237e93d59ee7bb215cd5b726880bcbd679bb36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33237e93d59ee7bb215cd5b726880bcbd679bb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33237e93d59ee7bb215cd5b726880bcbd679bb36"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "ae92cd5adaf5e86d6b4e52b73fada7bc7561db6c", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85ae6591c92b161693073c0931c7ca1d5d0c5a/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85ae6591c92b161693073c0931c7ca1d5d0c5a/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "patch": "@@ -2238,7 +2238,8 @@ check_case_value (location_t loc, tree value)\n   if (value == NULL_TREE)\n     return value;\n \n-  if (TREE_CODE (value) == INTEGER_CST)\n+  if (INTEGRAL_TYPE_P (TREE_TYPE (value))\n+      && TREE_CODE (value) == INTEGER_CST)\n     /* Promote char or short to int.  */\n     value = perform_integral_promotions (value);\n   else if (value != error_mark_node)"}, {"sha": "24e14fa6921057b39fe3d7f985289a316f5d84e8", "filename": "gcc/testsuite/gcc.dg/c2x-nullptr-6.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85ae6591c92b161693073c0931c7ca1d5d0c5a/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-nullptr-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85ae6591c92b161693073c0931c7ca1d5d0c5a/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-nullptr-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-nullptr-6.c?ref=0f85ae6591c92b161693073c0931c7ca1d5d0c5a", "patch": "@@ -0,0 +1,33 @@\n+/* PR c/108424 */\n+/* { dg-options \"-std=c2x\" } */\n+\n+struct S {\n+  int i;\n+  int : nullptr; /* { dg-error \"not an integer constant\" } */\n+};\n+\n+enum E { X = nullptr }; /* { dg-error \"not an integer constant\" } */\n+\n+alignas(nullptr) int g; /* { dg-error \"not an integer constant\" } */\n+\n+int arr[10] = { [nullptr] = 1 }; /* { dg-error \"not of integer type\" } */\n+\n+_Static_assert (nullptr, \"nullptr\"); /* { dg-error \"not an integer\" } */\n+\n+void f (int n)\n+{\n+  switch (n) {\n+  case nullptr: /* { dg-error \"an integer constant\" } */\n+  default:\n+  }\n+\n+  switch (n) {\n+  case 1 ... nullptr: /* { dg-error \"an integer constant\" } */\n+  default:\n+  }\n+\n+  switch (n) {\n+  case nullptr ... 2: /* { dg-error \"an integer constant\" } */\n+  default:\n+  }\n+}"}]}