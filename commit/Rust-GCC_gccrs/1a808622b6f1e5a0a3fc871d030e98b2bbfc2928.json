{"sha": "1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4MDg2MjJiNmYxZTVhMGEzZmM4NzFkMDMwZTk4YjJiYmZjMjkyOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-10-26T07:21:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-10-26T07:21:56Z"}, "message": "2001-10-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/4503\n\t* config/locale/codecvt_specializations_ieee_1003.1-200x.h\n\t(__enc_traits::~__enc_traits): Fix.\n\t(__enc_traits::_M_init): Add error checking.\n\nFrom-SVN: r46532", "tree": {"sha": "2b93a1cf78aeb7ca12e959d919d1e05844e4518e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b93a1cf78aeb7ca12e959d919d1e05844e4518e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928/comments", "author": null, "committer": null, "parents": [{"sha": "f8c8c2ff39d06198f6f98bd2c436abe44f1bebcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c8c2ff39d06198f6f98bd2c436abe44f1bebcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c8c2ff39d06198f6f98bd2c436abe44f1bebcc"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "80c5c9d2ba6b973fe52dcd1c04981ee08607832b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "patch": "@@ -1,3 +1,10 @@\n+2001-10-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/4503\n+\t* config/locale/codecvt_specializations_ieee_1003.1-200x.h\n+\t(__enc_traits::~__enc_traits): Fix.\n+\t(__enc_traits::_M_init): Add error checking.\n+\t\n 2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/4542"}, {"sha": "3cf9fef9077723537042458f4f1713f2ad815f27", "filename": "libstdc++-v3/config/locale/codecvt_specializations_ieee_1003.1-200x.h", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fcodecvt_specializations_ieee_1003.1-200x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a808622b6f1e5a0a3fc871d030e98b2bbfc2928/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fcodecvt_specializations_ieee_1003.1-200x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fcodecvt_specializations_ieee_1003.1-200x.h?ref=1a808622b6f1e5a0a3fc871d030e98b2bbfc2928", "patch": "@@ -85,7 +85,7 @@\n     : _M_in_desc(0), _M_out_desc(0), _M_ext_bom(0), _M_int_bom(0)\n     {\n       // __intc_end = whatever we are using internally, which is\n-      // UCS4 (linux) \n+      // UCS4 (linux, solaris) \n       // UCS2 == UNICODE  (microsoft, java, aix, whatever...)\n       // XXX Currently don't know how to get this data from target system...\n       strcpy(_M_int_enc, \"UCS4\");\n@@ -121,27 +121,32 @@\n \n     ~__enc_traits()\n     {\n-      iconv_close(_M_in_desc);\n-      iconv_close(_M_out_desc);\n+      __desc_type __err = reinterpret_cast<iconv_t>(-1);\n+      if (_M_in_desc && _M_in_desc != __err) \n+\ticonv_close(_M_in_desc);\n+      if (_M_out_desc && _M_out_desc != __err) \n+\ticonv_close(_M_out_desc);\n     } \n \n-    // Initializes\n     void\n     _M_init()\n     {\n+      __desc_type __err = reinterpret_cast<iconv_t>(-1);\n       _M_in_desc = iconv_open(_M_int_enc, _M_ext_enc);\n+      if (_M_in_desc == __err)\n+\t__throw_runtime_error(\"creating iconv input descriptor failed.\");\n       _M_out_desc = iconv_open(_M_ext_enc, _M_int_enc);\n-      if (_M_out_desc == iconv_t(-1) || _M_in_desc == iconv_t(-1))\n-\t{\n-\t  // XXX Extended error checking.\n-\t}\n+      if (_M_out_desc == __err)\n+\t__throw_runtime_error(\"creating iconv output descriptor failed.\");\n     }\n \n     bool\n     _M_good()\n     { \n-      return _M_out_desc && _M_in_desc \n-\t     && _M_out_desc != iconv_t(-1) && _M_in_desc != iconv_t(-1);\n+      __desc_type __err = reinterpret_cast<iconv_t>(-1);\n+      bool __test = _M_in_desc && _M_in_desc != __err; \n+      __test &=  _M_out_desc && _M_out_desc != __err;\n+      return __test;\n     }\n \n     const __desc_type* "}]}