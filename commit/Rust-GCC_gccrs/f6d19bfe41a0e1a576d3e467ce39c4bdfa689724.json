{"sha": "f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkMTliZmU0MWEwZTFhNTc2ZDNlNDY3Y2UzOWM0YmRmYTY4OTcyNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-03-10T06:22:28Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-10T06:22:28Z"}, "message": "re PR c++/8534 (When compiling qt contradicting aliasing class created for bitfield constructor)\n\n\tPR c++/8534\n\t* decl.c (build_ptrmemfunc_type): Do not allow default arugments\n\tin pointer-to-member-function types.\n\n\tPR c++/8534\n\t* g++.dg/opt/ptrmem1.C: New test.\n\nFrom-SVN: r64066", "tree": {"sha": "d944c772c6186cfc18e76e8c74bed6470ec10afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d944c772c6186cfc18e76e8c74bed6470ec10afa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/comments", "author": null, "committer": null, "parents": [{"sha": "d9b4e85e243b9d8ba4f51aa23a287621b0519d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b4e85e243b9d8ba4f51aa23a287621b0519d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9b4e85e243b9d8ba4f51aa23a287621b0519d7d"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "257673fd205b1f58de401cf1df0cf86fd97fdf6b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "patch": "@@ -1,3 +1,9 @@\n+2003-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8534\n+\t* decl.c (build_ptrmemfunc_type): Do not allow default arugments\n+\tin pointer-to-member-function types.\n+\n 2003-03-10  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* expr.c (cplus_expand_constant): Use C90 prototype style."}, {"sha": "b3e617f88f45636e9d861033d49023850abc77d0", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "patch": "@@ -9296,11 +9296,49 @@ build_ptrmemfunc_type (tree type)\n {\n   tree field, fields;\n   tree t;\n+  tree method_type;\n+  tree arg_type;\n   tree unqualified_variant = NULL_TREE;\n \n   if (type == error_mark_node)\n     return type;\n \n+  /* If the METHOD_TYPE has any default parameters, make a copy that\n+     does not have the default parameters.  The pointer-to-member type\n+     never has default parameters.  */\n+  method_type = TREE_TYPE (type);\n+  for (arg_type = TYPE_ARG_TYPES (method_type);\n+       arg_type;\n+       arg_type = TREE_CHAIN (arg_type))\n+    if (TREE_PURPOSE (arg_type))\n+      {\n+\t/* At least one parameter has a default argument.  */\n+\ttree arg_types = NULL_TREE;\n+\ttree *arg_type_p = &arg_types;\n+\n+\t/* Copy the parameter types.  The \"this\" parameter will be\n+\t   added by build_cplus_method_type.  */\n+\tfor (arg_type = TREE_CHAIN (TYPE_ARG_TYPES (method_type));\n+\t     arg_type;\n+\t     arg_type = TREE_CHAIN (arg_type))\n+\t  {\n+\t    if (arg_type == void_list_node)\n+\t      *arg_type_p = void_list_node;\n+\t    else\n+\t      *arg_type_p = build_tree_list (NULL_TREE,\n+\t\t\t\t\t     TREE_VALUE (arg_type));\n+\t    arg_type_p = &TREE_CHAIN (*arg_type_p);\n+\t  }\n+\t/* Build the new METHOD_TYPE.  */\n+\tmethod_type = build_cplus_method_type (TYPE_METHOD_BASETYPE (method_type), \n+\t\t\t\t\t       TREE_TYPE (method_type), \n+\t\t\t\t\t       arg_types);\n+\t/* Build the new POINTER_TYPE.  */\n+\ttype = cp_build_qualified_type (build_pointer_type (method_type),\n+\t\t\t\t\tcp_type_quals (type));\n+\tbreak;\n+      }\n+\n   /* If a canonical type already exists for this type, use it.  We use\n      this method instead of type_hash_canon, because it only does a\n      simple equality check on the list of field members.  */"}, {"sha": "517f3b4193c54bc83fe0fcabf874009f0c1b81a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "patch": "@@ -1,3 +1,8 @@\n+2003-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8534\n+\t* g++.dg/opt/ptrmem1.C: New test.\n+\n 2003-03-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/i386-loop-1.c: New test."}, {"sha": "0a02a53a9bf7f059cd270f14276c99861c066a81", "filename": "gcc/testsuite/g++.dg/opt/ptrmem1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fptrmem1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d19bfe41a0e1a576d3e467ce39c4bdfa689724/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fptrmem1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fptrmem1.C?ref=f6d19bfe41a0e1a576d3e467ce39c4bdfa689724", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options \"-O2\" }\n+\n+class QWidget\n+{\n+  public: void repaint( bool erase  = 1 );\n+};\n+void f (void)\n+{\n+  typedef void (QWidget::*A)(bool);\n+  A b = &QWidget::repaint;\n+}\n+ "}]}