{"sha": "cf7761053226ab90efadc907da7a1ce3664b33a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3NzYxMDUzMjI2YWI5MGVmYWRjOTA3ZGE3YTFjZTM2NjRiMzNhMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-03T22:52:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-03T22:52:45Z"}, "message": "decl.c: Lose arg_looking_for_template.\n\n\t* decl.c: Lose arg_looking_for_template.\n\t(lookup_name_real): Likewise.\n\t* parse.y: Lose processing_template_arg, template_arg1\n\t(primary): Likewise.\n\t* spew.c (yylex): Set lastiddecl for PTYPENAMEs, too.\n\nFrom-SVN: r17651", "tree": {"sha": "d8b47f2bb7390afd942a50f9a98d30d4cc9a3879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8b47f2bb7390afd942a50f9a98d30d4cc9a3879"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf7761053226ab90efadc907da7a1ce3664b33a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7761053226ab90efadc907da7a1ce3664b33a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7761053226ab90efadc907da7a1ce3664b33a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7761053226ab90efadc907da7a1ce3664b33a0/comments", "author": null, "committer": null, "parents": [{"sha": "e7e6663285f1afc242a733d3d0f24626c9b0b4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e6663285f1afc242a733d3d0f24626c9b0b4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e6663285f1afc242a733d3d0f24626c9b0b4da"}], "stats": {"total": 8422, "additions": 4158, "deletions": 4264}, "files": [{"sha": "c9b9263d7df1206c7816ac2362180df360ecd96d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf7761053226ab90efadc907da7a1ce3664b33a0", "patch": "@@ -1,3 +1,11 @@\n+Tue Feb  3 22:43:42 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c: Lose arg_looking_for_template.\n+\t(lookup_name_real): Likewise.\n+\t* parse.y: Lose processing_template_arg, template_arg1\n+\t(primary): Likewise.\n+\t* spew.c (yylex): Set lastiddecl for PTYPENAMEs, too.\n+\n Tue Feb  3 22:04:01 1998  Kriang Lerdsuwanakij  <lerdsuwa@scf.usc.edu>\n \n \t* error.c (dump_decl): Fix type of default arguments for template"}, {"sha": "f61cec487f9093709f06350525b81e5092347ad4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cf7761053226ab90efadc907da7a1ce3664b33a0", "patch": "@@ -396,9 +396,6 @@ static struct named_label_list *named_label_uses = NULL;\n    in the TREE_PURPOSE slot.  */\n tree static_aggregates;\n \n-/* Nonzero if we lookup name inside template argument.  */\n-int arg_looking_for_template;\n-\n /* -- end of C++ */\n \n /* Two expressions that are constants with value zero.\n@@ -4679,13 +4676,7 @@ lookup_name_real (name, prefer_type, nonclass)\n \t  val = from_obj;\n \t}\n \n-      if (TREE_CODE (val) == TEMPLATE_DECL && arg_looking_for_template)\n-\t{\n-\t  /* TEMPLATE_TEMPLATE_PARM node is preferred over TEMPLATE_DECL.  */\n-\t  if (DECL_TEMPLATE_TEMPLATE_PARM_P (val))\n-\t  \tval = TREE_TYPE (val);\n-\t}\n-      else if ((TREE_CODE (val) == TEMPLATE_DECL && looking_for_template)\n+      if ((TREE_CODE (val) == TEMPLATE_DECL && looking_for_template)\n \t  || TREE_CODE (val) == TYPE_DECL || prefer_type <= 0)\n \t;\n       else if (IDENTIFIER_HAS_TYPE_VALUE (name))"}, {"sha": "efd4505e521fd52c805258c8fa7a812838e0b84c", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 4144, "deletions": 4217, "changes": 8361, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=cf7761053226ab90efadc907da7a1ce3664b33a0"}, {"sha": "278e595a7aff7dad554c107564373461f8334b2d", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=cf7761053226ab90efadc907da7a1ce3664b33a0", "patch": "@@ -71,12 +71,6 @@ extern tree strip_attrs\t\tPROTO((tree));\n    error message if the user supplies an empty conditional expression.  */\n static char *cond_stmt_keyword;\n \n-/* If nonzero, we try to treat TEMPLATE_DECL as argument in template\n-   template parameter. */\n-static int processing_template_arg;\n-\n-extern int arg_looking_for_template;\n-\n static tree empty_parms PROTO((void));\n \n /* Nonzero if we have an `extern \"C\"' acting as an extern specifier.  */\n@@ -267,7 +261,7 @@ empty_parms ()\n %type <ttype> template_type_parm template_template_parm\n %type <code>  template_close_bracket\n %type <ttype> template_type template_arg_list template_arg_list_opt\n-%type <ttype> template_arg template_arg1\n+%type <ttype> template_arg\n %type <ttype> condition xcond paren_cond_or_null\n %type <ttype> type_name nested_name_specifier nested_type ptr_to_mem\n %type <ttype> complete_type_name notype_identifier nonnested_type\n@@ -958,12 +952,6 @@ template_arg_list:\n \t;\n \n template_arg:\n-\t\t{ processing_template_arg = 1; }\n-\t  template_arg1\n-\t\t{ $$ = $2;\n-\t\t  processing_template_arg = 0; }\n-\n-template_arg1:\n \t  type_id\n \t\t{ $$ = groktypename ($1.t); }\n \t| expr_no_commas  %prec ARITHCOMPARE\n@@ -1379,23 +1367,7 @@ primary:\n \t\t  if (TREE_CODE ($$) == BIT_NOT_EXPR)\n \t\t    $$ = build_x_unary_op (BIT_NOT_EXPR, TREE_OPERAND ($$, 0));\n \t\t  else if (TREE_CODE ($$) != TEMPLATE_ID_EXPR)\n-\t\t    {\n-\t\t      if (processing_template_arg)\n-\t\t\t{\n-\t\t\t  tree id;\n-\t\t\t  arg_looking_for_template = processing_template_arg;\n-\t\t\t  id = lookup_name ($$, 0);\n-\t\t\t  arg_looking_for_template = 0;\n-\t\t\t\n-\t\t\t  if (!id || id == error_mark_node\n-\t\t\t      || (TREE_CODE (id) != TEMPLATE_DECL\n-\t\t\t\t  && TREE_CODE (id) != TEMPLATE_TEMPLATE_PARM))\n-\t\t\t    id = do_identifier ($$, 1);\n-\t\t\t  $$ = id;\n-\t\t\t} \n-\t\t      else\n-\t\t\t$$ = do_identifier ($$, 1);\n-\t\t    }\n+\t\t    $$ = do_identifier ($$, 1);\n \t\t}\t\t\n \t| CONSTANT\n \t| boolean.literal"}, {"sha": "95b505a3d7473fab2be202fc4210579c1176fc61", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7761053226ab90efadc907da7a1ce3664b33a0/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=cf7761053226ab90efadc907da7a1ce3664b33a0", "patch": "@@ -312,22 +312,18 @@ yylex ()\n \t    {\n \t    case TYPENAME:\n \t    case SELFNAME:\n+\t    case NSNAME:\n \t      lastiddecl = trrr;\n \t      if (got_scope)\n \t\ttmp_token.yylval.ttype = trrr;\n \t      break;\n+\n \t    case PFUNCNAME:\n \t    case IDENTIFIER:\n-\t      lastiddecl = trrr;\n-\t      break;\n \t    case PTYPENAME:\n-\t      lastiddecl = NULL_TREE;\n-\t      break;\n-\t    case NSNAME:\n \t      lastiddecl = trrr;\n-\t      if (got_scope)\n-\t\ttmp_token.yylval.ttype = trrr;\n \t      break;\n+\n \t    default:\n \t      my_friendly_abort (101);\n \t    }"}]}