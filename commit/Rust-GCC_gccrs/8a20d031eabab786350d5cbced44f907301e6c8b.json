{"sha": "8a20d031eabab786350d5cbced44f907301e6c8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyMGQwMzFlYWJhYjc4NjM1MGQ1Y2JjZWQ0NGY5MDczMDFlNmM4Yg==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2019-06-01T10:57:12Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2019-06-01T10:57:12Z"}, "message": "re PR c++/85254 (boost::is_final does not work for template types)\n\nPR c++/85254\n\ngcc/cp\n\nPR c++/85254\n* class.c (fixup_type_variants): Handle CLASSTYPE_FINAL.\n\ntestsuite/\n\nPR c++/85254\n* g++.dg/ext/is_final.C: Amend.\n\nFrom-SVN: r271835", "tree": {"sha": "e37f8272f651f9bfc88515396a469e2b9f93db75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e37f8272f651f9bfc88515396a469e2b9f93db75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a20d031eabab786350d5cbced44f907301e6c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a20d031eabab786350d5cbced44f907301e6c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a20d031eabab786350d5cbced44f907301e6c8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a20d031eabab786350d5cbced44f907301e6c8b/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceedc63594bfda6122690ee2bd6976c93bec7527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceedc63594bfda6122690ee2bd6976c93bec7527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceedc63594bfda6122690ee2bd6976c93bec7527"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "b88976bb8189eea1ea32d7570be1f6e3ed5385f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8a20d031eabab786350d5cbced44f907301e6c8b", "patch": "@@ -1,3 +1,15 @@\n+2019-06-01  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tgcc/cp\n+\n+\tPR c++/85254\n+\t* class.c (fixup_type_variants): Handle CLASSTYPE_FINAL.\n+\n+\ttestsuite/\n+\n+\tPR c++/85254\n+\t* g++.dg/ext/is_final.C: Amend.\n+\n 2019-05-31  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (IDENTIFIER_LAMBDA_P): New."}, {"sha": "d6ac6ce5c9a9055febcde3c4de97d1d366f8d1b3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8a20d031eabab786350d5cbced44f907301e6c8b", "patch": "@@ -1907,6 +1907,7 @@ fixup_type_variants (tree t)\n \t= TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t);\n \n       TYPE_POLYMORPHIC_P (variants) = TYPE_POLYMORPHIC_P (t);\n+      CLASSTYPE_FINAL (variants) = CLASSTYPE_FINAL (t);\n \n       TYPE_BINFO (variants) = TYPE_BINFO (t);\n "}, {"sha": "20e5d629ff5c3d21552b7b54bf1306efb62cbee6", "filename": "gcc/testsuite/g++.dg/ext/is_final.C", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_final.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a20d031eabab786350d5cbced44f907301e6c8b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_final.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_final.C?ref=8a20d031eabab786350d5cbced44f907301e6c8b", "patch": "@@ -43,3 +43,17 @@ static_assert( __is_final (Ff<int>), \"Ff<int> is final\" );\n static_assert( __is_final (Ff<A>),   \"Ff<A> is final\" );\n static_assert( __is_final (Ff<Af>),  \"Ff<Af> is final\" );\n \n+// PR 85254\n+\n+template <class T> struct final_trait_wrap{ typedef T type; };\n+\n+template <class T> struct my_is_final\n+{\n+  static const bool value = __is_final(typename final_trait_wrap<T>::type);\n+};\n+\n+struct final1 final {};\n+template <typename T> struct final2 final {};\n+\n+static_assert( my_is_final<final1>::value, \"final1 is final\" );\n+static_assert( my_is_final<final2<int>>::value, \"final2<int> is final\" );"}]}