{"sha": "1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmNWFiYjM4MmY5ZGFiNzIwM2FlNmE4ZDlmMmY0NDIxMTkwZDFmZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-03-01T11:02:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-03-01T11:02:30Z"}, "message": "re PR debug/39267 (gdb testsuite regressions)\n\n\n\tPR debug/39267\n\t* tree-inline.c (setup_one_parameter): Do not copy propagate\n\targuments when not optimizing.\n\tPR debug/39267\n\t* gcc.dg/debug/dwarf2/inline1.c: New testcase.\n\nFrom-SVN: r144515", "tree": {"sha": "6ef8cf25549c0974186775828a4a93b9f8173240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ef8cf25549c0974186775828a4a93b9f8173240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/comments", "author": null, "committer": null, "parents": [{"sha": "39ae51e069e55db5c979ee2fe408bfee2d79b533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ae51e069e55db5c979ee2fe408bfee2d79b533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ae51e069e55db5c979ee2fe408bfee2d79b533"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "dba3b12a0241ee1ea35bf399eb26ee349d3f746d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "patch": "@@ -1,3 +1,9 @@\n+2009-02-28  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR debug/39267\n+\t* tree-inline.c (setup_one_parameter): Do not copy propagate\n+\targuments when not optimizing.\n+\n 2009-02-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/39327"}, {"sha": "c6b8017d6c3c8a797e2931098fc6b9883fcfa9f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "patch": "@@ -1,3 +1,8 @@\n+2009-03-01  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR debug/39267\n+\t* gcc.dg/debug/dwarf2/inline1.c: New testcase.\n+\n 2009-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pack12.adb: New test."}, {"sha": "11c8fad7841bdafbda9e87c9fdece86256fe438e", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/inline1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline1.c?ref=1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -gdwarf-2 -dA\" } */\n+void e(int);\n+__attribute__ ((always_inline)) inline int\n+t(int function_parameter)\n+{\n+  e(function_parameter);\n+}\n+\n+void test (int function_parameter2)\n+{\n+  t(function_parameter2);\n+}\n+\n+/* Verify that we get both function_parameter and function_parameter2 declared\n+   in test.  Overall we should have 3 variables with location defined (also\n+   function_parameter in offline copy of t.  */\n+/* { dg-final { scan-assembler-times \" DW_AT_location\" 3 } } */"}, {"sha": "65d5b88a9ce8eb2beb51ab195e6986f4db74fedc", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=1cf5abb382f9dab7203ae6a8d9f2f4421190d1ff", "patch": "@@ -2048,6 +2048,7 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n      We might want to introduce a notion that single SSA_NAME might\n      represent multiple variables for purposes of debugging. */\n   if (gimple_in_ssa_p (cfun) && rhs && def && is_gimple_reg (p)\n+      && optimize\n       && (TREE_CODE (rhs) == SSA_NAME\n \t  || is_gimple_min_invariant (rhs))\n       && !SSA_NAME_OCCURS_IN_ABNORMAL_PHI (def))\n@@ -2058,7 +2059,7 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n \n   /* If the value of argument is never used, don't care about initializing\n      it.  */\n-  if (gimple_in_ssa_p (cfun) && !def && is_gimple_reg (p))\n+  if (optimize && gimple_in_ssa_p (cfun) && !def && is_gimple_reg (p))\n     {\n       gcc_assert (!value || !TREE_SIDE_EFFECTS (value));\n       return NULL;"}]}