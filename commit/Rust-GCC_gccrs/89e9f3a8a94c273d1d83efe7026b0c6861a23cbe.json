{"sha": "89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllOWYzYThhOTRjMjczZDFkODNlZmU3MDI2YjBjNjg2MWEyM2NiZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-02-12T17:18:51Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-02-12T17:18:51Z"}, "message": "Replace gen_rtx (CONST_INT...) calls with GEN_INT calls\n\nFrom-SVN: r17879", "tree": {"sha": "50b5a1bd1f8e525adfc9e1d85e349dd71c0ba4fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50b5a1bd1f8e525adfc9e1d85e349dd71c0ba4fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe/comments", "author": null, "committer": null, "parents": [{"sha": "8bd6ecc2806335930ad29687810b372a1649e49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd6ecc2806335930ad29687810b372a1649e49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bd6ecc2806335930ad29687810b372a1649e49f"}], "stats": {"total": 79, "additions": 42, "deletions": 37}, "files": [{"sha": "d0f258ff2607996f711809260727898bda62ce21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "patch": "@@ -1,4 +1,9 @@\n+Thu Feb 12 20:16:35 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.md: Replace gen_rtx (CONST_INT,...) with GEN_INT.\n+\n Thu Feb 12 16:45:17 1998  Robert Lipe  <robertl@dgii.com>\n+\n \t* expr.c (expand_assignment):  Correct typo exposed by -Wall. \n \toffset should have been a truth value, not an assignment.\n "}, {"sha": "8e5c122e680493474ca808aad59164b694f79362", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9f3a8a94c273d1d83efe7026b0c6861a23cbe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=89e9f3a8a94c273d1d83efe7026b0c6861a23cbe", "patch": "@@ -2119,8 +2119,8 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - start - size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n+  operands[4] = GEN_INT (32 - start - size);\n+  operands[1] = GEN_INT (start + size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n@@ -2137,8 +2137,8 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, shift - start - size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n+  operands[4] = GEN_INT (shift - start - size);\n+  operands[1] = GEN_INT (start + size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n@@ -2155,8 +2155,8 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - shift - start - size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n+  operands[4] = GEN_INT (32 - shift - start - size);\n+  operands[1] = GEN_INT (start + size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n@@ -2173,8 +2173,8 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - shift - start - size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n+  operands[4] = GEN_INT (32 - shift - start - size);\n+  operands[1] = GEN_INT (start + size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n@@ -2196,7 +2196,7 @@\n /* Align extract field with insert field */\n   operands[5] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t extract_start + extract_size - insert_start - insert_size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, insert_start + insert_size - 1);\n+  operands[1] = GEN_INT (insert_start + insert_size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h5,%h2,%h1\\\";\n }\")\n \n@@ -2211,7 +2211,7 @@\n   int start = INTVAL (operands[2]) & 63;\n   int size = INTVAL (operands[1]) & 63;\n \n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - start - size);\n+  operands[2] = GEN_INT (64 - start - size);\n   return \\\"rldimi %0,%3,%H2,%H1\\\";\n }\")\n \n@@ -2245,7 +2245,7 @@\n   if (start + size >= 32)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+    operands[3] = GEN_INT (start + size);\n   return \\\"{rlinm|rlwinm} %0,%1,%3,%s2,31\\\";\n }\")\n \n@@ -2282,7 +2282,7 @@\n   if (start + size >= 32)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+    operands[3] = GEN_INT (start + size);\n   return \\\"{rlinm.|rlwinm.} %4,%1,%3,%s2,31\\\";\n }\"\n   [(set_attr \"type\" \"compare\")])\n@@ -2303,14 +2303,14 @@\n \n   if (start >= 16 && start + size == 32)\n     {\n-      operands[3] = gen_rtx (CONST_INT, VOIDmode, (1 << (32 - start)) - 1);\n+      operands[3] = GEN_INT ((1 << (32 - start)) - 1);\n       return \\\"{andil.|andi.} %0,%1,%3\\\";\n     }\n \n   if (start + size >= 32)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+    operands[3] = GEN_INT (start + size);\n   return \\\"{rlinm.|rlwinm.} %0,%1,%3,%s2,31\\\";\n }\"\n   [(set_attr \"type\" \"delayed_compare\")])\n@@ -2329,8 +2329,8 @@\n   if (start + size >= 64)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+    operands[3] = GEN_INT (start + size);\n+  operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl %0,%1,%3,%2\\\";\n }\")\n \n@@ -2350,8 +2350,8 @@\n   if (start + size >= 64)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+    operands[3] = GEN_INT (start + size);\n+  operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl. %4,%1,%3,%2\\\";\n }\")\n \n@@ -2372,8 +2372,8 @@\n   if (start + size >= 64)\n     operands[3] = const0_rtx;\n   else\n-    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+    operands[3] = GEN_INT (start + size);\n+  operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl. %0,%1,%3,%2\\\";\n }\")\n \n@@ -2752,7 +2752,7 @@\n \t (subreg:QI\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 255))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"{rlinm|rlwinm} %0,%1,%s2,0xff\")\n \n (define_insn \"\"\n@@ -2764,7 +2764,7 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"i\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 255))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"{rlinm.|rlwinm.} %3,%1,%s2,0xff\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n@@ -2778,7 +2778,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 255))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"{rlinm.|rlwinm.} %0,%1,%s2,0xff\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n@@ -2788,7 +2788,7 @@\n \t (subreg:HI\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 65535))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"{rlinm|rlwinm} %0,%1,%s2,0xffff\")\n \n (define_insn \"\"\n@@ -2800,7 +2800,7 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"i\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r\"))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 65535))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"{rlinm.|rlwinm.} %3,%1,%s2,0xffff\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n@@ -2814,7 +2814,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], gen_rtx (CONST_INT, VOIDmode, 65535))\"\n+  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"{rlinm.|rlwinm.} %0,%1,%s2,0xffff\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n@@ -4859,8 +4859,8 @@\n \n   second_c = orig | ~ first_c;\n \n-  operands[3] = gen_rtx (CONST_INT, VOIDmode, first_c);\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, second_c);\n+  operands[3] = GEN_INT (first_c);\n+  operands[4] = GEN_INT (second_c);\n }\")\n \n (define_insn \"iordi3\"\n@@ -4908,7 +4908,7 @@\n {\n   operands[3] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t INTVAL (operands[2]) & (~ (HOST_WIDE_INT) 0xffff));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0xffff);\n+  operands[4] = GEN_INT (INTVAL (operands[2]) & 0xffff);\n }\")\n \n (define_insn \"xordi3\"\n@@ -4956,7 +4956,7 @@\n {\n   operands[3] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t INTVAL (operands[2]) & 0xffff0000);\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0xffff);\n+  operands[4] = GEN_INT (INTVAL (operands[2]) & 0xffff);\n }\")\n \n (define_insn \"\"\n@@ -5355,7 +5355,7 @@\n {\n   operands[2] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t INTVAL (operands[1]) & 0xffff0000);\n-  operands[3] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) & 0xffff);\n+  operands[3] = GEN_INT (INTVAL (operands[1]) & 0xffff);\n }\")\n \n (define_insn \"\"\n@@ -8095,8 +8095,8 @@\n   int sextc = (c << 16) >> 16;\n   int xorv = c ^ sextc;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, xorv);\n-  operands[5] = gen_rtx (CONST_INT, VOIDmode, sextc);\n+  operands[4] = GEN_INT (xorv);\n+  operands[5] = GEN_INT (sextc);\n }\")\n \n (define_insn \"\"\n@@ -8223,8 +8223,8 @@\n   else\n     count = 32 - (put_bit - is_bit);\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, count);\n-  operands[5] = gen_rtx (CONST_INT, VOIDmode, put_bit);\n+  operands[4] = GEN_INT (count);\n+  operands[5] = GEN_INT (put_bit);\n \n   return \\\"%D1mfcr %0\\;{rlinm|rlwinm} %0,%0,%4,%5,%5\\\";\n }\"\n@@ -8253,8 +8253,8 @@\n   else\n     count = 32 - (put_bit - is_bit);\n \n-  operands[5] = gen_rtx (CONST_INT, VOIDmode, count);\n-  operands[6] = gen_rtx (CONST_INT, VOIDmode, put_bit);\n+  operands[5] = GEN_INT (count);\n+  operands[6] = GEN_INT (put_bit);\n \n   return \\\"%D1mfcr %4\\;{rlinm.|rlwinm.} %4,%4,%5,%6,%6\\\";\n }\""}]}