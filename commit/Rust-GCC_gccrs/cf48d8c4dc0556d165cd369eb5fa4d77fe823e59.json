{"sha": "cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y0OGQ4YzRkYzA1NTZkMTY1Y2QzNjllYjVmYTRkNzdmZTgyM2U1OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-05-12T12:36:16Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-05-12T12:36:16Z"}, "message": "Document ASAN_OPTIONS=\"halt_on_error\" env variable.\n\n\t* doc/invoke.texi: Explain connection between -fsanitize-recover=address\n\tand ASAN_OPTIONS=\"halt_on_error=1\".\n\nFrom-SVN: r236172", "tree": {"sha": "6cdd0bbe62e077989cfb11fa18bd72acaac6ae6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cdd0bbe62e077989cfb11fa18bd72acaac6ae6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4ec12434da32096a04651ccb4afabe0297ac939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ec12434da32096a04651ccb4afabe0297ac939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ec12434da32096a04651ccb4afabe0297ac939"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "40f1b6680e0e612467babaa451069e21f3ea7175", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "patch": "@@ -1,3 +1,8 @@\n+2016-05-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Explain connection between -fsanitize-recover=address\n+\tand ASAN_OPTIONS=\"halt_on_error=1\".\n+\n 2016-05-12  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR tree-optimization/71006"}, {"sha": "1176d1260e9b68515bedccbbacf39458b7c62f6e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf48d8c4dc0556d165cd369eb5fa4d77fe823e59/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cf48d8c4dc0556d165cd369eb5fa4d77fe823e59", "patch": "@@ -10007,6 +10007,14 @@ for which this feature is experimental.\n accepted, the former enables recovery for all sanitizers that support it,\n the latter disables recovery for all sanitizers that support it.\n \n+Even if a recovery mode is turned on the compiler side, it needs to be also\n+enabled on the runtime library side, otherwise the failures are still fatal.\n+The runtime library defaults to @code{halt_on_error=0} for\n+ThreadSanitizer and UndefinedBehaviorSanitizer, while default value for\n+AddressSanitizer is @code{halt_on_error=1}. This can overridden through\n+the following environment variables: @env{ASAN_OPTIONS}, @env{TSAN_OPTIONS},\n+@env{UBSAN_OPTIONS}.\n+\n Syntax without explicit @var{opts} parameter is deprecated.  It is equivalent to\n @smallexample\n -fsanitize-recover=undefined,float-cast-overflow,float-divide-by-zero"}]}