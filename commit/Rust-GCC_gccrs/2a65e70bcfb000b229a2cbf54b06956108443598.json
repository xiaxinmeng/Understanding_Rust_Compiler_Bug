{"sha": "2a65e70bcfb000b229a2cbf54b06956108443598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE2NWU3MGJjZmIwMDBiMjI5YTJjYmY1NGIwNjk1NjEwODQ0MzU5OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-25T17:20:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-25T17:20:15Z"}, "message": "re PR tree-optimization/71631 (Wrong constant folding)\n\n\tPR tree-optimization/71631\n\t* tree-ssa-reassoc.c (reassociate_bb): Pass true as last argument\n\tto rewrite_expr_tree even if negate_result, move new_lhs var\n\tdeclaration and initialization earlier, for powi_result set afterwards\n\tnew_lhs to lhs.  For negate_result, use new_lhs instead of tmp\n\tif new_lhs != lhs, and don't shadow gsi var.\n\n\t* gcc.c-torture/execute/pr71631.c: New test.\n\nFrom-SVN: r237782", "tree": {"sha": "e8e53d72f842bb86f62249822f10a715435f81e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e53d72f842bb86f62249822f10a715435f81e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a65e70bcfb000b229a2cbf54b06956108443598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a65e70bcfb000b229a2cbf54b06956108443598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a65e70bcfb000b229a2cbf54b06956108443598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a65e70bcfb000b229a2cbf54b06956108443598/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7805417a5d2a9a79a3858b82d60169178f59c6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7805417a5d2a9a79a3858b82d60169178f59c6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7805417a5d2a9a79a3858b82d60169178f59c6f1"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "b4d4b0b5f5b9c33c839019af5b7fc7e236a01253", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a65e70bcfb000b229a2cbf54b06956108443598", "patch": "@@ -1,3 +1,12 @@\n+2016-06-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71631\n+\t* tree-ssa-reassoc.c (reassociate_bb): Pass true as last argument\n+\tto rewrite_expr_tree even if negate_result, move new_lhs var\n+\tdeclaration and initialization earlier, for powi_result set afterwards\n+\tnew_lhs to lhs.  For negate_result, use new_lhs instead of tmp\n+\tif new_lhs != lhs, and don't shadow gsi var.\n+\n 2016-06-24  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (predict_paths_leading_to, predict_paths_leading_to_edge):"}, {"sha": "105f81fbd226de396f5fb30971d28d3a3dba04c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a65e70bcfb000b229a2cbf54b06956108443598", "patch": "@@ -1,3 +1,8 @@\n+2016-06-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71631\n+\t* gcc.c-torture/execute/pr71631.c: New test.\n+\n 2016-06-24  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/predict-11.c: New testcase."}, {"sha": "f27c03e010dc0febd11a7838ef3419cb24c8c952", "filename": "gcc/testsuite/gcc.c-torture/execute/pr71631.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71631.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71631.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr71631.c?ref=2a65e70bcfb000b229a2cbf54b06956108443598", "patch": "@@ -0,0 +1,32 @@\n+/* PR tree-optimization/71631 */\n+\n+volatile char v;\n+int a = 1, b = 1, c = 1;\n+\n+void\n+foo (const char *s)\n+{\n+  while (*s++)\n+    v = *s;\n+}\n+\n+int\n+main ()\n+{\n+  volatile int d = 1;\n+  volatile int e = 1;\n+  int f = 1 / a;\n+  int g = 1U < f;\n+  int h = 2 + g;\n+  int i = 3 % h;\n+  int j = e && b;\n+  int k = 1 == c;\n+  int l = d != 0;\n+  short m = (short) (-1 * i * l);\n+  short x = j * (k * m);\n+  if (i == 1)\n+    foo (\"AB\");\n+  if (x != -1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "9264e0b60344d6d1f565fd42120c34bcce5baf9a", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a65e70bcfb000b229a2cbf54b06956108443598/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=2a65e70bcfb000b229a2cbf54b06956108443598", "patch": "@@ -5314,6 +5314,7 @@ reassociate_bb (basic_block bb)\n \t\t    }\n \t\t}\n \n+\t      tree new_lhs = lhs;\n \t      /* If the operand vector is now empty, all operands were \n \t\t consumed by the __builtin_powi optimization.  */\n \t      if (ops.length () == 0)\n@@ -5337,7 +5338,6 @@ reassociate_bb (basic_block bb)\n \t\t  machine_mode mode = TYPE_MODE (TREE_TYPE (lhs));\n \t\t  int ops_num = ops.length ();\n \t\t  int width = get_reassociation_width (ops_num, rhs_code, mode);\n-\t\t  tree new_lhs = lhs;\n \n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t    fprintf (dump_file,\n@@ -5357,7 +5357,8 @@ reassociate_bb (basic_block bb)\n                         swap_ops_for_binary_stmt (ops, len - 3, stmt);\n \n \t\t      new_lhs = rewrite_expr_tree (stmt, 0, ops,\n-\t\t\t\t\t\t   powi_result != NULL);\n+\t\t\t\t\t\t   powi_result != NULL\n+\t\t\t\t\t\t   || negate_result);\n                     }\n \n \t\t  /* If we combined some repeated factors into a \n@@ -5372,7 +5373,10 @@ reassociate_bb (basic_block bb)\n \t\t      gimple_set_lhs (lhs_stmt, target_ssa);\n \t\t      update_stmt (lhs_stmt);\n \t\t      if (lhs != new_lhs)\n-\t\t\ttarget_ssa = new_lhs;\n+\t\t\t{\n+\t\t\t  target_ssa = new_lhs;\n+\t\t\t  new_lhs = lhs;\n+\t\t\t}\n \t\t      mul_stmt = gimple_build_assign (lhs, MULT_EXPR,\n \t\t\t\t\t\t      powi_result, target_ssa);\n \t\t      gimple_set_location (mul_stmt, gimple_location (stmt));\n@@ -5386,10 +5390,11 @@ reassociate_bb (basic_block bb)\n \t\t  stmt = SSA_NAME_DEF_STMT (lhs);\n \t\t  tree tmp = make_ssa_name (TREE_TYPE (lhs));\n \t\t  gimple_set_lhs (stmt, tmp);\n+\t\t  if (lhs != new_lhs)\n+\t\t    tmp = new_lhs;\n \t\t  gassign *neg_stmt = gimple_build_assign (lhs, NEGATE_EXPR,\n \t\t\t\t\t\t\t   tmp);\n \t\t  gimple_set_uid (neg_stmt, gimple_uid (stmt));\n-\t\t  gimple_stmt_iterator gsi = gsi_for_stmt (stmt);\n \t\t  gsi_insert_after (&gsi, neg_stmt, GSI_NEW_STMT);\n \t\t  update_stmt (stmt);\n \t\t}"}]}