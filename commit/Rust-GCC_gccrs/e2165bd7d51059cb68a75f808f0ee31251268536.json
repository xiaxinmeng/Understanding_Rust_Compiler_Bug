{"sha": "e2165bd7d51059cb68a75f808f0ee31251268536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxNjViZDdkNTEwNTljYjY4YTc1ZjgwOGYwZWUzMTI1MTI2ODUzNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-04-30T15:09:19Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-04-30T15:09:19Z"}, "message": "re PR ipa/65873 (Failure to inline always_inline memcpy)\n\n\n\tPR ipa/65873\n\t* ipa-inline.c (can_inline_edge_p): It is safe to inline across\n\t-fstrict-aliasing boundaries.\n\nFrom-SVN: r222634", "tree": {"sha": "7910cb8edc5d467a0ecc644217bc3d498d5beb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7910cb8edc5d467a0ecc644217bc3d498d5beb49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2165bd7d51059cb68a75f808f0ee31251268536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2165bd7d51059cb68a75f808f0ee31251268536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2165bd7d51059cb68a75f808f0ee31251268536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2165bd7d51059cb68a75f808f0ee31251268536/comments", "author": null, "committer": null, "parents": [{"sha": "ccdbdfe43c80bfa8a20acea5c0260288857decad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdbdfe43c80bfa8a20acea5c0260288857decad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccdbdfe43c80bfa8a20acea5c0260288857decad"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "7fa0a1154f6fb2843afc01b055e3c4d80c990534", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2165bd7d51059cb68a75f808f0ee31251268536/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2165bd7d51059cb68a75f808f0ee31251268536/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2165bd7d51059cb68a75f808f0ee31251268536", "patch": "@@ -1,3 +1,9 @@\n+2015-04-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65873\n+\t* ipa-inline.c (can_inline_edge_p): It is safe to inline across\n+\t-fstrict-aliasing boundaries.\n+\n 2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_rtx_mult_cost): Handle MNEG"}, {"sha": "1427761e4fa36cfec90d4724f6fa28668d0f4df5", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2165bd7d51059cb68a75f808f0ee31251268536/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2165bd7d51059cb68a75f808f0ee31251268536/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=e2165bd7d51059cb68a75f808f0ee31251268536", "patch": "@@ -439,9 +439,6 @@ can_inline_edge_p (struct cgraph_edge *e, bool report,\n \t       == !opt_for_fn (callee->decl, optimize) || !always_inline))\n \t  || check_match (flag_wrapv)\n \t  || check_match (flag_trapv)\n-\t  /* Strictly speaking only when the callee contains memory\n-\t     accesses that are not using alias-set zero anyway.  */\n-\t  || check_maybe_down (flag_strict_aliasing)\n \t  /* Strictly speaking only when the callee uses FP math.  */\n \t  || check_maybe_up (flag_rounding_math)\n \t  || check_maybe_up (flag_trapping_math)"}]}