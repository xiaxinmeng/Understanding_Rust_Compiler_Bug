{"sha": "ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2YTYwMWMxYThkOGRjZjZkYzU1NzRhOTZkMGY0ZDUzYjBlZjhmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-08-31T17:24:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-08-31T17:24:39Z"}, "message": "remove_freed.cc: Fix test01 return type to void.\n\n2010-08-31  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/23_containers/forward_list/operations/remove_freed.cc:\n\tFix test01 return type to void.\n\t* testsuite/util/exception/safety.h: Avoid -Wall -m32 warnings.\n\t* testsuite/util/replacement_memory_operators.h: Likewise.\n\nFrom-SVN: r163684", "tree": {"sha": "511972779d72e806f0ce16507549faedc5da1c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/511972779d72e806f0ce16507549faedc5da1c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/comments", "author": null, "committer": null, "parents": [{"sha": "9c6a2bee91dffed0edd40812552a2e5473e5fbb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6a2bee91dffed0edd40812552a2e5473e5fbb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6a2bee91dffed0edd40812552a2e5473e5fbb3"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "1f435ffa8ca54a938b9b26922fb592f1018e2a2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "patch": "@@ -1,3 +1,10 @@\n+2010-08-31  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/23_containers/forward_list/operations/remove_freed.cc:\n+\tFix test01 return type to void.\n+\t* testsuite/util/exception/safety.h: Avoid -Wall -m32 warnings.\n+\t* testsuite/util/replacement_memory_operators.h: Likewise.\n+\n 2010-08-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/23_containers/bitset/invalidation: Move..."}, {"sha": "5b959209263ef957af034d9f1284ba6d8d163554", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/remove_freed.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc?ref=ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "patch": "@@ -25,7 +25,7 @@\n // 23.3.3.5 forward_list operations [forwardlist.ops]\n \n // Used to cause many Valgrind errors: LWG 526-type situation.\n-int test01()\n+void test01()\n {\n   bool test __attribute__((unused)) = true;\n "}, {"sha": "bc96505903499b4a0fd43174dcccc9c460df39cf", "filename": "libstdc++-v3/testsuite/util/exception/safety.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h?ref=ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "patch": "@@ -52,13 +52,13 @@ namespace __gnu_test\n \t  __s += \"\\n\";\n \t  __s += \"random number generated is: \";\n \t  char buf[40];\n-\t  __builtin_sprintf(buf, \"%lu\", random);\n+\t  __builtin_sprintf(buf, \"%lu\", (unsigned long)random);\n \t  __s += buf;\n \t  __s += \" on range [\";\n-\t  __builtin_sprintf(buf, \"%lu\", distribution.min());\n+\t  __builtin_sprintf(buf, \"%lu\", (unsigned long)distribution.min());\n \t  __s += buf;\n \t  __s += \", \";\n-\t  __builtin_sprintf(buf, \"%lu\", distribution.max());\n+\t  __builtin_sprintf(buf, \"%lu\", (unsigned long)distribution.max());\n \t  __s += buf;\n \t  __s += \"]\\n\";\n \t  std::__throw_out_of_range(__s.c_str());"}, {"sha": "b7d3a3b10e9de297f5d4d13ac87c9e5fa72bed1f", "filename": "libstdc++-v3/testsuite/util/replacement_memory_operators.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h?ref=ba6a601c1a8d8dcf6dc5574a96d0f4d53b0ef8fe", "patch": "@@ -108,6 +108,6 @@ void operator delete(void* p) throw()\n       if (count == 0)\n \tstd::printf(\"All memory released \\n\");\n       else\n-\tstd::printf(\"%lu allocations to be released \\n\", count);\n+\tstd::printf(\"%lu allocations to be released \\n\", (unsigned long)count);\n     }\n }"}]}