{"sha": "01f3428cafc13f5ae765d304494cac750892bb80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFmMzQyOGNhZmMxM2Y1YWU3NjVkMzA0NDk0Y2FjNzUwODkyYmI4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-08T16:06:25Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-08T16:06:25Z"}, "message": "Check for libitm support at top-level.\n\nFrom-SVN: r181168", "tree": {"sha": "257f6d91d2117a12fa1ed620ee8ebfeabd03a360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/257f6d91d2117a12fa1ed620ee8ebfeabd03a360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01f3428cafc13f5ae765d304494cac750892bb80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f3428cafc13f5ae765d304494cac750892bb80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f3428cafc13f5ae765d304494cac750892bb80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f3428cafc13f5ae765d304494cac750892bb80/comments", "author": null, "committer": null, "parents": [{"sha": "f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1"}], "stats": {"total": 123, "additions": 52, "deletions": 71}, "files": [{"sha": "6804fe5d0f12030b361e6a6b9b02c3fa5b2f63d9", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -1,3 +1,8 @@\n+2011-11-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* configure.ac: Test libitm/configure.tgt to disable libitm.\n+\t* configure: Rebuild.\n+\n 2011-11-07  Aldy Hernandez  <aldyh@redhat.com>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "b9cf0f1d0ff02e2680575d186378d50186aa482a", "filename": "configure", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -3057,22 +3057,18 @@ if test x$enable_libgomp = x ; then\n     esac\n fi\n \n-# Disable libitm on non POSIX hosted systems.\n-if test x$enable_libitm = x ; then\n-    # Enable libitm by default on hosted POSIX systems.\n-    case \"${target}\" in\n-    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)\n-\t;;\n-    *-*-netbsd* | *-*-freebsd* | *-*-openbsd*)\n-\t;;\n-    *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11*)\n-\t;;\n-    *-*-darwin* | *-*-aix*)\n-\t;;\n-    *)\n+# Disable libitm on unsupported hosted systems.\n+if test x$enable_libitm = x; then\n+   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for libitm support\" >&5\n+$as_echo_n \"checking for libitm support... \" >&6; }\n+   if (. ${srcdir}/libitm/configure.tgt; test -n \"$UNSUPPORTED\"); then\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n \tnoconfigdirs=\"$noconfigdirs target-libitm\"\n-\t;;\n-    esac\n+   else\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+   fi\n fi\n \n # Disable libssp for some systems."}, {"sha": "0a30880ef98544978c1e2ab619c635e9c1dfea1e", "filename": "configure.ac", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -493,22 +493,15 @@ if test x$enable_libgomp = x ; then\n     esac\n fi\n \n-# Disable libitm on non POSIX hosted systems.\n-if test x$enable_libitm = x ; then\n-    # Enable libitm by default on hosted POSIX systems.\n-    case \"${target}\" in\n-    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)\n-\t;;\n-    *-*-netbsd* | *-*-freebsd* | *-*-openbsd*)\n-\t;;\n-    *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11*)\n-\t;;\n-    *-*-darwin* | *-*-aix*)\n-\t;;\n-    *)\n+# Disable libitm on unsupported hosted systems.\n+if test x$enable_libitm = x; then\n+   AC_MSG_CHECKING([for libitm support])\n+   if (. ${srcdir}/libitm/configure.tgt; test -n \"$UNSUPPORTED\"); then\n+\tAC_MSG_RESULT([no])\n \tnoconfigdirs=\"$noconfigdirs target-libitm\"\n-\t;;\n-    esac\n+   else\n+\tAC_MSG_RESULT([yes])\n+   fi\n fi\n \n # Disable libssp for some systems."}, {"sha": "f9624bb8ca0fb71ed152cda6a832c522103b8f9c", "filename": "libitm/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -1,3 +1,10 @@\n+2011-11-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* configure.ac: Exit if unsupported.\n+\t* configure: Rebuild.\n+\t* configure.tgt: Delete boilerplate from libgomp for unsupported\n+\ttargets.  Set UNSUPPORTED for unsupported targets.\n+\n 2011-11-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.tgt: Handle i386 like i[456]86."}, {"sha": "e6bc1aaa0dc061643c276e5b526d68409b97c329", "filename": "libitm/configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -17003,6 +17003,10 @@ _ACEOF\n \n # Get target configury.\n . ${srcdir}/configure.tgt\n+if test -n \"$UNSUPPORTED\"; then\n+  as_fn_error \"Configuration ${target} is unsupported.\" \"$LINENO\" 5\n+fi\n+\n CFLAGS=\"$save_CFLAGS $XCFLAGS\"\n \n # Check for __sync_val_compare_and_swap, but only after the target has"}, {"sha": "dea70387f0f2b03719bcae6613650fc7ef29b5dd", "filename": "libitm/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -224,6 +224,10 @@ LIBITM_CHECK_SIZE_T_MANGLING\n \n # Get target configury.\n . ${srcdir}/configure.tgt\n+if test -n \"$UNSUPPORTED\"; then\n+  AC_MSG_ERROR([Configuration ${target} is unsupported.])\n+fi\n+\n CFLAGS=\"$save_CFLAGS $XCFLAGS\"\n \n # Check for __sync_val_compare_and_swap, but only after the target has"}, {"sha": "dd7c78bd02789b4e3c704522352b38d8e83a63b0", "filename": "libitm/configure.tgt", "status": "modified", "additions": 13, "deletions": 41, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f3428cafc13f5ae765d304494cac750892bb80/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=01f3428cafc13f5ae765d304494cac750892bb80", "patch": "@@ -28,7 +28,7 @@\n #  XLDFLAGS\t\tAdd extra link flags to use.\n \n # Optimize TLS usage by avoiding the overhead of dynamic allocation.\n-if test $gcc_cv_have_tls = yes ; then\n+if test \"$gcc_cv_have_tls\" = yes ; then\n   case \"${target}\" in\n \n     # For x86, we use slots in the TCB head for most of our TLS.\n@@ -47,10 +47,6 @@ fi\n # work out any special compilation flags as necessary.\n case \"${target_cpu}\" in\n   alpha*)\tARCH=alpha ;;\n-  ia64*)\tARCH=ia64 ;;\n-  mips*)\tARCH=mips ;;\n-  powerpc*)\tARCH=powerpc ;;\n-  s390*)\tARCH=s390 ;;\n \n   i[3456]86)\n \tcase \" ${CC} ${CFLAGS} \" in\n@@ -75,57 +71,33 @@ case \"${target_cpu}\" in\n \tARCH=x86\n \t;;\n \n-  sparcv9 | sparc64)\n-\t# Note that sparcv7 and sparcv8 is not included here.  We need cas.\n-\techo \"int i;\" > conftestx.c\n-\tif ${CC} ${CFLAGS} -c -o conftestx.o conftestx.c > /dev/null 2>&1; then\n-\t  case \"`/usr/bin/file conftestx.o`\" in\n-\t    *32-bit*)\n-\t      case \" ${CC} ${CFLAGS}\" in\n-\t\t*\" -mcpu=ultrasparc\"*)\n-\t\t  ;;\n-\t\t*)\n-\t\t  XCFLAGS=\"${XCFLAGS} -mcpu=v9\"\n-\t\t  ;;\n-\t      esac\n-\t      ;;\n-\t  esac\n-\tfi\n-\trm -f conftestx.c conftestx.o\n-\tARCH=sparc\n-\t;;\n-\n   *)\n \tARCH=\"${target_cpu}\"\n \t;;\n esac\n-  \n+\n+# For the benefit of top-level configure, determine if the cpu is supported.\n+test -d ${srcdir}/$ARCH || UNSUPPORTED=1\n+\n # Since we require POSIX threads, assume a POSIX system by default.\n config_path=\"$ARCH posix generic\"\n \n # Other system configury\n case \"${target}\" in\n   *-*-linux*)\n-\tif test $enable_linux_futex = yes; then\n+\tif test \"$enable_linux_futex\" = yes; then\n \t  config_path=\"linux/$ARCH linux $config_path\"\n \tfi\n \t;;\n \n-  *-*-hpux11*)\n-\t# HPUX v11.x requires -lrt to resolve sem_init in libgomp.la\n-\tXLDFLAGS=\"${XLDFLAGS} -lrt\"\n-\t;;\n-\n-  *-*-mingw32*)\n-\tconfig_path=\"$ARCH mingw32 posix generic\"\n-\t;;\n-\n-  *-*-solaris2.[56]*)\n-\tconfig_path=\"$ARCH posix95 posix generic\"\n-\tXLDFLAGS=\"${XLDFLAGS} -lposix4\"\n+  *-*-gnu* | *-*-k*bsd*-gnu \\\n+  | *-*-netbsd* | *-*-freebsd* | *-*-openbsd* \\\n+  | *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11* \\\n+  | *-*-darwin* | *-*-aix*)\n+\t# POSIX system.  The OS is supported.\n \t;;\n \n-  *-*-darwin*)\n-\tconfig_path=\"$ARCH bsd posix generic\"\n+  *)\t# Non-POSIX, or embedded system\n+\tUNSUPPORTED=1\n \t;;\n esac"}]}