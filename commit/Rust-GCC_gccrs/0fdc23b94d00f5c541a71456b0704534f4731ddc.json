{"sha": "0fdc23b94d00f5c541a71456b0704534f4731ddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkYzIzYjk0ZDAwZjVjNTQxYTcxNDU2YjA3MDQ1MzRmNDczMWRkYw==", "commit": {"author": {"name": "Lee Millward", "email": "lee.millward@gmail.com", "date": "2006-06-25T11:07:05Z"}, "committer": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-06-25T11:07:05Z"}, "message": "re PR c++/28051 (ICE on invalid conversion operator)\n\n\tPR c++/28051\n\t* mangle.c (mangle_conv_op_name_for_type): Check for\n\tinvalid types.\n\t*name-lookup.c (push_class_level_binding): Robustify.\n\t(do_class_using_decl): Return early if name is error_mark_node.\n\nFrom-SVN: r114985", "tree": {"sha": "d143af69c41e1e11781a2936d5748d73ac647365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d143af69c41e1e11781a2936d5748d73ac647365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fdc23b94d00f5c541a71456b0704534f4731ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdc23b94d00f5c541a71456b0704534f4731ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdc23b94d00f5c541a71456b0704534f4731ddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdc23b94d00f5c541a71456b0704534f4731ddc/comments", "author": {"login": "lee-m", "id": 1028098, "node_id": "MDQ6VXNlcjEwMjgwOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1028098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lee-m", "html_url": "https://github.com/lee-m", "followers_url": "https://api.github.com/users/lee-m/followers", "following_url": "https://api.github.com/users/lee-m/following{/other_user}", "gists_url": "https://api.github.com/users/lee-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/lee-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lee-m/subscriptions", "organizations_url": "https://api.github.com/users/lee-m/orgs", "repos_url": "https://api.github.com/users/lee-m/repos", "events_url": "https://api.github.com/users/lee-m/events{/privacy}", "received_events_url": "https://api.github.com/users/lee-m/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8df7d4395aea856c396996e16c8b2986041b11f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df7d4395aea856c396996e16c8b2986041b11f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df7d4395aea856c396996e16c8b2986041b11f1"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "dae7f43830df11c9e3a4d0dd1d4a9eccad71c877", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0fdc23b94d00f5c541a71456b0704534f4731ddc", "patch": "@@ -1,3 +1,11 @@\n+2006-06-25  Lee Millward  <lee.millward@gmail.com>\n+\n+\tPR c++/28051\n+\t* mangle.c (mangle_conv_op_name_for_type): Check for\n+\tinvalid types.\n+\t* name-lookup.c (push_class_level_binding): Robustify.\n+\t(do_class_using_decl): Return early if name is error_mark_node.\n+\t\n 2006-06-23  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR c++/28114"}, {"sha": "8c8eff928057cea8b25c5d77d0d51b700174216c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=0fdc23b94d00f5c541a71456b0704534f4731ddc", "patch": "@@ -2816,6 +2816,9 @@ mangle_conv_op_name_for_type (const tree type)\n   void **slot;\n   tree identifier;\n \n+  if (type == error_mark_node)\n+    return error_mark_node;\n+\n   if (conv_type_names == NULL)\n     conv_type_names = htab_create_ggc (31, &hash_type, &compare_type, NULL);\n "}, {"sha": "ea985e418b16940938206a9523b07aaa145c9a9d", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=0fdc23b94d00f5c541a71456b0704534f4731ddc", "patch": "@@ -2609,6 +2609,9 @@ push_class_level_binding (tree name, tree x)\n   if (!class_binding_level)\n     POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, true);\n \n+  if (name == error_mark_node)\n+    POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, false);\n+\n   /* Check for invalid member names.  */\n   gcc_assert (TYPE_BEING_DEFINED (current_class_type));\n   /* We could have been passed a tree list if this is an ambiguous\n@@ -2763,6 +2766,9 @@ do_class_using_decl (tree scope, tree name)\n   tree base_binfo;\n   int i;\n \n+  if (name == error_mark_node)\n+    return NULL_TREE;\n+\n   if (!scope || !TYPE_P (scope))\n     {\n       error (\"using-declaration for non-member at class scope\");"}, {"sha": "09a62657b6febfb088c895d83bf05681057beae8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fdc23b94d00f5c541a71456b0704534f4731ddc", "patch": "@@ -1,3 +1,8 @@\n+2006-06-25  Lee Millward  <lee.millward@gmail.com>\n+\n+\tPR c++/28051\n+\t* g++.dg/template/using13.C: New test.\n+\t\n 2006-06-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/28081"}, {"sha": "3f86ede3770fd75fe384befb169b3fd1e7940007", "filename": "gcc/testsuite/g++.dg/template/using13.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc23b94d00f5c541a71456b0704534f4731ddc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing13.C?ref=0fdc23b94d00f5c541a71456b0704534f4731ddc", "patch": "@@ -0,0 +1,11 @@\n+//PR c++/28051\n+\n+template<int> struct A {};\n+\n+template<int N> struct B : A<N>\n+{\n+    using A<N>::operator typename A<N>::X; // { dg-error \"no type named\" }\n+};\n+\n+B<0> b;\n+"}]}