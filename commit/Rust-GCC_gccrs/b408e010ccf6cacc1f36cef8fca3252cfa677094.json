{"sha": "b408e010ccf6cacc1f36cef8fca3252cfa677094", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQwOGUwMTBjY2Y2Y2FjYzFmMzZjZWY4ZmNhMzI1MmNmYTY3NzA5NA==", "commit": {"author": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2020-03-15T12:58:30Z"}, "committer": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2020-03-15T12:59:24Z"}, "message": "driver: Fix redundant descriptions in options\n\nAddresses issues where the two-column format of options descriptions was\nused, but the columns were separated by spaces rather than a single tab,\ncausing the help output to be more verbose than intended.\n\ngcc/ChangeLog:\n\n2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n\n\t* common.opt: Avoid redundancy in the help text.\n\t* config/arc/arc.opt: Likewise.\n\t* config/cr16/cr16.opt: Likewise.\n\ngcc/c-family/ChangeLog:\n\n2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n\n\t* c.opt: Avoid redundancy in the help text.\n\ngcc/fortran/ChangeLog:\n\n2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n\n\t* lang.opt: Avoid redundancy in the help text.\n\ngcc/testsuite/ChangeLog:\n\n2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n\n\t* gcc.misc-tests/help.exp: Adapt to new output for\n\t-Walloc-size-larger-than= option.", "tree": {"sha": "1042c4c45e08050bb4225b0fa108bc9f65c3b924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1042c4c45e08050bb4225b0fa108bc9f65c3b924"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b408e010ccf6cacc1f36cef8fca3252cfa677094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b408e010ccf6cacc1f36cef8fca3252cfa677094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b408e010ccf6cacc1f36cef8fca3252cfa677094", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b408e010ccf6cacc1f36cef8fca3252cfa677094/comments", "author": null, "committer": null, "parents": [{"sha": "9c3cdb43c2bdaf8a8d2e62db010b04f6086d76b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3cdb43c2bdaf8a8d2e62db010b04f6086d76b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3cdb43c2bdaf8a8d2e62db010b04f6086d76b7"}], "stats": {"total": 71, "additions": 45, "deletions": 26}, "files": [{"sha": "af96a9bbb81c1056e7e657592707c7e2146ff848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -1,3 +1,9 @@\n+2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* common.opt: Avoid redundancy in the help text.\n+\t* config/arc/arc.opt: Likewise.\n+\t* config/cr16/cr16.opt: Likewise.\n+\n 2020-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/93566"}, {"sha": "f03e44feabd0b562b43509538726fa0db252c7c6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -1,3 +1,7 @@\n+2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* c.opt: Avoid redundancy in the help text.\n+\n 2020-03-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/93958 - add missing -std=gnu++20."}, {"sha": "a1e0f4cdc3a4c174aa16114fbe1ba229e29173cf", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -309,16 +309,16 @@ Warn on any use of alloca.\n \n Walloc-size-larger-than=\n C ObjC C++ LTO ObjC++ Var(warn_alloc_size_limit) Joined Host_Wide_Int ByteSize Warning Init(HOST_WIDE_INT_MAX)\n--Walloc-size-larger-than=<bytes> Warn for calls to allocation functions that\n+-Walloc-size-larger-than=<bytes>\tWarn for calls to allocation functions that\n attempt to allocate objects larger than the specified number of bytes.\n \n Wno-alloc-size-larger-than\n C ObjC C++ LTO ObjC++ Alias(Walloc-size-larger-than=,18446744073709551615EiB,none) Warning\n--Wno-alloc-size-larger-than Disable Walloc-size-larger-than= warning.  Equivalent to Walloc-size-larger-than=<SIZE_MAX> or larger.\n+Disable Walloc-size-larger-than= warning.  Equivalent to Walloc-size-larger-than=<SIZE_MAX> or larger.\n \n Walloc-zero\n C ObjC C++ ObjC++ Var(warn_alloc_zero) Warning\n--Walloc-zero Warn for calls to allocation functions that specify zero bytes.\n+Warn for calls to allocation functions that specify zero bytes.\n \n Walloca-larger-than=\n C ObjC C++ LTO ObjC++ Var(warn_alloca_limit) Warning Joined Host_Wide_Int ByteSize Init(HOST_WIDE_INT_MAX)\n@@ -328,7 +328,7 @@ alloca, and on bounded uses of alloca whose bound can be larger than\n \n Wno-alloca-larger-than\n C ObjC C++ LTO ObjC++ Alias(Walloca-larger-than=,18446744073709551615EiB,none) Warning\n--Wno-alloca-larger-than Disable Walloca-larger-than= warning.  Equivalent to Walloca-larger-than=<SIZE_MAX> or larger.\n+Disable Walloca-larger-than= warning.  Equivalent to Walloca-larger-than=<SIZE_MAX> or larger.\n \n Warray-bounds\n LangEnabledBy(C ObjC C++ LTO ObjC++)\n@@ -1252,7 +1252,7 @@ larger than <number> bytes.\n \n Wno-vla-larger-than\n C ObjC C++ LTO ObjC++ Alias(Wvla-larger-than=,18446744073709551615EiB,none) Warning\n--Wno-vla-larger-than Disable Wvla-larger-than= warning.  Equivalent to Wvla-larger-than=<SIZE_MAX> or larger.\n+Disable Wvla-larger-than= warning.  Equivalent to Wvla-larger-than=<SIZE_MAX> or larger.\n \n Wvolatile\n C++ ObjC++ Var(warn_volatile) Warning\n@@ -1313,15 +1313,15 @@ Enforce class member access control semantics.\n \n fada-spec-parent=\n C ObjC C++ ObjC++ RejectNegative Joined Var(ada_specs_parent)\n--fada-spec-parent=unit  Dump Ada specs as child units of given parent.\n+-fada-spec-parent=unit\tDump Ada specs as child units of given parent.\n \n faligned-new\n C++ ObjC++ Alias(faligned-new=,1,0)\n Support C++17 allocation of over-aligned types.\n \n faligned-new=\n C++ ObjC++ Joined RejectNegative Var(aligned_new_threshold) UInteger Init(-1)\n--faligned-new=<N> Use C++17 over-aligned type allocation for alignments greater than N.\n+-faligned-new=<N>\tUse C++17 over-aligned type allocation for alignments greater than N.\n \n fall-virtual\n C++ ObjC++ WarnRemoved\n@@ -1515,7 +1515,7 @@ Permit '$' as an identifier character.\n \n fmacro-prefix-map=\n C ObjC C++ ObjC++ Joined RejectNegative\n--fmacro-prefix-map=<old>=<new> Map one directory name to another in __FILE__, __BASE_FILE__, and __builtin_FILE().\n+-fmacro-prefix-map=<old>=<new>\tMap one directory name to another in __FILE__, __BASE_FILE__, and __builtin_FILE().\n \n fdump-ada-spec\n C ObjC C++ ObjC++ RejectNegative Var(flag_dump_ada_spec)\n@@ -1530,7 +1530,7 @@ C++ ObjC++ Var(flag_elide_constructors) Init(1)\n \n felide-type\n C++ ObjC++ Var(flag_elide_type) Init(1)\n--fno-elide-type Do not elide common elements in template comparisons.\n+Do not elide common elements in template comparisons.\n \n fenforce-eh-specs\n C++ ObjC++ Var(flag_enforce_eh_specs) Init(1)\n@@ -1778,11 +1778,11 @@ C ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger\n \n ftrack-macro-expansion=\n C ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger\n--ftrack-macro-expansion=<0|1|2>  Track locations of tokens coming from macro expansion and display them in error messages.\n+-ftrack-macro-expansion=<0|1|2>\tTrack locations of tokens coming from macro expansion and display them in error messages.\n \n fpretty-templates\n C++ ObjC++ Var(flag_pretty_templates) Init(1)\n--fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments.\n+Do not pretty-print template specializations as the template signature followed by the arguments.\n \n fprintf-return-value\n C ObjC C++ ObjC++ LTO Optimization Var(flag_printf_return_value) Init(1)"}, {"sha": "4368910cb54171fe6f8d9a40c48ab77856fd4a9a", "filename": "gcc/common.opt", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -1196,11 +1196,11 @@ Common RejectNegative Joined Var(common_deferred_options) Defer\n \n fdebug-prefix-map=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fdebug-prefix-map=<old>=<new> Map one directory name to another in debug information.\n+-fdebug-prefix-map=<old>=<new>\tMap one directory name to another in debug information.\n \n ffile-prefix-map=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--ffile-prefix-map=<old>=<new> Map one directory name to another in compilation result.\n+-ffile-prefix-map=<old>=<new>\tMap one directory name to another in compilation result.\n \n fdebug-types-section\n Common Report Var(flag_debug_types_section) Init(0)\n@@ -1311,7 +1311,7 @@ Enum(diagnostic_url_rule) String(auto) Value(DIAGNOSTICS_URL_AUTO)\n \n fdiagnostics-format=\n Common Joined RejectNegative Enum(diagnostics_output_format)\n--fdiagnostics-format=[text|json] Select output format.\n+-fdiagnostics-format=[text|json]\tSelect output format.\n \n ; Required for these enum values.\n SourceInclude\n@@ -1368,11 +1368,11 @@ Set minimum width of left margin of source code when showing source.\n \n fdisable-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fdisable-[tree|rtl|ipa]-<pass>=range1+range2 disables an optimization pass.\n+-fdisable-[tree|rtl|ipa]-<pass>=range1+range2\tDisable an optimization pass.\n \n fenable-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fenable-[tree|rtl|ipa]-<pass>=range1+range2 enables an optimization pass.\n+-fenable-[tree|rtl|ipa]-<pass>=range1+range2\tEnable an optimization pass.\n \n fdump-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n@@ -1755,11 +1755,11 @@ Instrument function entry and exit with profiling calls.\n \n finstrument-functions-exclude-function-list=\n Common RejectNegative Joined\n--finstrument-functions-exclude-function-list=name,...  Do not instrument listed functions.\n+-finstrument-functions-exclude-function-list=name,...\tDo not instrument listed functions.\n \n finstrument-functions-exclude-file-list=\n Common RejectNegative Joined\n--finstrument-functions-exclude-file-list=filename,...  Do not instrument functions listed in files.\n+-finstrument-functions-exclude-file-list=filename,...\tDo not instrument functions listed in files.\n \n fipa-cp\n Common Report Var(flag_ipa_cp) Optimization\n@@ -2020,11 +2020,11 @@ Support synchronous non-call exceptions.\n \n foffload=\n Common Driver Joined MissingArgError(options or targets missing after %qs)\n--foffload=<targets>=<options>  Specify offloading targets and options for them.\n+-foffload=<targets>=<options>\tSpecify offloading targets and options for them.\n \n foffload-abi=\n Common Joined RejectNegative Enum(offload_abi) Var(flag_offload_abi) Init(OFFLOAD_ABI_UNSET)\n--foffload-abi=[lp64|ilp32]     Set the ABI to use in an offload compiler.\n+-foffload-abi=[lp64|ilp32]\tSet the ABI to use in an offload compiler.\n \n Enum\n Name(offload_abi) Type(enum offload_abi) UnknownError(unknown offload ABI %qs)\n@@ -2182,7 +2182,7 @@ Enum(profile_reproducibility) String(multithreaded) Value(PROFILE_REPRODUCIBILIT\n \n fprofile-reproducible\n Common Joined RejectNegative Var(flag_profile_reproducible) Enum(profile_reproducibility) Init(PROFILE_REPRODUCIBILITY_SERIAL)\n--fprofile-reproducible=[serial|parallel-runs|multithreaded] Control level of reproducibility of profile gathered by -fprofile-generate.\n+-fprofile-reproducible=[serial|parallel-runs|multithreaded]\tControl level of reproducibility of profile gathered by -fprofile-generate.\n \n Enum\n Name(profile_update) Type(enum profile_update) UnknownError(unknown profile update method %qs)"}, {"sha": "c6c64afa59c373ff00050da0960fb4c8c4650210", "filename": "gcc/config/arc/arc.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fconfig%2Farc%2Farc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fconfig%2Farc%2Farc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.opt?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -59,7 +59,7 @@ Force all calls to be made via a jli instruction.\n \n mmpy-option=\n Target RejectNegative Joined Enum(arc_mpy) Var(arc_mpy_option) Init(DEFAULT_arc_mpy_option)\n--mmpy-option=MPY Compile ARCv2 code with a multiplier design option.\n+-mmpy-option=MPY\tCompile ARCv2 code with a multiplier design option.\n \n Enum\n Name(arc_mpy) Type(int)\n@@ -251,7 +251,7 @@ Cost to assume for a multiply instruction, with 4 being equal to a normal insn.\n \n mtune=\n Target RejectNegative ToLower Joined Var(arc_tune) Enum(arc_tune_attr) Init(ARC_TUNE_NONE)\n--mcpu=TUNE Tune code for given ARC variant.\n+-mtune=TUNE\tTune code for given ARC variant.\n \n Enum\n Name(arc_tune_attr) Type(int)"}, {"sha": "f82c1d633fb19bec6eea068d81b5dac89e979701", "filename": "gcc/config/cr16/cr16.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fconfig%2Fcr16%2Fcr16.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Fconfig%2Fcr16%2Fcr16.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.opt?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -20,7 +20,7 @@\n \n msim\n Target\n--msim   Use simulator runtime.\n+Use simulator runtime.\n \n mbit-ops\n Target Report Mask(BIT_OPS)"}, {"sha": "dd0487d23aabea73bce4a90dc5727bce352d4d24", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -1,3 +1,7 @@\n+2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* lang.opt: Avoid redundancy in the help text.\n+\n 2020-03-12  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/94120"}, {"sha": "da4b1aa879ae9f87271dd46f557b6e901119daab", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -415,7 +415,7 @@ Produce a warning at runtime if a array temporary has been created for a procedu\n \n fconvert=\n Fortran RejectNegative Joined Enum(gfc_convert) Var(flag_convert) Init(GFC_FLAG_CONVERT_NATIVE)\n--fconvert=<big-endian|little-endian|native|swap> The endianness used for unformatted files.\n+-fconvert=<big-endian|little-endian|native|swap>\tThe endianness used for unformatted files.\n \n Enum\n Name(gfc_convert) Type(enum gfc_convert) UnknownError(Unrecognized option to endianness value: %qs)"}, {"sha": "02205f18219d1261b55ae1215f167116b049e3a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -1,3 +1,8 @@\n+2020-03-15  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* gcc.misc-tests/help.exp: Adapt to new output for\n+\t-Walloc-size-larger-than= option.\n+\n 2020-03-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89229"}, {"sha": "bcb62e09b6a97486a7c2b9f46d53944d414275a8", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b408e010ccf6cacc1f36cef8fca3252cfa677094/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=b408e010ccf6cacc1f36cef8fca3252cfa677094", "patch": "@@ -115,7 +115,7 @@ check_for_options c \"-Q --help=warnings\" {\n # Verify that an option that expects a byte-size argument is shown with\n # a meaningful byte-size argument as the value.\n check_for_options c \"-Q --help=warnings\" {\n--Walloc-size-larger-than=[ \\t]+[1-9][0-9]+ bytes\n+-Walloc-size-larger-than=<bytes>[ \\t]+[1-9][0-9]+ bytes\n -Wlarger-than=[^\\n\\r]+[1-9][0-9]+ bytes\n } \"\" \"\"\n "}]}