{"sha": "5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQyMWZhZThiMTdjNzQwMWYzYTRhYzViOWY0MTRhNDdmN2JkYTM3OQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-06-18T13:38:42Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-06-18T15:51:01Z"}, "message": "c++: ICE in requires-expressions with invalid args [PR95735]\n\nThis ICE-on-invalid goes back to GCC 6.  In finish_template_variable,\nif coerce_innermost_template_parms returns error_mark_node, we pass\nit down to constraints_satisfied_p and that error_mark_node flows\ndown to various satisfy_* functions and then to various tsubst_*\nfunctions, where we crash.  diagnose_constraints also doesn't cope\nwith error arglist, so I think we should just return as in the\npatch below.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95735\n\t* pt.c (finish_template_variable): Return if\n\tcoerce_innermost_template_parms return error_mark_node.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95735\n\t* g++.dg/cpp2a/concepts-err2.C: New test.", "tree": {"sha": "b88d96cc1e3a715222c69b501a1d96d9815b1ce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b88d96cc1e3a715222c69b501a1d96d9815b1ce4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5421fae8b17c7401f3a4ac5b9f414a47f7bda379/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "634e6f49101c92ccb83ad3d65f975162582c5dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634e6f49101c92ccb83ad3d65f975162582c5dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634e6f49101c92ccb83ad3d65f975162582c5dea"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "1c0759edcae09d3dc84f457648c3e5a740710663", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5421fae8b17c7401f3a4ac5b9f414a47f7bda379/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5421fae8b17c7401f3a4ac5b9f414a47f7bda379/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "patch": "@@ -10154,6 +10154,8 @@ finish_template_variable (tree var, tsubst_flags_t complain)\n   arglist = coerce_innermost_template_parms (parms, arglist, templ, complain,\n \t\t\t\t\t     /*req_all*/true,\n \t\t\t\t\t     /*use_default*/true);\n+  if (arglist == error_mark_node)\n+    return error_mark_node;\n \n   if (flag_concepts && !constraints_satisfied_p (templ, arglist))\n     {"}, {"sha": "c0372a6096b2892c9353882d44e70698f52ac8dc", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-err2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5421fae8b17c7401f3a4ac5b9f414a47f7bda379/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-err2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5421fae8b17c7401f3a4ac5b9f414a47f7bda379/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-err2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-err2.C?ref=5421fae8b17c7401f3a4ac5b9f414a47f7bda379", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/95735\n+// { dg-do compile { target concepts } }\n+\n+template <auto F>\n+    requires requires { F(); }\n+bool v{};\n+\n+void f() {\n+    int x;\n+    static_assert(v<[&] { x++; }>); // { dg-error \"not a constant expression\" }\n+}"}]}