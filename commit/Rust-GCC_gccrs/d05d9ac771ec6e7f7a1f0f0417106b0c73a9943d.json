{"sha": "d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1ZDlhYzc3MWVjNmU3ZjdhMWYwZjA0MTcxMDZiMGM3M2E5OTQzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-09-26T20:06:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-09-26T20:06:37Z"}, "message": "re PR fortran/23677 (-fno-automatic does not accept legal save statements)\n\n\tPR fortran/23677\n\t* symbol.c (gfc_is_var_automatic): Return true if character length\n\tis non-constant rather than constant.\n\t* resolve.c (gfc_resolve): Don't handle !gfc_option.flag_automatic\n\there.\n\t* options.c (gfc_post_options): Set gfc_option.flag_max_stack_var_size\n\tto 0 for -fno-automatic.\n\n\t* gfortran.fortran-torture/execute/save_1.f90: New test.\n\t* gfortran.dg/save_1.f90: New test.\n\nFrom-SVN: r104661", "tree": {"sha": "e2d56418b775f560e8f4f39554652bf96430a511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2d56418b775f560e8f4f39554652bf96430a511"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d674eb2f5c198a128ea401681e2f0937587e6369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d674eb2f5c198a128ea401681e2f0937587e6369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d674eb2f5c198a128ea401681e2f0937587e6369"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "a376443fc9f230b441153ad518d22c92ab3c5204", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -1,3 +1,13 @@\n+2005-09-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/23677\n+\t* symbol.c (gfc_is_var_automatic): Return true if character length\n+\tis non-constant rather than constant.\n+\t* resolve.c (gfc_resolve): Don't handle !gfc_option.flag_automatic\n+\there.\n+\t* options.c (gfc_post_options): Set gfc_option.flag_max_stack_var_size\n+\tto 0 for -fno-automatic.\n+\n 2005-09-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/16861"}, {"sha": "48df6746d2d817fd09f536ea74695c6fea76af91", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -223,6 +223,10 @@ gfc_post_options (const char **pfilename)\n   if (gfc_option.flag_second_underscore == -1)\n     gfc_option.flag_second_underscore = gfc_option.flag_f2c;\n \n+  /* Implement -fno-automatic as -fmax-stack-var-size=0.  */\n+  if (!gfc_option.flag_automatic)\n+    gfc_option.flag_max_stack_var_size = 0;\n+\n   return false;\n }\n "}, {"sha": "a048da59fc78ba84f83b551d163186ae0aff836c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -5107,7 +5107,7 @@ gfc_resolve (gfc_namespace * ns)\n \n   gfc_traverse_ns (ns, resolve_values);\n \n-  if (!gfc_option.flag_automatic || ns->save_all)\n+  if (ns->save_all)\n     gfc_save_all (ns);\n \n   iter_stack = NULL;"}, {"sha": "de2de4b6a603601cc426747611575281bc51d982", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -2345,7 +2345,7 @@ gfc_is_var_automatic (gfc_symbol * sym)\n   /* Check for non-constant length character variables.  */\n   if (sym->ts.type == BT_CHARACTER\n       && sym->ts.cl\n-      && gfc_is_constant_expr (sym->ts.cl->length))\n+      && !gfc_is_constant_expr (sym->ts.cl->length))\n     return true;\n   return false;\n }"}, {"sha": "2e060cb900e15ed16aad04b44622b4dd98a357e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -1,3 +1,9 @@\n+2005-09-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/23677\n+\t* gfortran.fortran-torture/execute/save_1.f90: New test.\n+\t* gfortran.dg/save_1.f90: New test.\n+\n 2005-09-26  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.target/i386/builtin-apply-mmx.c: New test."}, {"sha": "614986277a85aaeafc0e9bf2383c3fa850c490d4", "filename": "gcc/testsuite/gfortran.dg/save_1.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2Fgfortran.dg%2Fsave_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2Fgfortran.dg%2Fsave_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsave_1.f90?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -0,0 +1,30 @@\n+! { dg-options \"-O2 -fno-automatic\" }\n+      subroutine foo (b)\n+\tlogical b\n+\tinteger i, j\n+\tcharacter*24 s\n+\tsave i\n+\tif (b) then\n+\t  i = 26\n+\t  j = 131\n+\t  s = 'This is a test string'\n+\telse\n+\t  if (i .ne. 26 .or. j .ne. 131) call abort\n+\t  if (s .ne. 'This is a test string') call abort\n+\tend if\n+      end subroutine foo\n+      subroutine bar (s)\n+\tcharacter*42 s\n+\tif (s .ne. '0123456789012345678901234567890123456') call abort\n+\tcall foo (.false.)\n+      end subroutine bar\n+      subroutine baz\n+\tcharacter*42 s\n+\t! Just clobber stack a little bit.\n+\ts = '0123456789012345678901234567890123456'\n+\tcall bar (s)\n+      end subroutine baz\n+      call foo (.true.)\n+      call baz\n+      call foo (.false.)\n+      end"}, {"sha": "c838baa9874f724cab23b4c4df7750d0751db990", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/save_1.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fsave_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fsave_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fsave_1.f90?ref=d05d9ac771ec6e7f7a1f0f0417106b0c73a9943d", "patch": "@@ -0,0 +1,29 @@\n+      subroutine foo (b)\n+\tlogical b\n+\tinteger i, j\n+\tcharacter*24 s\n+\tsave\n+\tif (b) then\n+\t  i = 26\n+\t  j = 131\n+\t  s = 'This is a test string'\n+\telse\n+\t  if (i .ne. 26 .or. j .ne. 131) call abort\n+\t  if (s .ne. 'This is a test string') call abort\n+\tend if\n+      end subroutine foo\n+      subroutine bar (s)\n+\tcharacter*42 s\n+\tif (s .ne. '0123456789012345678901234567890123456') call abort\n+\tcall foo (.false.)\n+      end subroutine bar\n+      subroutine baz\n+\tcharacter*42 s\n+\t! Just clobber stack a little bit.\n+\ts = '0123456789012345678901234567890123456'\n+\tcall bar (s)\n+      end subroutine baz\n+      call foo (.true.)\n+      call baz\n+      call foo (.false.)\n+      end"}]}