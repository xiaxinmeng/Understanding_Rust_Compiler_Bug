{"sha": "e0697153ed8242c02e71b878b12a12a8e46f5aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2OTcxNTNlZDgyNDJjMDJlNzFiODc4YjEyYTEyYThlNDZmNWFhMA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-04-24T10:01:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T10:01:21Z"}, "message": "prj.adb, [...] (Language_Index): renamed to Language_Ptr to better reflect its new implementation.\n\n2009-04-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb (Language_Index): renamed\n\tto Language_Ptr to better reflect its new implementation.\n\t(Project_Data.First_Languages_Processing): renamed to Languages now\n\tthat the field with that name is no longer used\n\t(Project_Data.Languages): removed, no longer used, and duplicates\n\tinformation already available through First_Language_Processing.\n\t(Prj.Language_Index): now an actual pointer, instead of an index into\n\ta table. This makes the list somewhat more obvious, but more importantly\n\tremoves the need to pass a pointer to the project_tree_data in a few\n\tplaces, and makes accessing the attributes of a languages more\n\tefficient.\n\nFrom-SVN: r146684", "tree": {"sha": "f34b247255db6184ef5ebd8addab65ee756ce630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f34b247255db6184ef5ebd8addab65ee756ce630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0697153ed8242c02e71b878b12a12a8e46f5aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0697153ed8242c02e71b878b12a12a8e46f5aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0697153ed8242c02e71b878b12a12a8e46f5aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0697153ed8242c02e71b878b12a12a8e46f5aa0/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e762c6f4c649f2d59374e9b48702c80dbf49b652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e762c6f4c649f2d59374e9b48702c80dbf49b652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e762c6f4c649f2d59374e9b48702c80dbf49b652"}], "stats": {"total": 750, "additions": 284, "deletions": 466}, "files": [{"sha": "ae01f1c46d5c07873e53692e8be15698a646acb2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0697153ed8242c02e71b878b12a12a8e46f5aa0", "patch": "@@ -1,3 +1,17 @@\n+2009-04-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb (Language_Index): renamed\n+\tto Language_Ptr to better reflect its new implementation.\n+\t(Project_Data.First_Languages_Processing): renamed to Languages now\n+\tthat the field with that name is no longer used\n+\t(Project_Data.Languages): removed, no longer used, and duplicates\n+\tinformation already available through First_Language_Processing.\n+\t(Prj.Language_Index): now an actual pointer, instead of an index into\n+\ta table. This makes the list somewhat more obvious, but more importantly\n+\tremoves the need to pass a pointer to the project_tree_data in a few\n+\tplaces, and makes accessing the attributes of a languages more\n+\tefficient.\n+\n 2009-04-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n             Thomas Quinot  <quinot@adacore.com>\n "}, {"sha": "9778113ec65030c4bd5059c3b9429831e0c7d116", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=e0697153ed8242c02e71b878b12a12a8e46f5aa0", "patch": "@@ -1204,8 +1204,7 @@ package body Prj.Env is\n                while Source /= No_Source loop\n                   Src_Data := In_Tree.Sources.Table (Source);\n \n-                  if In_Tree.Languages_Data.Table\n-                    (In_Tree.Sources.Table (Source).Language).Name = Language\n+                  if In_Tree.Sources.Table (Source).Language.Name = Language\n                       and then not Src_Data.Locally_Removed\n                       and then Src_Data.Replaced_By = No_Source\n                       and then Src_Data.Path.Name /= No_Path\n@@ -1215,12 +1214,10 @@ package body Prj.Env is\n \n                         if Src_Data.Kind = Spec then\n                            Suffix :=\n-                             In_Tree.Languages_Data.Table\n-                               (Src_Data.Language).Config.Mapping_Spec_Suffix;\n+                             Src_Data.Language.Config.Mapping_Spec_Suffix;\n                         else\n                            Suffix :=\n-                             In_Tree.Languages_Data.Table\n-                               (Src_Data.Language).Config.Mapping_Body_Suffix;\n+                             Src_Data.Language.Config.Mapping_Body_Suffix;\n                         end if;\n \n                         if Suffix /= No_File then"}, {"sha": "6b2ca4cf54547dab1877fd5d7813a385843b5edd", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 203, "deletions": 365, "changes": 568, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e0697153ed8242c02e71b878b12a12a8e46f5aa0", "patch": "@@ -230,7 +230,7 @@ package body Prj.Nmsc is\n       In_Tree             : Project_Tree_Ref;\n       Project             : Project_Id;\n       Lang                : Name_Id;\n-      Lang_Id             : Language_Index;\n+      Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n       Display_File        : File_Name_Type;\n@@ -362,13 +362,6 @@ package body Prj.Nmsc is\n    --  Find the path names of the source files in the Source_Names table\n    --  in the source directories and record those that are Ada sources.\n \n-   function Get_Language_Processing_From_Lang\n-     (In_Tree : Project_Tree_Ref;\n-      Data    : Project_Data;\n-      Lang    : Name_List_Index) return Language_Index;\n-   --  Return the language_processing description associated for the given\n-   --  language.\n-\n    function Compute_Directory_Last (Dir : String) return Natural;\n    --  Return the index of the last significant character in Dir. This is used\n    --  to avoid duplicate '/' (slash) characters at the end of directory names.\n@@ -434,7 +427,7 @@ package body Prj.Nmsc is\n       Data                  : in out Project_Data;\n       File_Name             : File_Name_Type;\n       Alternate_Languages   : out Alternate_Language_Id;\n-      Language              : out Language_Index;\n+      Language              : out Language_Ptr;\n       Language_Name         : out Name_Id;\n       Display_Language_Name : out Name_Id;\n       Unit                  : out Name_Id;\n@@ -698,7 +691,7 @@ package body Prj.Nmsc is\n       In_Tree             : Project_Tree_Ref;\n       Project             : Project_Id;\n       Lang                : Name_Id;\n-      Lang_Id             : Language_Index;\n+      Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n       Display_File        : File_Name_Type;\n@@ -714,8 +707,7 @@ package body Prj.Nmsc is\n    is\n       Source   : constant Source_Id := Data.Last_Source;\n       Src_Data : Source_Data := No_Source_Data;\n-      Config   : constant Language_Config :=\n-                   In_Tree.Languages_Data.Table (Lang_Id).Config;\n+      Config   : constant Language_Config := Lang_Id.Config;\n \n    begin\n       --  This is a new source so create an entry for it in the Sources table\n@@ -740,9 +732,8 @@ package body Prj.Nmsc is\n       Src_Data.Project             := Project;\n       Src_Data.Language            := Lang_Id;\n       Src_Data.Lang_Kind           := Lang_Kind;\n-      Src_Data.Compiled            := In_Tree.Languages_Data.Table\n-                                        (Lang_Id).Config.Compiler_Driver /=\n-                                                              Empty_File_Name;\n+      Src_Data.Compiled            :=\n+        Lang_Id.Config.Compiler_Driver /= Empty_File_Name;\n       Src_Data.Kind                := Kind;\n       Src_Data.Alternate_Languages := Alternate_Languages;\n       Src_Data.Other_Part          := Other_Part;\n@@ -758,8 +749,7 @@ package body Prj.Nmsc is\n       Src_Data.Index               := Index;\n       Src_Data.File                := File_Name;\n       Src_Data.Display_File        := Display_File;\n-      Src_Data.Dependency          := In_Tree.Languages_Data.Table\n-                                        (Lang_Id).Config.Dependency_Kind;\n+      Src_Data.Dependency          := Lang_Id.Config.Dependency_Kind;\n       Src_Data.Dep_Name            := Dependency_Name\n                                         (File_Name, Src_Data.Dependency);\n       Src_Data.Naming_Exception    := Naming_Exception;\n@@ -799,9 +789,8 @@ package body Prj.Nmsc is\n \n       --  Add the source to the language list\n \n-      Src_Data.Next_In_Lang :=\n-        In_Tree.Languages_Data.Table (Lang_Id).First_Source;\n-      In_Tree.Languages_Data.Table (Lang_Id).First_Source := Id;\n+      Src_Data.Next_In_Lang := Lang_Id.First_Source;\n+      Lang_Id.First_Source := Id;\n \n       In_Tree.Sources.Table (Id) := Src_Data;\n \n@@ -935,14 +924,14 @@ package body Prj.Nmsc is\n                (not Extending)\n          then\n             declare\n-               Language      : Language_Index;\n+               Language      : Language_Ptr;\n                Source        : Source_Id;\n                Alt_Lang      : Alternate_Language_Id;\n                Alt_Lang_Data : Alternate_Language_Data;\n                Continuation  : Boolean := False;\n \n             begin\n-               Language := Data.First_Language_Processing;\n+               Language := Data.Languages;\n                while Language /= No_Language_Index loop\n                   Source := Data.First_Source;\n                   Source_Loop : while Source /= No_Source loop\n@@ -971,16 +960,14 @@ package body Prj.Nmsc is\n                   if Source = No_Source then\n                      Report_No_Sources\n                        (Project,\n-                        Get_Name_String\n-                          (In_Tree.Languages_Data.Table\n-                             (Language).Display_Name),\n+                        Get_Name_String (Language.Display_Name),\n                         In_Tree,\n                         Data.Location,\n                         Continuation);\n                      Continuation := True;\n                   end if;\n \n-                  Language := In_Tree.Languages_Data.Table (Language).Next;\n+                  Language := Language.Next;\n                end loop;\n             end;\n          end if;\n@@ -1209,18 +1196,15 @@ package body Prj.Nmsc is\n       Casing          : Casing_Type    := All_Lower_Case;\n       Separate_Suffix : File_Name_Type := No_File;\n \n-      Lang_Index : Language_Index := No_Language_Index;\n+      Lang_Index : Language_Ptr := No_Language_Index;\n       --  The index of the language data being checked\n \n-      Prev_Index : Language_Index := No_Language_Index;\n+      Prev_Index : Language_Ptr := No_Language_Index;\n       --  The index of the previous language\n \n       Current_Language : Name_Id := No_Name;\n       --  The name of the language\n \n-      Lang_Data : Language_Data;\n-      --  The data of the language being checked\n-\n       procedure Get_Language_Index_Of (Language : Name_Id);\n       --  Get the language index of Language, if Language is one of the\n       --  languages of the project.\n@@ -1249,12 +1233,10 @@ package body Prj.Nmsc is\n          --  Nothing to do if the language is the same as the current language\n \n          if Current_Language /= Real_Language then\n-            Lang_Index := Data.First_Language_Processing;\n+            Lang_Index := Data.Languages;\n             while Lang_Index /= No_Language_Index loop\n-               exit when In_Tree.Languages_Data.Table (Lang_Index).Name =\n-                 Real_Language;\n-               Lang_Index :=\n-                 In_Tree.Languages_Data.Table (Lang_Index).Next;\n+               exit when Lang_Index.Name = Real_Language;\n+               Lang_Index := Lang_Index.Next;\n             end loop;\n \n             if Lang_Index = No_Language_Index then\n@@ -1325,39 +1307,34 @@ package body Prj.Nmsc is\n \n                            --  Attribute Driver (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Binder_Driver :=\n+                           Lang_Index.Config.Binder_Driver :=\n                              File_Name_Type (Element.Value.Value);\n \n                         when Name_Required_Switches =>\n                            Put (Into_List =>\n-                                In_Tree.Languages_Data.Table\n-                                  (Lang_Index).Config.Binder_Required_Switches,\n+                                   Lang_Index.Config.Binder_Required_Switches,\n                                 From_List => Element.Value.Values,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Prefix =>\n \n                            --  Attribute Prefix (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Binder_Prefix :=\n+                           Lang_Index.Config.Binder_Prefix :=\n                              Element.Value.Value;\n \n                         when Name_Objects_Path =>\n \n                            --  Attribute Objects_Path (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Objects_Path :=\n+                           Lang_Index.Config.Objects_Path :=\n                              Element.Value.Value;\n \n                         when Name_Objects_Path_File =>\n \n                            --  Attribute Objects_Path (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Objects_Path_File :=\n+                           Lang_Index.Config.Objects_Path_File :=\n                              Element.Value.Value;\n \n                         when others =>\n@@ -1438,20 +1415,15 @@ package body Prj.Nmsc is\n \n                            --  Attribute Dependency_Switches (<language>)\n \n-                           if In_Tree.Languages_Data.Table\n-                               (Lang_Index).Config.Dependency_Kind = None\n-                           then\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Dependency_Kind :=\n-                                  Makefile;\n+                           if Lang_Index.Config.Dependency_Kind = None then\n+                              Lang_Index.Config.Dependency_Kind := Makefile;\n                            end if;\n \n                            List := Element.Value.Values;\n \n                            if List /= Nil_String then\n                               Put (Into_List =>\n-                                     In_Tree.Languages_Data.Table\n-                                       (Lang_Index).Config.Dependency_Option,\n+                                     Lang_Index.Config.Dependency_Option,\n                                    From_List => List,\n                                    In_Tree   => In_Tree);\n                            end if;\n@@ -1460,20 +1432,15 @@ package body Prj.Nmsc is\n \n                            --  Attribute Dependency_Driver (<language>)\n \n-                           if In_Tree.Languages_Data.Table\n-                               (Lang_Index).Config.Dependency_Kind = None\n-                           then\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Dependency_Kind :=\n-                                  Makefile;\n+                           if Lang_Index.Config.Dependency_Kind = None then\n+                              Lang_Index.Config.Dependency_Kind := Makefile;\n                            end if;\n \n                            List := Element.Value.Values;\n \n                            if List /= Nil_String then\n                               Put (Into_List =>\n-                                     In_Tree.Languages_Data.Table\n-                                       (Lang_Index).Config.Compute_Dependency,\n+                                     Lang_Index.Config.Compute_Dependency,\n                                    From_List => List,\n                                    In_Tree   => In_Tree);\n                            end if;\n@@ -1493,25 +1460,22 @@ package body Prj.Nmsc is\n                            end if;\n \n                            Put (Into_List =>\n-                                In_Tree.Languages_Data.Table\n-                                  (Lang_Index).Config.Include_Option,\n+                                  Lang_Index.Config.Include_Option,\n                                 From_List => List,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Include_Path =>\n \n                            --  Attribute Include_Path (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Include_Path :=\n+                           Lang_Index.Config.Include_Path :=\n                              Element.Value.Value;\n \n                         when Name_Include_Path_File =>\n \n                            --  Attribute Include_Path_File (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Include_Path_File :=\n+                           Lang_Index.Config.Include_Path_File :=\n                                Element.Value.Value;\n \n                         when Name_Driver =>\n@@ -1520,22 +1484,18 @@ package body Prj.Nmsc is\n \n                            Get_Name_String (Element.Value.Value);\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Compiler_Driver :=\n+                           Lang_Index.Config.Compiler_Driver :=\n                                File_Name_Type (Element.Value.Value);\n \n                         when Name_Required_Switches =>\n                            Put (Into_List =>\n-                                In_Tree.Languages_Data.Table\n-                                  (Lang_Index).Config.\n-                                    Compiler_Required_Switches,\n+                                  Lang_Index.Config.Compiler_Required_Switches,\n                                 From_List => Element.Value.Values,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Path_Syntax =>\n                            begin\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Path_Syntax :=\n+                              Lang_Index.Config.Path_Syntax :=\n                                   Path_Syntax_Kind'Value\n                                     (Get_Name_String (Element.Value.Value));\n \n@@ -1556,8 +1516,7 @@ package body Prj.Nmsc is\n                                  Element.Value.Location);\n \n                            else\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Object_File_Suffix :=\n+                              Lang_Index.Config.Object_File_Suffix :=\n                                 Element.Value.Value;\n                            end if;\n \n@@ -1576,8 +1535,7 @@ package body Prj.Nmsc is\n                            end if;\n \n                            Put (Into_List =>\n-                                In_Tree.Languages_Data.Table\n-                                  (Lang_Index).Config.Compilation_PIC_Option,\n+                                  Lang_Index.Config.Compilation_PIC_Option,\n                                 From_List => List,\n                                 In_Tree   => In_Tree);\n \n@@ -1596,26 +1554,23 @@ package body Prj.Nmsc is\n                            end if;\n \n                            Put (Into_List =>\n-                                In_Tree.Languages_Data.Table\n-                                  (Lang_Index).Config.Mapping_File_Switches,\n+                                  Lang_Index.Config.Mapping_File_Switches,\n                                 From_List => List,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Mapping_Spec_Suffix =>\n \n                            --  Attribute Mapping_Spec_Suffix (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Mapping_Spec_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                           Lang_Index.Config.Mapping_Spec_Suffix :=\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Mapping_Body_Suffix =>\n \n                            --  Attribute Mapping_Body_Suffix (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Mapping_Body_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                           Lang_Index.Config.Mapping_Body_Suffix :=\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Config_File_Switches =>\n \n@@ -1632,70 +1587,62 @@ package body Prj.Nmsc is\n                            end if;\n \n                            Put (Into_List =>\n-                                  In_Tree.Languages_Data.Table\n-                                    (Lang_Index).Config.Config_File_Switches,\n+                                  Lang_Index.Config.Config_File_Switches,\n                                 From_List => List,\n                                 In_Tree   => In_Tree);\n \n                         when Name_Objects_Path =>\n \n                            --  Attribute Objects_Path (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Objects_Path :=\n-                               Element.Value.Value;\n+                           Lang_Index.Config.Objects_Path :=\n+                             Element.Value.Value;\n \n                         when Name_Objects_Path_File =>\n \n                            --  Attribute Objects_Path_File (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Objects_Path_File :=\n-                               Element.Value.Value;\n+                           Lang_Index.Config.Objects_Path_File :=\n+                             Element.Value.Value;\n \n                         when Name_Config_Body_File_Name =>\n \n                            --  Attribute Config_Body_File_Name (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Config_Body :=\n-                               Element.Value.Value;\n+                           Lang_Index.Config.Config_Body :=\n+                             Element.Value.Value;\n \n                         when Name_Config_Body_File_Name_Pattern =>\n \n                            --  Attribute Config_Body_File_Name_Pattern\n                            --  (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Config_Body_Pattern :=\n-                               Element.Value.Value;\n+                           Lang_Index.Config.Config_Body_Pattern :=\n+                             Element.Value.Value;\n \n                         when Name_Config_Spec_File_Name =>\n \n                            --  Attribute Config_Spec_File_Name (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Config_Spec :=\n-                               Element.Value.Value;\n+                           Lang_Index.Config.Config_Spec :=\n+                             Element.Value.Value;\n \n                         when Name_Config_Spec_File_Name_Pattern =>\n \n                            --  Attribute Config_Spec_File_Name_Pattern\n                            --  (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Config_Spec_Pattern :=\n+                           Lang_Index.Config.Config_Spec_Pattern :=\n                              Element.Value.Value;\n \n                         when Name_Config_File_Unique =>\n \n                            --  Attribute Config_File_Unique (<language>)\n \n                            begin\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Config_File_Unique :=\n-                                  Boolean'Value\n-                                    (Get_Name_String (Element.Value.Value));\n+                              Lang_Index.Config.Config_File_Unique :=\n+                                Boolean'Value\n+                                  (Get_Name_String (Element.Value.Value));\n                            exception\n                               when Constraint_Error =>\n                                  Error_Msg\n@@ -1796,21 +1743,18 @@ package body Prj.Nmsc is\n \n                            --  Attribute Spec_Suffix (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Naming_Data.Spec_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                           Lang_Index.Config.Naming_Data.Spec_Suffix :=\n+                             File_Name_Type (Element.Value.Value);\n \n                         when Name_Implementation_Suffix | Name_Body_Suffix =>\n \n                            --  Attribute Body_Suffix (<language>)\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Naming_Data.Body_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                           Lang_Index.Config.Naming_Data.Body_Suffix :=\n+                             File_Name_Type (Element.Value.Value);\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Naming_Data.Separate_Suffix :=\n-                               File_Name_Type (Element.Value.Value);\n+                           Lang_Index.Config.Naming_Data.Separate_Suffix :=\n+                             File_Name_Type (Element.Value.Value);\n \n                         when others =>\n                            null;\n@@ -2317,8 +2261,7 @@ package body Prj.Nmsc is\n                         if List /= Nil_String then\n                            Put\n                              (Into_List  =>\n-                                In_Tree.Languages_Data.Table (Lang_Index).\n-                                  Config.Include_Compatible_Languages,\n+                                Lang_Index.Config.Include_Compatible_Languages,\n                               From_List  => List,\n                               In_Tree    => In_Tree,\n                               Lower_Case => True);\n@@ -2328,32 +2271,28 @@ package body Prj.Nmsc is\n \n                         --  Attribute Toolchain_Description (<language>)\n \n-                        In_Tree.Languages_Data.Table\n-                          (Lang_Index).Config.Toolchain_Description :=\n+                        Lang_Index.Config.Toolchain_Description :=\n                           Element.Value.Value;\n \n                      when Name_Toolchain_Version =>\n \n                         --  Attribute Toolchain_Version (<language>)\n \n-                        In_Tree.Languages_Data.Table\n-                          (Lang_Index).Config.Toolchain_Version :=\n+                        Lang_Index.Config.Toolchain_Version :=\n                           Element.Value.Value;\n \n                      when Name_Runtime_Library_Dir =>\n \n                         --  Attribute Runtime_Library_Dir (<language>)\n \n-                        In_Tree.Languages_Data.Table\n-                          (Lang_Index).Config.Runtime_Library_Dir :=\n+                        Lang_Index.Config.Runtime_Library_Dir :=\n                           Element.Value.Value;\n \n                      when Name_Runtime_Source_Dir =>\n \n                         --  Attribute Runtime_Library_Dir (<language>)\n \n-                        In_Tree.Languages_Data.Table\n-                          (Lang_Index).Config.Runtime_Source_Dir :=\n+                        Lang_Index.Config.Runtime_Source_Dir :=\n                           Element.Value.Value;\n \n                      when Name_Object_Generated =>\n@@ -2366,15 +2305,13 @@ package body Prj.Nmsc is\n                              Boolean'Value\n                                (Get_Name_String (Element.Value.Value));\n \n-                           In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Object_Generated := Value;\n+                           Lang_Index.Config.Object_Generated := Value;\n \n                            --  If no object is generated, no object may be\n                            --  linked.\n \n                            if not Value then\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Objects_Linked := False;\n+                              Lang_Index.Config.Objects_Linked := False;\n                            end if;\n \n                         exception\n@@ -2401,12 +2338,8 @@ package body Prj.Nmsc is\n                            --  No change if Object_Generated is False, as this\n                            --  forces Objects_Linked to be False too.\n \n-                           if In_Tree.Languages_Data.Table\n-                             (Lang_Index).Config.Object_Generated\n-                           then\n-                              In_Tree.Languages_Data.Table\n-                                (Lang_Index).Config.Objects_Linked :=\n-                                Value;\n+                           if Lang_Index.Config.Object_Generated then\n+                              Lang_Index.Config.Objects_Linked := Value;\n                            end if;\n \n                         exception\n@@ -2439,27 +2372,21 @@ package body Prj.Nmsc is\n       --  For unit based languages, set Casing, Dot_Replacement and\n       --  Separate_Suffix in Naming_Data.\n \n-      Lang_Index := Data.First_Language_Processing;\n+      Lang_Index := Data.Languages;\n       while Lang_Index /= No_Language_Index loop\n-         if In_Tree.Languages_Data.Table\n-           (Lang_Index).Name = Name_Ada\n-         then\n-            In_Tree.Languages_Data.Table\n-              (Lang_Index).Config.Naming_Data.Casing := Casing;\n-            In_Tree.Languages_Data.Table\n-              (Lang_Index).Config.Naming_Data.Dot_Replacement :=\n-              Dot_Replacement;\n+         if Lang_Index.Name = Name_Ada then\n+            Lang_Index.Config.Naming_Data.Casing := Casing;\n+            Lang_Index.Config.Naming_Data.Dot_Replacement := Dot_Replacement;\n \n             if Separate_Suffix /= No_File then\n-               In_Tree.Languages_Data.Table\n-                 (Lang_Index).Config.Naming_Data.Separate_Suffix :=\n+               Lang_Index.Config.Naming_Data.Separate_Suffix :=\n                  Separate_Suffix;\n             end if;\n \n             exit;\n          end if;\n \n-         Lang_Index := In_Tree.Languages_Data.Table (Lang_Index).Next;\n+         Lang_Index := Lang_Index.Next;\n       end loop;\n \n       --  Give empty names to various prefixes/suffixes, if they have not\n@@ -2477,15 +2404,13 @@ package body Prj.Nmsc is\n          Data.Config.Shared_Lib_Suffix := Empty_File;\n       end if;\n \n-      Lang_Index := Data.First_Language_Processing;\n+      Lang_Index := Data.Languages;\n       while Lang_Index /= No_Language_Index loop\n-         Lang_Data := In_Tree.Languages_Data.Table (Lang_Index);\n-\n-         Current_Language := Lang_Data.Display_Name;\n+         Current_Language := Lang_Index.Display_Name;\n \n          --  For all languages, Compiler_Driver needs to be specified\n \n-         if Lang_Data.Config.Compiler_Driver = No_File then\n+         if Lang_Index.Config.Compiler_Driver = No_File then\n             Error_Msg_Name_1 := Current_Language;\n             Error_Msg\n               (Project,\n@@ -2494,37 +2419,35 @@ package body Prj.Nmsc is\n                \", ignoring all its sources\",\n                No_Location);\n \n-            if Lang_Index = Data.First_Language_Processing then\n-               Data.First_Language_Processing :=\n-                 Lang_Data.Next;\n+            if Lang_Index = Data.Languages then\n+               Data.Languages := Lang_Index.Next;\n             else\n-               In_Tree.Languages_Data.Table (Prev_Index).Next :=\n-                 Lang_Data.Next;\n+               Prev_Index.Next := Lang_Index.Next;\n             end if;\n \n-         elsif Lang_Data.Name = Name_Ada then\n+         elsif Lang_Index.Name = Name_Ada then\n             Prev_Index := Lang_Index;\n \n             --  For unit based languages, Dot_Replacement, Spec_Suffix and\n             --  Body_Suffix need to be specified.\n \n-            if Lang_Data.Config.Naming_Data.Dot_Replacement = No_File then\n+            if Lang_Index.Config.Naming_Data.Dot_Replacement = No_File then\n                Error_Msg\n                  (Project,\n                   In_Tree,\n                   \"Dot_Replacement not specified for Ada\",\n                   No_Location);\n             end if;\n \n-            if Lang_Data.Config.Naming_Data.Spec_Suffix = No_File then\n+            if Lang_Index.Config.Naming_Data.Spec_Suffix = No_File then\n                Error_Msg\n                  (Project,\n                   In_Tree,\n                   \"Spec_Suffix not specified for Ada\",\n                   No_Location);\n             end if;\n \n-            if Lang_Data.Config.Naming_Data.Body_Suffix = No_File then\n+            if Lang_Index.Config.Naming_Data.Body_Suffix = No_File then\n                Error_Msg\n                  (Project,\n                   In_Tree,\n@@ -2538,8 +2461,8 @@ package body Prj.Nmsc is\n             --  For file based languages, either Spec_Suffix or Body_Suffix\n             --  need to be specified.\n \n-            if Lang_Data.Config.Naming_Data.Spec_Suffix = No_File and then\n-              Lang_Data.Config.Naming_Data.Body_Suffix = No_File\n+            if Lang_Index.Config.Naming_Data.Spec_Suffix = No_File and then\n+              Lang_Index.Config.Naming_Data.Body_Suffix = No_File\n             then\n                Error_Msg_Name_1 := Current_Language;\n                Error_Msg\n@@ -2550,7 +2473,7 @@ package body Prj.Nmsc is\n             end if;\n          end if;\n \n-         Lang_Index := Lang_Data.Next;\n+         Lang_Index := Lang_Index.Next;\n       end loop;\n    end Check_Configuration;\n \n@@ -2824,10 +2747,10 @@ package body Prj.Nmsc is\n       --  Check attributes common to Ada_Only and Multi_Lang modes\n \n       procedure Process_Exceptions_File_Based\n-        (Lang_Id : Language_Index;\n+        (Lang_Id : Language_Ptr;\n          Kind    : Source_Kind);\n       procedure Process_Exceptions_Unit_Based\n-        (Lang_Id : Language_Index;\n+        (Lang_Id : Language_Ptr;\n          Kind    : Source_Kind);\n       --  In Multi_Lang mode, process the naming exceptions for the two types\n       --  of languages we can have.\n@@ -2980,11 +2903,10 @@ package body Prj.Nmsc is\n       -----------------------------------\n \n       procedure Process_Exceptions_File_Based\n-        (Lang_Id        : Language_Index;\n+        (Lang_Id        : Language_Ptr;\n          Kind           : Source_Kind)\n       is\n-         Lang           : constant Name_Id :=\n-                            In_Tree.Languages_Data.Table (Lang_Id).Name;\n+         Lang           : constant Name_Id := Lang_Id.Name;\n          Exceptions     : Array_Element_Id;\n          Exception_List : Variable_Value;\n          Element_Id     : String_List_Id;\n@@ -3076,11 +2998,10 @@ package body Prj.Nmsc is\n       -----------------------------------\n \n       procedure Process_Exceptions_Unit_Based\n-        (Lang_Id        : Language_Index;\n+        (Lang_Id        : Language_Ptr;\n          Kind           : Source_Kind)\n       is\n-         Lang              : constant Name_Id :=\n-                              In_Tree.Languages_Data.Table (Lang_Id).Name;\n+         Lang              : constant Name_Id := Lang_Id.Name;\n          Exceptions        : Array_Element_Id;\n          Element           : Array_Element;\n          Unit              : Name_Id;\n@@ -3363,7 +3284,7 @@ package body Prj.Nmsc is\n          Separate_Suffix : File_Name_Type := No_File;\n          Casing          : Casing_Type    := All_Lower_Case;\n          Casing_Defined  : Boolean;\n-         Lang_Id         : Language_Index;\n+         Lang_Id         : Language_Ptr;\n          Sep_Suffix_Loc  : Source_Ptr;\n          Suffix          : Variable_Value;\n          Lang            : Name_Id;\n@@ -3385,38 +3306,33 @@ package body Prj.Nmsc is\n            or else Casing_Defined\n            or else Separate_Suffix /= No_File\n          then\n-            Lang_Id := Data.First_Language_Processing;\n+            Lang_Id := Data.Languages;\n             while Lang_Id /= No_Language_Index loop\n-               if In_Tree.Languages_Data.\n-                    Table (Lang_Id).Config.Kind = Unit_Based\n-               then\n+               if Lang_Id.Config.Kind = Unit_Based then\n                   if Dot_Replacement /= No_File then\n-                     In_Tree.Languages_Data.Table\n-                       (Lang_Id).Config.Naming_Data.Dot_Replacement :=\n+                     Lang_Id.Config.Naming_Data.Dot_Replacement :=\n                          Dot_Replacement;\n                   end if;\n \n                   if Casing_Defined then\n-                     In_Tree.Languages_Data.Table\n-                       (Lang_Id).Config.Naming_Data.Casing := Casing;\n+                     Lang_Id.Config.Naming_Data.Casing := Casing;\n                   end if;\n \n                   if Separate_Suffix /= No_File then\n-                     In_Tree.Languages_Data.Table\n-                       (Lang_Id).Config.Naming_Data.Separate_Suffix :=\n+                     Lang_Id.Config.Naming_Data.Separate_Suffix :=\n                          Separate_Suffix;\n                   end if;\n                end if;\n \n-               Lang_Id := In_Tree.Languages_Data.Table (Lang_Id).Next;\n+               Lang_Id := Lang_Id.Next;\n             end loop;\n          end if;\n \n          --  Next, get the spec and body suffixes\n \n-         Lang_Id := Data.First_Language_Processing;\n+         Lang_Id := Data.Languages;\n          while Lang_Id /= No_Language_Index loop\n-            Lang := In_Tree.Languages_Data.Table (Lang_Id).Name;\n+            Lang := Lang_Id.Name;\n \n             --  Spec_Suffix\n \n@@ -3435,8 +3351,7 @@ package body Prj.Nmsc is\n             end if;\n \n             if Suffix /= Nil_Variable_Value then\n-               In_Tree.Languages_Data.Table (Lang_Id).\n-                 Config.Naming_Data.Spec_Suffix :=\n+               Lang_Id.Config.Naming_Data.Spec_Suffix :=\n                    File_Name_Type (Suffix.Value);\n             end if;\n \n@@ -3457,8 +3372,7 @@ package body Prj.Nmsc is\n             end if;\n \n             if Suffix /= Nil_Variable_Value then\n-               In_Tree.Languages_Data.Table (Lang_Id).\n-                 Config.Naming_Data.Body_Suffix :=\n+               Lang_Id.Config.Naming_Data.Body_Suffix :=\n                    File_Name_Type (Suffix.Value);\n             end if;\n \n@@ -3468,23 +3382,23 @@ package body Prj.Nmsc is\n             --  Check_Common, but we access the attributes from the project\n             --  files slightly differently apparently.\n \n-            Lang_Id := In_Tree.Languages_Data.Table (Lang_Id).Next;\n+            Lang_Id := Lang_Id.Next;\n          end loop;\n \n          --  Get the naming exceptions for all languages\n \n          for Kind in Spec .. Impl loop\n-            Lang_Id := Data.First_Language_Processing;\n+            Lang_Id := Data.Languages;\n             while Lang_Id /= No_Language_Index loop\n-               case In_Tree.Languages_Data.Table (Lang_Id).Config.Kind is\n+               case Lang_Id.Config.Kind is\n                when File_Based =>\n                   Process_Exceptions_File_Based (Lang_Id, Kind);\n \n                when Unit_Based =>\n                   Process_Exceptions_Unit_Based (Lang_Id, Kind);\n                end case;\n \n-               Lang_Id := In_Tree.Languages_Data.Table (Lang_Id).Next;\n+               Lang_Id := Lang_Id.Next;\n             end loop;\n          end loop;\n       end Check_Naming_Multi_Lang;\n@@ -4473,12 +4387,16 @@ package body Prj.Nmsc is\n       Def_Lang_Id : Name_Id;\n \n    begin\n-      Data.First_Language_Processing := No_Language_Index;\n+      Data.Languages := No_Language_Index;\n       Languages :=\n         Prj.Util.Value_Of (Name_Languages, Data.Decl.Attributes, In_Tree);\n       Def_Lang :=\n         Prj.Util.Value_Of\n           (Name_Default_Language, Data.Decl.Attributes, In_Tree);\n+\n+      --  ??? Shouldn't these be set to False by default, and only set to True\n+      --  when we actually find some source file ?\n+\n       Data.Ada_Sources_Present   := Data.Source_Dirs /= Nil_String;\n       Data.Other_Sources_Present := Data.Source_Dirs /= Nil_String;\n \n@@ -4488,23 +4406,10 @@ package body Prj.Nmsc is\n \n          if Languages.Default then\n \n-            --  Attribute Languages is not specified. So, it defaults to\n-            --  a project of the default language only.\n-\n-            Name_List_Table.Increment_Last (In_Tree.Name_Lists);\n-            Data.Languages := Name_List_Table.Last (In_Tree.Name_Lists);\n-\n             --  In Ada_Only mode, the default language is Ada\n \n             if Get_Mode = Ada_Only then\n-               In_Tree.Name_Lists.Table (Data.Languages) :=\n-                 (Name => Name_Ada, Next => No_Name_List);\n-\n-               --  Attribute Languages is not specified. So, it defaults to\n-               --  a project of language Ada only. No sources of languages\n-               --  other than Ada\n-\n-               Data.Other_Sources_Present := False;\n+               Def_Lang_Id := Name_Ada;\n \n             else\n                --  Fail if there is no default language defined\n@@ -4526,37 +4431,29 @@ package body Prj.Nmsc is\n                   To_Lower (Name_Buffer (1 .. Name_Len));\n                   Def_Lang_Id := Name_Find;\n                end if;\n+            end if;\n \n-               if Def_Lang_Id /=  No_Name then\n-                  In_Tree.Name_Lists.Table (Data.Languages) :=\n-                    (Name => Def_Lang_Id, Next => No_Name_List);\n-\n-                  Language_Data_Table.Increment_Last (In_Tree.Languages_Data);\n-\n-                  Data.First_Language_Processing :=\n-                    Language_Data_Table.Last (In_Tree.Languages_Data);\n-                  In_Tree.Languages_Data.Table\n-                    (Data.First_Language_Processing) := No_Language_Data;\n-                  In_Tree.Languages_Data.Table\n-                    (Data.First_Language_Processing).Name := Def_Lang_Id;\n-                  Get_Name_String (Def_Lang_Id);\n-                  Name_Buffer (1) := GNAT.Case_Util.To_Upper (Name_Buffer (1));\n-                  In_Tree.Languages_Data.Table\n-                    (Data.First_Language_Processing).Display_Name := Name_Find;\n-\n-                  if Def_Lang_Id = Name_Ada then\n-                     In_Tree.Languages_Data.Table\n-                       (Data.First_Language_Processing).Config.Kind :=\n-                         Unit_Based;\n-                     In_Tree.Languages_Data.Table\n-                       (Data.First_Language_Processing).Config.\n-                         Dependency_Kind := ALI_File;\n+            if Def_Lang_Id /= No_Name then\n+               Data.Languages :=\n+                 new Language_Data'(No_Language_Data);\n+               Data.Languages.Name := Def_Lang_Id;\n+               Get_Name_String (Def_Lang_Id);\n+               Name_Buffer (1) := GNAT.Case_Util.To_Upper (Name_Buffer (1));\n+               Data.Languages.Display_Name := Name_Find;\n \n-                  else\n-                     In_Tree.Languages_Data.Table\n-                       (Data.First_Language_Processing).Config.Kind :=\n-                         File_Based;\n-                  end if;\n+               if Def_Lang_Id = Name_Ada then\n+                  Data.Languages.Config.Kind := Unit_Based;\n+                  Data.Languages.Config.Dependency_Kind :=\n+                    ALI_File;\n+\n+                  --  Attribute Languages is not specified. So, it defaults to\n+                  --  a project of language Ada only. No sources of languages\n+                  --  other than Ada\n+\n+                  Data.Other_Sources_Present := False;\n+\n+               else\n+                  Data.Languages.Config.Kind := File_Based;\n                end if;\n             end if;\n \n@@ -4565,9 +4462,8 @@ package body Prj.Nmsc is\n                Current           : String_List_Id := Languages.Values;\n                Element           : String_Element;\n                Lang_Name         : Name_Id;\n-               Index             : Language_Index;\n-               Lang_Data         : Language_Data;\n-               NL_Id             : Name_List_Index := No_Name_List;\n+               Index             : Language_Ptr;\n+               NL_Id             : Language_Ptr;\n \n             begin\n                --  Assume there are no language declared\n@@ -4593,42 +4489,20 @@ package body Prj.Nmsc is\n                   --  Languages.\n \n                   while Current /= Nil_String loop\n-                     Element :=\n-                       In_Tree.String_Elements.Table (Current);\n+                     Element := In_Tree.String_Elements.Table (Current);\n                      Get_Name_String (Element.Value);\n                      To_Lower (Name_Buffer (1 .. Name_Len));\n                      Lang_Name := Name_Find;\n \n+                     --  If the language was not already specified (duplicates\n+                     --  are simply ignored)\n                      NL_Id := Data.Languages;\n-                     while NL_Id /= No_Name_List loop\n-                        exit when\n-                          Lang_Name = In_Tree.Name_Lists.Table (NL_Id).Name;\n-                        NL_Id := In_Tree.Name_Lists.Table (NL_Id).Next;\n+                     while NL_Id /= No_Language_Index loop\n+                        exit when Lang_Name = NL_Id.Name;\n+                        NL_Id := NL_Id.Next;\n                      end loop;\n \n-                     if NL_Id = No_Name_List then\n-                        Name_List_Table.Increment_Last (In_Tree.Name_Lists);\n-\n-                        if Data.Languages = No_Name_List then\n-                           Data.Languages :=\n-                             Name_List_Table.Last (In_Tree.Name_Lists);\n-\n-                        else\n-                           NL_Id := Data.Languages;\n-                           while In_Tree.Name_Lists.Table (NL_Id).Next /=\n-                                   No_Name_List\n-                           loop\n-                              NL_Id := In_Tree.Name_Lists.Table (NL_Id).Next;\n-                           end loop;\n-\n-                           In_Tree.Name_Lists.Table (NL_Id).Next :=\n-                             Name_List_Table.Last (In_Tree.Name_Lists);\n-                        end if;\n-\n-                        NL_Id := Name_List_Table.Last (In_Tree.Name_Lists);\n-                        In_Tree.Name_Lists.Table (NL_Id) :=\n-                          (Lang_Name, No_Name_List);\n-\n+                     if NL_Id = No_Language_Index then\n                         if Get_Mode = Ada_Only then\n                            --  Check for language Ada\n \n@@ -4638,27 +4512,22 @@ package body Prj.Nmsc is\n                            else\n                               Data.Other_Sources_Present := True;\n                            end if;\n+                        end if;\n \n-                        else\n-                           Language_Data_Table.Increment_Last\n-                                                 (In_Tree.Languages_Data);\n-                           Index :=\n-                             Language_Data_Table.Last (In_Tree.Languages_Data);\n-                           Lang_Data.Name := Lang_Name;\n-                           Lang_Data.Display_Name := Element.Value;\n-                           Lang_Data.Next := Data.First_Language_Processing;\n-\n-                           if Lang_Name = Name_Ada then\n-                              Lang_Data.Config.Kind := Unit_Based;\n-                              Lang_Data.Config.Dependency_Kind := ALI_File;\n-                           else\n-                              Lang_Data.Config.Kind := File_Based;\n-                              Lang_Data.Config.Dependency_Kind := None;\n-                           end if;\n+                        Index := new Language_Data'(No_Language_Data);\n+                        Index.Name := Lang_Name;\n+                        Index.Display_Name := Element.Value;\n+                        Index.Next := Data.Languages;\n \n-                           In_Tree.Languages_Data.Table (Index) := Lang_Data;\n-                           Data.First_Language_Processing := Index;\n+                        if Lang_Name = Name_Ada then\n+                           Index.Config.Kind := Unit_Based;\n+                           Index.Config.Dependency_Kind := ALI_File;\n+                        else\n+                           Index.Config.Kind := File_Based;\n+                           Index.Config.Dependency_Kind := None;\n                         end if;\n+\n+                        Data.Languages := Index;\n                      end if;\n \n                      Current := Element.Next;\n@@ -7285,7 +7154,7 @@ package body Prj.Nmsc is\n \n             if Get_Mode = Multi_Language then\n                if Current = Nil_String then\n-                  Data.First_Language_Processing := No_Language_Index;\n+                  Data.Languages := No_Language_Index;\n \n                   --  This project contains no source. For projects that\n                   --  don't extend other projects, this also means that\n@@ -7618,31 +7487,6 @@ package body Prj.Nmsc is\n       end loop;\n    end Get_Path_Names_And_Record_Ada_Sources;\n \n-   ---------------------------------------\n-   -- Get_Language_Processing_From_Lang --\n-   ---------------------------------------\n-\n-   function Get_Language_Processing_From_Lang\n-     (In_Tree : Project_Tree_Ref;\n-      Data    : Project_Data;\n-      Lang    : Name_List_Index) return Language_Index\n-   is\n-      Name     : constant Name_Id := In_Tree.Name_Lists.Table (Lang).Name;\n-      Language : Language_Index;\n-\n-   begin\n-      Language := Data.First_Language_Processing;\n-      while Language /= No_Language_Index loop\n-         if In_Tree.Languages_Data.Table (Language).Name = Name then\n-            return Language;\n-         end if;\n-\n-         Language := In_Tree.Languages_Data.Table (Language).Next;\n-      end loop;\n-\n-      return No_Language_Index;\n-   end Get_Language_Processing_From_Lang;\n-\n    -------------------------------\n    -- Check_File_Naming_Schemes --\n    -------------------------------\n@@ -7652,7 +7496,7 @@ package body Prj.Nmsc is\n       Data                  : in out Project_Data;\n       File_Name             : File_Name_Type;\n       Alternate_Languages   : out Alternate_Language_Id;\n-      Language              : out Language_Index;\n+      Language              : out Language_Ptr;\n       Language_Name         : out Name_Id;\n       Display_Language_Name : out Name_Id;\n       Unit                  : out Name_Id;\n@@ -7661,8 +7505,7 @@ package body Prj.Nmsc is\n    is\n       Filename : constant String := Get_Name_String (File_Name);\n       Config   : Language_Config;\n-      Lang     : Name_List_Index;\n-      Tmp_Lang : Language_Index;\n+      Tmp_Lang : Language_Ptr;\n \n       Header_File : Boolean := False;\n       --  True if we found at least one language for which the file is a header\n@@ -7732,10 +7575,9 @@ package body Prj.Nmsc is\n       Lang_Kind             := File_Based;\n       Kind                  := Spec;\n \n-      Lang := Data.Languages;\n-      while Lang /= No_Name_List loop\n-         Language_Name := In_Tree.Name_Lists.Table (Lang).Name;\n-         Tmp_Lang := Get_Language_Processing_From_Lang (In_Tree, Data, Lang);\n+      Tmp_Lang := Data.Languages;\n+      while Tmp_Lang /= No_Language_Index loop\n+         Language_Name := Tmp_Lang.Name;\n \n          if Current_Verbosity = High then\n             Write_Line\n@@ -7744,42 +7586,39 @@ package body Prj.Nmsc is\n                & \" Header_File=\" & Header_File'Img);\n          end if;\n \n-         if Tmp_Lang /= No_Language_Index then\n-            Display_Language_Name :=\n-              In_Tree.Languages_Data.Table (Tmp_Lang).Display_Name;\n-            Config := In_Tree.Languages_Data.Table (Tmp_Lang).Config;\n-            Lang_Kind := Config.Kind;\n-\n-            case Config.Kind is\n-               when File_Based =>\n-                  Check_File_Based_Lang;\n-                  exit when Kind = Impl;\n-\n-               when Unit_Based =>\n-\n-                  --  We know it belongs to a least a file_based language, no\n-                  --  need to check unit-based ones.\n-\n-                  if not Header_File then\n-                     Compute_Unit_Name\n-                       (File_Name       => File_Name,\n-                        Dot_Replacement => Config.Naming_Data.Dot_Replacement,\n-                        Separate_Suffix => Config.Naming_Data.Separate_Suffix,\n-                        Body_Suffix     => Config.Naming_Data.Body_Suffix,\n-                        Spec_Suffix     => Config.Naming_Data.Spec_Suffix,\n-                        Casing          => Config.Naming_Data.Casing,\n-                        Kind            => Kind,\n-                        Unit            => Unit);\n-\n-                     if Unit /= No_Name then\n-                        Language    := Tmp_Lang;\n-                        exit;\n-                     end if;\n+         Display_Language_Name := Tmp_Lang.Display_Name;\n+         Config := Tmp_Lang.Config;\n+         Lang_Kind := Config.Kind;\n+\n+         case Config.Kind is\n+            when File_Based =>\n+               Check_File_Based_Lang;\n+               exit when Kind = Impl;\n+\n+            when Unit_Based =>\n+\n+               --  We know it belongs to a least a file_based language, no\n+               --  need to check unit-based ones.\n+\n+               if not Header_File then\n+                  Compute_Unit_Name\n+                    (File_Name       => File_Name,\n+                     Dot_Replacement => Config.Naming_Data.Dot_Replacement,\n+                     Separate_Suffix => Config.Naming_Data.Separate_Suffix,\n+                     Body_Suffix     => Config.Naming_Data.Body_Suffix,\n+                     Spec_Suffix     => Config.Naming_Data.Spec_Suffix,\n+                     Casing          => Config.Naming_Data.Casing,\n+                     Kind            => Kind,\n+                     Unit            => Unit);\n+\n+                  if Unit /= No_Name then\n+                     Language    := Tmp_Lang;\n+                     exit;\n                   end if;\n-            end case;\n-         end if;\n+               end if;\n+         end case;\n \n-         Lang := In_Tree.Name_Lists.Table (Lang).Next;\n+         Tmp_Lang := Tmp_Lang.Next;\n       end loop;\n \n       if Language = No_Language_Index\n@@ -7815,7 +7654,7 @@ package body Prj.Nmsc is\n       Display_Path_Id   : Path_Name_Type;\n       Check_Name        : Boolean := False;\n       Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n-      Language          : Language_Index;\n+      Language          : Language_Ptr;\n       Source            : Source_Id;\n       Other_Part        : Source_Id;\n       Add_Src           : Boolean;\n@@ -8477,9 +8316,9 @@ package body Prj.Nmsc is\n       Source_Names.Reset;\n       Find_Excluded_Sources (Project, In_Tree, Data);\n \n-      if (Get_Mode = Ada_Only and then Is_A_Language (In_Tree, Data, Name_Ada))\n+      if (Get_Mode = Ada_Only and then Is_A_Language (Data, Name_Ada))\n         or else (Get_Mode = Multi_Language\n-                  and then Data.First_Language_Processing /= No_Language_Index)\n+                  and then Data.Languages /= No_Language_Index)\n       then\n          if Get_Mode = Multi_Language then\n             Load_Naming_Exceptions (Project, In_Tree, Data);\n@@ -8954,11 +8793,10 @@ package body Prj.Nmsc is\n \n       --  Remove source from the language list\n \n-      Source := In_Tree.Languages_Data.Table (Src_Data.Language).First_Source;\n+      Source := Src_Data.Language.First_Source;\n \n       if Source = Id then\n-         In_Tree.Languages_Data.Table (Src_Data.Language).First_Source :=\n-           Src_Data.Next_In_Lang;\n+         Src_Data.Language.First_Source := Src_Data.Next_In_Lang;\n \n       else\n          while In_Tree.Sources.Table (Source).Next_In_Lang /= Id loop"}, {"sha": "e626525836b16f95b6eb7f2306e565e522a597ff", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 51, "deletions": 69, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=e0697153ed8242c02e71b878b12a12a8e46f5aa0", "patch": "@@ -86,7 +86,6 @@ package body Prj is\n                      (Qualifier                      => Unspecified,\n                       Externally_Built               => False,\n                       Config                         => Default_Project_Config,\n-                      Languages                      => No_Name_List,\n                       Name                           => No_Name,\n                       Display_Name                   => No_Name,\n                       Path                           => No_Path_Information,\n@@ -124,7 +123,7 @@ package body Prj is\n                       Extends                        => No_Project,\n                       Extended_By                    => No_Project,\n                       Naming                         => Std_Naming_Data,\n-                      First_Language_Processing      => No_Language_Index,\n+                      Languages      => No_Language_Index,\n                       Decl                           => No_Declarations,\n                       Imported_Projects              => Empty_Project_List,\n                       All_Imported_Projects          => Empty_Project_List,\n@@ -156,6 +155,9 @@ package body Prj is\n    procedure Free (Project : in out Project_Data);\n    --  Free memory allocated for Project\n \n+   procedure Free_List (Languages : in out Language_Ptr);\n+   --  Free memory allocated for the list of languages\n+\n    -------------------\n    -- Add_To_Buffer --\n    -------------------\n@@ -225,7 +227,7 @@ package body Prj is\n       Element_Id : Array_Element_Id;\n       Element    : Array_Element;\n       Suffix     : File_Name_Type := No_File;\n-      Lang       : Language_Index;\n+      Lang       : Language_Ptr;\n \n    begin\n       --  ??? This seems to be only for Ada_Only mode...\n@@ -243,14 +245,12 @@ package body Prj is\n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n          while Lang /= No_Language_Index loop\n-            if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n-               Suffix :=\n-                 In_Tree.Languages_Data.Table\n-                   (Lang).Config.Naming_Data.Body_Suffix;\n+            if Lang.Name = Language_Id then\n+               Suffix := Lang.Config.Naming_Data.Body_Suffix;\n                exit;\n             end if;\n \n-            Lang := In_Tree.Languages_Data.Table (Lang).Next;\n+            Lang := Lang.Next;\n          end loop;\n       end if;\n \n@@ -270,7 +270,7 @@ package body Prj is\n       Element_Id  : Array_Element_Id;\n       Element     : Array_Element;\n       Suffix      : File_Name_Type := No_File;\n-      Lang        : Language_Index;\n+      Lang        : Language_Ptr;\n \n    begin\n       Name_Len := 0;\n@@ -292,15 +292,12 @@ package body Prj is\n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n          while Lang /= No_Language_Index loop\n-            if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n-               Suffix :=\n-                 File_Name_Type\n-                   (In_Tree.Languages_Data.Table\n-                        (Lang).Config.Naming_Data.Body_Suffix);\n+            if Lang.Name = Language_Id then\n+               Suffix := File_Name_Type (Lang.Config.Naming_Data.Body_Suffix);\n                exit;\n             end if;\n \n-            Lang := In_Tree.Languages_Data.Table (Lang).Next;\n+            Lang := Lang.Next;\n          end loop;\n \n          if Suffix /= No_File then\n@@ -377,11 +374,10 @@ package body Prj is\n    ---------------------------\n \n    procedure Display_Language_Name\n-     (In_Tree  : Project_Tree_Ref;\n-      Language : Language_Index)\n+     (Language : Language_Ptr)\n    is\n    begin\n-      Get_Name_String (In_Tree.Languages_Data.Table (Language).Display_Name);\n+      Get_Name_String (Language.Display_Name);\n       Write_Str (Name_Buffer (1 .. Name_Len));\n    end Display_Language_Name;\n \n@@ -600,41 +596,18 @@ package body Prj is\n    -------------------\n \n    function Is_A_Language\n-     (Tree          : Project_Tree_Ref;\n-      Data          : Project_Data;\n+     (Data          : Project_Data;\n       Language_Name : Name_Id) return Boolean\n    is\n+      Lang_Ind  : Language_Ptr := Data.Languages;\n    begin\n-      if Get_Mode = Ada_Only then\n-         declare\n-            List : Name_List_Index := Data.Languages;\n-         begin\n-            while List /= No_Name_List loop\n-               if Tree.Name_Lists.Table (List).Name = Language_Name then\n-                  return True;\n-               else\n-                  List := Tree.Name_Lists.Table (List).Next;\n-               end if;\n-            end loop;\n-         end;\n-\n-      else\n-         declare\n-            Lang_Ind  : Language_Index := Data.First_Language_Processing;\n-            Lang_Data : Language_Data;\n-\n-         begin\n-            while Lang_Ind /= No_Language_Index loop\n-               Lang_Data := Tree.Languages_Data.Table (Lang_Ind);\n-\n-               if Lang_Data.Name = Language_Name then\n-                  return True;\n-               end if;\n+      while Lang_Ind /= No_Language_Index loop\n+         if Lang_Ind.Name = Language_Name then\n+            return True;\n+         end if;\n \n-               Lang_Ind := Lang_Data.Next;\n-            end loop;\n-         end;\n-      end if;\n+         Lang_Ind := Lang_Ind.Next;\n+      end loop;\n \n       return False;\n    end Is_A_Language;\n@@ -672,7 +645,7 @@ package body Prj is\n       In_Tree  : Project_Tree_Ref) return Boolean\n    is\n       Language_Id : Name_Id;\n-      Lang        : Language_Index;\n+      Lang        : Language_Ptr;\n \n    begin\n       if Current_Mode = Multi_Language then\n@@ -683,13 +656,11 @@ package body Prj is\n \n          Lang := In_Tree.First_Language;\n          while Lang /= No_Language_Index loop\n-            if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n-               return\n-                 In_Tree.Languages_Data.Table\n-                   (Lang).Config.Object_Generated;\n+            if Lang.Name = Language_Id then\n+               return Lang.Config.Object_Generated;\n             end if;\n \n-            Lang := In_Tree.Languages_Data.Table (Lang).Next;\n+            Lang := Lang.Next;\n          end loop;\n       end if;\n \n@@ -842,6 +813,22 @@ package body Prj is\n       Free (Project.Ada_Objects_Path);\n    end Free;\n \n+   ---------------\n+   -- Free_List --\n+   ---------------\n+\n+   procedure Free_List (Languages : in out Language_Ptr) is\n+      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n+        (Language_Data, Language_Ptr);\n+      Tmp : Language_Ptr;\n+   begin\n+      while Languages /= null loop\n+         Tmp := Languages.Next;\n+         Unchecked_Free (Languages);\n+         Languages := Tmp;\n+      end loop;\n+   end Free_List;\n+\n    ----------\n    -- Free --\n    ----------\n@@ -851,7 +838,6 @@ package body Prj is\n         (Project_Tree_Data, Project_Tree_Ref);\n    begin\n       if Tree /= null then\n-         Language_Data_Table.Free (Tree.Languages_Data);\n          Name_List_Table.Free (Tree.Name_Lists);\n          String_Element_Table.Free (Tree.String_Elements);\n          Variable_Element_Table.Free (Tree.Variable_Elements);\n@@ -870,6 +856,7 @@ package body Prj is\n          for P in Project_Table.First ..\n            Project_Table.Last (Tree.Projects)\n          loop\n+            Free_List (Tree.Projects.Table (P).Languages);\n             Free (Tree.Projects.Table (P));\n          end loop;\n \n@@ -899,7 +886,6 @@ package body Prj is\n \n       --  Visible tables\n \n-      Language_Data_Table.Init      (Tree.Languages_Data);\n       Name_List_Table.Init          (Tree.Name_Lists);\n       String_Element_Table.Init     (Tree.String_Elements);\n       Variable_Element_Table.Init   (Tree.Variable_Elements);\n@@ -1107,7 +1093,7 @@ package body Prj is\n       Element_Id : Array_Element_Id;\n       Element    : Array_Element;\n       Suffix     : File_Name_Type := No_File;\n-      Lang       : Language_Index;\n+      Lang       : Language_Ptr;\n \n    begin\n       Element_Id := Naming.Spec_Suffix;\n@@ -1124,14 +1110,12 @@ package body Prj is\n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n          while Lang /= No_Language_Index loop\n-            if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n-               Suffix :=\n-                 In_Tree.Languages_Data.Table\n-                   (Lang).Config.Naming_Data.Spec_Suffix;\n+            if Lang.Name = Language_Id then\n+               Suffix := Lang.Config.Naming_Data.Spec_Suffix;\n                exit;\n             end if;\n \n-            Lang := In_Tree.Languages_Data.Table (Lang).Next;\n+            Lang := Lang.Next;\n          end loop;\n       end if;\n \n@@ -1151,7 +1135,7 @@ package body Prj is\n       Element_Id  : Array_Element_Id;\n       Element     : Array_Element;\n       Suffix      : File_Name_Type := No_File;\n-      Lang        : Language_Index;\n+      Lang        : Language_Ptr;\n \n    begin\n       Name_Len := 0;\n@@ -1173,15 +1157,13 @@ package body Prj is\n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n          while Lang /= No_Language_Index loop\n-            if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n+            if Lang.Name = Language_Id then\n                Suffix :=\n-                 File_Name_Type\n-                   (In_Tree.Languages_Data.Table\n-                      (Lang).Config.Naming_Data.Spec_Suffix);\n+                 File_Name_Type (Lang.Config.Naming_Data.Spec_Suffix);\n                exit;\n             end if;\n \n-            Lang := In_Tree.Languages_Data.Table (Lang).Next;\n+            Lang := Lang.Next;\n          end loop;\n \n          if Suffix /= No_File then"}, {"sha": "789a17f9612b64c9818e68d81ae504f31009335d", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0697153ed8242c02e71b878b12a12a8e46f5aa0/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e0697153ed8242c02e71b878b12a12a8e46f5aa0", "patch": "@@ -307,15 +307,15 @@ package Prj is\n       Table_Increment      => 100);\n    --  The table that contains all packages\n \n-   type Language_Index is new Nat;\n+   type Language_Data;\n+   type Language_Ptr is access Language_Data;\n    --  Index of language data\n \n-   No_Language_Index : constant Language_Index := 0;\n+   No_Language_Index : constant Language_Ptr := null;\n    --  Constant indicating that there is no language data\n \n    procedure Display_Language_Name\n-     (In_Tree  : Project_Tree_Ref;\n-      Language : Language_Index);\n+     (Language : Language_Ptr);\n    --  Output the name of a language\n \n    Max_Header_Num : constant := 6150;\n@@ -596,7 +596,7 @@ package Prj is\n       First_Source  : Source_Id       := No_Source;\n       Mapping_Files : Mapping_Files_Htable.Instance :=\n                         Mapping_Files_Htable.Nil;\n-      Next          : Language_Index  := No_Language_Index;\n+      Next          : Language_Ptr  := No_Language_Index;\n    end record;\n \n    No_Language_Data : constant Language_Data :=\n@@ -607,20 +607,12 @@ package Prj is\n                          Mapping_Files => Mapping_Files_Htable.Nil,\n                          Next          => No_Language_Index);\n \n-   package Language_Data_Table is new GNAT.Dynamic_Tables\n-     (Table_Component_Type => Language_Data,\n-      Table_Index_Type     => Language_Index,\n-      Table_Low_Bound      => 1,\n-      Table_Initial        => 10,\n-      Table_Increment      => 100);\n-   --  The table for lists of names used in package Language_Processing\n-\n    type Alternate_Language_Id is new Nat;\n \n    No_Alternate_Language : constant Alternate_Language_Id := 0;\n \n    type Alternate_Language_Data is record\n-      Language : Language_Index := No_Language_Index;\n+      Language : Language_Ptr := No_Language_Index;\n       Next     : Alternate_Language_Id := No_Alternate_Language;\n    end record;\n \n@@ -639,7 +631,7 @@ package Prj is\n       Project             : Project_Id            := No_Project;\n       --  Project of the source\n \n-      Language            : Language_Index        := No_Language_Index;\n+      Language            : Language_Ptr        := No_Language_Index;\n       --  Index of the language. This is an index into\n       --  project_tree.languages_data\n \n@@ -1174,14 +1166,11 @@ package Prj is\n       -- Languages --\n       ---------------\n \n-      Languages : Name_List_Index := No_Name_List;\n-      --  The list of languages of the sources of this project\n-      --  mode: Ada_Only\n-\n-      First_Language_Processing : Language_Index := No_Language_Index;\n+      Languages : Language_Ptr := No_Language_Index;\n       --  First index of the language data in the project.\n-      --  This is an index into the project_tree_data.languages_data\n-      --  mode: Multi_Language\n+      --  This is an index into the project_tree_data.languages_data.\n+      --  Traversing the list gives access to all the languages supported by\n+      --  the project.\n \n       --------------\n       -- Projects --\n@@ -1391,8 +1380,7 @@ package Prj is\n    --  ??? needs comment\n \n    function Is_A_Language\n-     (Tree          : Project_Tree_Ref;\n-      Data          : Project_Data;\n+     (Data          : Project_Data;\n       Language_Name : Name_Id) return Boolean;\n    --  Return True when Language_Name (which must be lower case) is one of the\n    --  languages used for the project.\n@@ -1471,15 +1459,14 @@ package Prj is\n       record\n          --  Languages and sources of the project\n \n-         First_Language : Language_Index  := No_Language_Index;\n+         First_Language : Language_Ptr  := No_Language_Index;\n          --\n \n          First_Source : Source_Id := No_Source;\n          --\n \n          --  Tables\n \n-         Languages_Data    : Language_Data_Table.Instance;\n          Name_Lists        : Name_List_Table.Instance;\n          String_Elements   : String_Element_Table.Instance;\n          Variable_Elements : Variable_Element_Table.Instance;"}]}