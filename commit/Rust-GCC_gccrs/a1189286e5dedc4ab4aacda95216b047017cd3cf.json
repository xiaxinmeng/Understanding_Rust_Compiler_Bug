{"sha": "a1189286e5dedc4ab4aacda95216b047017cd3cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTExODkyODZlNWRlZGM0YWI0YWFjZGE5NTIxNmIwNDcwMTdjZDNjZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-15T15:54:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-15T15:54:04Z"}, "message": "re PR rtl-optimization/82192 (gcc produces incorrect code with -O2 and bit-field)\n\n\tPR rtl-optimization/82192\n\t* combine.c (make_extraction): Don't look through non-paradoxical\n\tSUBREGs or TRUNCATE if pos + len is or might be bigger than\n\tinner's mode.\n\n\t* gcc.c-torture/execute/pr82192.c: New test.\n\nFrom-SVN: r252824", "tree": {"sha": "a04038ed07d498e752afbd26f1ad98c025f14411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04038ed07d498e752afbd26f1ad98c025f14411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1189286e5dedc4ab4aacda95216b047017cd3cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1189286e5dedc4ab4aacda95216b047017cd3cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1189286e5dedc4ab4aacda95216b047017cd3cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1189286e5dedc4ab4aacda95216b047017cd3cf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "681f5b7cc8e80ef09f4692fac5bf3824e4854d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681f5b7cc8e80ef09f4692fac5bf3824e4854d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681f5b7cc8e80ef09f4692fac5bf3824e4854d54"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "8c9988fccfb1c35b9dfb9eb702ada3eab3ed480f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1189286e5dedc4ab4aacda95216b047017cd3cf", "patch": "@@ -1,3 +1,10 @@\n+2017-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/82192\n+\t* combine.c (make_extraction): Don't look through non-paradoxical\n+\tSUBREGs or TRUNCATE if pos + len is or might be bigger than\n+\tinner's mode.\n+\n 2017-09-15  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "e502fa147267d071adc0e47764ad8ded56ca0683", "filename": "gcc/combine.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a1189286e5dedc4ab4aacda95216b047017cd3cf", "patch": "@@ -7442,7 +7442,14 @@ make_extraction (machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n   if (pos_rtx && CONST_INT_P (pos_rtx))\n     pos = INTVAL (pos_rtx), pos_rtx = 0;\n \n-  if (GET_CODE (inner) == SUBREG && subreg_lowpart_p (inner))\n+  if (GET_CODE (inner) == SUBREG\n+      && subreg_lowpart_p (inner)\n+      && (paradoxical_subreg_p (inner)\n+\t  /* If trying or potentionally trying to extract\n+\t     bits outside of is_mode, don't look through\n+\t     non-paradoxical SUBREGs.  See PR82192.  */\n+\t  || (pos_rtx == NULL_RTX\n+\t      && pos + len <= GET_MODE_PRECISION (is_mode))))\n     {\n       /* If going from (subreg:SI (mem:QI ...)) to (mem:QI ...),\n \t consider just the QI as the memory to extract from.\n@@ -7468,7 +7475,12 @@ make_extraction (machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n       if (new_rtx != 0)\n \treturn gen_rtx_ASHIFT (mode, new_rtx, XEXP (inner, 1));\n     }\n-  else if (GET_CODE (inner) == TRUNCATE)\n+  else if (GET_CODE (inner) == TRUNCATE\n+\t   /* If trying or potentionally trying to extract\n+\t      bits outside of is_mode, don't look through\n+\t      TRUNCATE.  See PR82192.  */\n+\t   && pos_rtx == NULL_RTX\n+\t   && pos + len <= GET_MODE_PRECISION (is_mode))\n     inner = XEXP (inner, 0);\n \n   inner_mode = GET_MODE (inner);"}, {"sha": "eadffc168614dd90ff9e606dbacbfb7be56c9791", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1189286e5dedc4ab4aacda95216b047017cd3cf", "patch": "@@ -1,3 +1,8 @@\n+2017-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/82192\n+\t* gcc.c-torture/execute/pr82192.c: New test.\n+\n 2017-09-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82217"}, {"sha": "9e56e203c840bfbd74b423952e1e4046efadbd2e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr82192.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr82192.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1189286e5dedc4ab4aacda95216b047017cd3cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr82192.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr82192.c?ref=a1189286e5dedc4ab4aacda95216b047017cd3cf", "patch": "@@ -0,0 +1,22 @@\n+/* PR rtl-optimization/82192 */\n+\n+unsigned long long int a = 0x95dd3d896f7422e2ULL;\n+struct S { unsigned int m : 13; } b;\n+\n+__attribute__((noinline, noclone)) void\n+foo (void)\n+{\n+  b.m = ((unsigned) a) >> (0x644eee9667723bf7LL\n+\t\t\t   | a & ~0xdee27af8U) - 0x644eee9667763bd8LL;\n+}\n+\n+int\n+main ()\n+{\n+  if (__INT_MAX__ != 0x7fffffffULL)\n+    return 0;\n+  foo ();\n+  if (b.m != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}