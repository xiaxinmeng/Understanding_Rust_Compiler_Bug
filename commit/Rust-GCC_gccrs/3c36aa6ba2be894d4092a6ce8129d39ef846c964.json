{"sha": "3c36aa6ba2be894d4092a6ce8129d39ef846c964", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzNmFhNmJhMmJlODk0ZDQwOTJhNmNlODEyOWQzOWVmODQ2Yzk2NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-17T09:38:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-17T09:38:48Z"}, "message": "re PR other/79046 (g++ -print-file-name=plugin uses full version number in path)\n\n\tPR other/79046\n\t* configure: Regenerated.\nconfig/\n\t* acx.m4 (GCC_BASE_VER): New m4 function.\n\t(ACX_TOOL_DIRS): Require GCC_BASE_VER, for\n\t--with-gcc-major-version-only use just major number from BASE-VER.\ngcc/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n\tversion from BASE-VER file.\n\t(CFLAGS-gcc.o): Add -DBASEVER=$(BASEVER_s).\n\t(gcc.o): Depend on $(BASEVER).\n\t* common.opt (dumpfullversion): New option.\n\t* gcc.c (driver_handle_option): Handle OPT_dumpfullversion.\n\t* doc/invoke.texi: Document -dumpfullversion.\n\t* doc/install.texi: Document --with-gcc-major-version-only.\n\t* configure: Regenerated.\nlibatomic/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibgomp/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibgcc/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n\tversion from BASE-VER file.\n\t* configure: Regenerated.\nlibssp/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nliboffloadmic/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* aclocal.m4: Include ../config/acx.m4.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibquadmath/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibmpx/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibada/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n\tversion from BASE-VER file.\n\t* configure: Regenerated.\nlto-plugin/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibitm/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nfixincludes/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.in (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\nlibcilkrts/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* aclocal.m4: Include ../config/acx.m4.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibcc1/\n\t* configure.ac: Add GCC_BASE_VER.  For --with-gcc-major-version-only\n\tuse just major number from BASE-VER.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibobjc/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.in (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\nlibstdc++-v3/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* fragment.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* po/Makefile.in: Regenerated.\n\t* libsupc++/Makefile.in: Regenerated.\n\t* testsuite/Makefile.in: Regenerated.\n\t* src/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* include/Makefile.in: Regenerated.\n\t* doc/Makefile.in: Regenerated.\n\t* python/Makefile.in: Regenerated.\n\t* src/c++11/Makefile.in: Regenerated.\n\t* src/c++98/Makefile.in: Regenerated.\n\t* src/filesystem/Makefile.in: Regenerated.\nlibvtv/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* testsuite/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\nlibsanitizer/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* libbacktrace/Makefile.in: Regenerated.\n\t* interception/Makefile.in: Regenerated.\n\t* asan/Makefile.in: Regenerated.\n\t* ubsan/Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\t* sanitizer_common/Makefile.in: Regenerated.\n\t* lsan/Makefile.in: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* tsan/Makefile.in: Regenerated.\nlibgfortran/\n\t* configure.ac: Add GCC_BASE_VER.\n\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n\tget version from BASE-VER file.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r244521", "tree": {"sha": "cc0e0034b0345bc500f0910812bc430e4df80e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0e0034b0345bc500f0910812bc430e4df80e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c36aa6ba2be894d4092a6ce8129d39ef846c964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c36aa6ba2be894d4092a6ce8129d39ef846c964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c36aa6ba2be894d4092a6ce8129d39ef846c964", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c36aa6ba2be894d4092a6ce8129d39ef846c964/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12314dc98976f0dc987ec8081e4672b76507e46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12314dc98976f0dc987ec8081e4672b76507e46e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12314dc98976f0dc987ec8081e4672b76507e46e"}], "stats": {"total": 946, "additions": 851, "deletions": 95}, "files": [{"sha": "92919938217efebfd46f3e84c08f1106e942d5b9", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,8 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure: Regenerated.\n+\n 2017-01-04  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."}, {"sha": "0ad1a300d48463c6f692c08f483ebc0ec2f5439f", "filename": "config/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,10 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* acx.m4 (GCC_BASE_VER): New m4 function.\n+\t(ACX_TOOL_DIRS): Require GCC_BASE_VER, for\n+\t--with-gcc-major-version-only use just major number from BASE-VER.\n+\n 2017-01-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR go/78978"}, {"sha": "aa1d34b2b4962abe22cddd6b65ff05446056986f", "filename": "config/acx.m4", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/config%2Facx.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/config%2Facx.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facx.m4?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -235,8 +235,28 @@ fi\n ])\n \n \n+dnl ####\n+dnl # GCC_BASE_VER\n+dnl # Determine GCC version number to use in compiler directories.\n+\n+AC_DEFUN([GCC_BASE_VER],\n+[\n+  get_gcc_base_ver=\"cat\"\n+  AC_ARG_WITH(gcc-major-version-only,\n+  [AS_HELP_STRING([--with-gcc-major-version-only], [use only GCC major number in filesystem paths])],\n+  [if test x$with_gcc_major_version_only = xyes ; then\n+    changequote(,)dnl\n+    get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+    changequote([,])dnl\n+  fi\n+  ])\n+  AC_SUBST(get_gcc_base_ver)\n+])\n+\n+\n AC_DEFUN([ACX_TOOL_DIRS], [\n AC_REQUIRE([ACX_PATH_SEP])\n+AC_REQUIRE([GCC_BASE_VER])\n if test \"x$exec_prefix\" = xNONE; then\n         if test \"x$prefix\" = xNONE; then\n                 gcc_cv_tool_prefix=$ac_default_prefix\n@@ -251,7 +271,13 @@ fi\n # case, if there is no compiler in the tree nobody should use\n # AS_FOR_TARGET and LD_FOR_TARGET.\n if test x$host = x$build && test -f $srcdir/gcc/BASE-VER; then\n-    gcc_version=`cat $srcdir/gcc/BASE-VER`\n+    if test x$with_gcc_major_version_only = xyes ; then\n+        changequote(,)dnl\n+        gcc_version=`sed -e 's/^\\([0-9]*\\).*$/\\1/' $srcdir/gcc/BASE-VER`\n+        changequote([,])dnl\n+    else\n+        gcc_version=`cat $srcdir/gcc/BASE-VER`\n+    fi\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR\"\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_dirs$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical$PATH_SEPARATOR\"\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR\""}, {"sha": "60532fe4c1bca97e6ce77c95678fa07fa8313b1b", "filename": "configure", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -641,6 +641,7 @@ CXXFLAGS_FOR_TARGET\n CFLAGS_FOR_TARGET\n DEBUG_PREFIX_CFLAGS_FOR_TARGET\n SYSROOT_CFLAGS_FOR_TARGET\n+get_gcc_base_ver\n extra_host_zlib_configure_flags\n extra_host_libiberty_configure_flags\n stage1_languages\n@@ -786,6 +787,7 @@ enable_objc_gc\n with_target_bdw_gc\n with_target_bdw_gc_include\n with_target_bdw_gc_lib\n+with_gcc_major_version_only\n with_build_sysroot\n with_debug_prefix_map\n with_build_config\n@@ -1562,6 +1564,8 @@ Optional Packages:\n                           files\n   --with-target-bdw-gc-lib=PATHLIST\n                           specify directories for installed bdw-gc library\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n   --with-build-sysroot=SYSROOT\n                           use sysroot as the system root during the build\n   --with-debug-prefix-map='A=B C=D ...'\n@@ -6619,6 +6623,20 @@ if test \"${PATH_SEPARATOR+set}\" != set; then\n fi\n \n \n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n+\n \n if test \"x$exec_prefix\" = xNONE; then\n         if test \"x$prefix\" = xNONE; then\n@@ -6634,7 +6652,11 @@ fi\n # case, if there is no compiler in the tree nobody should use\n # AS_FOR_TARGET and LD_FOR_TARGET.\n if test x$host = x$build && test -f $srcdir/gcc/BASE-VER; then\n-    gcc_version=`cat $srcdir/gcc/BASE-VER`\n+    if test x$with_gcc_major_version_only = xyes ; then\n+                gcc_version=`sed -e 's/^\\([0-9]*\\).*$/\\1/' $srcdir/gcc/BASE-VER`\n+            else\n+        gcc_version=`cat $srcdir/gcc/BASE-VER`\n+    fi\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR\"\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_dirs$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical$PATH_SEPARATOR\"\n     gcc_cv_tool_dirs=\"$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR\""}, {"sha": "60ee208b4efc495bc517d786cd00e4679d86762f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,11 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\n 2017-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libstdc++/78979"}, {"sha": "1937dcaa32d5f53b8f811d84f8836b7d5b2bce1c", "filename": "fixincludes/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -49,7 +49,7 @@ target = @target@\n target_noncanonical:=@target_noncanonical@\n \n # The version of GCC in this tree\n-gcc_version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n \n # Directory in which the compiler finds libraries etc.\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)"}, {"sha": "ab97983f327d487bb87e0e4130706dd54c4fc769", "filename": "fixincludes/configure", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -590,6 +590,7 @@ ac_includes_default=\"\\\n \n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n MAINT\n TARGET\n target_noncanonical\n@@ -664,6 +665,7 @@ enable_werror_always\n with_local_prefix\n enable_twoprocess\n enable_maintainer_mode\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1298,6 +1300,8 @@ Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-local-prefix=DIR specifies directory to put local include\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -4561,6 +4565,12 @@ $as_echo \"$ac_cv_path_SED\" >&6; }\n # Figure out what compiler warnings we can enable.\n # See config/warnings.m4 for details.\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n WARN_CFLAGS=\n save_CFLAGS=\"$CFLAGS\"\n for real_option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n@@ -4607,6 +4617,18 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n WARN_PEDANTIC=\n # Do the check with the no- prefix removed from the warning options\n@@ -4645,10 +4667,22 @@ if test $acx_cv_prog_cc_pedantic__Wlong_long = yes; then :\n fi\n \n fi\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n \n \n # Only enable with --enable-werror-always until existing warnings are\n # corrected.\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n WERROR=\n # Check whether --enable-werror-always was given.\n if test \"${enable_werror_always+set}\" = set; then :\n@@ -4661,6 +4695,12 @@ if test $enable_werror_always = yes; then :\n   WERROR=\"$WERROR${WERROR:+ }-Werror\"\n fi\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n \n \n # Determine the noncanonical target name, for directory use.\n@@ -5354,6 +5394,21 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_headers=\"$ac_config_headers config.h\"\n \n ac_config_files=\"$ac_config_files Makefile mkheaders.almost:mkheaders.in\""}, {"sha": "190f53828744dca8589636325ba6812d80032bea", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -114,6 +114,9 @@ AC_SUBST(MAINT)\n AC_DEFINE_UNQUOTED([SED_PROGRAM], \"${SED}\",\n    [Defined to the best working sed program on the host system])\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_HEADERS(config.h, [echo timestamp > stamp-h])\n AC_CONFIG_FILES(Makefile mkheaders.almost:mkheaders.in)\n AC_OUTPUT"}, {"sha": "bef211cbd3e80bdd26c2c790018ec51ae937943c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,17 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n+\tversion from BASE-VER file.\n+\t(CFLAGS-gcc.o): Add -DBASEVER=$(BASEVER_s).\n+\t(gcc.o): Depend on $(BASEVER).\n+\t* common.opt (dumpfullversion): New option.\n+\t* gcc.c (driver_handle_option): Handle OPT_dumpfullversion.\n+\t* doc/invoke.texi: Document -dumpfullversion.\n+\t* doc/install.texi: Document --with-gcc-major-version-only.\n+\t* configure: Regenerated.\n+\n 2017-01-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71433"}, {"sha": "7a7e27ac2955c227dfc0914c959d06a2ebf7aef6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -856,7 +856,7 @@ else\n REVISION_c  := $(shell cat $(REVISION))\n endif\n \n-version     := $(BASEVER_c)\n+version     := $(shell @get_gcc_base_ver@ $(BASEVER))\n \n PATCHLEVEL_c := \\\n   $(shell echo $(BASEVER_c) | sed -e 's/^[0-9]*\\.[0-9]*\\.\\([0-9]*\\)$$/\\1/')\n@@ -2124,7 +2124,8 @@ DRIVER_DEFINES = \\\n   $(if $(SHLIB),$(if $(filter yes,@enable_shared@),-DENABLE_SHARED_LIBGCC)) \\\n   -DCONFIGURE_SPECS=\"\\\"@CONFIGURE_SPECS@\\\"\"\n \n-CFLAGS-gcc.o += $(DRIVER_DEFINES)\n+CFLAGS-gcc.o += $(DRIVER_DEFINES) -DBASEVER=$(BASEVER_s)\n+gcc.o: $(BASEVER)\n \n specs.h : s-specs ; @true\n s-specs : Makefile"}, {"sha": "ad6baa3db68202bbe7a1cdc3487bc930d592ea05", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -849,6 +849,9 @@ Driver\n dumpversion\n Driver\n \n+dumpfullversion\n+Driver\n+\n e\n Driver Joined Separate\n "}, {"sha": "c9e43fb80e3ba32b9e1921498cc9f0e3cc8fb5dd", "filename": "gcc/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -734,6 +734,7 @@ INCINTL\n LIBINTL_DEP\n LIBINTL\n USE_NLS\n+get_gcc_base_ver\n extra_opt_files\n extra_modes_file\n NATIVE_SYSTEM_HEADER_DIR\n@@ -918,6 +919,7 @@ with_multilib_list\n enable_rpath\n with_libiconv_prefix\n enable_sjlj_exceptions\n+with_gcc_major_version_only\n enable_secureplt\n enable_leading_mingw64_underscores\n enable_cld\n@@ -1721,6 +1723,8 @@ Optional Packages:\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib\n   --without-libiconv-prefix     don't search for libiconv in includedir and libdir\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -11860,6 +11864,21 @@ static struct plugin_gcc_version gcc_version = {basever, datestamp,\n \t\t\t\t\t\tconfiguration_arguments};\n EOF\n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # Internationalization\n # If we haven't got the data from the intl directory,\n # assume NLS is disabled.\n@@ -18414,7 +18433,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18417 \"configure\"\n+#line 18436 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18520,7 +18539,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18523 \"configure\"\n+#line 18542 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "33f9a0ecdc677b92b0b2e059070742232c8314cc", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1794,6 +1794,9 @@ static struct plugin_gcc_version gcc_version = {basever, datestamp,\n EOF\n changequote([,])dnl\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # Internationalization\n ZW_GNU_GETTEXT_SISTER_DIR\n "}, {"sha": "713d22536b54ced2924bb9e06eefb12edb9ee5b4", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -894,6 +894,10 @@ ideas of what it is for.  People use it as if it specified where to\n install part of GCC@.  Perhaps they make this assumption because\n installing GCC creates the directory.\n \n+@item --with-gcc-major-version-only\n+Specifies that GCC should use only the major number rather than\n+@var{major}.@var{minor}.@var{patchlevel} in filesystem paths.\n+\n @item --with-native-system-header-dir=@var{dirname}\n Specifies that @var{dirname} is the directory that contains native system\n header files, rather than @file{/usr/include}.  This option is most useful"}, {"sha": "e0624dac0d77f0f10df1206717f16c710026b192", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -529,7 +529,7 @@ Objective-C and Objective-C++ Dialects}.\n @item Developer Options\n @xref{Developer Options,,GCC Developer Options}.\n @gccoptlist{-d@var{letters}  -dumpspecs  -dumpmachine  -dumpversion @gol\n--fchecking  -fchecking=@var{n}  -fdbg-cnt-list @gol\n+-dumpfullversion  -fchecking  -fchecking=@var{n}  -fdbg-cnt-list @gol\n -fdbg-cnt=@var{counter-value-list} @gol\n -fdisable-ipa-@var{pass_name} @gol\n -fdisable-rtl-@var{pass_name} @gol\n@@ -13772,8 +13772,17 @@ Print the compiler's target machine (for example,\n \n @item -dumpversion\n @opindex dumpversion\n-Print the compiler version (for example, @code{3.0})---and don't do\n-anything else.\n+Print the compiler version (for example, @code{3.0}, @code{6.3.0} or @code{7})---and don't do\n+anything else.  This is the compiler version used in filesystem paths,\n+specs, can be depending on how the compiler has been configured just\n+a single number (major version), two numbers separated by dot (major and\n+minor version) or three numbers separated by dots (major, minor and patchlevel\n+version).\n+\n+@item -dumpfullversion\n+@opindex dumpfullversion\n+Print the full compiler version, always 3 numbers separated by dots,\n+major, minor and patchlevel version.\n \n @item -dumpspecs\n @opindex dumpspecs"}, {"sha": "826b012cd77384031e2cdef49fd314fe7879decd", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -3778,6 +3778,10 @@ driver_handle_option (struct gcc_options *opts,\n       printf (\"%s\\n\", spec_machine);\n       exit (0);\n \n+    case OPT_dumpfullversion:\n+      printf (\"%s\\n\", BASEVER);\n+      exit (0);\n+\n     case OPT__version:\n       print_version = 1;\n "}, {"sha": "de1dfa09fb09c93e5499defeac4882bf965b7c52", "filename": "libada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,11 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n+\tversion from BASE-VER file.\n+\t* configure: Regenerated.\n+\n 2017-01-04  Alan Modra  <amodra@gmail.com>\n \n \t* Makefile.in (configure_deps): Update and order as per"}, {"sha": "328c067c4cda6ca19b9bdf6e340f466ad0adc1ce", "filename": "libada/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -67,7 +67,7 @@ host_subdir = @host_subdir@\n GCC_DIR=$(MULTIBUILDTOP)../../$(host_subdir)/gcc\n \n target_noncanonical:=@target_noncanonical@\n-version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n+version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n libsubdir := $(libdir)/gcc/$(target_noncanonical)/$(version)$(MULTISUBDIR)\n ADA_RTS_DIR=$(GCC_DIR)/ada/rts$(subst /,_,$(MULTISUBDIR))\n ADA_RTS_SUBDIR=./rts$(subst /,_,$(MULTISUBDIR))"}, {"sha": "5ab0e211aa0e515f16c88cba55a6dc84ae5a910f", "filename": "libada/configure", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -553,6 +553,7 @@ PACKAGE_URL=\n ac_unique_file=\"Makefile.in\"\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n have_getipinfo\n default_gnatlib_target\n LN_S\n@@ -633,6 +634,7 @@ enable_maintainer_mode\n enable_multilib\n enable_shared\n with_system_libunwind\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1261,6 +1263,8 @@ Optional Packages:\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n   --with-system-libunwind use installed libunwind\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -3008,6 +3012,21 @@ if test x$have_unwind_getipinfo = xyes; then\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # Output: create a Makefile.\n ac_config_files=\"$ac_config_files Makefile\"\n "}, {"sha": "3e0f0a35210440073e708bfc1eb906b6a40defcb", "filename": "libada/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libada%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -144,6 +144,9 @@ if test x$have_unwind_getipinfo = xyes; then\n fi\n AC_SUBST(have_getipinfo)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # Output: create a Makefile.\n AC_CONFIG_FILES([Makefile])\n "}, {"sha": "9e0c02f5c0e967b04425643468476d5c810c7909", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "d731406fdbd4b87df7e7dbddd886b008c2b84cf3", "filename": "libatomic/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -26,7 +26,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n config_path= @config_path@\n search_path = $(addprefix $(top_srcdir)/config/, $(config_path)) \\"}, {"sha": "f6eeab312ea2ada447e85c8f563f53f35dcbcc86", "filename": "libatomic/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -259,6 +259,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -298,7 +299,7 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n search_path = $(addprefix $(top_srcdir)/config/, $(config_path)) \\\n \t$(top_srcdir) $(top_builddir)\n "}, {"sha": "c05fc9d11418539ae7267541469ddb16c1097f0b", "filename": "libatomic/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -601,6 +601,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n ARCH_X86_64_FALSE\n ARCH_X86_64_TRUE\n ARCH_I386_FALSE\n@@ -763,6 +764,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_symvers\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1415,6 +1417,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11111,7 +11115,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11114 \"configure\"\n+#line 11118 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11217,7 +11221,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11220 \"configure\"\n+#line 11224 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15256,6 +15260,21 @@ else\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n if test ${multilib} = yes; then\n   multilib_arg=\"--enable-multilib\"\n else"}, {"sha": "023f1727b1e9b64f99a43a4ce83574974e43a3d1", "filename": "libatomic/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -254,6 +254,9 @@ AM_CONDITIONAL(ARCH_I386,\n AM_CONDITIONAL(ARCH_X86_64,\n \t       [test \"$ARCH\" = x86 && test x$libat_cv_wordsize = x8])\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n if test ${multilib} = yes; then\n   multilib_arg=\"--enable-multilib\"\n else"}, {"sha": "f0928b2f3dcc702e8569c03440d627032ce40f54", "filename": "libatomic/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libatomic%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -174,6 +174,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "47cc2883f9a9503b0889bd4cf48ac812b2d0b7b0", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,11 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.  For --with-gcc-major-version-only\n+\tuse just major number from BASE-VER.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "21fb1536d89b41baca7ce4b582eae9827febb600", "filename": "libcc1/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -236,6 +236,7 @@ docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n gcc_version = @gcc_version@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "d6f480fe930d384bb3baa532930b840780d997c7", "filename": "libcc1/configure", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -610,6 +610,7 @@ WERROR\n WARN_FLAGS\n CONFIG_STATUS_DEPENDENCIES\n gcc_version\n+get_gcc_base_ver\n visibility\n CXXCPP\n am__fastdepCXX_FALSE\n@@ -747,6 +748,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n enable_werror_always\n enable_plugin\n '\n@@ -1403,6 +1405,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -10540,7 +10544,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10543 \"configure\"\n+#line 10547 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10646,7 +10650,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10649 \"configure\"\n+#line 10653 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14305,7 +14309,25 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n-gcc_version=`cat $srcdir/../gcc/BASE-VER`\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n+if test x$with_gcc_major_version_only = xyes ; then\n+    gcc_version=`sed -e 's/^\\([0-9]*\\).*$/\\1/' $srcdir/../gcc/BASE-VER`\n+  else\n+  gcc_version=`cat $srcdir/../gcc/BASE-VER`\n+fi\n \n CONFIG_STATUS_DEPENDENCIES='$(top_srcdir)/../gcc/BASE-VER'\n "}, {"sha": "82bde4a0042cecbadb68af04bd379bcd760e2e02", "filename": "libcc1/configure.ac", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcc1%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -48,7 +48,15 @@ AC_SUBST(visibility)\n \n AC_CHECK_DECLS([basename])\n \n-gcc_version=`cat $srcdir/../gcc/BASE-VER`\n+GCC_BASE_VER\n+\n+if test x$with_gcc_major_version_only = xyes ; then\n+  changequote(,)dnl\n+  gcc_version=`sed -e 's/^\\([0-9]*\\).*$/\\1/' $srcdir/../gcc/BASE-VER`\n+  changequote([,])dnl\n+else\n+  gcc_version=`cat $srcdir/../gcc/BASE-VER`\n+fi\n AC_SUBST(gcc_version)\n AC_SUBST([CONFIG_STATUS_DEPENDENCIES], ['$(top_srcdir)/../gcc/BASE-VER'])\n "}, {"sha": "9dcff74830d170a99c1eecb4b9b0d14d195e7e7b", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* aclocal.m4: Include ../config/acx.m4.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2016-12-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/68945"}, {"sha": "2a0fcad4c896c01568d6d50dffd06aaa3ca11fd6", "filename": "libcilkrts/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -62,7 +62,7 @@ AM_CPPFLAGS = $(GENERAL_FLAGS)\n AM_LDFLAGS = $(XLDFLAGS)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Target list.\n nodist_toolexeclib_HEADERS = libcilkrts.spec"}, {"sha": "551a360ea2fad2068bc637e20e1479afb5663eff", "filename": "libcilkrts/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -165,9 +165,10 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n-\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n-\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n-\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/acx.m4 $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n+\t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -349,6 +350,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -406,7 +408,7 @@ AM_CPPFLAGS = $(GENERAL_FLAGS)\n AM_LDFLAGS = $(XLDFLAGS)\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Target list.\n nodist_toolexeclib_HEADERS = libcilkrts.spec"}, {"sha": "71023b2c723e076ec25f4bed307f10569ef6e3d2", "filename": "libcilkrts/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Faclocal.m4?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -992,6 +992,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/acx.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "3cc8c999733c3df495a68c355539a8db60ec10e8", "filename": "libcilkrts/configure", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -604,6 +604,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n link_cilkrts\n XLDFLAGS\n XCFLAGS\n@@ -749,6 +750,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1404,6 +1406,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11937,7 +11941,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11940 \"configure\"\n+#line 11944 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12043,7 +12047,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12046 \"configure\"\n+#line 12050 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15402,6 +15406,20 @@ else\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n \n # Must be last\n cat >confcache <<\\_ACEOF"}, {"sha": "9cf9052f340bf99af2680a33ac45ad3e304cc5b3", "filename": "libcilkrts/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libcilkrts%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -253,6 +253,8 @@ else\n fi\n AC_SUBST(link_cilkrts)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n \n # Must be last\n AC_OUTPUT"}, {"sha": "256dc24a2510add0e6c014011cbe0483292ac39b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,11 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (version): Use @get_gcc_base_ver@ instead of cat to get\n+\tversion from BASE-VER file.\n+\t* configure: Regenerated.\n+\n 2017-01-13  Joe Seymour  <joe.s@somniumtech.com>\n \n \t* config/msp430/t-msp430 (libmul_none.a, libmul_16.a, libmul_32.a,"}, {"sha": "f71d3203f20c60c10b355d109f48cd5aace607ca", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -224,7 +224,7 @@ export slibdir\n export toolexecdir\n export toolexeclibdir\n \n-version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n+version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n \n ifeq ($(decimal_float),yes)\n ifeq ($(enable_decimal_float),bid)"}, {"sha": "5c900cc1325116337371aa71fdcdfb3485b94217", "filename": "libgcc/configure", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -561,6 +561,7 @@ enable_execute_stack\n asm_hidden_op\n extra_parts\n cpu_type\n+get_gcc_base_ver\n thread_header\n tm_defines\n tm_file\n@@ -676,6 +677,7 @@ with_system_libunwind\n enable_explicit_exception_frame_registration\n with_glibc_version\n enable_tls\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1330,6 +1332,8 @@ Optional Packages:\n   --with-system-libunwind use installed libunwind\n   --with-glibc-version=M.N\n                           assume GCC used with glibc version M.N or later\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -5084,6 +5088,21 @@ esac\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # Substitute configuration variables\n \n "}, {"sha": "ea2030fa06d5ec562b4b2b8d57d71eb1474dea9c", "filename": "libgcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -544,6 +544,9 @@ AC_SUBST(tm_defines)\n # Map from thread model to thread header.\n GCC_AC_THREAD_HEADER([$target_thread_file])\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # Substitute configuration variables\n AC_SUBST(cpu_type)\n AC_SUBST(extra_parts)"}, {"sha": "3335177eebe66b454cf1e76bb4fa40eb253df589", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/70696"}, {"sha": "2857af5943f980973b766f46b5c13787104a069e", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -4,7 +4,7 @@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n ## Symbol versioning (copied from libssp).\n if LIBGFOR_USE_SYMVER"}, {"sha": "05b183dcadb0763498bef04adb92c15b9c50ca07", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -525,6 +525,7 @@ enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n extra_ldflags_libgfortran = @extra_ldflags_libgfortran@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -566,7 +567,7 @@ top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @LIBGFOR_USE_SYMVER_FALSE@version_arg = \n @LIBGFOR_USE_SYMVER_GNU_TRUE@@LIBGFOR_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/gfortran.map\n @LIBGFOR_USE_SYMVER_SUN_TRUE@@LIBGFOR_USE_SYMVER_TRUE@version_arg = -Wl,-M,gfortran.map-sun"}, {"sha": "f975e2abc50fae692bdd32579defe0bea4a4eccf", "filename": "libgfortran/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -605,6 +605,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n IEEE_FLAGS\n IEEE_SUPPORT\n IEEE_SUPPORT_FALSE\n@@ -779,6 +780,7 @@ enable_fast_install\n enable_libtool_lock\n enable_largefile\n enable_libquadmath_support\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1437,6 +1439,8 @@ Optional Packages:\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -12417,7 +12421,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12420 \"configure\"\n+#line 12424 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12523,7 +12527,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12526 \"configure\"\n+#line 12530 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26315,6 +26319,21 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   CFLAGS=\"$ac_save_CFLAGS\"\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "66a84625e525c8f388c70a02cd7ad37b14b66b72", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -621,6 +621,9 @@ LIBGFOR_CHECK_AVX2\n # Check wether we support AVX512f extensions\n LIBGFOR_CHECK_AVX512F\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CACHE_SAVE\n \n if test ${multilib} = yes; then"}, {"sha": "7e40e2456484096eef23364951a6dc173027a782", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libgomp/60670"}, {"sha": "17af7d71d7de1a83331c7672bd7fa8a48e44a2bf", "filename": "libgomp/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -4,7 +4,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n config_path = @config_path@\n search_path = $(addprefix $(top_srcdir)/config/, $(config_path)) $(top_srcdir) \\"}, {"sha": "920d29d1c4c088f6bd6768679635b3ba9c5ff704", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -17,7 +17,7 @@\n \n # Plugins for offload execution, Makefile.am fragment.\n #\n-# Copyright (C) 2014-2016 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -358,6 +358,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -401,7 +402,7 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n search_path = $(addprefix $(top_srcdir)/config/, $(config_path)) $(top_srcdir) \\\n \t      $(top_srcdir)/../include\n "}, {"sha": "6a4b3b2a6e0649a097772746b5e07ef919e54795", "filename": "libgomp/configure", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -603,6 +603,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n OMP_NEST_LOCK_25_KIND\n OMP_LOCK_25_KIND\n OMP_NEST_LOCK_25_ALIGN\n@@ -798,6 +799,7 @@ with_hsa_runtime_lib\n enable_linux_futex\n enable_tls\n enable_symvers\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1476,6 +1478,8 @@ Optional Packages:\n   --with-hsa-runtime-lib=PATH\n                           specify directory for the installed HSA run-time\n                           library\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11151,7 +11155,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11154 \"configure\"\n+#line 11158 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11257,7 +11261,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11260 \"configure\"\n+#line 11264 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15135,7 +15139,7 @@ fi\n \n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #\n-# Copyright (C) 2014-2016 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -16796,6 +16800,21 @@ fi\n \n CFLAGS=\"$save_CFLAGS\"\n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_files=\"$ac_config_files omp.h omp_lib.h omp_lib.f90 libgomp_f.h\"\n \n ac_config_files=\"$ac_config_files Makefile testsuite/Makefile libgomp.spec\""}, {"sha": "a42d4f08b4bcd877665253eb35b5e6330ace87e4", "filename": "libgomp/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -379,6 +379,9 @@ AC_SUBST(OMP_LOCK_25_KIND)\n AC_SUBST(OMP_NEST_LOCK_25_KIND)\n CFLAGS=\"$save_CFLAGS\"\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_FILES(omp.h omp_lib.h omp_lib.f90 libgomp_f.h)\n AC_CONFIG_FILES(Makefile testsuite/Makefile libgomp.spec)\n AC_CONFIG_FILES([testsuite/libgomp-test-support.pt.exp:testsuite/libgomp-test-support.exp.in])"}, {"sha": "9a1305016c9b5a09fb950cddba9a0b69d4e1c2b3", "filename": "libgomp/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libgomp%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -201,6 +201,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "13e5e91a54eee90ce75bf2fc8c92ffa5bfe64117", "filename": "libitm/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-04  Alan Modra  <amodra@gmail.com>\n \n \t* Makefile.in: Regenerate."}, {"sha": "5b4aad8836b08793d9738a8665ba4c6920427532", "filename": "libitm/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -4,7 +4,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n abi_version = -fabi-version=4\n "}, {"sha": "bd16ce0cfb816ba939d68cebe4dd849bf94e9bcc", "filename": "libitm/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -293,6 +293,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -332,7 +333,7 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n SUBDIRS = testsuite\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n abi_version = -fabi-version=4\n search_path = $(addprefix $(top_srcdir)/config/, $(config_path)) $(top_srcdir)\n fincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/finclude"}, {"sha": "775f370fbb5dc75197d62bd395f92cbd67c92210", "filename": "libitm/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -601,6 +601,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n ARCH_FUTEX_FALSE\n ARCH_FUTEX_TRUE\n ARCH_X86_AVX_FALSE\n@@ -776,6 +777,7 @@ enable_maintainer_mode\n enable_linux_futex\n enable_tls\n enable_symvers\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1431,6 +1433,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11790,7 +11794,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11793 \"configure\"\n+#line 11797 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11896,7 +11900,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11899 \"configure\"\n+#line 11903 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17636,6 +17640,21 @@ else\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_files=\"$ac_config_files Makefile testsuite/Makefile libitm.spec\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "c5ecd394a4305ec5350d7032eb792f162dca9ce5", "filename": "libitm/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -286,5 +286,8 @@ AM_CONDITIONAL([ARCH_X86], [test \"$ARCH\" = x86])\n AM_CONDITIONAL([ARCH_X86_AVX], [test \"$libitm_cv_as_avx\" = yes])\n AM_CONDITIONAL([ARCH_FUTEX], [test $enable_linux_futex = yes])\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_FILES(Makefile testsuite/Makefile libitm.spec)\n AC_OUTPUT"}, {"sha": "04c4d8abe103e0bcfe096c4acf8cc5f4a3746454", "filename": "libitm/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libitm%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -185,6 +185,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "3bf0376aea6960942a4df7d2cf7624a4dc3e4ea2", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2016-12-27  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Alexander Ivchenko  <alexander.ivchenko@intel.com>\n "}, {"sha": "9ec6ec7db61c893b6bfcbe98d93aa10e7067a7a2", "filename": "libmpx/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -9,7 +9,7 @@ nodist_toolexeclib_HEADERS = libmpx.spec\n endif\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "9b1d7a6c31f449b3e0099c6f3660a5e4faaa90f5", "filename": "libmpx/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -255,7 +255,7 @@ top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n @LIBMPX_SUPPORTED_TRUE@SUBDIRS = mpxrt $(am__append_1)\n @LIBMPX_SUPPORTED_TRUE@nodist_toolexeclib_HEADERS = libmpx.spec\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "115f53e475cbc1281d348e7a62cf66c5825f3df6", "filename": "libmpx/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -11585,6 +11585,9 @@ else\n   multilib_arg=\n fi\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n ac_config_files=\"$ac_config_files Makefile libmpx.spec\"\n \n ac_config_headers=\"$ac_config_headers config.h\""}, {"sha": "baa882b16b0484c03181de1c5c6126dea9dbe44b", "filename": "libmpx/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -125,6 +125,9 @@ else\n   multilib_arg=\n fi\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_FILES([Makefile libmpx.spec])\n AC_CONFIG_HEADERS(config.h)\n AC_CONFIG_FILES(AC_FOREACH([DIR], [mpxrt mpxwrap], [DIR/Makefile ]),"}, {"sha": "c3d1ba259da24615088b30277372920eb3388e65", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure: Regenerated.\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "febc92d4b3cc449a71156af57ad1aa051f559d0c", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -31,7 +31,7 @@ VPATH = @glibcpp_srcdir@\n prefix = @prefix@\n exec_prefix = @exec_prefix@\n target_noncanonical = @target_noncanonical@\n-gcc_version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n host_subdir = @host_subdir@\n top_srcdir = @top_srcdir@\n multi_basedir = @multi_basedir@"}, {"sha": "72645fddfb4a81d404b58090a70cfd6b75bff70f", "filename": "libobjc/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -600,6 +600,7 @@ ac_includes_default=\"\\\n \n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n OBJC_BOEHM_GC_LIBS\n OBJC_BOEHM_GC_INCLUDES\n OBJC_BOEHM_GC\n@@ -725,6 +726,7 @@ enable_objc_gc\n with_target_bdw_gc\n with_target_bdw_gc_include\n with_target_bdw_gc_lib\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1379,6 +1381,8 @@ Optional Packages:\n                           files\n   --with-target-bdw-gc-lib=PATHLIST\n                           specify directories for installed bdw-gc library\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -10590,7 +10594,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10593 \"configure\"\n+#line 10597 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10696,7 +10700,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10699 \"configure\"\n+#line 10703 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11684,6 +11688,21 @@ fi\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # ------\n # Output\n # ------"}, {"sha": "046e56894359a93a97633665ec9e2471195fe7b7", "filename": "libobjc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -347,6 +347,9 @@ AC_SUBST(OBJC_BOEHM_GC)\n AC_SUBST(OBJC_BOEHM_GC_INCLUDES)\n AC_SUBST(OBJC_BOEHM_GC_LIBS)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # ------\n # Output\n # ------"}, {"sha": "4960f5637e84ef80e87a6fd89301b65bb6ebaa6d", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* aclocal.m4: Include ../config/acx.m4.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2016-11-15  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure: Regenerate."}, {"sha": "b9a0bdee37eeffc17814b5eadf3d13db4edf8e3d", "filename": "liboffloadmic/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -41,7 +41,7 @@ libgomp_dir = $(build_dir)/../libgomp\n source_dir = $(top_srcdir)/runtime\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n libsubincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n \n # Target list."}, {"sha": "591b3c90ebb3486e9b54302d1182a434e0cf8298", "filename": "liboffloadmic/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -93,9 +93,10 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n-\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n-\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n-\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/acx.m4 $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n+\t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n+\t$(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -336,6 +337,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -388,7 +390,7 @@ libgomp_dir = $(build_dir)/../libgomp\n source_dir = $(top_srcdir)/runtime\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n libsubincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n @LIBOFFLOADMIC_HOST_FALSE@nodist_toolexeclib_HEADERS = liboffloadmic_target.spec\n "}, {"sha": "71023b2c723e076ec25f4bed307f10569ef6e3d2", "filename": "liboffloadmic/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Faclocal.m4?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -992,6 +992,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/acx.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "e22b214ddbce37ff6ed8c075c7367ea0af292c7e", "filename": "liboffloadmic/configure", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -602,6 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n link_offloadmic_target\n link_offloadmic_host\n lt_cv_dlopen_libs\n@@ -744,6 +745,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1398,6 +1400,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11104,7 +11108,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11107 \"configure\"\n+#line 11111 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11210,7 +11214,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11213 \"configure\"\n+#line 11217 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14481,6 +14485,21 @@ fi\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n # Must be last\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n@@ -17075,7 +17094,7 @@ ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n       ac_sub_configure=$ac_srcdir/configure.gnu\n     elif test -f \"$ac_srcdir/configure\"; then\n       ac_sub_configure=$ac_srcdir/configure\n-    elif test -f \"$ac_srcdir/configure.ac\"; then\n+    elif test -f \"$ac_srcdir/configure.in\"; then\n       # This should be Cygnus configure.\n       ac_sub_configure=$ac_aux_dir/configure\n     else"}, {"sha": "64728f1a1a7fb7cc59a956005f56c3ab388d6105", "filename": "liboffloadmic/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/liboffloadmic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -128,5 +128,8 @@ fi\n AC_SUBST(link_offloadmic_host)\n AC_SUBST(link_offloadmic_target)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n # Must be last\n AC_OUTPUT"}, {"sha": "e0cfc3aad9dd1fd4bc431a15c7ec75e590e274fb", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libquadmath.texi: Bump @copying's copyright year."}, {"sha": "ec23c66f6b19ca4d4cc8a35a8e7488f945756ed4", "filename": "libquadmath/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -9,7 +9,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)/../include\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n ## Symbol versioning (copied from libssp).\n if LIBQUAD_USE_SYMVER"}, {"sha": "428e0158aca306f773b5700429153b53b304a513", "filename": "libquadmath/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -300,6 +300,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -340,7 +341,7 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = 1.8 foreign\n @BUILD_LIBQUADMATH_TRUE@ACLOCAL_AMFLAGS = -I .. -I ../config\n @BUILD_LIBQUADMATH_TRUE@AM_CPPFLAGS = -I $(top_srcdir)/../include\n-@BUILD_LIBQUADMATH_TRUE@gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+@BUILD_LIBQUADMATH_TRUE@gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @BUILD_LIBQUADMATH_TRUE@@LIBQUAD_USE_SYMVER_FALSE@version_arg = \n @BUILD_LIBQUADMATH_TRUE@@LIBQUAD_USE_SYMVER_GNU_TRUE@@LIBQUAD_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/quadmath.map\n @BUILD_LIBQUADMATH_TRUE@@LIBQUAD_USE_SYMVER_SUN_TRUE@@LIBQUAD_USE_SYMVER_TRUE@version_arg = -Wl,-M,quadmath.map-sun"}, {"sha": "5091627a7c3a4c31b0c883c8b2931486df217793", "filename": "libquadmath/configure", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -601,6 +601,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n GENINSRC_FALSE\n GENINSRC_TRUE\n BUILD_LIBQUADMATH_FALSE\n@@ -750,6 +751,7 @@ enable_libtool_lock\n enable_maintainer_mode\n enable_symvers\n enable_generated_files_in_srcdir\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1406,6 +1408,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -10568,7 +10572,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10571 \"configure\"\n+#line 10575 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10674,7 +10678,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10677 \"configure\"\n+#line 10681 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12918,6 +12922,20 @@ else\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n \n ac_config_files=\"$ac_config_files Makefile\"\n "}, {"sha": "6d03c78f7985c573ce9607a6b4cefd3bd9f0682d", "filename": "libquadmath/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libquadmath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -364,6 +364,8 @@ AS_HELP_STRING([--enable-generated-files-in-srcdir],\n AC_MSG_RESULT($enable_generated_files_in_srcdir)\n AM_CONDITIONAL(GENINSRC, test \"$enable_generated_files_in_srcdir\" = yes)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n \n AC_CONFIG_FILES(Makefile)\n AC_OUTPUT"}, {"sha": "1e0d0f09d310bbbaebe121f4d7937092a00b8389", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,19 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* libbacktrace/Makefile.in: Regenerated.\n+\t* interception/Makefile.in: Regenerated.\n+\t* asan/Makefile.in: Regenerated.\n+\t* ubsan/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* sanitizer_common/Makefile.in: Regenerated.\n+\t* lsan/Makefile.in: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* tsan/Makefile.in: Regenerated.\n+\n 2017-01-10  James Clarke  <jrtc27@jrtc27.com>\n \n \tPR sanitizer/78992"}, {"sha": "6afb2b0e048ebf90b05bb0d041549812df65dc59", "filename": "libsanitizer/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -24,7 +24,7 @@ endif\n endif\n \n ## May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "1f4bb8cd6bb7c326f92361dc87a41c2241a509d8", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -244,6 +244,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -290,7 +291,7 @@ nodist_saninclude_HEADERS = $(am__append_1)\n @SANITIZER_SUPPORTED_TRUE@SUBDIRS = sanitizer_common $(am__append_2) \\\n @SANITIZER_SUPPORTED_TRUE@\t$(am__append_3) lsan asan ubsan \\\n @SANITIZER_SUPPORTED_TRUE@\t$(am__append_4)\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "9fe24166dd3053f5311d54be12cf4a5acba1d8e3", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -254,6 +254,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "8e0c47ea8384882b25fd664d41555a383d7fb3b8", "filename": "libsanitizer/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -604,6 +604,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS\n TSAN_TARGET_DEPENDENT_OBJECTS\n LIBBACKTRACE_SUPPORTED_FALSE\n@@ -772,6 +773,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1426,6 +1428,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -12028,7 +12032,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12031 \"configure\"\n+#line 12035 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12134,7 +12138,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12137 \"configure\"\n+#line 12141 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16500,6 +16504,21 @@ fi\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "b0c485b0f7bcf98dcffa98a98ec5eeee884f3e26", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -377,4 +377,7 @@ fi\n AC_SUBST([TSAN_TARGET_DEPENDENT_OBJECTS])\n AC_SUBST([SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS])\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_OUTPUT"}, {"sha": "cf06a831152dfc6dc5e0faa16b318f3df404735e", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -203,6 +203,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "dff04cfa3ea1caa3929136ff0ecd66681b077827", "filename": "libsanitizer/libbacktrace/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -245,6 +245,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "fdc1a059fb367f3503c969376e6120bf7809729d", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -244,6 +244,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "b015a624237c751fd52a8b39ada05b618544f4d7", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -247,6 +247,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "7a58323ff2f7ae1daeafe9d814a73192b86fe90b", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -263,6 +263,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "23939f0bf68c7dda120fdac287ccdc8ec1ef0014", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -242,6 +242,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "d851d4bf24d19977384dfb953998479abb967a2a", "filename": "libssp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "72df8e791297a48f3662b0674c28921cd3f3f5d7", "filename": "libssp/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -8,7 +8,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n MAINT_CHARSET = latin1\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n if LIBSSP_USE_SYMVER\n if LIBSSP_USE_SYMVER_GNU"}, {"sha": "96b03ae124812d1b09e28b923cf9a9d171aab1ed", "filename": "libssp/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -235,6 +235,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -278,7 +279,7 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n MAINT_CHARSET = latin1\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @LIBSSP_USE_SYMVER_FALSE@version_arg = \n @LIBSSP_USE_SYMVER_GNU_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/ssp.map\n @LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_arg = -Wl,-M,ssp.map-sun"}, {"sha": "b14e922e6f158a419b7dd7e8bef1fddbf063b6bb", "filename": "libssp/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -602,6 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n toolexeclibdir\n toolexecdir\n enable_static\n@@ -742,6 +743,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1387,6 +1389,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -10667,7 +10671,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10670 \"configure\"\n+#line 10674 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10773,7 +10777,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10776 \"configure\"\n+#line 10780 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11071,6 +11075,21 @@ else\n   multilib_arg=\n fi\n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_files=\"$ac_config_files Makefile ssp/ssp.h\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "9e4a22a24d47e9b8467ffa2dc45b445d5e636f45", "filename": "libssp/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libssp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -195,5 +195,8 @@ else\n   multilib_arg=\n fi\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_CONFIG_FILES([Makefile ssp/ssp.h])\n AC_OUTPUT"}, {"sha": "fc798faa5a6858e3de5cc1c28fe55a7d37f8e2e6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,22 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* fragment.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* po/Makefile.in: Regenerated.\n+\t* libsupc++/Makefile.in: Regenerated.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* src/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* include/Makefile.in: Regenerated.\n+\t* doc/Makefile.in: Regenerated.\n+\t* python/Makefile.in: Regenerated.\n+\t* src/c++11/Makefile.in: Regenerated.\n+\t* src/c++98/Makefile.in: Regenerated.\n+\t* src/filesystem/Makefile.in: Regenerated.\n+\n 2017-01-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/66145"}, {"sha": "0ed59a43405c1795c226617d511d5b35fe7a3fd4", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -262,6 +262,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -318,7 +319,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "df81425fe51190e1dfd5199e8597951cd7be29cb", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -602,6 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n WARN_FLAGS\n OPTIMIZE_CXXFLAGS\n TOPLEVEL_INCLUDES\n@@ -897,6 +898,7 @@ enable_libstdcxx_threads\n enable_libstdcxx_filesystem_ts\n with_gxx_include_dir\n enable_version_specific_runtime_libs\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1616,6 +1618,8 @@ Optional Packages:\n                           set the std::string ABI to use by default\n   --with-gxx-include-dir=DIR\n                           installation directory for include files\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11597,7 +11601,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11600 \"configure\"\n+#line 11604 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11703,7 +11707,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11706 \"configure\"\n+#line 11710 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15389,7 +15393,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15392 \"configure\"\n+#line 15396 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15424,7 +15428,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15427 \"configure\"\n+#line 15431 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15459,7 +15463,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15462 \"configure\"\n+#line 15466 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15495,7 +15499,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15498 \"configure\"\n+#line 15502 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15576,7 +15580,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15579 \"configure\"\n+#line 15583 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15618,7 +15622,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15621 \"configure\"\n+#line 15625 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15652,7 +15656,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15655 \"configure\"\n+#line 15659 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -81621,6 +81625,21 @@ $as_echo \"$gxx_include_dir\" >&6; }\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n ac_config_files=\"$ac_config_files Makefile\"\n \n ac_config_files=\"$ac_config_files scripts/testsuite_flags\""}, {"sha": "8e973503be01d1f4bc3591559f4a1da0710b2e48", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -509,6 +509,9 @@ GLIBCXX_EXPORT_INSTALL_INFO\n GLIBCXX_EXPORT_INCLUDES\n GLIBCXX_EXPORT_FLAGS\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n dnl In autoconf 2.5x, AC_OUTPUT is replaced by four AC_CONFIG_* macros,\n dnl which can all be called multiple times as needed, plus one (different)\n dnl AC_OUTPUT macro.  This one lists the files to be created:"}, {"sha": "9db08555785255ac8eea96fece3ff19820913b2e", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -236,6 +236,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -300,7 +301,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "898569520b9918bef1c8565f0c6acdff1ec029f6", "filename": "libstdc++-v3/fragment.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Ffragment.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Ffragment.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ffragment.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -2,7 +2,7 @@\n ## This is used in all Makefile.am's.  Set defaults here.\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n MAINT_CHARSET = latin1\n "}, {"sha": "4e78aaa3bdc7b4c7d3eb33c7b9a5eb2b4d6b2d8b", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -234,6 +234,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -290,7 +291,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "4c46eeccb96b4e2fa701fb4d15aa98829568ee1b", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -307,6 +307,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -363,7 +364,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "2d4c8b86ec6383fca663b09aea49ed86fa0cd016", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -234,6 +234,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -290,7 +291,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "a8122aacc05c44160122d93fce219d081bab7a20", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -264,6 +264,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -320,7 +321,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "7594c3fe62ec8a526ee1513171b9612e0c3b7a76", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -297,6 +297,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -353,7 +354,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "cd18b82ed28eee2df08c71791de1aaceeebfd36d", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -267,6 +267,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -323,7 +324,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "704a04698c805b9555e0605ff41c679f281191de", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -268,6 +268,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -324,7 +325,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "a4fdf790ae26c530ed80931b915d30f3810a0711", "filename": "libstdc++-v3/src/filesystem/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -276,6 +276,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -332,7 +333,7 @@ toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "da51c0fc3c78d99c0c20119bf14a7109fd6503a3", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -234,6 +234,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n@@ -293,7 +294,7 @@ RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir\n EXPECT = expect\n \n # May be used by various substitution variables.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n PWD_COMMAND = $${PWDCMD-pwd}"}, {"sha": "45b24c8431c9f53e7dadf8f3995331ad52326fa4", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,13 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "a44e779c277a27dff3044bc45d14e2475fb13a25", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -28,7 +28,7 @@ endif\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n DEFS = @DEFS@\n AM_CPPFLAGS = -I$(top_srcdir)/../include"}, {"sha": "59d0b11bdd0620d1cd624918f8d10433ef6d34ba", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -273,6 +273,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -320,7 +321,7 @@ toplevel_srcdir = @toplevel_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n # May be used by toolexeclibdir.\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n AM_CPPFLAGS = -I$(top_srcdir)/../include\n AM_CFLAGS = $(XCFLAGS)\n AM_CCASFLAGS = $(XCFLAGS)"}, {"sha": "c3bed2dfc708431b672fb4d46e52aecfee96396d", "filename": "libvtv/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -602,6 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+get_gcc_base_ver\n VTV_NO_OBSTACK_FALSE\n VTV_NO_OBSTACK_TRUE\n VTV_CYGMIN_FALSE\n@@ -759,6 +760,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1409,6 +1411,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -12062,7 +12066,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12065 \"configure\"\n+#line 12069 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12168,7 +12172,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12171 \"configure\"\n+#line 12175 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15505,6 +15509,21 @@ else\n fi\n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "33b1e7913c64894fc30b52805ebc688b5cdf7ee5", "filename": "libvtv/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -190,4 +190,7 @@ AM_CONDITIONAL(VTV_CYGMIN, test $vtv_cygmin = yes)\n AC_CHECK_FUNCS([_obstack_begin])\n AM_CONDITIONAL(VTV_NO_OBSTACK, test $ac_cv_func__obstack_begin = no)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AC_OUTPUT"}, {"sha": "7688f3c88c8df1521d057b234ec5e4ed84b9b3f3", "filename": "libvtv/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/libvtv%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -174,6 +174,7 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}, {"sha": "c1859e2bbee1023afdf551dff7f3e06fcabc82cc", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -1,3 +1,12 @@\n+2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/79046\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.am (gcc_version): Use @get_gcc_base_ver@ instead of cat to\n+\tget version from BASE-VER file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "28dc21014b2e86988fa88adabd63ce6092e18e02", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -3,7 +3,7 @@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n AUTOMAKE_OPTIONS = no-dependencies\n \n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n target_noncanonical := @target_noncanonical@\n libexecsubdir := $(libexecdir)/gcc/$(real_target_noncanonical)/$(gcc_version)$(accel_dir_suffix)\n "}, {"sha": "c69cc32bc5381cd8f6e9b4150076f091d3bd2bc8", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -214,6 +214,7 @@ docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n gcc_build_dir = @gcc_build_dir@\n+get_gcc_base_ver = @get_gcc_base_ver@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -254,7 +255,7 @@ top_srcdir = @top_srcdir@\n with_libiberty = @with_libiberty@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n AUTOMAKE_OPTIONS = no-dependencies\n-gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n libexecsubdir := $(libexecdir)/gcc/$(real_target_noncanonical)/$(gcc_version)$(accel_dir_suffix)\n AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = @ac_lto_plugin_warn_cflags@"}, {"sha": "cdea9eac3eeb87d2b64605ac80d50a7d0e28d377", "filename": "lto-plugin/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -619,6 +619,7 @@ LD\n FGREP\n SED\n LIBTOOL\n+get_gcc_base_ver\n real_target_noncanonical\n accel_dir_suffix\n gcc_build_dir\n@@ -733,6 +734,7 @@ enable_maintainer_mode\n with_libiberty\n enable_dependency_tracking\n enable_largefile\n+with_gcc_major_version_only\n enable_shared\n enable_static\n with_pic\n@@ -1386,6 +1388,8 @@ Optional Packages:\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n   --with-libiberty=PATH   specify the directory where to find libiberty\n                           [../libiberty]\n+  --with-gcc-major-version-only\n+                          use only GCC major number in filesystem paths\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -5376,6 +5380,21 @@ fi\n \n \n \n+# Determine what GCC version number to use in filesystem paths.\n+\n+  get_gcc_base_ver=\"cat\"\n+\n+# Check whether --with-gcc-major-version-only was given.\n+if test \"${with_gcc_major_version_only+set}\" = set; then :\n+  withval=$with_gcc_major_version_only; if test x$with_gcc_major_version_only = xyes ; then\n+        get_gcc_base_ver=\"sed -e 's/^\\([0-9]*\\).*\\$\\$/\\1/'\"\n+      fi\n+\n+fi\n+\n+\n+\n+\n case `pwd` in\n   *\\ * | *\\\t*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n@@ -11450,7 +11469,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11453 \"configure\"\n+#line 11472 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11556,7 +11575,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11559 \"configure\"\n+#line 11578 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "aa68632a66ff4167f5ffc3d486d51e866ef41142", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c36aa6ba2be894d4092a6ce8129d39ef846c964/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=3c36aa6ba2be894d4092a6ce8129d39ef846c964", "patch": "@@ -45,6 +45,9 @@ fi\n AC_SUBST(accel_dir_suffix)\n AC_SUBST(real_target_noncanonical)\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n AM_PROG_LIBTOOL\n ACX_LT_HOST_FLAGS\n AC_SUBST(target_noncanonical)"}]}