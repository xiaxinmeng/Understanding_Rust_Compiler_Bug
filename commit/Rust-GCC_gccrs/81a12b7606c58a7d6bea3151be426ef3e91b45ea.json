{"sha": "81a12b7606c58a7d6bea3151be426ef3e91b45ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhMTJiNzYwNmM1OGE3ZDZiZWEzMTUxYmU0MjZlZjNlOTFiNDVlYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-07-27T14:49:06Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-07-27T14:49:06Z"}, "message": "Use static_assert for STATIC_ASSERT for C++11 onwards\n\nC++11 has a\n  static_assert (COND, MESSAGE)\nwhich gives more readable error messages for STATIC_ASSERT than our\ncurrent implementation.\n\nThis patch makes us use it if __cplusplus >= 201103L\n\nThere's also a provisional static_assert (COND) in C++1z, but presumably\nwe should wait until that one is fully standardized before using it.\n\ngcc/ChangeLog:\n\t* system.h (STATIC_ASSERT): Use static_assert if building\n\twith C++11 onwards.\n\nFrom-SVN: r238786", "tree": {"sha": "89f1e8bcacfb158e93c8b1fd41103eca189d1fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89f1e8bcacfb158e93c8b1fd41103eca189d1fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a12b7606c58a7d6bea3151be426ef3e91b45ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a12b7606c58a7d6bea3151be426ef3e91b45ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a12b7606c58a7d6bea3151be426ef3e91b45ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a12b7606c58a7d6bea3151be426ef3e91b45ea/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "270430ff3eb2632320372e6974ce9ef7038e31d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270430ff3eb2632320372e6974ce9ef7038e31d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270430ff3eb2632320372e6974ce9ef7038e31d2"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "e00b2c4432f5b483976c1da83cac0ce172bc3111", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a12b7606c58a7d6bea3151be426ef3e91b45ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a12b7606c58a7d6bea3151be426ef3e91b45ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81a12b7606c58a7d6bea3151be426ef3e91b45ea", "patch": "@@ -1,3 +1,8 @@\n+2016-07-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* system.h (STATIC_ASSERT): Use static_assert if building\n+\twith C++11 onwards.\n+\n 2016-07-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/72517"}, {"sha": "8a1719748196bc05443b6c9d1ef8a6c3373d7509", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a12b7606c58a7d6bea3151be426ef3e91b45ea/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a12b7606c58a7d6bea3151be426ef3e91b45ea/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=81a12b7606c58a7d6bea3151be426ef3e91b45ea", "patch": "@@ -752,9 +752,14 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n #define STATIC_CONSTANT_P(X) (false && (X))\n #endif\n \n-/* Until we can use C++11's static_assert.  */\n+/* static_assert (COND, MESSAGE) is available in C++11 onwards.  */\n+#if __cplusplus >= 201103L\n+#define STATIC_ASSERT(X) \\\n+  static_assert ((X), #X)\n+#else\n #define STATIC_ASSERT(X) \\\n   typedef int assertion1[(X) ? 1 : -1] ATTRIBUTE_UNUSED\n+#endif\n \n /* Provide a fake boolean type.  We make no attempt to use the\n    C99 _Bool, as it may not be available in the bootstrap compiler,"}]}