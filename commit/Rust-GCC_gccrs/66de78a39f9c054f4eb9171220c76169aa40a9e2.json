{"sha": "66de78a39f9c054f4eb9171220c76169aa40a9e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkZTc4YTM5ZjljMDU0ZjRlYjkxNzEyMjBjNzYxNjlhYTQwYTllMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T13:59:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T13:59:09Z"}, "message": "Revert change introduced by mistake in previous change.\n\nFrom-SVN: r160745", "tree": {"sha": "2c5972a6f500c687712bef580de3a54b3a08cfa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c5972a6f500c687712bef580de3a54b3a08cfa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66de78a39f9c054f4eb9171220c76169aa40a9e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de78a39f9c054f4eb9171220c76169aa40a9e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66de78a39f9c054f4eb9171220c76169aa40a9e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de78a39f9c054f4eb9171220c76169aa40a9e2/comments", "author": null, "committer": null, "parents": [{"sha": "51bf9bdffff02529ce6331fda689e0d2fde3100f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bf9bdffff02529ce6331fda689e0d2fde3100f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bf9bdffff02529ce6331fda689e0d2fde3100f"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "e66a063a4c1f2b0d51528c03400cccb6efbec05e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66de78a39f9c054f4eb9171220c76169aa40a9e2/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66de78a39f9c054f4eb9171220c76169aa40a9e2/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=66de78a39f9c054f4eb9171220c76169aa40a9e2", "patch": "@@ -47,7 +47,6 @@ with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n-with Par_SCO;  use Par_SCO;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n@@ -8760,13 +8759,6 @@ package body Exp_Ch4 is\n       --  Check for cases where left argument is known to be True or False\n \n       if Compile_Time_Known_Value (Left) then\n-\n-         --  Mark SCO for left condition as compile time known\n-\n-         if Generate_SCO and then Comes_From_Source (Left) then\n-            Set_SCO_Condition (Left, Expr_Value_E (Left) = Standard_True);\n-         end if;\n-\n          --  Rewrite True AND THEN Right / False OR ELSE Right to Right.\n          --  Any actions associated with Right will be executed unconditionally\n          --  and can thus be inserted into the tree unconditionally.\n@@ -8851,13 +8843,6 @@ package body Exp_Ch4 is\n       --  No actions present, check for cases of right argument True/False\n \n       if Compile_Time_Known_Value (Right) then\n-\n-         --  Mark SCO for left condition as compile time known\n-\n-         if Generate_SCO and then Comes_From_Source (Right) then\n-            Set_SCO_Condition (Right, Expr_Value_E (Right) = Standard_True);\n-         end if;\n-\n          --  Change (Left and then True), (Left or else False) to Left.\n          --  Note that we know there are no actions associated with the right\n          --  operand, since we just checked for this case above."}]}