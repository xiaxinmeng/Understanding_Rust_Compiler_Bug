{"sha": "24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2MDk2MDZiZDRkZWM4YzJjZjVmOGVhYTgyYzQ0ZjY3ZjRmNWY2ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2010-06-10T20:24:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-06-10T20:24:01Z"}, "message": "md.texi (define_c_enum, [...]): Document.\n\ngcc/\n\t* doc/md.texi (define_c_enum, define_enum): Document.\n\t* read-md.h (md_constant): Add a parent_enum field.\n\t(enum_value, enum_type): New structures.\n\t(upcase_string, traverse_enum_types): Declare.\n\t* read-md.c (enum_types): New variable.\n\t(upcase_string, add_constant): New functions.\n\t(handle_constants): Don't create the hash table here.\n\tUse add_constant.\n\t(traverse_md_constants): Don't check for a null md_constants.\n\t(decimal_string, handle_enum, traverse_enum_types): New functions.\n\t(read_md_files): Initialize md_constants and md_enums.\n\t* genconstants.c (print_md_constant): Ignore info argument.\n\tOnly print constants that belong to no enum.\n\t(print_enum_type): New function.\n\t(main): Don't pass stdout to print_md_constant.  Call print_enum_type\n\tfor each defined enum type.\n\t* config/mips/mips.md (processor): New define_enum.\n\t(unspec): New define_c_enum.\n\t(UNSPEC_COMPARE_AND_SWAP, UNSPEC_COMPARE_AND_SWAP_12)\n\t(UNSPEC_SYNC_OLD_OP, UNSPEC_SYNC_NEW_OP, UNSPEC_SYNC_NEW_OP_12)\n\t(UNSPEC_SYNC_OLD_OP_12, UNSPEC_SYNC_EXCHANGE, UNSPEC_SYNC_EXCHANGE_12)\n\t(UNSPEC_MEMORY_BARRIER): Moved to sync.md.\n\t(UNSPEC_ADDQ, UNSPEC_ADDQ_S, UNSPEC_SUBQ, UNSPEC_SUBQ_S, UNSPEC_ADDSC)\n\t(UNSPEC_ADDWC, UNSPEC_MODSUB, UNSPEC_RADDU_W_QB, UNSPEC_ABSQ_S)\n\t(UNSPEC_PRECRQ_QB_PH, UNSPEC_PRECRQ_PH_W, UNSPEC_PRECRQ_RS_PH_W)\n\t(UNSPEC_PRECRQU_S_QB_PH, UNSPEC_PRECEQ_W_PHL, UNSPEC_PRECEQ_W_PHR)\n\t(UNSPEC_PRECEQU_PH_QBL, UNSPEC_PRECEQU_PH_QBR, UNSPEC_PRECEQU_PH_QBLA)\n\t(UNSPEC_PRECEQU_PH_QBRA, UNSPEC_PRECEU_PH_QBL, UNSPEC_PRECEU_PH_QBR)\n\t(UNSPEC_PRECEU_PH_QBLA, UNSPEC_PRECEU_PH_QBRA, UNSPEC_SHLL)\n\t(UNSPEC_SHLL_S, UNSPEC_SHRL_QB, UNSPEC_SHRA_PH, UNSPEC_SHRA_R)\n\t(UNSPEC_MULEU_S_PH_QBL, UNSPEC_MULEU_S_PH_QBR, UNSPEC_MULQ_RS_PH)\n\t(UNSPEC_MULEQ_S_W_PHL, UNSPEC_MULEQ_S_W_PHR, UNSPEC_DPAU_H_QBL)\n\t(UNSPEC_DPAU_H_QBR, UNSPEC_DPSU_H_QBL, UNSPEC_DPSU_H_QBR)\n\t(UNSPEC_DPAQ_S_W_PH, UNSPEC_DPSQ_S_W_PH, UNSPEC_MULSAQ_S_W_PH)\n\t(UNSPEC_DPAQ_SA_L_W, UNSPEC_DPSQ_SA_L_W, UNSPEC_MAQ_S_W_PHL)\n\t(UNSPEC_MAQ_S_W_PHR, UNSPEC_MAQ_SA_W_PHL, UNSPEC_MAQ_SA_W_PHR)\n\t(UNSPEC_BITREV, UNSPEC_INSV, UNSPEC_REPL_QB, UNSPEC_REPL_PH)\n\t(UNSPEC_CMP_EQ, UNSPEC_CMP_LT, UNSPEC_CMP_LE, UNSPEC_CMPGU_EQ_QB)\n\t(UNSPEC_CMPGU_LT_QB, UNSPEC_CMPGU_LE_QB, UNSPEC_PICK, UNSPEC_PACKRL_PH)\n\t(UNSPEC_EXTR_W, UNSPEC_EXTR_R_W, UNSPEC_EXTR_RS_W, UNSPEC_EXTR_S_H)\n\t(UNSPEC_EXTP, UNSPEC_EXTPDP, UNSPEC_SHILO, UNSPEC_MTHLIP, UNSPEC_WRDSP)\n\t(UNSPEC_RDDSP): Move to mips-dsp.md.\n\t(UNSPEC_ABSQ_S_QB, UNSPEC_ADDU_PH, UNSPEC_ADDU_S_PH, UNSPEC_ADDUH_QB)\n\t(UNSPEC_ADDUH_R_QB, UNSPEC_APPEND, UNSPEC_BALIGN, UNSPEC_CMPGDU_EQ_QB)\n\t(UNSPEC_CMPGDU_LT_QB, UNSPEC_CMPGDU_LE_QB, UNSPEC_DPA_W_PH)\n\t(UNSPEC_DPS_W_PH, UNSPEC_MADD, UNSPEC_MADDU, UNSPEC_MSUB, UNSPEC_MSUBU)\n\t(UNSPEC_MUL_PH, UNSPEC_MUL_S_PH, UNSPEC_MULQ_RS_W, UNSPEC_MULQ_S_PH)\n\t(UNSPEC_MULQ_S_W, UNSPEC_MULSA_W_PH, UNSPEC_MULT, UNSPEC_MULTU)\n\t(UNSPEC_PRECR_QB_PH, UNSPEC_PRECR_SRA_PH_W, UNSPEC_PRECR_SRA_R_PH_W)\n\t(UNSPEC_PREPEND, UNSPEC_SHRA_QB, UNSPEC_SHRA_R_QB, UNSPEC_SHRL_PH)\n\t(UNSPEC_SUBU_PH, UNSPEC_SUBU_S_PH, UNSPEC_SUBUH_QB, UNSPEC_SUBUH_R_QB)\n\t(UNSPEC_ADDQH_PH, UNSPEC_ADDQH_R_PH, UNSPEC_ADDQH_W, UNSPEC_ADDQH_R_W)\n\t(UNSPEC_SUBQH_PH, UNSPEC_SUBQH_R_PH, UNSPEC_SUBQH_W, UNSPEC_SUBQH_R_W)\n\t(UNSPEC_DPAX_W_PH, UNSPEC_DPSX_W_PH, UNSPEC_DPAQX_S_W_PH)\n\t(UNSPEC_DPAQX_SA_W_PH, UNSPEC_DPSQX_S_W_PH, UNSPEC_DPSQX_SA_W_PH):\n\tMoved to mips-dspr2.md.\n\t(UNSPEC_MOVE_TF_PS, UNSPEC_C, UNSPEC_ALNV_PS, UNSPEC_CABS)\n\t(UNSPEC_ADDR_PS, UNSPEC_CVT_PW_PS, UNSPEC_CVT_PS_PW, UNSPEC_MULR_PS)\n\t(UNSPEC_ABS_PS, UNSPEC_RSQRT1, UNSPEC_RSQRT2, UNSPEC_RECIP1)\n\t(UNSPEC_RECIP2, UNSPEC_SINGLE_CC, UNSPEC_SCC): Moved from mips-ps-3d.md.\n\t(UNSPEC_LOONGSON_PAVG, UNSPEC_LOONGSON_PCMPEQ, UNSPEC_LOONGSON_PCMPGT)\n\t(UNSPEC_LOONGSON_PEXTR, UNSPEC_LOONGSON_PINSR_0)\n\t(UNSPEC_LOONGSON_PINSR_1, UNSPEC_LOONGSON_PINSR_2)\n\t(UNSPEC_LOONGSON_PINSR_3, UNSPEC_LOONGSON_PMADD)\n\t(UNSPEC_LOONGSON_PMOVMSK, UNSPEC_LOONGSON_PMULHU)\n\t(UNSPEC_LOONGSON_PMULH, UNSPEC_LOONGSON_PMULL, UNSPEC_LOONGSON_PMULU)\n\t(UNSPEC_LOONGSON_PASUBUB, UNSPEC_LOONGSON_BIADD, UNSPEC_LOONGSON_PSADBH)\n\t(UNSPEC_LOONGSON_PSHUFH, UNSPEC_LOONGSON_PUNPCKH)\n\t(UNSPEC_LOONGSON_PUNPCKL, UNSPEC_LOONGSON_PADDD)\n\t(UNSPEC_LOONGSON_PSUBD): Move to mips-loongson.md.\n\t(UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN): Moved to mips-loongson2ef.md.\n\t(cpu): Update comment.\n\t* config/mips/sync.md (UNSPEC_COMPARE_AND_SWAP)\n\t(UNSPEC_COMPARE_AND_SWAP_12, UNSPEC_SYNC_OLD_OP, UNSPEC_SYNC_NEW_OP)\n\t(UNSPEC_SYNC_NEW_OP_12, UNSPEC_SYNC_OLD_OP_12, UNSPEC_SYNC_EXCHANGE)\n\t(UNSPEC_SYNC_EXCHANGE_12, UNSPEC_MEMORY_BARRIER): Moved from mips.md.\n\t* config/mips/loongson.md (UNSPEC_LOONGSON_PAVG, UNSPEC_LOONGSON_PCMPEQ)\n\t(UNSPEC_LOONGSON_PCMPGT, UNSPEC_LOONGSON_PEXTR, UNSPEC_LOONGSON_PINSR_0)\n\t(UNSPEC_LOONGSON_PINSR_1, UNSPEC_LOONGSON_PINSR_2)\n\t(UNSPEC_LOONGSON_PINSR_3, UNSPEC_LOONGSON_PMADD)\n\t(UNSPEC_LOONGSON_PMOVMSK, UNSPEC_LOONGSON_PMULHU)\n\t(UNSPEC_LOONGSON_PMULH, UNSPEC_LOONGSON_PMULL, UNSPEC_LOONGSON_PMULU)\n\t(UNSPEC_LOONGSON_PASUBUB, UNSPEC_LOONGSON_BIADD, UNSPEC_LOONGSON_PSADBH)\n\t(UNSPEC_LOONGSON_PSHUFH, UNSPEC_LOONGSON_PUNPCKH)\n\t(UNSPEC_LOONGSON_PUNPCKL, UNSPEC_LOONGSON_PADDD)\n\t(UNSPEC_LOONGSON_PSUBD): Moved from mips.md\n\t* config/mips/loongson2ef.md (UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN)\n\t(UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN): Moved from mips.md\n\t* config/mips/mips-dsp.md (UNSPEC_ADDQ, UNSPEC_ADDQ_S, UNSPEC_SUBQ)\n\t(UNSPEC_SUBQ_S, UNSPEC_ADDSC, UNSPEC_ADDWC, UNSPEC_MODSUB)\n\t(UNSPEC_RADDU_W_QB, UNSPEC_ABSQ_S, UNSPEC_PRECRQ_QB_PH)\n\t(UNSPEC_PRECRQ_PH_W, UNSPEC_PRECRQ_RS_PH_W, UNSPEC_PRECRQU_S_QB_PH)\n\t(UNSPEC_PRECEQ_W_PHL, UNSPEC_PRECEQ_W_PHR, UNSPEC_PRECEQU_PH_QBL)\n\t(UNSPEC_PRECEQU_PH_QBR, UNSPEC_PRECEQU_PH_QBLA, UNSPEC_PRECEQU_PH_QBRA)\n\t(UNSPEC_PRECEU_PH_QBL, UNSPEC_PRECEU_PH_QBR, UNSPEC_PRECEU_PH_QBLA)\n\t(UNSPEC_PRECEU_PH_QBRA, UNSPEC_SHLL, UNSPEC_SHLL_S, UNSPEC_SHRL_QB)\n\t(UNSPEC_SHRA_PH, UNSPEC_SHRA_R, UNSPEC_MULEU_S_PH_QBL)\n\t(UNSPEC_MULEU_S_PH_QBR, UNSPEC_MULQ_RS_PH, UNSPEC_MULEQ_S_W_PHL)\n\t(UNSPEC_MULEQ_S_W_PHR, UNSPEC_DPAU_H_QBL, UNSPEC_DPAU_H_QBR)\n\t(UNSPEC_DPSU_H_QBL, UNSPEC_DPSU_H_QBR, UNSPEC_DPAQ_S_W_PH)\n\t(UNSPEC_DPSQ_S_W_PH, UNSPEC_MULSAQ_S_W_PH, UNSPEC_DPAQ_SA_L_W)\n\t(UNSPEC_DPSQ_SA_L_W, UNSPEC_MAQ_S_W_PHL, UNSPEC_MAQ_S_W_PHR)\n\t(UNSPEC_MAQ_SA_W_PHL, UNSPEC_MAQ_SA_W_PHR, UNSPEC_BITREV, UNSPEC_INSV)\n\t(UNSPEC_REPL_QB, UNSPEC_REPL_PH, UNSPEC_CMP_EQ, UNSPEC_CMP_LT)\n\t(UNSPEC_CMP_LE, UNSPEC_CMPGU_EQ_QB, UNSPEC_CMPGU_LT_QB)\n\t(UNSPEC_CMPGU_LE_QB, UNSPEC_PICK, UNSPEC_PACKRL_PH, UNSPEC_EXTR_W)\n\t(UNSPEC_EXTR_R_W, UNSPEC_EXTR_RS_W, UNSPEC_EXTR_S_H, UNSPEC_EXTP)\n\t(UNSPEC_EXTPDP, UNSPEC_SHILO, UNSPEC_MTHLIP, UNSPEC_WRDSP)\n\t(UNSPEC_RDDSP): Moved from mips.md.\n\t* config/mips/mips-dspr2.md (UNSPEC_ABSQ_S_QB, UNSPEC_ADDU_PH)\n\t(UNSPEC_ADDU_S_PH, UNSPEC_ADDUH_QB, UNSPEC_ADDUH_R_QB, UNSPEC_APPEND)\n\t(UNSPEC_BALIGN, UNSPEC_CMPGDU_EQ_QB, UNSPEC_CMPGDU_LT_QB)\n\t(UNSPEC_CMPGDU_LE_QB, UNSPEC_DPA_W_PH, UNSPEC_DPS_W_PH, UNSPEC_MADD)\n\t(UNSPEC_MADDU, UNSPEC_MSUB, UNSPEC_MSUBU, UNSPEC_MUL_PH)\n\t(UNSPEC_MUL_S_PH, UNSPEC_MULQ_RS_W, UNSPEC_MULQ_S_PH, UNSPEC_MULQ_S_W)\n\t(UNSPEC_MULSA_W_PH, UNSPEC_MULT, UNSPEC_MULTU, UNSPEC_PRECR_QB_PH)\n\t(UNSPEC_PRECR_SRA_PH_W, UNSPEC_PRECR_SRA_R_PH_W, UNSPEC_PREPEND)\n\t(UNSPEC_SHRA_QB, UNSPEC_SHRA_R_QB, UNSPEC_SHRL_PH, UNSPEC_SUBU_PH)\n\t(UNSPEC_SUBU_S_PH, UNSPEC_SUBUH_QB, UNSPEC_SUBUH_R_QB, UNSPEC_ADDQH_PH)\n\t(UNSPEC_ADDQH_R_PH, UNSPEC_ADDQH_W, UNSPEC_ADDQH_R_W, UNSPEC_SUBQH_PH)\n\t(UNSPEC_SUBQH_R_PH, UNSPEC_SUBQH_W, UNSPEC_SUBQH_R_W, UNSPEC_DPAX_W_PH)\n\t(UNSPEC_DPSX_W_PH, UNSPEC_DPAQX_S_W_PH, UNSPEC_DPAQX_SA_W_PH)\n\t(UNSPEC_DPSQX_S_W_PH, UNSPEC_DPSQX_SA_W_PH): Moved from mips.md.\n\t* config/mips/mips-ps-3d.md (UNSPEC_MOVE_TF_PS, UNSPEC_C)\n\t(UNSPEC_ALNV_PS, UNSPEC_CABS, UNSPEC_ADDR_PS, UNSPEC_CVT_PW_PS)\n\t(UNSPEC_CVT_PS_PW, UNSPEC_MULR_PS, UNSPEC_ABS_PS, UNSPEC_RSQRT1)\n\t(UNSPEC_RSQRT2, UNSPEC_RECIP1, UNSPEC_RECIP2, UNSPEC_SINGLE_CC)\n\t(UNSPEC_SCC): Moved from mips.md.\n\t* config/mips/mips.c (mips_arch, mips_tune): Change enum from\n\t\"processor_type\" to \"processor\".\n\t(mips_rtx_cost_data): Replace PROCESSOR_MAX with NUM_PROCESSOR_VALUES.\n\t* config/mips/mips.h (processor_type): Delete.\n\t(mips_cpu_info.cpu, mips_arch, mips_tune): Change enum from\n\t\"processor_type\" to \"processor\".\n\nFrom-SVN: r160580", "tree": {"sha": "d68eec32700e8d1f8fca78585d743d080db36970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d68eec32700e8d1f8fca78585d743d080db36970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c513ce776cf919c31489143412f03a40ad0e6ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c513ce776cf919c31489143412f03a40ad0e6ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c513ce776cf919c31489143412f03a40ad0e6ca9"}], "stats": {"total": 1087, "additions": 764, "deletions": 323}, "files": [{"sha": "f4630c7c410454e6b5b0a243fa3d6fcfb717d680", "filename": "gcc/ChangeLog", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -1,3 +1,145 @@\n+2010-06-10  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* doc/md.texi (define_c_enum, define_enum): Document.\n+\t* read-md.h (md_constant): Add a parent_enum field.\n+\t(enum_value, enum_type): New structures.\n+\t(upcase_string, traverse_enum_types): Declare.\n+\t* read-md.c (enum_types): New variable.\n+\t(upcase_string, add_constant): New functions.\n+\t(handle_constants): Don't create the hash table here.\n+\tUse add_constant.\n+\t(traverse_md_constants): Don't check for a null md_constants.\n+\t(decimal_string, handle_enum, traverse_enum_types): New functions.\n+\t(read_md_files): Initialize md_constants and md_enums.\n+\t* genconstants.c (print_md_constant): Ignore info argument.\n+\tOnly print constants that belong to no enum.\n+\t(print_enum_type): New function.\n+\t(main): Don't pass stdout to print_md_constant.  Call print_enum_type\n+\tfor each defined enum type.\n+\t* config/mips/mips.md (processor): New define_enum.\n+\t(unspec): New define_c_enum.\n+\t(UNSPEC_COMPARE_AND_SWAP, UNSPEC_COMPARE_AND_SWAP_12)\n+\t(UNSPEC_SYNC_OLD_OP, UNSPEC_SYNC_NEW_OP, UNSPEC_SYNC_NEW_OP_12)\n+\t(UNSPEC_SYNC_OLD_OP_12, UNSPEC_SYNC_EXCHANGE, UNSPEC_SYNC_EXCHANGE_12)\n+\t(UNSPEC_MEMORY_BARRIER): Moved to sync.md.\n+\t(UNSPEC_ADDQ, UNSPEC_ADDQ_S, UNSPEC_SUBQ, UNSPEC_SUBQ_S, UNSPEC_ADDSC)\n+\t(UNSPEC_ADDWC, UNSPEC_MODSUB, UNSPEC_RADDU_W_QB, UNSPEC_ABSQ_S)\n+\t(UNSPEC_PRECRQ_QB_PH, UNSPEC_PRECRQ_PH_W, UNSPEC_PRECRQ_RS_PH_W)\n+\t(UNSPEC_PRECRQU_S_QB_PH, UNSPEC_PRECEQ_W_PHL, UNSPEC_PRECEQ_W_PHR)\n+\t(UNSPEC_PRECEQU_PH_QBL, UNSPEC_PRECEQU_PH_QBR, UNSPEC_PRECEQU_PH_QBLA)\n+\t(UNSPEC_PRECEQU_PH_QBRA, UNSPEC_PRECEU_PH_QBL, UNSPEC_PRECEU_PH_QBR)\n+\t(UNSPEC_PRECEU_PH_QBLA, UNSPEC_PRECEU_PH_QBRA, UNSPEC_SHLL)\n+\t(UNSPEC_SHLL_S, UNSPEC_SHRL_QB, UNSPEC_SHRA_PH, UNSPEC_SHRA_R)\n+\t(UNSPEC_MULEU_S_PH_QBL, UNSPEC_MULEU_S_PH_QBR, UNSPEC_MULQ_RS_PH)\n+\t(UNSPEC_MULEQ_S_W_PHL, UNSPEC_MULEQ_S_W_PHR, UNSPEC_DPAU_H_QBL)\n+\t(UNSPEC_DPAU_H_QBR, UNSPEC_DPSU_H_QBL, UNSPEC_DPSU_H_QBR)\n+\t(UNSPEC_DPAQ_S_W_PH, UNSPEC_DPSQ_S_W_PH, UNSPEC_MULSAQ_S_W_PH)\n+\t(UNSPEC_DPAQ_SA_L_W, UNSPEC_DPSQ_SA_L_W, UNSPEC_MAQ_S_W_PHL)\n+\t(UNSPEC_MAQ_S_W_PHR, UNSPEC_MAQ_SA_W_PHL, UNSPEC_MAQ_SA_W_PHR)\n+\t(UNSPEC_BITREV, UNSPEC_INSV, UNSPEC_REPL_QB, UNSPEC_REPL_PH)\n+\t(UNSPEC_CMP_EQ, UNSPEC_CMP_LT, UNSPEC_CMP_LE, UNSPEC_CMPGU_EQ_QB)\n+\t(UNSPEC_CMPGU_LT_QB, UNSPEC_CMPGU_LE_QB, UNSPEC_PICK, UNSPEC_PACKRL_PH)\n+\t(UNSPEC_EXTR_W, UNSPEC_EXTR_R_W, UNSPEC_EXTR_RS_W, UNSPEC_EXTR_S_H)\n+\t(UNSPEC_EXTP, UNSPEC_EXTPDP, UNSPEC_SHILO, UNSPEC_MTHLIP, UNSPEC_WRDSP)\n+\t(UNSPEC_RDDSP): Move to mips-dsp.md.\n+\t(UNSPEC_ABSQ_S_QB, UNSPEC_ADDU_PH, UNSPEC_ADDU_S_PH, UNSPEC_ADDUH_QB)\n+\t(UNSPEC_ADDUH_R_QB, UNSPEC_APPEND, UNSPEC_BALIGN, UNSPEC_CMPGDU_EQ_QB)\n+\t(UNSPEC_CMPGDU_LT_QB, UNSPEC_CMPGDU_LE_QB, UNSPEC_DPA_W_PH)\n+\t(UNSPEC_DPS_W_PH, UNSPEC_MADD, UNSPEC_MADDU, UNSPEC_MSUB, UNSPEC_MSUBU)\n+\t(UNSPEC_MUL_PH, UNSPEC_MUL_S_PH, UNSPEC_MULQ_RS_W, UNSPEC_MULQ_S_PH)\n+\t(UNSPEC_MULQ_S_W, UNSPEC_MULSA_W_PH, UNSPEC_MULT, UNSPEC_MULTU)\n+\t(UNSPEC_PRECR_QB_PH, UNSPEC_PRECR_SRA_PH_W, UNSPEC_PRECR_SRA_R_PH_W)\n+\t(UNSPEC_PREPEND, UNSPEC_SHRA_QB, UNSPEC_SHRA_R_QB, UNSPEC_SHRL_PH)\n+\t(UNSPEC_SUBU_PH, UNSPEC_SUBU_S_PH, UNSPEC_SUBUH_QB, UNSPEC_SUBUH_R_QB)\n+\t(UNSPEC_ADDQH_PH, UNSPEC_ADDQH_R_PH, UNSPEC_ADDQH_W, UNSPEC_ADDQH_R_W)\n+\t(UNSPEC_SUBQH_PH, UNSPEC_SUBQH_R_PH, UNSPEC_SUBQH_W, UNSPEC_SUBQH_R_W)\n+\t(UNSPEC_DPAX_W_PH, UNSPEC_DPSX_W_PH, UNSPEC_DPAQX_S_W_PH)\n+\t(UNSPEC_DPAQX_SA_W_PH, UNSPEC_DPSQX_S_W_PH, UNSPEC_DPSQX_SA_W_PH):\n+\tMoved to mips-dspr2.md.\n+\t(UNSPEC_MOVE_TF_PS, UNSPEC_C, UNSPEC_ALNV_PS, UNSPEC_CABS)\n+\t(UNSPEC_ADDR_PS, UNSPEC_CVT_PW_PS, UNSPEC_CVT_PS_PW, UNSPEC_MULR_PS)\n+\t(UNSPEC_ABS_PS, UNSPEC_RSQRT1, UNSPEC_RSQRT2, UNSPEC_RECIP1)\n+\t(UNSPEC_RECIP2, UNSPEC_SINGLE_CC, UNSPEC_SCC): Moved from mips-ps-3d.md.\n+\t(UNSPEC_LOONGSON_PAVG, UNSPEC_LOONGSON_PCMPEQ, UNSPEC_LOONGSON_PCMPGT)\n+\t(UNSPEC_LOONGSON_PEXTR, UNSPEC_LOONGSON_PINSR_0)\n+\t(UNSPEC_LOONGSON_PINSR_1, UNSPEC_LOONGSON_PINSR_2)\n+\t(UNSPEC_LOONGSON_PINSR_3, UNSPEC_LOONGSON_PMADD)\n+\t(UNSPEC_LOONGSON_PMOVMSK, UNSPEC_LOONGSON_PMULHU)\n+\t(UNSPEC_LOONGSON_PMULH, UNSPEC_LOONGSON_PMULL, UNSPEC_LOONGSON_PMULU)\n+\t(UNSPEC_LOONGSON_PASUBUB, UNSPEC_LOONGSON_BIADD, UNSPEC_LOONGSON_PSADBH)\n+\t(UNSPEC_LOONGSON_PSHUFH, UNSPEC_LOONGSON_PUNPCKH)\n+\t(UNSPEC_LOONGSON_PUNPCKL, UNSPEC_LOONGSON_PADDD)\n+\t(UNSPEC_LOONGSON_PSUBD): Move to mips-loongson.md.\n+\t(UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN): Moved to mips-loongson2ef.md.\n+\t(cpu): Update comment.\n+\t* config/mips/sync.md (UNSPEC_COMPARE_AND_SWAP)\n+\t(UNSPEC_COMPARE_AND_SWAP_12, UNSPEC_SYNC_OLD_OP, UNSPEC_SYNC_NEW_OP)\n+\t(UNSPEC_SYNC_NEW_OP_12, UNSPEC_SYNC_OLD_OP_12, UNSPEC_SYNC_EXCHANGE)\n+\t(UNSPEC_SYNC_EXCHANGE_12, UNSPEC_MEMORY_BARRIER): Moved from mips.md.\n+\t* config/mips/loongson.md (UNSPEC_LOONGSON_PAVG, UNSPEC_LOONGSON_PCMPEQ)\n+\t(UNSPEC_LOONGSON_PCMPGT, UNSPEC_LOONGSON_PEXTR, UNSPEC_LOONGSON_PINSR_0)\n+\t(UNSPEC_LOONGSON_PINSR_1, UNSPEC_LOONGSON_PINSR_2)\n+\t(UNSPEC_LOONGSON_PINSR_3, UNSPEC_LOONGSON_PMADD)\n+\t(UNSPEC_LOONGSON_PMOVMSK, UNSPEC_LOONGSON_PMULHU)\n+\t(UNSPEC_LOONGSON_PMULH, UNSPEC_LOONGSON_PMULL, UNSPEC_LOONGSON_PMULU)\n+\t(UNSPEC_LOONGSON_PASUBUB, UNSPEC_LOONGSON_BIADD, UNSPEC_LOONGSON_PSADBH)\n+\t(UNSPEC_LOONGSON_PSHUFH, UNSPEC_LOONGSON_PUNPCKH)\n+\t(UNSPEC_LOONGSON_PUNPCKL, UNSPEC_LOONGSON_PADDD)\n+\t(UNSPEC_LOONGSON_PSUBD): Moved from mips.md\n+\t* config/mips/loongson2ef.md (UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN)\n+\t(UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN): Moved from mips.md\n+\t* config/mips/mips-dsp.md (UNSPEC_ADDQ, UNSPEC_ADDQ_S, UNSPEC_SUBQ)\n+\t(UNSPEC_SUBQ_S, UNSPEC_ADDSC, UNSPEC_ADDWC, UNSPEC_MODSUB)\n+\t(UNSPEC_RADDU_W_QB, UNSPEC_ABSQ_S, UNSPEC_PRECRQ_QB_PH)\n+\t(UNSPEC_PRECRQ_PH_W, UNSPEC_PRECRQ_RS_PH_W, UNSPEC_PRECRQU_S_QB_PH)\n+\t(UNSPEC_PRECEQ_W_PHL, UNSPEC_PRECEQ_W_PHR, UNSPEC_PRECEQU_PH_QBL)\n+\t(UNSPEC_PRECEQU_PH_QBR, UNSPEC_PRECEQU_PH_QBLA, UNSPEC_PRECEQU_PH_QBRA)\n+\t(UNSPEC_PRECEU_PH_QBL, UNSPEC_PRECEU_PH_QBR, UNSPEC_PRECEU_PH_QBLA)\n+\t(UNSPEC_PRECEU_PH_QBRA, UNSPEC_SHLL, UNSPEC_SHLL_S, UNSPEC_SHRL_QB)\n+\t(UNSPEC_SHRA_PH, UNSPEC_SHRA_R, UNSPEC_MULEU_S_PH_QBL)\n+\t(UNSPEC_MULEU_S_PH_QBR, UNSPEC_MULQ_RS_PH, UNSPEC_MULEQ_S_W_PHL)\n+\t(UNSPEC_MULEQ_S_W_PHR, UNSPEC_DPAU_H_QBL, UNSPEC_DPAU_H_QBR)\n+\t(UNSPEC_DPSU_H_QBL, UNSPEC_DPSU_H_QBR, UNSPEC_DPAQ_S_W_PH)\n+\t(UNSPEC_DPSQ_S_W_PH, UNSPEC_MULSAQ_S_W_PH, UNSPEC_DPAQ_SA_L_W)\n+\t(UNSPEC_DPSQ_SA_L_W, UNSPEC_MAQ_S_W_PHL, UNSPEC_MAQ_S_W_PHR)\n+\t(UNSPEC_MAQ_SA_W_PHL, UNSPEC_MAQ_SA_W_PHR, UNSPEC_BITREV, UNSPEC_INSV)\n+\t(UNSPEC_REPL_QB, UNSPEC_REPL_PH, UNSPEC_CMP_EQ, UNSPEC_CMP_LT)\n+\t(UNSPEC_CMP_LE, UNSPEC_CMPGU_EQ_QB, UNSPEC_CMPGU_LT_QB)\n+\t(UNSPEC_CMPGU_LE_QB, UNSPEC_PICK, UNSPEC_PACKRL_PH, UNSPEC_EXTR_W)\n+\t(UNSPEC_EXTR_R_W, UNSPEC_EXTR_RS_W, UNSPEC_EXTR_S_H, UNSPEC_EXTP)\n+\t(UNSPEC_EXTPDP, UNSPEC_SHILO, UNSPEC_MTHLIP, UNSPEC_WRDSP)\n+\t(UNSPEC_RDDSP): Moved from mips.md.\n+\t* config/mips/mips-dspr2.md (UNSPEC_ABSQ_S_QB, UNSPEC_ADDU_PH)\n+\t(UNSPEC_ADDU_S_PH, UNSPEC_ADDUH_QB, UNSPEC_ADDUH_R_QB, UNSPEC_APPEND)\n+\t(UNSPEC_BALIGN, UNSPEC_CMPGDU_EQ_QB, UNSPEC_CMPGDU_LT_QB)\n+\t(UNSPEC_CMPGDU_LE_QB, UNSPEC_DPA_W_PH, UNSPEC_DPS_W_PH, UNSPEC_MADD)\n+\t(UNSPEC_MADDU, UNSPEC_MSUB, UNSPEC_MSUBU, UNSPEC_MUL_PH)\n+\t(UNSPEC_MUL_S_PH, UNSPEC_MULQ_RS_W, UNSPEC_MULQ_S_PH, UNSPEC_MULQ_S_W)\n+\t(UNSPEC_MULSA_W_PH, UNSPEC_MULT, UNSPEC_MULTU, UNSPEC_PRECR_QB_PH)\n+\t(UNSPEC_PRECR_SRA_PH_W, UNSPEC_PRECR_SRA_R_PH_W, UNSPEC_PREPEND)\n+\t(UNSPEC_SHRA_QB, UNSPEC_SHRA_R_QB, UNSPEC_SHRL_PH, UNSPEC_SUBU_PH)\n+\t(UNSPEC_SUBU_S_PH, UNSPEC_SUBUH_QB, UNSPEC_SUBUH_R_QB, UNSPEC_ADDQH_PH)\n+\t(UNSPEC_ADDQH_R_PH, UNSPEC_ADDQH_W, UNSPEC_ADDQH_R_W, UNSPEC_SUBQH_PH)\n+\t(UNSPEC_SUBQH_R_PH, UNSPEC_SUBQH_W, UNSPEC_SUBQH_R_W, UNSPEC_DPAX_W_PH)\n+\t(UNSPEC_DPSX_W_PH, UNSPEC_DPAQX_S_W_PH, UNSPEC_DPAQX_SA_W_PH)\n+\t(UNSPEC_DPSQX_S_W_PH, UNSPEC_DPSQX_SA_W_PH): Moved from mips.md.\n+\t* config/mips/mips-ps-3d.md (UNSPEC_MOVE_TF_PS, UNSPEC_C)\n+\t(UNSPEC_ALNV_PS, UNSPEC_CABS, UNSPEC_ADDR_PS, UNSPEC_CVT_PW_PS)\n+\t(UNSPEC_CVT_PS_PW, UNSPEC_MULR_PS, UNSPEC_ABS_PS, UNSPEC_RSQRT1)\n+\t(UNSPEC_RSQRT2, UNSPEC_RECIP1, UNSPEC_RECIP2, UNSPEC_SINGLE_CC)\n+\t(UNSPEC_SCC): Moved from mips.md.\n+\t* config/mips/mips.c (mips_arch, mips_tune): Change enum from\n+\t\"processor_type\" to \"processor\".\n+\t(mips_rtx_cost_data): Replace PROCESSOR_MAX with NUM_PROCESSOR_VALUES.\n+\t* config/mips/mips.h (processor_type): Delete.\n+\t(mips_cpu_info.cpu, mips_arch, mips_tune): Change enum from\n+\t\"processor_type\" to \"processor\".\n+\n 2010-06-10  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* configure.ac (tm_include_list): Add insn-constants.h."}, {"sha": "10703bb7b08e7021b7f846b756254c3bca8c61cf", "filename": "gcc/config/mips/loongson.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Floongson.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Floongson.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Floongson.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -18,6 +18,31 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(define_c_enum \"unspec\" [\n+  UNSPEC_LOONGSON_PAVG\n+  UNSPEC_LOONGSON_PCMPEQ\n+  UNSPEC_LOONGSON_PCMPGT\n+  UNSPEC_LOONGSON_PEXTR\n+  UNSPEC_LOONGSON_PINSR_0\n+  UNSPEC_LOONGSON_PINSR_1\n+  UNSPEC_LOONGSON_PINSR_2\n+  UNSPEC_LOONGSON_PINSR_3\n+  UNSPEC_LOONGSON_PMADD\n+  UNSPEC_LOONGSON_PMOVMSK\n+  UNSPEC_LOONGSON_PMULHU\n+  UNSPEC_LOONGSON_PMULH\n+  UNSPEC_LOONGSON_PMULL\n+  UNSPEC_LOONGSON_PMULU\n+  UNSPEC_LOONGSON_PASUBUB\n+  UNSPEC_LOONGSON_BIADD\n+  UNSPEC_LOONGSON_PSADBH\n+  UNSPEC_LOONGSON_PSHUFH\n+  UNSPEC_LOONGSON_PUNPCKH\n+  UNSPEC_LOONGSON_PUNPCKL\n+  UNSPEC_LOONGSON_PADDD\n+  UNSPEC_LOONGSON_PSUBD\n+])\n+\n ;; Mode iterators and attributes.\n \n ;; 64-bit vectors of bytes."}, {"sha": "1238f20ecaeb840fe3a1c7da710b4d8e35e9d1d3", "filename": "gcc/config/mips/loongson2ef.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Floongson2ef.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Floongson2ef.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Floongson2ef.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -17,6 +17,13 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(define_c_enum \"unspec\" [\n+  UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN\n+  UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN\n+  UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN\n+  UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN\n+])\n+\n ;; Automaton for integer instructions.\n (define_automaton \"ls2_alu\")\n "}, {"sha": "faa22bdd3649bb315c16322829b06eeb7dd0dfff", "filename": "gcc/config/mips/mips-dsp.md", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dsp.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -16,6 +16,78 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+;; MIPS DSP ASE Revision 0.98 3/24/2005\n+(define_c_enum \"unspec\" [\n+  UNSPEC_ADDQ\n+  UNSPEC_ADDQ_S\n+  UNSPEC_SUBQ\n+  UNSPEC_SUBQ_S\n+  UNSPEC_ADDSC\n+  UNSPEC_ADDWC\n+  UNSPEC_MODSUB\n+  UNSPEC_RADDU_W_QB\n+  UNSPEC_ABSQ_S\n+  UNSPEC_PRECRQ_QB_PH\n+  UNSPEC_PRECRQ_PH_W\n+  UNSPEC_PRECRQ_RS_PH_W\n+  UNSPEC_PRECRQU_S_QB_PH\n+  UNSPEC_PRECEQ_W_PHL\n+  UNSPEC_PRECEQ_W_PHR\n+  UNSPEC_PRECEQU_PH_QBL\n+  UNSPEC_PRECEQU_PH_QBR\n+  UNSPEC_PRECEQU_PH_QBLA\n+  UNSPEC_PRECEQU_PH_QBRA\n+  UNSPEC_PRECEU_PH_QBL\n+  UNSPEC_PRECEU_PH_QBR\n+  UNSPEC_PRECEU_PH_QBLA\n+  UNSPEC_PRECEU_PH_QBRA\n+  UNSPEC_SHLL\n+  UNSPEC_SHLL_S\n+  UNSPEC_SHRL_QB\n+  UNSPEC_SHRA_PH\n+  UNSPEC_SHRA_R\n+  UNSPEC_MULEU_S_PH_QBL\n+  UNSPEC_MULEU_S_PH_QBR\n+  UNSPEC_MULQ_RS_PH\n+  UNSPEC_MULEQ_S_W_PHL\n+  UNSPEC_MULEQ_S_W_PHR\n+  UNSPEC_DPAU_H_QBL\n+  UNSPEC_DPAU_H_QBR\n+  UNSPEC_DPSU_H_QBL\n+  UNSPEC_DPSU_H_QBR\n+  UNSPEC_DPAQ_S_W_PH\n+  UNSPEC_DPSQ_S_W_PH\n+  UNSPEC_MULSAQ_S_W_PH\n+  UNSPEC_DPAQ_SA_L_W\n+  UNSPEC_DPSQ_SA_L_W\n+  UNSPEC_MAQ_S_W_PHL\n+  UNSPEC_MAQ_S_W_PHR\n+  UNSPEC_MAQ_SA_W_PHL\n+  UNSPEC_MAQ_SA_W_PHR\n+  UNSPEC_BITREV\n+  UNSPEC_INSV\n+  UNSPEC_REPL_QB\n+  UNSPEC_REPL_PH\n+  UNSPEC_CMP_EQ\n+  UNSPEC_CMP_LT\n+  UNSPEC_CMP_LE\n+  UNSPEC_CMPGU_EQ_QB\n+  UNSPEC_CMPGU_LT_QB\n+  UNSPEC_CMPGU_LE_QB\n+  UNSPEC_PICK\n+  UNSPEC_PACKRL_PH\n+  UNSPEC_EXTR_W\n+  UNSPEC_EXTR_R_W\n+  UNSPEC_EXTR_RS_W\n+  UNSPEC_EXTR_S_H\n+  UNSPEC_EXTP\n+  UNSPEC_EXTPDP\n+  UNSPEC_SHILO\n+  UNSPEC_MTHLIP\n+  UNSPEC_WRDSP\n+  UNSPEC_RDDSP\n+])\n+\n (define_constants\n   [(CCDSP_PO_REGNUM\t182)\n    (CCDSP_SC_REGNUM\t183)"}, {"sha": "9c3cbd5843547b63fa33314b792ad644bf7fb6e8", "filename": "gcc/config/mips/mips-dspr2.md", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -18,6 +18,58 @@\n ;;\n ; MIPS DSP ASE REV 2 Revision 0.02 11/24/2006\n \n+(define_c_enum \"unspec\" [\n+  UNSPEC_ABSQ_S_QB\n+  UNSPEC_ADDU_PH\n+  UNSPEC_ADDU_S_PH\n+  UNSPEC_ADDUH_QB\n+  UNSPEC_ADDUH_R_QB\n+  UNSPEC_APPEND\n+  UNSPEC_BALIGN\n+  UNSPEC_CMPGDU_EQ_QB\n+  UNSPEC_CMPGDU_LT_QB\n+  UNSPEC_CMPGDU_LE_QB\n+  UNSPEC_DPA_W_PH\n+  UNSPEC_DPS_W_PH\n+  UNSPEC_MADD\n+  UNSPEC_MADDU\n+  UNSPEC_MSUB\n+  UNSPEC_MSUBU\n+  UNSPEC_MUL_PH\n+  UNSPEC_MUL_S_PH\n+  UNSPEC_MULQ_RS_W\n+  UNSPEC_MULQ_S_PH\n+  UNSPEC_MULQ_S_W\n+  UNSPEC_MULSA_W_PH\n+  UNSPEC_MULT\n+  UNSPEC_MULTU\n+  UNSPEC_PRECR_QB_PH\n+  UNSPEC_PRECR_SRA_PH_W\n+  UNSPEC_PRECR_SRA_R_PH_W\n+  UNSPEC_PREPEND\n+  UNSPEC_SHRA_QB\n+  UNSPEC_SHRA_R_QB\n+  UNSPEC_SHRL_PH\n+  UNSPEC_SUBU_PH\n+  UNSPEC_SUBU_S_PH\n+  UNSPEC_SUBUH_QB\n+  UNSPEC_SUBUH_R_QB\n+  UNSPEC_ADDQH_PH\n+  UNSPEC_ADDQH_R_PH\n+  UNSPEC_ADDQH_W\n+  UNSPEC_ADDQH_R_W\n+  UNSPEC_SUBQH_PH\n+  UNSPEC_SUBQH_R_PH\n+  UNSPEC_SUBQH_W\n+  UNSPEC_SUBQH_R_W\n+  UNSPEC_DPAX_W_PH\n+  UNSPEC_DPSX_W_PH\n+  UNSPEC_DPAQX_S_W_PH\n+  UNSPEC_DPAQX_SA_W_PH\n+  UNSPEC_DPSQX_S_W_PH\n+  UNSPEC_DPSQX_SA_W_PH\n+])\n+\n (define_insn \"mips_absq_s_qb\"\n   [(parallel\n     [(set (match_operand:V4QI 0 \"register_operand\" \"=d\")"}, {"sha": "780fb03c70620b6e12ae3f0e88b8bd947ba939b7", "filename": "gcc/config/mips/mips-ps-3d.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -17,6 +17,30 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(define_c_enum \"unspec\" [\n+  UNSPEC_MOVE_TF_PS\n+  UNSPEC_C\n+\n+  ;; MIPS64/MIPS32R2 alnv.ps\n+  UNSPEC_ALNV_PS\n+\n+  ;; MIPS-3D instructions\n+  UNSPEC_CABS\n+\n+  UNSPEC_ADDR_PS\n+  UNSPEC_CVT_PW_PS\n+  UNSPEC_CVT_PS_PW\n+  UNSPEC_MULR_PS\n+  UNSPEC_ABS_PS\n+\n+  UNSPEC_RSQRT1\n+  UNSPEC_RSQRT2\n+  UNSPEC_RECIP1\n+  UNSPEC_RECIP2\n+  UNSPEC_SINGLE_CC\n+  UNSPEC_SCC\n+])\n+\n (define_insn \"*movcc_v2sf_<mode>\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:V2SF"}, {"sha": "29f0f0b74f385643398b4878fe7a0e15a6ab8da5", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -504,11 +504,11 @@ struct mips_asm_switch mips_noat = { \"at\", 0 };\n static bool mips_branch_likely;\n \n /* The current instruction-set architecture.  */\n-enum processor_type mips_arch;\n+enum processor mips_arch;\n const struct mips_cpu_info *mips_arch_info;\n \n /* The processor that we should tune the code for.  */\n-enum processor_type mips_tune;\n+enum processor mips_tune;\n const struct mips_cpu_info *mips_tune_info;\n \n /* The ISA level associated with mips_arch.  */\n@@ -797,7 +797,8 @@ static const struct mips_rtx_cost_data mips_rtx_cost_optimize_size = {\n };\n \n /* Costs to use when optimizing for speed, indexed by processor.  */\n-static const struct mips_rtx_cost_data mips_rtx_cost_data[PROCESSOR_MAX] = {\n+static const struct mips_rtx_cost_data\n+  mips_rtx_cost_data[NUM_PROCESSOR_VALUES] = {\n   { /* R3000 */\n     COSTS_N_INSNS (2),            /* fp_add */\n     COSTS_N_INSNS (4),            /* fp_mult_sf */"}, {"sha": "4d791023f146b5b5c2203ff5549720e173c35693", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 50, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -28,53 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n \n /* MIPS external variables defined in mips.c.  */\n \n-/* Which processor to schedule for.  Since there is no difference between\n-   a R2000 and R3000 in terms of the scheduler, we collapse them into\n-   just an R3000.  The elements of the enumeration must match exactly\n-   the cpu attribute in the mips.md machine description.  */\n-\n-enum processor_type {\n-  PROCESSOR_R3000,\n-  PROCESSOR_4KC,\n-  PROCESSOR_4KP,\n-  PROCESSOR_5KC,\n-  PROCESSOR_5KF,\n-  PROCESSOR_20KC,\n-  PROCESSOR_24KC,\n-  PROCESSOR_24KF2_1,\n-  PROCESSOR_24KF1_1,\n-  PROCESSOR_74KC,\n-  PROCESSOR_74KF2_1,\n-  PROCESSOR_74KF1_1,\n-  PROCESSOR_74KF3_2,\n-  PROCESSOR_LOONGSON_2E,\n-  PROCESSOR_LOONGSON_2F,\n-  PROCESSOR_M4K,\n-  PROCESSOR_OCTEON,\n-  PROCESSOR_R3900,\n-  PROCESSOR_R6000,\n-  PROCESSOR_R4000,\n-  PROCESSOR_R4100,\n-  PROCESSOR_R4111,\n-  PROCESSOR_R4120,\n-  PROCESSOR_R4130,\n-  PROCESSOR_R4300,\n-  PROCESSOR_R4600,\n-  PROCESSOR_R4650,\n-  PROCESSOR_R5000,\n-  PROCESSOR_R5400,\n-  PROCESSOR_R5500,\n-  PROCESSOR_R7000,\n-  PROCESSOR_R8000,\n-  PROCESSOR_R9000,\n-  PROCESSOR_R10000,\n-  PROCESSOR_SB1,\n-  PROCESSOR_SB1A,\n-  PROCESSOR_SR71000,\n-  PROCESSOR_XLR,\n-  PROCESSOR_MAX\n-};\n-\n /* Costs of various operations on the different architectures.  */\n \n struct mips_rtx_cost_data\n@@ -121,7 +74,7 @@ struct mips_cpu_info {\n   /* The internal processor number that most closely matches this\n      entry.  Several processors can have the same value, if there's no\n      difference between them from GCC's point of view.  */\n-  enum processor_type cpu;\n+  enum processor cpu;\n \n   /* The ISA level that the processor implements.  */\n   int isa;\n@@ -3065,8 +3018,8 @@ extern int mips_dbx_regno[];\n extern int mips_dwarf_regno[];\n extern bool mips_split_p[];\n extern bool mips_split_hi_p[];\n-extern enum processor_type mips_arch;   /* which cpu to codegen for */\n-extern enum processor_type mips_tune;   /* which cpu to schedule for */\n+extern enum processor mips_arch;        /* which cpu to codegen for */\n+extern enum processor mips_tune;        /* which cpu to schedule for */\n extern int mips_isa;\t\t\t/* architectural level */\n extern int mips_abi;\t\t\t/* which ABI to use */\n extern const struct mips_cpu_info *mips_arch_info;"}, {"sha": "0f2877558917cc998459430b4bc72483c5187b8c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 113, "deletions": 237, "changes": 350, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -23,247 +23,119 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(define_enum \"processor\" [\n+  r3000\n+  4kc\n+  4kp\n+  5kc\n+  5kf\n+  20kc\n+  24kc\n+  24kf2_1\n+  24kf1_1\n+  74kc\n+  74kf2_1\n+  74kf1_1\n+  74kf3_2\n+  loongson_2e\n+  loongson_2f\n+  m4k\n+  octeon\n+  r3900\n+  r6000\n+  r4000\n+  r4100\n+  r4111\n+  r4120\n+  r4130\n+  r4300\n+  r4600\n+  r4650\n+  r5000\n+  r5400\n+  r5500\n+  r7000\n+  r8000\n+  r9000\n+  r10000\n+  sb1\n+  sb1a\n+  sr71000\n+  xlr\n+])\n+\n+(define_c_enum \"unspec\" [\n+  ;; Unaligned accesses.\n+  UNSPEC_LOAD_LEFT\n+  UNSPEC_LOAD_RIGHT\n+  UNSPEC_STORE_LEFT\n+  UNSPEC_STORE_RIGHT\n+\n+  ;; Floating-point moves.\n+  UNSPEC_LOAD_LOW\n+  UNSPEC_LOAD_HIGH\n+  UNSPEC_STORE_WORD\n+  UNSPEC_MFHC1\n+  UNSPEC_MTHC1\n+\n+  ;; HI/LO moves.\n+  UNSPEC_MFHI\n+  UNSPEC_MTHI\n+  UNSPEC_SET_HILO\n+\n+  ;; GP manipulation.\n+  UNSPEC_LOADGP\n+  UNSPEC_COPYGP\n+  UNSPEC_MOVE_GP\n+  UNSPEC_POTENTIAL_CPRESTORE\n+  UNSPEC_CPRESTORE\n+  UNSPEC_RESTORE_GP\n+  UNSPEC_EH_RETURN\n+  UNSPEC_GP\n+  UNSPEC_SET_GOT_VERSION\n+  UNSPEC_UPDATE_GOT_VERSION\n+\n+  ;; Symbolic accesses.\n+  UNSPEC_LOAD_CALL\n+  UNSPEC_LOAD_GOT\n+  UNSPEC_TLS_LDM\n+  UNSPEC_TLS_GET_TP\n+\n+  ;; MIPS16 constant pools.\n+  UNSPEC_ALIGN\n+  UNSPEC_CONSTTABLE_INT\n+  UNSPEC_CONSTTABLE_FLOAT\n+\n+  ;; Blockage and synchronisation.\n+  UNSPEC_BLOCKAGE\n+  UNSPEC_CLEAR_HAZARD\n+  UNSPEC_RDHWR\n+  UNSPEC_SYNCI\n+  UNSPEC_SYNC\n+\n+  ;; Cache manipulation.\n+  UNSPEC_MIPS_CACHE\n+  UNSPEC_R10K_CACHE_BARRIER\n+\n+  ;; Interrupt handling.\n+  UNSPEC_ERET\n+  UNSPEC_DERET\n+  UNSPEC_DI\n+  UNSPEC_EHB\n+  UNSPEC_RDPGPR\n+  UNSPEC_COP0\n+\n+  ;; Used in a call expression in place of args_size.  It's present for PIC\n+  ;; indirect calls where it contains args_size and the function symbol.\n+  UNSPEC_CALL_ATTR\n+])\n+\n (define_constants\n-  [(UNSPEC_LOAD_LOW\t\t 0)\n-   (UNSPEC_LOAD_HIGH\t\t 1)\n-   (UNSPEC_STORE_WORD\t\t 2)\n-   (UNSPEC_GET_FNADDR\t\t 3)\n-   (UNSPEC_BLOCKAGE\t\t 4)\n-   (UNSPEC_POTENTIAL_CPRESTORE\t 5)\n-   (UNSPEC_CPRESTORE\t\t 6)\n-   (UNSPEC_RESTORE_GP\t\t 7)\n-   (UNSPEC_MOVE_GP\t\t 8)\n-   (UNSPEC_EH_RETURN\t\t 9)\n-   (UNSPEC_CONSTTABLE_INT\t10)\n-   (UNSPEC_CONSTTABLE_FLOAT\t11)\n-   (UNSPEC_ALIGN\t\t14)\n-   (UNSPEC_HIGH\t\t\t17)\n-   (UNSPEC_LOAD_LEFT\t\t18)\n-   (UNSPEC_LOAD_RIGHT\t\t19)\n-   (UNSPEC_STORE_LEFT\t\t20)\n-   (UNSPEC_STORE_RIGHT\t\t21)\n-   (UNSPEC_LOADGP\t\t22)\n-   (UNSPEC_LOAD_CALL\t\t23)\n-   (UNSPEC_LOAD_GOT\t\t24)\n-   (UNSPEC_GP\t\t\t25)\n-   (UNSPEC_MFHI\t\t\t26)\n-   (UNSPEC_MTHI\t\t\t27)\n-   (UNSPEC_SET_HILO\t\t28)\n-   (UNSPEC_TLS_LDM\t\t29)\n-   (UNSPEC_TLS_GET_TP\t\t30)\n-   (UNSPEC_MFHC1\t\t31)\n-   (UNSPEC_MTHC1\t\t32)\n-   (UNSPEC_CLEAR_HAZARD\t\t33)\n-   (UNSPEC_RDHWR\t\t34)\n-   (UNSPEC_SYNCI\t\t35)\n-   (UNSPEC_SYNC\t\t\t36)\n-   (UNSPEC_COMPARE_AND_SWAP\t37)\n-   (UNSPEC_COMPARE_AND_SWAP_12\t38)\n-   (UNSPEC_SYNC_OLD_OP\t\t39)\n-   (UNSPEC_SYNC_NEW_OP\t\t40)\n-   (UNSPEC_SYNC_NEW_OP_12\t41)\n-   (UNSPEC_SYNC_OLD_OP_12\t42)\n-   (UNSPEC_SYNC_EXCHANGE\t43)\n-   (UNSPEC_SYNC_EXCHANGE_12\t44)\n-   (UNSPEC_MEMORY_BARRIER\t45)\n-   (UNSPEC_SET_GOT_VERSION\t46)\n-   (UNSPEC_UPDATE_GOT_VERSION\t47)\n-   (UNSPEC_COPYGP\t\t48)\n-   (UNSPEC_ERET\t\t\t49)\n-   (UNSPEC_DERET\t\t50)\n-   (UNSPEC_DI\t\t\t51)\n-   (UNSPEC_EHB\t\t\t52)\n-   (UNSPEC_RDPGPR\t\t53)\n-   (UNSPEC_COP0\t\t\t54)\n-   ;; Used in a call expression in place of args_size.  It's present for PIC\n-   ;; indirect calls where it contains args_size and the function symbol.\n-   (UNSPEC_CALL_ATTR\t\t55)\n-   \n-   (UNSPEC_ADDRESS_FIRST\t100)\n-\n-   (TLS_GET_TP_REGNUM\t\t3)\n+  [(TLS_GET_TP_REGNUM\t\t3)\n    (RETURN_ADDR_REGNUM\t\t31)\n    (CPRESTORE_SLOT_REGNUM\t76)\n    (GOT_VERSION_REGNUM\t\t79)\n \n-   ;; For MIPS Paired-Singled Floating Point Instructions.\n-\n-   (UNSPEC_MOVE_TF_PS\t\t200)\n-   (UNSPEC_C\t\t\t201)\n-\n-   ;; MIPS64/MIPS32R2 alnv.ps\n-   (UNSPEC_ALNV_PS\t\t202)\n-\n-   ;; MIPS-3D instructions\n-   (UNSPEC_CABS\t\t\t203)\n-\n-   (UNSPEC_ADDR_PS\t\t204)\n-   (UNSPEC_CVT_PW_PS\t\t205)\n-   (UNSPEC_CVT_PS_PW\t\t206)\n-   (UNSPEC_MULR_PS\t\t207)\n-   (UNSPEC_ABS_PS\t\t208)\n-\n-   (UNSPEC_RSQRT1\t\t209)\n-   (UNSPEC_RSQRT2\t\t210)\n-   (UNSPEC_RECIP1\t\t211)\n-   (UNSPEC_RECIP2\t\t212)\n-   (UNSPEC_SINGLE_CC\t\t213)\n-   (UNSPEC_SCC\t\t\t214)\n-\n-   ;; MIPS DSP ASE Revision 0.98 3/24/2005\n-   (UNSPEC_ADDQ\t\t\t300)\n-   (UNSPEC_ADDQ_S\t\t301)\n-   (UNSPEC_SUBQ\t\t\t302)\n-   (UNSPEC_SUBQ_S\t\t303)\n-   (UNSPEC_ADDSC\t\t304)\n-   (UNSPEC_ADDWC\t\t305)\n-   (UNSPEC_MODSUB\t\t306)\n-   (UNSPEC_RADDU_W_QB\t\t307)\n-   (UNSPEC_ABSQ_S\t\t308)\n-   (UNSPEC_PRECRQ_QB_PH\t\t309)\n-   (UNSPEC_PRECRQ_PH_W\t\t310)\n-   (UNSPEC_PRECRQ_RS_PH_W\t311)\n-   (UNSPEC_PRECRQU_S_QB_PH\t312)\n-   (UNSPEC_PRECEQ_W_PHL\t\t313)\n-   (UNSPEC_PRECEQ_W_PHR\t\t314)\n-   (UNSPEC_PRECEQU_PH_QBL\t315)\n-   (UNSPEC_PRECEQU_PH_QBR\t316)\n-   (UNSPEC_PRECEQU_PH_QBLA\t317)\n-   (UNSPEC_PRECEQU_PH_QBRA\t318)\n-   (UNSPEC_PRECEU_PH_QBL\t319)\n-   (UNSPEC_PRECEU_PH_QBR\t320)\n-   (UNSPEC_PRECEU_PH_QBLA\t321)\n-   (UNSPEC_PRECEU_PH_QBRA\t322)\n-   (UNSPEC_SHLL\t\t\t323)\n-   (UNSPEC_SHLL_S\t\t324)\n-   (UNSPEC_SHRL_QB\t\t325)\n-   (UNSPEC_SHRA_PH\t\t326)\n-   (UNSPEC_SHRA_R\t\t327)\n-   (UNSPEC_MULEU_S_PH_QBL\t328)\n-   (UNSPEC_MULEU_S_PH_QBR\t329)\n-   (UNSPEC_MULQ_RS_PH\t\t330)\n-   (UNSPEC_MULEQ_S_W_PHL\t331)\n-   (UNSPEC_MULEQ_S_W_PHR\t332)\n-   (UNSPEC_DPAU_H_QBL\t\t333)\n-   (UNSPEC_DPAU_H_QBR\t\t334)\n-   (UNSPEC_DPSU_H_QBL\t\t335)\n-   (UNSPEC_DPSU_H_QBR\t\t336)\n-   (UNSPEC_DPAQ_S_W_PH\t\t337)\n-   (UNSPEC_DPSQ_S_W_PH\t\t338)\n-   (UNSPEC_MULSAQ_S_W_PH\t339)\n-   (UNSPEC_DPAQ_SA_L_W\t\t340)\n-   (UNSPEC_DPSQ_SA_L_W\t\t341)\n-   (UNSPEC_MAQ_S_W_PHL\t\t342)\n-   (UNSPEC_MAQ_S_W_PHR\t\t343)\n-   (UNSPEC_MAQ_SA_W_PHL\t\t344)\n-   (UNSPEC_MAQ_SA_W_PHR\t\t345)\n-   (UNSPEC_BITREV\t\t346)\n-   (UNSPEC_INSV\t\t\t347)\n-   (UNSPEC_REPL_QB\t\t348)\n-   (UNSPEC_REPL_PH\t\t349)\n-   (UNSPEC_CMP_EQ\t\t350)\n-   (UNSPEC_CMP_LT\t\t351)\n-   (UNSPEC_CMP_LE\t\t352)\n-   (UNSPEC_CMPGU_EQ_QB\t\t353)\n-   (UNSPEC_CMPGU_LT_QB\t\t354)\n-   (UNSPEC_CMPGU_LE_QB\t\t355)\n-   (UNSPEC_PICK\t\t\t356)\n-   (UNSPEC_PACKRL_PH\t\t357)\n-   (UNSPEC_EXTR_W\t\t358)\n-   (UNSPEC_EXTR_R_W\t\t359)\n-   (UNSPEC_EXTR_RS_W\t\t360)\n-   (UNSPEC_EXTR_S_H\t\t361)\n-   (UNSPEC_EXTP\t\t\t362)\n-   (UNSPEC_EXTPDP\t\t363)\n-   (UNSPEC_SHILO\t\t364)\n-   (UNSPEC_MTHLIP\t\t365)\n-   (UNSPEC_WRDSP\t\t366)\n-   (UNSPEC_RDDSP\t\t367)\n-\n-   ;; MIPS DSP ASE REV 2 Revision 0.02 11/24/2006\n-   (UNSPEC_ABSQ_S_QB\t\t400)\n-   (UNSPEC_ADDU_PH\t\t401)\n-   (UNSPEC_ADDU_S_PH\t\t402)\n-   (UNSPEC_ADDUH_QB\t\t403)\n-   (UNSPEC_ADDUH_R_QB\t\t404)\n-   (UNSPEC_APPEND\t\t405)\n-   (UNSPEC_BALIGN\t\t406)\n-   (UNSPEC_CMPGDU_EQ_QB\t\t407)\n-   (UNSPEC_CMPGDU_LT_QB\t\t408)\n-   (UNSPEC_CMPGDU_LE_QB\t\t409)\n-   (UNSPEC_DPA_W_PH\t\t410)\n-   (UNSPEC_DPS_W_PH\t\t411)\n-   (UNSPEC_MADD\t\t\t412)\n-   (UNSPEC_MADDU\t\t413)\n-   (UNSPEC_MSUB\t\t\t414)\n-   (UNSPEC_MSUBU\t\t415)\n-   (UNSPEC_MUL_PH\t\t416)\n-   (UNSPEC_MUL_S_PH\t\t417)\n-   (UNSPEC_MULQ_RS_W\t\t418)\n-   (UNSPEC_MULQ_S_PH\t\t419)\n-   (UNSPEC_MULQ_S_W\t\t420)\n-   (UNSPEC_MULSA_W_PH\t\t421)\n-   (UNSPEC_MULT\t\t\t422)\n-   (UNSPEC_MULTU\t\t423)\n-   (UNSPEC_PRECR_QB_PH\t\t424)\n-   (UNSPEC_PRECR_SRA_PH_W\t425)\n-   (UNSPEC_PRECR_SRA_R_PH_W\t426)\n-   (UNSPEC_PREPEND\t\t427)\n-   (UNSPEC_SHRA_QB\t\t428)\n-   (UNSPEC_SHRA_R_QB\t\t429)\n-   (UNSPEC_SHRL_PH\t\t430)\n-   (UNSPEC_SUBU_PH\t\t431)\n-   (UNSPEC_SUBU_S_PH\t\t432)\n-   (UNSPEC_SUBUH_QB\t\t433)\n-   (UNSPEC_SUBUH_R_QB\t\t434)\n-   (UNSPEC_ADDQH_PH\t\t435)\n-   (UNSPEC_ADDQH_R_PH\t\t436)\n-   (UNSPEC_ADDQH_W\t\t437)\n-   (UNSPEC_ADDQH_R_W\t\t438)\n-   (UNSPEC_SUBQH_PH\t\t439)\n-   (UNSPEC_SUBQH_R_PH\t\t440)\n-   (UNSPEC_SUBQH_W\t\t441)\n-   (UNSPEC_SUBQH_R_W\t\t442)\n-   (UNSPEC_DPAX_W_PH\t\t443)\n-   (UNSPEC_DPSX_W_PH\t\t444)\n-   (UNSPEC_DPAQX_S_W_PH\t\t445)\n-   (UNSPEC_DPAQX_SA_W_PH\t446)\n-   (UNSPEC_DPSQX_S_W_PH\t\t447)\n-   (UNSPEC_DPSQX_SA_W_PH\t448)\n-\n-   ;; ST Microelectronics Loongson-2E/2F.\n-   (UNSPEC_LOONGSON_PAVG\t500)\n-   (UNSPEC_LOONGSON_PCMPEQ\t501)\n-   (UNSPEC_LOONGSON_PCMPGT\t502)\n-   (UNSPEC_LOONGSON_PEXTR\t503)\n-   (UNSPEC_LOONGSON_PINSR_0\t504)\n-   (UNSPEC_LOONGSON_PINSR_1\t505)\n-   (UNSPEC_LOONGSON_PINSR_2\t506)\n-   (UNSPEC_LOONGSON_PINSR_3\t507)\n-   (UNSPEC_LOONGSON_PMADD\t508)\n-   (UNSPEC_LOONGSON_PMOVMSK\t509)\n-   (UNSPEC_LOONGSON_PMULHU\t510)\n-   (UNSPEC_LOONGSON_PMULH\t511)\n-   (UNSPEC_LOONGSON_PMULL\t512)\n-   (UNSPEC_LOONGSON_PMULU\t513)\n-   (UNSPEC_LOONGSON_PASUBUB\t514)\n-   (UNSPEC_LOONGSON_BIADD\t515)\n-   (UNSPEC_LOONGSON_PSADBH\t516)\n-   (UNSPEC_LOONGSON_PSHUFH\t517)\n-   (UNSPEC_LOONGSON_PUNPCKH\t518)\n-   (UNSPEC_LOONGSON_PUNPCKL\t519)\n-   (UNSPEC_LOONGSON_PADDD\t520)\n-   (UNSPEC_LOONGSON_PSUBD\t521)\n-\n-   ;; Used in loongson2ef.md\n-   (UNSPEC_LOONGSON_ALU1_TURN_ENABLED_INSN   530)\n-   (UNSPEC_LOONGSON_ALU2_TURN_ENABLED_INSN   531)\n-   (UNSPEC_LOONGSON_FALU1_TURN_ENABLED_INSN  532)\n-   (UNSPEC_LOONGSON_FALU2_TURN_ENABLED_INSN  533)\n-\n-   (UNSPEC_MIPS_CACHE\t\t600)\n-   (UNSPEC_R10K_CACHE_BARRIER\t601)\n-\n    ;; PIC long branch sequences are never longer than 100 bytes.\n    (MAX_PIC_BRANCH_LENGTH\t100)\n   ]\n@@ -637,7 +509,7 @@\n \t  ] (const_int 4)))\n \n ;; Attribute describing the processor.  This attribute must match exactly\n-;; with the processor_type enumeration in mips.h.\n+;; with the processor enumeration above.\n (define_attr \"cpu\"\n   \"r3000,4kc,4kp,5kc,5kf,20kc,24kc,24kf2_1,24kf1_1,74kc,74kf2_1,74kf1_1,74kf3_2,loongson_2e,loongson_2f,m4k,octeon,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,r10000,sb1,sb1a,sr71000,xlr\"\n   (const (symbol_ref \"mips_tune_attr\")))\n@@ -6581,3 +6453,7 @@\n \n ; ST-Microelectronics Loongson-2E/2F-specific patterns.\n (include \"loongson.md\")\n+\n+(define_c_enum \"unspec\" [\n+  UNSPEC_ADDRESS_FIRST\n+])"}, {"sha": "ee41d2c97409c32218573dcf550354c422c3fa28", "filename": "gcc/config/mips/sync.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fconfig%2Fmips%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsync.md?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -19,6 +19,18 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+(define_c_enum \"unspec\" [\n+  UNSPEC_COMPARE_AND_SWAP\n+  UNSPEC_COMPARE_AND_SWAP_12\n+  UNSPEC_SYNC_OLD_OP\n+  UNSPEC_SYNC_NEW_OP\n+  UNSPEC_SYNC_NEW_OP_12\n+  UNSPEC_SYNC_OLD_OP_12\n+  UNSPEC_SYNC_EXCHANGE\n+  UNSPEC_SYNC_EXCHANGE_12\n+  UNSPEC_MEMORY_BARRIER\n+])\n+\n ;; Atomic fetch bitwise operations.\n (define_code_iterator fetchop_bit [ior xor and])\n "}, {"sha": "990863acccc010f6fb34ff4023c707df79a9bbf5", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -7902,6 +7902,88 @@ You could write:\n \n The constants that are defined with a define_constant are also output\n in the insn-codes.h header file as #defines.\n+\n+@cindex enumerations\n+@findex define_c_enum\n+You can also use the machine description file to define enumerations.\n+Like the constants defined by @code{define_constant}, these enumerations\n+are visible to both the machine description file and the main C code.\n+\n+The syntax is as follows:\n+\n+@smallexample\n+(define_c_enum \"@var{name}\" [\n+  @var{value0}\n+  @var{value1}\n+  @dots{}\n+  @var{valuen}\n+])\n+@end smallexample\n+\n+This definition causes the equivalent of the following C code to appear\n+in @file{insn-constants.h}:\n+\n+@smallexample\n+enum @var{name} @{\n+  @var{value0} = 0,\n+  @var{value1} = 1,\n+  @dots{}\n+  @var{valuen} = @var{n}\n+@};\n+#define NUM_@var{cname}_VALUES (@var{n} + 1)\n+@end smallexample\n+\n+where @var{cname} is the capitalized form of @var{name}.\n+It also makes each @var{valuei} available in the machine description\n+file, just as if it had been declared with:\n+\n+@smallexample\n+(define_constants [(@var{valuei} @var{i})])\n+@end smallexample\n+\n+Each @var{valuei} is usually an upper-case identifier and usually\n+begins with @var{cname}.\n+\n+You can split the enumeration definition into as many statements as\n+you like.  The above example is directly equivalent to:\n+\n+@smallexample\n+(define_c_enum \"@var{name}\" [@var{value0}])\n+(define_c_enum \"@var{name}\" [@var{value1}])\n+@dots{}\n+(define_c_enum \"@var{name}\" [@var{valuen}])\n+@end smallexample\n+\n+Splitting the enumeration helps to improve the modularity of each\n+individual @code{.md} file.  For example, if a port defines its\n+synchronization instructions in a separate @file{sync.md} file,\n+it is convenient to define all synchronization-specific enumeration\n+values in @file{sync.md} rather than in the main @file{.md} file.\n+\n+@findex define_enum\n+Another way of defining an enumeration is to use @code{define_enum}:\n+\n+@smallexample\n+(define_enum \"@var{name}\" [\n+  @var{value0}\n+  @var{value1}\n+  @dots{}\n+  @var{valuen}\n+])\n+@end smallexample\n+\n+This directive implies:\n+\n+@smallexample\n+(define_c_enum \"@var{name}\" [\n+  @var{cname}_@var{cvalue0}\n+  @var{cname}_@var{cvalue1}\n+  @dots{}\n+  @var{cname}_@var{cvaluen}\n+])\n+@end smallexample\n+\n+where @var{cvaluei} is the capitalized form of @var{valuei}.\n @end ifset\n @ifset INTERNALS\n @node Iterators"}, {"sha": "b16a88bc3ea606a6a0c0bb0cff0ab7593eeccffe", "filename": "gcc/genconstants.c", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fgenconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fgenconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconstants.c?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -35,12 +35,40 @@ along with GCC; see the file COPYING3.  If not see\n    the current constant definition.  */\n \n static int\n-print_md_constant (void **slot, void *info)\n+print_md_constant (void **slot, void *info ATTRIBUTE_UNUSED)\n {\n   struct md_constant *def = (struct md_constant *) *slot;\n-  FILE *file = (FILE *) info;\n \n-  fprintf (file, \"#define %s %s\\n\", def->name, def->value);\n+  if (!def->parent_enum)\n+    printf (\"#define %s %s\\n\", def->name, def->value);\n+  return 1;\n+}\n+\n+/* Called via traverse_enums.  Emit an enum definition for\n+   enum_type *SLOT.  */\n+\n+static int\n+print_enum_type (void **slot, void *info ATTRIBUTE_UNUSED)\n+{\n+  struct enum_type *def;\n+  struct enum_value *value;\n+  char *value_name;\n+\n+  def = (struct enum_type *) *slot;\n+  printf (\"\\nenum %s {\", def->name);\n+  for (value = def->values; value; value = value->next)\n+    {\n+      printf (\"\\n  %s = %s\", value->def->name, value->def->value);\n+      if (value->next)\n+\tputc (',', stdout);\n+    }\n+  printf (\"\\n};\\n\");\n+\n+  /* Define NUM_<enum>_VALUES to be the largest enum value + 1.  */\n+  value_name = ACONCAT ((\"num_\", def->name, \"_values\", NULL));\n+  upcase_string (value_name);\n+  printf (\"#define %s %d\\n\", value_name, def->num_values);\n+\n   return 1;\n }\n \n@@ -60,7 +88,8 @@ main (int argc, char **argv)\n   puts (\"#ifndef GCC_INSN_CONSTANTS_H\");\n   puts (\"#define GCC_INSN_CONSTANTS_H\\n\");\n \n-  traverse_md_constants (print_md_constant, stdout);\n+  traverse_md_constants (print_md_constant, 0);\n+  traverse_enum_types (print_enum_type, 0);\n \n   puts (\"\\n#endif /* GCC_INSN_CONSTANTS_H */\");\n "}, {"sha": "90707b356d3f59efddf68489a6853993f00c8c91", "filename": "gcc/read-md.c", "status": "modified", "additions": 153, "deletions": 26, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -92,6 +92,9 @@ static size_t max_include_len;\n    constant expansion should occur.  */\n static htab_t md_constants;\n \n+/* A table of enum_type structures, hashed by name.  */\n+static htab_t enum_types;\n+\n static void handle_file (directive_handler_t);\n \n /* Given an object that starts with a char * name field, return a hash\n@@ -671,6 +674,52 @@ scan_comma_elt (const char **pstr)\n   return start;\n }\n \n+/* Convert STRING to uppercase.  */\n+\n+void\n+upcase_string (char *string)\n+{\n+  int i;\n+\n+  for (i = 0; string[i]; i++)\n+    string[i] = TOUPPER (string[i]);\n+}\n+\n+/* Add a NAME = VALUE definition to md_constants-style hash table DEFS,\n+   where both NAME and VALUE are malloc()ed strings.  PARENT_ENUM is the\n+   enum to which NAME belongs, or null if NAME is a stand-alone constant.  */\n+\n+static struct md_constant *\n+add_constant (htab_t defs, char *name, char *value,\n+\t      struct enum_type *parent_enum)\n+{\n+  struct md_constant *def, tmp_def;\n+  void **entry_ptr;\n+\n+  tmp_def.name = name;\n+  entry_ptr = htab_find_slot (defs, &tmp_def, INSERT);\n+  if (*entry_ptr)\n+    {\n+      def = (struct md_constant *) *entry_ptr;\n+      if (strcmp (def->value, value) != 0)\n+\tfatal_with_file_and_line (\"redefinition of `%s', was `%s', now `%s'\",\n+\t\t\t\t  def->name, def->value, value);\n+      else if (parent_enum || def->parent_enum)\n+\tfatal_with_file_and_line (\"redefinition of `%s'\", def->name);\n+      free (name);\n+      free (value);\n+    }\n+  else\n+    {\n+      def = XNEW (struct md_constant);\n+      def->name = name;\n+      def->value = value;\n+      def->parent_enum = parent_enum;\n+      *entry_ptr = def;\n+    }\n+  return def;\n+}\n+\n /* Process a define_constants directive, starting with the optional space\n    after the \"define_constants\".  */\n \n@@ -680,45 +729,23 @@ handle_constants (void)\n   int c;\n   htab_t defs;\n \n-  defs = md_constants;\n-  if (! defs)\n-    defs = htab_create (32, leading_string_hash,\n-\t\t\tleading_string_eq_p, (htab_del) 0);\n-\n   c = read_skip_spaces ();\n   if (c != '[')\n     fatal_expected_char ('[', c);\n \n   /* Disable constant expansion during definition processing.  */\n+  defs = md_constants;\n   md_constants = 0;\n   while ( (c = read_skip_spaces ()) != ']')\n     {\n       struct md_name name, value;\n-      struct md_constant *def, tmp_def;\n-      void **entry_ptr;\n \n       if (c != '(')\n \tfatal_expected_char ('(', c);\n \n       read_name (&name);\n       read_name (&value);\n-\n-      tmp_def.name = name.string;\n-      entry_ptr = htab_find_slot (defs, &tmp_def, INSERT);\n-      if (*entry_ptr)\n-\t{\n-\t  def = (struct md_constant *) *entry_ptr;\n-\t  if (strcmp (def->value, value.string) != 0)\n-\t    fatal_with_file_and_line (\"redefinition of %s, was %s, now %s\",\n-\t\t\t\t      def->name, def->value, value.string);\n-\t}\n-      else\n-\t{\n-\t  def = XNEW (struct md_constant);\n-\t  def->name = xstrdup (name.string);\n-\t  def->value = xstrdup (value.string);\n-\t  *entry_ptr = def;\n-\t}\n+      add_constant (defs, xstrdup (name.string), xstrdup (value.string), 0);\n \n       c = read_skip_spaces ();\n       if (c != ')')\n@@ -734,8 +761,100 @@ handle_constants (void)\n void\n traverse_md_constants (htab_trav callback, void *info)\n {\n-  if (md_constants)\n-    htab_traverse (md_constants, callback, info);\n+  htab_traverse (md_constants, callback, info);\n+}\n+\n+/* Return a malloc()ed decimal string that represents number NUMBER.  */\n+\n+static char *\n+decimal_string (int number)\n+{\n+  /* A safe overestimate.  +1 for sign, +1 for null terminator.  */\n+  char buffer[sizeof (int) * CHAR_BIT + 1 + 1];\n+\n+  sprintf (buffer, \"%d\", number);\n+  return xstrdup (buffer);\n+}\n+\n+/* Process a define_enum or define_c_enum directive, starting with\n+   the optional space after the \"define_enum\".  LINENO is the line\n+   number on which the directive started and MD_P is true if the\n+   directive is a define_enum rather than a define_c_enum.  */\n+\n+static void\n+handle_enum (int lineno, bool md_p)\n+{\n+  char *enum_name, *value_name;\n+  struct md_name name;\n+  struct enum_type *def;\n+  struct enum_value *ev;\n+  void **slot;\n+  int c;\n+\n+  enum_name = read_string (false);\n+  slot = htab_find_slot (enum_types, &enum_name, INSERT);\n+  if (*slot)\n+    {\n+      def = (struct enum_type *) *slot;\n+      if (def->md_p != md_p)\n+\terror_with_line (lineno, \"redefining `%s' as a different type of enum\",\n+\t\t\t enum_name);\n+    }\n+  else\n+    {\n+      def = XNEW (struct enum_type);\n+      def->name = enum_name;\n+      def->md_p = md_p;\n+      def->values = 0;\n+      def->tail_ptr = &def->values;\n+      def->num_values = 0;\n+      *slot = def;\n+    }\n+\n+  c = read_skip_spaces ();\n+  if (c != '[')\n+    fatal_expected_char ('[', c);\n+\n+  while ((c = read_skip_spaces ()) != ']')\n+    {\n+      if (c == EOF)\n+\t{\n+\t  error_with_line (lineno, \"unterminated construct\");\n+\t  exit (1);\n+\t}\n+      unread_char (c);\n+      read_name (&name);\n+\n+      ev = XNEW (struct enum_value);\n+      ev->next = 0;\n+      if (md_p)\n+\t{\n+\t  value_name = concat (def->name, \"_\", name.string, NULL);\n+\t  upcase_string (value_name);\n+\t  ev->name = xstrdup (name.string);\n+\t}\n+      else\n+\t{\n+\t  value_name = xstrdup (name.string);\n+\t  ev->name = value_name;\n+\t}\n+      ev->def = add_constant (md_constants, value_name,\n+\t\t\t      decimal_string (def->num_values), def);\n+\n+      *def->tail_ptr = ev;\n+      def->tail_ptr = &ev->next;\n+      def->num_values++;\n+    }\n+}\n+\n+/* For every enum definition, call CALLBACK with two arguments:\n+   a pointer to the constant definition and INFO.  Stop when CALLBACK\n+   returns zero.  */\n+\n+void\n+traverse_enum_types (htab_trav callback, void *info)\n+{\n+  htab_traverse (enum_types, callback, info);\n }\n \n /* Process an \"include\" directive, starting with the optional space\n@@ -834,6 +953,10 @@ handle_file (directive_handler_t handle_directive)\n       read_name (&directive);\n       if (strcmp (directive.string, \"define_constants\") == 0)\n \thandle_constants ();\n+      else if (strcmp (directive.string, \"define_enum\") == 0)\n+\thandle_enum (lineno, true);\n+      else if (strcmp (directive.string, \"define_c_enum\") == 0)\n+\thandle_enum (lineno, false);\n       else if (strcmp (directive.string, \"include\") == 0)\n \thandle_include (lineno, handle_directive);\n       else if (handle_directive)\n@@ -911,6 +1034,10 @@ read_md_files (int argc, char **argv, bool (*parse_opt) (const char *),\n   obstack_init (&ptr_loc_obstack);\n   joined_conditions = htab_create (161, leading_ptr_hash, leading_ptr_eq_p, 0);\n   obstack_init (&joined_conditions_obstack);\n+  md_constants = htab_create (31, leading_string_hash,\n+\t\t\t      leading_string_eq_p, (htab_del) 0);\n+  enum_types = htab_create (31, leading_string_hash,\n+\t\t\t    leading_string_eq_p, (htab_del) 0);\n \n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();"}, {"sha": "94a5fbbc241378ceaece65163495b4d54658ae9a", "filename": "gcc/read-md.h", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=24609606bd4dec8c2cf5f8eaa82c44f67f4f5f6e", "patch": "@@ -33,12 +33,49 @@ struct md_name {\n   char *string;\n };\n \n-/* This structure represents a constant defined by define_constant.\n-   NAME is the name of the constant and VALUE is the string it\n-   expands to.  */\n+/* This structure represents a constant defined by define_constant,\n+   define_enum, or such-like.  */\n struct md_constant {\n+  /* The name of the constant.  */\n   char *name;\n+\n+  /* The string to which the constants expands.  */\n   char *value;\n+\n+  /* If the constant is associated with a enumeration, this field\n+     points to that enumeration, otherwise it is null.  */\n+  struct enum_type *parent_enum;\n+};\n+\n+/* This structure represents one value in an enum_type.  */\n+struct enum_value {\n+  /* The next value in the enum, or null if this is the last.  */\n+  struct enum_value *next;\n+\n+  /* The name of the value as it appears in the .md file.  */\n+  char *name;\n+\n+  /* The definition of the related C value.  */\n+  struct md_constant *def;\n+};\n+\n+/* This structure represents an enum defined by define_enum or the like.  */\n+struct enum_type {\n+  /* The C name of the enumeration.  */\n+  char *name;\n+\n+  /* True if this is an md-style enum (DEFINE_ENUM) rather than\n+     a C-style enum (DEFINE_C_ENUM).  */\n+  bool md_p;\n+\n+  /* The values of the enumeration.  There is always at least one.  */\n+  struct enum_value *values;\n+\n+  /* A pointer to the null terminator in VALUES.  */\n+  struct enum_value **tail_ptr;\n+\n+  /* The number of enumeration values.  */\n+  unsigned int num_values;\n };\n \n /* A callback that handles a single .md-file directive, up to but not\n@@ -95,6 +132,8 @@ extern char *read_string (int);\n extern void read_skip_construct (int, int);\n extern int n_comma_elts (const char *);\n extern const char *scan_comma_elt (const char **);\n+extern void upcase_string (char *);\n extern void traverse_md_constants (htab_trav, void *);\n+extern void traverse_enum_types (htab_trav, void *);\n extern bool read_md_files (int, char **, bool (*) (const char *),\n \t\t\t   directive_handler_t);"}]}