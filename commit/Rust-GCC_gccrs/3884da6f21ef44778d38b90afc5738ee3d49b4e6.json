{"sha": "3884da6f21ef44778d38b90afc5738ee3d49b4e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg4NGRhNmYyMWVmNDQ3NzhkMzhiOTBhZmM1NzM4ZWUzZDQ5YjRlNg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-10-13T11:00:13Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-10-13T11:00:13Z"}, "message": "tree-vect-loop-manip.c (slpeel_tree_duplicate_loop_to_edge_cfg): Put duplicated loop after its preheader and after the original loop.\n\n\t* tree-vect-loop-manip.c (slpeel_tree_duplicate_loop_to_edge_cfg): Put\n\tduplicated loop after its preheader and after the original loop.\n\nFrom-SVN: r241098", "tree": {"sha": "d0035ce22c1a765c6219850ca42c1d303c72ddac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0035ce22c1a765c6219850ca42c1d303c72ddac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3884da6f21ef44778d38b90afc5738ee3d49b4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3884da6f21ef44778d38b90afc5738ee3d49b4e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3884da6f21ef44778d38b90afc5738ee3d49b4e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3884da6f21ef44778d38b90afc5738ee3d49b4e6/comments", "author": null, "committer": null, "parents": [{"sha": "328ba117bab9dfd05bfdde90d3673661d1654e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328ba117bab9dfd05bfdde90d3673661d1654e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328ba117bab9dfd05bfdde90d3673661d1654e09"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "f134678aeba919035ddb4d176cb4f9d5a96d8ba9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3884da6f21ef44778d38b90afc5738ee3d49b4e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3884da6f21ef44778d38b90afc5738ee3d49b4e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3884da6f21ef44778d38b90afc5738ee3d49b4e6", "patch": "@@ -1,3 +1,8 @@\n+2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-vect-loop-manip.c (slpeel_tree_duplicate_loop_to_edge_cfg): Put\n+\tduplicated loop after its preheader and after the original loop.\n+\n 2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-vect-loop.c (vect_analyze_loop_2): Check and skip loop if it"}, {"sha": "9eb8218557700fb2e53c426769225cab0e246b88", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3884da6f21ef44778d38b90afc5738ee3d49b4e6/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3884da6f21ef44778d38b90afc5738ee3d49b4e6/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=3884da6f21ef44778d38b90afc5738ee3d49b4e6", "patch": "@@ -776,7 +776,7 @@ slpeel_tree_duplicate_loop_to_edge_cfg (struct loop *loop,\n \t\t\t\t\tstruct loop *scalar_loop, edge e)\n {\n   struct loop *new_loop;\n-  basic_block *new_bbs, *bbs;\n+  basic_block *new_bbs, *bbs, *pbbs;\n   bool at_exit;\n   bool was_imm_dom;\n   basic_block exit_dest;\n@@ -792,12 +792,13 @@ slpeel_tree_duplicate_loop_to_edge_cfg (struct loop *loop,\n     scalar_loop = loop;\n \n   bbs = XNEWVEC (basic_block, scalar_loop->num_nodes + 1);\n-  get_loop_body_with_size (scalar_loop, bbs, scalar_loop->num_nodes);\n+  pbbs = bbs + 1;\n+  get_loop_body_with_size (scalar_loop, pbbs, scalar_loop->num_nodes);\n   /* Allow duplication of outer loops.  */\n   if (scalar_loop->inner)\n     duplicate_outer_loop = true;\n   /* Check whether duplication is possible.  */\n-  if (!can_copy_bbs_p (bbs, scalar_loop->num_nodes))\n+  if (!can_copy_bbs_p (pbbs, scalar_loop->num_nodes))\n     {\n       free (bbs);\n       return NULL;\n@@ -817,15 +818,15 @@ slpeel_tree_duplicate_loop_to_edge_cfg (struct loop *loop,\n      pre-header unconditionally for this.  */\n   basic_block preheader = split_edge (loop_preheader_edge (scalar_loop));\n   edge entry_e = single_pred_edge (preheader);\n-  bbs[scalar_loop->num_nodes] = preheader;\n+  bbs[0] = preheader;\n   new_bbs = XNEWVEC (basic_block, scalar_loop->num_nodes + 1);\n \n   exit = single_exit (scalar_loop);\n   copy_bbs (bbs, scalar_loop->num_nodes + 1, new_bbs,\n \t    &exit, 1, &new_exit, NULL,\n-\t    e->src, true);\n+\t    at_exit ? loop->latch : e->src, true);\n   exit = single_exit (loop);\n-  basic_block new_preheader = new_bbs[scalar_loop->num_nodes];\n+  basic_block new_preheader = new_bbs[0];\n \n   add_phi_args_after_copy (new_bbs, scalar_loop->num_nodes + 1, NULL);\n "}]}