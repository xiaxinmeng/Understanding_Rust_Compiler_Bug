{"sha": "c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0ZDdkYzllY2JlOTBkMGI2ZDU2MDRjZjRlZGVhMDkwNmUyMDFjOA==", "commit": {"author": {"name": "Olatunji Ruwase", "email": "tjruwase@google.com", "date": "2009-08-14T21:25:48Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2009-08-14T21:25:48Z"}, "message": "extend.texi (Symbol-Renaming Pragmas): redefine_extname is supported on all platforms.\n\n\n2009-08-14  Olatunji Ruwase <tjruwase@google.com>\n\n        * doc/extend.texi (Symbol-Renaming Pragmas): redefine_extname is\n        supported on all platforms.\n        * target.h (struct gcc_target): Remove\n        handle_pragma_redefine_extname.\n        * c-cppbuiltin.c: Remove use of\n        targetm.handle_pragma_redefine_extname.\n        * c-pragma.c: Likewise.\n        * target-def.h (TARGET_INITIALIZER): Remove\n        TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME.\n        * config/sol2.h: Remove use of\n        TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME.\n\n2009-08-14  Olatunji Ruwase <tjruwase@google.com>\n\n        * gcc.dg/pragma-re-1.c: Supported on all platforms.\n        * gcc.dg/pragma-re-2.c: Likewise.\n        * gcc.dg/pragma-re-3.c: Likewise.\n        * gcc.dg/pragma-re-4.c: Likewise.\n        * g++.dg/other/pragma-re-1.C: Likewise.\n        * g++.dg/other/pragma-re-2.C: Likewise.\n\nFrom-SVN: r150780", "tree": {"sha": "698fe3c25973486233fc8af8680e6d43818ce5a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/698fe3c25973486233fc8af8680e6d43818ce5a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/comments", "author": null, "committer": null, "parents": [{"sha": "37d1bbbc62c35efaa1a590e98252ce8190ec5aee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d1bbbc62c35efaa1a590e98252ce8190ec5aee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d1bbbc62c35efaa1a590e98252ce8190ec5aee"}], "stats": {"total": 63, "additions": 30, "deletions": 33}, "files": [{"sha": "ca2a399c1df4557b3d8ce43c7753c83413a6d8ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,3 +1,17 @@\n+2009-08-14  Olatunji Ruwase <tjruwase@google.com>\n+\n+\t* doc/extend.texi (Symbol-Renaming Pragmas): redefine_extname is\n+\tsupported on all platforms.\n+\t* target.h (struct gcc_target): Remove\n+\thandle_pragma_redefine_extname.\n+\t* c-cppbuiltin.c: Remove use of\n+\ttargetm.handle_pragma_redefine_extname.\n+\t* c-pragma.c: Likewise.\n+\t* target-def.h (TARGET_INITIALIZER): Remove\n+\tTARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME.\n+\t* config/sol2.h: Remove use of\n+\tTARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME.\n+\n 2009-08-14  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/ia64/fde-vms.c: New file.\n@@ -59,8 +73,8 @@\n \n 2009-08-14  Rafael Avila de Espindola  <espindola@google.com>\n \n-        * final.c (add_debug_prefix_map): Don't use GC memory for\n-        old_prefix and new_prefix.\n+\t* final.c (add_debug_prefix_map): Don't use GC memory for\n+\told_prefix and new_prefix.\n \n 2009-08-14  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "d9b95aff4433b1c64392b02272c1662c3263fef9", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -782,8 +782,7 @@ c_cpp_builtins (cpp_reader *pfile)\n     cpp_define (pfile, \"__NEXT_RUNTIME__\");\n \n   /* Show the availability of some target pragmas.  */\n-  if (flag_mudflap || targetm.handle_pragma_redefine_extname)\n-    cpp_define (pfile, \"__PRAGMA_REDEFINE_EXTNAME\");\n+  cpp_define (pfile, \"__PRAGMA_REDEFINE_EXTNAME\");\n \n   if (targetm.handle_pragma_extern_prefix)\n     cpp_define (pfile, \"__PRAGMA_EXTERN_PREFIX\");"}, {"sha": "b707d16594426b7306debb9263a66cbfe1b6bf32", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -561,14 +561,6 @@ handle_pragma_redefine_extname (cpp_reader * ARG_UNUSED (dummy))\n   if (t != CPP_EOF)\n     warning (OPT_Wpragmas, \"junk at end of %<#pragma redefine_extname%>\");\n \n-  if (!flag_mudflap && !targetm.handle_pragma_redefine_extname)\n-    {\n-      if (warn_unknown_pragmas > in_system_header)\n-\twarning (OPT_Wunknown_pragmas,\n-\t\t \"#pragma redefine_extname not supported on this target\");\n-      return;\n-    }\n-\n   decl = identifier_global_value (oldname);\n   if (decl\n       && (TREE_PUBLIC (decl) || DECL_EXTERNAL (decl))"}, {"sha": "a65276c059982eb86b4f5d72da4323e2dff8bb27", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -72,8 +72,6 @@ along with GCC; see the file COPYING3.  If not see\n #define INTPTR_TYPE (LONG_TYPE_SIZE == 64 ? \"long int\" : \"int\")\n #define UINTPTR_TYPE (LONG_TYPE_SIZE == 64 ? \"long unsigned int\" : \"unsigned int\")\n \n-#define TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME 1\n-\n /* ??? Note: in order for -compat-bsd to work fully,\n    we must somehow arrange to fixincludes /usr/ucbinclude\n    and put the result in $(libsubdir)/ucbinclude.  */"}, {"sha": "827198ee1dadf088344cb9e33b179668e8b4845e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -12155,9 +12155,9 @@ adding a call to the @code{.init} section.\n \n For compatibility with the Solaris and Tru64 UNIX system headers, GCC\n supports two @code{#pragma} directives which change the name used in\n-assembly for a given declaration.  These pragmas are only available on\n-platforms whose system headers need them.  To get this effect on all\n-platforms supported by GCC, use the asm labels extension (@pxref{Asm\n+assembly for a given declaration.  @code{#pragma_extern_prefix} is only \n+available on platforms whose system headers need it. To get this effect \n+on all platforms supported by GCC, use the asm labels extension (@pxref{Asm\n Labels}).\n \n @table @code\n@@ -12166,8 +12166,7 @@ Labels}).\n \n This pragma gives the C function @var{oldname} the assembly symbol\n @var{newname}.  The preprocessor macro @code{__PRAGMA_REDEFINE_EXTNAME}\n-will be defined if this pragma is available (currently only on\n-Solaris).\n+will be defined if this pragma is available (currently on all platforms).\n \n @item extern_prefix @var{string}\n @cindex pragma, extern_prefix"}, {"sha": "b8a28a442aefa38b33a837d87bafbb73b6829155", "filename": "gcc/target-def.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -632,10 +632,6 @@\n #define TARGET_UNWIND_TABLES_DEFAULT false\n #endif\n \n-#ifndef TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME\n-#define TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME 0\n-#endif\n-\n #ifndef TARGET_HANDLE_PRAGMA_EXTERN_PREFIX\n #define TARGET_HANDLE_PRAGMA_EXTERN_PREFIX 0\n #endif\n@@ -957,7 +953,6 @@\n   TARGET_TERMINATE_DW2_EH_FRAME_INFO,\t\t\\\n   TARGET_ASM_FILE_START_APP_OFF,\t\t\\\n   TARGET_ASM_FILE_START_FILE_DIRECTIVE,\t\t\\\n-  TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME,\t\\\n   TARGET_HANDLE_PRAGMA_EXTERN_PREFIX,\t\t\\\n   TARGET_RELAXED_ORDERING,\t\t\t\\\n   TARGET_ARM_EABI_UNWINDER\t\t\t\\"}, {"sha": "786f98793ac5d7dd2d6fc18504f11591c9524c73", "filename": "gcc/target.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1124,9 +1124,6 @@ struct gcc_target\n      at the beginning of assembly output.  */\n   bool file_start_file_directive;\n \n-  /* True if #pragma redefine_extname is to be supported.  */\n-  bool handle_pragma_redefine_extname;\n-\n   /* True if #pragma extern_prefix is to be supported.  */\n   bool handle_pragma_extern_prefix;\n "}, {"sha": "1a47faeef950b2f7f4f70bc34f89e259be417dcd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,3 +1,12 @@\n+2009-08-14  Olatunji Ruwase <tjruwase@google.com>\n+\n+\t* gcc.dg/pragma-re-1.c: Supported on all platforms.\n+\t* gcc.dg/pragma-re-2.c: Likewise.\n+\t* gcc.dg/pragma-re-3.c: Likewise.\n+\t* gcc.dg/pragma-re-4.c: Likewise.\n+\t* g++.dg/other/pragma-re-1.C: Likewise.\n+\t* g++.dg/other/pragma-re-2.C: Likewise.\n+\n 2009-08-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-math-7.c: New."}, {"sha": "35ffab1a82c1f67896e35c14baafd450d52edae2", "filename": "gcc/testsuite/g++.dg/other/pragma-re-1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-1.C?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile { target *-*-solaris* } } */\n /* { dg-final { scan-assembler \"bar\" } } */\n /* { dg-final { scan-assembler-not \"foo\" } } */\n /* { dg-final { scan-assembler \"_Z3bazv\" } } */"}, {"sha": "ca71a01a2b59defc50fc1e7593714815380d2781", "filename": "gcc/testsuite/g++.dg/other/pragma-re-2.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-re-2.C?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,7 +1,6 @@\n /* PR c++/14962 */\n /* Originator: <phil@fsel.com> */\n \n-/* { dg-do compile { target *-*-solaris* } } */\n /* { dg-final { scan-assembler \"new_name\" } } */\n /* { dg-final { scan-assembler-not \"old_name\" } } */\n "}, {"sha": "78312e5705446219128af6bff85429da07c463c2", "filename": "gcc/testsuite/gcc.dg/pragma-re-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-1.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile { target *-*-solaris* } } */\n /* { dg-final { scan-assembler \"bar\" } } */\n /* { dg-final { scan-assembler-not \"foo\" } } */\n "}, {"sha": "ee7140133e0895ab1e16aff8d95c4781edf6adb5", "filename": "gcc/testsuite/gcc.dg/pragma-re-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-2.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile { target *-*-solaris* } } */\n \n #pragma redefine_extname\t\t/* { dg-warning \"malformed\" } */\n #pragma redefine_extname foo\t\t/* { dg-warning \"malformed\" } */"}, {"sha": "3885fe8f04b902e44fabbacc2ae1f7d1fb10c512", "filename": "gcc/testsuite/gcc.dg/pragma-re-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-3.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do link { target *-*-solaris* } } */\n \n #pragma redefine_extname f1 f\n #pragma redefine_extname g1 g"}, {"sha": "627e0b6e0c3da25710d812aa32309dd14b270c64", "filename": "gcc/testsuite/gcc.dg/pragma-re-4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-re-4.c?ref=c54d7dc9ecbe90d0b6d5604cf4edea0906e201c8", "patch": "@@ -2,7 +2,6 @@\n /* Contributed by Carlos O'Donell on 2006-01-27 */\n \n /* Origin: Carlos O'Donell <carlos@codesourcery.com> */\n-/* { dg-do compile { target *-*-solaris* } } */\n /* { dg-final { scan-assembler \"_foo\" } } */\n /* { dg-final { scan-assembler-not \"_foo64\" } } */\n "}]}