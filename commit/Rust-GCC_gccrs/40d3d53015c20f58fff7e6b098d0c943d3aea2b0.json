{"sha": "40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBkM2Q1MzAxNWMyMGY1OGZmZjdlNmIwOThkMGM5NDNkM2FlYTJiMA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-07-04T22:20:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-07-04T22:20:34Z"}, "message": "re PR c/57821 ('array is too large' error is missing when sizetype overflows)\n\ngcc/c:\n        PR c/57821\n        * c-typeck.c (set_init_index): When folding, check for index overflow.\ngcc/c-family:\n        PR c/57821\n        * c-common.c (complete_array_type): Delay folding first index\n        like other indices.  When folding, check for index overflow.\ngcc/testsuite:\n        PR c/57821\n        * gcc.dg/large-size-array-6.c: New test.\n\nFrom-SVN: r200683", "tree": {"sha": "4559cbb5c6a77bed54dfc0e0b4f1a07ff09c382c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4559cbb5c6a77bed54dfc0e0b4f1a07ff09c382c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fde62e29930ccf09c647c47db77894ff046b0ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fde62e29930ccf09c647c47db77894ff046b0ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fde62e29930ccf09c647c47db77894ff046b0ac"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "ec47ffbbf5a7571e3931a821c485eb625df2e6e0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -1,3 +1,9 @@\n+2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR c/57821\n+\t* c-common.c (complete_array_type): Delay folding first index\n+\tlike other indices.  When folding, check for index overflow.\n+\n 2013-06-27  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/57509"}, {"sha": "61300cd05c75f9b065433b2dfbb68d7771b2c536", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -9781,6 +9781,7 @@ complete_array_type (tree *ptype, tree initial_value, bool do_default)\n   tree maxindex, type, main_type, elt, unqual_elt;\n   int failure = 0, quals;\n   hashval_t hashcode = 0;\n+  bool overflow_p = false;\n \n   maxindex = size_zero_node;\n   if (initial_value)\n@@ -9809,8 +9810,8 @@ complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \t      bool fold_p = false;\n \n \t      if ((*v)[0].index)\n-\t\tmaxindex = fold_convert_loc (input_location, sizetype,\n-\t\t\t\t\t     (*v)[0].index);\n+\t\tmaxindex = (*v)[0].index, fold_p = true;\n+\n \t      curindex = maxindex;\n \n \t      for (cnt = 1; vec_safe_iterate (v, cnt, &ce); cnt++)\n@@ -9821,15 +9822,26 @@ complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \t\t  else\n \t\t    {\n \t\t      if (fold_p)\n-\t\t        curindex = fold_convert (sizetype, curindex);\n+\t\t\t{\n+\t\t\t  /* Since we treat size types now as ordinary\n+\t\t\t     unsigned types, we need an explicit overflow\n+\t\t\t     check.  */\n+\t\t\t  tree orig = curindex;\n+\t\t          curindex = fold_convert (sizetype, curindex);\n+\t\t\t  overflow_p |= tree_int_cst_lt (curindex, orig);\n+\t\t\t}\n \t\t      curindex = size_binop (PLUS_EXPR, curindex,\n \t\t\t\t\t     size_one_node);\n \t\t    }\n \t\t  if (tree_int_cst_lt (maxindex, curindex))\n \t\t    maxindex = curindex, fold_p = curfold_p;\n \t\t}\n-\t       if (fold_p)\n-\t         maxindex = fold_convert (sizetype, maxindex);\n+\t      if (fold_p)\n+\t\t{\n+\t\t  tree orig = maxindex;\n+\t          maxindex = fold_convert (sizetype, maxindex);\n+\t\t  overflow_p |= tree_int_cst_lt (maxindex, orig);\n+\t\t}\n \t    }\n \t}\n       else\n@@ -9890,7 +9902,7 @@ complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \n   if (COMPLETE_TYPE_P (type)\n       && TREE_CODE (TYPE_SIZE_UNIT (type)) == INTEGER_CST\n-      && TREE_OVERFLOW (TYPE_SIZE_UNIT (type)))\n+      && (overflow_p || TREE_OVERFLOW (TYPE_SIZE_UNIT (type))))\n     {\n       error (\"size of array is too large\");\n       /* If we proceed with the array type as it is, we'll eventually"}, {"sha": "43cc83902efd0e1c1082c0bd04b44ae38874f610", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -1,3 +1,8 @@\n+2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR c/57821\n+\t* c-typeck.c (set_init_index): When folding, check for index overflow.\n+\n 2013-06-28  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-parser.c (c_parser_array_notation): Removed rejection of array"}, {"sha": "30871db3623a08f0e836d5ae7aa468dd7f5ddba8", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -7217,6 +7217,11 @@ set_init_index (tree first, tree last,\n       if (last)\n \tconstant_expression_warning (last);\n       constructor_index = convert (bitsizetype, first);\n+      if (tree_int_cst_lt (constructor_index, first))\n+\t{\n+\t  constructor_index = copy_node (constructor_index);\n+\t  TREE_OVERFLOW (constructor_index) = 1;\n+\t}\n \n       if (last)\n \t{"}, {"sha": "e0320055521222fc047b27cabd2629962305a728", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -1,3 +1,8 @@\n+2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR c/57821\n+\t* gcc.dg/large-size-array-6.c: New test.\n+\n 2013-07-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/38634"}, {"sha": "f7da47e93723df8ce2b76d6cc09e9cf35bec9702", "filename": "gcc/testsuite/gcc.dg/large-size-array-6.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d3d53015c20f58fff7e6b098d0c943d3aea2b0/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-6.c?ref=40d3d53015c20f58fff7e6b098d0c943d3aea2b0", "patch": "@@ -0,0 +1,6 @@\n+/* PR c/57821 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+static char * name[] = {\n+    [0x8000000000000000]  = \"bar\"\n+  }; /* { dg-error \"too large\" } */"}]}