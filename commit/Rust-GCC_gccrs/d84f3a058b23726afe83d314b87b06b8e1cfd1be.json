{"sha": "d84f3a058b23726afe83d314b87b06b8e1cfd1be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0ZjNhMDU4YjIzNzI2YWZlODNkMzE0Yjg3YjA2YjhlMWNmZDFiZQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-05T10:28:45Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-05T10:28:45Z"}, "message": "avr.md (*umaddqihi4.2): New insn-and-split.\n\n\t* config/avr/avr.md (*umaddqihi4.2): New insn-and-split.\n\nFrom-SVN: r184919", "tree": {"sha": "f960a6a0c3c6d0041e3a430bae1e54f44b552427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f960a6a0c3c6d0041e3a430bae1e54f44b552427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d84f3a058b23726afe83d314b87b06b8e1cfd1be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84f3a058b23726afe83d314b87b06b8e1cfd1be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84f3a058b23726afe83d314b87b06b8e1cfd1be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84f3a058b23726afe83d314b87b06b8e1cfd1be/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f338c3122d82be876f7e639fcdc10e52258a04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f338c3122d82be876f7e639fcdc10e52258a04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f338c3122d82be876f7e639fcdc10e52258a04c"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "06f8dcf68c5b58c5ef0e8898ee100ef9d48965f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84f3a058b23726afe83d314b87b06b8e1cfd1be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84f3a058b23726afe83d314b87b06b8e1cfd1be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d84f3a058b23726afe83d314b87b06b8e1cfd1be", "patch": "@@ -1,3 +1,7 @@\n+2012-03-05  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.md (*umaddqihi4.2): New insn-and-split.\n+\n 2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (pro_epilogue_adjust_stack): Check Pmode"}, {"sha": "bcf21af63127c064a823e324eb016c74088dd568", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84f3a058b23726afe83d314b87b06b8e1cfd1be/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84f3a058b23726afe83d314b87b06b8e1cfd1be/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=d84f3a058b23726afe83d314b87b06b8e1cfd1be", "patch": "@@ -1692,6 +1692,29 @@\n \n ;; Handle small constants\n \n+;; Special case of a += 2*b as frequently seen with accesses to int arrays.\n+;; This is shorter, faster than MUL and has lower register pressure.\n+\n+(define_insn_and_split \"*umaddqihi4.2\"\n+  [(set (match_operand:HI 0 \"register_operand\"                                  \"=r\")\n+        (plus:HI (mult:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\"))\n+                          (const_int 2))\n+                 (match_operand:HI 2 \"register_operand\"                          \"r\")))]\n+  \"!reload_completed\n+   && !reg_overlap_mentioned_p (operands[0], operands[1])\"\n+  { gcc_unreachable(); }\n+  \"&& 1\"\n+  [(set (match_dup 0)\n+        (match_dup 2))\n+   ; *addhi3_zero_extend\n+   (set (match_dup 0)\n+        (plus:HI (zero_extend:HI (match_dup 1))\n+                 (match_dup 0)))\n+   ; *addhi3_zero_extend\n+   (set (match_dup 0)\n+        (plus:HI (zero_extend:HI (match_dup 1))\n+                 (match_dup 0)))])\n+\n ;; \"umaddqihi4.uconst\"\n ;; \"maddqihi4.sconst\"\n (define_insn_and_split \"*<extend_u>maddqihi4.<extend_su>const\""}]}