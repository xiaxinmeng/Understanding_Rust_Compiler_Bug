{"sha": "ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNlMGU1OWZiY2M4Yzg5NzExZWQyYzJhMGRjMWJmMDI1YThmYzRiMw==", "commit": {"author": {"name": "Christopher Faylor", "email": "cgf@redhat.com", "date": "2003-01-24T23:23:18Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-01-24T23:23:18Z"}, "message": "configure.in: Remove special pex-cygwin consideration.\n\n* configure.in: Remove special pex-cygwin consideration.\n* configure: Regenerate.\n* pex-cygwin.c: Remove.\n* Makefile.in: Remove pex-cygwin.[co] lines.\n\nFrom-SVN: r61744", "tree": {"sha": "8430d943252a689112c2a77bb88f66bbb58f3294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8430d943252a689112c2a77bb88f66bbb58f3294"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/comments", "author": null, "committer": null, "parents": [{"sha": "f5128e889fe55a73ece2c0883ab678f3b27c25f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5128e889fe55a73ece2c0883ab678f3b27c25f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5128e889fe55a73ece2c0883ab678f3b27c25f2"}], "stats": {"total": 191, "additions": 38, "deletions": 153}, "files": [{"sha": "1c5a620fb2f4567f5e9758db3cd328c7f17a05dd", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "patch": "@@ -1,3 +1,10 @@\n+2003-01-24  Christopher Faylor  <cgf@redhat.com>\n+\n+\t* configure.in: Remove special pex-cygwin consideration.\n+\t* configure: Regenerate.\n+\t* pex-cygwin.c: Remove.\n+\t* Makefile.in: Remove pex-cygwin.[co] lines.\n+\n 2003-01-24  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Makefile.in (CFILES): Add pex-*.c."}, {"sha": "c5162f47bc9f6691ae6b7b2cf15c863d0dc4a60d", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "patch": "@@ -141,7 +141,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \t memset.c mkstemps.c\t\t\t\t\t\t\\\n \tobjalloc.c obstack.c\t\t\t\t\t\t\\\n \tpartition.c\t\t\t\t\t\t\t\\\n-\t pex-cygwin.c pex-djgpp.c pex-mpw.c pex-msdos.c pex-os2.c\t\\\n+\t pex-djgpp.c pex-mpw.c pex-msdos.c pex-os2.c\t\t\t\\\n \t pex-unix.c pex-win32.c\t\t\t\t\t\t\\\n          putenv.c\t\t\t\t\t\t\t\\\n \trandom.c regex.c rename.c rindex.c\t\t\t\t\\\n@@ -184,7 +184,7 @@ CONFIGURED_OFILES = asprintf.o atexit.o\t\t\t\t\t\\\n \tgetcwd.o getpagesize.o\t\t\t\t\t\t\\\n \tindex.o insque.o\t\t\t\t\t\t\\\n \tmemchr.o memcmp.o memcpy.o memmove.o memset.o mkstemps.o\t\\\n-\tpex-cygwin.o pex-djgpp.o pex-mpw.o pex-msdos.o pex-os2.o\t\\\n+\tpex-djgpp.o pex-mpw.o pex-msdos.o pex-os2.o\t\t\t\\\n \t pex-unix.o pex-win32.o\t\t\t\t\t\t\\\n \t putenv.o\t\t\t\t\t\t\t\\\n \trandom.o rename.o rindex.o\t\t\t\t\t\\\n@@ -455,7 +455,6 @@ objalloc.o: config.h $(INCDIR)/ansidecl.h $(INCDIR)/objalloc.h\n obstack.o: config.h $(INCDIR)/obstack.h\n partition.o: config.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n \t$(INCDIR)/partition.h\n-pex-cygwin.o: config.h pex-common.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n pex-djgpp.o: config.h pex-common.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n pex-mpw.o: config.h pex-common.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n pex-msdos.o: config.h pex-common.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\"}, {"sha": "b988bfe6c147c7ef02fa8290b33ddbee2d122a19", "filename": "libiberty/configure", "status": "modified", "additions": 29, "deletions": 17, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "patch": "@@ -2995,7 +2995,6 @@ fi\n \n # Figure out which version of pexecute to use.\n case \"${host}\" in\n-     *-*-cygwin*)\t\tpexecute=pex-cygwin.o ;;\n      *-*-mingw* | *-*-winnt*)\tpexecute=pex-win32.o  ;;\n      *-*-msdosdjgpp*)\t\tpexecute=pex-djgpp.o  ;;\n      *-*-msdos*)\t\tpexecute=pex-msdos.o  ;;\n@@ -3004,21 +3003,21 @@ case \"${host}\" in\n esac\n \n \n-for ac_hdr in unistd.h\n+for ac_hdr in stdlib.h unistd.h sys/stat.h sys/types.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:3012: checking for $ac_hdr\" >&5\n+echo \"configure:3011: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3017 \"configure\"\n+#line 3016 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3022: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3021: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3047,12 +3046,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3051: checking for $ac_func\" >&5\n+echo \"configure:3050: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3056 \"configure\"\n+#line 3055 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3075,7 +3074,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3079: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3078: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3100,15 +3099,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:3104: checking for working mmap\" >&5\n+echo \"configure:3103: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3112 \"configure\"\n+#line 3111 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -3136,11 +3135,24 @@ else\n #include <fcntl.h>\n #include <sys/mman.h>\n \n+#if HAVE_SYS_TYPES_H\n+# include <sys/types.h>\n+#endif\n+\n+#if HAVE_STDLIB_H\n+# include <stdlib.h>\n+#endif\n+\n+#if HAVE_SYS_STAT_H\n+# include <sys/stat.h>\n+#endif\n+\n+#if HAVE_UNISTD_H\n+# include <unistd.h>\n+#endif\n+\n /* This mess was copied from the GNU getpagesize.h.  */\n #ifndef HAVE_GETPAGESIZE\n-# ifdef HAVE_UNISTD_H\n-#  include <unistd.h>\n-# endif\n \n /* Assume that all systems that can run configure have sys/param.h.  */\n # ifndef HAVE_SYS_PARAM_H\n@@ -3248,7 +3260,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3252: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3264: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -3272,15 +3284,15 @@ fi\n \n \n echo $ac_n \"checking for working strncmp\"\"... $ac_c\" 1>&6\n-echo \"configure:3276: checking for working strncmp\" >&5\n+echo \"configure:3288: checking for working strncmp\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_strncmp_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_strncmp_works=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3284 \"configure\"\n+#line 3296 \"configure\"\n #include \"confdefs.h\"\n \n /* Test by Jim Wilson and Kaveh Ghazi.\n@@ -3344,7 +3356,7 @@ main ()\n }\n \n EOF\n-if { (eval echo configure:3348: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3360: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_strncmp_works=yes\n else"}, {"sha": "c5f510e80cc8c76aa5f6194fbf644870ddf04181", "filename": "libiberty/configure.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=ece0e59fbcc8c89711ed2c2a0dc1bf025a8fc4b3", "patch": "@@ -427,7 +427,6 @@ fi\n \n # Figure out which version of pexecute to use.\n case \"${host}\" in\n-     *-*-cygwin*)\t\tpexecute=pex-cygwin.o ;;\n      *-*-mingw* | *-*-winnt*)\tpexecute=pex-win32.o  ;;\n      *-*-msdosdjgpp*)\t\tpexecute=pex-djgpp.o  ;;\n      *-*-msdos*)\t\tpexecute=pex-msdos.o  ;;"}, {"sha": "f5d18db3424380ff896632d0239bf500e0e12b01", "filename": "libiberty/pex-cygwin.c", "status": "removed", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5128e889fe55a73ece2c0883ab678f3b27c25f2/libiberty%2Fpex-cygwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5128e889fe55a73ece2c0883ab678f3b27c25f2/libiberty%2Fpex-cygwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-cygwin.c?ref=f5128e889fe55a73ece2c0883ab678f3b27c25f2", "patch": "@@ -1,132 +0,0 @@\n-/* Utilities to execute a program in a subprocess (possibly linked by pipes\n-   with other subprocesses), and wait for it.  Cygwin specialization.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003\n-   Free Software Foundation, Inc.\n-\n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n-modify it under the terms of the GNU Library General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-Libiberty is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-Library General Public License for more details.\n-\n-You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.  If not,\n-write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#include \"pex-common.h\"\n-\n-#ifdef HAVE_UNISTD_H\n-#include <unistd.h>\n-#endif\n-#ifdef HAVE_SYS_WAIT_H\n-#include <sys/wait.h>\n-#endif\n-\n-#include <process.h>\n-#include <io.h>\n-#include <fcntl.h>\n-#include <signal.h>\n-\n-extern int _spawnv ();\n-extern int _spawnvp ();\n-\n-/* Win32 supports pipes, and Cygwin provides waitpid.  */\n-\n-int\n-pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n-     const char *program;\n-     char * const *argv;\n-     const char *this_pname;\n-     const char *temp_base;\n-     char **errmsg_fmt, **errmsg_arg;\n-     int flags;\n-{\n-  int pid;\n-  int pdes[2], org_stdin, org_stdout;\n-  int input_desc, output_desc;\n-  int retries, sleep_interval;\n-\n-  /* Pipe waiting from last process, to be used as input for the next one.\n-     Value is STDIN_FILE_NO if no pipe is waiting\n-     (i.e. the next command is the first of a group).  */\n-  static int last_pipe_input;\n-\n-  /* If this is the first process, initialize.  */\n-  if (flags & PEXECUTE_FIRST)\n-    last_pipe_input = STDIN_FILE_NO;\n-\n-  input_desc = last_pipe_input;\n-\n-  /* If this isn't the last process, make a pipe for its output,\n-     and record it as waiting to be the input to the next process.  */\n-  if (! (flags & PEXECUTE_LAST))\n-    {\n-      if (_pipe (pdes, 256, O_BINARY) < 0)\n-\t{\n-\t  *errmsg_fmt = \"pipe\";\n-\t  *errmsg_arg = NULL;\n-\t  return -1;\n-\t}\n-      output_desc = pdes[WRITE_PORT];\n-      last_pipe_input = pdes[READ_PORT];\n-    }\n-  else\n-    {\n-      /* Last process.  */\n-      output_desc = STDOUT_FILE_NO;\n-      last_pipe_input = STDIN_FILE_NO;\n-    }\n-\n-  if (input_desc != STDIN_FILE_NO)\n-    {\n-      org_stdin = dup (STDIN_FILE_NO);\n-      dup2 (input_desc, STDIN_FILE_NO);\n-      close (input_desc); \n-    }\n-\n-  if (output_desc != STDOUT_FILE_NO)\n-    {\n-      org_stdout = dup (STDOUT_FILE_NO);\n-      dup2 (output_desc, STDOUT_FILE_NO);\n-      close (output_desc);\n-    }\n-\n-  pid = (flags & PEXECUTE_SEARCH ? _spawnvp : _spawnv)\n-    (_P_NOWAIT, program, argv);\n-\n-  if (input_desc != STDIN_FILE_NO)\n-    {\n-      dup2 (org_stdin, STDIN_FILE_NO);\n-      close (org_stdin);\n-    }\n-\n-  if (output_desc != STDOUT_FILE_NO)\n-    {\n-      dup2 (org_stdout, STDOUT_FILE_NO);\n-      close (org_stdout);\n-    }\n-\n-  if (pid == -1)\n-    {\n-      *errmsg_fmt = install_error_msg;\n-      *errmsg_arg = program;\n-      return -1;\n-    }\n-\n-  return pid;\n-}\n-\n-int\n-pwait (pid, status, flags)\n-     int pid;\n-     int *status;\n-     int flags ATTRIBUTE_UNUSED;\n-{\n-  return waitpid (pid, status, 0);\n-}"}]}