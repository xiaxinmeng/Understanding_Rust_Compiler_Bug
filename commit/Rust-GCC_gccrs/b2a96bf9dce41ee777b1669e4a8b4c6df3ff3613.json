{"sha": "b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhOTZiZjlkY2U0MWVlNzc3YjE2NjllNGE4YjRjNmRmM2ZmMzYxMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-08T14:14:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-08T14:24:21Z"}, "message": "libstdc++: Add assertions for preconditions in sampling distributions [PR 82584]\n\nThese three distributions all require 0 < S where S is the sum of the\nweights. When the sum is zero there's an undefined FP division by zero.\nAdd assertions to help users diagnose the problem.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/82584\n\t* include/bits/random.tcc\n\t(discrete_distribution::param_type::_M_initialize)\n\t(piecewise_constant_distribution::param_type::_M_initialize)\n\t(piecewise_linear_distribution::param_type::_M_initialize):\n\tAdd assertions for positive sums..\n\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error\n\tline.", "tree": {"sha": "1232ac1c462cbd462331ca81914b23cc948acbf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1232ac1c462cbd462331ca81914b23cc948acbf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a448362da6133c3b16ffdb0c795b657af7fa5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a448362da6133c3b16ffdb0c795b657af7fa5a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a448362da6133c3b16ffdb0c795b657af7fa5a4"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "a921b9bf815c9ee8f852ff0c06283d86178e4dc9", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "patch": "@@ -2630,6 +2630,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       const double __sum = std::accumulate(_M_prob.begin(),\n \t\t\t\t\t   _M_prob.end(), 0.0);\n+      __glibcxx_assert(__sum > 0);\n       // Now normalize the probabilites.\n       __detail::__normalize(_M_prob.begin(), _M_prob.end(), _M_prob.begin(),\n \t\t\t    __sum);\n@@ -2794,6 +2795,7 @@ namespace __detail\n \n       const double __sum = std::accumulate(_M_den.begin(),\n \t\t\t\t\t   _M_den.end(), 0.0);\n+      __glibcxx_assert(__sum > 0);\n \n       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),\n \t\t\t    __sum);\n@@ -3016,6 +3018,7 @@ namespace __detail\n \t  _M_cp.push_back(__sum);\n \t  _M_m.push_back((_M_den[__k + 1] - _M_den[__k]) / __delta);\n \t}\n+      __glibcxx_assert(__sum > 0);\n \n       //  Now normalize the densities...\n       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),"}, {"sha": "9cffc3d06f9342fd636e26ed9046d91701a253a9", "filename": "libstdc++-v3/testsuite/26_numerics/random/pr60037-neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc?ref=b2a96bf9dce41ee777b1669e4a8b4c6df3ff3613", "patch": "@@ -12,4 +12,4 @@ auto x = std::generate_canonical<std::size_t,\n \n // { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 167 }\n \n-// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3281 }\n+// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3284 }"}]}