{"sha": "529c27463ff465aa6bf336aac3602c759df05010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5YzI3NDYzZmY0NjVhYTZiZjMzNmFhYzM2MDJjNzU5ZGYwNTAxMA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T18:03:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:03:53Z"}, "message": "par-ch3.adb (P_Range_Or_Subtype_Mark): Check for bad parentheses\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\t    Javier Miranda  <miranda@adacore.com>\n        \n\t* par-ch3.adb (P_Range_Or_Subtype_Mark): Check for bad parentheses\n\t(P_Type_Declaration): Remove barrier against the reserved word \"limited\"\n\tafter \"abstract\" to give support to the new syntax of AARM 3.4 (2/2).\n\t(P_Type_Declaration): Minor code cleanup. Add support for synchronized\n\tprivate extensions.\n\t(P_Type_Declaration): Add the new actual Abstract_Present to every call\n\tto P_Interface_Type_Definition.\n\t(P_Interface_Type_Definition): Addition of one formal to report an error\n\tif the reserved word abstract has been previously found.\n\t(P_Identifier_Declarations): Update grammar rules. Handle parsing of an\n\tobject renaming declaration with an access definition or subtype mark\n\twith a possible null exclusion.\n\n\t* par-ch9.adb: Minor error msg fix\n\n\t* par-load.adb: Add missing continuation mark to error msg\n\n\t* par-tchk.adb: (Wrong_Token): Code cleanup, use concatenation\n\nFrom-SVN: r118290", "tree": {"sha": "f085e00a74f2161d4b10ab5693337fc1ea304178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f085e00a74f2161d4b10ab5693337fc1ea304178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/529c27463ff465aa6bf336aac3602c759df05010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529c27463ff465aa6bf336aac3602c759df05010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529c27463ff465aa6bf336aac3602c759df05010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529c27463ff465aa6bf336aac3602c759df05010/comments", "author": null, "committer": null, "parents": [{"sha": "fd6342ec0e74a2d05b00d1f932a81e2330509bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6342ec0e74a2d05b00d1f932a81e2330509bde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6342ec0e74a2d05b00d1f932a81e2330509bde"}], "stats": {"total": 190, "additions": 125, "deletions": 65}, "files": [{"sha": "8e8ac2aec401a99a8a94a23e370a9e68615b3beb", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 117, "deletions": 52, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=529c27463ff465aa6bf336aac3602c759df05010", "patch": "@@ -228,16 +228,17 @@ package body Ch3 is\n    --  | CONCURRENT_TYPE_DECLARATION\n \n    --  INCOMPLETE_TYPE_DECLARATION ::=\n-   --    type DEFINING_IDENTIFIER [DISCRIMINANT_PART] [IS TAGGED];\n+   --    type DEFINING_IDENTIFIER [DISCRIMINANT_PART] [is tagged];\n \n    --  PRIVATE_TYPE_DECLARATION ::=\n    --    type DEFINING_IDENTIFIER [DISCRIMINANT_PART]\n    --      is [abstract] [tagged] [limited] private;\n \n    --  PRIVATE_EXTENSION_DECLARATION ::=\n    --    type DEFINING_IDENTIFIER [DISCRIMINANT_PART] is\n-   --      [abstract] new ancestor_SUBTYPE_INDICATION\n-   --      [and INTERFACE_LIST] with private;\n+   --      [abstract] [limited | synchronized]\n+   --        new ancestor_SUBTYPE_INDICATION [and INTERFACE_LIST]\n+   --          with private;\n \n    --  TYPE_DEFINITION ::=\n    --    ENUMERATION_TYPE_DEFINITION  | INTEGER_TYPE_DEFINITION\n@@ -251,7 +252,7 @@ package body Ch3 is\n \n    --  INTERFACE_TYPE_DEFINITION ::=\n    --    [limited | task | protected | synchronized ] interface\n-   --      [AND interface_list]\n+   --      [and INTERFACE_LIST]\n \n    --  Error recovery: can raise Error_Resync\n \n@@ -262,16 +263,16 @@ package body Ch3 is\n    --  function handles only declarations starting with TYPE).\n \n    function P_Type_Declaration return Node_Id is\n-      Abstract_Present : Boolean;\n-      Abstract_Loc     : Source_Ptr;\n+      Abstract_Present : Boolean := False;\n+      Abstract_Loc     : Source_Ptr := No_Location;\n       Decl_Node        : Node_Id;\n       Discr_List       : List_Id;\n       Discr_Sloc       : Source_Ptr;\n       End_Labl         : Node_Id;\n-      Type_Loc         : Source_Ptr;\n-      Type_Start_Col   : Column_Number;\n       Ident_Node       : Node_Id;\n       Is_Derived_Iface : Boolean := False;\n+      Type_Loc         : Source_Ptr;\n+      Type_Start_Col   : Column_Number;\n       Unknown_Dis      : Boolean;\n \n       Typedef_Node     : Node_Id;\n@@ -384,17 +385,15 @@ package body Ch3 is\n          Abstract_Loc     := Token_Ptr;\n          Scan; -- past ABSTRACT\n \n-         if Token = Tok_Limited\n+         --  Ada 2005 (AI-419): AARM 3.4 (2/2)\n+\n+         if (Ada_Version < Ada_05 and then Token = Tok_Limited)\n            or else Token = Tok_Private\n            or else Token = Tok_Record\n            or else Token = Tok_Null\n          then\n             Error_Msg_AP (\"TAGGED expected\");\n          end if;\n-\n-      else\n-         Abstract_Present := False;\n-         Abstract_Loc     := No_Location;\n       end if;\n \n       --  Check for misuse of Ada 95 keyword Tagged\n@@ -636,7 +635,8 @@ package body Ch3 is\n                            and then Chars (Token_Node) = Name_Interface)\n                then\n                   Typedef_Node := P_Interface_Type_Definition\n-                                    (Is_Synchronized => False);\n+                                    (Abstract_Present,\n+                                     Is_Synchronized => False);\n                   Abstract_Present := True;\n                   Set_Limited_Present (Typedef_Node);\n \n@@ -722,7 +722,7 @@ package body Ch3 is\n \n             when Tok_Interface =>\n                Typedef_Node := P_Interface_Type_Definition\n-                                (Is_Synchronized => False);\n+                                (Abstract_Present, Is_Synchronized => False);\n                Abstract_Present := True;\n                TF_Semicolon;\n                exit;\n@@ -733,7 +733,8 @@ package body Ch3 is\n                TF_Semicolon;\n                exit;\n \n-            --  Ada 2005 (AI-345)\n+            --  Ada 2005 (AI-345): Protected, synchronized or task interface\n+            --  or Ada 2005 (AI-443): Synchronized private extension.\n \n             when Tok_Protected    |\n                  Tok_Synchronized |\n@@ -745,24 +746,40 @@ package body Ch3 is\n                begin\n                   Scan; -- past TASK, PROTECTED or SYNCHRONIZED\n \n-                  Typedef_Node := P_Interface_Type_Definition\n-                                   (Is_Synchronized => True);\n-                  Abstract_Present := True;\n+                  --  Synchronized private extension\n \n-                  case Saved_Token is\n-                     when Tok_Task =>\n-                        Set_Task_Present         (Typedef_Node);\n+                  if Token = Tok_New then\n+                     Typedef_Node := P_Derived_Type_Def_Or_Private_Ext_Decl;\n \n-                     when Tok_Protected =>\n-                        Set_Protected_Present    (Typedef_Node);\n-\n-                     when Tok_Synchronized =>\n+                     if Saved_Token = Tok_Synchronized then\n                         Set_Synchronized_Present (Typedef_Node);\n+                     else\n+                        Error_Msg_SC (\"invalid kind of private extension\");\n+                     end if;\n+\n+                  --  Interface\n+\n+                  else\n+                     Typedef_Node :=\n+                       P_Interface_Type_Definition\n+                         (Abstract_Present, Is_Synchronized => True);\n+                     Abstract_Present := True;\n+\n+                     case Saved_Token is\n+                        when Tok_Task =>\n+                           Set_Task_Present         (Typedef_Node);\n \n-                     when others =>\n-                        pragma Assert (False);\n-                        null;\n-                  end case;\n+                        when Tok_Protected =>\n+                           Set_Protected_Present    (Typedef_Node);\n+\n+                        when Tok_Synchronized =>\n+                           Set_Synchronized_Present (Typedef_Node);\n+\n+                        when others =>\n+                           pragma Assert (False);\n+                           null;\n+                     end case;\n+                  end if;\n                end;\n \n                TF_Semicolon;\n@@ -904,7 +921,7 @@ package body Ch3 is\n    -------------------------------\n \n    --  SUBTYPE_INDICATION ::=\n-   --    [NOT NULL] SUBTYPE_MARK [CONSTRAINT]\n+   --    [not null] SUBTYPE_MARK [CONSTRAINT]\n \n    --  Error recovery: can raise Error_Resync\n \n@@ -1178,8 +1195,10 @@ package body Ch3 is\n    --    DEFINING_IDENTIFIER_LIST : constant ::= static_EXPRESSION;\n \n    --  OBJECT_RENAMING_DECLARATION ::=\n-   --    DEFINING_IDENTIFIER : SUBTYPE_MARK renames object_NAME;\n-   --  | DEFINING_IDENTIFIER : ACCESS_DEFINITION renames object_NAME;\n+   --    DEFINING_IDENTIFIER :\n+   --      [NULL_EXCLUSION] SUBTYPE_MARK renames object_NAME;\n+   --  | DEFINING_IDENTIFIER :\n+   --      ACCESS_DEFINITION renames object_NAME;\n \n    --  EXCEPTION_RENAMING_DECLARATION ::=\n    --    DEFINING_IDENTIFIER : exception renames exception_NAME;\n@@ -1560,13 +1579,15 @@ package body Ch3 is\n             --    DEFINING_IDENTIFIER_LIST : [aliased] [constant]\n             --      [NULL_EXCLUSION] SUBTYPE_INDICATION [:= EXPRESSION];\n             --  | DEFINING_IDENTIFIER_LIST : [aliased] [constant]\n-            --          ACCESS_DEFINITION [:= EXPRESSION];\n+            --      ACCESS_DEFINITION [:= EXPRESSION];\n \n             --  OBJECT_RENAMING_DECLARATION ::=\n-            --    ...\n-            --  | DEFINING_IDENTIFIER : ACCESS_DEFINITION renames object_NAME;\n+            --    DEFINING_IDENTIFIER :\n+            --      [NULL_EXCLUSION] SUBTYPE_MARK renames object_NAME;\n+            --  | DEFINING_IDENTIFIER :\n+            --      ACCESS_DEFINITION renames object_NAME;\n \n-            Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n+            Not_Null_Present := P_Null_Exclusion;  --  Ada 2005 (AI-231/423)\n \n             if Token = Tok_Access then\n                if Ada_Version < Ada_05 then\n@@ -1598,9 +1619,22 @@ package body Ch3 is\n                --  Object renaming declaration\n \n                if Token_Is_Renames then\n-                  Error_Msg_SP\n-                    (\"null-exclusion not allowed in object renamings\");\n-                  raise Error_Resync;\n+                  if Ada_Version < Ada_05 then\n+                     Error_Msg_SP\n+                       (\"null-exclusion not allowed in object renaming\");\n+                     raise Error_Resync;\n+\n+                  --  Ada 2005 (AI-423): Object renaming declaration with\n+                  --  a null exclusion.\n+\n+                  else\n+                     No_List;\n+                     Decl_Node :=\n+                       New_Node (N_Object_Renaming_Declaration, Ident_Sloc);\n+                     Set_Null_Exclusion_Present (Decl_Node, Not_Null_Present);\n+                     Set_Subtype_Mark (Decl_Node, Type_Node);\n+                     Set_Name (Decl_Node, P_Name);\n+                  end if;\n \n                --  Object declaration\n \n@@ -1762,12 +1796,13 @@ package body Ch3 is\n \n    --  DERIVED_TYPE_DEFINITION ::=\n    --    [abstract] [limited] new [NULL_EXCLUSION] parent_SUBTYPE_INDICATION\n-   --    [[AND interface_list] RECORD_EXTENSION_PART]\n+   --    [[and INTERFACE_LIST] RECORD_EXTENSION_PART]\n \n    --  PRIVATE_EXTENSION_DECLARATION ::=\n    --     type DEFINING_IDENTIFIER [DISCRIMINANT_PART] is\n-   --       [abstract] [limited] new ancestor_SUBTYPE_INDICATION\n-   --       [AND interface_list] with PRIVATE;\n+   --       [abstract] [limited | synchronized]\n+   --          new ancestor_SUBTYPE_INDICATION [and INTERFACE_LIST]\n+   --            with private;\n \n    --  RECORD_EXTENSION_PART ::= with RECORD_DEFINITION\n \n@@ -1953,7 +1988,8 @@ package body Ch3 is\n    --  | SIMPLE_EXPRESSION .. SIMPLE_EXPRESSION\n \n    --  This routine scans out the range or subtype mark that forms the right\n-   --  operand of a membership test.\n+   --  operand of a membership test (it is not used in any other contexts, and\n+   --  error messages are specialized with this knowledge in mind).\n \n    --  Note: as documented in the Sinfo interface, although the syntax only\n    --  allows a subtype mark, we in fact allow any simple expression to be\n@@ -1968,10 +2004,23 @@ package body Ch3 is\n    function P_Range_Or_Subtype_Mark return Node_Id is\n       Expr_Node  : Node_Id;\n       Range_Node : Node_Id;\n+      Save_Loc   : Source_Ptr;\n+\n+   --  Start of processing for P_Range_Or_Subtype_Mark\n \n    begin\n+      --  Save location of possible junk parentheses\n+\n+      Save_Loc := Token_Ptr;\n+\n+      --  Scan out either a simple expression or a range (this accepts more\n+      --  than is legal here, but as explained above, we like to allow more\n+      --  with a proper diagnostic.\n+\n       Expr_Node := P_Simple_Expression_Or_Range_Attribute;\n \n+      --  Range attribute\n+\n       if Expr_Form = EF_Range_Attr then\n          return Expr_Node;\n \n@@ -1994,31 +2043,41 @@ package body Ch3 is\n          --  Check for error of range constraint after a subtype mark\n \n          if Token = Tok_Range then\n-            Error_Msg_SC\n-              (\"range constraint not allowed in membership test\");\n+            Error_Msg_SC (\"range constraint not allowed in membership test\");\n             Scan; -- past RANGE\n             raise Error_Resync;\n \n          --  Check for error of DIGITS or DELTA after a subtype mark\n \n          elsif Token = Tok_Digits or else Token = Tok_Delta then\n             Error_Msg_SC\n-               (\"accuracy definition not allowed in membership test\");\n+              (\"accuracy definition not allowed in membership test\");\n             Scan; -- past DIGITS or DELTA\n             raise Error_Resync;\n \n+         --  Attribute reference, may or may not be OK, but in any case we\n+         --  will scan it out\n+\n          elsif Token = Tok_Apostrophe then\n             return P_Subtype_Mark_Attribute (Expr_Node);\n \n+         --  OK case of simple name, just return it\n+\n          else\n             return Expr_Node;\n          end if;\n \n-      --  At this stage, we have some junk following the expression. We\n-      --  really can't tell what is wrong, might be a missing semicolon,\n-      --  or a missing THEN, or whatever. Our caller will figure it out!\n+      --  Here we have some kind of error situation. Check for junk parens\n+      --  then return what we have, caller will deal with other errors.\n \n       else\n+         if Nkind (Expr_Node) in N_Subexpr\n+           and then Paren_Count (Expr_Node) /= 0\n+         then\n+            Error_Msg (\"|parentheses not allowed for subtype mark\", Save_Loc);\n+            Set_Paren_Count (Expr_Node, 0);\n+         end if;\n+\n          return Expr_Node;\n       end if;\n    end P_Range_Or_Subtype_Mark;\n@@ -3502,12 +3561,13 @@ package body Ch3 is\n \n    --  INTERFACE_TYPE_DEFINITION ::=\n    --    [limited | task | protected | synchronized] interface\n-   --      [AND interface_list]\n+   --      [and INTERFACE_LIST]\n \n    --  Error recovery: cannot raise Error_Resync\n \n    function P_Interface_Type_Definition\n-      (Is_Synchronized : Boolean) return Node_Id\n+     (Abstract_Present : Boolean;\n+      Is_Synchronized  : Boolean) return Node_Id\n    is\n       Typedef_Node : Node_Id;\n \n@@ -3517,6 +3577,11 @@ package body Ch3 is\n          Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n       end if;\n \n+      if Abstract_Present then\n+         Error_Msg_SP (\"ABSTRACT not allowed in interface type definition \" &\n+                       \"('R'M' 3.9.4(2/2))\");\n+      end if;\n+\n       Scan; -- past INTERFACE\n \n       --  Ada 2005 (AI-345): In case of synchronized interfaces and"}, {"sha": "ccb52ee6f95e9439b4f53574a1d88b4f2b9e571d", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=529c27463ff465aa6bf336aac3602c759df05010", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1545,7 +1545,7 @@ package body Ch9 is\n \n             else\n                Error_Msg_SC\n-                 (\"Select alternative (ACCEPT, ABORT, DELAY) expected\");\n+                 (\"select alternative (ACCEPT, ABORT, DELAY) expected\");\n                Alternative := Error;\n \n                if Token = Tok_Semicolon then"}, {"sha": "b69bbbb49a7af0da040a758a8b8c6ecb3504e7b4", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=529c27463ff465aa6bf336aac3602c759df05010", "patch": "@@ -237,9 +237,9 @@ begin\n       else\n          Error_Msg (\"file { does not contain expected unit!\", Loc);\n          Error_Msg_Unit_1 := Expected_Unit (Cur_Unum);\n-         Error_Msg (\"expected unit $!\", Loc);\n+         Error_Msg (\"\\\\expected unit $!\", Loc);\n          Error_Msg_Unit_1 := Unit_Name (Cur_Unum);\n-         Error_Msg (\"found unit $!\", Loc);\n+         Error_Msg (\"\\\\found unit $!\", Loc);\n       end if;\n \n       --  In both cases, remove the unit if it is the last unit (which it"}, {"sha": "01ade90ee8167e649ce8be897ae41f8fbb73fe1b", "filename": "gcc/ada/par-tchk.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-tchk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529c27463ff465aa6bf336aac3602c759df05010/gcc%2Fada%2Fpar-tchk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-tchk.adb?ref=529c27463ff465aa6bf336aac3602c759df05010", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -795,17 +795,12 @@ package body Tchk is\n    -----------------\n \n    procedure Wrong_Token (T : Token_Type; P : Position) is\n-      Missing : constant String := \"missing \";\n-      Image : constant String := Token_Type'Image (T);\n+      Missing  : constant String := \"missing \";\n+      Image    : constant String := Token_Type'Image (T);\n       Tok_Name : constant String := Image (5 .. Image'Length);\n-      M : String (1 .. Missing'Length + Tok_Name'Length);\n+      M        : constant String := Missing & Tok_Name;\n \n    begin\n-      --  Set M to Missing & Tok_Name\n-\n-      M (1 .. Missing'Length) := Missing;\n-      M (Missing'Length + 1 .. M'Last) := Tok_Name;\n-\n       if Token = Tok_Semicolon then\n          Scan;\n "}]}