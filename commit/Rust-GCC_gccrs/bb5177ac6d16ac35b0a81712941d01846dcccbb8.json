{"sha": "bb5177ac6d16ac35b0a81712941d01846dcccbb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI1MTc3YWM2ZDE2YWMzNWIwYTgxNzEyOTQxZDAxODQ2ZGNjY2JiOA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@dgii.com", "date": "1998-06-19T19:26:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-19T19:26:28Z"}, "message": "i386.c: Include system.h.\n\n        * i386.c: Include system.h.   Remove redundant includes.\n        (optimization_options): Mark param 'size' with ATTRIBUTE_UNUSED.\n        (i386_cc_probably_useless_p): Likewise for 'decl', 'attributes',\n        'identifier', 'args'.\n        (i386_valid_type_attribute_p): Likewise for 'attributes'.\n        (i386_comp_type_attribute_p): Likewise for 'type1', 'type2'.\n        (function_arg_partial_nregs): Likewise for 'cum', 'mode', 'type',\n        and 'named'.\n        (symbolic_operand): Likewise for 'mode'.\n        (call_insn_operand): Likewise.\n        (expander_call_insn_operand): Likewise.\n        (ix86_logical_operator): Likewise.\n        (ix86_binary_operator_ok): Likewise.\n        (emit_pic_move): Likewise.\n        (VOIDmode_compare_op): Likewise.\n        (is_mul): Likewise.\n        (str_immediate_operand): Likewise.\n        (ix86_uary_operator_ok): Likewise for 'code', 'mode', and 'operands'.yy\n        (asm_output_function_prefix): Likewise for 'name'.\n        (function_prologue): Likewise for 'file', and 'size'.\n        (function_epilogue): Likewise.\n\nFrom-SVN: r20599", "tree": {"sha": "024650868a560ec21ff2f45fde6253a54564de27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024650868a560ec21ff2f45fde6253a54564de27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb5177ac6d16ac35b0a81712941d01846dcccbb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5177ac6d16ac35b0a81712941d01846dcccbb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb5177ac6d16ac35b0a81712941d01846dcccbb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5177ac6d16ac35b0a81712941d01846dcccbb8/comments", "author": null, "committer": null, "parents": [{"sha": "7e7ca3a1bd935133caa153c9c58c884641604959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7ca3a1bd935133caa153c9c58c884641604959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7ca3a1bd935133caa153c9c58c884641604959"}], "stats": {"total": 101, "additions": 56, "deletions": 45}, "files": [{"sha": "4e1db650d755d9b85fd3487076a03657f3e2e24e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5177ac6d16ac35b0a81712941d01846dcccbb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5177ac6d16ac35b0a81712941d01846dcccbb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb5177ac6d16ac35b0a81712941d01846dcccbb8", "patch": "@@ -1,3 +1,27 @@\n+Fri Jun 19 20:23:05 1998   Robert Lipe  <robertl@dgii.com>\n+\n+        * i386.c: Include system.h.   Remove redundant includes.\n+        (optimization_options): Mark param 'size' with ATTRIBUTE_UNUSED.\n+        (i386_cc_probably_useless_p): Likewise for 'decl', 'attributes',\n+        'identifier', 'args'.\n+        (i386_valid_type_attribute_p): Likewise for 'attributes'.\n+        (i386_comp_type_attribute_p): Likewise for 'type1', 'type2'.\n+        (function_arg_partial_nregs): Likewise for 'cum', 'mode', 'type',\n+        and 'named'.\n+        (symbolic_operand): Likewise for 'mode'.\n+        (call_insn_operand): Likewise.\n+        (expander_call_insn_operand): Likewise.\n+        (ix86_logical_operator): Likewise.\n+        (ix86_binary_operator_ok): Likewise.\n+        (emit_pic_move): Likewise.\n+        (VOIDmode_compare_op): Likewise.\n+        (is_mul): Likewise.\n+        (str_immediate_operand): Likewise.\n+        (ix86_uary_operator_ok): Likewise for 'code', 'mode', and 'operands'.yy\n+        (asm_output_function_prefix): Likewise for 'name'.\n+        (function_prologue): Likewise for 'file', and 'size'.\n+        (function_epilogue): Likewise.\n+\n 1998-06-19  Jim Wilson  <wilson@cygnus.com>\n \n \t* loop.h (struct induction): Clarify comment for unrolled field."}, {"sha": "7a5aab57a87202a51e68a943a12b4afc28355a95", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 32, "deletions": 45, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5177ac6d16ac35b0a81712941d01846dcccbb8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5177ac6d16ac35b0a81712941d01846dcccbb8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bb5177ac6d16ac35b0a81712941d01846dcccbb8", "patch": "@@ -18,10 +18,9 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA. */\n \n-#include <stdio.h>\n #include <setjmp.h>\n-#include <ctype.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -39,18 +38,6 @@ Boston, MA 02111-1307, USA. */\n #include \"expr.h\"\n #include \"toplev.h\"\n \n-#if HAVE_STDLIB_H\n-#include <stdlib.h>                                                \n-#endif\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>                                                   \n-#else                                                  \n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>               \n-#endif                                                                   \n-#endif \n-\n #ifdef EXTRA_CONSTRAINT\n /* If EXTRA_CONSTRAINT is defined, then the 'S'\n    constraint in REG_CLASS_FROM_LETTER will no longer work, and various\n@@ -438,7 +425,7 @@ order_regs_for_local_alloc ()\n void\n optimization_options (level, size)\n      int level;\n-     int size;\n+     int size ATTRIBUTE_UNUSED;\n {\n   /* For -O2 and beyond, turn off -fschedule-insns by default.  It tends to\n      make the problem with not enough registers even worse.  */\n@@ -539,10 +526,10 @@ i386_cc_probably_useless_p (insn)\n \n int\n i386_valid_decl_attribute_p (decl, attributes, identifier, args)\n-     tree decl;\n-     tree attributes;\n-     tree identifier;\n-     tree args;\n+     tree decl ATTRIBUTE_UNUSED;\n+     tree attributes ATTRIBUTE_UNUSED;\n+     tree identifier ATTRIBUTE_UNUSED;\n+     tree args ATTRIBUTE_UNUSED;\n {\n   return 0;\n }\n@@ -554,7 +541,7 @@ i386_valid_decl_attribute_p (decl, attributes, identifier, args)\n int\n i386_valid_type_attribute_p (type, attributes, identifier, args)\n      tree type;\n-     tree attributes;\n+     tree attributes ATTRIBUTE_UNUSED;\n      tree identifier;\n      tree args;\n {\n@@ -604,8 +591,8 @@ i386_valid_type_attribute_p (type, attributes, identifier, args)\n \n int\n i386_comp_type_attributes (type1, type2)\n-     tree type1;\n-     tree type2;\n+     tree type1 ATTRIBUTE_UNUSED;\n+     tree type2 ATTRIBUTE_UNUSED;\n {\n   return 1;\n }\n@@ -818,10 +805,10 @@ function_arg (cum, mode, type, named)\n \n int\n function_arg_partial_nregs (cum, mode, type, named)\n-     CUMULATIVE_ARGS *cum;\t/* current arg information */\n-     enum machine_mode mode;\t/* current arg mode */\n-     tree type;\t\t\t/* type of the argument or 0 if lib support */\n-     int named;\t\t\t/* != 0 for normal args, == 0 for ... args */\n+     CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED;\t/* current arg information */\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\t/* current arg mode */\n+     tree type ATTRIBUTE_UNUSED;\t\t/* type of the argument or 0 if lib support */\n+     int named ATTRIBUTE_UNUSED;\t\t/* != 0 for normal args, == 0 for ... args */\n {\n   return 0;\n }\n@@ -1628,7 +1615,7 @@ output_move_const_single (operands)\n int\n symbolic_operand (op, mode)\n      register rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   switch (GET_CODE (op))\n     {\n@@ -1655,7 +1642,7 @@ symbolic_operand (op, mode)\n int\n call_insn_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (GET_CODE (op) == MEM\n       && ((CONSTANT_ADDRESS_P (XEXP (op, 0))\n@@ -1676,7 +1663,7 @@ call_insn_operand (op, mode)\n int\n expander_call_insn_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (GET_CODE (op) == MEM\n       && (CONSTANT_ADDRESS_P (XEXP (op, 0))\n@@ -1712,7 +1699,7 @@ arithmetic_comparison_operator (op, mode)\n int\n ix86_logical_operator (op, mode)\n      register rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return GET_CODE (op) == AND || GET_CODE (op) == IOR || GET_CODE (op) == XOR;\n }\n@@ -1841,7 +1828,7 @@ ix86_expand_binary_operator (code, mode, operands)\n int\n ix86_binary_operator_ok (code, mode, operands)\n      enum rtx_code code;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n      rtx operands[3];\n {\n   return (GET_CODE (operands[1]) != MEM || GET_CODE (operands[2]) != MEM)\n@@ -1888,9 +1875,9 @@ ix86_expand_unary_operator (code, mode, operands)\n \n int\n ix86_unary_operator_ok (code, mode, operands)\n-     enum rtx_code code;\n-     enum machine_mode mode;\n-     rtx operands[2];\n+     enum rtx_code code ATTRIBUTE_UNUSED;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+     rtx operands[2] ATTRIBUTE_UNUSED;\n {\n   return TRUE;\n }\n@@ -1905,7 +1892,7 @@ static int pic_label_no = 0;\n void\n asm_output_function_prefix (file, name)\n      FILE *file;\n-     char *name;\n+     char *name ATTRIBUTE_UNUSED;\n {\n   rtx xops[2];\n   int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table\n@@ -1941,8 +1928,8 @@ asm_output_function_prefix (file, name)\n \n void\n function_prologue (file, size)\n-     FILE *file;\n-     int size;\n+     FILE *file ATTRIBUTE_UNUSED;\n+     int size ATTRIBUTE_UNUSED;\n {\n   if (TARGET_SCHEDULE_PROLOGUE)\n     {\n@@ -2229,8 +2216,8 @@ ix86_can_use_return_insn_p ()\n \n void\n function_epilogue (file, size)\n-     FILE *file;\n-     int size;\n+     FILE *file ATTRIBUTE_UNUSED;\n+     int size ATTRIBUTE_UNUSED;\n {\n     return;\n }\n@@ -2761,7 +2748,7 @@ legitimize_pic_address (orig, reg)\n void\n emit_pic_move (operands, mode)\n      rtx *operands;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   rtx temp = reload_in_progress ? operands[0] : gen_reg_rtx (Pmode);\n \n@@ -2795,7 +2782,7 @@ emit_pic_move (operands, mode)\n rtx\n legitimize_address (x, oldx, mode)\n      register rtx x;\n-     register rtx oldx;\n+     register rtx oldx ATTRIBUTE_UNUSED;\n      enum machine_mode mode;\n {\n   int changed = 0;\n@@ -3805,7 +3792,7 @@ shift_op (op, mode)\n int\n VOIDmode_compare_op (op, mode)\n     register rtx op;\n-    enum machine_mode mode;\n+    enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return GET_CODE (op) == COMPARE && GET_MODE (op) == VOIDmode;\n }\n@@ -4333,14 +4320,14 @@ assign_386_stack_local (mode, n)\n \f\n int is_mul(op,mode)\n     register rtx op;\n-    enum machine_mode mode;\n+    enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (GET_CODE (op) == MULT);\n }\n \n int is_div(op,mode)\n     register rtx op;\n-    enum machine_mode mode;\n+    enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (GET_CODE (op) == DIV);\n }\n@@ -4811,7 +4798,7 @@ sets_condition_code (pat)\n int\n str_immediate_operand (op, mode)\n      register rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   if (GET_CODE (op) == CONST_INT && INTVAL (op) <= 32 && INTVAL (op) >= 0)\n     return 1;"}]}