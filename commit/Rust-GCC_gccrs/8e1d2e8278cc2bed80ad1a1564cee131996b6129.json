{"sha": "8e1d2e8278cc2bed80ad1a1564cee131996b6129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxZDJlODI3OGNjMmJlZDgwYWQxYTE1NjRjZWUxMzE5OTZiNjEyOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-01T02:38:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-01T02:38:06Z"}, "message": "re PR tree-optimization/19042 (Complex types are not SRA all the time.)\n\n        PR tree-opt/19042\n        * tree-sra.c (decide_block_copy): Force use_block_copy false\n        for complex values.\n\nFrom-SVN: r92782", "tree": {"sha": "788b2b3b0cc3fcdc2a9e07e5d26a9c796719f883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/788b2b3b0cc3fcdc2a9e07e5d26a9c796719f883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1d2e8278cc2bed80ad1a1564cee131996b6129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1d2e8278cc2bed80ad1a1564cee131996b6129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1d2e8278cc2bed80ad1a1564cee131996b6129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1d2e8278cc2bed80ad1a1564cee131996b6129/comments", "author": null, "committer": null, "parents": [{"sha": "78e0d62b95e1706a1243f3067da2e487c2d4a7e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e0d62b95e1706a1243f3067da2e487c2d4a7e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e0d62b95e1706a1243f3067da2e487c2d4a7e9"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "983ad2ce792f3da86ba771b690d255cec5dc04ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1d2e8278cc2bed80ad1a1564cee131996b6129/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1d2e8278cc2bed80ad1a1564cee131996b6129/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e1d2e8278cc2bed80ad1a1564cee131996b6129", "patch": "@@ -1,3 +1,9 @@\n+2004-12-31  Richard Henderson  <rth@redhat.com>\n+\n+\tPR tree-opt/19042\n+\t* tree-sra.c (decide_block_copy): Force use_block_copy false\n+\tfor complex values.\n+\n 2004-12-31  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/17799"}, {"sha": "bb98a8afe6cff094951b13c348d264709a83e164", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1d2e8278cc2bed80ad1a1564cee131996b6129/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1d2e8278cc2bed80ad1a1564cee131996b6129/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=8e1d2e8278cc2bed80ad1a1564cee131996b6129", "patch": "@@ -1293,10 +1293,15 @@ decide_block_copy (struct sra_elt *elt)\n       tree size_tree = TYPE_SIZE_UNIT (elt->type);\n       bool use_block_copy = true;\n \n+      /* Tradeoffs for COMPLEX types pretty much always make it better\n+\t to go ahead and split the components.  */\n+      if (TREE_CODE (elt->type) == COMPLEX_TYPE)\n+\tuse_block_copy = false;\n+\n       /* Don't bother trying to figure out the rest if the structure is\n \t so large we can't do easy arithmetic.  This also forces block\n \t copies for variable sized structures.  */\n-      if (host_integerp (size_tree, 1))\n+      else if (host_integerp (size_tree, 1))\n \t{\n \t  unsigned HOST_WIDE_INT full_size, inst_size = 0;\n \t  unsigned int inst_count;"}]}