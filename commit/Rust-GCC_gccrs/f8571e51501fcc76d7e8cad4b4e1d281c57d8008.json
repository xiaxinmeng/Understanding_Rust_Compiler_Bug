{"sha": "f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1NzFlNTE1MDFmY2M3NmQ3ZThjYWQ0YjRlMWQyODFjNTdkODAwOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-03T15:54:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-03T15:54:13Z"}, "message": "Enable Mathematical Special Functions for C++17\n\n\t* include/bits/c++config (_GLIBCXX_USE_STD_SPEC_FUNCS): Define for\n\tC++17, or for C++11/C++14 when __STDCPP_WANT_MATH_SPEC_FUNCS__ is\n\ttrue.\n\t* include/bits/specfun.h [!__STDCPP_WANT_MATH_SPEC_FUNCS__]: Don't\n\tdo #error for C++17.\n\t* include/c_global/cmath: Check _GLIBCXX_USE_STD_SPEC_FUNCS instead\n\tof __STDCPP_WANT_MATH_SPEC_FUNCS__.\n\t* include/tr1/bessel_function.tcc: Likewise.\n\t* include/tr1/beta_function.tcc: Likewise.\n\t* include/tr1/cmath: Likewise.\n\t* include/tr1/ell_integral.tcc: Likewise.\n\t* include/tr1/exp_integral.tcc: Likewise.\n\t* include/tr1/gamma.tcc: Likewise.\n\t* include/tr1/hypergeometric.tcc: Likewise.\n\t* include/tr1/legendre_function.tcc: Likewise.\n\t* include/tr1/modified_bessel_func.tcc: Likewise.\n\t* include/tr1/poly_hermite.tcc: Likewise.\n\t* include/tr1/poly_laguerre.tcc: Likewise.\n\t* include/tr1/riemann_zeta.tcc: Likewise.\n\t* include/tr1/special_function_util.h: Likewise.\n\t* testsuite/26_numerics/headers/cmath/functions_std_c++17.cc: New.\n\nFrom-SVN: r239081", "tree": {"sha": "390e0c4e68b3382f5c501c1cb4665d52b98ea147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/390e0c4e68b3382f5c501c1cb4665d52b98ea147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27631a2542a0d95d4c66006ea32adaf212708d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27631a2542a0d95d4c66006ea32adaf212708d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27631a2542a0d95d4c66006ea32adaf212708d02"}], "stats": {"total": 198, "additions": 169, "deletions": 29}, "files": [{"sha": "d6082300e32dd01775db2f61eafd15aa482f6b18", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -1,5 +1,27 @@\n 2016-08-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/c++config (_GLIBCXX_USE_STD_SPEC_FUNCS): Define for\n+\tC++17, or for C++11/C++14 when __STDCPP_WANT_MATH_SPEC_FUNCS__ is\n+\ttrue.\n+\t* include/bits/specfun.h [!__STDCPP_WANT_MATH_SPEC_FUNCS__]: Don't\n+\tdo #error for C++17.\n+\t* include/c_global/cmath: Check _GLIBCXX_USE_STD_SPEC_FUNCS instead\n+\tof __STDCPP_WANT_MATH_SPEC_FUNCS__.\n+\t* include/tr1/bessel_function.tcc: Likewise.\n+\t* include/tr1/beta_function.tcc: Likewise.\n+\t* include/tr1/cmath: Likewise.\n+\t* include/tr1/ell_integral.tcc: Likewise.\n+\t* include/tr1/exp_integral.tcc: Likewise.\n+\t* include/tr1/gamma.tcc: Likewise.\n+\t* include/tr1/hypergeometric.tcc: Likewise.\n+\t* include/tr1/legendre_function.tcc: Likewise.\n+\t* include/tr1/modified_bessel_func.tcc: Likewise.\n+\t* include/tr1/poly_hermite.tcc: Likewise.\n+\t* include/tr1/poly_laguerre.tcc: Likewise.\n+\t* include/tr1/riemann_zeta.tcc: Likewise.\n+\t* include/tr1/special_function_util.h: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/functions_std_c++17.cc: New.\n+\n \t* include/std/type_traits (has_trivial_default_constructor): Remove.\n \t(has_trivial_copy_constructor, has_trivial_copy_assign): Likewise.\n \t* testsuite/20_util/has_trivial_copy_assign/requirements/"}, {"sha": "8d2c3612afd0d1b4b788cc7b841c82c5bedd2634", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -532,6 +532,13 @@ namespace std\n #define _GLIBCXX_TXN_SAFE_DYN\n #endif\n \n+#if __cplusplus > 201402L\n+// In C++17 mathematical special functions are in namespace std.\n+# define _GLIBCXX_USE_STD_SPEC_FUNCS 1\n+#elif __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0\n+// For C++11 and C++14 they are in namespace std when requested.\n+# define _GLIBCXX_USE_STD_SPEC_FUNCS 1\n+#endif\n \n // The remainder of the prewritten config is automatic; all the\n // user hooks are listed above."}, {"sha": "93e18522d58b640b91c1103f781a3bd851c43bd8", "filename": "libstdc++-v3/include/bits/specfun.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -38,7 +38,7 @@\n \n #define __cpp_lib_math_special_functions 201603L\n \n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__ == 0\n+#if __cplusplus <= 201403L && __STDCPP_WANT_MATH_SPEC_FUNCS__ == 0\n # error include <cmath> and define __STDCPP_WANT_MATH_SPEC_FUNCS__\n #endif\n "}, {"sha": "6db9deeb996b6bbbeb1ca370dfb2f7972d5a457c", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -1790,7 +1790,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \n #endif // C++11\n \n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__ == 1\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #  include <bits/specfun.h>\n #endif\n "}, {"sha": "692f6da34f5efe7fe13a27ea451ffffc0ae639e2", "filename": "libstdc++-v3/include/tr1/bessel_function.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -50,7 +50,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -630,7 +630,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "34b22d4ea21a70715b14a7a236205938b8f4aa14", "filename": "libstdc++-v3/include/tr1/beta_function.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -48,7 +48,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -199,7 +199,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "7f77a2b01ad741be71738576fd3330cf329d0691", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -1141,7 +1141,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n }\n }\n \n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -1254,7 +1254,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n }\n }\n \n-#else // ! __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#else // ! _GLIBCXX_USE_STD_SPEC_FUNCS\n \n #include <bits/stl_algobase.h>\n #include <limits>\n@@ -1683,6 +1683,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n _GLIBCXX_END_NAMESPACE_VERSION\n }\n }\n-#endif // __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#endif // _GLIBCXX_USE_STD_SPEC_FUNCS\n \n #endif // _GLIBCXX_TR1_CMATH"}, {"sha": "c7bfe16fb789c4684704714581c06cf4557c8667", "filename": "libstdc++-v3/include/tr1/ell_integral.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -44,7 +44,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n {\n@@ -748,7 +748,7 @@ namespace tr1\n \n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "f5b30941ee47a08169f9e61d864c780e07feb217", "filename": "libstdc++-v3/include/tr1/exp_integral.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -49,7 +49,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n {\n@@ -525,7 +525,7 @@ namespace tr1\n \n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "3eb78455823c15945249802743808ff4e22f1adc", "filename": "libstdc++-v3/include/tr1/gamma.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -50,7 +50,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -470,7 +470,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n } // namespace std"}, {"sha": "1c46f4ac2b4f76333499e36c13b865923d3cc99b", "filename": "libstdc++-v3/include/tr1/hypergeometric.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -43,7 +43,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -777,7 +777,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "1980ebbf0c14054b775b14705af22ba1a32921d9", "filename": "libstdc++-v3/include/tr1/legendre_function.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -48,7 +48,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -305,7 +305,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "5278fb2778e5ae4acf31f4265329eabc84532b70", "filename": "libstdc++-v3/include/tr1/modified_bessel_func.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -50,7 +50,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n {\n@@ -433,7 +433,7 @@ namespace tr1\n \n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "7123e11e7f1f4703351b9bea95e6f376255a48c1", "filename": "libstdc++-v3/include/tr1/poly_hermite.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -41,7 +41,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n {\n@@ -123,7 +123,7 @@ namespace tr1\n \n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "a51d1dcc9c11dc0f1d3c135ab17d1f5bc95e92d6", "filename": "libstdc++-v3/include/tr1/poly_laguerre.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -43,7 +43,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -321,7 +321,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "714bf9f1450dbe98f884f8d9cae1d5b539b917cb", "filename": "libstdc++-v3/include/tr1/riemann_zeta.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -46,7 +46,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n # define _GLIBCXX_MATH_NS ::std\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n@@ -435,7 +435,7 @@ namespace tr1\n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n #undef _GLIBCXX_MATH_NS\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "93f09cea80502a719159a5b1dfab7719ac1170ec", "filename": "libstdc++-v3/include/tr1/special_function_util.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -38,7 +38,7 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n #elif defined(_GLIBCXX_TR1_CMATH)\n namespace tr1\n {\n@@ -133,7 +133,7 @@ namespace tr1\n \n   _GLIBCXX_END_NAMESPACE_VERSION\n   } // namespace __detail\n-#if ! __STDCPP_WANT_MATH_SPEC_FUNCS__ && defined(_GLIBCXX_TR1_CMATH)\n+#if ! _GLIBCXX_USE_STD_SPEC_FUNCS && defined(_GLIBCXX_TR1_CMATH)\n } // namespace tr1\n #endif\n }"}, {"sha": "481b659f8c206e4a4e36569f8e5582e778991f26", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/functions_std_c++17.cc", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_std_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8571e51501fcc76d7e8cad4b4e1d281c57d8008/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_std_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_std_c%2B%2B17.cc?ref=f8571e51501fcc76d7e8cad4b4e1d281c57d8008", "patch": "@@ -0,0 +1,111 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile }\n+\n+#include <cmath>\n+\n+namespace gnu\n+{\n+  using std::acos;\n+  using std::asin;\n+  using std::atan;\n+  using std::atan2;\n+  using std::ceil;\n+  using std::cos;\n+  using std::cosh;\n+  using std::exp;\n+  using std::fabs;\n+  using std::floor;\n+  using std::fmod;\n+  using std::frexp;\n+  using std::ldexp;\n+  using std::log;\n+  using std::log10;\n+  using std::modf;\n+  using std::pow;\n+  using std::sin;\n+  using std::sinh;\n+  using std::sqrt;\n+  using std::tan;\n+  using std::tanh;\n+\n+  using std::assoc_laguerre;\n+  using std::assoc_laguerref;\n+  using std::assoc_laguerrel;\n+  using std::assoc_legendre;\n+  using std::assoc_legendref;\n+  using std::assoc_legendrel;\n+  using std::beta;\n+  using std::betaf;\n+  using std::betal;\n+  using std::comp_ellint_1;\n+  using std::comp_ellint_1f;\n+  using std::comp_ellint_1l;\n+  using std::comp_ellint_2;\n+  using std::comp_ellint_2f;\n+  using std::comp_ellint_2l;\n+  using std::comp_ellint_3;\n+  using std::comp_ellint_3f;\n+  using std::comp_ellint_3l;\n+  using std::cyl_bessel_i;\n+  using std::cyl_bessel_if;\n+  using std::cyl_bessel_il;\n+  using std::cyl_bessel_j;\n+  using std::cyl_bessel_jf;\n+  using std::cyl_bessel_jl;\n+  using std::cyl_bessel_k;\n+  using std::cyl_bessel_kf;\n+  using std::cyl_bessel_kl;\n+  using std::cyl_neumann;\n+  using std::cyl_neumannf;\n+  using std::cyl_neumannl;\n+  using std::ellint_1;\n+  using std::ellint_1f;\n+  using std::ellint_1l;\n+  using std::ellint_2;\n+  using std::ellint_2f;\n+  using std::ellint_2l;\n+  using std::ellint_3;\n+  using std::ellint_3f;\n+  using std::ellint_3l;\n+  using std::expint;\n+  using std::expintf;\n+  using std::expintl;\n+  using std::hermite;\n+  using std::hermitef;\n+  using std::hermitel;\n+  using std::laguerre;\n+  using std::laguerref;\n+  using std::laguerrel;\n+  using std::legendre;\n+  using std::legendref;\n+  using std::legendrel;\n+  using std::riemann_zeta;\n+  using std::riemann_zetaf;\n+  using std::riemann_zetal;\n+  using std::sph_bessel;\n+  using std::sph_besself;\n+  using std::sph_bessell;\n+  using std::sph_legendre;\n+  using std::sph_legendref;\n+  using std::sph_legendrel;\n+  using std::sph_neumann;\n+  using std::sph_neumannf;\n+  using std::sph_neumannl;\n+}"}]}