{"sha": "aa510619f8b650322c113d8593dd57afe6c6f9ae", "node_id": "C_kwDOANBUbNoAKGFhNTEwNjE5ZjhiNjUwMzIyYzExM2Q4NTkzZGQ1N2FmZTZjNmY5YWU", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-12-19T15:01:49Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-12-19T15:03:30Z"}, "message": "arm: correctly define __ARM_FEATURE_CLZ\n\nThe ACLE requires that __ARM_FEATURE_CLZ be defined if the hardware\nsupports it; it's also clear that this doesn't mean the current ISA,\nso we must define this even when compiling for Thumb1 if the target\nsupports CLZ in A32.\n\nThis brings GCC into alignment with Clang.\n\ngcc/ChangeLog:\n\n\t* config/arm/arm-c.cc (__ARM_FEATURE_CLZ): Fix definition of\n\tpreprocessor macro when target has CLZ in another ISA.", "tree": {"sha": "63b13e035694e04129049c8d4491ebeca6fee2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63b13e035694e04129049c8d4491ebeca6fee2ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa510619f8b650322c113d8593dd57afe6c6f9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa510619f8b650322c113d8593dd57afe6c6f9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa510619f8b650322c113d8593dd57afe6c6f9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa510619f8b650322c113d8593dd57afe6c6f9ae/comments", "author": null, "committer": null, "parents": [{"sha": "8577356f4b8a2c9a397390339006eca8f6efa14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8577356f4b8a2c9a397390339006eca8f6efa14d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8577356f4b8a2c9a397390339006eca8f6efa14d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "202898fa04185e839a2f530a9222a9ae41468976", "filename": "gcc/config/arm/arm-c.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa510619f8b650322c113d8593dd57afe6c6f9ae/gcc%2Fconfig%2Farm%2Farm-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa510619f8b650322c113d8593dd57afe6c6f9ae/gcc%2Fconfig%2Farm%2Farm-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.cc?ref=aa510619f8b650322c113d8593dd57afe6c6f9ae", "patch": "@@ -238,8 +238,12 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n     builtin_define_with_int_value (\"__ARM_FEATURE_LDREX\",\n \t\t\t\t   TARGET_ARM_FEATURE_LDREX);\n \n+  /* ACLE says that __ARM_FEATURE_CLZ is defined if the hardware\n+     supports it; it's also clear that this doesn't mean the current\n+     ISA, so we define this even when compiling for Thumb1 if the\n+     target supports CLZ in A32.  */\n   def_or_undef_macro (pfile, \"__ARM_FEATURE_CLZ\",\n-\t\t      ((TARGET_ARM_ARCH >= 5 && !TARGET_THUMB)\n+\t\t      ((TARGET_ARM_ARCH >= 5 && arm_arch_notm)\n \t\t       || TARGET_ARM_ARCH_ISA_THUMB >=2));\n \n   def_or_undef_macro (pfile, \"__ARM_FEATURE_NUMERIC_MAXMIN\","}]}