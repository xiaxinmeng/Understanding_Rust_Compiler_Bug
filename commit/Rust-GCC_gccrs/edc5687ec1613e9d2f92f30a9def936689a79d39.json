{"sha": "edc5687ec1613e9d2f92f30a9def936689a79d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRjNTY4N2VjMTYxM2U5ZDJmOTJmMzBhOWRlZjkzNjY4OWE3OWQzOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-11-02T02:49:24Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-11-02T02:49:24Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_pcc_bitfield_type_matters): New proc.\n\t* gcc.dg/bitfld-3.c: Gate on target pcc_bitfield_type_matters.\n\nFrom-SVN: r106375", "tree": {"sha": "169b6d1d625faf6d958a1919b004b1afe2a9efd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/169b6d1d625faf6d958a1919b004b1afe2a9efd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edc5687ec1613e9d2f92f30a9def936689a79d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc5687ec1613e9d2f92f30a9def936689a79d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc5687ec1613e9d2f92f30a9def936689a79d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc5687ec1613e9d2f92f30a9def936689a79d39/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "278324341d1836d033de4b3f6573ab8345db8402", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edc5687ec1613e9d2f92f30a9def936689a79d39", "patch": "@@ -1,5 +1,9 @@\n 2005-11-02  Hans-Peter Nilsson  <hp@axis.com>\n \n+\t* lib/target-supports.exp\n+\t(check_effective_target_pcc_bitfield_type_matters): New proc.\n+\t* gcc.dg/bitfld-3.c: Gate on target pcc_bitfield_type_matters.\n+\n \t* lib/target-supports.exp (check_effective_default_packed): New proc.\n \t* g++.dg/ext/packed3.C, g++.dg/ext/packed8.C, g++.dg/other/crash-4.C:\n \tGate expected errors on target ! default_packed."}, {"sha": "5207bedb8837b23cef9207799e9e6b0544642b73", "filename": "gcc/testsuite/gcc.dg/bitfld-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-3.c?ref=edc5687ec1613e9d2f92f30a9def936689a79d39", "patch": "@@ -1,5 +1,5 @@\n /* Test for bitfield alignment in structs and unions.  */\n-/* { dg-do run }  */\n+/* { dg-do run { target pcc_bitfield_type_matters } }  */\n /* { dg-options \"-O2\" }  */\n \n extern void abort (void);"}, {"sha": "3116c42c45f80f482f9cbac29e3edf9ce286ed23", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc5687ec1613e9d2f92f30a9def936689a79d39/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=edc5687ec1613e9d2f92f30a9def936689a79d39", "patch": "@@ -344,6 +344,46 @@ proc check_effective_target_default_packed { } {\n     return $et_default_packed_saved\n }\n \n+# Return 1 if target has PCC_BITFIELD_TYPE_MATTERS defined.  See\n+# documentation, where the test also comes from.\n+\n+proc check_effective_target_pcc_bitfield_type_matters { } {\n+    global et_pcc_bitfield_type_matters_saved\n+    global et_pcc_bitfield_type_matters_target_name\n+\n+    if { ![info exists et_pcc_bitfield_type_matters_target_name] } {\n+\tset et_pcc_bitfield_type_matters_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_pcc_bitfield_type_matters_target_name } {\n+\tverbose \"check_effective_target_pcc_bitfield_type_matters: `$et_pcc_bitfield_type_matters_target_name'\" 2\n+\tset et_pcc_bitfield_type_matters_target_name $current_target\n+\tif [info exists et_pcc_bitfield_type_matters_saved] {\n+\t    verbose \"check_effective_target_pcc_bitfield_type_matters: removing cached result\" 2\n+\t    unset et_pcc_bitfield_type_matters_saved\n+\t}\n+    }\n+\n+    if [info exists et_pcc_bitfield_type_matters_saved] {\n+\tverbose \"check_effective_target_pcc_bitfield_type_matters: using cached result\" 2\n+    } else {\n+\tverbose \"check_effective_target_pcc_bitfield_type_matters: compiling source\" 2\n+\n+\t# PCC_BITFIELD_TYPE_MATTERS isn't just about unnamed or empty\n+\t# bitfields, but let's stick to the example code from the docs.\n+\tset et_pcc_bitfield_type_matters_saved \\\n+\t    [string match \"\" [get_compiler_messages pcc_bitfield_type_matters assembly {\n+\t    struct foo1 { char x; char :0; char y; };\n+\t    struct foo2 { char x; int :0; char y; };\n+\t    int s[sizeof (struct foo1) != sizeof (struct foo2) ? 1 : -1];\n+\t} ]]\n+    }\n+    verbose \"check_effective_target_pcc_bitfield_type_matters: returning $et_pcc_bitfield_type_matters_saved\" 2\n+    return $et_pcc_bitfield_type_matters_saved\n+}\n+\n # Return 1 if -fpic and -fPIC are supported, as in no warnings or errors\n # emitted, 0 otherwise.  Whether a shared library can actually be built is\n # out of scope for this test."}]}