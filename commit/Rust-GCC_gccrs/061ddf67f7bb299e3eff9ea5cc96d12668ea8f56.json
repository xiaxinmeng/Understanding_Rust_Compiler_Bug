{"sha": "061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxZGRmNjdmN2JiMjk5ZTNlZmY5ZWE1Y2M5NmQxMjY2OGVhOGY1Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-12-16T22:16:17Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-12-16T22:16:17Z"}, "message": "ipa-inline-analysis.c (will_be_nonconstant_predicate): Consider return values of const calls as constants.\n\n\t* ipa-inline-analysis.c (will_be_nonconstant_predicate): Consider\n\treturn values of const calls as constants.\n\t(estimate_function_body_sizes): Expect calls to have false predicates.\n\nFrom-SVN: r218796", "tree": {"sha": "b7bf593dc9aaae190f0a6bc84296f3a61d79e92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7bf593dc9aaae190f0a6bc84296f3a61d79e92c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56/comments", "author": null, "committer": null, "parents": [{"sha": "8c7d662b9a526b84415f263e029dea0a5b12401a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7d662b9a526b84415f263e029dea0a5b12401a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7d662b9a526b84415f263e029dea0a5b12401a"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "da10096480462a38dcf97853a9d1a02eea3a21ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "patch": "@@ -1,3 +1,9 @@\n+2014-12-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline-analysis.c (will_be_nonconstant_predicate): Consider\n+\treturn values of const calls as constants.\n+\t(estimate_function_body_sizes): Expect calls to have false predicates.\n+\n 2014-12-16  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* hwint.c (abs_hwi, absu_hwi): Move to ..."}, {"sha": "3b622f2f0e40d32daaca8bf29ab28e084c6d1b37", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061ddf67f7bb299e3eff9ea5cc96d12668ea8f56/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=061ddf67f7bb299e3eff9ea5cc96d12668ea8f56", "patch": "@@ -2036,12 +2036,12 @@ will_be_nonconstant_predicate (struct ipa_node_params *info,\n   struct agg_position_info aggpos;\n \n   /* What statments might be optimized away\n-     when their arguments are constant\n-     TODO: also trivial builtins.\n-     builtin_constant_p is already handled later.  */\n+     when their arguments are constant.  */\n   if (gimple_code (stmt) != GIMPLE_ASSIGN\n       && gimple_code (stmt) != GIMPLE_COND\n-      && gimple_code (stmt) != GIMPLE_SWITCH)\n+      && gimple_code (stmt) != GIMPLE_SWITCH\n+      && (gimple_code (stmt) != GIMPLE_CALL\n+\t  || !(gimple_call_flags (stmt) & ECF_CONST)))\n     return p;\n \n   /* Stores will stay anyway.  */\n@@ -2101,9 +2101,10 @@ will_be_nonconstant_predicate (struct ipa_node_params *info,\n \tp = nonconstant_names[SSA_NAME_VERSION (use)];\n       op_non_const = or_predicates (summary->conds, &p, &op_non_const);\n     }\n-  if (gimple_code (stmt) == GIMPLE_ASSIGN\n-      && TREE_CODE (gimple_assign_lhs (stmt)) == SSA_NAME)\n-    nonconstant_names[SSA_NAME_VERSION (gimple_assign_lhs (stmt))]\n+  if ((gimple_code (stmt) == GIMPLE_ASSIGN || gimple_code (stmt) == GIMPLE_CALL)\n+      && gimple_op (stmt, 0)\n+      && TREE_CODE (gimple_op (stmt, 0)) == SSA_NAME)\n+    nonconstant_names[SSA_NAME_VERSION (gimple_op (stmt, 0))]\n       = op_non_const;\n   return op_non_const;\n }\n@@ -2683,7 +2684,9 @@ estimate_function_body_sizes (struct cgraph_node *node, bool early)\n \t      else\n \t\tp = true_predicate ();\n \n-\t      if (!false_predicate_p (&p))\n+\t      if (!false_predicate_p (&p)\n+\t\t  || (is_gimple_call (stmt)\n+\t\t      && !false_predicate_p (&bb_predicate)))\n \t\t{\n \t\t  time += this_time;\n \t\t  size += this_size;"}]}