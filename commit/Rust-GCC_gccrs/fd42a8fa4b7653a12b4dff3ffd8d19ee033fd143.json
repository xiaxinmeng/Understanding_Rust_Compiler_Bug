{"sha": "fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "node_id": "C_kwDOANBUbNoAKGZkNDJhOGZhNGI3NjUzYTEyYjRkZmYzZmZkOGQxOWVlMDMzZmQxNDM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-15T00:16:58Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-15T00:16:58Z"}, "message": "Daily bump.", "tree": {"sha": "5ec80833a11c5461ec476abbbc7e864796b04451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ec80833a11c5461ec476abbbc7e864796b04451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/comments", "author": null, "committer": null, "parents": [{"sha": "38945ee3b2884e5514272c4b41a507ebdfddbb3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38945ee3b2884e5514272c4b41a507ebdfddbb3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38945ee3b2884e5514272c4b41a507ebdfddbb3d"}], "stats": {"total": 262, "additions": 261, "deletions": 1}, "files": [{"sha": "7d899563450bcfa73a31d7ba9a506ea85fd1cace", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,65 @@\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109109\n+\t* config/i386/i386-expand.cc (split_double_concat): Fix splitting\n+\twhen lo is equal to dhi and hi is a MEM which uses dlo register.\n+\n+2023-03-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/107925\n+\t* ipa-cp.cc (update_profiling_info): Drop counts of orig_node to\n+\tglobal0 instead of zeroing when it does not have as many counts as\n+\tit should.\n+\n+2023-03-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/107925\n+\t* ipa-cp.cc (update_specialized_profile): Drop orig_node_count to\n+\tipa count, remove assert, lenient_count_portion_handling, dump\n+\talso orig_node_count.\n+\n+2023-03-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-expand.cc (expand_vec_perm_movs):\n+\tHandle V2SImode for TARGET_MMX_WITH_SSE.\n+\t* config/i386/mmx.md (*mmx_movss_<mode>): Rename from *mmx_movss\n+\tusing V2FI mode iterator to handle both V2SI and V2SF modes.\n+\n+2023-03-14  Sam James  <sam@gentoo.org>\n+\n+\t* config/riscv/genrvv-type-indexer.cc: Avoid calloc() poisoning on musl by\n+\tincluding <sstream> earlier.\n+\t* system.h: Add INCLUDE_SSTREAM.\n+\n+2023-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-live.cc (remove_unused_locals): Do not treat\n+\tthe .DEFERRED_INIT of a variable as use, instead remove\n+\tthat if it is the only use.\n+\n+2023-03-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/107762\n+\t* expr.cc (emit_group_store): Revert latest change.\n+\n+2023-03-14  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR tree-optimization/109005\n+\t* tree-if-conv.cc (get_bitfield_rep): Replace BLKmode check with\n+\taggregate type check.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109115\n+\t* tree-vect-patterns.cc (vect_recog_divmod_pattern): Don't use\n+\tr.upper_bound () on r.undefined_p () range.\n+\n+2023-03-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-optimization/106896\n+\t* profile-count.cc (profile_count::to_sreal_scale): Synchronize\n+\timplementatoin with probability_in; avoid some asserts.\n+\n 2023-03-13  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/linux.h (TARGET_ASM_FILE_END): New macro."}, {"sha": "1541514c48622288e8d67866ac156ad8f570b9a1", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1 +1 @@\n-20230314\n+20230315"}, {"sha": "b9231ad68f4045ab79169ed8921eab95370ec5cf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,40 @@\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96830\n+\t* pt.cc (push_inline_template_parms_recursive): Set\n+\tTEMPLATE_PARMS_CONSTRAINTS.\n+\t(push_template_decl): For an out-of-line declaration, verify\n+\tconstraints for each enclosing template scope match those of the\n+\toriginal template declaratation.\n+\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96830\n+\t* pt.cc (redeclare_class_template): Add missing \"of\" in\n+\tconstraint mismatch diagnostic.\n+\t(tsubst_friend_class): For an already declared class template,\n+\tsubstitute and pass the friend declaration's constraints to\n+\tredeclare_class_template instead of passing the existing\n+\ttemplate's constraints.\n+\n+2023-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108468\n+\t* pt.cc (unify_pack_expansion): Check that TPARMS_PRIMARY_TEMPLATE\n+\tis non-null.\n+\n+2023-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107310\n+\t* cp-gimplify.cc (genericize_if_stmt): Restore folding\n+\tof constant conditions.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109096\n+\t* tree.cc (record_has_unique_obj_representations): Ignore unnamed\n+\tbitfields.\n+\n 2023-03-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/107128"}, {"sha": "5ea241619161f9a47515fc9268674d329a8c5dac", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,11 @@\n+2023-03-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/109108\n+\t* decl.cc (function_defined_in_root_p): Remove.\n+\t(get_symbol_decl): Set DECL_LAMBDA_FUNCTION_P on function literals.\n+\t(start_function): Unconditionally unset DECL_EXTERNAL\n+\t(set_linkage_for_decl): Give lambda functions one-only linkage.\n+\n 2023-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* decl.cc (finish_thunk): Unset DECL_EXTERNAL on thunk."}, {"sha": "36b07e9a4580303e0b1e0d86c62f502a46dafff1", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,12 @@\n+2023-03-14  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109125\n+\t* gm2-libs-ch/cgetopt.c (cgetopt_SetOption): Replace int\n+\tfor bool.\n+\t* gm2-libs-ch/termios.c (doSetUnset): Replace int for bool.\n+\t* gm2-libs/Builtins.mod (isfinitef): Correct typo in return\n+\tstatement.\n+\n 2023-03-13  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109103"}, {"sha": "9b9d2e27765a2933aa83c6d014bd7fcfacac1c7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,80 @@\n+2023-03-15  Jonathan Yong  <10walls@gmail.com>\n+\n+\t* gcc.dg/pic-2.c: Fix expected __PIC__ value.\n+\t* gcc.dg/pic-3.c: Ditto.\n+\t* gcc.dg/pic-4.c: Ditto.\n+\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96830\n+\t* g++.dg/cpp2a/concepts-class5.C: New test.\n+\t* g++.dg/cpp2a/concepts-class5a.C: New test.\n+\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96830\n+\t* g++.dg/cpp2a/concepts-friend14.C: New test.\n+\n+2023-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108468\n+\t* g++.dg/cpp1y/var-templ78.C: New test.\n+\n+2023-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107310\n+\t* c-c++-common/Wimplicit-fallthrough-39.c: Adjust warning.\n+\t* g++.dg/warn/Wreturn-6.C: New test.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109109\n+\t* gcc.target/i386/pr109109-1.c: New test.\n+\t* gcc.target/i386/pr109109-2.c: New test.\n+\n+2023-03-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/109108\n+\t* gdc.dg/torture/imports/pr109108.d: New test.\n+\t* gdc.dg/torture/pr109108.d: New test.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108972\n+\tPR testsuite/109129\n+\t* g++.dg/cpp2a/concepts-lambda3.C: Use dg-do run only for c++20,\n+\tfor c++17_down dg-do compile.  Expect dg-excess-errors for c++17_down\n+\trather than ! concepts.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109096\n+\t* g++.dg/cpp1z/has-unique-obj-representations3.C: New test.\n+\n+2023-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/auto-init-unused-1.c: New testcase.\n+\n+2023-03-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/109005\n+\t* gnat.dg/specs/opt6.ads: New test.\n+\n+2023-03-14  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR testsuite/109118\n+\t* gcc.dg/mla_1.c: Moved to...\n+\t* gcc.target/aarch64/sve/mla_3.c: ...here.\n+\n+2023-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109115\n+\t* gcc.dg/pr109115.c: New test.\n+\n+2023-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/torture/20230313.C: New testcase.\n+\n 2023-03-13  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* gm2/pim/fail/largeconst.mod: New test."}, {"sha": "598b10f4bf3ceac09d23dd80ca8507e4aa7d69fd", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,19 @@\n+2023-03-14  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109125\n+\t* libm2iso/ErrnoCategory.cc (FALSE): Remove.\n+\t(TRUE): Remove.\n+\t* libm2iso/wrapsock.c (TRUE): Remove.\n+\t(FALSE): Remove.\n+\t* libm2iso/wraptime.cc (TRUE): Remove.\n+\t(FALSE): Remove.\n+\t* libm2pim/cgetopt.cc: Replace int for bool for every BOOLEAN\n+\tparameter in the definition module.\n+\t* libm2pim/dtoa.cc: Ditto.\n+\t* libm2pim/ldtoa.cc: Ditto.\n+\t* libm2pim/termios.cc: Ditto.\n+\t(doSetUnset): Replace int for bool.\n+\n 2023-02-27  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/108944"}, {"sha": "d6004da8361ef3801b07b84c25a1eac2260dc200", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fd42a8fa4b7653a12b4dff3ffd8d19ee033fd143", "patch": "@@ -1,3 +1,54 @@\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/109111\n+\t* include/std/ranges (repeat_view): Remove redundant parentheses\n+\tin requires-clause.\n+\t(repeat_view::_Iterator): Correct the requires-clause.\n+\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/bits/stl_iterator.h (move_iterator::_S_iter_concept):\n+\tDefine.\n+\t(__cpp_lib_move_iterator_concept): Define for C++20.\n+\t(move_iterator::iterator_concept): Strengthen as per P2520R0.\n+\t* include/std/version (__cpp_lib_move_iterator_concept): Define\n+\tfor C++20.\n+\t* testsuite/24_iterators/move_iterator/p2520r0.cc: New test.\n+\n+2023-03-14  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/bits/ranges_util.h (view_interface::empty): Add\n+\tpreferred overloads that use ranges::size when the range is\n+\tsized as per LWG 3715.\n+\t* testsuite/std/ranges/adaptors/lwg3715.cc: New test.\n+\n+2023-03-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/chrono.h (__is_duration_v, __is_time_point_v):\n+\tOnly define for C++17 and later.\n+\n+2023-03-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/Makefile.am: Add comment about linker script fragments.\n+\t* src/Makefile.in: Regenerate.\n+\n+2023-03-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/62196\n+\t* include/bits/mask_array.h (mask_array): Add assertions to\n+\tassignment operators.\n+\t* include/std/valarray (valarray::operator[](valarray<bool>)):\n+\tAdd assertions.\n+\t* testsuite/26_numerics/valarray/mask-1_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-2_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-3_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-4_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-5_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-6_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-7_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask-8_neg.cc: New test.\n+\t* testsuite/26_numerics/valarray/mask.cc: New test.\n+\n 2023-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update."}]}