{"sha": "2583109c81b60c64d5ed38e61622c39c1530805f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4MzEwOWM4MWI2MGM2NGQ1ZWQzOGU2MTYyMmMzOWMxNTMwODA1Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-01T01:40:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-01T01:40:16Z"}, "message": "libgo: Avoid some cases of getting callers recursively.\n\nAvoids hanging inside older versions of glibc that do not\nsupport recurive calls to dl_iterate_phdr.\n\nFrom-SVN: r205561", "tree": {"sha": "65d707a5cf1d78dd3fd10b552aad7a0bb4d2e983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d707a5cf1d78dd3fd10b552aad7a0bb4d2e983"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2583109c81b60c64d5ed38e61622c39c1530805f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2583109c81b60c64d5ed38e61622c39c1530805f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2583109c81b60c64d5ed38e61622c39c1530805f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2583109c81b60c64d5ed38e61622c39c1530805f/comments", "author": null, "committer": null, "parents": [{"sha": "2d7930e5e3876af6cca4c823e03fb75d0f92f9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7930e5e3876af6cca4c823e03fb75d0f92f9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7930e5e3876af6cca4c823e03fb75d0f92f9ad"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "ae411d9c83a7c1db74fd5b7e1d6dcfeb60848985", "filename": "libgo/runtime/go-callers.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fgo-callers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fgo-callers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-callers.c?ref=2583109c81b60c64d5ed38e61622c39c1530805f", "patch": "@@ -11,6 +11,13 @@\n #include \"runtime.h\"\n #include \"array.h\"\n \n+/* This is set to non-zero when calling backtrace_full.  This is used\n+   to avoid getting hanging on a recursive lock in dl_iterate_phdr on\n+   older versions of glibc when a SIGPROF signal arrives while\n+   collecting a backtrace.  */\n+\n+uint32 runtime_in_callers;\n+\n /* Argument passed to callback function.  */\n \n struct callers_data\n@@ -111,8 +118,10 @@ runtime_callers (int32 skip, Location *locbuf, int32 m)\n   data.skip = skip + 1;\n   data.index = 0;\n   data.max = m;\n+  runtime_xadd (&runtime_in_callers, 1);\n   backtrace_full (__go_get_backtrace_state (), 0, callback, error_callback,\n \t\t  &data);\n+  runtime_xadd (&runtime_in_callers, -1);\n   return data.index;\n }\n "}, {"sha": "47a472b6d0a3a6e11b58d5e3e2c652f9f92a418d", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=2583109c81b60c64d5ed38e61622c39c1530805f", "patch": "@@ -2454,6 +2454,15 @@ runtime_sigprof()\n \t\treturn;\n \t}\n \tn = 0;\n+\n+\tif(runtime_atomicload(&runtime_in_callers) > 0) {\n+\t\t// If SIGPROF arrived while already fetching runtime\n+\t\t// callers we can have trouble on older systems\n+\t\t// because the unwind library calls dl_iterate_phdr\n+\t\t// which was not recursive in the past.\n+\t\ttraceback = false;\n+\t}\n+\n \tif(traceback) {\n \t\tn = runtime_callers(0, prof.locbuf, nelem(prof.locbuf));\n \t\tfor(i = 0; i < n; i++)"}, {"sha": "b9a1686d385c4a6c8fdf75784649c01b67073c6c", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2583109c81b60c64d5ed38e61622c39c1530805f/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=2583109c81b60c64d5ed38e61622c39c1530805f", "patch": "@@ -776,6 +776,7 @@ extern struct backtrace_state *__go_get_backtrace_state(void);\n extern _Bool __go_file_line(uintptr, String*, String*, intgo *);\n extern byte* runtime_progname();\n extern void runtime_main(void*);\n+extern uint32 runtime_in_callers;\n \n int32 getproccount(void);\n "}]}