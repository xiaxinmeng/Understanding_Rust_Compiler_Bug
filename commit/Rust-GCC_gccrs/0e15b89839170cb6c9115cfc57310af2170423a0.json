{"sha": "0e15b89839170cb6c9115cfc57310af2170423a0", "node_id": "C_kwDOANBUbNoAKDBlMTViODk4MzkxNzBjYjZjOTExNWNmYzU3MzEwYWYyMTcwNDIzYTA", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-17T15:36:34Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-18T08:10:55Z"}, "message": "struct pattern: Add location on struct name", "tree": {"sha": "72b1cf54a3a6c8ed1584defaa2964e47b10428c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b1cf54a3a6c8ed1584defaa2964e47b10428c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e15b89839170cb6c9115cfc57310af2170423a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e15b89839170cb6c9115cfc57310af2170423a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e15b89839170cb6c9115cfc57310af2170423a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e15b89839170cb6c9115cfc57310af2170423a0/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "425ebda24393eb4f40190228b7ef4b69e6253251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425ebda24393eb4f40190228b7ef4b69e6253251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425ebda24393eb4f40190228b7ef4b69e6253251"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "5d937d739251e51ab3534b1039d5e15f965631a1", "filename": "gcc/rust/ast/rust-pattern.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e15b89839170cb6c9115cfc57310af2170423a0/gcc%2Frust%2Fast%2Frust-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e15b89839170cb6c9115cfc57310af2170423a0/gcc%2Frust%2Fast%2Frust-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-pattern.h?ref=0e15b89839170cb6c9115cfc57310af2170423a0", "patch": "@@ -848,18 +848,18 @@ class StructPattern : public Pattern\n   // bool has_struct_pattern_elements;\n   StructPatternElements elems;\n \n-  // TODO: should this store location data? Accessor uses path location data.\n   NodeId node_id;\n+  Location locus;\n \n public:\n   std::string as_string () const override;\n \n   // Constructs a struct pattern from specified StructPatternElements\n-  StructPattern (PathInExpression struct_path,\n+  StructPattern (PathInExpression struct_path, Location locus,\n \t\t StructPatternElements elems\n \t\t = StructPatternElements::create_empty ())\n     : path (std::move (struct_path)), elems (std::move (elems)),\n-      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ()), locus (locus)\n   {}\n \n   /* TODO: constructor to construct via elements included in"}, {"sha": "2260a9509e52def6d1dfe58b827020b9c3e754bd", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e15b89839170cb6c9115cfc57310af2170423a0/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e15b89839170cb6c9115cfc57310af2170423a0/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=0e15b89839170cb6c9115cfc57310af2170423a0", "patch": "@@ -10603,7 +10603,8 @@ Parser<ManagedTokenSource>::parse_pattern ()\n \t\t}\n \n \t      return std::unique_ptr<AST::StructPattern> (\n-\t\tnew AST::StructPattern (std::move (path), std::move (elems)));\n+\t\tnew AST::StructPattern (std::move (path), t->get_locus (),\n+\t\t\t\t\tstd::move (elems)));\n \t    }\n \t  default:\n \t    // assume path in expression\n@@ -11057,7 +11058,8 @@ Parser<ManagedTokenSource>::parse_ident_leading_pattern ()\n \trust_debug (\"successfully parsed struct pattern\");\n \n \treturn std::unique_ptr<AST::StructPattern> (\n-\t  new AST::StructPattern (std::move (path), std::move (elems)));\n+\t  new AST::StructPattern (std::move (path), initial_tok->get_locus (),\n+\t\t\t\t  std::move (elems)));\n       }\n     case DOT_DOT_EQ:\n       case ELLIPSIS: {"}]}