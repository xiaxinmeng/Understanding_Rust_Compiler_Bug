{"sha": "c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiYThlZDBiY2YzYmE0MWViOTRkZTIwOWI4YWQ3NDIyMTVjYTcwZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2014-10-17T09:14:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T09:14:42Z"}, "message": "sem_ch13.adb (Add_Invariants, [...]): Do not perform the replacement on the expression for an inherited class-wide...\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Add_Invariants, Replace_Type_References): Do\n\tnot perform the replacement on the expression for an inherited\n\tclass-wide invariant if in ASIS_Mode and the type reference is\n\talready the prefix of a 'Class attribute reference: the expression\n\thas already been preanalyzed and the replacement performed when\n\tfirst encountered on the declaration of the parent type.\n\nFrom-SVN: r216382", "tree": {"sha": "49c76a71cef5eca887b178580483be6062485b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49c76a71cef5eca887b178580483be6062485b4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e2155739785367db740f9f51c5493db28772cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2155739785367db740f9f51c5493db28772cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2155739785367db740f9f51c5493db28772cda"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "3dfcd9e8b5cc04d9d760e1eb42f072b05324e210", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "patch": "@@ -1,3 +1,12 @@\n+2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Add_Invariants, Replace_Type_References): Do\n+\tnot perform the replacement on the expression for an inherited\n+\tclass-wide invariant if in ASIS_Mode and the type reference is\n+\talready the prefix of a 'Class attribute reference: the expression\n+\thas already been preanalyzed and the replacement performed when\n+\tfirst encountered on the declaration of the parent type.\n+\n 2014-10-17  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch5.adb, sem_ch7.adb, prj-nmsc.adb, sem_ch13.adb, exp_ch3.adb:"}, {"sha": "9ab019a064834313279a3bee26c6c8ad9b740842", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c3ba8ed0bcf3ba41eb94de209b8ad742215ca70d", "patch": "@@ -7505,18 +7505,30 @@ package body Sem_Ch13 is\n             end if;\n \n             --  Invariant'Class, replace with T'Class (obj)\n+            --  In ASIS mode, an inherited item is analyzed already, and the\n+            --  replacement has been done, so do not repeat transformation\n+            --  to prevent ill-formed tree.\n \n             if Class_Present (Ritem) then\n-               Rewrite (N,\n-                 Make_Type_Conversion (Sloc (N),\n-                   Subtype_Mark =>\n-                     Make_Attribute_Reference (Sloc (N),\n-                       Prefix         => New_Occurrence_Of (T, Sloc (N)),\n-                       Attribute_Name => Name_Class),\n-                   Expression   => Make_Identifier (Sloc (N), Object_Name)));\n-\n-               Set_Entity (Expression (N), Object_Entity);\n-               Set_Etype  (Expression (N), Typ);\n+               if ASIS_Mode\n+                 and then Nkind (Parent (N)) = N_Attribute_Reference\n+                 and then Attribute_Name (Parent (N)) = Name_Class\n+               then\n+                  null;\n+\n+               else\n+                  Rewrite (N,\n+                    Make_Type_Conversion (Sloc (N),\n+                      Subtype_Mark =>\n+                        Make_Attribute_Reference (Sloc (N),\n+                          Prefix         => New_Occurrence_Of (T, Sloc (N)),\n+                          Attribute_Name => Name_Class),\n+                      Expression   =>\n+                         Make_Identifier (Sloc (N), Object_Name)));\n+\n+                  Set_Entity (Expression (N), Object_Entity);\n+                  Set_Etype  (Expression (N), Typ);\n+               end if;\n \n             --  Invariant, replace with obj\n "}]}