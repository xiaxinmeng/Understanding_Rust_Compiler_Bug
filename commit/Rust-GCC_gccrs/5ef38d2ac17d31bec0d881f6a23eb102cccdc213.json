{"sha": "5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmMzhkMmFjMTdkMzFiZWMwZDg4MWY2YTIzZWIxMDJjY2NkYzIxMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-07T08:47:09Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-07T08:47:09Z"}, "message": "fp-bit.c (EXTENDED_FLOAT_STUBS): Flush out all XF/TFmode entry points; use void return value and argument list.\n\n        * config/fp-bit.c (EXTENDED_FLOAT_STUBS): Flush out all XF/TFmode\n        entry points; use void return value and argument list.\n\nFrom-SVN: r57887", "tree": {"sha": "b2771e882e5cb3b5547ac2d8aea45bbffc1eb348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2771e882e5cb3b5547ac2d8aea45bbffc1eb348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef38d2ac17d31bec0d881f6a23eb102cccdc213/comments", "author": null, "committer": null, "parents": [{"sha": "e7f9979a8f2b187581436ffcef319300cf1dbb56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f9979a8f2b187581436ffcef319300cf1dbb56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f9979a8f2b187581436ffcef319300cf1dbb56"}], "stats": {"total": 73, "additions": 41, "deletions": 32}, "files": [{"sha": "edff265746b68e7e92fda56b53aad5e0a6627e92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef38d2ac17d31bec0d881f6a23eb102cccdc213/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef38d2ac17d31bec0d881f6a23eb102cccdc213/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "patch": "@@ -1,3 +1,8 @@\n+2002-10-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/fp-bit.c (EXTENDED_FLOAT_STUBS): Flush out all XF/TFmode\n+\tentry points; use void return value and argument list.\n+\n 2002-10-05  Naohiko Shimizu <nshimizu@keyaki.cc.u-tokai.ac.jp>\n \n \t* t-pdp11: Add MULTILIB support for msoft-float."}, {"sha": "7ec20ecf9f21fb3d2c4e44fab174a98e8027f266", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 36, "deletions": 32, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef38d2ac17d31bec0d881f6a23eb102cccdc213/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef38d2ac17d31bec0d881f6a23eb102cccdc213/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=5ef38d2ac17d31bec0d881f6a23eb102cccdc213", "patch": "@@ -79,38 +79,42 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #ifdef EXTENDED_FLOAT_STUBS\n-__truncxfsf2 (){ abort(); }\n-__extendsfxf2 (){ abort(); }\n-__addxf3 (){ abort(); }\n-__divxf3 (){ abort(); }\n-__eqxf2 (){ abort(); }\n-__extenddfxf2 (){ abort(); }\n-__gtxf2 (){ abort(); }\n-__lexf2 (){ abort(); }\n-__ltxf2 (){ abort(); }\n-__mulxf3 (){ abort(); }\n-__negxf2 (){ abort(); }\n-__nexf2 (){ abort(); }\n-__subxf3 (){ abort(); }\n-__truncxfdf2 (){ abort(); }\n-\n-__trunctfsf2 (){ abort(); }\n-__extendsftf2 (){ abort(); }\n-__addtf3 (){ abort(); }\n-__divtf3 (){ abort(); }\n-__eqtf2 (){ abort(); }\n-__extenddftf2 (){ abort(); }\n-__gttf2 (){ abort(); }\n-__letf2 (){ abort(); }\n-__lttf2 (){ abort(); }\n-__multf3 (){ abort(); }\n-__negtf2 (){ abort(); }\n-__netf2 (){ abort(); }\n-__subtf3 (){ abort(); }\n-__trunctfdf2 (){ abort(); }\n-__gexf2 (){ abort(); }\n-__fixxfsi (){ abort(); }\n-__floatsixf (){ abort(); }\n+extern void abort (void);\n+void __extendsfxf2 (void) { abort(); }\n+void __extenddfxf2 (void) { abort(); }\n+void __truncxfdf2 (void) { abort(); }\n+void __truncxfsf2 (void) { abort(); }\n+void __fixxfsi (void) { abort(); }\n+void __floatsixf (void) { abort(); }\n+void __addxf3 (void) { abort(); }\n+void __subxf3 (void) { abort(); }\n+void __mulxf3 (void) { abort(); }\n+void __divxf3 (void) { abort(); }\n+void __negxf2 (void) { abort(); }\n+void __eqxf2 (void) { abort(); }\n+void __nexf2 (void) { abort(); }\n+void __gtxf2 (void) { abort(); }\n+void __gexf2 (void) { abort(); }\n+void __lexf2 (void) { abort(); }\n+void __ltxf2 (void) { abort(); }\n+\n+void __extendsftf2 (void) { abort(); }\n+void __extenddftf2 (void) { abort(); }\n+void __trunctfdf2 (void) { abort(); }\n+void __trunctfsf2 (void) { abort(); }\n+void __fixtfsi (void) { abort(); }\n+void __floatsitf (void) { abort(); }\n+void __addtf3 (void) { abort(); }\n+void __subtf3 (void) { abort(); }\n+void __multf3 (void) { abort(); }\n+void __divtf3 (void) { abort(); }\n+void __negtf2 (void) { abort(); }\n+void __eqtf2 (void) { abort(); }\n+void __netf2 (void) { abort(); }\n+void __gttf2 (void) { abort(); }\n+void __getf2 (void) { abort(); }\n+void __letf2 (void) { abort(); }\n+void __lttf2 (void) { abort(); }\n #else\t/* !EXTENDED_FLOAT_STUBS, rest of file */\n \n /* IEEE \"special\" number predicates */"}]}