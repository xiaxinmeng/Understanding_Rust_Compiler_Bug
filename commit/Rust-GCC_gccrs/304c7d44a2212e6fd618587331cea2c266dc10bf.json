{"sha": "304c7d44a2212e6fd618587331cea2c266dc10bf", "node_id": "C_kwDOANBUbNoAKDMwNGM3ZDQ0YTIyMTJlNmZkNjE4NTg3MzMxY2VhMmMyNjZkYzEwYmY", "commit": {"author": {"name": "Costas Argyris", "email": "costas.argyris@gmail.com", "date": "2023-03-26T10:32:13Z"}, "committer": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2023-03-28T08:04:09Z"}, "message": "Extend UTF-8 support to the 32-bit mingw host.\n\nPrevent any name mangling in HOST_EXTRA_OBJS_SYMBOL\nsuch that the linker always finds it by that name.\n\nAlso add the .manifest file as an explicit\ndependency in the make rule such that the\nobject gets re-built if it changes.\n\ngcc/ChangeLog:\n\n\t* config.host: Pull in i386/x-mingw32-utf8 Makefile\n\tfragment and reference utf8rc-mingw32.o explicitly\n\tfor mingw hosts.\n\t* config/i386/sym-mingw32.cc: prevent name mangling of\n\tstub symbol.\n\t* config/i386/x-mingw32-utf8: Make utf8rc-mingw32.o\n\tdepend on manifest file explicitly.\n\nSigned-off-by: Jonathan Yong <10walls@gmail.com>", "tree": {"sha": "2bb9b28b5dd59a640314ad0403de6abec29ea056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bb9b28b5dd59a640314ad0403de6abec29ea056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/304c7d44a2212e6fd618587331cea2c266dc10bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304c7d44a2212e6fd618587331cea2c266dc10bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304c7d44a2212e6fd618587331cea2c266dc10bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304c7d44a2212e6fd618587331cea2c266dc10bf/comments", "author": null, "committer": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b462947dae9f8c0dd7c11165ccfdf6acd6f12a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b462947dae9f8c0dd7c11165ccfdf6acd6f12a1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b462947dae9f8c0dd7c11165ccfdf6acd6f12a1c"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "5df85752ed42cf62f45f82862f2a921a5825f714", "filename": "gcc/config.host", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=304c7d44a2212e6fd618587331cea2c266dc10bf", "patch": "@@ -232,10 +232,11 @@ case ${host} in\n     ;;\n   i[34567]86-*-mingw32*)\n     host_xm_file=i386/xm-mingw32.h\n-    host_xmake_file=\"${host_xmake_file} i386/x-mingw32\"\n+    host_xmake_file=\"${host_xmake_file} i386/x-mingw32 i386/x-mingw32-utf8\"\n     host_exeext=.exe\n     out_host_hook_obj=host-mingw32.o\n-    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o\"\n+    host_extra_objs=\"${host_extra_objs} utf8-mingw32.o\"\n+    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o utf8rc-mingw32.o\"\n     host_lto_plugin_soname=liblto_plugin.dll\n     ;;\n   x86_64-*-mingw*)"}, {"sha": "2f8dee6c1ecd03f7b3311cdbb33b84d2e306b71b", "filename": "gcc/config/i386/sym-mingw32.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc?ref=304c7d44a2212e6fd618587331cea2c266dc10bf", "patch": "@@ -1 +1,3 @@\n-char HOST_EXTRA_OBJS_SYMBOL;\n+/* Prevent any name mangling to make sure that the linker\n+   will always find the symbol. */\n+char HOST_EXTRA_OBJS_SYMBOL asm (\"HOST_EXTRA_OBJS_SYMBOL\");"}, {"sha": "cf5c3db3d8bca97c5fffda01797ccef6074d7b81", "filename": "gcc/config/i386/x-mingw32-utf8", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/304c7d44a2212e6fd618587331cea2c266dc10bf/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8?ref=304c7d44a2212e6fd618587331cea2c266dc10bf", "patch": "@@ -27,7 +27,8 @@\n # The resulting .o file gets added to host_extra_gcc_objs in\n # config.host for x86_64-*-mingw* host and gets linked into\n # the driver as a .o file, so it's lack of symbols is OK.\n-utf8rc-mingw32.o : $(srcdir)/config/i386/utf8-mingw32.rc\n+utf8rc-mingw32.o : $(srcdir)/config/i386/utf8-mingw32.rc \\\n+  $(srcdir)/config/i386/winnt-utf8.manifest\n \t$(WINDRES) $< $@\n \n # Create an object file that just exports the global symbol"}]}