{"sha": "5c822194254910c3a04cf470a9a6469958447c1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4MjIxOTQyNTQ5MTBjM2EwNGNmNDcwYTlhNjQ2OTk1ODQ0N2MxZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-10-19T02:12:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-10-19T02:12:07Z"}, "message": "simplify-rtx.c (simplify_ternary_operation): Simplify (fma (neg a) (neg b) c) and (fma a (neg b) c).\n\n\t * simplify-rtx.c (simplify_ternary_operation) [FMA]: Simplify\n\t(fma (neg a) (neg b) c) and (fma a (neg b) c).\n\nFrom-SVN: r165677", "tree": {"sha": "3565cd8c24aa466a4cd83d5bc718350c9919d8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3565cd8c24aa466a4cd83d5bc718350c9919d8a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c822194254910c3a04cf470a9a6469958447c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c822194254910c3a04cf470a9a6469958447c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c822194254910c3a04cf470a9a6469958447c1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c822194254910c3a04cf470a9a6469958447c1f/comments", "author": null, "committer": null, "parents": [{"sha": "89509419968e2be6c7880a97968f07fab6b0e3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89509419968e2be6c7880a97968f07fab6b0e3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89509419968e2be6c7880a97968f07fab6b0e3b2"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "d044941deedfaa9b55c54a53a06aa0aa82dcbbbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c822194254910c3a04cf470a9a6469958447c1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c822194254910c3a04cf470a9a6469958447c1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c822194254910c3a04cf470a9a6469958447c1f", "patch": "@@ -1,3 +1,8 @@\n+2010-10-18  Richard Henderson  <rth@redhat.com>\n+\n+\t * simplify-rtx.c (simplify_ternary_operation) [FMA]: Simplify\n+\t(fma (neg a) (neg b) c) and (fma a (neg b) c).\n+\n 2010-10-18  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (IX86_BUILTIN_VFMSUBSS, IX86_BUILTIN_VFMSUBSD,"}, {"sha": "e45917f8df39451f1108cd3092fde0957731146a", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c822194254910c3a04cf470a9a6469958447c1f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c822194254910c3a04cf470a9a6469958447c1f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=5c822194254910c3a04cf470a9a6469958447c1f", "patch": "@@ -4705,17 +4705,38 @@ simplify_ternary_operation (enum rtx_code code, enum machine_mode mode,\n \t\t\t    rtx op2)\n {\n   unsigned int width = GET_MODE_BITSIZE (mode);\n+  bool any_change = false;\n+  rtx tem;\n \n   /* VOIDmode means \"infinite\" precision.  */\n   if (width == 0)\n     width = HOST_BITS_PER_WIDE_INT;\n \n   switch (code)\n     {\n-      /* At present, don't simplify fused multiply and add ops, because we need\n-\t to make sure there are no intermediate rounding steps used, and that\n-\t we get the right sign if negative 0 would be returned.  */\n     case FMA:\n+      /* Simplify negations around the multiplication.  */\n+      /* -a * -b + c  =>  a * b + c.  */\n+      if (GET_CODE (op0) == NEG)\n+\t{\n+\t  tem = simplify_unary_operation (NEG, mode, op1, mode);\n+\t  if (tem)\n+\t    op1 = tem, op0 = XEXP (op0, 0), any_change = true;\n+\t}\n+      else if (GET_CODE (op1) == NEG)\n+\t{\n+\t  tem = simplify_unary_operation (NEG, mode, op0, mode);\n+\t  if (tem)\n+\t    op0 = tem, op1 = XEXP (op1, 0), any_change = true;\n+\t}\n+\n+      /* Canonicalize the two multiplication operands.  */\n+      /* a * -b + c  =>  -b * a + c.  */\n+      if (swap_commutative_operands_p (op0, op1))\n+\ttem = op0, op0 = op1, op1 = tem, any_change = true;\n+\n+      if (any_change)\n+\treturn gen_rtx_FMA (mode, op0, op1, op2);\n       return NULL_RTX;\n \n     case SIGN_EXTRACT:"}]}