{"sha": "38ae89187ae6aad83cd77eeccb4ca09be7af8301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhZTg5MTg3YWU2YWFkODNjZDc3ZWVjY2I0Y2EwOWJlN2FmODMwMQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-06-19T14:01:33Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-06-19T14:01:33Z"}, "message": "vst1_lane.c: New file.\n\n2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vst1_lane.c: New file.\n\nFrom-SVN: r224666", "tree": {"sha": "3b58d37d9e60e00f1d83a7c8c75ac708a60be2b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b58d37d9e60e00f1d83a7c8c75ac708a60be2b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ae89187ae6aad83cd77eeccb4ca09be7af8301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ae89187ae6aad83cd77eeccb4ca09be7af8301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ae89187ae6aad83cd77eeccb4ca09be7af8301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ae89187ae6aad83cd77eeccb4ca09be7af8301/comments", "author": null, "committer": null, "parents": [{"sha": "fe175e3434ba880f0749fae76531d1e582424db0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe175e3434ba880f0749fae76531d1e582424db0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe175e3434ba880f0749fae76531d1e582424db0"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "f36deeed994b7a80de071836bd945f86d0adf922", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ae89187ae6aad83cd77eeccb4ca09be7af8301/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ae89187ae6aad83cd77eeccb4ca09be7af8301/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38ae89187ae6aad83cd77eeccb4ca09be7af8301", "patch": "@@ -1,3 +1,7 @@\n+2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst1_lane.c: New file.\n+\n 2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vsra_n.c: New file."}, {"sha": "08583b88cf3705d059e0824b5199ec77739b1b97", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst1_lane.c", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ae89187ae6aad83cd77eeccb4ca09be7af8301/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst1_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ae89187ae6aad83cd77eeccb4ca09be7af8301/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst1_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst1_lane.c?ref=38ae89187ae6aad83cd77eeccb4ca09be7af8301", "patch": "@@ -0,0 +1,93 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xf7, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfff3, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffff1, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xf6, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xfff2, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffffff0, 0x33333333 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0xf6, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0xfff2, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc1700000, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0xff, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xfff5, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffffff1, 0x33333333,\n+\t\t\t\t\t0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xfffffffffffffff1, 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0xfa, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xfff4, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfffffff3, 0x33333333,\n+\t\t\t\t\t 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xfffffffffffffff0,\n+\t\t\t\t\t 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0xfa, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0xfff4, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc1700000, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+#define TEST_MSG \"VST1_LANE/VST1_LANEQ\"\n+void exec_vst1_lane (void)\n+{\n+#define TEST_VST1_LANE(Q, T1, T2, W, N, L)\t\t\\\n+  VECT_VAR(vector, T1, W, N) =\t\t\t\t\\\n+    vld1##Q##_##T2##W(VECT_VAR(buffer, T1, W, N));\t\\\n+  vst1##Q##_lane_##T2##W(VECT_VAR(result, T1, W, N),\t\\\n+\t\t\t VECT_VAR(vector, T1, W, N), L)\n+\n+  DECL_VARIABLE_ALL_VARIANTS(vector);\n+\n+  clean_results ();\n+\n+  /* Choose lane arbitrarily.  */\n+  TEST_VST1_LANE(, int, s, 8, 8, 7);\n+  TEST_VST1_LANE(, int, s, 16, 4, 3);\n+  TEST_VST1_LANE(, int, s, 32, 2, 1);\n+  TEST_VST1_LANE(, int, s, 64, 1, 0);\n+  TEST_VST1_LANE(, uint, u, 8, 8, 6);\n+  TEST_VST1_LANE(, uint, u, 16, 4, 2);\n+  TEST_VST1_LANE(, uint, u, 32, 2, 0);\n+  TEST_VST1_LANE(, uint, u, 64, 1, 0);\n+  TEST_VST1_LANE(, poly, p, 8, 8, 6);\n+  TEST_VST1_LANE(, poly, p, 16, 4, 2);\n+  TEST_VST1_LANE(, float, f, 32, 2, 1);\n+\n+  TEST_VST1_LANE(q, int, s, 8, 16, 15);\n+  TEST_VST1_LANE(q, int, s, 16, 8, 5);\n+  TEST_VST1_LANE(q, int, s, 32, 4, 1);\n+  TEST_VST1_LANE(q, int, s, 64, 2, 1);\n+  TEST_VST1_LANE(q, uint, u, 8, 16, 10);\n+  TEST_VST1_LANE(q, uint, u, 16, 8, 4);\n+  TEST_VST1_LANE(q, uint, u, 32, 4, 3);\n+  TEST_VST1_LANE(q, uint, u, 64, 2, 0);\n+  TEST_VST1_LANE(q, poly, p, 8, 16, 10);\n+  TEST_VST1_LANE(q, poly, p, 16, 8, 4);\n+  TEST_VST1_LANE(q, float, f, 32, 4, 1);\n+\n+  CHECK_RESULTS(TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vst1_lane ();\n+  return 0;\n+}"}]}