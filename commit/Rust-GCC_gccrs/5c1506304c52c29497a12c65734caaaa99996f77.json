{"sha": "5c1506304c52c29497a12c65734caaaa99996f77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxNTA2MzA0YzUyYzI5NDk3YTEyYzY1NzM0Y2FhYWE5OTk5NmY3Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-22T01:33:00Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-22T23:38:41Z"}, "message": "[RS6000] Power10 vec-splati-runnable multiple test failures\n\nFAIL: gcc.target/powerpc/vec-splati-runnable.c 1 blank line(s) in output\nFAIL: gcc.target/powerpc/vec-splati-runnable.c (test for excess errors)\nExcess errors:\nrs6000_emit_xxspltidp_v2df called ...\n\nand running the test fails.  As the comment says\n  /* Although the instruction says the results are not defined, it does seem\n     to work, at least on Mambo.  But no guarentees!  */\nSo the simulator works but not real hardware.\n\ngcc/\n\t* config/rs6000/rs6000.c (rs6000_emit_xxspltidp_v2df): Delete\n\tdebug printf.  Remove trailing \".\\n\" from inform message.\n\tBreak long line.\ngcc/testsuite/\n\t* gcc.target/powerpc/vec-splati-runnable.c: Don't abort on\n\tundefined output.", "tree": {"sha": "691faeab17d159ab008cdc3d11c2f0f6e5ec67bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691faeab17d159ab008cdc3d11c2f0f6e5ec67bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c1506304c52c29497a12c65734caaaa99996f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1506304c52c29497a12c65734caaaa99996f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c1506304c52c29497a12c65734caaaa99996f77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1506304c52c29497a12c65734caaaa99996f77/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a74a0e1a2d4668613bd5913a600ab644402cefd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a74a0e1a2d4668613bd5913a600ab644402cefd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a74a0e1a2d4668613bd5913a600ab644402cefd"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "4978e8b4abf10cbf68c08cc1ebe231fd411a741c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1506304c52c29497a12c65734caaaa99996f77/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1506304c52c29497a12c65734caaaa99996f77/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5c1506304c52c29497a12c65734caaaa99996f77", "patch": "@@ -27047,11 +27047,10 @@ rs6000_const_f32_to_i32 (rtx operand)\n void\n rs6000_emit_xxspltidp_v2df (rtx dst, long value)\n {\n-  printf(\"rs6000_emit_xxspltidp_v2df called %ld\\n\", value);\n-  printf(\"rs6000_emit_xxspltidp_v2df called 0x%lx\\n\", value);\n   if (((value & 0x7F800000) == 0) && ((value & 0x7FFFFF) != 0))\n     inform (input_location,\n-\t    \"the result for the xxspltidp instruction is undefined for subnormal input values.\\n\");\n+\t    \"the result for the xxspltidp instruction \"\n+\t    \"is undefined for subnormal input values\");\n   emit_insn( gen_xxspltidp_v2df_inst (dst, GEN_INT (value)));\n }\n "}, {"sha": "e5a4935644f8b8e75380949a1505df2f4e780c2d", "filename": "gcc/testsuite/gcc.target/powerpc/vec-splati-runnable.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1506304c52c29497a12c65734caaaa99996f77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-splati-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1506304c52c29497a12c65734caaaa99996f77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-splati-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-splati-runnable.c?ref=5c1506304c52c29497a12c65734caaaa99996f77", "patch": "@@ -5,7 +5,7 @@\n \n #define DEBUG 0\n \n-#ifdef DEBUG\n+#if DEBUG\n #include <stdio.h>\n #endif\n \n@@ -100,7 +100,7 @@ main (int argc, char *argv [])\n       printf(\" vresult_d[%i] = %e, expected_vresult_d[%i] = %e\\n\",\n \t     i, vresult_d[i], i, expected_vresult_d[i]);\n #else\n-    abort();\n+    ;\n #endif\n   }\n "}]}