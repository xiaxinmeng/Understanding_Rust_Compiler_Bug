{"sha": "82a71a267ee8a794b34612b666ea989095485f6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJhNzFhMjY3ZWU4YTc5NGIzNDYxMmI2NjZlYTk4OTA5NTQ4NWY2ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-25T19:20:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-25T19:20:59Z"}, "message": "call.c (avoid_sign_compare_warnings): New static function.\n\ncp/:\n\t* call.c (avoid_sign_compare_warnings): New static function.\n\t(build_new_op): Call it.\n\t* typeck.c (cp_build_binary_op): Don't call warn_sign_compare if\n\tTREE_NO_WARNING is set on either operand.\ntestsuite/:\n\t* g++.dg/warn/Wsign-compare-3.C: New testcase.\n\nFrom-SVN: r148952", "tree": {"sha": "d822664648292cfa79d34a59498d4e65fcfefcac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d822664648292cfa79d34a59498d4e65fcfefcac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82a71a267ee8a794b34612b666ea989095485f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a71a267ee8a794b34612b666ea989095485f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a71a267ee8a794b34612b666ea989095485f6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a71a267ee8a794b34612b666ea989095485f6d/comments", "author": null, "committer": null, "parents": [{"sha": "96be7a11070fd121d25f14c8fcc206c98ed63942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96be7a11070fd121d25f14c8fcc206c98ed63942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96be7a11070fd121d25f14c8fcc206c98ed63942"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "7507debff7fabc095c1ee738178caa4ffd464d2e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=82a71a267ee8a794b34612b666ea989095485f6d", "patch": "@@ -1,3 +1,10 @@\n+2009-06-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* call.c (avoid_sign_compare_warnings): New static function.\n+\t(build_new_op): Call it.\n+\t* typeck.c (cp_build_binary_op): Don't call warn_sign_compare if\n+\tTREE_NO_WARNING is set on either operand.\n+\n 2009-06-25  Ian Lance Taylor  <iant@google.com>\n \n \t* g++spec.c (SKIPOPT): define."}, {"sha": "f0d624ed590f5720aa9543526878bf70cad6e462", "filename": "gcc/cp/call.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=82a71a267ee8a794b34612b666ea989095485f6d", "patch": "@@ -4045,10 +4045,32 @@ add_candidates (tree fns, const VEC(tree,gc) *args,\n     }\n }\n \n+/* Even unsigned enum types promote to signed int.  We don't want to\n+   issue -Wsign-compare warnings for this case.  Here ORIG_ARG is the\n+   original argument and ARG is the argument after any conversions\n+   have been applied.  We set TREE_NO_WARNING if we have added a cast\n+   from an unsigned enum type to a signed integer type.  */\n+\n+static void\n+avoid_sign_compare_warnings (tree orig_arg, tree arg)\n+{\n+  if (orig_arg != NULL_TREE\n+      && arg != NULL_TREE\n+      && orig_arg != arg\n+      && TREE_CODE (TREE_TYPE (orig_arg)) == ENUMERAL_TYPE\n+      && TYPE_UNSIGNED (TREE_TYPE (orig_arg))\n+      && INTEGRAL_TYPE_P (TREE_TYPE (arg))\n+      && !TYPE_UNSIGNED (TREE_TYPE (arg)))\n+    TREE_NO_WARNING (arg) = 1;\n+}\n+\n tree\n build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n \t      bool *overloaded_p, tsubst_flags_t complain)\n {\n+  tree orig_arg1 = arg1;\n+  tree orig_arg2 = arg2;\n+  tree orig_arg3 = arg3;\n   struct z_candidate *candidates = 0, *cand;\n   VEC(tree,gc) *arglist;\n   tree fnname;\n@@ -4350,6 +4372,10 @@ build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n     return result;\n \n  builtin:\n+  avoid_sign_compare_warnings (orig_arg1, arg1);\n+  avoid_sign_compare_warnings (orig_arg2, arg2);\n+  avoid_sign_compare_warnings (orig_arg3, arg3);\n+\n   switch (code)\n     {\n     case MODIFY_EXPR:"}, {"sha": "e502021d451bb302a82578166948176aaf1ffb12", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=82a71a267ee8a794b34612b666ea989095485f6d", "patch": "@@ -4018,6 +4018,8 @@ cp_build_binary_op (location_t location,\n \n       if ((short_compare || code == MIN_EXPR || code == MAX_EXPR)\n \t  && warn_sign_compare\n+\t  && !TREE_NO_WARNING (orig_op0)\n+\t  && !TREE_NO_WARNING (orig_op1)\n \t  /* Do not warn until the template is instantiated; we cannot\n \t     bound the ranges of the arguments until that point.  */\n \t  && !processing_template_decl"}, {"sha": "172746f97f7bac1118b75cbbcac03962224c3192", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82a71a267ee8a794b34612b666ea989095485f6d", "patch": "@@ -1,3 +1,7 @@\n+2009-06-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* g++.dg/warn/Wsign-compare-3.C: New testcase.\n+\n 2009-06-25  Ian Lance Taylor  <iant@google.com>\n \n \t* g++.dg/warn/Wunused-16.C: New testcase."}, {"sha": "dc42f41a94e374f45fa587d09aecae48c63d6ca9", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a71a267ee8a794b34612b666ea989095485f6d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-3.C?ref=82a71a267ee8a794b34612b666ea989095485f6d", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-Wsign-compare\" }\n+\n+enum E { A, B, C };\n+extern void f1(int);\n+void\n+f2(E v1, E v2)\n+{\n+  for (unsigned int i = v1; i <= v2; ++i)\n+    f1(i);\n+  for (int i = v1; i <= v2; ++i)\n+    f1(i);\n+}"}]}