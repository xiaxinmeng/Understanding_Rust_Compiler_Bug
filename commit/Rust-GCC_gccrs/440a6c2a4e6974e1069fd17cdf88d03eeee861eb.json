{"sha": "440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQwYTZjMmE0ZTY5NzRlMTA2OWZkMTdjZGY4OGQwM2VlZWU4NjFlYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-13T13:59:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-13T13:59:10Z"}, "message": "parse.y (simple_stmt): If the condition isn't a declaration, start the controlled block after the test.\n\n\t* parse.y (simple_stmt): If the condition isn't a declaration,\n\tstart the controlled block after the test.\n\nFrom-SVN: r17967", "tree": {"sha": "226368aeef98283adf03bec78518c9e29e1b2fac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/226368aeef98283adf03bec78518c9e29e1b2fac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/comments", "author": null, "committer": null, "parents": [{"sha": "442f0a304a747d27fe6cfa6f1501ad3461b0ad47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442f0a304a747d27fe6cfa6f1501ad3461b0ad47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442f0a304a747d27fe6cfa6f1501ad3461b0ad47"}], "stats": {"total": 335, "additions": 188, "deletions": 147}, "files": [{"sha": "bdad01d52af8a851f47065043c7c05f469101300", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "patch": "@@ -1,3 +1,8 @@\n+Fri Feb 13 13:24:32 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* parse.y (simple_stmt): If the condition isn't a declaration, \n+\tstart the controlled block after the test.\n+\n Fri Feb 13 02:26:10 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n \t* call.c (build_over_call): Convert builtin abs, labs and fabs to"}, {"sha": "80ef276edeb0e3da396b1fc9d566653bb8190feb", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 165, "deletions": 147, "changes": 312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "patch": "@@ -673,22 +673,22 @@ static const short yyrline[] = { 0,\n   3420,  3422,  3424,  3426,  3428,  3436,  3438,  3439,  3440,  3443,\n   3451,  3456,  3463,  3465,  3470,  3472,  3475,  3489,  3492,  3495,\n   3504,  3516,  3527,  3547,  3557,  3560,  3568,  3580,  3583,  3586,\n-  3589,  3605,  3608,  3619,  3620,  3624,  3639,  3658,  3670,  3684,\n-  3698,  3711,  3730,  3748,  3767,  3775,  3796,  3814,  3827,  3828,\n-  3831,  3831,  3834,  3834,  3837,  3837,  3843,  3849,  3852,  3857,\n-  3864,  3873,  3882,  3891,  3899,  3912,  3914,  3918,  3920,  3923,\n-  3930,  3933,  3941,  3957,  3968,  3980,  3982,  3985,  3995,  4005,\n-  4016,  4018,  4020,  4023,  4040,  4046,  4054,  4056,  4058,  4062,\n-  4065,  4066,  4074,  4078,  4082,  4085,  4086,  4092,  4095,  4098,\n-  4100,  4104,  4109,  4112,  4122,  4127,  4128,  4136,  4142,  4147,\n-  4151,  4156,  4160,  4164,  4168,  4173,  4184,  4198,  4202,  4205,\n-  4207,  4211,  4215,  4218,  4221,  4223,  4227,  4229,  4236,  4243,\n-  4246,  4249,  4253,  4257,  4263,  4267,  4272,  4274,  4277,  4282,\n-  4288,  4299,  4302,  4304,  4308,  4313,  4315,  4322,  4325,  4327,\n-  4329,  4335,  4340,  4343,  4345,  4347,  4349,  4351,  4353,  4355,\n-  4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,\n-  4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,\n-  4397,  4399,  4401,  4403,  4405,  4408,  4410\n+  3589,  3605,  3608,  3619,  3620,  3624,  3639,  3667,  3679,  3693,\n+  3707,  3720,  3739,  3757,  3785,  3793,  3814,  3832,  3845,  3846,\n+  3849,  3849,  3852,  3852,  3855,  3855,  3861,  3867,  3870,  3875,\n+  3882,  3891,  3900,  3909,  3917,  3930,  3932,  3936,  3938,  3941,\n+  3948,  3951,  3959,  3975,  3986,  3998,  4000,  4003,  4013,  4023,\n+  4034,  4036,  4038,  4041,  4058,  4064,  4072,  4074,  4076,  4080,\n+  4083,  4084,  4092,  4096,  4100,  4103,  4104,  4110,  4113,  4116,\n+  4118,  4122,  4127,  4130,  4140,  4145,  4146,  4154,  4160,  4165,\n+  4169,  4174,  4178,  4182,  4186,  4191,  4202,  4216,  4220,  4223,\n+  4225,  4229,  4233,  4236,  4239,  4241,  4245,  4247,  4254,  4261,\n+  4264,  4267,  4271,  4275,  4281,  4285,  4290,  4292,  4295,  4300,\n+  4306,  4317,  4320,  4322,  4326,  4331,  4333,  4340,  4343,  4345,\n+  4347,  4353,  4358,  4361,  4363,  4365,  4367,  4369,  4371,  4373,\n+  4375,  4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,\n+  4395,  4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,\n+  4415,  4417,  4419,  4421,  4423,  4426,  4428\n };\n #endif\n \n@@ -7479,10 +7479,19 @@ case 687:\n \t\t      emit_line_note (input_filename, lineno);\n \t\t      expand_exit_loop_if_false (0, yyvsp[0].ttype);\n \t\t    }\n+\n+\t\t  /* If the condition wasn't a declaration, clear out the\n+\t\t     block we made for it and start a new one here so the\n+\t\t     optimization in expand_end_loop will work.  */\n+\t\t  if (TREE_CODE (yyvsp[0].ttype) != VAR_DECL)\n+\t\t    {\n+\t\t      do_poplevel ();\n+\t\t      do_pushlevel ();\n+\t\t    }\n \t\t;\n     break;}\n case 688:\n-#line 3659 \"parse.y\"\n+#line 3668 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7496,7 +7505,7 @@ case 688:\n \t\t;\n     break;}\n case 689:\n-#line 3671 \"parse.y\"\n+#line 3680 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7512,7 +7521,7 @@ case 689:\n \t\t;\n     break;}\n case 690:\n-#line 3685 \"parse.y\"\n+#line 3694 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7528,7 +7537,7 @@ case 690:\n \t\t;\n     break;}\n case 691:\n-#line 3699 \"parse.y\"\n+#line 3708 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-5].ttype, 1) = yyvsp[-1].ttype;\n@@ -7543,7 +7552,7 @@ case 691:\n \t\t;\n     break;}\n case 692:\n-#line 3712 \"parse.y\"\n+#line 3721 \"parse.y\"\n { if (processing_template_decl)\n \t\t    {\n \t\t      yyval.ttype = build_min_nt (FOR_STMT, NULL_TREE, NULL_TREE, \n@@ -7564,7 +7573,7 @@ case 692:\n \t\t;\n     break;}\n case 693:\n-#line 3731 \"parse.y\"\n+#line 3740 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7584,7 +7593,7 @@ case 693:\n \t\t;\n     break;}\n case 694:\n-#line 3749 \"parse.y\"\n+#line 3758 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7602,18 +7611,27 @@ case 694:\n \t\t      emit_line_note (input_filename, lineno);\n \t\t      if (yyvsp[-1].ttype) expand_exit_loop_if_false (0, yyvsp[-1].ttype);\n \t\t    }\n+\n+\t\t  /* If the condition wasn't a declaration, clear out the\n+\t\t     block we made for it and start a new one here so the\n+\t\t     optimization in expand_end_loop will work.  */\n+\t\t  if (yyvsp[-1].ttype == NULL_TREE || TREE_CODE (yyvsp[-1].ttype) != VAR_DECL)\n+\t\t    {\n+\t\t      do_poplevel ();\n+\t\t      do_pushlevel ();\n+\t\t    }\n \t\t;\n     break;}\n case 695:\n-#line 3770 \"parse.y\"\n+#line 3788 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    TREE_OPERAND (yyvsp[-9].ttype, 2) = yyvsp[-1].ttype;\n \t\t  push_momentary ();\n \t\t;\n     break;}\n case 696:\n-#line 3776 \"parse.y\"\n+#line 3794 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7636,7 +7654,7 @@ case 696:\n \t\t  finish_stmt (); ;\n     break;}\n case 697:\n-#line 3797 \"parse.y\"\n+#line 3815 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7655,7 +7673,7 @@ case 697:\n \t\t;\n     break;}\n case 698:\n-#line 3814 \"parse.y\"\n+#line 3832 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7670,59 +7688,59 @@ case 698:\n \t\t;\n     break;}\n case 699:\n-#line 3827 \"parse.y\"\n+#line 3845 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 700:\n-#line 3829 \"parse.y\"\n+#line 3847 \"parse.y\"\n { do_case (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 702:\n-#line 3832 \"parse.y\"\n+#line 3850 \"parse.y\"\n { do_case (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 704:\n-#line 3835 \"parse.y\"\n+#line 3853 \"parse.y\"\n { do_case (NULL_TREE, NULL_TREE); ;\n     break;}\n case 706:\n-#line 3838 \"parse.y\"\n+#line 3856 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (BREAK_STMT));\n \t\t  else if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 707:\n-#line 3844 \"parse.y\"\n+#line 3862 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (CONTINUE_STMT));\n \t\t  else if (! expand_continue_loop (0))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 708:\n-#line 3850 \"parse.y\"\n+#line 3868 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 709:\n-#line 3853 \"parse.y\"\n+#line 3871 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 710:\n-#line 3858 \"parse.y\"\n+#line 3876 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-2].ttype)) yyvsp[-2].ttype = combine_strings (yyvsp[-2].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  expand_asm (yyvsp[-2].ttype);\n \t\t  finish_stmt ();\n \t\t;\n     break;}\n case 711:\n-#line 3865 \"parse.y\"\n+#line 3883 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-4].ttype)) yyvsp[-4].ttype = combine_strings (yyvsp[-4].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n@@ -7732,7 +7750,7 @@ case 711:\n \t\t;\n     break;}\n case 712:\n-#line 3874 \"parse.y\"\n+#line 3892 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-6].ttype)) yyvsp[-6].ttype = combine_strings (yyvsp[-6].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n@@ -7742,7 +7760,7 @@ case 712:\n \t\t;\n     break;}\n case 713:\n-#line 3884 \"parse.y\"\n+#line 3902 \"parse.y\"\n { if (TREE_CHAIN (yyvsp[-8].ttype)) yyvsp[-8].ttype = combine_strings (yyvsp[-8].ttype);\n \t\t  emit_line_note (input_filename, lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n@@ -7752,7 +7770,7 @@ case 713:\n \t\t;\n     break;}\n case 714:\n-#line 3892 \"parse.y\"\n+#line 3910 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7762,7 +7780,7 @@ case 714:\n \t\t;\n     break;}\n case 715:\n-#line 3900 \"parse.y\"\n+#line 3918 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    add_tree (build_min_nt (GOTO_STMT, yyvsp[-1].ttype));\n@@ -7777,33 +7795,33 @@ case 715:\n \t\t;\n     break;}\n case 716:\n-#line 3913 \"parse.y\"\n+#line 3931 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 717:\n-#line 3915 \"parse.y\"\n+#line 3933 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 718:\n-#line 3919 \"parse.y\"\n+#line 3937 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 720:\n-#line 3925 \"parse.y\"\n+#line 3943 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 721:\n-#line 3931 \"parse.y\"\n+#line 3949 \"parse.y\"\n { expand_start_all_catch (); ;\n     break;}\n case 722:\n-#line 3933 \"parse.y\"\n+#line 3951 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7812,7 +7830,7 @@ case 722:\n \t\t;\n     break;}\n case 723:\n-#line 3943 \"parse.y\"\n+#line 3961 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7828,7 +7846,7 @@ case 723:\n \t\t;\n     break;}\n case 724:\n-#line 3957 \"parse.y\"\n+#line 3975 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7841,7 +7859,7 @@ case 724:\n \t\t;\n     break;}\n case 725:\n-#line 3968 \"parse.y\"\n+#line 3986 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7854,7 +7872,7 @@ case 725:\n \t\t;\n     break;}\n case 728:\n-#line 3987 \"parse.y\"\n+#line 4005 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7865,7 +7883,7 @@ case 728:\n \t\t;\n     break;}\n case 729:\n-#line 3996 \"parse.y\"\n+#line 4014 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7876,7 +7894,7 @@ case 729:\n \t\t;\n     break;}\n case 730:\n-#line 4005 \"parse.y\"\n+#line 4023 \"parse.y\"\n {\n \t\t  if (processing_template_decl)\n \t\t    {\n@@ -7889,17 +7907,17 @@ case 730:\n \t\t;\n     break;}\n case 734:\n-#line 4025 \"parse.y\"\n+#line 4043 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 735:\n-#line 4041 \"parse.y\"\n+#line 4059 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 736:\n-#line 4048 \"parse.y\"\n+#line 4066 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7908,129 +7926,129 @@ case 736:\n \t\t;\n     break;}\n case 737:\n-#line 4055 \"parse.y\"\n+#line 4073 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 738:\n-#line 4057 \"parse.y\"\n+#line 4075 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 739:\n-#line 4059 \"parse.y\"\n+#line 4077 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 740:\n-#line 4064 \"parse.y\"\n+#line 4082 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 742:\n-#line 4067 \"parse.y\"\n+#line 4085 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 743:\n-#line 4076 \"parse.y\"\n+#line 4094 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 744:\n-#line 4079 \"parse.y\"\n+#line 4097 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 745:\n-#line 4084 \"parse.y\"\n+#line 4102 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 747:\n-#line 4087 \"parse.y\"\n+#line 4105 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 748:\n-#line 4094 \"parse.y\"\n+#line 4112 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 751:\n-#line 4101 \"parse.y\"\n+#line 4119 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 752:\n-#line 4106 \"parse.y\"\n+#line 4124 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 753:\n-#line 4111 \"parse.y\"\n+#line 4129 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 754:\n-#line 4113 \"parse.y\"\n+#line 4131 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 755:\n-#line 4124 \"parse.y\"\n+#line 4142 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 757:\n-#line 4129 \"parse.y\"\n+#line 4147 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ftype.t, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1; \n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 758:\n-#line 4138 \"parse.y\"\n+#line 4156 \"parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyval.ttype, void_list_node);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 759:\n-#line 4143 \"parse.y\"\n+#line 4161 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 760:\n-#line 4148 \"parse.y\"\n+#line 4166 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 761:\n-#line 4152 \"parse.y\"\n+#line 4170 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); \n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 762:\n-#line 4157 \"parse.y\"\n+#line 4175 \"parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 763:\n-#line 4161 \"parse.y\"\n+#line 4179 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 764:\n-#line 4165 \"parse.y\"\n+#line 4183 \"parse.y\"\n {\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 765:\n-#line 4169 \"parse.y\"\n+#line 4187 \"parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t);\n \t\t  TREE_PARMLIST (yyval.ttype) = 1;\n \t\t;\n     break;}\n case 766:\n-#line 4174 \"parse.y\"\n+#line 4192 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8043,7 +8061,7 @@ case 766:\n \t\t;\n     break;}\n case 767:\n-#line 4185 \"parse.y\"\n+#line 4203 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -8056,98 +8074,98 @@ case 767:\n \t\t;\n     break;}\n case 768:\n-#line 4200 \"parse.y\"\n+#line 4218 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 769:\n-#line 4202 \"parse.y\"\n+#line 4220 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 772:\n-#line 4213 \"parse.y\"\n+#line 4231 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 773:\n-#line 4216 \"parse.y\"\n+#line 4234 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 774:\n-#line 4219 \"parse.y\"\n+#line 4237 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 775:\n-#line 4222 \"parse.y\"\n+#line 4240 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 776:\n-#line 4224 \"parse.y\"\n+#line 4242 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 778:\n-#line 4230 \"parse.y\"\n+#line 4248 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 779:\n-#line 4240 \"parse.y\"\n+#line 4258 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 780:\n-#line 4244 \"parse.y\"\n+#line 4262 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 781:\n-#line 4247 \"parse.y\"\n+#line 4265 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 782:\n-#line 4250 \"parse.y\"\n+#line 4268 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 783:\n-#line 4254 \"parse.y\"\n+#line 4272 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 784:\n-#line 4258 \"parse.y\"\n+#line 4276 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 785:\n-#line 4265 \"parse.y\"\n+#line 4283 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 786:\n-#line 4268 \"parse.y\"\n+#line 4286 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 789:\n-#line 4279 \"parse.y\"\n+#line 4297 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 790:\n-#line 4284 \"parse.y\"\n+#line 4302 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 791:\n-#line 4289 \"parse.y\"\n+#line 4307 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -8158,188 +8176,188 @@ case 791:\n \t\t;\n     break;}\n case 792:\n-#line 4301 \"parse.y\"\n+#line 4319 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 793:\n-#line 4303 \"parse.y\"\n+#line 4321 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 794:\n-#line 4305 \"parse.y\"\n+#line 4323 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 795:\n-#line 4310 \"parse.y\"\n+#line 4328 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 797:\n-#line 4316 \"parse.y\"\n+#line 4334 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 798:\n-#line 4324 \"parse.y\"\n+#line 4342 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 799:\n-#line 4326 \"parse.y\"\n+#line 4344 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 800:\n-#line 4328 \"parse.y\"\n+#line 4346 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 801:\n-#line 4330 \"parse.y\"\n+#line 4348 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 802:\n-#line 4337 \"parse.y\"\n+#line 4355 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 803:\n-#line 4342 \"parse.y\"\n+#line 4360 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 804:\n-#line 4344 \"parse.y\"\n+#line 4362 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 805:\n-#line 4346 \"parse.y\"\n+#line 4364 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 806:\n-#line 4348 \"parse.y\"\n+#line 4366 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 807:\n-#line 4350 \"parse.y\"\n+#line 4368 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 808:\n-#line 4352 \"parse.y\"\n+#line 4370 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 809:\n-#line 4354 \"parse.y\"\n+#line 4372 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 810:\n-#line 4356 \"parse.y\"\n+#line 4374 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 811:\n-#line 4358 \"parse.y\"\n+#line 4376 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 812:\n-#line 4360 \"parse.y\"\n+#line 4378 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 813:\n-#line 4362 \"parse.y\"\n+#line 4380 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 814:\n-#line 4364 \"parse.y\"\n+#line 4382 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 815:\n-#line 4366 \"parse.y\"\n+#line 4384 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 816:\n-#line 4368 \"parse.y\"\n+#line 4386 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 817:\n-#line 4370 \"parse.y\"\n+#line 4388 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 818:\n-#line 4372 \"parse.y\"\n+#line 4390 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 819:\n-#line 4374 \"parse.y\"\n+#line 4392 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 820:\n-#line 4376 \"parse.y\"\n+#line 4394 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 821:\n-#line 4378 \"parse.y\"\n+#line 4396 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 822:\n-#line 4380 \"parse.y\"\n+#line 4398 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 823:\n-#line 4382 \"parse.y\"\n+#line 4400 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 824:\n-#line 4384 \"parse.y\"\n+#line 4402 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 825:\n-#line 4386 \"parse.y\"\n+#line 4404 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 826:\n-#line 4388 \"parse.y\"\n+#line 4406 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 827:\n-#line 4390 \"parse.y\"\n+#line 4408 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 828:\n-#line 4392 \"parse.y\"\n+#line 4410 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 829:\n-#line 4394 \"parse.y\"\n+#line 4412 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 830:\n-#line 4396 \"parse.y\"\n+#line 4414 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 831:\n-#line 4398 \"parse.y\"\n+#line 4416 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 832:\n-#line 4400 \"parse.y\"\n+#line 4418 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 833:\n-#line 4402 \"parse.y\"\n+#line 4420 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 834:\n-#line 4404 \"parse.y\"\n+#line 4422 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 835:\n-#line 4406 \"parse.y\"\n+#line 4424 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 836:\n-#line 4409 \"parse.y\"\n+#line 4427 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 837:\n-#line 4411 \"parse.y\"\n+#line 4429 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8540,7 +8558,7 @@ case 837:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 4414 \"parse.y\"\n+#line 4432 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "edc6cf7982b381e6d6119f51cd7516085c11f554", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440a6c2a4e6974e1069fd17cdf88d03eeee861eb/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=440a6c2a4e6974e1069fd17cdf88d03eeee861eb", "patch": "@@ -3654,6 +3654,15 @@ simple_stmt:\n \t\t      emit_line_note (input_filename, lineno);\n \t\t      expand_exit_loop_if_false (0, $4);\n \t\t    }\n+\n+\t\t  /* If the condition wasn't a declaration, clear out the\n+\t\t     block we made for it and start a new one here so the\n+\t\t     optimization in expand_end_loop will work.  */\n+\t\t  if (TREE_CODE ($4) != VAR_DECL)\n+\t\t    {\n+\t\t      do_poplevel ();\n+\t\t      do_pushlevel ();\n+\t\t    }\n \t\t}\n \t  already_scoped_stmt .poplevel\n \t\t{\n@@ -3763,6 +3772,15 @@ simple_stmt:\n \t\t      emit_line_note (input_filename, lineno);\n \t\t      if ($7) expand_exit_loop_if_false (0, $7);\n \t\t    }\n+\n+\t\t  /* If the condition wasn't a declaration, clear out the\n+\t\t     block we made for it and start a new one here so the\n+\t\t     optimization in expand_end_loop will work.  */\n+\t\t  if ($7 == NULL_TREE || TREE_CODE ($7) != VAR_DECL)\n+\t\t    {\n+\t\t      do_poplevel ();\n+\t\t      do_pushlevel ();\n+\t\t    }\n \t\t}\n \t  xexpr ')'\n \t\t/* Don't let the tree nodes for $10 be discarded"}]}