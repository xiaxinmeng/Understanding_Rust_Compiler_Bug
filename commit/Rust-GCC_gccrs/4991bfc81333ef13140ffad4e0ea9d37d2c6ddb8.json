{"sha": "4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5MWJmYzgxMzMzZWYxMzE0MGZmYWQ0ZTBlYTlkMzdkMmM2ZGRiOA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-04-23T07:53:55Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-23T07:53:55Z"}, "message": "20020919-1.c (loc_size_t): New type.\n\n2008-04-23  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* gcc.dg/20020919-1.c (loc_size_t): New type.\n\t(_dl_stat): Use loc_size_t to cast pointers.\n\t* gcc.c-torture/compile/20010327-1.c: Skip for x86_64-*-mingw*.\n\nFrom-SVN: r134583", "tree": {"sha": "1545230184fb08c646085191282ea45b40d29aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1545230184fb08c646085191282ea45b40d29aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/comments", "author": null, "committer": null, "parents": [{"sha": "d7066497b039e9cc5dff72b21d5b0986651ff521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7066497b039e9cc5dff72b21d5b0986651ff521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7066497b039e9cc5dff72b21d5b0986651ff521"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "9493fef2e55e7ded595acaa7dd74eba12b1a2b4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "patch": "@@ -1,3 +1,9 @@\n+2008-04-23  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* gcc.dg/20020919-1.c (loc_size_t): New type.\n+\t(_dl_stat): Use loc_size_t to cast pointers.\n+\t* gcc.c-torture/compile/20010327-1.c: Skip for x86_64-*-mingw*.\n+\n 2008-04-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/35988"}, {"sha": "f20e3a3e2dc9bf1a0b7a79287bd2cf99ee0eee37", "filename": "gcc/testsuite/gcc.c-torture/compile/20010327-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c?ref=4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-skip-if \"non-SI pointers\" { m32c-*-* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"HI mode pointer for avr\" { \"avr-*-*\" } { \"*\" } { \"\" } } */ \n+/* { dg-skip-if \"non-SI pointers for w64\" { \"x86_64-*-mingw*\" } { \"*\" } { \"\" } } */ \n \n /* This testcase tests whether GCC can produce static initialized data\n    that references addresses of size 'unsigned long', even if that's not"}, {"sha": "15519bef7b4cd180ef7dcc733230aac3f67654d9", "filename": "gcc/testsuite/gcc.dg/20020919-1.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c?ref=4991bfc81333ef13140ffad4e0ea9d37d2c6ddb8", "patch": "@@ -237,12 +237,18 @@ bazllb (long long llp)\n \n /* Real-world example of bug.  */\n \n+#ifdef _WIN64\n+typedef unsigned int loc_size_t __attribute__ ((mode (DI)));\n+#else\n+typedef __SIZE_TYPE__ loc_size_t;\n+#endif\n+\n struct stat;\n int\n _dl_stat (const char *file_name, struct stat *buf)\n {\n-  register long a asm (REG1) = (long) file_name;\n-  register long b asm (REG2) = (long) buf;\n+  register long a asm (REG1) = (long) (loc_size_t) file_name;\n+  register long b asm (REG2) = (long) (loc_size_t) buf;\n \n   asm volatile (\"movu.w %1,$r9\\n\\tbreak 13\" : \"=r\" (a) : \"g\" (106), \"0\" (a), \"r\" (b) : REG1, REG5); /* { dg-error \"conflict\" } */\n   if (a >= 0)"}]}