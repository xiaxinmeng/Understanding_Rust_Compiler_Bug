{"sha": "37ad0fc9425515ab827275428a107911f512b29f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhZDBmYzk0MjU1MTVhYjgyNzI3NTQyOGExMDc5MTFmNTEyYjI5Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-30T10:14:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-30T10:14:06Z"}, "message": "Update documentation of implementation-defined library features\n\n\t* doc/xml/manual/status_cxx2011.xml: Use <variablelist> for\n\tdocumentation of implementation-defined types for [thread.req.native].\n\t* doc/xml/manual/status_cxx2017.xml: Update documentation of\n\timplementation-defined strings for [variant.bad.access]. Fix typo in\n\tdocumentation of implementation-defined support for [fs.conform.9945].\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r271773", "tree": {"sha": "af4e4a795db8fa3646a9acda661944a969a758c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af4e4a795db8fa3646a9acda661944a969a758c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ad0fc9425515ab827275428a107911f512b29f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ad0fc9425515ab827275428a107911f512b29f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ad0fc9425515ab827275428a107911f512b29f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ad0fc9425515ab827275428a107911f512b29f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02fac2442eaa64ef390fc1e496b0ab5c9b434a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02fac2442eaa64ef390fc1e496b0ab5c9b434a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02fac2442eaa64ef390fc1e496b0ab5c9b434a96"}], "stats": {"total": 91, "additions": 60, "deletions": 31}, "files": [{"sha": "0618f8d84ae3f86a220bee604a72f9a56cbaa62c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=37ad0fc9425515ab827275428a107911f512b29f", "patch": "@@ -1,3 +1,12 @@\n+2019-05-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2011.xml: Use <variablelist> for\n+\tdocumentation of implementation-defined types for [thread.req.native].\n+\t* doc/xml/manual/status_cxx2017.xml: Update documentation of\n+\timplementation-defined strings for [variant.bad.access]. Fix typo in\n+\tdocumentation of implementation-defined support for [fs.conform.9945].\n+\t* doc/html/*: Regenerate.\n+\n 2019-05-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/85494"}, {"sha": "51b9860c8449f1b4e0ce2493c0667fe917573fb2", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=37ad0fc9425515ab827275428a107911f512b29f", "patch": "@@ -374,26 +374,25 @@\n       is subject to change at any time. Any use of\n       <code class=\"classname\">native_handle</code> is inherently non-portable and\n       not guaranteed to work between major releases of GCC.\n-      </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"classname\">thread</code>: The native handle type is\n-            a typedef for <code class=\"code\">__gthread_t</code> i.e. <code class=\"code\">pthread_t</code>\n-            when GCC is configured with the <code class=\"literal\">posix</code> thread\n-            model. The value of the native handle is undefined for a thread\n+      </p><div class=\"variablelist\"><dl class=\"variablelist\"><dt><span class=\"term\"><code class=\"classname\">thread</code></span></dt><dd>\n+            The native handle type is a typedef for <code class=\"code\">__gthread_t</code>\n+            i.e. <code class=\"code\">pthread_t</code> when GCC is configured with the\n+            <code class=\"literal\">posix</code> thread model.\n+            The value of the native handle is undefined for a thread\n             which is not joinable.\n-         </p></li><li class=\"listitem\"><p><code class=\"classname\">mutex</code> and\n-            <code class=\"classname\">timed_mutex</code>:\n+         </dd><dt><span class=\"term\"><code class=\"classname\">mutex</code>, </span><span class=\"term\"><code class=\"classname\">timed_mutex</code></span></dt><dd>\n             The native handle type is <code class=\"code\">__gthread_mutex_t*</code> i.e.\n             <code class=\"code\">pthread_mutex_t*</code> for the <code class=\"literal\">posix</code>\n             thread model.\n-         </p></li><li class=\"listitem\"><p><code class=\"classname\">recursive_mutex</code> and\n-         <code class=\"classname\">recursive_timed_mutex</code>:\n+         </dd><dt><span class=\"term\"><code class=\"classname\">recursive_mutex</code>, </span><span class=\"term\"><code class=\"classname\">recursive_timed_mutex</code></span></dt><dd>\n             The native handle type is <code class=\"code\">__gthread_recursive_mutex_t*</code>\n             i.e. <code class=\"code\">pthread_mutex_t*</code> for the <code class=\"literal\">posix</code>\n             thread model.\n-         </p></li><li class=\"listitem\"><p><code class=\"classname\">condition_variable</code>: The native\n-            handle type is <code class=\"code\">__gthread_cond_t*</code> i.e.\n+         </dd><dt><span class=\"term\"><code class=\"classname\">condition_variable</code></span></dt><dd>\n+            The native handle type is <code class=\"code\">__gthread_cond_t*</code> i.e.\n             <code class=\"code\">pthread_cond_t*</code> for the <code class=\"literal\">posix</code>\n             thread model.\n-         </p></li></ul></div><p>\n+         </dd></dl></div><p>\n    </p><p>\n       <span class=\"emphasis\"><em>30.6.1 [futures.overview]/2</em></span>\n       <code class=\"code\">launch</code> is a scoped enumeration type with\n@@ -945,7 +944,11 @@\n       <code class=\"classname\">variant</code> supports over-aligned types.\n    </p><p>\n       <span class=\"emphasis\"><em>23.7.10 [variant.bad.access]</em></span>\n-      <code class=\"code\">what()</code> returns <code class=\"literal\">\"Unexpected index\"</code>.\n+      <code class=\"code\">what()</code> returns one of the strings\n+      <code class=\"literal\">\"std::get: variant is valueless\"</code>,\n+      <code class=\"literal\">\"std::get: wrong index for variant\"</code>,\n+      <code class=\"literal\">\"std::visit: variant is valueless\"</code>,\n+      or <code class=\"literal\">\"std::visit&lt;R&gt;: variant is valueless\"</code>.\n    </p><p>\n       <span class=\"emphasis\"><em>23.12.5.2 [memory.resource.pool.options]</em></span>\n       Let S equal <code class=\"code\">numeric_limits&lt;size_t&gt;::digits</code>.\n@@ -998,7 +1001,7 @@\n    </p><p>\n       <span class=\"emphasis\"><em>30.10.2.1 [fs.conform.9945]</em></span>\n       The behavior of the filesystem library implementation will depend on\n-      the target operating system. Some features will not be not supported\n+      the target operating system. Some features will not be supported\n       on some targets.\n    </p><p>\n       <span class=\"emphasis\"><em>30.10.5 [fs.filesystem.syn]</em></span>"}, {"sha": "6f3551ff65dc8b3d23308b3d312cd5d34485eaeb", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2011.xml", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml?ref=37ad0fc9425515ab827275428a107911f512b29f", "patch": "@@ -2793,31 +2793,44 @@ particular release.\n       is subject to change at any time. Any use of\n       <classname>native_handle</classname> is inherently non-portable and\n       not guaranteed to work between major releases of GCC.\n-      <itemizedlist>\n-         <listitem><para><classname>thread</classname>: The native handle type is\n-            a typedef for <code>__gthread_t</code> i.e. <code>pthread_t</code>\n-            when GCC is configured with the <literal>posix</literal> thread\n-            model. The value of the native handle is undefined for a thread\n+      <variablelist>\n+      <varlistentry>\n+         <term><classname>thread</classname></term>\n+         <listitem>\n+            The native handle type is a typedef for <code>__gthread_t</code>\n+            i.e. <code>pthread_t</code> when GCC is configured with the\n+            <literal>posix</literal> thread model.\n+            The value of the native handle is undefined for a thread\n             which is not joinable.\n-         </para></listitem>\n-         <listitem><para><classname>mutex</classname> and\n-            <classname>timed_mutex</classname>:\n+         </listitem>\n+      </varlistentry>\n+      <varlistentry>\n+         <term><classname>mutex</classname></term>\n+         <term><classname>timed_mutex</classname></term>\n+         <listitem>\n             The native handle type is <code>__gthread_mutex_t*</code> i.e.\n             <code>pthread_mutex_t*</code> for the <literal>posix</literal>\n             thread model.\n-         </para></listitem>\n-         <listitem><para><classname>recursive_mutex</classname> and\n-         <classname>recursive_timed_mutex</classname>:\n+         </listitem>\n+      </varlistentry>\n+      <varlistentry>\n+         <term><classname>recursive_mutex</classname></term>\n+         <term><classname>recursive_timed_mutex</classname></term>\n+         <listitem>\n             The native handle type is <code>__gthread_recursive_mutex_t*</code>\n             i.e. <code>pthread_mutex_t*</code> for the <literal>posix</literal>\n             thread model.\n-         </para></listitem>\n-         <listitem><para><classname>condition_variable</classname>: The native\n-            handle type is <code>__gthread_cond_t*</code> i.e.\n+         </listitem>\n+      </varlistentry>\n+      <varlistentry>\n+         <term><classname>condition_variable</classname></term>\n+         <listitem>\n+            The native handle type is <code>__gthread_cond_t*</code> i.e.\n             <code>pthread_cond_t*</code> for the <literal>posix</literal>\n             thread model.\n-         </para></listitem>\n-      </itemizedlist>\n+         </listitem>\n+      </varlistentry>\n+      </variablelist>\n    </para>\n \n    <para>"}, {"sha": "9aba079c251cdc8f5567a35280342ef8b7ebb8a6", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad0fc9425515ab827275428a107911f512b29f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=37ad0fc9425515ab827275428a107911f512b29f", "patch": "@@ -1043,7 +1043,11 @@ and test for <code>__STDCPP_MATH_SPEC_FUNCS__ >= 201003L</code>.\n \n    <para>\n       <emphasis>23.7.10 [variant.bad.access]</emphasis>\n-      <code>what()</code> returns <literal>\"Unexpected index\"</literal>.\n+      <code>what()</code> returns one of the strings\n+      <literal>\"std::get: variant is valueless\"</literal>,\n+      <literal>\"std::get: wrong index for variant\"</literal>,\n+      <literal>\"std::visit: variant is valueless\"</literal>,\n+      or <literal>\"std::visit&lt;R&gt;: variant is valueless\"</literal>.\n    </para>\n \n    <para>\n@@ -1117,7 +1121,7 @@ and test for <code>__STDCPP_MATH_SPEC_FUNCS__ >= 201003L</code>.\n    <para>\n       <emphasis>30.10.2.1 [fs.conform.9945]</emphasis>\n       The behavior of the filesystem library implementation will depend on\n-      the target operating system. Some features will not be not supported\n+      the target operating system. Some features will not be supported\n       on some targets.\n    </para>\n "}]}