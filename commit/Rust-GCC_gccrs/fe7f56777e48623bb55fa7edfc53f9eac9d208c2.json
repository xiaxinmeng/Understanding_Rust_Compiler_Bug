{"sha": "fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3ZjU2Nzc3ZTQ4NjIzYmI1NWZhN2VkZmM1M2Y5ZWFjOWQyMDhjMg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-12-10T22:46:15Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-12-10T22:46:15Z"}, "message": "rs6000.h (processor_type): Add PPC405.\n\n\t* rs6000.h (processor_type): Add PPC405.\n\t(RTX_COSTS): Add PPC405.  Correct rs64 and ppc630 multiply costs.\n\t* rs6000.md: Add PPC405 information.  Utilize imul2 and imul3 for\n\trios1, rs64, and ppc630 processors.\n\nFrom-SVN: r47853", "tree": {"sha": "33f1dcdf99645f1a423905b1b632e3ba31defc84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f1dcdf99645f1a423905b1b632e3ba31defc84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/comments", "author": null, "committer": null, "parents": [{"sha": "864962bd13d3c56213579ce9676b3c5d8ff11ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864962bd13d3c56213579ce9676b3c5d8ff11ff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864962bd13d3c56213579ce9676b3c5d8ff11ff4"}], "stats": {"total": 95, "additions": 78, "deletions": 17}, "files": [{"sha": "a862ed7a866760b07c058b5b84e081d8c7a5b294", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "patch": "@@ -1,3 +1,10 @@\n+2001-12-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* rs6000.h (processor_type): Add PPC405.\n+\t(RTX_COSTS): Add PPC405.  Correct rs64 and ppc630 multiply costs.\n+\t* rs6000.md: Add PPC405 information.  Utilize imul2 and imul3 for\n+\trios1, rs64, and ppc630 processors.\n+\n 2001-12-10  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.md (unaligned_extendhidi): Call gen_lowpart"}, {"sha": "627766ab55bdede37384bdf91124387c0a1d048d", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "patch": "@@ -382,6 +382,7 @@ enum processor_type\n    PROCESSOR_RS64A,\n    PROCESSOR_MPCCORE,\n    PROCESSOR_PPC403,\n+   PROCESSOR_PPC405,\n    PROCESSOR_PPC601,\n    PROCESSOR_PPC603,\n    PROCESSOR_PPC604,\n@@ -2306,6 +2307,7 @@ do {\t\t\t\t\t\t\t\t\t     \\\n     switch (rs6000_cpu)\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n       case PROCESSOR_RIOS1:\t\t\t\t\t\t\\\n+      case PROCESSOR_PPC405:\t\t\t\t\t\t\\\n         return (GET_CODE (XEXP (X, 1)) != CONST_INT\t\t\t\\\n \t\t? COSTS_N_INSNS (5)\t\t\t\t\t\\\n \t\t: INTVAL (XEXP (X, 1)) >= -256 && INTVAL (XEXP (X, 1)) <= 255 \\\n@@ -2315,7 +2317,7 @@ do {\t\t\t\t\t\t\t\t\t     \\\n \t\t? GET_MODE (XEXP (X, 1)) != DImode\t\t\t\\\n \t\t? COSTS_N_INSNS (20) : COSTS_N_INSNS (34)\t\t\\\n \t\t: INTVAL (XEXP (X, 1)) >= -256 && INTVAL (XEXP (X, 1)) <= 255 \\\n-\t\t? COSTS_N_INSNS (12) : COSTS_N_INSNS (14));\t\t\\\n+\t\t? COSTS_N_INSNS (8) : COSTS_N_INSNS (12));\t\t\\\n       case PROCESSOR_RIOS2:\t\t\t\t\t\t\\\n       case PROCESSOR_MPCCORE:\t\t\t\t\t\t\\\n       case PROCESSOR_PPC604e:\t\t\t\t\t\t\\\n@@ -2337,7 +2339,7 @@ do {\t\t\t\t\t\t\t\t\t     \\\n       case PROCESSOR_PPC630:\t\t\t\t\t\t\\\n         return (GET_CODE (XEXP (X, 1)) != CONST_INT\t\t\t\\\n \t\t? GET_MODE (XEXP (X, 1)) != DImode\t\t\t\\\n-\t\t? COSTS_N_INSNS (4) : COSTS_N_INSNS (7)\t\t\t\\\n+\t\t? COSTS_N_INSNS (5) : COSTS_N_INSNS (7)\t\t\t\\\n \t\t: INTVAL (XEXP (X, 1)) >= -256 && INTVAL (XEXP (X, 1)) <= 255 \\\n \t\t? COSTS_N_INSNS (3) : COSTS_N_INSNS (4));\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n@@ -2363,6 +2365,8 @@ do {\t\t\t\t\t\t\t\t\t     \\\n \treturn COSTS_N_INSNS (6);\t\t\t\t\t\\\n       case PROCESSOR_PPC403:\t\t\t\t\t\t\\\n \treturn COSTS_N_INSNS (33);\t\t\t\t\t\\\n+      case PROCESSOR_PPC405:\t\t\t\t\t\t\\\n+\treturn COSTS_N_INSNS (35);\t\t\t\t\t\\\n       case PROCESSOR_PPC601:\t\t\t\t\t\t\\\n \treturn COSTS_N_INSNS (36);\t\t\t\t\t\\\n       case PROCESSOR_PPC603:\t\t\t\t\t\t\\"}, {"sha": "0c7e9cb92f852f7c5e04a8b3c201e276f0a6fd67", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 65, "deletions": 15, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7f56777e48623bb55fa7edfc53f9eac9d208c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=fe7f56777e48623bb55fa7edfc53f9eac9d208c2", "patch": "@@ -56,7 +56,7 @@\n ;; Processor type -- this attribute must exactly match the processor_type\n ;; enumeration in rs6000.h.\n \n-(define_attr \"cpu\" \"rios1,rios2,rs64a,mpccore,ppc403,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630,ppc750,ppc7400,ppc7450\"\n+(define_attr \"cpu\" \"rios1,rios2,rs64a,mpccore,ppc403,ppc405,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630,ppc750,ppc7400,ppc7450\"\n   (const (symbol_ref \"rs6000_cpu_attr\")))\n \n ; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n@@ -111,12 +111,12 @@\n \n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"load\")\n-       (eq_attr \"cpu\" \"rios1,ppc403,ppc601\"))\n+       (eq_attr \"cpu\" \"rios1,ppc403,ppc405,ppc601\"))\n   2 1)\n \n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"store,fpstore\")\n-       (eq_attr \"cpu\" \"rios1,ppc403,ppc601\"))\n+       (eq_attr \"cpu\" \"rios1,ppc403,ppc405,ppc601\"))\n   1 1)\n \n (define_function_unit \"fpu\" 1 0\n@@ -147,12 +147,12 @@\n ; Integer Unit (RIOS1, PPC601, PPC603, RS64a)\n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"integer\")\n-       (eq_attr \"cpu\" \"rios1,rs64a,mpccore,ppc403,ppc601,ppc603\"))\n+       (eq_attr \"cpu\" \"rios1,rs64a,mpccore,ppc403,ppc405,ppc601,ppc603\"))\n   1 1)\n \n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"cr_logical\")\n-       (eq_attr \"cpu\" \"mpccore,ppc403,ppc601\"))\n+       (eq_attr \"cpu\" \"mpccore,ppc403,ppc405,ppc601\"))\n   1 1)\n \n (define_function_unit \"iu\" 1 0\n@@ -161,14 +161,49 @@\n   4 4)\n \n (define_function_unit \"iu\" 1 0\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n-       (eq_attr \"cpu\" \"rios1,ppc601,ppc603\"))\n+  (and (eq_attr \"type\" \"imul\")\n+       (eq_attr \"cpu\" \"ppc405\"))\n+  4 3)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul2,imul3\")\n+       (eq_attr \"cpu\" \"ppc405\"))\n+  3 2)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n+       (eq_attr \"cpu\" \"rios1\"))\n   5 5)\n \n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul2\")\n+       (eq_attr \"cpu\" \"rios1\"))\n+  4 4)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul3\")\n+       (eq_attr \"cpu\" \"rios1\"))\n+  3 3)\n+\n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+       (eq_attr \"cpu\" \"ppc601,ppc603\"))\n+  5 5)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n        (eq_attr \"cpu\" \"rs64a\"))\n-  20 14)\n+  20 20)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul2\")\n+       (eq_attr \"cpu\" \"rs64a\"))\n+  12 12)\n+\n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"imul3\")\n+       (eq_attr \"cpu\" \"rs64a\"))\n+  8 8)\n \n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"lmul\")\n@@ -195,6 +230,11 @@\n        (eq_attr \"cpu\" \"ppc403\"))\n   33 33)\n \n+(define_function_unit \"iu\" 1 0\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"ppc405\"))\n+  35 35)\n+\n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"idiv\")\n        (eq_attr \"cpu\" \"ppc601\"))\n@@ -262,18 +302,28 @@\n \n (define_function_unit \"imuldiv\" 1 0\n   (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+       (eq_attr \"cpu\" \"ppc604e\"))\n+  2 1)\n+\n+(define_function_unit \"imuldiv\" 1 0\n+  (and (eq_attr \"type\" \"imul\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   5 3)\n \n (define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"imul2\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n-  5 3)\n+  4 3)\n \n (define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n-       (eq_attr \"cpu\" \"ppc604e\"))\n-  2 1)\n+  (and (eq_attr \"type\" \"imul3\")\n+       (eq_attr \"cpu\" \"ppc620,ppc630\"))\n+  3 3)\n+\n+(define_function_unit \"imuldiv\" 1 0\n+  (and (eq_attr \"type\" \"lmul\")\n+       (eq_attr \"cpu\" \"ppc620,ppc630\"))\n+  7 5)\n \n (define_function_unit \"imuldiv\" 1 0\n   (and (eq_attr \"type\" \"idiv\")\n@@ -439,7 +489,7 @@\n \n (define_function_unit \"iu\" 1 0\n   (and (eq_attr \"type\" \"compare,delayed_compare\")\n-       (eq_attr \"cpu\" \"rs64a,mpccore,ppc403,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630\"))\n+       (eq_attr \"cpu\" \"rs64a,mpccore,ppc403,ppc405,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630\"))\n   3 1)\n \n ; some extra cycles added by TARGET_SCHED_ADJUST_COST between compare\n@@ -503,7 +553,7 @@\n \n (define_function_unit \"bpu\" 1 0\n   (and (eq_attr \"type\" \"mtjmpr\")\n-       (eq_attr \"cpu\" \"mpccore,ppc403,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630\"))\n+       (eq_attr \"cpu\" \"mpccore,ppc403,ppc405,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630\"))\n   4 1)\n \n (define_function_unit \"sru\" 1 0"}]}