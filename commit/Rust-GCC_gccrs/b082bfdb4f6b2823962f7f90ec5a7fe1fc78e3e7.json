{"sha": "b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4MmJmZGI0ZjZiMjgyMzk2MmY3ZjkwZWM1YTdmZTFmYzc4ZTNlNw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2000-11-13T13:58:51Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2000-11-13T13:58:51Z"}, "message": "arm.md (mulsidi3adddi, [...]): Revert previous change.\n\n* arm.md (mulsidi3adddi, umulsidi3adddi): Revert previous change.\nRewrite to avoid use of match_dup.  Don't try to tie registers that\nare not in the same mode.\n\nFrom-SVN: r37425", "tree": {"sha": "885ce7bd11d757305cca6c821fe44b3d1bde8ed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/885ce7bd11d757305cca6c821fe44b3d1bde8ed4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7/comments", "author": null, "committer": null, "parents": [{"sha": "b9265ec1ee41f12954b2736726dcc79971b5b558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9265ec1ee41f12954b2736726dcc79971b5b558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9265ec1ee41f12954b2736726dcc79971b5b558"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "bb2a1c5ab32dd73ca10348056e67833d2e0ee170", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "patch": "@@ -1,3 +1,9 @@\n+2000-11-13  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (mulsidi3adddi, umulsidi3adddi): Revert previous change.\n+\tRewrite to avoid use of match_dup.  Don't try to tie registers that\n+\tare not in the same mode.\n+\n 2000-11-13  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* invoke.texi: Update lists of languages and suffixes supported."}, {"sha": "ddd6ace0933713df919ac5fac62ff10bf50751ad", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "patch": "@@ -1263,14 +1263,14 @@\n ;; Unnamed template to match long long multiply-accumlate (smlal)\n \n (define_insn \"*mulsidi3adddi\"\n-  [(set (match_operand:DI 0 \"s_register_operand\" \"+&r,&r,&r\")\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"=&r\")\n \t(plus:DI\n \t (mult:DI\n-\t  (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r,0,1\"))\n-\t  (sign_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%r,r,r\")))\n-\t (match_dup 0)))]\n+\t  (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"%r\"))\n+\t  (sign_extend:DI (match_operand:SI 3 \"s_register_operand\" \"r\")))\n+\t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_ARM && arm_fast_multiply\"\n-  \"smlal%?\\\\t%Q0, %R0, %1, %2\"\n+  \"smlal%?\\\\t%Q0, %R0, %3, %2\"\n   [(set_attr \"type\" \"mult\")\n    (set_attr \"predicable\" \"yes\")]\n )\n@@ -1300,14 +1300,14 @@\n ;; Unnamed template to match long long unsigned multiply-accumlate (umlal)\n \n (define_insn \"*umulsidi3adddi\"\n-  [(set (match_operand:DI 0 \"s_register_operand\" \"+&r,&r,&r\")\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"=&r\")\n \t(plus:DI\n \t (mult:DI\n-\t  (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"r,0,1\"))\n-\t  (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"%r,r,r\")))\n-\t (match_dup 0)))]\n+\t  (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"%r\"))\n+\t  (zero_extend:DI (match_operand:SI 3 \"s_register_operand\" \"r\")))\n+\t (match_operand:DI 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_ARM && arm_fast_multiply\"\n-  \"umlal%?\\\\t%Q0, %R0, %1, %2\"\n+  \"umlal%?\\\\t%Q0, %R0, %3, %2\"\n   [(set_attr \"type\" \"mult\")\n    (set_attr \"predicable\" \"yes\")]\n )"}]}