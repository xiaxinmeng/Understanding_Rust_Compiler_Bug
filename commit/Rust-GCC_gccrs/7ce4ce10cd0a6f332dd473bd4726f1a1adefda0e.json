{"sha": "7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlNGNlMTBjZDBhNmYzMzJkZDQ3M2JkNDcyNmYxYTFhZGVmZGEwZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-05-30T15:26:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-05-30T15:26:26Z"}, "message": "simple-object.h (simple_object_copy_lto_debug_sections): Add rename parameter.\n\n\n\t* simple-object.h (simple_object_copy_lto_debug_sections): Add rename\n\tparameter.\n\t* simple-object.c (handle_lto_debug_sections): Add rename parameter.\n\t(handle_lto_debug_sections_rename): New function.\n\t(handle_lto_debug_sections_norename): New function.\n\t(simple_object_copy_lto_debug_sections): Add rename parameter.\n\nFrom-SVN: r260956", "tree": {"sha": "287a30928faa024d179798eb57f9957f9b794995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/287a30928faa024d179798eb57f9957f9b794995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e/comments", "author": null, "committer": null, "parents": [{"sha": "74e0960e3ee7274e5b564e26f81660524b13d447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e0960e3ee7274e5b564e26f81660524b13d447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e0960e3ee7274e5b564e26f81660524b13d447"}], "stats": {"total": 54, "additions": 43, "deletions": 11}, "files": [{"sha": "be3c6eea6dc1a46e422cfa46e93aa2c9bfdacf14", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "patch": "@@ -1,3 +1,12 @@\n+2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* simple-object.h (simple_object_copy_lto_debug_sections): Add rename\n+\tparameter.\n+\t* simple-object.c (handle_lto_debug_sections): Add rename parameter.\n+\t(handle_lto_debug_sections_rename): New function.\n+\t(handle_lto_debug_sections_norename): New function.\n+\t(simple_object_copy_lto_debug_sections): Add rename parameter.\n+\n 2018-05-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* splay-tree.c (splay_tree_compare_strings,"}, {"sha": "82a8cff9644bdf66ad549b099e298ca61b98be16", "filename": "libiberty/simple-object.c", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e/libiberty%2Fsimple-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e/libiberty%2Fsimple-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object.c?ref=7ce4ce10cd0a6f332dd473bd4726f1a1adefda0e", "patch": "@@ -251,12 +251,15 @@ simple_object_find_section (simple_object_read *sobj, const char *name,\n }\n \n /* Callback to identify and rename LTO debug sections by name.\n-   Returns 1 if NAME is a LTO debug section, 0 if not.  */\n+   Returns non-NULL if NAME is a LTO debug section, NULL if not.\n+   If RENAME is true it will rename LTO debug sections to non-LTO\n+   ones.  */\n \n static char *\n-handle_lto_debug_sections (const char *name)\n+handle_lto_debug_sections (const char *name, int rename)\n {\n-  char *newname = XCNEWVEC (char, strlen (name) + 1);\n+  char *newname = rename ? XCNEWVEC (char, strlen (name) + 1)\n+\t  \t         : xstrdup (name);\n \n   /* ???  So we can't use .gnu.lto_ prefixed sections as the assembler\n      complains about bogus section flags.  Which means we need to arrange\n@@ -265,22 +268,24 @@ handle_lto_debug_sections (const char *name)\n   /* Also include corresponding reloc sections.  */\n   if (strncmp (name, \".rela\", sizeof (\".rela\") - 1) == 0)\n     {\n-      strncpy (newname, name, sizeof (\".rela\") - 1);\n+      if (rename)\n+        strncpy (newname, name, sizeof (\".rela\") - 1);\n       name += sizeof (\".rela\") - 1;\n     }\n   else if (strncmp (name, \".rel\", sizeof (\".rel\") - 1) == 0)\n     {\n-      strncpy (newname, name, sizeof (\".rel\") - 1);\n+      if (rename)\n+        strncpy (newname, name, sizeof (\".rel\") - 1);\n       name += sizeof (\".rel\") - 1;\n     }\n   /* ???  For now this handles both .gnu.lto_ and .gnu.debuglto_ prefixed\n      sections.  */\n   /* Copy LTO debug sections and rename them to their non-LTO name.  */\n   if (strncmp (name, \".gnu.debuglto_\", sizeof (\".gnu.debuglto_\") - 1) == 0)\n-    return strcat (newname, name + sizeof (\".gnu.debuglto_\") - 1);\n+    return rename ? strcat (newname, name + sizeof (\".gnu.debuglto_\") - 1) : newname;\n   else if (strncmp (name, \".gnu.lto_.debug_\",\n \t\t    sizeof (\".gnu.lto_.debug_\") -1) == 0)\n-    return strcat (newname, name + sizeof (\".gnu.lto_\") - 1);\n+    return rename ? strcat (newname, name + sizeof (\".gnu.lto_\") - 1) : newname;\n   /* Copy over .note.GNU-stack section under the same name if present.  */\n   else if (strcmp (name, \".note.GNU-stack\") == 0)\n     return strcpy (newname, name);\n@@ -289,14 +294,31 @@ handle_lto_debug_sections (const char *name)\n      COMDAT sections in objects produced by GCC.  */\n   else if (strcmp (name, \".comment\") == 0)\n     return strcpy (newname, name);\n+  free (newname);\n   return NULL;\n }\n \n+/* Wrapper for handle_lto_debug_sections.  */\n+\n+static char *\n+handle_lto_debug_sections_rename (const char *name)\n+{\n+  return handle_lto_debug_sections (name, 1);\n+}\n+\n+/* Wrapper for handle_lto_debug_sections.  */\n+\n+static char *\n+handle_lto_debug_sections_norename (const char *name)\n+{\n+  return handle_lto_debug_sections (name, 0);\n+}\n+\n /* Copy LTO debug sections.  */\n \n const char *\n simple_object_copy_lto_debug_sections (simple_object_read *sobj,\n-\t\t\t\t       const char *dest, int *err)\n+\t\t\t\t       const char *dest, int *err, int rename)\n {\n   const char *errmsg;\n   simple_object_write *dest_sobj;\n@@ -317,9 +339,10 @@ simple_object_copy_lto_debug_sections (simple_object_read *sobj,\n   if (! dest_sobj)\n     return errmsg;\n \n-  errmsg = sobj->functions->copy_lto_debug_sections (sobj, dest_sobj,\n-\t\t\t\t\t\t     handle_lto_debug_sections,\n-\t\t\t\t\t\t     err);\n+  errmsg = sobj->functions->copy_lto_debug_sections\n+\t \t (sobj, dest_sobj,\n+\t\t  rename ? handle_lto_debug_sections_rename\n+\t\t\t : handle_lto_debug_sections_norename,  err);\n   if (errmsg)\n     {\n       simple_object_release_write (dest_sobj);"}]}