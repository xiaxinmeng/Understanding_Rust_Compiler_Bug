{"sha": "7d253f6e46182cfb4d2964d968f70989ca79118c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyNTNmNmU0NjE4MmNmYjRkMjk2NGQ5NjhmNzA5ODljYTc5MTE4Yw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2009-04-06T07:25:36Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2009-04-06T07:25:36Z"}, "message": "config.gcc (mingw32 tm_file): Add mingw-stdint.h.\n\n       * config.gcc (mingw32 tm_file):  Add mingw-stdint.h.\n       (mingw32 tm clause use_gcc_stdint):  Set to wrap.\n       * config/i386/mingw-stdint.h:  New file.\n\nFrom-SVN: r145582", "tree": {"sha": "2805627d50f29e9ddbc8c1d2b4971fd52b7fa16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2805627d50f29e9ddbc8c1d2b4971fd52b7fa16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d253f6e46182cfb4d2964d968f70989ca79118c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d253f6e46182cfb4d2964d968f70989ca79118c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d253f6e46182cfb4d2964d968f70989ca79118c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d253f6e46182cfb4d2964d968f70989ca79118c/comments", "author": null, "committer": null, "parents": [{"sha": "59e36b722194e1f49fe11f9bc670eb7cd2247f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e36b722194e1f49fe11f9bc670eb7cd2247f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e36b722194e1f49fe11f9bc670eb7cd2247f6d"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "660250c072f77bbd2f98cc2e9e0483c026c909e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d253f6e46182cfb4d2964d968f70989ca79118c", "patch": "@@ -1,3 +1,9 @@\n+2009-04-06  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config.gcc (mingw32 tm_file):  Add mingw-stdint.h.\n+\t(mingw32 tm clause use_gcc_stdint):  Set to wrap.\n+\t* config/i386/mingw-stdint.h:  New file.\n+\n 2009-04-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39648"}, {"sha": "f243cb3de8b726be3bab4b9de083021847614d47", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7d253f6e46182cfb4d2964d968f70989ca79118c", "patch": "@@ -1251,7 +1251,7 @@ i[34567]86-*-pe | i[34567]86-*-cygwin*)\n \tuse_gcc_stdint=wrap\n \t;;\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h i386/mingw-stdint.h\"\n \txm_file=i386/xm-mingw32.h\n \t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n \tif test x$sjlj = x0; then\n@@ -1266,6 +1266,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \tc_target_objs=\"${c_target_objs} msformat-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\"\n \tdefault_use_cxa_atexit=yes\n+\tuse_gcc_stdint=wrap\n \tcase ${enable_threads} in\n \t  \"\" | yes | win32)\n \t  thread_file='win32'"}, {"sha": "1403737e8a81e863859e6440e16581fab4519aea", "filename": "gcc/config/i386/mingw-stdint.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2Fconfig%2Fi386%2Fmingw-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d253f6e46182cfb4d2964d968f70989ca79118c/gcc%2Fconfig%2Fi386%2Fmingw-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw-stdint.h?ref=7d253f6e46182cfb4d2964d968f70989ca79118c", "patch": "@@ -0,0 +1,50 @@\n+/* Definitions for <stdint.h> types on systems using mingw.\n+   Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define SIG_ATOMIC_TYPE \"int\"\n+\n+#define INT8_TYPE \"signed char\"\n+#define INT16_TYPE \"short int\"\n+#define INT32_TYPE \"int\"\n+#define INT64_TYPE \"long long int\"\n+#define UINT8_TYPE \"unsigned char\"\n+#define UINT16_TYPE \"short unsigned int\"\n+#define UINT32_TYPE \"unsigned int\"\n+#define UINT64_TYPE \"long long unsigned int\"\n+\n+#define INT_LEAST8_TYPE \"signed char\"\n+#define INT_LEAST16_TYPE \"short int\"\n+#define INT_LEAST32_TYPE \"int\"\n+#define INT_LEAST64_TYPE \"long long int\"\n+#define UINT_LEAST8_TYPE \"unsigned char\"\n+#define UINT_LEAST16_TYPE \"short unsigned int\"\n+#define UINT_LEAST32_TYPE \"unsigned int\"\n+#define UINT_LEAST64_TYPE \"long long unsigned int\"\n+\n+#define INT_FAST8_TYPE \"signed char\"\n+#define INT_FAST16_TYPE \"short int\"\n+#define INT_FAST32_TYPE \"int\"\n+#define INT_FAST64_TYPE \"long long int\"\n+#define UINT_FAST8_TYPE \"unsigned char\"\n+#define UINT_FAST16_TYPE \"short unsigned int\"\n+#define UINT_FAST32_TYPE \"unsigned int\"\n+#define UINT_FAST64_TYPE \"long long unsigned int\"\n+\n+#define INTPTR_TYPE (TARGET_64BIT ? \"long long int\" : \"int\")\n+#define UINTPTR_TYPE (TARGET_64BIT ? \"long long unsigned int\" : \"unsigned int\")"}]}