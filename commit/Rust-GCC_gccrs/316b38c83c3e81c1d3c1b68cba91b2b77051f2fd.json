{"sha": "316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE2YjM4YzgzYzNlODFjMWQzYzFiNjhjYmE5MWIyYjc3MDUxZjJmZA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-22T05:48:32Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-22T05:48:32Z"}, "message": "2003-09-22  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/JarURLConnection.java\n\t(JarURLConnection): Modifed code to match classpath more, fixed comment.\n\t(getCertificates): Made it more error prone.\n\t(getMainAttributes): Likewise.\n\t(getAttributes): Implemented.\n\t(getManifest): Reformatted code.\n\nFrom-SVN: r71643", "tree": {"sha": "a26b2d5e0d8681e6614ce948326ed658a0d55071", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a26b2d5e0d8681e6614ce948326ed658a0d55071"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd/comments", "author": null, "committer": null, "parents": [{"sha": "9554f886547ff68f6ba5775f96ec14f59fb457ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9554f886547ff68f6ba5775f96ec14f59fb457ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9554f886547ff68f6ba5775f96ec14f59fb457ef"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "da74f182a2af42b7b975b6416dd8405b8fd0d803", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "patch": "@@ -1,3 +1,12 @@\n+2003-09-22  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/JarURLConnection.java\n+\t(JarURLConnection): Modifed code to match classpath more, fixed comment.\n+\t(getCertificates): Made it more error prone.\n+\t(getMainAttributes): Likewise.\n+\t(getAttributes): Implemented.\n+\t(getManifest): Reformatted code.\n+\n 2003-09-20  Tom Tromey  <tromey@redhat.com>\n \n \t* java/awt/Component.java: Indentation cleanup from Classpath."}, {"sha": "d90ea0cc3768a0d668b756149763b9ea02e8f986", "filename": "libjava/java/net/JarURLConnection.java", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316b38c83c3e81c1d3c1b68cba91b2b77051f2fd/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FJarURLConnection.java?ref=316b38c83c3e81c1d3c1b68cba91b2b77051f2fd", "patch": "@@ -103,21 +103,21 @@ public abstract class JarURLConnection extends URLConnection\n    *\n    * @specnote This constructor is protected since JDK 1.4\n    */\n-  protected JarURLConnection(URL url)\n+  protected JarURLConnection (URL url)\n     throws MalformedURLException\n   {\n-    super(url);\n+    super (url);\n \n     String spec = url.getFile();\n-    int bang = spec.indexOf (\"!/\", 0);\n+    int bang = spec.indexOf (\"!/\");\n     if (bang == -1)\n       throw new MalformedURLException (url + \": No `!/' in spec.\");\n \n-    // Extact the url for the jar itself.\n-    jarFileURL = new URL(spec.substring (0, bang));\n+    // Extract the url for the jar itself.\n+    jarFileURL = new URL (spec.substring (0, bang));\n \n     // Get the name of the element, if any.\n-    element = (bang+2==spec.length() ? null : spec.substring (bang+2));\n+    element = (spec.length() == (bang + 2) ? null : spec.substring (bang + 2));\n   }\n \n   /**\n@@ -428,7 +428,9 @@ private void getHeaders() throws IOException\n    */\n   public Certificate[] getCertificates () throws IOException\n   {\n-    return getJarEntry ().getCertificates ();\n+    JarEntry entry = getJarEntry();\n+    \n+    return entry != null ? entry.getCertificates() : null;\n   }\n \n   /**\n@@ -441,7 +443,9 @@ public Certificate[] getCertificates () throws IOException\n    */\n   public Attributes getMainAttributes () throws IOException\n   {\n-    return getManifest ().getMainAttributes ();\n+    Manifest manifest = getManifest();\n+    \n+    return manifest != null ? manifest.getMainAttributes() : null;\n   }\n \n   /**\n@@ -455,8 +459,9 @@ public Attributes getMainAttributes () throws IOException\n    */\n   public Attributes getAttributes () throws IOException\n   {\n-    // FIXME: implement this\n-    return null;\n+    JarEntry entry = getJarEntry();\n+\n+    return entry != null ? entry.getAttributes() : null;\n   }\n \n   /**\n@@ -469,8 +474,8 @@ public Attributes getAttributes () throws IOException\n    */\n   public Manifest getManifest () throws IOException\n   {\n-    JarFile file = getJarFile ();\n+    JarFile file = getJarFile();\n \n-    return (file != null) ? file.getManifest() : null;\n+    return file != null ? file.getManifest() : null;\n   }\n }"}]}