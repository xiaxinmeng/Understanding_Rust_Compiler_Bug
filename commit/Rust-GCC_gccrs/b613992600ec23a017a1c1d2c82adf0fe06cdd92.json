{"sha": "b613992600ec23a017a1c1d2c82adf0fe06cdd92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxMzk5MjYwMGVjMjNhMDE3YTFjMWQyYzgyYWRmMGZlMDZjZGQ5Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-26T13:22:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-26T13:22:51Z"}, "message": "re PR c++/48424 (C++0x parameter packs expansion problem)\n\n\tPR c++/48424\n\t* decl.c (grokparms): Function parameter packs don't need to\n\tgo at the end.\n\t* pt.c (type_unification_real): But they aren't deduced otherwise.\n\nFrom-SVN: r174285", "tree": {"sha": "032f35fe761d116c8c7bbd078092468e73c62951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/032f35fe761d116c8c7bbd078092468e73c62951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b613992600ec23a017a1c1d2c82adf0fe06cdd92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b613992600ec23a017a1c1d2c82adf0fe06cdd92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b613992600ec23a017a1c1d2c82adf0fe06cdd92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b613992600ec23a017a1c1d2c82adf0fe06cdd92/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d11bf18f560999725b1fbbb393f7d12a1b751a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d11bf18f560999725b1fbbb393f7d12a1b751a59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d11bf18f560999725b1fbbb393f7d12a1b751a59"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "de154ae38472acf547b573254cc8d53d2b396c7c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -1,3 +1,10 @@\n+2011-05-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48424\n+\t* decl.c (grokparms): Function parameter packs don't need to\n+\tgo at the end.\n+\t* pt.c (type_unification_real): But they aren't deduced otherwise.\n+\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48536"}, {"sha": "a956dbb266b39d9c5040e6828f92301ed4b3e80f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -10551,12 +10551,6 @@ grokparms (tree parmlist, tree *parms)\n \t    init = check_default_argument (decl, init);\n \t}\n \n-      if (TREE_CODE (decl) == PARM_DECL\n-          && FUNCTION_PARAMETER_PACK_P (decl)\n-          && TREE_CHAIN (parm)\n-          && TREE_CHAIN (parm) != void_list_node)\n-        error (\"parameter packs must be at the end of the parameter list\");\n-\n       DECL_CHAIN (decl) = decls;\n       decls = decl;\n       result = tree_cons (init, type, result);"}, {"sha": "ab48c8f7f9287f98eb61b03162c404b2b3773389", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -14262,11 +14262,24 @@ type_unification_real (tree tparms,\n   while (parms && parms != void_list_node\n \t && ia < nargs)\n     {\n-      if (TREE_CODE (TREE_VALUE (parms)) == TYPE_PACK_EXPANSION)\n-        break;\n-\n       parm = TREE_VALUE (parms);\n+\n+      if (TREE_CODE (parm) == TYPE_PACK_EXPANSION\n+\t  && (!TREE_CHAIN (parms) || TREE_CHAIN (parms) == void_list_node))\n+\t/* For a function parameter pack that occurs at the end of the\n+\t   parameter-declaration-list, the type A of each remaining\n+\t   argument of the call is compared with the type P of the\n+\t   declarator-id of the function parameter pack.  */\n+\tbreak;\n+\n       parms = TREE_CHAIN (parms);\n+\n+      if (TREE_CODE (parm) == TYPE_PACK_EXPANSION)\n+\t/* For a function parameter pack that does not occur at the\n+\t   end of the parameter-declaration-list, the type of the\n+\t   parameter pack is a non-deduced context.  */\n+\tcontinue;\n+\n       arg = args[ia];\n       ++ia;\n       arg_expr = NULL;"}, {"sha": "7e71ee230f6acd94c93e7dd5d3bfc458edb17ca7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -1,3 +1,8 @@\n+2011-05-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/variadic111.C: New.\n+\t* g++.dg/cpp0x/variadic41.C: Adjust.\n+\n 2011-05-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48702"}, {"sha": "378162e162dc46cb1eedd77ba3738c8577cbdc62", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic111.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic111.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic111.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic111.C?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/48424\n+// { dg-options -std=c++0x }\n+\n+template<typename... Args1>\n+struct S\n+{\n+  template<typename... Args2>\n+    void f(Args1... args1, Args2&&... args2)\n+    {\n+    }\n+};\n+\n+int main()\n+{\n+  S<int, double> s;\n+  s.f(1,2.0,false,'a');\n+}\n+\n+// { dg-final { scan-assembler \"_ZN1SIIidEE1fIIbcEEEvidDpOT_\" } }"}, {"sha": "9cfd847f31861f7e96f04c2b415006ff5d51c2d9", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic41.C", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b613992600ec23a017a1c1d2c82adf0fe06cdd92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic41.C?ref=b613992600ec23a017a1c1d2c82adf0fe06cdd92", "patch": "@@ -1,3 +1,14 @@\n+// A function parameter pack is only deduced if it's at the end\n // { dg-options \"-std=gnu++0x\" }\n template<typename... Args>\n-void f(const Args&... args, int oops); // { dg-error \"end\" }\n+void f(const Args&... args, int oops);\n+\n+int main()\n+{\n+  f<>(1);\n+  f(1);\n+  f<int>(1,2);\n+  f(1,2);\t\t\t// { dg-error \"no match\" }\n+}\n+\n+// { dg-prune-output \"note\" }"}]}