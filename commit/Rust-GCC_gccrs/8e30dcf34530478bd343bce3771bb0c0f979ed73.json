{"sha": "8e30dcf34530478bd343bce3771bb0c0f979ed73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzMGRjZjM0NTMwNDc4YmQzNDNiY2UzNzcxYmIwYzBmOTc5ZWQ3Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-08-22T18:27:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-08-22T18:27:26Z"}, "message": "re PR c++/28659 (ICE (segfault) while compiling kdelibs 4.0 snapshot)\n\n        PR c++/28659\n        * typeck.c (merge_types): If either of the types have the right\n        attributes, return that one.\n\n        * tree.c (cp_build_type_attribute_variant): Make sure we aren't\n        doing this to class types.\n        * typeck.c (original_type): Deal with type quals properly.\n\nFrom-SVN: r116329", "tree": {"sha": "6306d10d6d16b88e1187af65ac4605d5caa13f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6306d10d6d16b88e1187af65ac4605d5caa13f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e30dcf34530478bd343bce3771bb0c0f979ed73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e30dcf34530478bd343bce3771bb0c0f979ed73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e30dcf34530478bd343bce3771bb0c0f979ed73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e30dcf34530478bd343bce3771bb0c0f979ed73/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d3c5221567ee9a9a75ef9388ebfa42b9bb566f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3c5221567ee9a9a75ef9388ebfa42b9bb566f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d3c5221567ee9a9a75ef9388ebfa42b9bb566f6"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "22dbdba69368fb826df4e7f0cb97b5d5d768dadf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8e30dcf34530478bd343bce3771bb0c0f979ed73", "patch": "@@ -1,3 +1,13 @@\n+2006-08-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/28659\n+\t* typeck.c (merge_types): If either of the types have the right \n+\tattributes, return that one.\n+\n+\t* tree.c (cp_build_type_attribute_variant): Make sure we aren't\n+\tdoing this to class types.\n+\t* typeck.c (original_type): Deal with type quals properly.\n+\n 2006-08-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/27115"}, {"sha": "1cedec55f8d7c92b7622221b4a9845c76b41069a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=8e30dcf34530478bd343bce3771bb0c0f979ed73", "patch": "@@ -1936,6 +1936,10 @@ cp_build_type_attribute_variant (tree type, tree attributes)\n \t  != TYPE_RAISES_EXCEPTIONS (type)))\n     new_type = build_exception_variant (new_type,\n \t\t\t\t\tTYPE_RAISES_EXCEPTIONS (type));\n+\n+  /* Making a new main variant of a class type is broken.  */\n+  gcc_assert (!CLASS_TYPE_P (type) || new_type == type);\n+    \n   return new_type;\n }\n "}, {"sha": "c07a78d1ef4f4bf2eb289f281d7aca3710a84ca7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=8e30dcf34530478bd343bce3771bb0c0f979ed73", "patch": "@@ -228,6 +228,7 @@ commonparms (tree p1, tree p2)\n static tree\n original_type (tree t)\n {\n+  int quals = cp_type_quals (t);\n   while (t != error_mark_node\n \t && TYPE_NAME (t) != NULL_TREE)\n     {\n@@ -239,7 +240,7 @@ original_type (tree t)\n \tbreak;\n       t = x;\n     }\n-  return t;\n+  return cp_build_qualified_type (t, quals);\n }\n \n /* T1 and T2 are arithmetic or enumeration types.  Return the type\n@@ -730,7 +731,13 @@ merge_types (tree t1, tree t2)\n \n     default:;\n     }\n-  return cp_build_type_attribute_variant (t1, attributes);\n+\n+  if (attribute_list_equal (TYPE_ATTRIBUTES (t1), attributes))\n+    return t1;\n+  else if (attribute_list_equal (TYPE_ATTRIBUTES (t2), attributes))\n+    return t2;\n+  else\n+    return cp_build_type_attribute_variant (t1, attributes);\n }\n \n /* Return the common type of two types."}, {"sha": "dedf43a02461853a96b7856985a5b9e9f56e0e73", "filename": "gcc/testsuite/g++.dg/ext/attrib26.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e30dcf34530478bd343bce3771bb0c0f979ed73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib26.C?ref=8e30dcf34530478bd343bce3771bb0c0f979ed73", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/28659\n+// The attribute was causing us to get confused in merge_types when\n+// combining the template type with an uninstantiated version.\n+\n+template<class T>\n+struct __attribute__((aligned(1))) A\n+{\n+  A& operator=(const A &t);\n+};\n+\n+template<class T>\n+A<T>& A<T>::operator=(const A<T> &t)\n+{\n+}"}]}