{"sha": "8a83a69363442100aa9435199e5d385716658255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE4M2E2OTM2MzQ0MjEwMGFhOTQzNTE5OWU1ZDM4NTcxNjY1ODI1NQ==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-06-06T02:08:18Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-06-06T02:08:18Z"}, "message": "re PR c++/15503 (nested template problem)\n\n\tPR c++/15503\n\t* parser.c (cp_parser_mem_initializer_id): Gracefully reject\n\t'typename', and accept 'template'.\n\n\tPR c++/15503\n\t* g++.dg/template/meminit2.C: New test.\n\nFrom-SVN: r82660", "tree": {"sha": "39d1906c627b576837b2b1315db0bf6b3a081b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39d1906c627b576837b2b1315db0bf6b3a081b79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a83a69363442100aa9435199e5d385716658255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a83a69363442100aa9435199e5d385716658255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a83a69363442100aa9435199e5d385716658255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a83a69363442100aa9435199e5d385716658255/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad94c84603832382465e4e1ed0e10b5595a30a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad94c84603832382465e4e1ed0e10b5595a30a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad94c84603832382465e4e1ed0e10b5595a30a66"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "8ec1302e035a2057f69662b5d84dec9c136a5ae3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a83a69363442100aa9435199e5d385716658255/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a83a69363442100aa9435199e5d385716658255/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8a83a69363442100aa9435199e5d385716658255", "patch": "@@ -1,3 +1,9 @@\n+2004-06-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/15503\n+\t* parser.c (cp_parser_mem_initializer_id): Gracefully reject\n+\t'typename', and accept 'template'.\n+\n 2004-06-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \t    Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "0c94f7102db6fe1254f1320b1a3fccdb4b52e460", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a83a69363442100aa9435199e5d385716658255/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a83a69363442100aa9435199e5d385716658255/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8a83a69363442100aa9435199e5d385716658255", "patch": "@@ -7383,8 +7383,16 @@ cp_parser_mem_initializer_id (cp_parser* parser)\n {\n   bool global_scope_p;\n   bool nested_name_specifier_p;\n+  bool template_p = false;\n   tree id;\n \n+  /* `typename' is not allowed in this context ([temp.res]).  */\n+  if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TYPENAME))\n+    {\n+      error (\"keyword `typename' not allowed in this context (a qualified \"\n+\t     \"member initializer is implicitly a type)\");\n+      cp_lexer_consume_token (parser->lexer);\n+    }\n   /* Look for the optional `::' operator.  */\n   global_scope_p\n     = (cp_parser_global_scope_opt (parser,\n@@ -7409,12 +7417,14 @@ cp_parser_mem_initializer_id (cp_parser* parser)\n \t\t\t\t\t    /*type_p=*/true,\n \t\t\t\t\t    /*is_declaration=*/true)\n        != NULL_TREE);\n+  if (nested_name_specifier_p)\n+    template_p = cp_parser_optional_template_keyword (parser);\n   /* If there is a `::' operator or a nested-name-specifier, then we\n      are definitely looking for a class-name.  */\n   if (global_scope_p || nested_name_specifier_p)\n     return cp_parser_class_name (parser,\n \t\t\t\t /*typename_keyword_p=*/true,\n-\t\t\t\t /*template_keyword_p=*/false,\n+\t\t\t\t /*template_keyword_p=*/template_p,\n \t\t\t\t /*type_p=*/false,\n \t\t\t\t /*check_dependency_p=*/true,\n \t\t\t\t /*class_head_p=*/false,"}, {"sha": "197242d2bee90dae9fba828351f22231d7ab4161", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a83a69363442100aa9435199e5d385716658255/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a83a69363442100aa9435199e5d385716658255/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a83a69363442100aa9435199e5d385716658255", "patch": "@@ -1,3 +1,8 @@\n+2004-06-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/15503\n+\t* g++.dg/template/meminit2.C: New test.\n+\n 2004-06-04  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR target/15822"}, {"sha": "6abf2dfbba9cbae921970b5b33c6c6480b2f1f40", "filename": "gcc/testsuite/g++.dg/template/meminit2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a83a69363442100aa9435199e5d385716658255/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a83a69363442100aa9435199e5d385716658255/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit2.C?ref=8a83a69363442100aa9435199e5d385716658255", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// Origin: Mark Anders <mark dot a dot anders at intel dot com>\n+// PR c++/15503: disambiguators in base classes and mem-initializers\n+\n+template <typename K1> struct O {  \n+  template <typename K2> struct I {}; \n+}; \n+\n+template <typename T> \n+struct A : typename O<T>::template I<int> {   // { dg-error \"keyword `typename' not allowed\" }\n+  A() :    typename O<T>::template I<int>()   // { dg-error \"keyword `typename' not allowed\" }\n+  {};\n+};\n+\n+template <typename T> \n+struct B : O<T>::template I<int> {\n+  B() :    O<T>::I<int>()   // { dg-error \"used as template|it is a template\" \"\" }\n+  {};\n+};\n+\n+// { dg-bogus \"end of input\" \"bogus token skipping in the parser\" { xfail *-*-* } 17 }"}]}