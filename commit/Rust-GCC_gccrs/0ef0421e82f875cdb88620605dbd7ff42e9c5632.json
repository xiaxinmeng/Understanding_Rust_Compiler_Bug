{"sha": "0ef0421e82f875cdb88620605dbd7ff42e9c5632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmMDQyMWU4MmY4NzVjZGI4ODYyMDYwNWRiZDdmZjQyZTljNTYzMg==", "commit": {"author": {"name": "Caroline Tice", "email": "ctice@apple.com", "date": "2007-07-18T21:08:05Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2007-07-18T21:08:05Z"}, "message": "Fix bootstrap on ia64, PR32764\n\n2007-07-18  Caroline Tice  <ctice@apple.com>\n        \n        * var-tracking.c (find_src_status):  Check for  COND_EXEC insns\n        and handle them correctly; check that src is not NULL before\n        trying to use it.\n        (find_src_set_src): Likewise.\n\nFrom-SVN: r126731", "tree": {"sha": "51d879b746fd960e201cbfce4abd84fca7bfc7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51d879b746fd960e201cbfce4abd84fca7bfc7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ef0421e82f875cdb88620605dbd7ff42e9c5632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef0421e82f875cdb88620605dbd7ff42e9c5632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef0421e82f875cdb88620605dbd7ff42e9c5632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef0421e82f875cdb88620605dbd7ff42e9c5632/comments", "author": null, "committer": null, "parents": [{"sha": "dadda6caba15b21a03e9522ca5cce41e2c2d270b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadda6caba15b21a03e9522ca5cce41e2c2d270b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadda6caba15b21a03e9522ca5cce41e2c2d270b"}], "stats": {"total": 59, "additions": 39, "deletions": 20}, "files": [{"sha": "893789db73fa049fbbfa3324d60a330b06715326", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef0421e82f875cdb88620605dbd7ff42e9c5632/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef0421e82f875cdb88620605dbd7ff42e9c5632/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ef0421e82f875cdb88620605dbd7ff42e9c5632", "patch": "@@ -1,3 +1,10 @@\n+2007-07-18  Caroline Tice  <ctice@apple.com>\n+\t\n+\t* var-tracking.c (find_src_status):  Check for  COND_EXEC insns\n+\tand handle them correctly; check that src is not NULL before\n+\ttrying to use it.\n+\t(find_src_set_src): Likewise.\n+\t\n 2007-07-18  Bob Wilson  <bob.wilson@acm.org>\n \t\n \t* config/xtensa/xtensa.c (xtensa_expand_mask_and_shift): New."}, {"sha": "bdc173ef5a3416d8a04652595453b0c73c2eead2", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef0421e82f875cdb88620605dbd7ff42e9c5632/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef0421e82f875cdb88620605dbd7ff42e9c5632/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=0ef0421e82f875cdb88620605dbd7ff42e9c5632", "patch": "@@ -1806,27 +1806,33 @@ static enum var_init_status\n find_src_status (dataflow_set *in, rtx loc, rtx insn)\n {\n   rtx src = NULL_RTX;\n+  rtx pattern;\n   tree decl = NULL_TREE;\n   enum var_init_status status = VAR_INIT_STATUS_UNINITIALIZED;\n \n   if (! flag_var_tracking_uninit)\n     status = VAR_INIT_STATUS_INITIALIZED;\n \n-  if (GET_CODE (PATTERN (insn)) == SET)\n-    src = SET_SRC (PATTERN (insn));\n-  else if (GET_CODE (PATTERN (insn)) == PARALLEL\n-\t   || GET_CODE (PATTERN (insn)) == SEQUENCE)\n+  pattern = PATTERN (insn);\n+\n+  if (GET_CODE (pattern) == COND_EXEC)\n+    pattern = COND_EXEC_CODE (pattern);\n+\n+  if (GET_CODE (pattern) == SET)\n+    src = SET_SRC (pattern);\n+  else if (GET_CODE (pattern) == PARALLEL\n+\t   || GET_CODE (pattern) == SEQUENCE)\n     {\n       int i;\n-      for (i = XVECLEN (PATTERN (insn), 0) - 1; i >= 0; i--)\n-\tif (GET_CODE (XVECEXP (PATTERN (insn), 0, i)) == SET\n-\t    && SET_DEST (XVECEXP (PATTERN (insn), 0, i)) == loc)\n-\t  src = SET_SRC (XVECEXP (PATTERN (insn), 0, i));\n+      for (i = XVECLEN (pattern, 0) - 1; i >= 0; i--)\n+\tif (GET_CODE (XVECEXP (pattern, 0, i)) == SET\n+\t    && SET_DEST (XVECEXP (pattern, 0, i)) == loc)\n+\t  src = SET_SRC (XVECEXP (pattern, 0, i));\n     }\n \n-  if (REG_P (src))\n+  if (src && REG_P (src))\n     decl = var_debug_decl (REG_EXPR (src));\n-  else if (MEM_P (src))\n+  else if (src && MEM_P (src))\n     decl = var_debug_decl (MEM_EXPR (src));\n \n   if (src && decl)\n@@ -1845,26 +1851,32 @@ find_src_set_src (dataflow_set *set, rtx loc, rtx insn)\n   tree decl = NULL_TREE;   /* The variable being copied around.          */\n   rtx src = NULL_RTX;      /* The location \"decl\" is being copied from.  */\n   rtx set_src = NULL_RTX;  /* The value for \"decl\" stored in \"src\".      */\n+  rtx pattern;\n   void **slot;\n   variable var;\n   location_chain nextp;\n   int i;\n   bool found;\n \n-  if (GET_CODE (PATTERN (insn)) == SET)\n-    src = SET_SRC (PATTERN (insn));\n-  else if (GET_CODE (PATTERN (insn)) == PARALLEL\n-\t   || GET_CODE (PATTERN (insn)) == SEQUENCE)\n+\n+  pattern = PATTERN (insn);\n+  if (GET_CODE (pattern) == COND_EXEC)\n+    pattern = COND_EXEC_CODE (pattern);\n+\n+  if (GET_CODE (pattern) == SET)\n+    src = SET_SRC (pattern);\n+  else if (GET_CODE (pattern) == PARALLEL\n+\t   || GET_CODE (pattern) == SEQUENCE)\n     {\n-      for (i = XVECLEN (PATTERN (insn), 0) - 1; i >= 0; i--)\n-\tif (GET_CODE (XVECEXP (PATTERN (insn), 0, i)) == SET\n-\t    && SET_DEST (XVECEXP (PATTERN (insn), 0, i)) == loc)\n-\t  src = SET_SRC (XVECEXP (PATTERN (insn), 0, i));\n+      for (i = XVECLEN (pattern, 0) - 1; i >= 0; i--)\n+\tif (GET_CODE (XVECEXP (pattern, 0, i)) == SET\n+\t    && SET_DEST (XVECEXP (pattern, 0, i)) == loc)\n+\t  src = SET_SRC (XVECEXP (pattern, 0, i));\n     }\n \n-  if (REG_P (src))\n+  if (src && REG_P (src))\n     decl = var_debug_decl (REG_EXPR (src));\n-  else if (MEM_P (src))\n+  else if (src && MEM_P (src))\n     decl = var_debug_decl (MEM_EXPR (src));\n \n   if (src && decl)"}]}