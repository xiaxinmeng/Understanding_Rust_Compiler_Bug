{"sha": "9125b9fc80f832228067dfabb6282a321b8844a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEyNWI5ZmM4MGY4MzIyMjgwNjdkZmFiYjYyODJhMzIxYjg4NDRhOA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2017-03-09T14:43:17Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2017-03-09T14:43:17Z"}, "message": "re PR rtl-optimization/79949 (ICE in Max. number of generated reload insns per insn is achieved (90))\n\n2017-03-09  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/79949\n\t* lra-constraints.c (process_alt_operands): Check memory when\n\ttrying to predict a cycle.  Print about the overall increase.\n\nFrom-SVN: r246003", "tree": {"sha": "934e6b0492db7ae4ca9e86a848d8e923ceae86fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/934e6b0492db7ae4ca9e86a848d8e923ceae86fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9125b9fc80f832228067dfabb6282a321b8844a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9125b9fc80f832228067dfabb6282a321b8844a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9125b9fc80f832228067dfabb6282a321b8844a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9125b9fc80f832228067dfabb6282a321b8844a8/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16967aff7a209389283280a17ef08f2fe206fed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16967aff7a209389283280a17ef08f2fe206fed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16967aff7a209389283280a17ef08f2fe206fed3"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "7c0bb715984981a932603c7a2d24564c90018466", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125b9fc80f832228067dfabb6282a321b8844a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125b9fc80f832228067dfabb6282a321b8844a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9125b9fc80f832228067dfabb6282a321b8844a8", "patch": "@@ -1,3 +1,9 @@\n+2017-03-09  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/79949\n+\t* lra-constraints.c (process_alt_operands): Check memory when\n+\ttrying to predict a cycle.  Print about the overall increase.\n+\n 2017-03-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/79971"}, {"sha": "e0ce8072ab053cb2d527e28ff5b8b1c26d275eb8", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9125b9fc80f832228067dfabb6282a321b8844a8/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9125b9fc80f832228067dfabb6282a321b8844a8/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=9125b9fc80f832228067dfabb6282a321b8844a8", "patch": "@@ -2766,13 +2766,15 @@ process_alt_operands (int only_alternative)\n \t\t  && REG_P (no_subreg_reg_operand[1])\n \t\t  /* Check that we reload memory not the memory\n \t\t     address.  */\n-\t\t  && !curr_alt_offmemok[0]\n+\t\t  && ! (curr_alt_offmemok[0]\n+\t\t\t&& MEM_P (no_subreg_reg_operand[0]))\n \t\t  && reg_in_class_p (no_subreg_reg_operand[1], curr_alt[0]))\n \t      || (curr_alt_win[0] && ! curr_alt_win[1]\n \t\t  && REG_P (no_subreg_reg_operand[0])\n \t\t  /* Check that we reload memory not the memory\n \t\t     address.  */\n-\t\t  && !curr_alt_offmemok[1]\n+\t\t  && ! (curr_alt_offmemok[1]\n+\t\t\t&& MEM_P (no_subreg_reg_operand[1]))\n \t\t  && reg_in_class_p (no_subreg_reg_operand[0], curr_alt[1])\n \t\t  && (! CONST_POOL_OK_P (curr_operand_mode[1],\n \t\t\t\t\t no_subreg_reg_operand[1])\n@@ -2785,8 +2787,11 @@ process_alt_operands (int only_alternative)\n \t\t  && GET_CODE (no_subreg_reg_operand[1]) != PLUS)))\n \t{\n \t  /* We have a move insn and a new reload insn will be similar\n-\t     to the current insn.  We should avoid such situation as it\n-\t     results in LRA cycling.  */\n+\t     to the current insn.  We should avoid such situation as\n+\t     it results in LRA cycling.  */\n+\t  if (lra_dump_file != NULL)\n+\t    fprintf (lra_dump_file,\n+\t\t     \"            Cycle danger: overall += LRA_MAX_REJECT\\n\");\n \t  overall += LRA_MAX_REJECT;\n \t}\n       ok_p = true;"}]}