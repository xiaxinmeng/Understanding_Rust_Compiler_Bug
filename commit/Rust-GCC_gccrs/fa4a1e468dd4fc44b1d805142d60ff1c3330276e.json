{"sha": "fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0YTFlNDY4ZGQ0ZmM0NGIxZDgwNTE0MmQ2MGZmMWMzMzMwMjc2ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-21T22:01:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-21T22:01:45Z"}, "message": "re PR c++/48945 ([C++0x] static constexpr member function cannot be defined out-of class)\n\n\tPR c++/48945\n\t* decl.c (grokdeclarator): Don't add set const function-cv-qual\n\tfor constexpr fns to memfn_quals, just add it to the type.\n\t(revert_static_member_fn): Don't complain about quals.\n\t(check_static_quals): New.\n\t(grokfndecl): Call it.\n\t(start_preparsed_function): Don't call revert_static_member_fn.\n\nFrom-SVN: r174007", "tree": {"sha": "57ee63c2245a76365777794f04ac71029e7c2bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57ee63c2245a76365777794f04ac71029e7c2bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6413764c0dd056f000c6541913e95af9bddbb3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6413764c0dd056f000c6541913e95af9bddbb3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6413764c0dd056f000c6541913e95af9bddbb3e"}], "stats": {"total": 65, "additions": 41, "deletions": 24}, "files": [{"sha": "d487e84ac5bd77d6f3052c3692b95f8883b5945b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "patch": "@@ -1,5 +1,13 @@\n 2011-05-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48945\n+\t* decl.c (grokdeclarator): Don't add set const function-cv-qual\n+\tfor constexpr fns to memfn_quals, just add it to the type.\n+\t(revert_static_member_fn): Don't complain about quals.\n+\t(check_static_quals): New.\n+\t(grokfndecl): Call it.\n+\t(start_preparsed_function): Don't call revert_static_member_fn.\n+\n \tPR c++/48945\n \t* decl.c (revert_static_member_fn): Ignore const on constexpr fn.\n "}, {"sha": "733157a3dfa7275e98a85ab9e6ca061954678703", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 29, "deletions": 24, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "patch": "@@ -6960,6 +6960,17 @@ build_this_parm (tree type, cp_cv_quals quals)\n   return parm;\n }\n \n+/* DECL is a static member function.  Complain if it was declared\n+   with function-cv-quals.  */\n+\n+static void\n+check_static_quals (tree decl, cp_cv_quals quals)\n+{\n+  if (quals != TYPE_UNQUALIFIED)\n+    error (\"static member function %q#D declared with type qualifiers\",\n+\t   decl);\n+}\n+\n /* CTYPE is class type, or null if non-class.\n    TYPE is type this FUNCTION_DECL should have, either FUNCTION_TYPE\n    or METHOD_TYPE.\n@@ -7241,6 +7252,9 @@ grokfndecl (tree ctype,\n   if (decl == error_mark_node)\n     return NULL_TREE;\n \n+  if (DECL_STATIC_FUNCTION_P (decl))\n+    check_static_quals (decl, quals);\n+\n   if (attrlist)\n     {\n       cplus_decl_attributes (&decl, *attrlist, 0);\n@@ -7290,9 +7304,11 @@ grokfndecl (tree ctype,\n \n \t  if (DECL_STATIC_FUNCTION_P (old_decl)\n \t      && TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE)\n-\t    /* Remove the `this' parm added by grokclassfn.\n-\t       XXX Isn't this done in start_function, too?  */\n-\t    revert_static_member_fn (decl);\n+\t    {\n+\t      /* Remove the `this' parm added by grokclassfn.  */\n+\t      revert_static_member_fn (decl);\n+\t      check_static_quals (decl, quals);\n+\t    }\n \t  if (DECL_ARTIFICIAL (old_decl))\n \t    {\n \t      error (\"definition of implicitly-declared %qD\", old_decl);\n@@ -9356,12 +9372,6 @@ grokdeclarator (const cp_declarator *declarator,\n   if (ctype == NULL_TREE && decl_context == FIELD && friendp == 0)\n     ctype = current_class_type;\n \n-  /* A constexpr non-static member function is implicitly const.  */\n-  if (constexpr_p && ctype && staticp == 0\n-      && TREE_CODE (type) == FUNCTION_TYPE\n-      && sfk != sfk_constructor && sfk != sfk_destructor)\n-    memfn_quals |= TYPE_QUAL_CONST;\n-\n   /* Now TYPE has the actual type.  */\n \n   if (returned_attrs)\n@@ -9733,7 +9743,12 @@ grokdeclarator (const cp_declarator *declarator,\n \n   if (ctype && TREE_CODE (type) == FUNCTION_TYPE && staticp < 2\n       && !NEW_DELETE_OPNAME_P (unqualified_id))\n-    type = build_memfn_type (type, ctype, memfn_quals);\n+    {\n+      cp_cv_quals real_quals = memfn_quals;\n+      if (constexpr_p && sfk != sfk_constructor && sfk != sfk_destructor)\n+\treal_quals |= TYPE_QUAL_CONST;\n+      type = build_memfn_type (type, ctype, real_quals);\n+    }\n \n   {\n     tree decl;\n@@ -12373,12 +12388,8 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n \n   /* Sometimes we don't notice that a function is a static member, and\n      build a METHOD_TYPE for it.  Fix that up now.  */\n-  if (ctype != NULL_TREE && DECL_STATIC_FUNCTION_P (decl1)\n-      && TREE_CODE (TREE_TYPE (decl1)) == METHOD_TYPE)\n-    {\n-      revert_static_member_fn (decl1);\n-      ctype = NULL_TREE;\n-    }\n+  gcc_assert (!(ctype != NULL_TREE && DECL_STATIC_FUNCTION_P (decl1)\n+\t\t&& TREE_CODE (TREE_TYPE (decl1)) == METHOD_TYPE));\n \n   /* Set up current_class_type, and enter the scope of the class, if\n      appropriate.  */\n@@ -13578,14 +13589,8 @@ revert_static_member_fn (tree decl)\n   cp_cv_quals quals = type_memfn_quals (stype);\n \n   if (quals != TYPE_UNQUALIFIED)\n-    {\n-      if (quals == TYPE_QUAL_CONST && DECL_DECLARED_CONSTEXPR_P (decl))\n-\t/* The const was implicit, don't complain.  */;\n-      else\n-\terror (\"static member function %q#D declared with type qualifiers\",\n-\t       decl);\n-      stype = apply_memfn_quals (stype, TYPE_UNQUALIFIED);\n-    }\n+    stype = apply_memfn_quals (stype, TYPE_UNQUALIFIED);\n+\n   TREE_TYPE (decl) = stype;\n \n   if (DECL_ARGUMENTS (decl))"}, {"sha": "61afdb00e2e02840c603fe3ae3783c60da1b4102", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "patch": "@@ -1,5 +1,7 @@\n 2011-05-20  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-static7.C: Extend.\n+\n \t* g++.dg/cpp0x/constexpr-static7.C: New.\n \n \t* g++.dg/cpp0x/enum12.C: New."}, {"sha": "e46ddafd7028b5126cda274de1ba28da74a19038", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static7.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4a1e468dd4fc44b1d805142d60ff1c3330276e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static7.C?ref=fa4a1e468dd4fc44b1d805142d60ff1c3330276e", "patch": "@@ -3,6 +3,8 @@\n \n struct A {\n   static constexpr bool is();\n+  static constexpr bool is_not();\n };\n \n constexpr bool A::is() { return true; }\n+constexpr bool A::is_not() const { return true; } // { dg-error \"static\" }"}]}