{"sha": "252e03b519637f57b482bf1da6c90357e1b05f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUyZTAzYjUxOTYzN2Y1N2I0ODJiZjFkYTZjOTAzNTdlMWIwNWY2MQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2015-12-16T11:45:25Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2015-12-16T11:45:25Z"}, "message": "[ARM] Add support for ARMv8.1.\n\n\t* config/arm/arm-arches.def: Add \"armv8.1-a\" and \"armv8.1-a+crc\".\n\t* config/arm/arm-protos.h (FL2_ARCH8_1): New.\n\t(FL2_FOR_ARCH8_1A): New.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm.c (arm_arch8_1): New.\n\t(arm_option_override): Set arm_arch8_1.\n\t* config/arm/arm.h (TARGET_NEON_RDMA): New.\n\t(arm_arch8_1): Declare.\n\t* doc/invoke.texi (ARM Options, -march): Add \"armv8.1-a\" and\n\t\"armv8.1-a+crc\".\n\t(ARM Options, -mfpu): Fix a typo.\n\nFrom-SVN: r231678", "tree": {"sha": "17a2852529c28fbf665275df7d2a8b692183fd59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17a2852529c28fbf665275df7d2a8b692183fd59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/252e03b519637f57b482bf1da6c90357e1b05f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252e03b519637f57b482bf1da6c90357e1b05f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252e03b519637f57b482bf1da6c90357e1b05f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252e03b519637f57b482bf1da6c90357e1b05f61/comments", "author": null, "committer": null, "parents": [{"sha": "55089c2b5c6f05bc37a19f425ec1612fa6aa8605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55089c2b5c6f05bc37a19f425ec1612fa6aa8605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55089c2b5c6f05bc37a19f425ec1612fa6aa8605"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "da8d9f24afd5fdc9fba3954645b39a6ebb2cd423", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -1,3 +1,17 @@\n+2015-12-16  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* config/arm/arm-arches.def: Add \"armv8.1-a\" and \"armv8.1-a+crc\".\n+\t* config/arm/arm-protos.h (FL2_ARCH8_1): New.\n+\t(FL2_FOR_ARCH8_1A): New.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm.c (arm_arch8_1): New.\n+\t(arm_option_override): Set arm_arch8_1.\n+\t* config/arm/arm.h (TARGET_NEON_RDMA): New.\n+\t(arm_arch8_1): Declare.\n+\t* doc/invoke.texi (ARM Options, -march): Add \"armv8.1-a\" and\n+\t\"armv8.1-a+crc\".\n+\t(ARM Options, -mfpu): Fix a typo.\n+\n 2015-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/68648"}, {"sha": "6c831538b2d578fb6cc4fcc13249892c74ae7cc6", "filename": "gcc/config/arm/arm-arches.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-arches.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-arches.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-arches.def?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -57,6 +57,11 @@ ARM_ARCH(\"armv7-m\", cortexm3,\t7M,\tARM_FSET_MAKE_CPU1 (FL_CO_PROC |\t      FL_FOR_\n ARM_ARCH(\"armv7e-m\", cortexm4,  7EM,\tARM_FSET_MAKE_CPU1 (FL_CO_PROC |\t      FL_FOR_ARCH7EM))\n ARM_ARCH(\"armv8-a\", cortexa53,  8A,\tARM_FSET_MAKE_CPU1 (FL_CO_PROC |             FL_FOR_ARCH8A))\n ARM_ARCH(\"armv8-a+crc\",cortexa53, 8A,   ARM_FSET_MAKE_CPU1 (FL_CO_PROC | FL_CRC32  | FL_FOR_ARCH8A))\n+ARM_ARCH (\"armv8.1-a\", cortexa53,  8A,\n+\t  ARM_FSET_MAKE (FL_CO_PROC | FL_FOR_ARCH8A,  FL2_FOR_ARCH8_1A))\n+ARM_ARCH (\"armv8.1-a+crc\",cortexa53, 8A,\n+\t  ARM_FSET_MAKE (FL_CO_PROC | FL_CRC32 | FL_FOR_ARCH8A,\n+\t\t\t FL2_FOR_ARCH8_1A))\n ARM_ARCH(\"iwmmxt\",  iwmmxt,     5TE,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT))\n ARM_ARCH(\"iwmmxt2\", iwmmxt2,    5TE,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT | FL_IWMMXT2))\n "}, {"sha": "d649e86672527e52911c11a5419b3e5aebd4b1d7", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -387,6 +387,8 @@ extern bool arm_is_constant_pool_ref (rtx);\n #define FL_IWMMXT2    (1 << 30)       /* \"Intel Wireless MMX2 technology\".  */\n #define FL_ARCH6KZ    (1 << 31)       /* ARMv6KZ architecture.  */\n \n+#define FL2_ARCH8_1   (1 << 0)\t      /* Architecture 8.1.  */\n+\n /* Flags that only effect tuning, not available instructions.  */\n #define FL_TUNE\t\t(FL_WBUF | FL_VFPV2 | FL_STRONG | FL_LDSCHED \\\n \t\t\t | FL_CO_PROC)\n@@ -415,6 +417,7 @@ extern bool arm_is_constant_pool_ref (rtx);\n #define FL_FOR_ARCH7M\t(FL_FOR_ARCH7 | FL_THUMB_DIV)\n #define FL_FOR_ARCH7EM  (FL_FOR_ARCH7M | FL_ARCH7EM)\n #define FL_FOR_ARCH8A\t(FL_FOR_ARCH7VE | FL_ARCH8)\n+#define FL2_FOR_ARCH8_1A\tFL2_ARCH8_1\n \n /* There are too many feature bits to fit in a single word so the set of cpu and\n    fpu capabilities is a structure.  A feature set is created and manipulated"}, {"sha": "db17f6edf9ebd816c5737ee850f2fe15cb30ba58", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -416,10 +416,16 @@ EnumValue\n Enum(arm_arch) String(armv8-a+crc) Value(26)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt) Value(27)\n+Enum(arm_arch) String(armv8.1-a) Value(27)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt2) Value(28)\n+Enum(arm_arch) String(armv8.1-a+crc) Value(28)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt) Value(29)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt2) Value(30)\n \n Enum\n Name(arm_fpu) Type(int)"}, {"sha": "f89411eac5b96ba830807cd016cb49ca553d43d1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -817,6 +817,9 @@ int arm_arch7em = 0;\n /* Nonzero if instructions present in ARMv8 can be used.  */\n int arm_arch8 = 0;\n \n+/* Nonzero if this chip supports the ARMv8.1 extensions.  */\n+int arm_arch8_1 = 0;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n int arm_ld_sched = 0;\n \n@@ -3154,6 +3157,7 @@ arm_option_override (void)\n   arm_arch7 = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH7);\n   arm_arch7em = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH7EM);\n   arm_arch8 = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH8);\n+  arm_arch8_1 = ARM_FSET_HAS_CPU2 (insn_flags, FL2_ARCH8_1);\n   arm_arch_thumb2 = ARM_FSET_HAS_CPU1 (insn_flags, FL_THUMB2);\n   arm_arch_xscale = ARM_FSET_HAS_CPU1 (insn_flags, FL_XSCALE);\n "}, {"sha": "f3c5e1148f3ad081962db400009ee56a871ecd05", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -218,6 +218,9 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n   (TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\t\t\t\\\n    && ARM_FPU_FSET_HAS (TARGET_FPU_FEATURES, FPU_FL_NEON))\n \n+/* FPU supports ARMv8.1 Adv.SIMD extensions.  */\n+#define TARGET_NEON_RDMA (TARGET_NEON && arm_arch8_1)\n+\n /* Q-bit is present.  */\n #define TARGET_ARM_QBIT \\\n   (TARGET_32BIT && arm_arch5e && (arm_arch_notm || arm_arch7))\n@@ -437,6 +440,9 @@ extern int arm_arch7em;\n /* Nonzero if this chip supports the ARM Architecture 8 extensions.  */\n extern int arm_arch8;\n \n+/* Nonzero if this chip supports the ARM Architecture 8.1 extensions.  */\n+extern int arm_arch8_1;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n extern int arm_ld_sched;\n "}, {"sha": "022cc09a0023b5dc96dc0399e76f82a9346790d6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252e03b519637f57b482bf1da6c90357e1b05f61/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=252e03b519637f57b482bf1da6c90357e1b05f61", "patch": "@@ -13545,8 +13545,8 @@ of the @option{-mcpu=} option.  Permissible names are: @samp{armv2},\n @samp{armv6}, @samp{armv6j},\n @samp{armv6t2}, @samp{armv6z}, @samp{armv6kz}, @samp{armv6-m},\n @samp{armv7}, @samp{armv7-a}, @samp{armv7-r}, @samp{armv7-m}, @samp{armv7e-m},\n-@samp{armv7ve}, @samp{armv8-a}, @samp{armv8-a+crc},\n-@samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312}.\n+@samp{armv7ve}, @samp{armv8-a}, @samp{armv8-a+crc}, @samp{armv8.1-a},\n+@samp{armv8.1-a+crc}, @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312}.\n \n @option{-march=armv7ve} is the armv7-a architecture with virtualization\n extensions.\n@@ -13649,7 +13649,7 @@ available on the target.  Permissible names are: @samp{vfp}, @samp{vfpv3},\n @samp{vfpv3xd-fp16}, @samp{neon}, @samp{neon-fp16}, @samp{vfpv4},\n @samp{vfpv4-d16}, @samp{fpv4-sp-d16}, @samp{neon-vfpv4},\n @samp{fpv5-d16}, @samp{fpv5-sp-d16},\n-@samp{fp-armv8}, @samp{neon-fp-armv8}, and @samp{crypto-neon-fp-armv8}.\n+@samp{fp-armv8}, @samp{neon-fp-armv8} and @samp{crypto-neon-fp-armv8}.\n \n If @option{-msoft-float} is specified this specifies the format of\n floating-point values."}]}