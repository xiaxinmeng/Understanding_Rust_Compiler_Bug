{"sha": "3dd4b517364d26c31568aab12274c7027c93789d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkNGI1MTczNjRkMjZjMzE1NjhhYWIxMjI3NGM3MDI3YzkzNzg5ZA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-19T19:42:28Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-19T19:42:28Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r523", "tree": {"sha": "5ab09f75ce29d5bec67849045024a1b421211a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ab09f75ce29d5bec67849045024a1b421211a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dd4b517364d26c31568aab12274c7027c93789d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd4b517364d26c31568aab12274c7027c93789d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd4b517364d26c31568aab12274c7027c93789d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd4b517364d26c31568aab12274c7027c93789d/comments", "author": null, "committer": null, "parents": [{"sha": "b85b8af2c083bfcf959809f6eca10bfff325bc66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b85b8af2c083bfcf959809f6eca10bfff325bc66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b85b8af2c083bfcf959809f6eca10bfff325bc66"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "33b71670f8444ac3255f38170e0c0cd73fe54492", "filename": "gcc/real.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd4b517364d26c31568aab12274c7027c93789d/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd4b517364d26c31568aab12274c7027c93789d/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=3dd4b517364d26c31568aab12274c7027c93789d", "patch": "@@ -137,6 +137,11 @@ extern double (atof) ();\n #define REAL_VALUE_ISINF(x) (target_isinf (x))\n #endif\n \n+/* Determine whether a floating-point value X is a NaN. */\n+#ifndef REAL_VALUE_ISNAN\n+#define REAL_VALUE_ISNAN(x) (target_isnan (x))\n+#endif\n+\n /* Determine whether a floating-point value X is minus 0. */\n #ifndef REAL_VALUE_MINUS_ZERO\n #define REAL_VALUE_MINUS_ZERO(x) (target_minus_zero (x))"}]}