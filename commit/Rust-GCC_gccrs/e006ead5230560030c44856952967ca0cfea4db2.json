{"sha": "e006ead5230560030c44856952967ca0cfea4db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwNmVhZDUyMzA1NjAwMzBjNDQ4NTY5NTI5NjdjYTBjZmVhNGRiMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-02T09:23:56Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-02T09:23:56Z"}, "message": "Properly detect working jobserver in gcc driver.\n\n2019-08-02  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/91313\n\t* gcc.c (driver::maybe_run_linker): Call detect_jobserver\n\tto detect working job server.\n\t(driver::detect_jobserver): Test whether jobserver\n\tis active from GCC driver. That will prevent situation where\n\tGCC is invoked from a LD plugin and the linker already uses\n\tfile descriptors suggested by make.  That leads to a wrong\n\tdetection.\n\t* gcc.h (driver): Add detect_jobserver.\n\t* lto-wrapper.c (jobserver_active_p): Simplify sscanf by\n\tnot scanning for --jobserver-auth prefix.\n\nFrom-SVN: r274003", "tree": {"sha": "1036c571824eb7e7daa673d13ab75084ac68003c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1036c571824eb7e7daa673d13ab75084ac68003c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e006ead5230560030c44856952967ca0cfea4db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e006ead5230560030c44856952967ca0cfea4db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e006ead5230560030c44856952967ca0cfea4db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e006ead5230560030c44856952967ca0cfea4db2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0cc62604f163289afaa37ba45f729ae31a45e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cc62604f163289afaa37ba45f729ae31a45e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0cc62604f163289afaa37ba45f729ae31a45e71"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "096716a0c93de94461f23cfa8068cc133f7b5b49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ead5230560030c44856952967ca0cfea4db2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ead5230560030c44856952967ca0cfea4db2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e006ead5230560030c44856952967ca0cfea4db2", "patch": "@@ -1,3 +1,17 @@\n+2019-08-02  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/91313\n+\t* gcc.c (driver::maybe_run_linker): Call detect_jobserver\n+\tto detect working job server.\n+\t(driver::detect_jobserver): Test whether jobserver\n+\tis active from GCC driver. That will prevent situation where\n+\tGCC is invoked from a LD plugin and the linker already uses\n+\tfile descriptors suggested by make.  That leads to a wrong\n+\tdetection.\n+\t* gcc.h (driver): Add detect_jobserver.\n+\t* lto-wrapper.c (jobserver_active_p): Simplify sscanf by\n+\tnot scanning for --jobserver-auth prefix.\n+\n 2019-08-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/91201"}, {"sha": "18a07426290cfa76647c0f6c11cf2f1cf27a6d44", "filename": "gcc/gcc.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e006ead5230560030c44856952967ca0cfea4db2", "patch": "@@ -8268,6 +8268,8 @@ driver::maybe_run_linker (const char *argv0) const\n     {\n       int tmp = execution_count;\n \n+      detect_jobserver ();\n+\n       if (! have_c)\n \t{\n #if HAVE_LTO_PLUGIN > 0\n@@ -8357,6 +8359,46 @@ driver::final_actions () const\n     }\n }\n \n+/* Detect whether jobserver is active and working.  If not drop\n+   --jobserver-auth from MAKEFLAGS.  */\n+\n+void\n+driver::detect_jobserver () const\n+{\n+  /* Detect jobserver and drop it if it's not working.  */\n+  const char *makeflags = env.get (\"MAKEFLAGS\");\n+  if (makeflags != NULL)\n+    {\n+      const char *needle = \"--jobserver-auth=\";\n+      const char *n = strstr (makeflags, needle);\n+      if (n != NULL)\n+\t{\n+\t  int rfd = -1;\n+\t  int wfd = -1;\n+\n+\t  bool jobserver\n+\t    = (sscanf (n + strlen (needle), \"%d,%d\", &rfd, &wfd) == 2\n+\t       && rfd > 0\n+\t       && wfd > 0\n+\t       && fcntl (rfd, F_GETFD) >= 0\n+\t       && fcntl (wfd, F_GETFD) >= 0);\n+\n+\t  /* Drop the jobserver if it's not working now.  */\n+\t  if (!jobserver)\n+\t    {\n+\t      unsigned offset = n - makeflags;\n+\t      char *dup = xstrdup (makeflags);\n+\t      dup[offset] = '\\0';\n+\n+\t      const char *space = strchr (makeflags + offset, ' ');\n+\t      if (space != NULL)\n+\t\tstrcpy (dup + offset, space);\n+\t      xputenv (concat (\"MAKEFLAGS=\", dup, NULL));\n+\t    }\n+\t}\n+    }\n+}\n+\n /* Determine what the exit code of the driver should be.  */\n \n int"}, {"sha": "dc77dba67fb3aceb8a4afa4230b9b6ce07d27863", "filename": "gcc/gcc.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=e006ead5230560030c44856952967ca0cfea4db2", "patch": "@@ -51,6 +51,7 @@ class driver\n   void do_spec_on_infiles () const;\n   void maybe_run_linker (const char *argv0) const;\n   void final_actions () const;\n+  void detect_jobserver () const;\n   int get_exit_code () const;\n \n  private:"}, {"sha": "3414adedd26c469c1face0dda6779540c484e4f8", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ead5230560030c44856952967ca0cfea4db2/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=e006ead5230560030c44856952967ca0cfea4db2", "patch": "@@ -1234,7 +1234,7 @@ jobserver_active_p (void)\n   int rfd = -1;\n   int wfd = -1;\n \n-  return ((sscanf(n, \"--jobserver-auth=%d,%d\", &rfd, &wfd) == 2)\n+  return (sscanf (n + strlen (needle), \"%d,%d\", &rfd, &wfd) == 2\n \t  && rfd > 0\n \t  && wfd > 0\n \t  && fcntl (rfd, F_GETFD) >= 0"}]}