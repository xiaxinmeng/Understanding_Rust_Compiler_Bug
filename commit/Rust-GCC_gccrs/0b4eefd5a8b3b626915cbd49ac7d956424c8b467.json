{"sha": "0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0ZWVmZDVhOGIzYjYyNjkxNWNiZDQ5YWM3ZDk1NjQyNGM4YjQ2Nw==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-11-24T15:23:28Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-11-24T15:23:28Z"}, "message": "[AArch64]Add vec_shr pattern for 64-bit vectors using ush{l,r}; enable tests.\n\ngcc/:\n \n\t* config/aarch64/aarch64-simd.md (vec_shr<mode>): New.\n\ngcc/testsuite/:\n\n\t* lib/target-supports.exp (check_effective_target_whole_vector_shift):\n\tAdd aarch64{,_be}.\n\nFrom-SVN: r218022", "tree": {"sha": "ad9130dd31daa673cdc7feb9dc3758de07041c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad9130dd31daa673cdc7feb9dc3758de07041c8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/comments", "author": null, "committer": null, "parents": [{"sha": "d9e80f4944deb243a8771917236d49c434c029ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e80f4944deb243a8771917236d49c434c029ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9e80f4944deb243a8771917236d49c434c029ef"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "ee51e9bb72de3cb735c83ab52e366aff3feab76e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "patch": "@@ -1,3 +1,7 @@\n+2014-11-24  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (vec_shr<mode>): New.\n+\n 2014-11-24  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_simd_expand_args):"}, {"sha": "8e31456381f4324fe64a88a289ce6ec65d6a9e92", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "patch": "@@ -795,6 +795,21 @@\n   }\n )\n \n+;; For 64-bit modes we use ushl/r, as this does not require a SIMD zero.\n+(define_insn \"vec_shr_<mode>\"\n+  [(set (match_operand:VD 0 \"register_operand\" \"=w\")\n+        (lshiftrt:VD (match_operand:VD 1 \"register_operand\" \"w\")\n+\t\t     (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n+  \"TARGET_SIMD\"\n+  {\n+    if (BYTES_BIG_ENDIAN)\n+      return \"ushl %d0, %d1, %2\";\n+    else\n+      return \"ushr %d0, %d1, %2\";\n+  }\n+  [(set_attr \"type\" \"neon_shift_imm\")]\n+)\n+\n (define_insn \"aarch64_simd_vec_setv2di\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=w,w\")\n         (vec_merge:V2DI"}, {"sha": "e67389395c2a351e732c6cb8c8ff03e31d19d584", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "patch": "@@ -1,3 +1,8 @@\n+2014-11-24  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+        * lib/target-supports.exp (check_effective_target_whole_vector_shift):\n+\tAdd aarch64{,_be}.\n+\n 2014-11-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63679"}, {"sha": "ac04d95f7c5131b3a7f3bb68d8ba01b915aa050a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4eefd5a8b3b626915cbd49ac7d956424c8b467/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0b4eefd5a8b3b626915cbd49ac7d956424c8b467", "patch": "@@ -3399,6 +3399,7 @@ proc check_effective_target_vect_shift { } {\n proc check_effective_target_whole_vector_shift { } {\n     if { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t || [istarget ia64-*-*]\n+\t || [istarget aarch64*-*-*]\n \t || ([check_effective_target_arm32]\n \t     && [check_effective_target_arm_little_endian])\n \t || ([istarget mips*-*-*]"}]}