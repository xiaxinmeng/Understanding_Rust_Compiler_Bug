{"sha": "b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmZDRkN2UzMjhmMGI5NjdkNjFmZGZlNDRiNWUwMWIyNmNmM2MzMA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2017-03-30T13:51:02Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2017-03-30T13:51:02Z"}, "message": "[PR 77333] Fixup fntypes of gimple calls of clones\n\n2017-03-30  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/77333\n\t* cgraph.h (cgraph_build_function_type_skip_args): Declare.\n\t* cgraph.c (redirect_call_stmt_to_callee): Set gimple fntype so that\n\tit reflects the signature changes performed at the callee side.\n\t* cgraphclones.c (build_function_type_skip_args): Make public, renamed\n\tto cgraph_build_function_type_skip_args.\n\t(build_function_decl_skip_args): Adjust call to the above function.\n\ntestsuite/\n\t* g++.dg/ipa/pr77333.C: New test.\n\nFrom-SVN: r246589", "tree": {"sha": "0d0aa00b6327fc3693098541fb8b4b3c966bfa64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d0aa00b6327fc3693098541fb8b4b3c966bfa64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de008ec4d69a5f7e9b75b25dc9e1fa937d65ff80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de008ec4d69a5f7e9b75b25dc9e1fa937d65ff80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de008ec4d69a5f7e9b75b25dc9e1fa937d65ff80"}], "stats": {"total": 108, "additions": 103, "deletions": 5}, "files": [{"sha": "44e48ec9df9c15e26b5a50aee83954d4e784b9ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -1,3 +1,13 @@\n+2017-03-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/77333\n+\t* cgraph.h (cgraph_build_function_type_skip_args): Declare.\n+\t* cgraph.c (redirect_call_stmt_to_callee): Set gimple fntype so that\n+\tit reflects the signature changes performed at the callee side.\n+\t* cgraphclones.c (build_function_type_skip_args): Make public, renamed\n+\tto cgraph_build_function_type_skip_args.\n+\t(build_function_decl_skip_args): Adjust call to the above function.\n+\n 2017-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/80206"}, {"sha": "92ae0910c600798e4e83ade1e3e50655027c6e6f", "filename": "gcc/cgraph.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -1424,8 +1424,23 @@ cgraph_edge::redirect_call_stmt_to_callee (void)\n       if (skip_bounds)\n \tnew_stmt = chkp_copy_call_skip_bounds (new_stmt);\n \n+      tree old_fntype = gimple_call_fntype (e->call_stmt);\n       gimple_call_set_fndecl (new_stmt, e->callee->decl);\n-      gimple_call_set_fntype (new_stmt, gimple_call_fntype (e->call_stmt));\n+      cgraph_node *origin = e->callee;\n+      while (origin->clone_of)\n+\torigin = origin->clone_of;\n+\n+      if ((origin->former_clone_of\n+\t   && old_fntype == TREE_TYPE (origin->former_clone_of))\n+\t  || old_fntype == TREE_TYPE (origin->decl))\n+\tgimple_call_set_fntype (new_stmt, TREE_TYPE (e->callee->decl));\n+      else\n+\t{\n+\t  bitmap skip = e->callee->clone.combined_args_to_skip;\n+\t  tree t = cgraph_build_function_type_skip_args (old_fntype, skip,\n+\t\t\t\t\t\t\t false);\n+\t  gimple_call_set_fntype (new_stmt, t);\n+\t}\n \n       if (gimple_vdef (new_stmt)\n \t  && TREE_CODE (gimple_vdef (new_stmt)) == SSA_NAME)"}, {"sha": "62cebd9e55add25afbef4209d6be5dab91c77d7d", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -2326,6 +2326,8 @@ void tree_function_versioning (tree, tree, vec<ipa_replace_map *, va_gc> *,\n void dump_callgraph_transformation (const cgraph_node *original,\n \t\t\t\t    const cgraph_node *clone,\n \t\t\t\t    const char *suffix);\n+tree cgraph_build_function_type_skip_args (tree orig_type, bitmap args_to_skip,\n+\t\t\t\t\t   bool skip_return);\n \n /* In cgraphbuild.c  */\n int compute_call_stmt_bb_frequency (tree, basic_block bb);"}, {"sha": "69572b926c4b7fa4b41edd01908dd4878dda3d96", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -152,9 +152,9 @@ cgraph_edge::clone (cgraph_node *n, gcall *call_stmt, unsigned stmt_uid,\n /* Build variant of function type ORIG_TYPE skipping ARGS_TO_SKIP and the\n    return value if SKIP_RETURN is true.  */\n \n-static tree\n-build_function_type_skip_args (tree orig_type, bitmap args_to_skip,\n-\t\t\t       bool skip_return)\n+tree\n+cgraph_build_function_type_skip_args (tree orig_type, bitmap args_to_skip,\n+\t\t\t\t      bool skip_return)\n {\n   tree new_type = NULL;\n   tree args, new_args = NULL;\n@@ -219,7 +219,8 @@ build_function_decl_skip_args (tree orig_decl, bitmap args_to_skip,\n   if (prototype_p (new_type)\n       || (skip_return && !VOID_TYPE_P (TREE_TYPE (new_type))))\n     new_type\n-      = build_function_type_skip_args (new_type, args_to_skip, skip_return);\n+      = cgraph_build_function_type_skip_args (new_type, args_to_skip,\n+\t\t\t\t\t      skip_return);\n   TREE_TYPE (new_decl) = new_type;\n \n   /* For declarations setting DECL_VINDEX (i.e. methods)"}, {"sha": "89ade94f21331f2a6b9511f911aca7694ea6ceff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -1,3 +1,8 @@\n+2017-03-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/77333\n+\t* g++.dg/ipa/pr77333.C: New test.\n+\n 2017-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/80206"}, {"sha": "1ef997f7a5429271ce75f9e8037fc13da8baaeb3", "filename": "gcc/testsuite/g++.dg/ipa/pr77333.C", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr77333.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr77333.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr77333.C?ref=b0fd4d7e328f0b967d61fdfe44b5e01b26cf3c30", "patch": "@@ -0,0 +1,65 @@\n+// { dg-do run }\n+// { dg-options \"-O2 -fno-ipa-sra\" }\n+\n+volatile int global;\n+int __attribute__((noinline, noclone))\n+get_data (int i)\n+{\n+  global = i;\n+  return i;\n+}\n+\n+typedef int array[32];\n+\n+namespace {\n+\n+char buf[512];\n+\n+class A\n+{\n+public:\n+  int field;\n+  char *s;\n+\n+  A() : field(223344)\n+  {\n+    s = buf;\n+  }\n+\n+  int __attribute__((noinline))\n+  foo (int a, int b, int c, int d, int e, int f, int g, int h, int i, int j,\n+       int k, int l, int m, int n, int o, int p, int q, int r, int s, int t)\n+  {\n+    global = a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t;\n+    return global;\n+  }\n+\n+  int __attribute__((noinline))\n+  bar()\n+  {\n+    int r = foo (get_data (1), get_data (1), get_data (1), get_data (1),\n+\t\t get_data (1), get_data (1), get_data (1), get_data (1),\n+\t\t get_data (1), get_data (1), get_data (1), get_data (1),\n+\t\t get_data (1), get_data (1), get_data (1), get_data (1),\n+\t\t get_data (1), get_data (1), get_data (1), get_data (1));\n+\n+    if (field != 223344)\n+      __builtin_abort ();\n+    return 0;\n+  }\n+};\n+\n+}\n+\n+int main (int argc, char **argv)\n+{\n+  A a;\n+  int r = a.bar();\n+  r = a.bar ();\n+  if (a.field != 223344)\n+      __builtin_abort ();\n+  if (global != 20)\n+    __builtin_abort ();\n+\n+  return r;\n+}"}]}