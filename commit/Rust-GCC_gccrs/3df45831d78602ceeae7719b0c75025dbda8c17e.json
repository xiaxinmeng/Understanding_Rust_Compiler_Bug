{"sha": "3df45831d78602ceeae7719b0c75025dbda8c17e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmNDU4MzFkNzg2MDJjZWVhZTc3MTliMGM3NTAyNWRiZGE4YzE3ZQ==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-04-08T21:29:13Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-04-08T21:29:13Z"}, "message": "linkage.m4 (GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1): Eliminate a subshell and if test fails...\n\n2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* linkage.m4 (GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1): Eliminate\n\ta subshell and if test fails, test for same functions with\n\tleading underscore.\n\t(GLIBCXX_CHECK_MATH_SUPPORT): Eliminate seperate checks for _funcs.\n\t* configure: Regenerate.\n\nFrom-SVN: r97860", "tree": {"sha": "b7a87cde46e9f514dd2d33ba411b687b78e30d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7a87cde46e9f514dd2d33ba411b687b78e30d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3df45831d78602ceeae7719b0c75025dbda8c17e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df45831d78602ceeae7719b0c75025dbda8c17e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df45831d78602ceeae7719b0c75025dbda8c17e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df45831d78602ceeae7719b0c75025dbda8c17e/comments", "author": null, "committer": null, "parents": [{"sha": "d4113656167b64f1c25138bbdf46d7f85ef1bd47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4113656167b64f1c25138bbdf46d7f85ef1bd47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4113656167b64f1c25138bbdf46d7f85ef1bd47"}], "stats": {"total": 7121, "additions": 3534, "deletions": 3587}, "files": [{"sha": "4f82c61f8491fc851da586fdb312cd626d46165e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3df45831d78602ceeae7719b0c75025dbda8c17e", "patch": "@@ -1,3 +1,11 @@\n+2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* linkage.m4 (GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1): Eliminate\n+\ta subshell and if test fails, test for same functions with \n+\tleading underscore.\n+\t(GLIBCXX_CHECK_MATH_SUPPORT): Eliminate seperate checks for _funcs.\n+\t* configure: Regenerate.\n+\n 2005-04-08  Danny Smith  <dannysmith@users.sourceforge.net>\n \t    Paolo Carlini  <pcarlini@suse.de>\n \t    \t\t"}, {"sha": "584c34b5c248491a0a3fd80b60c1cb16f8419f59", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3507, "deletions": 3564, "changes": 7071, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3df45831d78602ceeae7719b0c75025dbda8c17e"}, {"sha": "59321d60fa0734b7d9d5c7f530c42d45e5e6f010", "filename": "libstdc++-v3/linkage.m4", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2Flinkage.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df45831d78602ceeae7719b0c75025dbda8c17e/libstdc%2B%2B-v3%2Flinkage.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flinkage.m4?ref=3df45831d78602ceeae7719b0c75025dbda8c17e", "patch": "@@ -27,6 +27,7 @@ AC_DEFUN([GLIBCXX_CHECK_MATH_DECL_1], [\n   AC_MSG_RESULT($glibcxx_cv_func_$1_use)\n ])\n \n+\n dnl\n dnl Check to see if the (math function) argument passed is\n dnl 1) declared when using the c++ compiler\n@@ -59,19 +60,35 @@ dnl of functions at once.  It's an all-or-nothing check -- either\n dnl HAVE_XYZ is defined for each of the functions, or for none of them.\n dnl Doing it this way saves significant configure time.\n AC_DEFUN([GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1], [\n+  define([funclist],patsubst($3,\\(\\w+\\)\\(\\W*\\),\\1 ))dnl\n   AC_MSG_CHECKING([for $1 functions])\n   AC_CACHE_VAL(glibcxx_cv_func_$2_use, [\n     AC_LANG_SAVE\n     AC_LANG_CPLUSPLUS\n     AC_TRY_COMPILE([#include <math.h>],\n-                   [ `for x in $3; do echo \"$x (0);\"; done` ],\n+                   patsubst(funclist,[\\w+],[\\& (0);]),\n                    [glibcxx_cv_func_$2_use=yes],\n                    [glibcxx_cv_func_$2_use=no])\n     AC_LANG_RESTORE])\n   AC_MSG_RESULT($glibcxx_cv_func_$2_use)\n   if test x$glibcxx_cv_func_$2_use = x\"yes\"; then\n-    AC_CHECK_FUNCS($3)\n+    AC_CHECK_FUNCS(funclist)\n+  else\n+    AC_MSG_CHECKING([for _$1 functions])\n+    AC_CACHE_VAL(glibcxx_cv_func__$2_use, [\n+      AC_LANG_SAVE\n+      AC_LANG_CPLUSPLUS\n+      AC_TRY_COMPILE([#include <math.h>],\n+                     patsubst(funclist,[\\w+],[_\\& (0);]),\n+                     [glibcxx_cv_func__$2_use=yes],\n+                     [glibcxx_cv_func__$2_use=no])\n+      AC_LANG_RESTORE])\n+    AC_MSG_RESULT($glibcxx_cv_func__$2_use)\n+    if test x$glibcxx_cv_func__$2_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(patsubst(funclist,[\\w+],[_\\&]))\n+    fi\n   fi\n+  undefine([funclist])\n ])\n \n dnl\n@@ -450,27 +467,6 @@ AC_DEFUN([GLIBCXX_CHECK_MATH_SUPPORT], [\n   dnl keep this sync'd with the one above. And if you add any new symbol,\n   dnl please add the corresponding block in the @BOTTOM@ section of acconfig.h.\n   dnl Check to see if certain C math functions exist.\n-\n-  dnl Check to see if basic C math functions have float versions.\n-  GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1(_float trig,\n-                                          _float_trig,\n-                                          _acosf _asinf _atanf \\\n-                                          _cosf _sinf _tanf \\\n-                                          _coshf _sinhf _tanhf)\n-  GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1(_float round,\n-                                          _float_round,\n-                                          _ceilf _floorf)\n-\n-  dnl Check to see if basic C math functions have long double versions.\n-  GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double trig,\n-                                          _long_double_trig,\n-                                          _acosl _asinl _atanl \\\n-                                          _cosl _sinl _tanl \\\n-                                          _coshl _sinhl _tanhl)\n-  GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double round,\n-                                          _long_double_round,\n-                                          _ceill _floorl)\n-\n   LIBS=\"$ac_save_LIBS\"\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n ])"}]}