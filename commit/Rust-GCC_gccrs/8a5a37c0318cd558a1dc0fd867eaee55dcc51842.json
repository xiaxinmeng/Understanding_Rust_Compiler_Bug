{"sha": "8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE1YTM3YzAzMThjZDU1OGExZGMwZmQ4NjdlYWVlNTVkY2M1MTg0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-27T11:02:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-27T11:02:08Z"}, "message": "re PR c++/85068 (ICE with invalid covariant return type hierarchy)\n\n\tPR c++/85068\n\t* class.c (update_vtable_entry_for_fn): Don't ICE if base_binfo\n\tis NULL.  Assert if thunk_binfo is NULL then errorcount is non-zero.\n\n\t* g++.dg/inherit/covariant22.C: New test.\n\nFrom-SVN: r258873", "tree": {"sha": "e500e3cb2dad91e10a0464127fd2621765401e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e500e3cb2dad91e10a0464127fd2621765401e9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36a4fb13d88960c9950a2a68b05321422245658a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a4fb13d88960c9950a2a68b05321422245658a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a4fb13d88960c9950a2a68b05321422245658a"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "1f035c30daca99b0b2f39723941b17267014992b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "patch": "@@ -1,3 +1,9 @@\n+2018-03-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/85068\n+\t* class.c (update_vtable_entry_for_fn): Don't ICE if base_binfo\n+\tis NULL.  Assert if thunk_binfo is NULL then errorcount is non-zero.\n+\n 2018-03-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "debcaf21cf76393dd92f2122111beff672339f8c", "filename": "gcc/cp/class.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "patch": "@@ -2479,19 +2479,20 @@ update_vtable_entry_for_fn (tree t, tree binfo, tree fn, tree* virtuals,\n \t     order.  Of course it is lame that we have to repeat the\n \t     search here anyway -- we should really be caching pieces\n \t     of the vtable and avoiding this repeated work.  */\n-\t  tree thunk_binfo, base_binfo;\n+\t  tree thunk_binfo = NULL_TREE;\n+\t  tree base_binfo = TYPE_BINFO (base_return);\n \n \t  /* Find the base binfo within the overriding function's\n \t     return type.  We will always find a thunk_binfo, except\n \t     when the covariancy is invalid (which we will have\n \t     already diagnosed).  */\n-\t  for (base_binfo = TYPE_BINFO (base_return),\n-\t       thunk_binfo = TYPE_BINFO (over_return);\n-\t       thunk_binfo;\n-\t       thunk_binfo = TREE_CHAIN (thunk_binfo))\n-\t    if (SAME_BINFO_TYPE_P (BINFO_TYPE (thunk_binfo),\n-\t\t\t\t   BINFO_TYPE (base_binfo)))\n-\t      break;\n+\t  if (base_binfo)\n+\t    for (thunk_binfo = TYPE_BINFO (over_return); thunk_binfo;\n+\t\t thunk_binfo = TREE_CHAIN (thunk_binfo))\n+\t      if (SAME_BINFO_TYPE_P (BINFO_TYPE (thunk_binfo),\n+\t\t\t\t     BINFO_TYPE (base_binfo)))\n+\t\tbreak;\n+\t  gcc_assert (thunk_binfo || errorcount);\n \n \t  /* See if virtual inheritance is involved.  */\n \t  for (virtual_offset = thunk_binfo;"}, {"sha": "1bce088faf32e043f077fceee61a3c7fe0ce15e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "patch": "@@ -1,3 +1,8 @@\n+2018-03-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/85068\n+\t* g++.dg/inherit/covariant22.C: New test.\n+\n 2018-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR testsuite/84004"}, {"sha": "26c96e6abfc6d41d13a22b7ce237a8c8f7f85304", "filename": "gcc/testsuite/g++.dg/inherit/covariant22.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a5a37c0318cd558a1dc0fd867eaee55dcc51842/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant22.C?ref=8a5a37c0318cd558a1dc0fd867eaee55dcc51842", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/85068\n+// { dg-do compile }\n+\n+struct A;\n+\n+struct B\n+{\n+  virtual A *foo ();\t// { dg-error \"overriding\" }\n+};\n+\n+struct C : virtual B\n+{\n+  virtual C *foo ();\t// { dg-error \"invalid covariant return type for\" }\n+};\n+\n+struct D : C\n+{\n+  virtual C *foo ();\n+};"}]}