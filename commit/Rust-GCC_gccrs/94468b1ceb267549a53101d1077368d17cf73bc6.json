{"sha": "94468b1ceb267549a53101d1077368d17cf73bc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0NjhiMWNlYjI2NzU0OWE1MzEwMWQxMDc3MzY4ZDE3Y2Y3M2JjNg==", "commit": {"author": {"name": "Michele Sandri", "email": "gpointorama@gmail.com", "date": "2007-01-28T18:55:36Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2007-01-28T18:55:36Z"}, "message": "2007-01-28  Michele Sandri  <gpointorama@gmail.com>\n\n\t* gnu/java/nio/channels/natFileChannelWin32.cc\n\t(lock): Implemented.\n\t(unlock): Implemented.\n\nFrom-SVN: r121265", "tree": {"sha": "67e57e2a595b91e1231c3b6845cab068569b8f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67e57e2a595b91e1231c3b6845cab068569b8f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94468b1ceb267549a53101d1077368d17cf73bc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94468b1ceb267549a53101d1077368d17cf73bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94468b1ceb267549a53101d1077368d17cf73bc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94468b1ceb267549a53101d1077368d17cf73bc6/comments", "author": {"login": "ducktype", "id": 122023, "node_id": "MDQ6VXNlcjEyMjAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/122023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ducktype", "html_url": "https://github.com/ducktype", "followers_url": "https://api.github.com/users/ducktype/followers", "following_url": "https://api.github.com/users/ducktype/following{/other_user}", "gists_url": "https://api.github.com/users/ducktype/gists{/gist_id}", "starred_url": "https://api.github.com/users/ducktype/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ducktype/subscriptions", "organizations_url": "https://api.github.com/users/ducktype/orgs", "repos_url": "https://api.github.com/users/ducktype/repos", "events_url": "https://api.github.com/users/ducktype/events{/privacy}", "received_events_url": "https://api.github.com/users/ducktype/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226a2e08e50f39f910b847f04fb16ab2cac6d5e1"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "9c1e951069168d0e939d63acd8d3464b07796458", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94468b1ceb267549a53101d1077368d17cf73bc6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94468b1ceb267549a53101d1077368d17cf73bc6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=94468b1ceb267549a53101d1077368d17cf73bc6", "patch": "@@ -1,3 +1,9 @@\n+2007-01-28  Michele Sandri  <gpointorama@gmail.com>\n+\n+\t* gnu/java/nio/channels/natFileChannelWin32.cc\n+\t(lock): Implemented.\n+\t(unlock): Implemented.\n+\n 2007-01-27  Andreas Tobler  <a.tobler@schweiz.org>\n \n \tPR libgcj/30513"}, {"sha": "ab238e6234cd708fa2eef7711fd64390a755fd68", "filename": "libjava/gnu/java/nio/channels/natFileChannelWin32.cc", "status": "modified", "additions": 41, "deletions": 7, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94468b1ceb267549a53101d1077368d17cf73bc6/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94468b1ceb267549a53101d1077368d17cf73bc6/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelWin32.cc?ref=94468b1ceb267549a53101d1077368d17cf73bc6", "patch": "@@ -343,18 +343,52 @@ FileChannelImpl::available (void)\n }\n \n jboolean\n-FileChannelImpl::lock\n-(jlong /*pos*/, jlong /*len*/, jboolean /*shared*/, jboolean /*wait*/)\n+FileChannelImpl::lock (jlong pos, jlong len, jboolean shared, jboolean wait)\n {\n-  throw new IOException (JvNewStringLatin1\n-    (\"FileChannel.lock() not implemented\"));\n+  DWORD flags = 0;\n+  OVERLAPPED ovlpd;\n+\n+  ZeroMemory(&ovlpd,sizeof(OVERLAPPED));\n+\n+  if(!shared)\n+    flags |= LOCKFILE_EXCLUSIVE_LOCK;\n+  if(!wait)\n+    flags |= LOCKFILE_FAIL_IMMEDIATELY;\n+\n+  ovlpd.Offset = (DWORD)pos;\n+  ovlpd.OffsetHigh = pos>>32;\n+\n+  DWORD lenlow = (DWORD)len;\n+  DWORD lenhigh = len>>32;\n+\n+  BOOL ret = LockFileEx((HANDLE)fd,flags,0,lenlow,lenhigh,&ovlpd);\n+\n+  if(ret==ERROR_IO_PENDING && !shared && wait)\n+    ret = GetOverlappedResult((HANDLE)fd,&ovlpd,NULL,wait);\n+\n+  if(!ret)\n+    _Jv_ThrowIOException(GetLastError());\n+\n+  return true;\n }\n \n void\n-FileChannelImpl::unlock (jlong /*pos*/, jlong /*len*/)\n+FileChannelImpl::unlock (jlong pos, jlong len)\n {\n-  throw new IOException (JvNewStringLatin1\n-    (\"FileChannel.unlock() not implemented\"));\n+  OVERLAPPED ovlpd;\n+\n+  ZeroMemory(&ovlpd,sizeof(OVERLAPPED));\n+\n+  ovlpd.Offset = (DWORD)pos;\n+  ovlpd.OffsetHigh = pos>>32;\n+\n+  DWORD lenlow = (DWORD)len;\n+  DWORD lenhigh = len>>32;\n+\n+  BOOL ret = UnlockFileEx((HANDLE)fd,0,lenlow,lenhigh,&ovlpd);\n+\n+  if(!ret)\n+    _Jv_ThrowIOException(GetLastError());\n }\n \n java::nio::MappedByteBuffer *"}]}