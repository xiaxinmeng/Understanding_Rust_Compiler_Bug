{"sha": "2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3ZjVmOWI1ZjU0YWFlOGVhYWFhNmU0MzA0MjJlY2JiZmU5MWY0ZA==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-09T10:40:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-09T10:40:28Z"}, "message": "re PR testsuite/42843 (--enable-build-with-cxx plugin tests fail)\n\ngcc:\n\tPR testsuite/42843\n\t* gcc-plugin.h (int plugin_is_GPL_compatible): Declare as extern \"C\".\n\t* doc/plugins.texi (Plugin license check): Update information\n\ton type of plugin_is_GPL_compatible.\n\t* Makefile.in (PLUGINCC): Define as $(COMPILER).\n\t(PLUGINCFLAGS): Define as $(COMPILER_FLAGS).\ngcc/testsuite:\n\tPR testsuite/42843\n\t* gcc.dg/plugin/selfassign.c (pass_warn_self_assign): Use enumerator\n\tTV_NONE to initialize tv_id field.\n\t* g++.dg/plugin/selfassign.c (pass_warn_self_assign): Likewise.\n\t* gcc.dg/plugin/one_time_plugin.c (one_pass): Likewise.\n\t* g++.dg/plugin/dumb_plugin.c (pass_dumb_plugin_example): Likewise.\n\tInclude toplev.h .\n\t* gcc.dg/plugin/finish_unit_plugin.c: Include cgraph.h.\n\t* g++.dg/plugin/attribute_plugin.c: Include toplev.h and plugin.h .\n\t* g++.dg/plugin/pragma_plugin.c: Include toplev.h .\n\nFrom-SVN: r160461", "tree": {"sha": "2a02e0c255a32712fe3a4acc240d7ac19d537f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a02e0c255a32712fe3a4acc240d7ac19d537f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/comments", "author": null, "committer": null, "parents": [{"sha": "ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5dfc4869aad7bedad9e749e6eed7d5f783b970"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "a1d7c0d8fa49486f7ffd2686e5d9f87389c73a3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -1,3 +1,12 @@\n+2010-06-09  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR testsuite/42843\n+\t* gcc-plugin.h (int plugin_is_GPL_compatible): Declare as extern \"C\".\n+\t* doc/plugins.texi (Plugin license check): Update information\n+\ton type of plugin_is_GPL_compatible.\n+\t* Makefile.in (PLUGINCC): Define as $(COMPILER).\n+\t(PLUGINCFLAGS): Define as $(COMPILER_FLAGS).\n+\n 2010-06-09  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/arm/arm.c (thumb2_reorg): New function.\n@@ -13,7 +22,7 @@\n \n 2010-06-09  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n-\tPR plugins/44459:\n+\tPR plugins/44459\n \t* gcc-plugin.h: Encapsulate all declarations in extern \"C\".\n \n 2010-06-08  Jan Hubicka  <jh@suse.cz>"}, {"sha": "54c854b222c5137ab5e8e4c8669cf8bd779d6f28", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -331,10 +331,10 @@ LTO_BINARY_READER = @LTO_BINARY_READER@\n LTO_USE_LIBELF = @LTO_USE_LIBELF@\n \n # Compiler needed for plugin support\n-PLUGINCC = @CC@\n+PLUGINCC = $(COMPILER)\n \n # Flags needed for plugin support\n-PLUGINCFLAGS = @CFLAGS@\n+PLUGINCFLAGS = $(COMPILER_FLAGS)\n \n # Libs and linker options needed for plugin support\n PLUGINLIBS = @pluginlibs@"}, {"sha": "5a56042499356c2c0b40a68eaec75b1ffddf8659", "filename": "gcc/doc/plugins.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Fdoc%2Fplugins.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Fdoc%2Fplugins.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fplugins.texi?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -50,8 +50,10 @@ fatal error: plugin <name> is not licensed under a GPL-compatible license\n compilation terminated\n @end smallexample\n \n-The type of the symbol is irrelevant.  The compiler merely asserts that\n-it exists in the global scope.  Something like this is enough:\n+The declared type of the symbol should be int, to match a forward declaration\n+in @file{gcc-plugin.h} that suppresses C++ mangling.  It does not need to be in\n+any allocated section, though.  The compiler merely asserts that\n+the symbol exists in the global scope.  Something like this is enough:\n \n @smallexample\n int plugin_is_GPL_compatible;"}, {"sha": "7573fa28d7c8642d1fd5c91ce80c36a5dea01ca4", "filename": "gcc/gcc-plugin.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Fgcc-plugin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Fgcc-plugin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-plugin.h?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -151,4 +151,15 @@ extern const char* default_plugin_dir_name (void);\n }\n #endif\n \n+/* In case the C++ compiler does name mangling for globals, declare\n+   plugin_is_GPL_compatible extern \"C\" so that a later definition\n+   in a plugin file will have this linkage.  */\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+extern int plugin_is_GPL_compatible;\n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* GCC_PLUGIN_H */"}, {"sha": "a17f5aeee16c88c838175e0d34ebb5cd1062f574", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -1,3 +1,16 @@\n+2010-06-09  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR testsuite/42843\n+\t* gcc.dg/plugin/selfassign.c (pass_warn_self_assign): Use enumerator\n+\tTV_NONE to initialize tv_id field.\n+\t* g++.dg/plugin/selfassign.c (pass_warn_self_assign): Likewise.\n+\t* gcc.dg/plugin/one_time_plugin.c (one_pass): Likewise.\n+\t* g++.dg/plugin/dumb_plugin.c (pass_dumb_plugin_example): Likewise.\n+\tInclude toplev.h .\n+\t* gcc.dg/plugin/finish_unit_plugin.c: Include cgraph.h.\n+\t* g++.dg/plugin/attribute_plugin.c: Include toplev.h and plugin.h .\n+\t* g++.dg/plugin/pragma_plugin.c: Include toplev.h .\n+\n 2010-06-08  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR tree-optimization/39874"}, {"sha": "6327095f7cddc5a6642ab2779cf175febbd51f0a", "filename": "gcc/testsuite/g++.dg/plugin/attribute_plugin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fattribute_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fattribute_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fattribute_plugin.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -8,6 +8,8 @@\n #include \"tree.h\"\n #include \"tree-pass.h\"\n #include \"intl.h\"\n+#include \"toplev.h\"\n+#include \"plugin.h\"\n \n int plugin_is_GPL_compatible;\n "}, {"sha": "f12a6a0d35bbf2831f02178edbdf090ed02508c8", "filename": "gcc/testsuite/g++.dg/plugin/dumb_plugin.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdumb_plugin.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -9,6 +9,7 @@\n #include \"tree.h\"\n #include \"tree-pass.h\"\n #include \"intl.h\"\n+#include \"toplev.h\"\n \n int plugin_is_GPL_compatible;\n \n@@ -65,7 +66,7 @@ static struct gimple_opt_pass pass_dumb_plugin_example =\n     NULL,                                 /* sub */\n     NULL,                                 /* next */\n     0,                                    /* static_pass_number */\n-    0,                                    /* tv_id */\n+    TV_NONE,                              /* tv_id */\n     PROP_cfg,                             /* properties_required */\n     0,                                    /* properties_provided */\n     0,                                    /* properties_destroyed */"}, {"sha": "241526b1e2ce82d3f5124f764349e4c2dd7eadf2", "filename": "gcc/testsuite/g++.dg/plugin/pragma_plugin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fpragma_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fpragma_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fpragma_plugin.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -13,6 +13,7 @@\n #include \"cpplib.h\"\n #include \"tree-pass.h\"\n #include \"intl.h\"\n+#include \"toplev.h\"\n \n int plugin_is_GPL_compatible;\n "}, {"sha": "df42abd27df1b3cef1077740454a41561afa91d3", "filename": "gcc/testsuite/g++.dg/plugin/selfassign.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -275,7 +275,7 @@ static struct gimple_opt_pass pass_warn_self_assign =\n     NULL,                                 /* sub */\n     NULL,                                 /* next */\n     0,                                    /* static_pass_number */\n-    0,                                    /* tv_id */\n+    TV_NONE,                              /* tv_id */\n     PROP_ssa,                             /* properties_required */\n     0,                                    /* properties_provided */\n     0,                                    /* properties_destroyed */"}, {"sha": "26496a2e6953e7967ef3a8b04855cd0a8dfe3eca", "filename": "gcc/testsuite/gcc.dg/plugin/finish_unit_plugin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -12,6 +12,7 @@\n #include \"tree.h\"\n #include \"tree-pass.h\"\n #include \"intl.h\"\n+#include \"cgraph.h\"\n \n int plugin_is_GPL_compatible;\n "}, {"sha": "2c4cd497192a3b236fe4975f2ca1c535b9bcd339", "filename": "gcc/testsuite/gcc.dg/plugin/one_time_plugin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -37,7 +37,7 @@ struct gimple_opt_pass one_pass =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   PROP_gimple_any,                      /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "df42abd27df1b3cef1077740454a41561afa91d3", "filename": "gcc/testsuite/gcc.dg/plugin/selfassign.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c?ref=2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "patch": "@@ -275,7 +275,7 @@ static struct gimple_opt_pass pass_warn_self_assign =\n     NULL,                                 /* sub */\n     NULL,                                 /* next */\n     0,                                    /* static_pass_number */\n-    0,                                    /* tv_id */\n+    TV_NONE,                              /* tv_id */\n     PROP_ssa,                             /* properties_required */\n     0,                                    /* properties_provided */\n     0,                                    /* properties_destroyed */"}]}