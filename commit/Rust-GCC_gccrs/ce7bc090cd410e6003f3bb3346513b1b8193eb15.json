{"sha": "ce7bc090cd410e6003f3bb3346513b1b8193eb15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3YmMwOTBjZDQxMGU2MDAzZjNiYjMzNDY1MTNiMWI4MTkzZWIxNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-07-16T14:11:52Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-07-16T14:11:52Z"}, "message": "hash_set: add iterator and remove method.\n\n\t* hash-set.h (remove): New function.\n\t(iterator): New iteration class for hash_set.\n\nFrom-SVN: r225885", "tree": {"sha": "bd3538aabec20c805dfcb30982225557bf9da3ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd3538aabec20c805dfcb30982225557bf9da3ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce7bc090cd410e6003f3bb3346513b1b8193eb15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7bc090cd410e6003f3bb3346513b1b8193eb15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7bc090cd410e6003f3bb3346513b1b8193eb15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7bc090cd410e6003f3bb3346513b1b8193eb15/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "281e728b57232be21358b49d9e356a562566e453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281e728b57232be21358b49d9e356a562566e453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281e728b57232be21358b49d9e356a562566e453"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "90254ffb0a80e1470d71d0658f3a700fe3decfe5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7bc090cd410e6003f3bb3346513b1b8193eb15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7bc090cd410e6003f3bb3346513b1b8193eb15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce7bc090cd410e6003f3bb3346513b1b8193eb15", "patch": "@@ -1,3 +1,8 @@\n+2015-07-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* hash-set.h (remove): New function.\n+\t(iterator): New iteration class for hash_set.\n+\n 2015-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* genattrtab.c (make_canonical): Add a file_location parameter."}, {"sha": "e85af2a1745270fca02a647765b9e50858976197", "filename": "gcc/hash-set.h", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7bc090cd410e6003f3bb3346513b1b8193eb15/gcc%2Fhash-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7bc090cd410e6003f3bb3346513b1b8193eb15/gcc%2Fhash-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-set.h?ref=ce7bc090cd410e6003f3bb3346513b1b8193eb15", "patch": "@@ -59,6 +59,11 @@ class hash_set\n       return !Traits::is_empty (e);\n     }\n \n+  void remove (const Key &k)\n+    {\n+      m_table.remove_elt_with_hash (k, Traits::hash (k));\n+    }\n+\n   /* Call the call back on each pair of key and value with the passed in\n      arg.  */\n \n@@ -74,6 +79,40 @@ class hash_set\n \n   size_t elements () const { return m_table.elements (); }\n \n+  class iterator\n+  {\n+  public:\n+    explicit iterator (const typename hash_table<Traits>::iterator &iter) :\n+      m_iter (iter) {}\n+\n+    iterator &operator++ ()\n+      {\n+\t++m_iter;\n+\treturn *this;\n+      }\n+\n+    Key\n+    operator* ()\n+      {\n+\treturn *m_iter;\n+      }\n+\n+    bool\n+    operator != (const iterator &other) const\n+      {\n+\treturn m_iter != other.m_iter;\n+      }\n+\n+  private:\n+    typename hash_table<Traits>::iterator m_iter;\n+  };\n+\n+  /* Standard iterator retrieval methods.  */\n+\n+  iterator begin () const { return iterator (m_table.begin ()); }\n+  iterator end () const { return iterator (m_table.end ()); }\n+\n+\n private:\n \n   template<typename T, typename U> friend void gt_ggc_mx (hash_set<T, U> *);"}]}