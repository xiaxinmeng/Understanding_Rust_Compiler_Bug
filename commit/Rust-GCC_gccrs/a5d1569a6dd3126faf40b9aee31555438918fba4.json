{"sha": "a5d1569a6dd3126faf40b9aee31555438918fba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkMTU2OWE2ZGQzMTI2ZmFmNDBiOWFlZTMxNTU1NDM4OTE4ZmJhNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-03-05T06:01:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-05T06:01:13Z"}, "message": "re PR bootstrap/56509 (gnattools build failure)\n\n\tPR bootstrap/56509\n\t* opts.c (opts_obstack, opts_concat): Moved to...\n\t* opts-common.c (opts_obstack, opts_concat): ... here.\n\nFrom-SVN: r196449", "tree": {"sha": "649d75376ecf5d33772557e4545a55a3e2b48c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649d75376ecf5d33772557e4545a55a3e2b48c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5d1569a6dd3126faf40b9aee31555438918fba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d1569a6dd3126faf40b9aee31555438918fba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d1569a6dd3126faf40b9aee31555438918fba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d1569a6dd3126faf40b9aee31555438918fba4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da56a169acdafa93cf79c058360de06e5530945e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da56a169acdafa93cf79c058360de06e5530945e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da56a169acdafa93cf79c058360de06e5530945e"}], "stats": {"total": 74, "additions": 40, "deletions": 34}, "files": [{"sha": "630ed9fa899de98421e5761e8b4925f8c050ba46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5d1569a6dd3126faf40b9aee31555438918fba4", "patch": "@@ -1,3 +1,9 @@\n+2013-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/56509\n+\t* opts.c (opts_obstack, opts_concat): Moved to...\n+\t* opts-common.c (opts_obstack, opts_concat): ... here.\n+\n 2013-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/56461"}, {"sha": "9d186a759cb5618b98eed91c60cc4fce38b98086", "filename": "gcc/opts-common.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=a5d1569a6dd3126faf40b9aee31555438918fba4", "patch": "@@ -692,6 +692,40 @@ decode_cmdline_option (const char **argv, unsigned int lang_mask,\n   return result;\n }\n \n+/* Obstack for option strings.  */\n+\n+struct obstack opts_obstack;\n+\n+/* Like libiberty concat, but allocate using opts_obstack.  */\n+\n+char *\n+opts_concat (const char *first, ...)\n+{\n+  char *newstr, *end;\n+  size_t length = 0;\n+  const char *arg;\n+  va_list ap;\n+\n+  /* First compute the size of the result and get sufficient memory.  */\n+  va_start (ap, first);\n+  for (arg = first; arg; arg = va_arg (ap, const char *))\n+    length += strlen (arg);\n+  newstr = XOBNEWVEC (&opts_obstack, char, length + 1);\n+  va_end (ap);\n+\n+  /* Now copy the individual pieces to the result string. */\n+  va_start (ap, first);\n+  for (arg = first, end = newstr; arg; arg = va_arg (ap, const char *))\n+    {\n+      length = strlen (arg);\n+      memcpy (end, arg, length);\n+      end += length;\n+    }\n+  *end = '\\0';\n+  va_end (ap);\n+  return newstr;\n+}\n+\n /* Decode command-line options (ARGC and ARGV being the arguments of\n    main) into an array, setting *DECODED_OPTIONS to a pointer to that\n    array and *DECODED_OPTIONS_COUNT to the number of entries in the"}, {"sha": "45b12fecb8e472d3e464e67d1dc5781da722e1e5", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d1569a6dd3126faf40b9aee31555438918fba4/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a5d1569a6dd3126faf40b9aee31555438918fba4", "patch": "@@ -268,40 +268,6 @@ add_comma_separated_to_vector (void **pvec, const char *arg)\n   *pvec = v;\n }\n \n-/* Like libiberty concat, but allocate using opts_obstack.  */\n-\n-char *\n-opts_concat (const char *first, ...)\n-{\n-  char *newstr, *end;\n-  size_t length = 0;\n-  const char *arg;\n-  va_list ap;\n-\n-  /* First compute the size of the result and get sufficient memory.  */\n-  va_start (ap, first);\n-  for (arg = first; arg; arg = va_arg (ap, const char *))\n-    length += strlen (arg);\n-  newstr = XOBNEWVEC (&opts_obstack, char, length + 1);\n-  va_end (ap);\n-\n-  /* Now copy the individual pieces to the result string. */\n-  va_start (ap, first);\n-  for (arg = first, end = newstr; arg; arg = va_arg (ap, const char *))\n-    {\n-      length = strlen (arg);\n-      memcpy (end, arg, length);\n-      end += length;\n-    }\n-  *end = '\\0';\n-  va_end (ap);\n-  return newstr;\n-}\n-\n-/* Obstack for option strings.  */\n-\n-struct obstack opts_obstack;\n-\n /* Initialize OPTS and OPTS_SET before using them in parsing options.  */\n \n void"}]}