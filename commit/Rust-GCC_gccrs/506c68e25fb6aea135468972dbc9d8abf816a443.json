{"sha": "506c68e25fb6aea135468972dbc9d8abf816a443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2YzY4ZTI1ZmI2YWVhMTM1NDY4OTcyZGJjOWQ4YWJmODE2YTQ0Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-07-01T16:02:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-07-01T16:13:12Z"}, "message": "Fix duplicate name issues in output of -fdump-ada-spec #2\n\nThis extends the type name conflict detection mechanism to variables.\n\ngcc/c-family/\n\t* c-ada-spec.c (check_name): Rename into...\n\t(check_type_name_conflict): ...this.  Minor tweak.\n\t(dump_ada_function_declaration): Adjust to above renaming.\n\t(dump_ada_array_domains): Fix oversight.\n\t(dump_ada_declaration): Call check_type_name_conflict for variables.", "tree": {"sha": "6c96388efee6b8865f863cf3f9dcaa9cf24fd8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c96388efee6b8865f863cf3f9dcaa9cf24fd8d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506c68e25fb6aea135468972dbc9d8abf816a443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506c68e25fb6aea135468972dbc9d8abf816a443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506c68e25fb6aea135468972dbc9d8abf816a443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506c68e25fb6aea135468972dbc9d8abf816a443/comments", "author": null, "committer": null, "parents": [{"sha": "cdf4576b201aa81fd853b06242b16e4215ead5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf4576b201aa81fd853b06242b16e4215ead5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf4576b201aa81fd853b06242b16e4215ead5a9"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "ea52be6f5e676b6517de0f001656aef0ed526692", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506c68e25fb6aea135468972dbc9d8abf816a443/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506c68e25fb6aea135468972dbc9d8abf816a443/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=506c68e25fb6aea135468972dbc9d8abf816a443", "patch": "@@ -1540,16 +1540,17 @@ dump_ada_import (pretty_printer *buffer, tree t, int spc)\n    otherwise in BUFFER.  */\n \n static void\n-check_name (pretty_printer *buffer, tree t)\n+check_type_name_conflict (pretty_printer *buffer, tree t)\n {\n-  const char *s;\n   tree tmp = TREE_TYPE (t);\n \n   while (TREE_CODE (tmp) == POINTER_TYPE && !TYPE_NAME (tmp))\n     tmp = TREE_TYPE (tmp);\n \n   if (TREE_CODE (tmp) != FUNCTION_TYPE)\n     {\n+      const char *s;\n+\n       if (TREE_CODE (tmp) == IDENTIFIER_NODE)\n \ts = IDENTIFIER_POINTER (tmp);\n       else if (!TYPE_NAME (tmp))\n@@ -1641,7 +1642,7 @@ dump_ada_function_declaration (pretty_printer *buffer, tree func,\n \t{\n \t  if (DECL_NAME (arg))\n \t    {\n-\t      check_name (buffer, arg);\n+\t      check_type_name_conflict (buffer, arg);\n \t      pp_ada_tree_identifier (buffer, DECL_NAME (arg), NULL_TREE,\n \t\t\t\t      false);\n \t      pp_string (buffer, \" : \");\n@@ -1710,7 +1711,8 @@ dump_ada_function_declaration (pretty_printer *buffer, tree func,\n static void\n dump_ada_array_domains (pretty_printer *buffer, tree node, int spc)\n {\n-  int first = 1;\n+  bool first = true;\n+\n   pp_left_paren (buffer);\n \n   for (; TREE_CODE (node) == ARRAY_TYPE; node = TREE_TYPE (node))\n@@ -1724,7 +1726,7 @@ dump_ada_array_domains (pretty_printer *buffer, tree node, int spc)\n \n \t  if (!first)\n \t    pp_string (buffer, \", \");\n-\t  first = 0;\n+\t  first = false;\n \n \t  if (min)\n \t    dump_ada_node (buffer, min, NULL_TREE, spc, false, true);\n@@ -1738,7 +1740,10 @@ dump_ada_array_domains (pretty_printer *buffer, tree node, int spc)\n \t    pp_string (buffer, \"0\");\n \t}\n       else\n-\tpp_string (buffer, \"size_t\");\n+\t{\n+\t  pp_string (buffer, \"size_t\");\n+\t  first = false;\n+\t}\n     }\n   pp_right_paren (buffer);\n }\n@@ -3152,8 +3157,9 @@ dump_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       if (need_indent)\n \tINDENT (spc);\n \n-      if (TREE_CODE (t) == FIELD_DECL && DECL_NAME (t))\n-\tcheck_name (buffer, t);\n+      if ((TREE_CODE (t) == FIELD_DECL || TREE_CODE (t) == VAR_DECL)\n+\t  && DECL_NAME (t))\n+\tcheck_type_name_conflict (buffer, t);\n \n       /* Print variable/type's name.  */\n       dump_ada_node (buffer, t, t, spc, false, true);"}]}