{"sha": "d676da681d2d16eed5594d6aa95ee340b6146bb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3NmRhNjgxZDJkMTZlZWQ1NTk0ZDZhYTk1ZWUzNDBiNjE0NmJiOA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-09-01T16:59:46Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-09-01T16:59:46Z"}, "message": "sparc.c (finalize_pic): Don't output arbitrary alignment, use FUNCTION_BOUNDARY instead.\n\n\t* config/sparc/sparc.c (finalize_pic): Don't output arbitrary\n\talignment, use FUNCTION_BOUNDARY instead.\n\t(sparc_output_deferred_case_vectors): Likewise.\n\nFrom-SVN: r22162", "tree": {"sha": "bac817721e11ca6211c5dc6f9f6c2e155cb4f33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac817721e11ca6211c5dc6f9f6c2e155cb4f33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d676da681d2d16eed5594d6aa95ee340b6146bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d676da681d2d16eed5594d6aa95ee340b6146bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d676da681d2d16eed5594d6aa95ee340b6146bb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d676da681d2d16eed5594d6aa95ee340b6146bb8/comments", "author": null, "committer": null, "parents": [{"sha": "59fa060f42bd2d31a1a15ea578fa500935579e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59fa060f42bd2d31a1a15ea578fa500935579e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59fa060f42bd2d31a1a15ea578fa500935579e7e"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "5e26f60d5975a31c531dd13bca5248ea065331df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d676da681d2d16eed5594d6aa95ee340b6146bb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d676da681d2d16eed5594d6aa95ee340b6146bb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d676da681d2d16eed5594d6aa95ee340b6146bb8", "patch": "@@ -1,3 +1,9 @@\n+Tue Sep  1 15:55:17 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* config/sparc/sparc.c (finalize_pic): Don't output arbitrary\n+\talignment, use FUNCTION_BOUNDARY instead.\n+\t(sparc_output_deferred_case_vectors): Likewise.\n+\n Mon Aug 31 17:25:41 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n \n \t* config/sparc/sparc.md (movsf_const_intreg): Kill warning."}, {"sha": "c7ce12aa1bd6114a54a25a909a5bd5b227b70d1c", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d676da681d2d16eed5594d6aa95ee340b6146bb8/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d676da681d2d16eed5594d6aa95ee340b6146bb8/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d676da681d2d16eed5594d6aa95ee340b6146bb8", "patch": "@@ -2556,10 +2556,14 @@ finalize_pic ()\n   /* If we havn't emitted the special get_pc helper function, do so now.  */\n   if (get_pc_symbol_name[0] == 0)\n     {\n-      ASM_GENERATE_INTERNAL_LABEL (get_pc_symbol_name, \"LGETPC\", 0);\n+      int align;\n \n+      ASM_GENERATE_INTERNAL_LABEL (get_pc_symbol_name, \"LGETPC\", 0);\n       text_section ();\n-      ASM_OUTPUT_ALIGN (asm_out_file, 3);\n+\n+      align = floor_log2 (FUNCTION_BOUNDARY / BITS_PER_UNIT);\n+      if (align > 0)\n+\tASM_OUTPUT_ALIGN (asm_out_file, align);\n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"LGETPC\", 0);\n       fputs (\"\\tretl\\n\\tadd %o7,%l7,%l7\\n\", asm_out_file);\n     }\n@@ -7235,10 +7239,14 @@ static void\n sparc_output_deferred_case_vectors ()\n {\n   rtx t;\n+  int align;\n \n   /* Align to cache line in the function's code section.  */\n   function_section (current_function_decl);\n-  ASM_OUTPUT_ALIGN (asm_out_file, 5);\n+\n+  align = floor_log2 (FUNCTION_BOUNDARY / BITS_PER_UNIT);\n+  if (align > 0)\n+    ASM_OUTPUT_ALIGN (asm_out_file, 5);\n   \n   for (t = sparc_addr_list; t ; t = XEXP (t, 1))\n     sparc_output_addr_vec (XEXP (t, 0));"}]}