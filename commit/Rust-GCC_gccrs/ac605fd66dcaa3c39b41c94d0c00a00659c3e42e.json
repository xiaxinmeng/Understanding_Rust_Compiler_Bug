{"sha": "ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2MDVmZDY2ZGNhYTNjMzliNDFjOTRkMGMwMGEwMDY1OWMzZTQyZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-11-22T09:30:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-11-22T09:30:02Z"}, "message": "re PR rtl-optimization/33848 (reference to non-existent label at -O1 on mips/mipsel)\n\ngcc/testsuite/\n\tPR rtl-optimization/33848\n\t* gcc.dg/torture/pr33848.c: New test.\n\nFrom-SVN: r130345", "tree": {"sha": "ce931bdce6f9fb045819a203942501232979236e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce931bdce6f9fb045819a203942501232979236e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e/comments", "author": null, "committer": null, "parents": [{"sha": "1fa4dfc6b75474c0d054d0760344b15831742633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa4dfc6b75474c0d054d0760344b15831742633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa4dfc6b75474c0d054d0760344b15831742633"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "089979046a3aa658e6ea3c8c135cf53280773051", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "patch": "@@ -1,3 +1,8 @@\n+2007-11-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR rtl-optimization/33848\n+\t* gcc.dg/torture/pr33848.c: New test.\n+\n 2007-11-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/34083"}, {"sha": "c3b85e9e576b88b65c0913f4b827720d5e27a0b8", "filename": "gcc/testsuite/gcc.dg/torture/pr33848.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr33848.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac605fd66dcaa3c39b41c94d0c00a00659c3e42e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr33848.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr33848.c?ref=ac605fd66dcaa3c39b41c94d0c00a00659c3e42e", "patch": "@@ -0,0 +1,43 @@\n+/* &&foo should be hoisted, but on most targets, excess register pressure\n+   forces it to be rematerialized before \"data != &&foo\".  On targets that\n+   have a \"branch if registers are equal\" instruction, this leads to the\n+   branch having two LABEL_REFs: one for the branch target and one for\n+   &&foo.  When reloading &&foo into a register, reload would wrongly\n+   say that &&foo was the target of the branch, and the real target would\n+   then be removed as dead.  */\n+/* { dg-do link } */\n+#define NVARS 30\n+#define MULTI(X) \\\n+  X( 0), X( 1), X( 2), X( 3), X( 4), X( 5), X( 6), X( 7), X( 8), X( 9), \\\n+  X(10), X(11), X(12), X(13), X(14), X(15), X(16), X(17), X(18), X(19), \\\n+  X(20), X(21), X(22), X(23), X(24), X(25), X(26), X(27), X(28), X(29)\n+\n+#define DECLARE(INDEX) i##INDEX = gv[INDEX]\n+#define COPY(INDEX) gv[INDEX] = i##INDEX\n+\n+volatile int gv[NVARS];\n+void *volatile data;\n+\n+int\n+main (void)\n+{\n+  __label__ foo;\n+\n+  if (gv[0] == 1)\n+    goto foo;\n+  data = &&foo;\n+  do\n+    {\n+      int MULTI (DECLARE);\n+      MULTI (COPY);\n+      MULTI (COPY);\n+      MULTI (COPY);\n+      if (data != &&foo)\n+\tgv[0] = 1;\n+      else\n+\tgv[1] = 2;\n+    }\n+  while (gv[0] > 0);\n+ foo:\n+  return 0;\n+}"}]}