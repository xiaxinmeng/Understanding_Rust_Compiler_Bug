{"sha": "48c4721eacdd2215e4b0335b50b5379c72924fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjNDcyMWVhY2RkMjIxNWU0YjAzMzViNTBiNTM3OWM3MjkyNGZkOA==", "commit": {"author": {"name": "Martin Schaffner", "email": "schaffner@gmx.li", "date": "2003-06-25T21:01:10Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-25T21:01:10Z"}, "message": "cppfiles.c: Clarify comments.\n\n\t* cppfiles.c: Clarify comments.\n\t* cpphash.h: Likewise.\n\t* cpplib.h: Likewise.\n\t* cppmacro.c: Likewise.\n\t* mkdeps.h: Likewise.\n\nFrom-SVN: r68496", "tree": {"sha": "b4a345fc53ecdc92c71062989190b44bd6548a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4a345fc53ecdc92c71062989190b44bd6548a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c4721eacdd2215e4b0335b50b5379c72924fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c4721eacdd2215e4b0335b50b5379c72924fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c4721eacdd2215e4b0335b50b5379c72924fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c4721eacdd2215e4b0335b50b5379c72924fd8/comments", "author": null, "committer": null, "parents": [{"sha": "f18754d6403e23cb34e62bb6e09a15a357fa2782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18754d6403e23cb34e62bb6e09a15a357fa2782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18754d6403e23cb34e62bb6e09a15a357fa2782"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "e68b2b1f01e608d456e636bc06c8dcf47fde1088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -1,3 +1,11 @@\n+2003-06-25 Martin Schaffner <schaffner@gmx.li>\n+\n+\t* cppfiles.c: Clarify comments.\n+\t* cpphash.h: Likewise.\n+\t* cpplib.h: Likewise.\n+\t* cppmacro.c: Likewise.\n+\t* mkdeps.h: Likewise.\n+\n 2003-06-25  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* c-opts.c (complain_wrong_lang, write_langs): Remove."}, {"sha": "ceb64136969bc2cf03459452a558f9a0eab1eb0e", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -741,7 +741,7 @@ _cpp_execute_include (cpp_reader *pfile, const char *fname, int angle_brackets,\n }\n \n /* Locate HEADER, and determine whether it is newer than the current\n-   file.  If it cannot be located or dated, return -1, if it is newer\n+   file.  If it cannot be located or dated, return -1, if it is\n    newer, return 1, otherwise 0.  */\n int\n _cpp_compare_file_date (cpp_reader *pfile, const char *fname,"}, {"sha": "32fa1aaae1ecc423e0bf8d8d896bc0f9eb270857", "filename": "gcc/cpphash.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -392,7 +392,7 @@ struct cpp_reader\n      list of recognized pragmas.  */\n   struct pragma_entry *pragmas;\n \n-  /* Call backs.  */\n+  /* Call backs to cpplib client.  */\n   struct cpp_callbacks cb;\n \n   /* Identifier hash table.  */"}, {"sha": "aad2841ac62ca0794898000fb4c84c4e6cfa136c", "filename": "gcc/cpplib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -371,7 +371,7 @@ struct cpp_options\n   unsigned char stdc_0_in_system_headers;\n };\n \n-/* Call backs.  */\n+/* Call backs to cpplib client.  */\n struct cpp_callbacks\n {\n   /* Called when a new line of preprocessed output is started.  */"}, {"sha": "2b9c9b5f89bdadebc6f6502552c004572dcec516", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -1038,9 +1038,9 @@ _cpp_pop_context (cpp_reader *pfile)\n   pfile->context = context->prev;\n }\n \n-/* Eternal routine to get a token.  Also used nearly everywhere\n+/* External routine to get a token.  Also used nearly everywhere\n    internally, except for places where we know we can safely call\n-   the lexer directly, such as lexing a directive name.\n+   _cpp_lex_token directly, such as lexing a directive name.\n \n    Macro expansions and directives are transparently handled,\n    including entering included files.  Thus tokens are post-macro"}, {"sha": "6054a56f1371648d14ec0e8a4b5223b5a4ad6b24", "filename": "gcc/mkdeps.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fmkdeps.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4721eacdd2215e4b0335b50b5379c72924fd8/gcc%2Fmkdeps.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkdeps.h?ref=48c4721eacdd2215e4b0335b50b5379c72924fd8", "patch": "@@ -39,7 +39,7 @@ extern void deps_free\t\tPARAMS ((struct deps *));\n extern void deps_add_target\tPARAMS ((struct deps *, const char *, int));\n \n /* Sets the default target if none has been given already.  An empty\n-   string as the default target in interpreted as stdin.  */\n+   string as the default target is interpreted as stdin.  */\n extern void deps_add_default_target PARAMS ((struct deps *, const char *));\n \n /* Add a dependency (appears on the right side of the colon) to the"}]}