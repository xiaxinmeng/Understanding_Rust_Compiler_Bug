{"sha": "f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhODlkZDAwY2NmYjZlNzdlY2VjNzIwM2Y0MDY1M2I1M2E5M2NmZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-08-26T14:37:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-08-26T14:37:22Z"}, "message": "re PR c/50179 (wrong \"set but not used\" warning)\n\n\tPR c/50179\n\t* c-typeck.c (c_process_expr_stmt): Skip over nops and\n\tcall mark_exp_read even if exprv is ADDR_EXPR.\n\n\t* c-c++-common/Wunused-var-14.c: New test.\n\nFrom-SVN: r178110", "tree": {"sha": "413636b1ba12d92675262e9fef4b7c81c3aab4d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/413636b1ba12d92675262e9fef4b7c81c3aab4d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd3e0a33c7df8b478e10c3d4ac6af11e77aae425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd3e0a33c7df8b478e10c3d4ac6af11e77aae425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd3e0a33c7df8b478e10c3d4ac6af11e77aae425"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "e822ca7b0b0c19d3223306946f89839c0e09c6e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "patch": "@@ -1,3 +1,9 @@\n+2011-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/50179\n+\t* c-typeck.c (c_process_expr_stmt): Skip over nops and\n+\tcall mark_exp_read even if exprv is ADDR_EXPR.\n+\n 2011-08-26  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* df-problems.c (df_note_bb_compute): Pass uses rather than defs"}, {"sha": "1f08031e71deeca4af72c16a03063e16c094cd46", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "patch": "@@ -9109,7 +9109,11 @@ c_process_expr_stmt (location_t loc, tree expr)\n   exprv = expr;\n   while (TREE_CODE (exprv) == COMPOUND_EXPR)\n     exprv = TREE_OPERAND (exprv, 1);\n-  if (DECL_P (exprv) || handled_component_p (exprv))\n+  while (CONVERT_EXPR_P (exprv))\n+    exprv = TREE_OPERAND (exprv, 0);\n+  if (DECL_P (exprv)\n+      || handled_component_p (exprv)\n+      || TREE_CODE (exprv) == ADDR_EXPR)\n     mark_exp_read (exprv);\n \n   /* If the expression is not of a type to which we cannot assign a line"}, {"sha": "04b7e1e66cb961f1d27b363fd67377d80b10dd6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "patch": "@@ -1,3 +1,8 @@\n+2011-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/50179\n+\t* c-c++-common/Wunused-var-14.c: New test.\n+\n 2011-08-26  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/tree-ssa/ivopts-lt.c: New test."}, {"sha": "389febae8c695592f7c9783b118eaee9e49e5af3", "filename": "gcc/testsuite/c-c++-common/Wunused-var-14.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a89dd00ccfb6e77ecec7203f40653b53a93cff/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-14.c?ref=f1a89dd00ccfb6e77ecec7203f40653b53a93cff", "patch": "@@ -0,0 +1,13 @@\n+/* PR c/50179 */\n+/* { dg-options \"-Wunused\" } */\n+/* { dg-do compile } */\n+\n+void bar (int, ...);\n+\n+char *\n+foo (void)\n+{\n+  bar (1, (__extension__ ({ static char b[2]; b[0] = 1; b; })));\n+  bar (1, ({ static char c[2]; c[0] = 1; c; }));\n+  return ({ static char d[2]; d[0] = 1; d; });\n+}"}]}