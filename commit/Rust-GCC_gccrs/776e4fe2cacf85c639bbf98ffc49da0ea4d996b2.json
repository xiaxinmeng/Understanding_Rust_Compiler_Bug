{"sha": "776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2ZTRmZTJjYWNmODVjNjM5YmJmOThmZmM0OWRhMGVhNGQ5OTZiMg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-05-18T16:41:19Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-05-18T16:41:19Z"}, "message": "Const parameters are always unmodified\n\n2016-05-18  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/69708\n\t* ipa-prop.c (parm_preserved_before_stmt_p): Return true for loads\n\tfrom TREE_READONLY parameters.\n\nFrom-SVN: r236417", "tree": {"sha": "ea0c61cf669bb09530b2c397848a1956446177e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea0c61cf669bb09530b2c397848a1956446177e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91bb9f80e58963d65a5cd305b438a2d7009cdb09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bb9f80e58963d65a5cd305b438a2d7009cdb09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bb9f80e58963d65a5cd305b438a2d7009cdb09"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "7924d1f98c93ee5d6b1aa930dc19130096fe050f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "patch": "@@ -1,3 +1,9 @@\n+2016-05-18  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/69708\n+\t* ipa-prop.c (parm_preserved_before_stmt_p): Return true for loads\n+\tfrom TREE_READONLY parameters.\n+\n 2016-05-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/69708"}, {"sha": "117a0255b1b9f09ab8adb6152cd9cdd1bcd34e42", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "patch": "@@ -803,6 +803,11 @@ parm_preserved_before_stmt_p (struct ipa_func_body_info *fbi, int index,\n   bool modified = false;\n   ao_ref refd;\n \n+  tree base = get_base_address (parm_load);\n+  gcc_assert (TREE_CODE (base) == PARM_DECL);\n+  if (TREE_READONLY (base))\n+    return true;\n+\n   /* FIXME: FBI can be NULL if we are being called from outside\n      ipa_node_analysis or ipcp_transform_function, which currently happens\n      during inlining analysis.  It would be great to extend fbi's lifetime and"}]}