{"sha": "b3c5a40978985447d8ccf7d583929a4e8a78a91d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNjNWE0MDk3ODk4NTQ0N2Q4Y2NmN2Q1ODM5MjlhNGU4YTc4YTkxZA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-16T20:07:46Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-16T20:07:46Z"}, "message": "m32c.c (m32c_compare_redundant): Avoid removing compares that may be indirectly affected by previous instructions.\n\n* config/m32c/m32c.c (m32c_compare_redundant): Avoid removing\ncompares that may be indirectly affected by previous instructions.\n\nFrom-SVN: r149719", "tree": {"sha": "7781034cea0432cdfc21c30068ff504decdf6798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7781034cea0432cdfc21c30068ff504decdf6798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3c5a40978985447d8ccf7d583929a4e8a78a91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c5a40978985447d8ccf7d583929a4e8a78a91d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c5a40978985447d8ccf7d583929a4e8a78a91d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c5a40978985447d8ccf7d583929a4e8a78a91d/comments", "author": null, "committer": null, "parents": [{"sha": "a41d064d96aa33de2cbc5ee6bf1f3f9fc76ef528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a41d064d96aa33de2cbc5ee6bf1f3f9fc76ef528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a41d064d96aa33de2cbc5ee6bf1f3f9fc76ef528"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "173cabf87e983df1b238078e1145d7b1b3ac8559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c5a40978985447d8ccf7d583929a4e8a78a91d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c5a40978985447d8ccf7d583929a4e8a78a91d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3c5a40978985447d8ccf7d583929a4e8a78a91d", "patch": "@@ -1,3 +1,8 @@\n+2009-07-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/m32c/m32c.c (m32c_compare_redundant): Avoid removing\n+\tcompares that may be indirectly affected by previous instructions.\n+\n 2009-07-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (do_mpc_arg2): New."}, {"sha": "46dc4dc66392b027e61f4a2994e30cbf55a3ff24", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c5a40978985447d8ccf7d583929a4e8a78a91d/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c5a40978985447d8ccf7d583929a4e8a78a91d/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=b3c5a40978985447d8ccf7d583929a4e8a78a91d", "patch": "@@ -4167,6 +4167,40 @@ m32c_compare_redundant (rtx cmp, rtx *operands)\n #endif\n \treturn false;\n       }\n+\n+    /* Check for comparisons against memory - between volatiles and\n+       aliases, we just can't risk this one.  */\n+    if (GET_CODE (operands[0]) == MEM\n+\t|| GET_CODE (operands[0]) == MEM)\n+      {\n+#if DEBUG_CMP\n+\tfprintf(stderr, \"comparisons with memory:\\n\");\n+\tdebug_rtx(prev);\n+#endif\n+\treturn false;\n+      }\n+\n+    /* Check for PREV changing a register that's used to compute a\n+       value in CMP, even if it doesn't otherwise change flags.  */\n+    if (GET_CODE (operands[0]) == REG\n+\t&& rtx_referenced_p (SET_DEST (PATTERN (prev)), operands[0]))\n+      {\n+#if DEBUG_CMP\n+\tfprintf(stderr, \"sub-value affected, op0:\\n\");\n+\tdebug_rtx(prev);\n+#endif\n+\treturn false;\n+      }\n+    if (GET_CODE (operands[1]) == REG\n+\t&& rtx_referenced_p (SET_DEST (PATTERN (prev)), operands[1]))\n+      {\n+#if DEBUG_CMP\n+\tfprintf(stderr, \"sub-value affected, op1:\\n\");\n+\tdebug_rtx(prev);\n+#endif\n+\treturn false;\n+      }\n+\n   } while (pflags == FLAGS_N);\n #if DEBUG_CMP\n   fprintf(stderr, \"previous flag-setting insn:\\n\");\n@@ -4251,7 +4285,7 @@ m32c_output_compare (rtx insn, rtx *operands)\n     }\n \n #if DEBUG_CMP\n-  fprintf(stderr, \"cbranch: cmp needed: `%s'\\n\", templ);\n+  fprintf(stderr, \"cbranch: cmp needed: `%s'\\n\", templ + 1);\n #endif\n   return templ + 1;\n }"}]}