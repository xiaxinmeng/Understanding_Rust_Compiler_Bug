{"sha": "0bcee2755848bd10da9be41b00eeafef8cb65bc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjZWUyNzU1ODQ4YmQxMGRhOWJlNDFiMDBlZWFmZWY4Y2I2NWJjNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T12:08:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T12:08:24Z"}, "message": "Code cleanups.\n\nFrom-SVN: r247205", "tree": {"sha": "765eac657ad11721003c6cf15c3eb23590860eea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/765eac657ad11721003c6cf15c3eb23590860eea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bcee2755848bd10da9be41b00eeafef8cb65bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcee2755848bd10da9be41b00eeafef8cb65bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bcee2755848bd10da9be41b00eeafef8cb65bc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcee2755848bd10da9be41b00eeafef8cb65bc5/comments", "author": null, "committer": null, "parents": [{"sha": "b554177a8f33e3cfaf29125a1c22a9671fbf2c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b554177a8f33e3cfaf29125a1c22a9671fbf2c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b554177a8f33e3cfaf29125a1c22a9671fbf2c3a"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "658c3d8fbea13199ac05fd574728ff7e6345c969", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcee2755848bd10da9be41b00eeafef8cb65bc5/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcee2755848bd10da9be41b00eeafef8cb65bc5/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=0bcee2755848bd10da9be41b00eeafef8cb65bc5", "patch": "@@ -7616,20 +7616,12 @@ package body Exp_Ch4 is\n    -----------------------\n \n    procedure Expand_N_Op_Expon (N : Node_Id) is\n-      Loc    : constant Source_Ptr := Sloc (N);\n-      Typ    : constant Entity_Id  := Etype (N);\n-      Rtyp   : constant Entity_Id  := Root_Type (Typ);\n-      Base   : Node_Id;\n-      Bastyp : Node_Id;\n-      Exp    : Node_Id;\n-      Exptyp : Entity_Id;\n-      Ovflo  : constant Boolean    := Do_Overflow_Check (N);\n-      Expv   : Uint;\n-      Temp   : Node_Id;\n-      Rent   : RE_Id;\n-      Ent    : Entity_Id;\n-      Etyp   : Entity_Id;\n-      Xnode  : Node_Id;\n+      Loc   : constant Source_Ptr := Sloc (N);\n+      Ovflo : constant Boolean    := Do_Overflow_Check (N);\n+      Typ   : constant Entity_Id  := Etype (N);\n+      Rtyp  : constant Entity_Id  := Root_Type (Typ);\n+\n+      Bastyp : Entity_Id;\n \n       function Wrap_MA (Exp : Node_Id) return Node_Id;\n       --  Given an expression Exp, if the root type is Float or Long_Float,\n@@ -7644,6 +7636,7 @@ package body Exp_Ch4 is\n \n       function Wrap_MA (Exp : Node_Id) return Node_Id is\n          Loc : constant Source_Ptr := Sloc (Exp);\n+\n       begin\n          if Rtyp = Standard_Float or else Rtyp = Standard_Long_Float then\n             return\n@@ -7656,6 +7649,18 @@ package body Exp_Ch4 is\n          end if;\n       end Wrap_MA;\n \n+      --  Local variables\n+\n+      Base   : Node_Id;\n+      Ent    : Entity_Id;\n+      Etyp   : Entity_Id;\n+      Exp    : Node_Id;\n+      Exptyp : Entity_Id;\n+      Expv   : Uint;\n+      Rent   : RE_Id;\n+      Temp   : Node_Id;\n+      Xnode  : Node_Id;\n+\n    --  Start of processing for Expand_N_Op_Expon\n \n    begin\n@@ -10784,8 +10789,8 @@ package body Exp_Ch4 is\n          if not Comes_From_Source (N)\n            and then Is_Interface (Designated_Type (Target_Type))\n            and then Nkind (Original_Node (N)) = N_Attribute_Reference\n-           and then\n-             Attribute_Name (Original_Node (N)) = Name_Unrestricted_Access\n+           and then Attribute_Name (Original_Node (N)) =\n+                      Name_Unrestricted_Access\n          then\n             null;\n "}]}