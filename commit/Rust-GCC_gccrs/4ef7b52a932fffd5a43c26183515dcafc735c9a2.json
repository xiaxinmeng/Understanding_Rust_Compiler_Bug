{"sha": "4ef7b52a932fffd5a43c26183515dcafc735c9a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmN2I1MmE5MzJmZmZkNWE0M2MyNjE4MzUxNWRjYWZjNzM1YzlhMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-25T17:15:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-25T17:15:35Z"}, "message": "hash-map-traits.h: Include hash-traits.h.\n\ngcc/\n\t* hash-map-traits.h: Include hash-traits.h.\n\t(simple_hashmap_traits): New class.\n\t* mem-stats.h (hash_map): Change the default traits to\n\tsimple_hashmap_traits<default_hash_traits<Key> >.\n\nFrom-SVN: r224966", "tree": {"sha": "5600bf9521c2038070ac65ff7945d6c85e05a746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5600bf9521c2038070ac65ff7945d6c85e05a746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef7b52a932fffd5a43c26183515dcafc735c9a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef7b52a932fffd5a43c26183515dcafc735c9a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef7b52a932fffd5a43c26183515dcafc735c9a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef7b52a932fffd5a43c26183515dcafc735c9a2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8998354f8d860e1db063add78f20e521ff514cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8998354f8d860e1db063add78f20e521ff514cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8998354f8d860e1db063add78f20e521ff514cf2"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "fdfe9d0a8db363b27e2cd9444952eedee0564e94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ef7b52a932fffd5a43c26183515dcafc735c9a2", "patch": "@@ -1,3 +1,10 @@\n+2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hash-map-traits.h: Include hash-traits.h.\n+\t(simple_hashmap_traits): New class.\n+\t* mem-stats.h (hash_map): Change the default traits to\n+\tsimple_hashmap_traits<default_hash_traits<Key> >.\n+\n 2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hash-table.h: Update comments."}, {"sha": "669a63797023d23f8661f6c045869b2a514d1dd6", "filename": "gcc/hash-map-traits.h", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2Fhash-map-traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2Fhash-map-traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-traits.h?ref=4ef7b52a932fffd5a43c26183515dcafc735c9a2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Bacause mem-stats.h uses default hashmap traits, we have to\n    put the class to this separate header file.  */\n \n+#include \"hash-traits.h\"\n+\n /* implement default behavior for traits when types allow it.  */\n \n struct default_hashmap_traits\n@@ -101,4 +103,75 @@ struct default_hashmap_traits\n     }\n };\n \n+/* Implement hash_map traits for a key with hash traits H.  Empty and\n+   deleted map entries are represented as empty and deleted keys.  */\n+\n+template <typename H>\n+struct simple_hashmap_traits\n+{\n+  static inline hashval_t hash (const typename H::value_type &);\n+  static inline bool equal_keys (const typename H::value_type &,\n+\t\t\t\t const typename H::value_type &);\n+  template <typename T> static inline void remove (T &);\n+  template <typename T> static inline bool is_empty (const T &);\n+  template <typename T> static inline bool is_deleted (const T &);\n+  template <typename T> static inline void mark_empty (T &);\n+  template <typename T> static inline void mark_deleted (T &);\n+};\n+\n+template <typename H>\n+inline hashval_t\n+simple_hashmap_traits <H>::hash (const typename H::value_type &h)\n+{\n+  return H::hash (h);\n+}\n+\n+template <typename H>\n+inline bool\n+simple_hashmap_traits <H>::equal_keys (const typename H::value_type &k1,\n+\t\t\t\t       const typename H::value_type &k2)\n+{\n+  return H::equal (k1, k2);\n+}\n+\n+template <typename H>\n+template <typename T>\n+inline void\n+simple_hashmap_traits <H>::remove (T &entry)\n+{\n+  H::remove (entry.m_key);\n+}\n+\n+template <typename H>\n+template <typename T>\n+inline bool\n+simple_hashmap_traits <H>::is_empty (const T &entry)\n+{\n+  return H::is_empty (entry.m_key);\n+}\n+\n+template <typename H>\n+template <typename T>\n+inline bool\n+simple_hashmap_traits <H>::is_deleted (const T &entry)\n+{\n+  return H::is_deleted (entry.m_key);\n+}\n+\n+template <typename H>\n+template <typename T>\n+inline void\n+simple_hashmap_traits <H>::mark_empty (T &entry)\n+{\n+  H::mark_empty (entry.m_key);\n+}\n+\n+template <typename H>\n+template <typename T>\n+inline void\n+simple_hashmap_traits <H>::mark_deleted (T &entry)\n+{\n+  H::mark_deleted (entry.m_key);\n+}\n+\n #endif // HASH_MAP_TRAITS_H"}, {"sha": "63277b302cecee04b1c1c56c63df9bd9c3b3d1ee", "filename": "gcc/mem-stats.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2Fmem-stats.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef7b52a932fffd5a43c26183515dcafc735c9a2/gcc%2Fmem-stats.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmem-stats.h?ref=4ef7b52a932fffd5a43c26183515dcafc735c9a2", "patch": "@@ -3,7 +3,7 @@\n \n /* Forward declaration.  */\n template<typename Key, typename Value,\n-\t typename Traits = default_hashmap_traits>\n+\t typename Traits = simple_hashmap_traits<default_hash_traits<Key> > >\n class hash_map;\n \n #define LOCATION_LINE_EXTRA_SPACE 30"}]}