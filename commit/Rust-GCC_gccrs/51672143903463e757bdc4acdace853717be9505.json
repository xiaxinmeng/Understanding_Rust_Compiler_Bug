{"sha": "51672143903463e757bdc4acdace853717be9505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2NzIxNDM5MDM0NjNlNzU3YmRjNGFjZGFjZTg1MzcxN2JlOTUwNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-11-05T20:15:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-11-05T20:15:02Z"}, "message": "20031023-4.c: XFAIL on SPARC64\n\n\t* gcc.c-torture/compile/20031023-4.c: XFAIL on SPARC64\n\t* gcc.c-torture/compile/simd-5.c: XFAIL on SPARC64 at -O0 and -O1.\n\t* gcc.c-torture/execute/simd-4.x: New file.  XFAIL on SPARC at -O0.\n\t* gcc.c-torture/execute/va-arg-25.x: New file.  XFAIL on SPARC.\n\t* gcc.dg/uninit-C.c: XFAIL on non 64-bit Solaris versions.\n\nFrom-SVN: r73280", "tree": {"sha": "4ee0af979f37f00ad4fd48a8ca61b3f29de720d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ee0af979f37f00ad4fd48a8ca61b3f29de720d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51672143903463e757bdc4acdace853717be9505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51672143903463e757bdc4acdace853717be9505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51672143903463e757bdc4acdace853717be9505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51672143903463e757bdc4acdace853717be9505/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4dcab145ff57e4bedd94d5026e29c04c38c1c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dcab145ff57e4bedd94d5026e29c04c38c1c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4dcab145ff57e4bedd94d5026e29c04c38c1c34"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "5c7cea5a8b59bf1161bb5e4c056bbd5500cec073", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -1,3 +1,11 @@\n+2003-11-05  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/compile/20031023-4.c: XFAIL on SPARC64\n+\t* gcc.c-torture/compile/simd-5.c: XFAIL on SPARC64 at -O0 and -O1.\n+\t* gcc.c-torture/execute/simd-4.x: New file.  XFAIL on SPARC at -O0.\n+\t* gcc.c-torture/execute/va-arg-25.x: New file.  XFAIL on SPARC.\n+\t* gcc.dg/uninit-C.c: XFAIL on non 64-bit Solaris versions.\n+\n 2003-11-05  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/cond-lvalue-1.c: New test."}, {"sha": "7268888b5b3385633fe117286bdd8fe8b4d34483", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-4.c?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -1,2 +1,7 @@\n+/* On SPARC64/SPARC-V9 it fails because of a back-end problem, except with -m32. */\n+/* { dg-xfail-if \"PR target/6466\" { \"sparc64-*-*\" \"sparcv9-*-*\" } { \"*\" } { \"-m32\" } } */\n+/* On regular SPARC it doesn't fail, except with -m64. */\n+/* { dg-xfail-if \"PR target/6466\" { \"sparc-*-*\" } { \"-m64\" } { \"\" } } */\n+\n #define ASIZE 0x80000000UL\n #include \"20031023-1.c\""}, {"sha": "1575dc1a8d4c06bbaf16ade080c893413a4f9ff3", "filename": "gcc/testsuite/gcc.c-torture/compile/simd-5.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -1,7 +1,7 @@\n-/* On SPARC64/SPARC-V9 it fails, except with -m32. */\n-/* { dg-xfail-if \"PR target/9200\" { \"sparc64-*-*\" \"sparcv9-*-*\" } { \"*\" } { \"-m32\" } } */\n-/* On regular SPARC it doesn't fail, except with -m64. */\n-/* { dg-xfail-if \"PR target/9200\" { \"sparc-*-*\" } { \"-m64\" } { \"\" } } */\n+/* On SPARC64/SPARC-V9 it fails at -O0 and -O1, except with -m32. */\n+/* { dg-xfail-if \"PR target/9200\" { \"sparc64-*-*\" \"sparcv9-*-*\" } { \"-O0\" \"-O1\" } { \"-m32\" } } */\n+/* On regular SPARC it doesn't fail, except with -m64 at -O0 and -O1. */\n+/* { dg-xfail-if \"PR target/9200\" { \"sparc-*-*\" } { \"-m64 -O0\" \"-m64 -O1\" } { \"\" } } */\n \n #define vector64 __attribute__((vector_size(8)))\n "}, {"sha": "f5644cb24fc7b86ae10e7647de57f0852099624c", "filename": "gcc/testsuite/gcc.c-torture/execute/simd-4.x", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fsimd-4.x?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -0,0 +1,13 @@\n+# This doesn't work on sparc*-*-* at -O0.\n+\n+set torture_eval_before_compile {\n+    global compiler_conditional_xfail_data\n+    set compiler_conditional_xfail_data {\n+      \"PR target/12916\" \\\n+      { \"sparc*-*-*\" } \\\n+      { \"-O0\" } \\\n+      { \"\" }\n+    }\n+}\n+\n+return 0"}, {"sha": "1658fbcc8ca6e4f2e715ba5855be8a7fa6143e6f", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-25.x", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-25.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-25.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-25.x?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -0,0 +1,13 @@\n+# This doesn't work on sparc*-*-*.\n+\n+set torture_eval_before_compile {\n+    global compiler_conditional_xfail_data\n+    set compiler_conditional_xfail_data {\n+      \"PR target/12916\" \\\n+      { \"sparc*-*-*\" } \\\n+      { \"*\" } \\\n+      { \"\" }\n+    }\n+}\n+\n+return 0"}, {"sha": "3ecbf8ae43ac7b1375dcbf82136e8dfe1c9adc73", "filename": "gcc/testsuite/gcc.dg/uninit-C.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-C.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51672143903463e757bdc4acdace853717be9505/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-C.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-C.c?ref=51672143903463e757bdc4acdace853717be9505", "patch": "@@ -4,7 +4,7 @@\n \n /* Not all platforms support TImode integers.  */\n #if defined(__LP64__) || defined(__sparc__)\n-typedef int TItype __attribute__ ((mode (TI)));\n+typedef int TItype __attribute__ ((mode (TI)));  /* { dg-error \"no data type for mode\" \"TI\" { target sparc-sun-solaris2.[0-6]* } } */\n #else\n typedef long TItype;\n #endif"}]}