{"sha": "acbbac0444a599e77b59b4d21186c9c2118b9f84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiYmFjMDQ0NGE1OTllNzdiNTliNGQyMTE4NmM5YzIxMThiOWY4NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-02-11T17:56:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-02-11T17:56:02Z"}, "message": "re PR middle-end/56727 (Recursive call goes through the PLT unnecessarily)\n\n\n\tPR tree-ssa/56727\n\t* gcc.dg/tree-ssa/pr56727.c: New testcase.\n\t* ipa-utils.c (recursive_call_p): Be more careful about interposition.\n\nFrom-SVN: r245359", "tree": {"sha": "0efc3420ad98c534a5761346fa3b54636f7219b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efc3420ad98c534a5761346fa3b54636f7219b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acbbac0444a599e77b59b4d21186c9c2118b9f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbbac0444a599e77b59b4d21186c9c2118b9f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbbac0444a599e77b59b4d21186c9c2118b9f84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbbac0444a599e77b59b4d21186c9c2118b9f84/comments", "author": null, "committer": null, "parents": [{"sha": "bc61048a143b10d8efdc50195f2fc949d036ca92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc61048a143b10d8efdc50195f2fc949d036ca92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc61048a143b10d8efdc50195f2fc949d036ca92"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "969fccfe9ee090ae8718f73fdf94ad0f5450550d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acbbac0444a599e77b59b4d21186c9c2118b9f84", "patch": "@@ -1,3 +1,8 @@\n+2017-02-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-ssa/56727\n+\t* gcc.dg/tree-ssa/pr56727.c: New testcase.\n+\n 2017-02-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/79224"}, {"sha": "98a4f11d9bfb5ddb6ec49a4a08639690a91779da", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=acbbac0444a599e77b59b4d21186c9c2118b9f84", "patch": "@@ -639,6 +639,20 @@ recursive_call_p (tree func, tree dest)\n {\n   struct cgraph_node *dest_node = cgraph_node::get_create (dest);\n   struct cgraph_node *cnode = cgraph_node::get_create (func);\n-\n-  return dest_node->semantically_equivalent_p (cnode);\n+  ipa_ref *alias;\n+  enum availability avail;\n+\n+  gcc_assert (!cnode->alias);\n+  if (cnode != dest_node->ultimate_alias_target (&avail))\n+    return false;\n+  if (avail >= AVAIL_AVAILABLE)\n+    return true;\n+  if (!dest_node->semantically_equivalent_p (cnode))\n+    return false;\n+  /* If there is only one way to call the fuction or we know all of them\n+     are semantically equivalent, we still can consider call recursive.  */\n+  FOR_EACH_ALIAS (cnode, alias)\n+    if (!dest_node->semantically_equivalent_p (alias->referring))\n+      return false;\n+  return true;\n }"}, {"sha": "a6afdf5d0a0bc8cfbd8cefb290414434325d1153", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=acbbac0444a599e77b59b4d21186c9c2118b9f84", "patch": "@@ -1,3 +1,8 @@\n+2017-02-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-ssa/56727\n+\t* gcc.dg/tree-ssa/pr56727.c: New testcase.\n+\n 2017-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/79457"}, {"sha": "eaf8b5c971d48bee7c30d9ffe639ece35d4862d7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr56727.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr56727.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbbac0444a599e77b59b4d21186c9c2118b9f84/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr56727.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr56727.c?ref=acbbac0444a599e77b59b4d21186c9c2118b9f84", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-alias \"\" } */\n+/* { dg-do compile { target fpic } } *\n+/* { dg-options \"-O2 -fPIC -fdump-tree-optimized\" } */\n+void do_not_optimize(int b)\n+{\n+    do_not_optimize(0);\n+}\n+void do_optimize(int b)\n+{\n+    do_optimize(0);\n+}\n+\n+void g(int b) __attribute__((alias((\"do_not_optimize\"))));\n+\n+/* { dg-final { scan-tree-dump \"do_not_optimize .0\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"do_optimize .0\" \"optimized\" } } */"}]}