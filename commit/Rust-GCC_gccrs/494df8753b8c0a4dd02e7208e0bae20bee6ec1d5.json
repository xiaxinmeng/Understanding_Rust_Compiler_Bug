{"sha": "494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0ZGY4NzUzYjhjMGE0ZGQwMmU3MjA4ZTBiYWUyMGJlZTZlYzFkNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-22T15:43:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-22T15:43:40Z"}, "message": "golang.org/x/tools/go/analysis: pass \"gccgo\" to types.SizesFor\n    \n    For the gofrontend copy, change calls to types.SizesFor to pass\n    \"gccgo\" rather than \"gc\".  Leave the asmdecl pass unchanged since that\n    pass is gc-specific anyhow.\n    \n    This has been fixed in a better way in the external repo by\n    https://golang.org/cl/158317 and friends, but that is not in 1.12, so\n    use this approach for now.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/158842\n\nFrom-SVN: r268153", "tree": {"sha": "1cb7f772ce52d0061ee020d8c7b76b324f50bcce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cb7f772ce52d0061ee020d8c7b76b324f50bcce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/comments", "author": null, "committer": null, "parents": [{"sha": "12f154688d9e942614d49178dee92b766afb64bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f154688d9e942614d49178dee92b766afb64bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f154688d9e942614d49178dee92b766afb64bb"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "95604f851dde98a761b45e3773698d092d2cfa31", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "patch": "@@ -1,4 +1,4 @@\n-fb44f62e7c01ebc987dad78875f593da18100007\n+e3271f3e09337b951822ba5c596d8cfe3b94508e\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a6e76a192dea966a1a87bdc729cee467adb6344f", "filename": "libgo/go/golang.org/x/tools/go/analysis/passes/cgocall/cgocall.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fcgocall%2Fcgocall.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fcgocall%2Fcgocall.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fcgocall%2Fcgocall.go?ref=494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "patch": "@@ -271,7 +271,7 @@ func typeCheckCgoSourceFiles(fset *token.FileSet, pkg *types.Package, files []*a\n \t\t\treturn importMap[path], nil\n \t\t}),\n \t\t// TODO(adonovan): Sizes should probably be provided by analysis.Pass.\n-\t\tSizes: types.SizesFor(\"gc\", build.Default.GOARCH),\n+\t\tSizes: types.SizesFor(\"gccgo\", build.Default.GOARCH),\n \t\tError: func(error) {}, // ignore errors (e.g. unused import)\n \t}\n "}, {"sha": "87523a19c67e0d44740e15f7d9e2f597ca15690d", "filename": "libgo/go/golang.org/x/tools/go/analysis/passes/printf/types.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fprintf%2Ftypes.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fprintf%2Ftypes.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fprintf%2Ftypes.go?ref=494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "patch": "@@ -236,4 +236,4 @@ func matchStructArgType(pass *analysis.Pass, t printfArgType, typ *types.Struct,\n \treturn true\n }\n \n-var archSizes = types.SizesFor(\"gc\", build.Default.GOARCH)\n+var archSizes = types.SizesFor(\"gccgo\", build.Default.GOARCH)"}, {"sha": "4142ac342ad72291a0b60a8ee906666d1b07f6ff", "filename": "libgo/go/golang.org/x/tools/go/analysis/passes/shift/shift.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fshift%2Fshift.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fshift%2Fshift.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Fpasses%2Fshift%2Fshift.go?ref=494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "patch": "@@ -125,4 +125,4 @@ var (\n \tuintptrBitSize = 8 * archSizes.Sizeof(types.Typ[types.Uintptr])\n )\n \n-var archSizes = types.SizesFor(\"gc\", build.Default.GOARCH)\n+var archSizes = types.SizesFor(\"gccgo\", build.Default.GOARCH)"}, {"sha": "5943c99e13bcfa094e1150d911556bc5a083b348", "filename": "libgo/go/golang.org/x/tools/go/analysis/unitchecker/unitchecker.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Funitchecker%2Funitchecker.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/494df8753b8c0a4dd02e7208e0bae20bee6ec1d5/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Funitchecker%2Funitchecker.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Ftools%2Fgo%2Fanalysis%2Funitchecker%2Funitchecker.go?ref=494df8753b8c0a4dd02e7208e0bae20bee6ec1d5", "patch": "@@ -221,7 +221,7 @@ func run(fset *token.FileSet, cfg *Config, analyzers []*analysis.Analyzer) ([]re\n \t})\n \ttc := &types.Config{\n \t\tImporter: importer,\n-\t\tSizes:    types.SizesFor(\"gc\", build.Default.GOARCH), // assume gccgo \u2261 gc?\n+\t\tSizes:    types.SizesFor(\"gccgo\", build.Default.GOARCH), // assume gccgo \u2261 gc?\n \t}\n \tinfo := &types.Info{\n \t\tTypes:      make(map[ast.Expr]types.TypeAndValue),"}]}