{"sha": "ae30c1fa3d408d80ddae53efa00586ed45277120", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzMGMxZmEzZDQwOGQ4MGRkYWU1M2VmYTAwNTg2ZWQ0NTI3NzEyMA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-09T02:22:37Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-09T02:22:37Z"}, "message": "mep.c: (mep_option_can_inline_p): New.\n\n* config/mep/mep.c: (mep_option_can_inline_p): New.\n(TARGET_OPTION_CAN_INLINE_P): Define.\n\nFrom-SVN: r149400", "tree": {"sha": "5dceaab5956e7270a9645ecea172b15766db765c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dceaab5956e7270a9645ecea172b15766db765c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae30c1fa3d408d80ddae53efa00586ed45277120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae30c1fa3d408d80ddae53efa00586ed45277120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae30c1fa3d408d80ddae53efa00586ed45277120", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae30c1fa3d408d80ddae53efa00586ed45277120/comments", "author": null, "committer": null, "parents": [{"sha": "e6fe9294ed39353e790ddc75f15996b26434d305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fe9294ed39353e790ddc75f15996b26434d305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6fe9294ed39353e790ddc75f15996b26434d305"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "6fefd14f1f8c01329318121c5e267fc11c607ef8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae30c1fa3d408d80ddae53efa00586ed45277120/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae30c1fa3d408d80ddae53efa00586ed45277120/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae30c1fa3d408d80ddae53efa00586ed45277120", "patch": "@@ -1,3 +1,8 @@\n+2009-07-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/mep/mep.c: (mep_option_can_inline_p): New.\n+\t(TARGET_OPTION_CAN_INLINE_P): Define.\n+\n 2009-07-08  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/40659"}, {"sha": "9b489f9c14a6da20ecdc7ee902906f3806c35dc5", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae30c1fa3d408d80ddae53efa00586ed45277120/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae30c1fa3d408d80ddae53efa00586ed45277120/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=ae30c1fa3d408d80ddae53efa00586ed45277120", "patch": "@@ -170,6 +170,7 @@ static tree mep_validate_interrupt (tree *, tree, tree, int, bool *);\n static tree mep_validate_io_cb (tree *, tree, tree, int, bool *);\n static tree mep_validate_vliw (tree *, tree, tree, int, bool *);\n static bool mep_function_attribute_inlinable_p (const_tree);\n+static bool mep_option_can_inline_p (tree, tree);\n static bool mep_lookup_pragma_disinterrupt (const char *);\n static int mep_multiple_address_regions (tree, bool);\n static int mep_attrlist_to_encoding (tree, tree);\n@@ -235,6 +236,8 @@ static tree mep_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n #define TARGET_INSERT_ATTRIBUTES\tmep_insert_attributes\n #undef  TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\n #define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\tmep_function_attribute_inlinable_p\n+#undef  TARGET_OPTION_CAN_INLINE_P\n+#define TARGET_OPTION_CAN_INLINE_P\t\tmep_option_can_inline_p\n #undef  TARGET_SECTION_TYPE_FLAGS\n #define TARGET_SECTION_TYPE_FLAGS\tmep_section_type_flags\n #undef  TARGET_ASM_NAMED_SECTION\n@@ -4106,6 +4109,23 @@ mep_function_attribute_inlinable_p (const_tree callee)\n \t  && lookup_attribute (\"interrupt\", attrs) == 0);\n }\n \n+static bool\n+mep_option_can_inline_p (tree caller, tree callee)\n+{\n+  if (TREE_CODE (callee) == ADDR_EXPR)\n+    callee = TREE_OPERAND (callee, 0);\n+ \n+  if (TREE_CODE (callee) == FUNCTION_DECL\n+      && DECL_DECLARED_INLINE_P (callee)\n+      && !mep_vliw_function_p (caller)\n+      && mep_vliw_function_p (callee))\n+    {\n+      error (\"cannot call inline VLIW functions from core functions\");\n+      return true;\n+    }\n+  return false;\n+}\n+\n #define FUNC_CALL\t\t1\n #define FUNC_DISINTERRUPT\t2\n "}]}