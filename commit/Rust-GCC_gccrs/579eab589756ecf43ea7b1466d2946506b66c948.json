{"sha": "579eab589756ecf43ea7b1466d2946506b66c948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5ZWFiNTg5NzU2ZWNmNDNlYTdiMTQ2NmQyOTQ2NTA2YjY2Yzk0OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-12-23T13:05:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-23T13:05:50Z"}, "message": "re PR middle-end/17746 (ICE when building the Ada RTS)\n\n\tPR middle-end/17746\n\t* expr.c (get_inner_reference): Add 'keep_aligning' parameter.\n\tBreak on aligning VIEW_CONVERT_EXPR nodes on STRICT_ALIGNMENT\n\tplatforms only if keep_aligning is true.\n\t(expand_assignment): Adjust call to get_inner_reference.\n\t(expand_expr_addr_expr_1): Likewise.\n\t(expand_expr_real_1): Likewise.\n\t* dojump.c (do_jump): Likewise.\n\t* dwarf2out.c (loc_descriptor_from_tree_1): Likewise.\n\t* fold-const.c (optimize_bit_field_compare): Likewise.\n\t(decode_field_reference): Likewise.\n\t(split_address_to_core_and_offset): Likewise.\n\t* tree-ssa-loop-ivopts.c (split_address_cost): Likewise.\n\t* tree.h (get_inner_reference): Adjust prototype.\n\nada/\n\t* trans.c (Attribute_to_gnu): Adjust call to get_inner_reference.\n\t* utils2.c (build_unary_op): Likewise.\n\nFrom-SVN: r92550", "tree": {"sha": "9c790fec64531932388b34f958c5793477000d23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c790fec64531932388b34f958c5793477000d23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/579eab589756ecf43ea7b1466d2946506b66c948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579eab589756ecf43ea7b1466d2946506b66c948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579eab589756ecf43ea7b1466d2946506b66c948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579eab589756ecf43ea7b1466d2946506b66c948/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2614034eead349c8ae65e7f106bdce4212e9b71a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2614034eead349c8ae65e7f106bdce4212e9b71a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2614034eead349c8ae65e7f106bdce4212e9b71a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "e59394946c7981a148796a9430ba3f1804494330", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579eab589756ecf43ea7b1466d2946506b66c948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579eab589756ecf43ea7b1466d2946506b66c948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=579eab589756ecf43ea7b1466d2946506b66c948", "patch": "@@ -13,7 +13,7 @@\n \t(decode_field_reference): Likewise.\n \t(split_address_to_core_and_offset): Likewise.\n \t* tree-ssa-loop-ivopts.c (split_address_cost): Likewise.\n-\t* expr.h (get_inner_reference): Adjust prototype.\n+\t* tree.h (get_inner_reference): Adjust prototype.\n \n 2004-12-23  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "1411d71ad527da8707c99e305b0b3de9cdebfadf", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579eab589756ecf43ea7b1466d2946506b66c948/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579eab589756ecf43ea7b1466d2946506b66c948/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=579eab589756ecf43ea7b1466d2946506b66c948", "patch": "@@ -3366,7 +3366,8 @@ extern tree get_narrower (tree, int *);\n    and find the ultimate containing object, which is returned.  */\n \n extern tree get_inner_reference (tree, HOST_WIDE_INT *, HOST_WIDE_INT *,\n-\t\t\t\t tree *, enum machine_mode *, int *, int *);\n+\t\t\t\t tree *, enum machine_mode *, int *, int *,\n+\t\t\t\t bool);\n \n /* Return 1 if T is an expression that get_inner_reference handles.  */\n "}]}