{"sha": "ea56c18c501657906e72a693dba7775b2f39a004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE1NmMxOGM1MDE2NTc5MDZlNzJhNjkzZGJhNzc3NWIyZjM5YTAwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-08-18T14:04:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:22Z"}, "message": "[Ada] Minor fixes in GNAT RM\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_characteristics.rst: Minor\n\tfixes.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "41666c1e4a87a9fa9829ddbf8328e9a59adf1565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41666c1e4a87a9fa9829ddbf8328e9a59adf1565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea56c18c501657906e72a693dba7775b2f39a004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea56c18c501657906e72a693dba7775b2f39a004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea56c18c501657906e72a693dba7775b2f39a004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea56c18c501657906e72a693dba7775b2f39a004/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "903275965921f6f63519f07b4f82467ee39160a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903275965921f6f63519f07b4f82467ee39160a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/903275965921f6f63519f07b4f82467ee39160a1"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "71e18343532bff6e7aec8ef01f789845d0057440", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea56c18c501657906e72a693dba7775b2f39a004/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea56c18c501657906e72a693dba7775b2f39a004/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=ea56c18c501657906e72a693dba7775b2f39a004", "patch": "@@ -13,8 +13,7 @@ Manual, and are summarized in Annex M.\n A requirement for conforming Ada compilers is that they provide\n documentation describing how the implementation deals with each of these\n issues.  In this chapter you will find each point in Annex M listed,\n-followed by a description of how GNAT\n-handles the implementation dependence.\n+followed by a description of how GNAT handles the implementation dependence.\n \n You can use this chapter as a guide to minimizing implementation\n dependent features in your programs if portability to other compilers\n@@ -157,7 +156,7 @@ Type                   Representation\n Any combinations are permitted that do not result in a small less than\n ``Fine_Delta`` and do not result in a mantissa larger than 63 bits.\n If the mantissa is larger than 53 bits on machines where Long_Long_Float\n-is 64 bits (true of all architectures except ia32), then the output from\n+is 64 bits (true of all architectures except x86), then the output from\n Text_IO is accurate to only 53 bits, rather than the full mantissa.  This\n is because floating-point conversions are used to convert fixed point.\n \n@@ -1222,7 +1221,7 @@ is converted to the target type.\n \n The result is only defined to be in the perfect result set if the result\n can be computed by a single scaling operation involving a scale factor\n-representable in 64-bits.\n+representable in 64 bits.\n \n *\n   \"The result of a fixed point arithmetic operation in"}, {"sha": "88e24791fed2497f286b1f4a4c1f2a2f38abb977", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea56c18c501657906e72a693dba7775b2f39a004/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea56c18c501657906e72a693dba7775b2f39a004/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ea56c18c501657906e72a693dba7775b2f39a004", "patch": "@@ -15379,8 +15379,7 @@ Manual, and are summarized in Annex M.\n A requirement for conforming Ada compilers is that they provide\n documentation describing how the implementation deals with each of these\n issues.  In this chapter you will find each point in Annex M listed,\n-followed by a description of how GNAT\n-handles the implementation dependence.\n+followed by a description of how GNAT handles the implementation dependence.\n \n You can use this chapter as a guide to minimizing implementation\n dependent features in your programs if portability to other compilers\n@@ -15681,7 +15680,7 @@ supported for fixed point types.  See 3.5.9(10).\"\n Any combinations are permitted that do not result in a small less than\n @code{Fine_Delta} and do not result in a mantissa larger than 63 bits.\n If the mantissa is larger than 53 bits on machines where Long_Long_Float\n-is 64 bits (true of all architectures except ia32), then the output from\n+is 64 bits (true of all architectures except x86), then the output from\n Text_IO is accurate to only 53 bits, rather than the full mantissa.  This\n is because floating-point conversions are used to convert fixed point.\n \n@@ -17505,7 +17504,7 @@ perfect result set.  See G.2.3(22).\"\n \n The result is only defined to be in the perfect result set if the result\n can be computed by a single scaling operation involving a scale factor\n-representable in 64-bits.\n+representable in 64 bits.\n \n \n @itemize *"}]}