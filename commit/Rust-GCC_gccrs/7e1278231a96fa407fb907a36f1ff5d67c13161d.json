{"sha": "7e1278231a96fa407fb907a36f1ff5d67c13161d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UxMjc4MjMxYTk2ZmE0MDdmYjkwN2EzNmYxZmY1ZDY3YzEzMTYxZA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-22T01:05:16Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-22T01:05:16Z"}, "message": "Merged in earlier cccp.c changes.\n\nFrom-SVN: r9217", "tree": {"sha": "b11ef8f8bd1f4c82baf9381081d2989b90049773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b11ef8f8bd1f4c82baf9381081d2989b90049773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e1278231a96fa407fb907a36f1ff5d67c13161d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1278231a96fa407fb907a36f1ff5d67c13161d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e1278231a96fa407fb907a36f1ff5d67c13161d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1278231a96fa407fb907a36f1ff5d67c13161d/comments", "author": null, "committer": null, "parents": [{"sha": "eb6b0c88861370a9fad8c58dea37ff0db8f90689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6b0c88861370a9fad8c58dea37ff0db8f90689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6b0c88861370a9fad8c58dea37ff0db8f90689"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "982bcc334491373068fbb4b38b76fb18f5a50d16", "filename": "gcc/cpperror.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e1278231a96fa407fb907a36f1ff5d67c13161d/gcc%2Fcpperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e1278231a96fa407fb907a36f1ff5d67c13161d/gcc%2Fcpperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpperror.c?ref=7e1278231a96fa407fb907a36f1ff5d67c13161d", "patch": "@@ -34,7 +34,7 @@ extern int errno;\n #ifndef VMS\n #ifndef HAVE_STRERROR\n extern int sys_nerr;\n-#if defined(bsd4_4) || defined(__NetBSD__)\n+#if defined(bsd4_4)\n extern const char *const sys_errlist[];\n #else\n extern char *sys_errlist[];"}, {"sha": "80a926989da653bef0d8864005ee802a9ceb9641", "filename": "gcc/cppexp.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e1278231a96fa407fb907a36f1ff5d67c13161d/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e1278231a96fa407fb907a36f1ff5d67c13161d/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=7e1278231a96fa407fb907a36f1ff5d67c13161d", "patch": "@@ -119,12 +119,24 @@ static long right_shift ();\n #define HAVE_VALUE 4\n /*#define UNSIGNEDP 8*/\n \n+#ifndef HOST_BITS_PER_WIDE_INT\n+\n+#if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT long\n+#else\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n+#define HOST_WIDE_INT int\n+#endif\n+\n+#endif\n+\n struct operation {\n     short op;\n     char rprio; /* Priority of op (relative to it right operand). */\n     char flags;\n     char unsignedp;    /* true if value should be treated as unsigned */\n-    long value;        /* The value logically \"right\" of op. */\n+    HOST_WIDE_INT value;        /* The value logically \"right\" of op. */\n };\n \f\n /* Take care of parsing a number (anything that starts with a digit).\n@@ -641,7 +653,7 @@ right_shift (pfile, a, unsignedp, b)\n /* Parse and evaluate a C expression, reading from PFILE.\n    Returns the value of the expression.  */\n \n-long\n+HOST_WIDE_INT\n cpp_parse_expr (pfile)\n      cpp_reader *pfile;\n {"}]}