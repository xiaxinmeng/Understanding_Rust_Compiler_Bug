{"sha": "dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5MTIzMzEwZDBmNGU2ZDc4MTVkNWM0NGY5YzhjMGU1OTUyMWE2Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-05-12T09:53:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-05-12T09:53:53Z"}, "message": "re PR fortran/49110 (Deferred-length character result triggers (false positive) error for pure procedures)\n\n2012-05-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/49110\n        PR fortran/52843\n        * resolve.c (resolve_fl_procedure): Don't regard\n        character(len=:) as character(*) in the diagnostic.\n\n2012-05-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/49110\n        PR fortran/52843\n        * gfortran.dg/deferred_type_param_5.f90: New.\n\nFrom-SVN: r187427", "tree": {"sha": "933fc64572ba82a7f17d058ef604c136a4519126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/933fc64572ba82a7f17d058ef604c136a4519126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3906795848d851fde84d9cc12067f153561bb11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3906795848d851fde84d9cc12067f153561bb11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3906795848d851fde84d9cc12067f153561bb11a"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "faffa290f24974b2126563fb6e31dc3a59d95899", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "patch": "@@ -1,3 +1,10 @@\n+2012-05-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49110\n+\tPR fortran/52843\n+\t* resolve.c (resolve_fl_procedure): Don't regard\n+\tcharacter(len=:) as character(*) in the diagnostic.\n+\n 2012-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/52537"}, {"sha": "4a072303c496208b9871733af489441c0dfbb0e4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "patch": "@@ -10726,7 +10726,7 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n      actual length; (ii) To declare a named constant; or (iii) External\n      function - but length must be declared in calling scoping unit.  */\n   if (sym->attr.function\n-      && sym->ts.type == BT_CHARACTER\n+      && sym->ts.type == BT_CHARACTER && !sym->ts.deferred\n       && sym->ts.u.cl && sym->ts.u.cl->length == NULL)\n     {\n       if ((sym->as && sym->as->rank) || (sym->attr.pointer)"}, {"sha": "5f5e68922729b986f5ab2a8aa7af4e67dbe3d550", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "patch": "@@ -1,3 +1,9 @@\n+2012-05-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49110\n+\tPR fortran/52843\n+\t* gfortran.dg/deferred_type_param_5.f90: New.\n+\n 2012-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/parse/error47.C: New."}, {"sha": "8380b9d2d4d9a856c7210b34623335d3f54a7882", "filename": "gcc/testsuite/gfortran.dg/deferred_type_param_5.f90", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_type_param_5.f90?ref=dd9123310d0f4e6d7815d5c44f9c8c0e59521a6f", "patch": "@@ -0,0 +1,51 @@\n+! { dg-do compile }\n+!\n+! PR fortran/49110\n+! PR fortran/52843\n+!\n+! Based on a contributed code by jwmwalrus@gmail.com\n+!\n+! Before, character(len=:) result variable were rejected in PURE functions. \n+!\n+module mod1\n+    use iso_c_binding\n+    implicit none\n+\n+contains\n+    pure function c_strlen(str)\n+      character(KIND = C_CHAR), intent(IN) :: str(*)\n+      integer :: c_strlen,i\n+\n+      i = 1\n+      do\n+        if (i < 1) then\n+          c_strlen = 0\n+          return\n+        end if\n+        if (str(i) == c_null_char) exit\n+        i = i + 1\n+      end do\n+      c_strlen = i - 1\n+    end function c_strlen\n+    pure function c2fstring(cbuffer) result(string)\n+        character(:), allocatable :: string\n+        character(KIND = C_CHAR), intent(IN) :: cbuffer(*)\n+        integer :: i\n+\n+    continue\n+        string = REPEAT(' ', c_strlen(cbuffer))\n+\n+        do i = 1, c_strlen(cbuffer)\n+            if (cbuffer(i) == C_NULL_CHAR) exit\n+            string(i:i) = cbuffer(i)\n+        enddo\n+\n+        string = TRIM(string)\n+    end function\n+end module mod1\n+\n+use mod1\n+character(len=:), allocatable :: str\n+str = c2fstring(\"ABCDEF\"//c_null_char//\"GHI\")\n+if (len(str) /= 6 .or. str /= \"ABCDEF\") call abort()\n+end"}]}