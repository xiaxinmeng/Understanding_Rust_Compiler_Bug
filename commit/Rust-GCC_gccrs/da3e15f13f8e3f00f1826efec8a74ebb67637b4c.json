{"sha": "da3e15f13f8e3f00f1826efec8a74ebb67637b4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzZTE1ZjEzZjhlM2YwMGYxODI2ZWZlYzhhNzRlYmI2NzYzN2I0Yw==", "commit": {"author": {"name": "Vlad Doster", "email": "mvdoster@gmail.com", "date": "2021-01-11T04:34:23Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-12T13:33:12Z"}, "message": "(docs) update README.md\n\n- Correct grammar/spelling\n- Add language syntax for code fences\n- Link to test-suite file", "tree": {"sha": "ef7c57c706c2e784ddfcc79d4608e06ec059c6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef7c57c706c2e784ddfcc79d4608e06ec059c6c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da3e15f13f8e3f00f1826efec8a74ebb67637b4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3e15f13f8e3f00f1826efec8a74ebb67637b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da3e15f13f8e3f00f1826efec8a74ebb67637b4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3e15f13f8e3f00f1826efec8a74ebb67637b4c/comments", "author": {"login": "vladdoster", "id": 10052309, "node_id": "MDQ6VXNlcjEwMDUyMzA5", "avatar_url": "https://avatars.githubusercontent.com/u/10052309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladdoster", "html_url": "https://github.com/vladdoster", "followers_url": "https://api.github.com/users/vladdoster/followers", "following_url": "https://api.github.com/users/vladdoster/following{/other_user}", "gists_url": "https://api.github.com/users/vladdoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladdoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladdoster/subscriptions", "organizations_url": "https://api.github.com/users/vladdoster/orgs", "repos_url": "https://api.github.com/users/vladdoster/repos", "events_url": "https://api.github.com/users/vladdoster/events{/privacy}", "received_events_url": "https://api.github.com/users/vladdoster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a9ceba8fd21973118f1866686aca5622cc60ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9ceba8fd21973118f1866686aca5622cc60ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a9ceba8fd21973118f1866686aca5622cc60ba2"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "412937048966816579039f6d8e20c3ae20116067", "filename": "README.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da3e15f13f8e3f00f1826efec8a74ebb67637b4c/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da3e15f13f8e3f00f1826efec8a74ebb67637b4c/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=da3e15f13f8e3f00f1826efec8a74ebb67637b4c", "patch": "@@ -5,18 +5,18 @@\n # GCC Rust\n ![GCC Rust](logo.png?raw=true \"GCC rust Logo\")\n \n-This is a full alternative implementaion of the Rust language ontop of GCC which the goal\n+gccrs is a full alternative implementation of the Rust language ontop of GCC with the goal\n to become fully upstream with the GNU toolchain.\n \n The origin of this project was a community effort several years ago where Rust was still at version 0.9;\n the language was subject to so much change that it became difficult for a community effort to play catch up.\n-Now that the language is in a stable state, it is a good time to create alternative compilers. The developers of\n+Now that the language is stable, it is an excellent time to create alternative compilers. The developers of\n the project are keen \u201cRustaceans\u201d with a desire to give back to the Rust community and to learn what GCC is capable\n of when it comes to a modern language.\n \n-## Development Enviroment\n+## Development Environment\n \n-Fetch dependancies for ubuntu:\n+Fetch dependencies for Ubuntu:\n \n ```bash\n $ apt install build-essential libgmp3-dev libmpfr-dev libmpc-dev flex bison autogen gcc-multilib dejagnu\n@@ -28,8 +28,8 @@ Clone the repository\n $ git clone git@github.com:Rust-GCC/gccrs.git\n ```\n \n-Compilation script. It is important to remember that GNU toolchain projects are designed to be built outside of its source directory\n-this is why a build directory is created.\n+Compilation script. It is important to remember that GNU toolchain projects are designed to be built outside of their source directory\n+which is why a build directory is created.\n \n ```bash\n $ mkdir gccrs-build\n@@ -40,47 +40,47 @@ $ make\n \n Running the compiler itself without make install we can simply invoke the compiler proper:\n \n-```\n+```bash\n $ gdb --args ./gcc/rust1 test.rs -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n ```\n \n To invoking the compiler driver (gccrs) we need to:\n \n-```\n+```bash\n $ make install\n ```\n \n Then invoke the compiler as expected:\n \n-```\n+```bash\n $ gccrs -g -O2 -c test.rs -o test.o\n $ gccrs -o test test.o\n ```\n \n ## Testsuite\n \n-The test suite can be invoked via:\n+Invoke the test suite via:\n \n-```\n+```bash\n $ make check-rust\n ```\n \n-Test cases can be found within gcc/testsuite/rust.test please feel free to contribute your specific\n-test cases referencing any issues on github.\n+Test cases are located within [gcc/testsuite/rust.test](gcc/testsuite/rust.test) please feel free to contribute your specific\n+test cases referencing any issues on Github.\n \n ## Docker image\n \n There is a docker image hosted over on: \n \n https://hub.docker.com/repository/docker/philberty/gccrs\n \n-```\n+```bash\n $ docker pull philberty/gccrs\n ```\n \n Or you can build your own image:\n \n-```\n+```bash\n $ docker build . -t gccrs-dev\n $ docker run --rm -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp \\\n     gccrs-dev:latest gccrs -g -O2 -c \\\n@@ -89,14 +89,14 @@ $ docker run --rm -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp \\\n \n ## Contributing\n \n-Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones and this means we require\n-contribtions to have copyright assignment in place. Please see: https://gcc.gnu.org/contribute.html\n+Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones, and this means we require\n+contributions to have copyright assignment in place. Please see https://gcc.gnu.org/contribute.html.\n \n-Not all contributions must be code, we would love to see new test cases or bugs and issues to be reported. Feel free to add any comments on open PRs\n+Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. Feel free to add any comments on open PRs\n \n ## Community\n \n-We can be found on all usual Rust channels such as Zulip but we also have our own channels:\n+We can be found on all usual Rust channels such as Zulip, but we also have our own channels:\n \n  * GCC Rust Zulip: https://gcc-rust.zulipchat.com/\n  * Twitter: https://twitter.com/gcc_rust"}]}