{"sha": "68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlNTZjYzRhMjdiZmYwZGFiN2YyZmMzYmNmODM1MzU4Mzc3MWY5OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-12-20T09:09:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-12-20T09:09:50Z"}, "message": "cgraph.h (FOR_EACH_STATIC_VARIABLE, [...]): New macros.\n\n\t* cgraph.h (FOR_EACH_STATIC_VARIABLE, FOR_EACH_STATIC_INITIALIZER): New\n\tmacros.\n\t(varpool_first_static_initializer, varpol_next_static_initializer): New\n\tinline functions.\n\t* ipa-reference.c (analyze_variable): Simplify.\n\t(static_execute): Use FOR_EACH_STATIC_INITIALIZER.\n\t* ipa-type-escape.c (type_escape_execute): Use FOR_EACH_STATIC_VARIABLE.\n\nFrom-SVN: r120070", "tree": {"sha": "21dd0c062d62565d1fbbf16f1fd779965b554ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21dd0c062d62565d1fbbf16f1fd779965b554ca6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/comments", "author": null, "committer": null, "parents": [{"sha": "7954dc21214b87ad8b3cf26994af00f968fcba78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7954dc21214b87ad8b3cf26994af00f968fcba78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7954dc21214b87ad8b3cf26994af00f968fcba78"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "0a36da5f5bda2912592a98297a8135cb49c1aeb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "patch": "@@ -1,3 +1,13 @@\n+2006-12-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.h (FOR_EACH_STATIC_VARIABLE, FOR_EACH_STATIC_INITIALIZER): New\n+\tmacros.\n+\t(varpool_first_static_initializer, varpol_next_static_initializer): New\n+\tinline functions.\n+\t* ipa-reference.c (analyze_variable): Simplify.\n+\t(static_execute): Use FOR_EACH_STATIC_INITIALIZER.\n+\t* ipa-type-escape.c (type_escape_execute): Use FOR_EACH_STATIC_VARIABLE.\n+\n 2006-12-19  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR tree-opt/30045"}, {"sha": "8d4fe750b05773a61f98218b3383918506248e07", "filename": "gcc/cgraph.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "patch": "@@ -342,6 +342,42 @@ bool varpool_analyze_pending_decls (void);\n void varpool_output_debug_info (void);\n void varpool_remove_unreferenced_decls (void);\n \n+/* Walk all reachable static variables.  */\n+#define FOR_EACH_STATIC_VARIABLE(node) \\\n+   for ((node) = varpool_nodes_queue; (node); (node) = (node)->next_needed)\n+\n+/* Return first reachable static variable with initializer.  */\n+static inline struct varpool_node *\n+varpool_first_static_initializer (void)\n+{\n+  struct varpool_node *node;\n+  for (node = varpool_nodes_queue; node; node = node->next_needed)\n+    {\n+      gcc_assert (TREE_CODE (node->decl) == VAR_DECL);\n+      if (DECL_INITIAL (node->decl))\n+\treturn node;\n+    }\n+  return NULL;\n+}\n+\n+/* Return next reachable static variable with initializer after NODE.  */\n+static inline struct varpool_node *\n+varpool_next_static_initializer (struct varpool_node *node)\n+{\n+  for (node = node->next_needed; node; node = node->next_needed)\n+    {\n+      gcc_assert (TREE_CODE (node->decl) == VAR_DECL);\n+      if (DECL_INITIAL (node->decl))\n+\treturn node;\n+    }\n+  return NULL;\n+}\n+\n+/* Walk all static variables with initializer set.  */\n+#define FOR_EACH_STATIC_INITIALIZER(node) \\\n+   for ((node) = varpool_first_static_initializer (); (node); \\\n+        (node) = varpool_next_static_initializer (node))\n+\n /* In ipa-inline.c  */\n bool cgraph_decide_inlining_incrementally (struct cgraph_node *, bool);\n void cgraph_clone_inlined_nodes (struct cgraph_edge *, bool, bool);"}, {"sha": "8602afda0b02305acf34ada969d3826f905de167", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "patch": "@@ -774,13 +774,8 @@ static void\n analyze_variable (struct varpool_node *vnode)\n {\n   tree global = vnode->decl;\n-  if (TREE_CODE (global) == VAR_DECL)\n-    {\n-      if (DECL_INITIAL (global)) \n-\twalk_tree (&DECL_INITIAL (global), scan_for_static_refs, \n-\t\t   NULL, visited_nodes);\n-    } \n-  else gcc_unreachable ();\n+  walk_tree (&DECL_INITIAL (global), scan_for_static_refs, \n+             NULL, visited_nodes);\n }\n \n /* This is the main routine for finding the reference patterns for\n@@ -903,7 +898,7 @@ static_execute (void)\n   ipa_init ();\n \n   /* Process all of the variables first.  */\n-  for (vnode = varpool_nodes_queue; vnode; vnode = vnode->next_needed)\n+  FOR_EACH_STATIC_INITIALIZER (vnode)\n     analyze_variable (vnode);\n \n   /* Process all of the functions next. "}, {"sha": "a7749f46a27a2038cbc83afa28f41f32b56a9c8a", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e56cc4a27bff0dab7f2fc3bcf8353583771f98/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=68e56cc4a27bff0dab7f2fc3bcf8353583771f98", "patch": "@@ -1682,7 +1682,7 @@ type_escape_execute (void)\n   ipa_init ();\n \n   /* Process all of the variables first.  */\n-  for (vnode = varpool_nodes_queue; vnode; vnode = vnode->next_needed)\n+  FOR_EACH_STATIC_VARIABLE (vnode)\n     analyze_variable (vnode);\n \n   /* Process all of the functions. next"}]}