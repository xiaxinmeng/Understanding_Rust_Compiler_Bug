{"sha": "ca1715ba544e20a85c8423094a18562359d0309d", "node_id": "C_kwDOANBUbNoAKGNhMTcxNWJhNTQ0ZTIwYTg1Yzg0MjMwOTRhMTg1NjIzNTlkMDMwOWQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-20T10:41:27Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-23T10:17:09Z"}, "message": "Copy range from op2 in foperator_equal::op1_range.\n\nLike the integer version, when op1 == op2 is known to be true the\nranges are also equal.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_equal::op1_range): Set range to\n\trange of op2.", "tree": {"sha": "fd66224baa78ea019523479a32fb1b2254d59c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd66224baa78ea019523479a32fb1b2254d59c6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca1715ba544e20a85c8423094a18562359d0309d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1715ba544e20a85c8423094a18562359d0309d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca1715ba544e20a85c8423094a18562359d0309d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1715ba544e20a85c8423094a18562359d0309d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200baf7698a1006714af27f2bfba6fad5607efb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200baf7698a1006714af27f2bfba6fad5607efb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200baf7698a1006714af27f2bfba6fad5607efb2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ad2fae578d21cbed2445506a70a9984a61da9ec1", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1715ba544e20a85c8423094a18562359d0309d/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1715ba544e20a85c8423094a18562359d0309d/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=ca1715ba544e20a85c8423094a18562359d0309d", "patch": "@@ -252,7 +252,8 @@ foperator_equal::op1_range (frange &r, tree type,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      r.set_varying (type);\n+      // If it's true, the result is the same as OP2.\n+      r = op2;\n       // The TRUE side of op1 == op2 implies op1 is !NAN.\n       r.set_nan (fp_prop::NO);\n       break;"}]}