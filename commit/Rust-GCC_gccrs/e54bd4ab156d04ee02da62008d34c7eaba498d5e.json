{"sha": "e54bd4ab156d04ee02da62008d34c7eaba498d5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU0YmQ0YWIxNTZkMDRlZTAyZGE2MjAwOGQzNGM3ZWFiYTQ5OGQ1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-01-15T13:08:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-15T13:08:44Z"}, "message": "gengtype.c (create_user_defined_type): Workaround -Wmaybe-uninitialized false positives.\n\n\t* gengtype.c (create_user_defined_type): Workaround\n\t-Wmaybe-uninitialized false positives.\n\t* cse.c (fold_rtx): Likewise.\n\t* loop-invariant.c (gain_for_invariant): Likewise.\n\nFrom-SVN: r219652", "tree": {"sha": "bde934e4aa356a8650f60f1d993ef54085998bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bde934e4aa356a8650f60f1d993ef54085998bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e54bd4ab156d04ee02da62008d34c7eaba498d5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54bd4ab156d04ee02da62008d34c7eaba498d5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54bd4ab156d04ee02da62008d34c7eaba498d5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54bd4ab156d04ee02da62008d34c7eaba498d5e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "928923e765d97970732426c49a69ffd7802db034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928923e765d97970732426c49a69ffd7802db034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928923e765d97970732426c49a69ffd7802db034"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "34f7feed1d720ede91c57cf9e901e948325097ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e54bd4ab156d04ee02da62008d34c7eaba498d5e", "patch": "@@ -1,3 +1,10 @@\n+2015-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gengtype.c (create_user_defined_type): Workaround\n+\t-Wmaybe-uninitialized false positives.\n+\t* cse.c (fold_rtx): Likewise.\n+\t* loop-invariant.c (gain_for_invariant): Likewise.\n+\n 2015-01-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (expand_expr_real_1) <normal_inner_ref>: Use the expression to"}, {"sha": "8806197730ca6214fef7a32fee520a32be051712", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=e54bd4ab156d04ee02da62008d34c7eaba498d5e", "patch": "@@ -3093,8 +3093,10 @@ fold_rtx (rtx x, rtx_insn *insn)\n   int changed = 0;\n \n   /* Operands of X.  */\n-  rtx folded_arg0;\n-  rtx folded_arg1;\n+  /* Workaround -Wmaybe-uninitialized false positive during\n+     profiledbootstrap by initializing them.  */\n+  rtx folded_arg0 = NULL_RTX;\n+  rtx folded_arg1 = NULL_RTX;\n \n   /* Constant equivalents of first three operands of X;\n      0 when no such equivalent is known.  */"}, {"sha": "19cdc52bbfa736d96ea69cee23608ab56e985245", "filename": "gcc/gengtype.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=e54bd4ab156d04ee02da62008d34c7eaba498d5e", "patch": "@@ -611,7 +611,9 @@ create_user_defined_type (const char *type_name, struct fileloc *pos)\n \t comma-separated list of strings, implicitly assumed to\n \t be type names, potentially with \"*\" characters.  */\n       char *arg = open_bracket + 1;\n-      char *next;\n+      /* Workaround -Wmaybe-uninitialized false positive during\n+\t profiledbootstrap by initializing it.  */\n+      char *next = NULL;\n       char *type_id = strtoken (arg, \",>\", &next);\n       pair_p fields = 0;\n       while (type_id)"}, {"sha": "e5eb9e6366e606c897960b826bba7438af0cae49", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54bd4ab156d04ee02da62008d34c7eaba498d5e/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=e54bd4ab156d04ee02da62008d34c7eaba498d5e", "patch": "@@ -1268,7 +1268,9 @@ gain_for_invariant (struct invariant *inv, unsigned *regs_needed,\n \t\t    bool speed, bool call_p)\n {\n   int comp_cost, size_cost;\n-  enum reg_class cl;\n+  /* Workaround -Wmaybe-uninitialized false positive during\n+     profiledbootstrap by initializing it.  */\n+  enum reg_class cl = NO_REGS;\n   int ret;\n \n   actual_stamp++;"}]}