{"sha": "93cc82d1f3d649ad736c07396f711c9f09e67dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNjYzgyZDFmM2Q2NDlhZDczNmMwNzM5NmY3MTFjOWYwOWU2N2RiZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-31T18:43:08Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-31T18:43:08Z"}, "message": "libstdc++.exp (libstdc++_init): Set v3-libgomp.\n\n2008-07-31  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/lib/libstdc++.exp (libstdc++_init): Set v3-libgomp.\n\t(check_v3_target_parallel_mode): Robustify, just follow the\n\tstructure of testsuite/Makefile.am.\n\nFrom-SVN: r138428", "tree": {"sha": "b2d499bda3d6d9e465c9a06f32f9268113cbbcc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2d499bda3d6d9e465c9a06f32f9268113cbbcc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93cc82d1f3d649ad736c07396f711c9f09e67dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93cc82d1f3d649ad736c07396f711c9f09e67dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93cc82d1f3d649ad736c07396f711c9f09e67dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93cc82d1f3d649ad736c07396f711c9f09e67dbd/comments", "author": null, "committer": null, "parents": [{"sha": "88e2c8107b5faaa2b2bee01ee6e6f51522b4e5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e2c8107b5faaa2b2bee01ee6e6f51522b4e5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e2c8107b5faaa2b2bee01ee6e6f51522b4e5dd"}], "stats": {"total": 37, "additions": 13, "deletions": 24}, "files": [{"sha": "93892d125fe60aafe557e47a113b75a350ab09cd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93cc82d1f3d649ad736c07396f711c9f09e67dbd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93cc82d1f3d649ad736c07396f711c9f09e67dbd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93cc82d1f3d649ad736c07396f711c9f09e67dbd", "patch": "@@ -1,3 +1,9 @@\n+2008-07-31  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/lib/libstdc++.exp (libstdc++_init): Set v3-libgomp.\n+\t(check_v3_target_parallel_mode): Robustify, just follow the\n+\tstructure of testsuite/Makefile.am.\n+\n 2008-07-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/debug/set.h: Minor formatting fixes."}, {"sha": "9412ce976ad13982bd9b17540c077a94853e122f", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93cc82d1f3d649ad736c07396f711c9f09e67dbd/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93cc82d1f3d649ad736c07396f711c9f09e67dbd/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=93cc82d1f3d649ad736c07396f711c9f09e67dbd", "patch": "@@ -81,7 +81,7 @@ proc v3-copy-files {srcfiles} {\n # Called once, during runtest.exp setup.\n proc libstdc++_init { testfile } {\n     global env\n-    global v3-sharedlib \n+    global v3-sharedlib v3-libgomp\n     global srcdir blddir objdir tool_root_dir\n     global cc cxx cxxflags cxxpchflags cxxldflags\n     global includes\n@@ -135,10 +135,13 @@ proc libstdc++_init { testfile } {\n     v3track gccdir 3\n \n     # Locate libgomp. This is only required for parallel mode.\n+    set v3-libgomp 0\n     set libgompdir [lookfor_file $blddir/../libgomp .libs/libgomp.so]\n     if {$libgompdir != \"\"} {\n+\tset v3-libgomp 1\n         set libgompdir [file dirname $libgompdir]\n \tappend ld_library_path_tmp \":${libgompdir}\"\n+\tverbose -log \"libgomp support detected\"\n     }\n     v3track libgompdir 3\n \n@@ -968,7 +971,7 @@ proc check_v3_target_debug_mode { } {\n \n proc check_v3_target_parallel_mode { } {\n     global cxxflags\n-    global DEFAULT_CXXFLAGS\n+    global v3-libgomp\n     global et_parallel_mode\n \n     global tool\t\n@@ -993,29 +996,9 @@ proc check_v3_target_parallel_mode { } {\n     } else {\n \tset et_parallel_mode 0\n \n-\t# Set up and compile a C++ test program that depends\n-\t# on parallel mode working.\n-\tset src parallel_mode[pid].cc\n-\tset exe parallel_mode[pid].exe\n-\n-\tset f [open $src \"w\"]\n-\tputs $f \"#include <omp.h>\"\n-\tputs $f \"int main()\"\n-\tputs $f \"{ return 0; }\"\n-\tclose $f\n-\n-\tset cxxflags_saved $cxxflags\n-\tset cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -Werror\"\n-\n-\tset lines [v3_target_compile $src $exe executable \"\"]\n-\tset cxxflags $cxxflags_saved\n-\tfile delete $src\n-\n-\tif [string match \"\" $lines] {\n-\t    # No error message, compilation succeeded.\n+\t# If 'make check-parallel' is running the test succeeds.\n+\tif { ${v3-libgomp} == 1 && [regexp \"libgomp\" $cxxflags] } {\n \t    set et_parallel_mode 1\n-\t} else {\n-\t    verbose \"check_v3_target_parallel_mode: compilation failed\" 2\n \t}\n     }\n     verbose \"check_v3_target_parallel_mode: $et_parallel_mode\" 2"}]}