{"sha": "b1500d001aa58e8712c201ce9fbbad9288a87649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1MDBkMDAxYWE1OGU4NzEyYzIwMWNlOWZiYmFkOTI4OGE4NzY0OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-03-23T19:11:35Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-03-23T19:11:35Z"}, "message": "fold-const.c (tree_expr_nonnegative_p): A&B is nonnegative when A is nonnegative or B is nonnegative.\n\n\n\t* fold-const.c (tree_expr_nonnegative_p): A&B is nonnegative when\n\tA is nonnegative or B is nonnegative.  Similarly A|B is nonnegative\n\twhen both A and B are nonnegative.\n\t(tree_expr_nonzero_p): A|B is nonzero when A is nonzero or B is\n\tnonzero.\n\nFrom-SVN: r79870", "tree": {"sha": "2b56aae8824e1a5c46e1aee5e858bcf704cd6e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b56aae8824e1a5c46e1aee5e858bcf704cd6e4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1500d001aa58e8712c201ce9fbbad9288a87649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1500d001aa58e8712c201ce9fbbad9288a87649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1500d001aa58e8712c201ce9fbbad9288a87649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1500d001aa58e8712c201ce9fbbad9288a87649/comments", "author": null, "committer": null, "parents": [{"sha": "986dc4e5c484406ad0024de79feb8905602542b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/986dc4e5c484406ad0024de79feb8905602542b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/986dc4e5c484406ad0024de79feb8905602542b4"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "603f6a45f29c3cd7875ffc9309307a2e87180604", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1500d001aa58e8712c201ce9fbbad9288a87649/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1500d001aa58e8712c201ce9fbbad9288a87649/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1500d001aa58e8712c201ce9fbbad9288a87649", "patch": "@@ -1,3 +1,11 @@\n+2004-03-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (tree_expr_nonnegative_p): A&B is nonnegative when\n+\tA is nonnegative or B is nonnegative.  Similarly A|B is nonnegative\n+\twhen both A and B are nonnegative.\n+\t(tree_expr_nonzero_p): A|B is nonzero when A is nonzero or B is\n+\tnonzero.\n+\n 2004-03-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* fold-const.c (fold): Remove cases for INTEGER_CST, REAL_CST,"}, {"sha": "417d1a45c8ea930a4627a35cd8d707abfdfb2a11", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1500d001aa58e8712c201ce9fbbad9288a87649/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1500d001aa58e8712c201ce9fbbad9288a87649/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b1500d001aa58e8712c201ce9fbbad9288a87649", "patch": "@@ -8717,6 +8717,13 @@ tree_expr_nonnegative_p (tree t)\n       return tree_expr_nonnegative_p (TREE_OPERAND (t, 0))\n \t     && tree_expr_nonnegative_p (TREE_OPERAND (t, 1));\n \n+    case BIT_AND_EXPR:\n+      return tree_expr_nonnegative_p (TREE_OPERAND (t, 1))\n+\t     || tree_expr_nonnegative_p (TREE_OPERAND (t, 0));\n+    case BIT_IOR_EXPR:\n+      return tree_expr_nonnegative_p (TREE_OPERAND (t, 0))\n+\t     && tree_expr_nonnegative_p (TREE_OPERAND (t, 1));\n+\n     case NOP_EXPR:\n       {\n \ttree inner_type = TREE_TYPE (TREE_OPERAND (t, 0));\n@@ -8955,6 +8962,10 @@ tree_expr_nonzero_p (tree t)\n     case NON_LVALUE_EXPR:\n       return tree_expr_nonzero_p (TREE_OPERAND (t, 0));\n \n+    case BIT_IOR_EXPR:\n+      return tree_expr_nonzero_p (TREE_OPERAND (t, 1))\n+\t     || tree_expr_nonzero_p (TREE_OPERAND (t, 0));\n+\n     default:\n       break;\n     }"}]}