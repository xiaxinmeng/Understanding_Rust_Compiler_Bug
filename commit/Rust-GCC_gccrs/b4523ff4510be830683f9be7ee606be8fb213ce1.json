{"sha": "b4523ff4510be830683f9be7ee606be8fb213ce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ1MjNmZjQ1MTBiZTgzMDY4M2Y5YmU3ZWU2MDZiZThmYjIxM2NlMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T11:19:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-16T11:19:45Z"}, "message": "(get_inner_reference): Add new arg.\n\nFrom-SVN: r13189", "tree": {"sha": "5b120fdbd3c8fa24882677a4f3ab6470238c561a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b120fdbd3c8fa24882677a4f3ab6470238c561a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4523ff4510be830683f9be7ee606be8fb213ce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4523ff4510be830683f9be7ee606be8fb213ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4523ff4510be830683f9be7ee606be8fb213ce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4523ff4510be830683f9be7ee606be8fb213ce1/comments", "author": null, "committer": null, "parents": [{"sha": "23bd99ae342707dae943a467c392cb7b446742c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23bd99ae342707dae943a467c392cb7b446742c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23bd99ae342707dae943a467c392cb7b446742c6"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ae86ccc95dc52860f22c57f393293cace83250e8", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4523ff4510be830683f9be7ee606be8fb213ce1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4523ff4510be830683f9be7ee606be8fb213ce1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b4523ff4510be830683f9be7ee606be8fb213ce1", "patch": "@@ -1541,7 +1541,9 @@ extern tree maybe_build_cleanup\t\tPROTO((tree));\n    look for nested component-refs or array-refs at constant positions\n    and find the ultimate containing object, which is returned.  */\n \n-extern tree get_inner_reference\t\tPROTO((tree, int *, int *, tree *, enum machine_mode *, int *, int *));\n+extern tree get_inner_reference\t\tPROTO((tree, int *, int *, tree *,\n+\t\t\t\t\t       enum machine_mode *, int *,\n+\t\t\t\t\t       int *, int *));\n \n /* Return the FUNCTION_DECL which provides this _DECL with its context,\n    or zero if none.  */"}]}