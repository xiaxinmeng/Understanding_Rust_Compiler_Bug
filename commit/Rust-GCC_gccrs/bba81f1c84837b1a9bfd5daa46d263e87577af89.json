{"sha": "bba81f1c84837b1a9bfd5daa46d263e87577af89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJhODFmMWM4NDgzN2IxYTliZmQ1ZGFhNDZkMjYzZTg3NTc3YWY4OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-09T09:20:59Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-09T09:20:59Z"}, "message": "Increment value instead of a pointer in ADA macro processing.\n\n2017-03-09  Martin Liska  <mliska@suse.cz>\n\n\t* c-ada-spec.c (macro_length): Increment value instead of a pointer.\n\nFrom-SVN: r245992", "tree": {"sha": "7bd8daa3e24f512719d05e59bea77b822bb49acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd8daa3e24f512719d05e59bea77b822bb49acf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bba81f1c84837b1a9bfd5daa46d263e87577af89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba81f1c84837b1a9bfd5daa46d263e87577af89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bba81f1c84837b1a9bfd5daa46d263e87577af89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba81f1c84837b1a9bfd5daa46d263e87577af89/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e463823a8dbedb956fda93af75c206f9ef3acd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e463823a8dbedb956fda93af75c206f9ef3acd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e463823a8dbedb956fda93af75c206f9ef3acd4"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b14cb0d64fe7eef8db6af391fac222630d9e4312", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba81f1c84837b1a9bfd5daa46d263e87577af89/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba81f1c84837b1a9bfd5daa46d263e87577af89/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bba81f1c84837b1a9bfd5daa46d263e87577af89", "patch": "@@ -1,3 +1,7 @@\n+2017-03-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-ada-spec.c (macro_length): Increment value instead of a pointer.\n+\n 2017-03-03  Jason Merrill  <jason@redhat.com>\n \n \t* c.opt (Wnoexcept-type): New."}, {"sha": "18c5ccf1054e3c408488a19be062416b754bb0e2", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba81f1c84837b1a9bfd5daa46d263e87577af89/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba81f1c84837b1a9bfd5daa46d263e87577af89/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=bba81f1c84837b1a9bfd5daa46d263e87577af89", "patch": "@@ -72,7 +72,7 @@ macro_length (const cpp_macro *macro, int *supported, int *buffer_len,\n \n   if (macro->fun_like)\n     {\n-      param_len++;\n+      (*param_len)++;\n       for (i = 0; i < macro->paramc; i++)\n \t{\n \t  cpp_hashnode *param = macro->params[i];"}]}