{"sha": "3d4a2c640842d83a68f98ffe27e124ef12f9849c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0YTJjNjQwODQyZDgzYTY4Zjk4ZmZlMjdlMTI0ZWYxMmY5ODQ5Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-07-04T09:03:35Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-07-04T09:03:35Z"}, "message": "tree-vrp.c (extract_range_from_binary_expr_1): Initialze neg_*_op* variables.\n\n       * tree-vrp.c (extract_range_from_binary_expr_1): Initialze\n       neg_*_op* variables.\n\nFrom-SVN: r262380", "tree": {"sha": "4d2ee502365bb3a1463644c9a8e1efc270f500d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2ee502365bb3a1463644c9a8e1efc270f500d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d4a2c640842d83a68f98ffe27e124ef12f9849c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4a2c640842d83a68f98ffe27e124ef12f9849c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d4a2c640842d83a68f98ffe27e124ef12f9849c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4a2c640842d83a68f98ffe27e124ef12f9849c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9029d55f24c824698de277abc1961e4673512db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9029d55f24c824698de277abc1961e4673512db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9029d55f24c824698de277abc1961e4673512db"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "5ff16010a0ea667200b0f56ca912b50e1622c292", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4a2c640842d83a68f98ffe27e124ef12f9849c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4a2c640842d83a68f98ffe27e124ef12f9849c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d4a2c640842d83a68f98ffe27e124ef12f9849c", "patch": "@@ -1,3 +1,8 @@\n+2018-07-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Initialize\n+\tneg_*_op* variables.\n+\n 2018-07-04  Martin Liska  <mliska@suse.cz>\n \n \t* tree-switch-conversion.c: Define"}, {"sha": "65865a7f5b61c040db96bd77d013e0f65d34e603", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4a2c640842d83a68f98ffe27e124ef12f9849c/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4a2c640842d83a68f98ffe27e124ef12f9849c/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=3d4a2c640842d83a68f98ffe27e124ef12f9849c", "patch": "@@ -1661,6 +1661,8 @@ extract_range_from_binary_expr_1 (value_range *vr,\n       tree sym_max_op1 = NULL_TREE;\n       bool neg_min_op0, neg_min_op1, neg_max_op0, neg_max_op1;\n \n+      neg_min_op0 = neg_min_op1 = neg_max_op0 = neg_max_op1 = false;\n+\n       /* If we have a PLUS or MINUS with two VR_RANGEs, either constant or\n \t single-symbolic ranges, try to compute the precise resulting range,\n \t but only if we know that this resulting range will also be constant"}]}