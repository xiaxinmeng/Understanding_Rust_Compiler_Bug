{"sha": "84152c25a53201930fd73cb13a905d8335367971", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQxNTJjMjVhNTMyMDE5MzBmZDczY2IxM2E5MDVkODMzNTM2Nzk3MQ==", "commit": {"author": {"name": "Vladimir Prus", "email": "vladimir@codesourcery.com", "date": "2007-06-09T10:16:52Z"}, "committer": {"name": "Vladimir Prus", "email": "vprus@gcc.gnu.org", "date": "2007-06-09T10:16:52Z"}, "message": "cppfiles.c (open_file): Account for the fact that on windows, opening a directory gives EACCES.\n\n        * cppfiles.c (open_file): Account for the\n        fact that on windows, opening a directory gives\n        EACCES.\n\nFrom-SVN: r125590", "tree": {"sha": "c8c465740f40eb2c178e1a3ebfe854771da47698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c465740f40eb2c178e1a3ebfe854771da47698"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84152c25a53201930fd73cb13a905d8335367971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84152c25a53201930fd73cb13a905d8335367971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84152c25a53201930fd73cb13a905d8335367971", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84152c25a53201930fd73cb13a905d8335367971/comments", "author": {"login": "vprus", "id": 225915, "node_id": "MDQ6VXNlcjIyNTkxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/225915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vprus", "html_url": "https://github.com/vprus", "followers_url": "https://api.github.com/users/vprus/followers", "following_url": "https://api.github.com/users/vprus/following{/other_user}", "gists_url": "https://api.github.com/users/vprus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vprus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vprus/subscriptions", "organizations_url": "https://api.github.com/users/vprus/orgs", "repos_url": "https://api.github.com/users/vprus/repos", "events_url": "https://api.github.com/users/vprus/events{/privacy}", "received_events_url": "https://api.github.com/users/vprus/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad365750b15b8fad2ae6785d7afa9034f3a05dd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad365750b15b8fad2ae6785d7afa9034f3a05dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad365750b15b8fad2ae6785d7afa9034f3a05dd6"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "205c1dd9db176192938bd4f725e98dcdc174e4ad", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84152c25a53201930fd73cb13a905d8335367971/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84152c25a53201930fd73cb13a905d8335367971/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=84152c25a53201930fd73cb13a905d8335367971", "patch": "@@ -1,3 +1,9 @@\n+2007-06-09  Vladimir Prus  <vladimir@codesourcery.com>\n+\n+\t* cppfiles.c (open_file): Account for the\n+        fact that on windows, opening a directory gives\n+        EACCES.\n+\n 2007-06-05  Joerg Wunsch  <j.gnu@uriah.heep.sax.de>\n \n \tPR preprocessor/23479"}, {"sha": "b20c38e8d875347477f224b13f7b4f432018ee5f", "filename": "libcpp/files.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84152c25a53201930fd73cb13a905d8335367971/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84152c25a53201930fd73cb13a905d8335367971/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=84152c25a53201930fd73cb13a905d8335367971", "patch": "@@ -228,6 +228,19 @@ open_file (_cpp_file *file)\n       close (file->fd);\n       file->fd = -1;\n     }\n+#if defined(_WIN32) && !defined(__CYGWIN__)\n+  else if (errno == EACCES)\n+    {\n+      /* On most UNIX systems, open succeeds on a directory.  Above,\n+         we check if we have opened a directory and if so, set errno\n+         to ENOENT.  However, on Windows, opening a directory\n+         fails with EACCESS.  We want to return ENOENT in that\n+         case too.  */\n+      if (stat (file->path, &file->st) == 0\n+          && S_ISDIR (file->st.st_mode))\n+        errno = ENOENT;\n+    }\n+#endif    \n   else if (errno == ENOTDIR)\n     errno = ENOENT;\n "}]}