{"sha": "ce529ffca708a635f434a99bf082dec2a1ba0446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1MjlmZmNhNzA4YTYzNWY0MzRhOTliZjA4MmRlYzJhMWJhMDQ0Ng==", "commit": {"author": {"name": "Matthew Beliveau", "email": "mbelivea@redhat.com", "date": "2019-08-01T18:04:23Z"}, "committer": {"name": "Matthew Beliveau", "email": "mbelivea@gcc.gnu.org", "date": "2019-08-01T18:04:23Z"}, "message": "re PR c++/90590 (enumeration value not handled in switch warning for std::ios_base::seek_dir)\n\nPR c++/90590\n\n\t* c-warn.c (c_do_switch_warnings): Suppress warning for enumerators\n\twith reserved names that are in a system header.\n\n\t* c-c++-common/pr90590-1.c: New test.\n\t* c-c++-common/pr90590-1.h: New test.\n\t* c-c++-common/pr90590-2.c: New test.\n\t* c-c++-common/pr90590-2.h: New test.\n\nFrom-SVN: r273980", "tree": {"sha": "b19701c7330848dda616d6fafc0d5fdaff5f5fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b19701c7330848dda616d6fafc0d5fdaff5f5fd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce529ffca708a635f434a99bf082dec2a1ba0446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce529ffca708a635f434a99bf082dec2a1ba0446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce529ffca708a635f434a99bf082dec2a1ba0446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce529ffca708a635f434a99bf082dec2a1ba0446/comments", "author": null, "committer": null, "parents": [{"sha": "2c726f944444e62eae732dcc704479096796187b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c726f944444e62eae732dcc704479096796187b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c726f944444e62eae732dcc704479096796187b"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "dc06ef4694349e46c73d164a1364a34c4b81a24a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -1,3 +1,9 @@\n+2019-08-01  Matthew Beliveau  <mbelivea@redhat.com>\n+\n+\tPR c++/90590\n+\t* c-warn.c (c_do_switch_warnings): Suppress warning for enumerators\n+\twith reserved names that are in a system header.\n+\n 2019-08-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/mmx.md (vec_extractv2si_0): Add (r,x) alternative."}, {"sha": "d671b77a2b06295cd3a7bed7044c9e71a129bd98", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gcc-rich-location.h\"\n #include \"gimplify.h\"\n #include \"c-family/c-indentation.h\"\n+#include \"c-family/c-spellcheck.h\"\n #include \"calls.h\"\n #include \"stor-layout.h\"\n \n@@ -1628,6 +1629,15 @@ c_do_switch_warnings (splay_tree cases, location_t switch_location,\n       if (cond && tree_int_cst_compare (cond, value))\n \tcontinue;\n \n+      /* If the enumerator is defined in a system header and uses a reserved\n+\t name, then we continue to avoid throwing a warning.  */\n+      location_t loc = DECL_SOURCE_LOCATION\n+\t    (TYPE_STUB_DECL (TYPE_MAIN_VARIANT (type)));\n+      if (in_system_header_at (loc)\n+\t  && name_reserved_for_implementation_p\n+\t      (IDENTIFIER_POINTER (TREE_PURPOSE (chain))))\n+\tcontinue;\n+\n       /* If there is a default_node, the only relevant option is\n \t Wswitch-enum.  Otherwise, if both are enabled then we prefer\n \t to warn using -Wswitch because -Wswitch is enabled by -Wall"}, {"sha": "6b363ac3e0be62d5d710dbe1f31db5e222129ba2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -1,3 +1,11 @@\n+2019-08-01  Matthew Beliveau  <mbelivea@redhat.com>\n+\n+\tPR c++/90590\n+\t* c-c++-common/pr90590-1.c: New test.\n+\t* c-c++-common/pr90590-1.h: New test.\n+\t* c-c++-common/pr90590-2.c: New test.\n+\t* c-c++-common/pr90590-2.h: New test.\n+\n 2019-08-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90805 - detect narrowing in case values."}, {"sha": "4e11debb7fa1c841c611701afdd146173b8e4459", "filename": "gcc/testsuite/c-c++-common/pr90590-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.c?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/90590\n+// { dg-options -Wswitch }\n+#include \"pr90590-1.h\"\n+\n+void\n+g ()\n+{\n+  enum E e = _A;\n+  switch (e) // { dg-bogus \"enumeration value '_C' not handled in switch\" }\n+    {\n+    case _A:\n+    case _B:\n+      break;\n+    }\n+}"}, {"sha": "22f1a7d5d52e1fd7afba7af3f83a2c01746cc1cf", "filename": "gcc/testsuite/c-c++-common/pr90590-1.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-1.h?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -0,0 +1,2 @@\n+#pragma GCC system_header\n+enum E { _A, _B, _C };"}, {"sha": "23da97f9d7479304467c49d5cced3c1e2c6619dc", "filename": "gcc/testsuite/c-c++-common/pr90590-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.c?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/90590\n+// { dg-options -Wswitch }\n+\n+#include \"pr90590-2.h\"\n+\n+void\n+fn ()\n+{\n+  switch (c.b) // { dg-bogus \"enumeration value\" }\n+    ;\n+}"}, {"sha": "e4f8635576f38ca1956823c8e506b253fa155599", "filename": "gcc/testsuite/c-c++-common/pr90590-2.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce529ffca708a635f434a99bf082dec2a1ba0446/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr90590-2.h?ref=ce529ffca708a635f434a99bf082dec2a1ba0446", "patch": "@@ -0,0 +1,4 @@\n+#pragma GCC system_header\n+struct {\n+  enum { _A } b;\n+} c;"}]}