{"sha": "0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwZjg3ZDQ0YmZhNGM1YTJlNjU0N2Y3ODBlODY5YTg3NTZkY2E3MA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2013-04-18T08:28:10Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2013-04-18T08:28:10Z"}, "message": "emit-rtl.c (reset_insn_used_flags): New function.\n\n\n\t* emit-rtl.c (reset_insn_used_flags): New function.\n\t(reset_all_used_flags): Use it.\n\t(verify_insn_sharing): New function.\n\t(verify_rtl_sharing): Fix verification for SEQUENCEs.\n\nFrom-SVN: r198053", "tree": {"sha": "80795cefa0569777458f921d8a4c755c7a743a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80795cefa0569777458f921d8a4c755c7a743a8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0f87d44bfa4c5a2e6547f780e869a8756dca70/comments", "author": null, "committer": null, "parents": [{"sha": "4c445590e158cf39a9ca00fa1586b25c0851bd72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c445590e158cf39a9ca00fa1586b25c0851bd72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c445590e158cf39a9ca00fa1586b25c0851bd72"}], "stats": {"total": 67, "additions": 45, "deletions": 22}, "files": [{"sha": "21e5dbce7d445855070243170ac1a03a1d07b07a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0f87d44bfa4c5a2e6547f780e869a8756dca70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0f87d44bfa4c5a2e6547f780e869a8756dca70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "patch": "@@ -1,3 +1,10 @@\n+2013-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* emit-rtl.c (reset_insn_used_flags): New function.\n+\t(reset_all_used_flags): Use it.\n+\t(verify_insn_sharing): New function.\n+\t(verify_rtl_sharing): Fix verification for SEQUENCEs.\n+\n 2013-04-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/56984\n@@ -108,7 +115,7 @@\n \t(pass_rtl_unroll_and_peel_loops): Same.\n \t(pass_rtl_doloop): Same.\n \n-2013-04-16  Greta Yorsh  <Greta.Yorsh at arm.com>\n+2013-04-16  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.c (emit_multi_reg_push): New declaration\n \tfor an existing function."}, {"sha": "538b1ec8aac179db48d502cf87a1bd3ba45aebf4", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 37, "deletions": 21, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0f87d44bfa4c5a2e6547f780e869a8756dca70/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0f87d44bfa4c5a2e6547f780e869a8756dca70/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=0e0f87d44bfa4c5a2e6547f780e869a8756dca70", "patch": "@@ -2596,6 +2596,18 @@ verify_rtx_sharing (rtx orig, rtx insn)\n   return;\n }\n \n+/* Reset used-flags for INSN.  */\n+\n+static void\n+reset_insn_used_flags (rtx insn)\n+{\n+  gcc_assert (INSN_P (insn));\n+  reset_used_flags (PATTERN (insn));\n+  reset_used_flags (REG_NOTES (insn));\n+  if (CALL_P (insn))\n+    reset_used_flags (CALL_INSN_FUNCTION_USAGE (insn));\n+}\n+\n /* Go through all the RTL insn bodies and clear all the USED bits.  */\n \n static void\n@@ -2606,28 +2618,30 @@ reset_all_used_flags (void)\n   for (p = get_insns (); p; p = NEXT_INSN (p))\n     if (INSN_P (p))\n       {\n-\treset_used_flags (PATTERN (p));\n-\treset_used_flags (REG_NOTES (p));\n-\tif (CALL_P (p))\n-\t  reset_used_flags (CALL_INSN_FUNCTION_USAGE (p));\n-\tif (GET_CODE (PATTERN (p)) == SEQUENCE)\n+\trtx pat = PATTERN (p);\n+\tif (GET_CODE (pat) != SEQUENCE)\n+\t  reset_insn_used_flags (p);\n+\telse\n \t  {\n-\t    int i;\n-\t    rtx q, sequence = PATTERN (p);\n-\n-\t    for (i = 0; i < XVECLEN (sequence, 0); i++)\n-\t      {\n-\t\tq = XVECEXP (sequence, 0, i);\n-\t\tgcc_assert (INSN_P (q));\n-\t\treset_used_flags (PATTERN (q));\n-\t\treset_used_flags (REG_NOTES (q));\n-\t\tif (CALL_P (q))\n-\t\t  reset_used_flags (CALL_INSN_FUNCTION_USAGE (q));\n-\t      }\n+\t    gcc_assert (REG_NOTES (p) == NULL);\n+\t    for (int i = 0; i < XVECLEN (pat, 0); i++)\n+\t      reset_insn_used_flags (XVECEXP (pat, 0, i));\n \t  }\n       }\n }\n \n+/* Verify sharing in INSN.  */\n+\n+static void\n+verify_insn_sharing (rtx insn)\n+{\n+  gcc_assert (INSN_P (insn));\n+  reset_used_flags (PATTERN (insn));\n+  reset_used_flags (REG_NOTES (insn));\n+  if (CALL_P (insn))\n+    reset_used_flags (CALL_INSN_FUNCTION_USAGE (insn));\n+}\n+\n /* Go through all the RTL insn bodies and check that there is no unexpected\n    sharing in between the subexpressions.  */\n \n@@ -2643,10 +2657,12 @@ verify_rtl_sharing (void)\n   for (p = get_insns (); p; p = NEXT_INSN (p))\n     if (INSN_P (p))\n       {\n-\tverify_rtx_sharing (PATTERN (p), p);\n-\tverify_rtx_sharing (REG_NOTES (p), p);\n-\tif (CALL_P (p))\n-\t  verify_rtx_sharing (CALL_INSN_FUNCTION_USAGE (p), p);\n+\trtx pat = PATTERN (p);\n+\tif (GET_CODE (pat) != SEQUENCE)\n+\t  verify_insn_sharing (p);\n+\telse\n+\t  for (int i = 0; i < XVECLEN (pat, 0); i++)\n+\t    verify_insn_sharing (XVECEXP (pat, 0, i));\n       }\n \n   reset_all_used_flags ();"}]}