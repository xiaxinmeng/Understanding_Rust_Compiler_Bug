{"sha": "6c0dd02964a624c65859808f9a40721c3796319a", "node_id": "C_kwDOANBUbNoAKDZjMGRkMDI5NjRhNjI0YzY1ODU5ODA4ZjlhNDA3MjFjMzc5NjMxOWE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-02T14:59:26Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-02T19:50:45Z"}, "message": "[PR102563] Do not clobber range in operator_lshift::op1_range.\n\nWe're clobbering the final range before we're done calculating it.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/102563\n\t* range-op.cc (operator_lshift::op1_range): Do not clobber\n\trange.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr102563.c: New test.", "tree": {"sha": "57fc11db3490e81c99275ad5aecadfd7634be565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57fc11db3490e81c99275ad5aecadfd7634be565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0dd02964a624c65859808f9a40721c3796319a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0dd02964a624c65859808f9a40721c3796319a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0dd02964a624c65859808f9a40721c3796319a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0dd02964a624c65859808f9a40721c3796319a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7705b0ada9e9852b580ca25a45570c82152f287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7705b0ada9e9852b580ca25a45570c82152f287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7705b0ada9e9852b580ca25a45570c82152f287"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "bbf2924f8157645e34ab80098d5ba8437eb1256e", "filename": "gcc/range-op.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0dd02964a624c65859808f9a40721c3796319a/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0dd02964a624c65859808f9a40721c3796319a/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=6c0dd02964a624c65859808f9a40721c3796319a", "patch": "@@ -2112,8 +2112,6 @@ operator_lshift::op1_range (irange &r,\n       else\n \top_rshift.fold_range (tmp_range, utype, lhs, op2);\n \n-      r.intersect (tmp_range);\n-\n       // Start with ranges which can produce the LHS by right shifting the\n       // result by the shift amount.\n       // ie   [0x08, 0xF0] = op1 << 2 will start with\n@@ -2128,13 +2126,15 @@ operator_lshift::op1_range (irange &r,\n       unsigned low_bits = TYPE_PRECISION (utype)\n \t\t\t  - TREE_INT_CST_LOW (shift_amount);\n       wide_int up_mask = wi::mask (low_bits, true, TYPE_PRECISION (utype));\n-      wide_int new_ub = wi::bit_or (up_mask, r.upper_bound ());\n-      wide_int new_lb = wi::set_bit (r.lower_bound (), low_bits);\n+      wide_int new_ub = wi::bit_or (up_mask, tmp_range.upper_bound ());\n+      wide_int new_lb = wi::set_bit (tmp_range.lower_bound (), low_bits);\n       int_range<2> fill_range (utype, new_lb, new_ub);\n-      r.union_ (fill_range);\n+      tmp_range.union_ (fill_range);\n \n       if (utype != type)\n-\trange_cast (r, type);\n+\trange_cast (tmp_range, type);\n+\n+      r.intersect (tmp_range);\n       return true;\n     }\n "}, {"sha": "8871dffe24a49f5e63373d90abf1f8a8e11c7af3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr102563.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0dd02964a624c65859808f9a40721c3796319a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102563.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0dd02964a624c65859808f9a40721c3796319a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102563.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102563.c?ref=6c0dd02964a624c65859808f9a40721c3796319a", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -w\" }\n+\n+int _bdf_parse_glyphs_bp;\n+long _bdf_parse_glyphs_nibbles;\n+\n+void _bdf_parse_glyphs_p() \n+{\n+  long p_2;\n+\n+  _bdf_parse_glyphs_nibbles = p_2 << 1;\n+\n+  for (; 0 < _bdf_parse_glyphs_nibbles;)\n+    if (1 < _bdf_parse_glyphs_nibbles)\n+      _bdf_parse_glyphs_bp = _bdf_parse_glyphs_p;\n+}"}]}