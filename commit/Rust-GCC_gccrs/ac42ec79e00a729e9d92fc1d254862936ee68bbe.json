{"sha": "ac42ec79e00a729e9d92fc1d254862936ee68bbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0MmVjNzllMDBhNzI5ZTlkOTJmYzFkMjU0ODYyOTM2ZWU2OGJiZQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-01-25T03:00:56Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-01-25T03:00:56Z"}, "message": "predicates.md (sh_register_operand): Accept CONST_DOUBLE.\n\n\t* config/sh/predicates.md (sh_register_operand): Accept CONST_DOUBLE.\n\n\t* gcc.dg/tree-ssa/gen-vect-33.c: New.\n\nFrom-SVN: r110203", "tree": {"sha": "b1af51ed47e81059b1a838ffcc29064b9e94467c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1af51ed47e81059b1a838ffcc29064b9e94467c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac42ec79e00a729e9d92fc1d254862936ee68bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac42ec79e00a729e9d92fc1d254862936ee68bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac42ec79e00a729e9d92fc1d254862936ee68bbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac42ec79e00a729e9d92fc1d254862936ee68bbe/comments", "author": null, "committer": null, "parents": [{"sha": "6e69121fb052303ccdba8b038193d92835937da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e69121fb052303ccdba8b038193d92835937da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e69121fb052303ccdba8b038193d92835937da4"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "baa42b2a104291c1f99569154d82882258448ccf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac42ec79e00a729e9d92fc1d254862936ee68bbe", "patch": "@@ -1,3 +1,7 @@\n+2006-01-25  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/predicates.md (sh_register_operand): Accept CONST_DOUBLE.\n+\n 2006-01-24  David Daney  <ddaney@avtrex.com>\n \n \tPR java/25816"}, {"sha": "26e9548c22044e126c196b89451233f0b72fe007", "filename": "gcc/config/sh/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Fconfig%2Fsh%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Fconfig%2Fsh%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fpredicates.md?ref=ac42ec79e00a729e9d92fc1d254862936ee68bbe", "patch": "@@ -614,7 +614,7 @@\n ;; the constant zero like a general register.\n \n (define_predicate \"sh_register_operand\"\n-  (match_code \"reg,subreg,const_int\")\n+  (match_code \"reg,subreg,const_int,const_double\")\n {\n   if (op == CONST0_RTX (mode) && TARGET_SHMEDIA)\n     return 1;"}, {"sha": "159df246fef784176d767d3615a01439f774ed4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac42ec79e00a729e9d92fc1d254862936ee68bbe", "patch": "@@ -1,3 +1,7 @@\n+2006-01-25  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* gcc.dg/tree-ssa/gen-vect-33.c: New.\n+\n 2006-01-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/25835"}, {"sha": "8cd12da3d8c83f2896b9d165a94c760d7122eab9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-33.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac42ec79e00a729e9d92fc1d254862936ee68bbe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-33.c?ref=ac42ec79e00a729e9d92fc1d254862936ee68bbe", "patch": "@@ -0,0 +1,14 @@\n+/* Compiler generates 64-bit stores of zero for this on some targets.\n+   Check there is no problem for such case.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+\n+void\n+foo (float *dest, int xcount, int  ycount)\n+{\n+  int x, y;\n+\n+  for (y = 0; y < ycount; y++)\n+    for (x = 0; x < xcount; x++)\n+      dest[x + y] = (float) 0;\n+}"}]}