{"sha": "a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdlZDZjOTBhNDRhZDQyMGM0YzcxZmRkMDg4MzE2YTI0YzU0ZDZlMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-06T17:41:03Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-06T17:41:03Z"}, "message": "Fix build_pddr.\n\n2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (pddr_original_scattering): Renamed build_pddr.\n\t(pddr_transformed_scattering): Removed.\n\t(graphite_legal_transform_dr): Use build_pddr.\n\t(dot_original_deps_stmt_1): Same.\n\t(dot_transformed_deps_stmt_1): Same.\n\t(dot_original_deps): Same.\n\t(dot_transformed_deps): Same.\n\nFrom-SVN: r156544", "tree": {"sha": "1bb8f31179c871fe8e486743c89348635d9b66e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb8f31179c871fe8e486743c89348635d9b66e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65a757989102018f314bc3d1548f10c104bd305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65a757989102018f314bc3d1548f10c104bd305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65a757989102018f314bc3d1548f10c104bd305"}], "stats": {"total": 90, "additions": 42, "deletions": 48}, "files": [{"sha": "8a5157af01251185e28614e3cc3cf97116499638", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "patch": "@@ -1,3 +1,13 @@\n+2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (pddr_original_scattering): Renamed build_pddr.\n+\t(pddr_transformed_scattering): Removed.\n+\t(graphite_legal_transform_dr): Use build_pddr.\n+\t(dot_original_deps_stmt_1): Same.\n+\t(dot_transformed_deps_stmt_1): Same.\n+\t(dot_original_deps): Same.\n+\t(dot_transformed_deps): Same.\n+\n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (lexicographically_gt_p): Add comments."}, {"sha": "3da25573da9e1b34f715ae591ac97eb2d3447862", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 32, "deletions": 48, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ed6c90a44ad420c4c71fdd088316a24c54d6e3/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=a7ed6c90a44ad420c4c71fdd088316a24c54d6e3", "patch": "@@ -344,6 +344,8 @@ build_lexicographically_gt_constraint (ppl_Pointset_Powerset_C_Polyhedron_t *res\n    | S1 and S2 the subscripts\n    | G the global parameters.\n \n+   D1 and D2 are the iteration domains of PDR1 and PDR2.\n+\n    SCAT1 and SCAT2 are the scattering polyhedra for PDR1 and PDR2.\n    When ORIGINAL_SCATTERING_P is true, then the scattering polyhedra\n    SCAT1 and SCAT2 correspond to the original scattering of the\n@@ -430,6 +432,8 @@ dependence_polyhedron_1 (poly_bb_p pbb1, poly_bb_p pbb2,\n /* Build the dependence polyhedron for data references PDR1 and PDR2.\n    If possible use already cached information.\n \n+   D1 and D2 are the iteration domains of PDR1 and PDR2.\n+\n    SCAT1 and SCAT2 are the scattering polyhedra for PDR1 and PDR2.\n    When ORIGINAL_SCATTERING_P is true, then the scattering polyhedra\n    SCAT1 and SCAT2 correspond to the original scattering of the\n@@ -472,64 +476,38 @@ dependence_polyhedron (poly_bb_p pbb1, poly_bb_p pbb2,\n   return res;\n }\n \n-static bool\n-poly_drs_may_alias_p (poly_dr_p pdr1, poly_dr_p pdr2);\n-\n-/* Returns the PDDR corresponding to the original schedule, or NULL if\n-   the dependence relation is empty or unknown (cannot judge dependency\n-   under polyhedral model).  */\n+/* Returns the Polyhedral Data Dependence Relation (PDDR) between PDR1\n+   contained in PBB1 and PDR2 contained in PBB2.  When\n+   ORIGINAL_SCATTERING_P is true, return the PDDR corresponding to the\n+   original scattering, or NULL if the dependence relation is empty.\n+   When ORIGINAL_SCATTERING_P is false, return the PDDR corresponding\n+   to the transformed scattering.  */\n \n static poly_ddr_p\n-pddr_original_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n-\t\t\t  poly_dr_p pdr1, poly_dr_p pdr2)\n+build_pddr (poly_bb_p pbb1, poly_bb_p pbb2, poly_dr_p pdr1, poly_dr_p pdr2,\n+\t    bool original_scattering_p)\n {\n   poly_ddr_p pddr;\n   ppl_Pointset_Powerset_C_Polyhedron_t d1 = PBB_DOMAIN (pbb1);\n   ppl_Pointset_Powerset_C_Polyhedron_t d2 = PBB_DOMAIN (pbb2);\n-  ppl_Polyhedron_t so1 = PBB_ORIGINAL_SCATTERING (pbb1);\n-  ppl_Polyhedron_t so2 = PBB_ORIGINAL_SCATTERING (pbb2);\n+  ppl_Polyhedron_t scat1 = original_scattering_p ?\n+    PBB_ORIGINAL_SCATTERING (pbb1) : PBB_TRANSFORMED_SCATTERING (pbb1);\n+  ppl_Polyhedron_t scat2 = original_scattering_p ?\n+    PBB_ORIGINAL_SCATTERING (pbb2) : PBB_TRANSFORMED_SCATTERING (pbb2);\n \n   if ((pdr_read_p (pdr1) && pdr_read_p (pdr2))\n       || PDR_BASE_OBJECT_SET (pdr1) != PDR_BASE_OBJECT_SET (pdr2)\n       || PDR_NB_SUBSCRIPTS (pdr1) != PDR_NB_SUBSCRIPTS (pdr2))\n     return NULL;\n \n-  pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, so1, so2,\n-\t\t\t\t1, true);\n+  pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, scat1, scat2,\n+\t\t\t\t1, original_scattering_p);\n   if (pddr_is_empty (pddr))\n     return NULL;\n \n   return pddr;\n }\n \n-/* Returns the PDDR corresponding to the transformed schedule, or NULL if\n-   the dependence relation is empty or unknown (cannot judge dependency\n-   under polyhedral model).  */\n-\n-static poly_ddr_p\n-pddr_transformed_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n-\t\t\t     poly_dr_p pdr1, poly_dr_p pdr2)\n-{\n-  poly_ddr_p pddr;\n-  ppl_Pointset_Powerset_C_Polyhedron_t d1 = PBB_DOMAIN (pbb1);\n-  ppl_Pointset_Powerset_C_Polyhedron_t d2 = PBB_DOMAIN (pbb2);\n-  ppl_Polyhedron_t st1 = PBB_ORIGINAL_SCATTERING (pbb1);\n-  ppl_Polyhedron_t st2 = PBB_ORIGINAL_SCATTERING (pbb2);\n-\n-  if ((pdr_read_p (pdr1) && pdr_read_p (pdr2))\n-      || PDR_BASE_OBJECT_SET (pdr1) != PDR_BASE_OBJECT_SET (pdr2)\n-      || PDR_NB_SUBSCRIPTS (pdr1) != PDR_NB_SUBSCRIPTS (pdr2))\n-    return NULL;\n-\n-  pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n-\t\t\t\t1, false);\n-  if (pddr_is_empty (pddr))\n-    return NULL;\n-\n-  return pddr;\n-}\n-\n-\n /* Return true when the data dependence relation between the data\n    references PDR1 belonging to PBB1 and PDR2 is part of a\n    reduction.  */\n@@ -585,7 +563,7 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n   if (reduction_dr_p (pbb1, pbb2, pdr1, pdr2))\n     return true;\n \n-  pddr = pddr_original_scattering (pbb1, pbb2, pdr1, pdr2);\n+  pddr = build_pddr (pbb1, pbb2, pdr1, pdr2, true);\n   if (!pddr)\n     return true;\n \n@@ -833,7 +811,7 @@ dot_original_deps_stmt_1 (FILE *file, scop_p scop)\n       {\n \tfor (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \t  for (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n-\t    if (pddr_original_scattering (pbb1, pbb2, pdr1, pdr2))\n+\t    if (build_pddr (pbb1, pbb2, pdr1, pdr2, true))\n \t      {\n \t\tfprintf (file, \"OS%d -> OS%d\\n\",\n \t\t\t pbb_index (pbb1), pbb_index (pbb2));\n@@ -852,16 +830,18 @@ dot_transformed_deps_stmt_1 (FILE *file, scop_p scop)\n   int i, j, k, l;\n   poly_bb_p pbb1, pbb2;\n   poly_dr_p pdr1, pdr2;\n+  poly_ddr_p pddr;\n \n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       {\n \tfor (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \t  for (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n-\t    if (pddr_transformed_scattering (pbb1, pbb2, pdr1, pdr2))\n+\t    if ((pddr = build_pddr (pbb1, pbb2, pdr1, pdr2, false)))\n \t      {\n \t\tfprintf (file, \"TS%d -> TS%d\\n\",\n \t\t\t pbb_index (pbb1), pbb_index (pbb2));\n+\t\tfree_poly_ddr (pddr);\n \t\tgoto done;\n \t      }\n       done:;\n@@ -897,7 +877,7 @@ dot_original_deps (FILE *file, scop_p scop)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       for (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \tfor (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n-\t  if (pddr_original_scattering (pbb1, pbb2, pdr1, pdr2))\n+\t  if (build_pddr (pbb1, pbb2, pdr1, pdr2, true))\n \t    fprintf (file, \"OS%d_D%d -> OS%d_D%d\\n\",\n \t\t     pbb_index (pbb1), PDR_ID (pdr1),\n \t\t     pbb_index (pbb2), PDR_ID (pdr2));\n@@ -912,15 +892,19 @@ dot_transformed_deps (FILE *file, scop_p scop)\n   int i, j, k, l;\n   poly_bb_p pbb1, pbb2;\n   poly_dr_p pdr1, pdr2;\n+  poly_ddr_p pddr;\n \n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       for (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \tfor (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n-\t  if (pddr_transformed_scattering (pbb1, pbb2, pdr1, pdr2))\n-\t    fprintf (file, \"TS%d_D%d -> TS%d_D%d\\n\",\n-\t\t     pbb_index (pbb1), PDR_ID (pdr1),\n-\t\t     pbb_index (pbb2), PDR_ID (pdr2));\n+\t  if ((pddr = build_pddr (pbb1, pbb2, pdr1, pdr2, false)))\n+\t    {\n+\t      fprintf (file, \"TS%d_D%d -> TS%d_D%d\\n\",\n+\t\t       pbb_index (pbb1), PDR_ID (pdr1),\n+\t\t       pbb_index (pbb2), PDR_ID (pdr2));\n+\t      free_poly_ddr (pddr);\n+\t    }\n }\n \n /* Pretty print to FILE all the data dependences of SCoP in DOT"}]}