{"sha": "e783e4c2b3c68d9628318249a3e6f59b0e30c5de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4M2U0YzJiM2M2OGQ5NjI4MzE4MjQ5YTNlNmY1OWIwZTMwYzVkZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-15T23:06:17Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-15T23:06:17Z"}, "message": "(smulsi3_highpart): New pattern.\n\n(umulsi3_highpart): New pattern.\n\nFrom-SVN: r6395", "tree": {"sha": "96694f0b65fc90ee60cdfa2f6b2349ca93ebf1c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96694f0b65fc90ee60cdfa2f6b2349ca93ebf1c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e783e4c2b3c68d9628318249a3e6f59b0e30c5de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e783e4c2b3c68d9628318249a3e6f59b0e30c5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e783e4c2b3c68d9628318249a3e6f59b0e30c5de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e783e4c2b3c68d9628318249a3e6f59b0e30c5de/comments", "author": null, "committer": null, "parents": [{"sha": "33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a3539d4363baf4e94ebaac6fded4c6fddfd50f"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "c0ac59c594100bd5fc369b797e45ee2e90d9ae6e", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e783e4c2b3c68d9628318249a3e6f59b0e30c5de/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e783e4c2b3c68d9628318249a3e6f59b0e30c5de/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=e783e4c2b3c68d9628318249a3e6f59b0e30c5de", "patch": "@@ -1837,6 +1837,42 @@\n   \"smul %1,%2,%R0\\;rd %%y,%0\"\n   [(set_attr \"length\" \"2\")])\n \n+(define_expand \"smulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n+\t\t\t       (sign_extend:DI (match_operand:SI 2 \"arith_operand\" \"\")))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"\n+{\n+  if (CONSTANT_P (operands[2]))\n+    {\n+      emit_insn (gen_const_smulsi3_highpart (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t       (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"r\")))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"smul %1,%2,%%g0\\;rd %%y,%0\"\n+  [(set_attr \"length\" \"2\")])\n+\n+(define_insn \"const_smulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t       (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"smul %1,%2,%%g0\\;rd %%y,%0\"\n+  [(set_attr \"length\" \"2\")])\n+\n (define_expand \"umulsidi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n@@ -1869,6 +1905,42 @@\n   \"umul %1,%2,%R0\\;rd %%y,%0\"\n   [(set_attr \"length\" \"2\")])\n \n+(define_expand \"umulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n+\t\t\t       (zero_extend:DI (match_operand:SI 2 \"uns_arith_operand\" \"\")))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"\n+{\n+  if (CONSTANT_P (operands[2]))\n+    {\n+      emit_insn (gen_const_umulsi3_highpart (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t       (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"r\")))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"umul %1,%2,%%g0\\;rd %%y,%0\"\n+  [(set_attr \"length\" \"2\")])\n+\n+(define_insn \"const_umulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t       (match_operand:SI 2 \"uns_small_int\" \"\"))\n+\t\t      (const_int 32))))]\n+  \"TARGET_V8 || TARGET_SPARCLITE\"\n+  \"umul %1,%2,%%g0\\;rd %%y,%0\"\n+  [(set_attr \"length\" \"2\")])\n+\n ;; The architecture specifies that there must be 3 instructions between\n ;; a y register write and a use of it for correct results.\n "}]}