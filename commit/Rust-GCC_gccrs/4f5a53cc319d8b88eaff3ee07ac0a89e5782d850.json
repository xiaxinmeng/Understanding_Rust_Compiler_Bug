{"sha": "4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY1YTUzY2MzMTlkOGI4OGVhZmYzZWUwN2FjMGE4OWU1NzgyZDg1MA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-04-08T10:44:59Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-04-08T10:44:59Z"}, "message": "tree-chkp.h (chkp_insert_retbnd_call): New.\n\ngcc/\n\n\t* tree-chkp.h (chkp_insert_retbnd_call): New.\n\t* tree-chkp.c (chkp_insert_retbnd_call): New.\n\t* ipa-split.c (insert_bndret_call_after): Remove.\n\t(split_function): Use chkp_insert_retbnd_call.\n\t* cgraphunit.c (cgraph_node::expand_thunk): Build returned\n\tbounds for instrumented functions.\n\ngcc/testsuite/\n\n\t* gcc/testsuite/gcc.target/i386/thunk-retbnd.c: New.\n\nFrom-SVN: r221917", "tree": {"sha": "3b12f9e0a29bd3d514d93f2c8bdb05d2c21c7962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b12f9e0a29bd3d514d93f2c8bdb05d2c21c7962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "113c69ff2d41091359ec37789974cc47f1169e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113c69ff2d41091359ec37789974cc47f1169e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/113c69ff2d41091359ec37789974cc47f1169e05"}], "stats": {"total": 94, "additions": 78, "deletions": 16}, "files": [{"sha": "4ab9dca77f53b8eef00e2af0b7b559abe5446d46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -1,3 +1,12 @@\n+2015-04-08  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* tree-chkp.h (chkp_insert_retbnd_call): New.\n+\t* tree-chkp.c (chkp_insert_retbnd_call): New.\n+\t* ipa-split.c (insert_bndret_call_after): Remove.\n+\t(split_function): Use chkp_insert_retbnd_call.\n+\t* cgraphunit.c (cgraph_node::expand_thunk): Build returned\n+\tbounds for instrumented functions.\n+\n 2015-04-07  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/65540"}, {"sha": "2315ba84bb7c779d8f1a64a15956adabc20d84f3", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -1585,6 +1585,7 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n       int i;\n       tree resdecl;\n       tree restmp = NULL;\n+      tree resbnd = NULL;\n \n       gcall *call;\n       greturn *ret;\n@@ -1701,6 +1702,17 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n       gsi_insert_after (&bsi, call, GSI_NEW_STMT);\n       if (!alias_is_noreturn)\n \t{\n+\t  if (instrumentation_clone\n+\t      && !DECL_BY_REFERENCE (resdecl)\n+\t      && restmp\n+\t      && BOUNDED_P (restmp))\n+\t    {\n+\t      resbnd = chkp_insert_retbnd_call (NULL, restmp, &bsi);\n+\t      create_edge (get_create (gimple_call_fndecl (gsi_stmt (bsi))),\n+\t\t\t   as_a <gcall *> (gsi_stmt (bsi)),\n+\t\t\t   callees->count, callees->frequency);\n+\t    }\n+\n \t  if (restmp && !this_adjusting\n \t      && (fixed_offset || virtual_offset))\n \t    {\n@@ -1770,6 +1782,7 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n \t    ret = gimple_build_return (restmp);\n \t  else\n \t    ret = gimple_build_return (resdecl);\n+\t  gimple_return_set_retbnd (ret, resbnd);\n \n \t  gsi_insert_after (&bsi, ret, GSI_NEW_STMT);\n \t}"}, {"sha": "5d6763d102db715a876df7fb9b016eab08f4f660", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -1230,20 +1230,6 @@ find_split_points (basic_block return_bb, int overall_time, int overall_size)\n   BITMAP_FREE (current.ssa_names_to_pass);\n }\n \n-/* Build and insert initialization of returned bounds RETBND\n-   for returned value RETVAL.  Statements are inserted after\n-   a statement pointed by GSI and GSI is modified to point to\n-   the last inserted statement.  */\n-\n-static void\n-insert_bndret_call_after (tree retbnd, tree retval, gimple_stmt_iterator *gsi)\n-{\n-  tree fndecl = targetm.builtin_chkp_function (BUILT_IN_CHKP_BNDRET);\n-  gimple bndret = gimple_build_call (fndecl, 1, retval);\n-  gimple_call_set_lhs (bndret, retbnd);\n-  gsi_insert_after (gsi, bndret, GSI_CONTINUE_LINKING);\n-}\n-\n /* Split function at SPLIT_POINT.  */\n \n static void\n@@ -1652,7 +1638,7 @@ split_function (basic_block return_bb, struct split_point *split_point,\n \t\t    }\n \t\t  /* Build bndret call to obtain returned bounds.  */\n \t\t  if (retbnd)\n-\t\t    insert_bndret_call_after (retbnd, retval, &gsi);\n+\t\t    chkp_insert_retbnd_call (retbnd, retval, &gsi);\n \t\t  gimple_call_set_lhs (call, retval);\n \t\t  update_stmt (call);\n \t\t}\n@@ -1702,7 +1688,7 @@ split_function (basic_block return_bb, struct split_point *split_point,\n           gsi_insert_after (&gsi, call, GSI_NEW_STMT);\n \t  /* Build bndret call to obtain returned bounds.  */\n \t  if (retbnd)\n-\t    insert_bndret_call_after (retbnd, retval, &gsi);\n+\t    chkp_insert_retbnd_call (retbnd, retval, &gsi);\n \t  if (tsan_func_exit_call)\n \t    gsi_insert_after (&gsi, tsan_func_exit_call, GSI_NEW_STMT);\n \t  ret = gimple_build_return (retval);"}, {"sha": "c926f3d32ea57f7b7f39de0cb6307325db0329d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -1,3 +1,7 @@\n+2015-04-08  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* gcc/testsuite/gcc.target/i386/thunk-retbnd.c: New.\n+\n 2015-04-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt48.adb: New test."}, {"sha": "d9bd031471a262ea909b9f10a9f4dd1a1e5230ba", "filename": "gcc/testsuite/gcc.target/i386/thunk-retbnd.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fthunk-retbnd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fthunk-retbnd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fthunk-retbnd.c?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target mpx } */\n+/* { dg-options \"-O2 -fcheck-pointer-bounds -mmpx -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"return &glob,\" 2 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+\n+int glob;\n+\n+int *\n+test1 (void)\n+{\n+  return &glob;\n+}\n+\n+int *\n+test2 (void)\n+{\n+  return test1 ();\n+}"}, {"sha": "541af29a48a0ac30bfe66604a63625ab81764163", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -500,6 +500,35 @@ chkp_expand_bounds_reset_for_mem (tree mem, tree ptr)\n   expand_normal (bndstx);\n }\n \n+/* Build retbnd call for returned value RETVAL.\n+\n+   If BNDVAL is not NULL then result is stored\n+   in it.  Otherwise a temporary is created to\n+   hold returned value.\n+\n+   GSI points to a position for a retbnd call\n+   and is set to created stmt.\n+\n+   Cgraph edge is created for a new call if\n+   UPDATE_EDGE is 1.\n+\n+   Obtained bounds are returned.  */\n+tree\n+chkp_insert_retbnd_call (tree bndval, tree retval,\n+\t\t\t gimple_stmt_iterator *gsi)\n+{\n+  gimple call;\n+\n+  if (!bndval)\n+    bndval = create_tmp_reg (pointer_bounds_type_node, \"retbnd\");\n+\n+  call = gimple_build_call (chkp_ret_bnd_fndecl, 1, retval);\n+  gimple_call_set_lhs (call, bndval);\n+  gsi_insert_after (gsi, call, GSI_CONTINUE_LINKING);\n+\n+  return bndval;\n+}\n+\n /* Mark statement S to not be instrumented.  */\n static void\n chkp_mark_stmt (gimple s)"}, {"sha": "1bafe994da2213ac3297b3badea9abb904d1e6e5", "filename": "gcc/tree-chkp.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftree-chkp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5a53cc319d8b88eaff3ee07ac0a89e5782d850/gcc%2Ftree-chkp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.h?ref=4f5a53cc319d8b88eaff3ee07ac0a89e5782d850", "patch": "@@ -54,5 +54,7 @@ extern void chkp_copy_bounds_for_assign (gimple assign,\n extern bool chkp_gimple_call_builtin_p (gimple call,\n \t\t\t\t\tenum built_in_function code);\n extern void chkp_expand_bounds_reset_for_mem (tree mem, tree ptr);\n+extern tree chkp_insert_retbnd_call (tree bndval, tree retval,\n+\t\t\t\t     gimple_stmt_iterator *gsi);\n \n #endif /* GCC_TREE_CHKP_H */"}]}