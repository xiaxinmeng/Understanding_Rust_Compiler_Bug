{"sha": "8da2e0598d1df01f58740c81a39cc98cf43786d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRhMmUwNTk4ZDFkZjAxZjU4NzQwYzgxYTM5Y2M5OGNmNDM3ODZkMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-05-18T07:58:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-05-18T07:58:55Z"}, "message": "recog.h (Recog_data): Rename to...\n\ngcc/\n\t* recog.h (Recog_data): Rename to...\n\t(recog_data_d): ...this.\n\t(recog_data): Update accordingly.\n\t* recog.c (recog_data): Likewise.\n\t* reload.c (save_recog_data): Likewise.\n\t* config/picochip/picochip.c (picochip_saved_recog_data): Likewise.\n\t(picochip_save_recog_data, picochip_restore_recog_data): Likewise.\n\nFrom-SVN: r199050", "tree": {"sha": "97813e51b110d378159a5a03f74c7b5e4e693198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97813e51b110d378159a5a03f74c7b5e4e693198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8da2e0598d1df01f58740c81a39cc98cf43786d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da2e0598d1df01f58740c81a39cc98cf43786d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da2e0598d1df01f58740c81a39cc98cf43786d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da2e0598d1df01f58740c81a39cc98cf43786d3/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2df013f3cd4c36b7e309758d9210e6cab0d5d83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df013f3cd4c36b7e309758d9210e6cab0d5d83f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df013f3cd4c36b7e309758d9210e6cab0d5d83f"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "0649452aacf1d17aa58dbfed5e084f663c12002c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8da2e0598d1df01f58740c81a39cc98cf43786d3", "patch": "@@ -1,3 +1,13 @@\n+2013-05-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* recog.h (Recog_data): Rename to...\n+\t(recog_data_d): ...this.\n+\t(recog_data): Update accordingly.\n+\t* recog.c (recog_data): Likewise.\n+\t* reload.c (save_recog_data): Likewise.\n+\t* config/picochip/picochip.c (picochip_saved_recog_data): Likewise.\n+\t(picochip_save_recog_data, picochip_restore_recog_data): Likewise.\n+\n 2013-05-17  Julian Brown  <julian@codesourcery.com>\n \n \t* gcse.c (compute_ld_motion_mems): If a non-simple MEM is"}, {"sha": "e5d30c6feca6c0a67ff895d40dda543bced12187", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=8da2e0598d1df01f58740c81a39cc98cf43786d3", "patch": "@@ -187,7 +187,7 @@ struct vliw_state picochip_current_vliw_state;\n \n /* Save/restore recog_data. */\n static int picochip_saved_which_alternative;\n-static struct Recog_data picochip_saved_recog_data;\n+static struct recog_data_d picochip_saved_recog_data;\n \n /* Determine which ALU to use for the instruction in\n    picochip_current_prescan_insn. */\n@@ -3150,7 +3150,7 @@ picochip_save_recog_data (void)\n {\n   picochip_saved_which_alternative = which_alternative;\n   memcpy (&picochip_saved_recog_data, &recog_data,\n-\t  sizeof (struct Recog_data));\n+\t  sizeof (struct recog_data_d));\n }\n \n /* Restore some of the contents of global variable recog_data. */\n@@ -3159,7 +3159,7 @@ picochip_restore_recog_data (void)\n {\n   which_alternative = picochip_saved_which_alternative;\n   memcpy (&recog_data, &picochip_saved_recog_data,\n-\t  sizeof (struct Recog_data));\n+\t  sizeof (struct recog_data_d));\n }\n \n /* Ensure that no var tracking notes are emitted in the middle of a"}, {"sha": "5356b8dd776f190e7cdfe6729e791bdee0e6c629", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=8da2e0598d1df01f58740c81a39cc98cf43786d3", "patch": "@@ -70,7 +70,7 @@ static rtx split_insn (rtx);\n \n int volatile_ok;\n \n-struct Recog_data recog_data;\n+struct recog_data_d recog_data;\n \n /* Contains a vector of operand_alternative structures for every operand.\n    Set up by preprocess_constraints.  */"}, {"sha": "71e801edb2ded297bfe27962c59b6918e8049378", "filename": "gcc/recog.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=8da2e0598d1df01f58740c81a39cc98cf43786d3", "patch": "@@ -179,7 +179,7 @@ extern int which_alternative;\n \n /* The following vectors hold the results from insn_extract.  */\n \n-struct Recog_data\n+struct recog_data_d\n {\n   /* It is very tempting to make the 5 operand related arrays into a\n      structure and index on that.  However, to be source compatible\n@@ -245,7 +245,7 @@ struct Recog_data\n   rtx insn;\n };\n \n-extern struct Recog_data recog_data;\n+extern struct recog_data_d recog_data;\n \n /* Contains a vector of operand_alternative structures for every operand.\n    Set up by preprocess_constraints.  */"}, {"sha": "8733ff33467cb1188231debb900e64d5d0de8eca", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da2e0598d1df01f58740c81a39cc98cf43786d3/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=8da2e0598d1df01f58740c81a39cc98cf43786d3", "patch": "@@ -895,7 +895,7 @@ can_reload_into (rtx in, int regno, enum machine_mode mode)\n {\n   rtx dst, test_insn;\n   int r = 0;\n-  struct Recog_data save_recog_data;\n+  struct recog_data_d save_recog_data;\n \n   /* For matching constraints, we often get notional input reloads where\n      we want to use the original register as the reload register.  I.e."}]}