{"sha": "3c350d48a595d93c3e6336b79091d7f506a5fb03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzNTBkNDhhNTk1ZDkzYzNlNjMzNmI3OTA5MWQ3ZjUwNmE1ZmIwMw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2014-11-26T13:53:38Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2014-11-26T13:53:38Z"}, "message": "re PR lto/64075 (ICE: in bp_pack_value, at data-streamer.h:106)\n\ngcc/\n\n\tPR lto/64075\n\t* tree-streamer-in.c (unpack_ts_function_decl_value_fields): Use\n\tproper size for function_code bitfield.\n\t(pack_ts_function_decl_value_fields): Likewise.\n\ngcc/testsuite/\n\n\tPR lto/64075\n\t* gcc.dg/pr64075.c: New.\n\nFrom-SVN: r218083", "tree": {"sha": "578191479f36668a1e05dffbefd71e9a3b6f881b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/578191479f36668a1e05dffbefd71e9a3b6f881b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c350d48a595d93c3e6336b79091d7f506a5fb03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c350d48a595d93c3e6336b79091d7f506a5fb03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c350d48a595d93c3e6336b79091d7f506a5fb03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c350d48a595d93c3e6336b79091d7f506a5fb03/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e4683dc2f63cca81ce2a3ffcbbf338149a77cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4683dc2f63cca81ce2a3ffcbbf338149a77cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4683dc2f63cca81ce2a3ffcbbf338149a77cbe"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "9f2d701439b84ea6de259513ee69e5682c585fd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c350d48a595d93c3e6336b79091d7f506a5fb03", "patch": "@@ -1,3 +1,10 @@\n+2014-11-26  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR lto/64075\n+\t* tree-streamer-in.c (unpack_ts_function_decl_value_fields): Use\n+\tproper size for function_code bitfield.\n+\t(pack_ts_function_decl_value_fields): Likewise.\n+\n 2014-11-21  Mark Wielaard  <mjw@redhat.com>\n \n \t* doc/invoke.texi (-gdwarf-@{version}): Mention experimental DWARFv5."}, {"sha": "03605d1178e547a1f1d489a352d041475c73aea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c350d48a595d93c3e6336b79091d7f506a5fb03", "patch": "@@ -1,3 +1,8 @@\n+2014-11-26  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR lto/64075\n+\t* gcc.dg/pr64075.c: New.\n+\n 2014-11-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.target/i386/pr63620.c: XFAIL get_pc_thunk scan on"}, {"sha": "f913a79eed10af0ac22b80746108be7624bc29f5", "filename": "gcc/testsuite/gcc.dg/pr64075.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64075.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64075.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64075.c?ref=3c350d48a595d93c3e6336b79091d7f506a5fb03", "patch": "@@ -0,0 +1,9 @@\n+/* PR lto/64075 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lto } */\n+/* { dg-options \"-flto\" } */\n+\n+_Complex float test (float a, float b, float c, float d)\n+{\n+  return 1.0iF;\n+}"}, {"sha": "eb205edb700cd05a101c864d3c136cfd1905b3f2", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=3c350d48a595d93c3e6336b79091d7f506a5fb03", "patch": "@@ -333,7 +333,7 @@ unpack_ts_function_decl_value_fields (struct bitpack_d *bp, tree expr)\n   if (DECL_BUILT_IN_CLASS (expr) != NOT_BUILT_IN)\n     {\n       DECL_FUNCTION_CODE (expr) = (enum built_in_function) bp_unpack_value (bp,\n-\t                                                                    11);\n+\t                                                                    12);\n       if (DECL_BUILT_IN_CLASS (expr) == BUILT_IN_NORMAL\n \t  && DECL_FUNCTION_CODE (expr) >= END_BUILTINS)\n \tfatal_error (\"machine independent builtin code out of range\");"}, {"sha": "0d87cfff9f4d4b58d026c0a141adff3372c3f0a7", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c350d48a595d93c3e6336b79091d7f506a5fb03/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=3c350d48a595d93c3e6336b79091d7f506a5fb03", "patch": "@@ -300,7 +300,7 @@ pack_ts_function_decl_value_fields (struct bitpack_d *bp, tree expr)\n   bp_pack_value (bp, DECL_PURE_P (expr), 1);\n   bp_pack_value (bp, DECL_LOOPING_CONST_OR_PURE_P (expr), 1);\n   if (DECL_BUILT_IN_CLASS (expr) != NOT_BUILT_IN)\n-    bp_pack_value (bp, DECL_FUNCTION_CODE (expr), 11);\n+    bp_pack_value (bp, DECL_FUNCTION_CODE (expr), 12);\n }\n \n "}]}