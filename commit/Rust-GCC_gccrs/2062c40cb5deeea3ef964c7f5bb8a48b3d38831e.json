{"sha": "2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2MmM0MGNiNWRlZWVhM2VmOTY0YzdmNWJiOGE0OGIzZDM4ODMxZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-14T08:48:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-14T08:48:40Z"}, "message": "re PR target/84844 (ICE in extract_constrain_insn_cached, at recog.c:2217 (error: insn does not satisfy its constraints))\n\n\tPR target/84844\n\tRevert\n\t2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/78090\n\t* config/i386/constraints.md (Yc): New register constraint.\n\t* config/i386/i386.md (*float<SWI48:mode><MODEF:mode>2_mixed):\n\tUse Yc constraint for alternative 2 of operand 0.  Remove\n\tpreferred_for_speed attribute.\n\n\t* gcc.target/i386/pr84844.c: New test.\n\nFrom-SVN: r258515", "tree": {"sha": "63f18fc6904cbb2022bfdda4dc900f6932182093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f18fc6904cbb2022bfdda4dc900f6932182093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec64ffc8501c20efdebefb494f3c90ab44199b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec64ffc8501c20efdebefb494f3c90ab44199b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec64ffc8501c20efdebefb494f3c90ab44199b60"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "3e174c58cbf21e296ec4719477411f2a3edbe19d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "patch": "@@ -1,3 +1,15 @@\n+2018-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84844\n+\tRevert\n+\t2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/78090\n+\t* config/i386/constraints.md (Yc): New register constraint.\n+\t* config/i386/i386.md (*float<SWI48:mode><MODEF:mode>2_mixed):\n+\tUse Yc constraint for alternative 2 of operand 0.  Remove\n+\tpreferred_for_speed attribute.\n+\n 2018-03-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84830"}, {"sha": "f9564d3a385c5f3553e7c870686e68ec96bdc8ef", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "patch": "@@ -99,7 +99,6 @@\n \n ;; We use the Y prefix to denote any number of conditional register sets:\n ;;  z\tFirst SSE register.\n-;;  c\tSSE inter-unit conversions enabled\n ;;  i\tSSE2 inter-unit moves to SSE register enabled\n ;;  j\tSSE2 inter-unit moves from SSE register enabled\n ;;  d\tany EVEX encodable SSE register for AVX512BW target or any SSE register\n@@ -124,10 +123,6 @@\n (define_register_constraint \"Yz\" \"TARGET_SSE ? SSE_FIRST_REG : NO_REGS\"\n  \"First SSE register (@code{%xmm0}).\")\n \n-(define_register_constraint \"Yc\"\n- \"TARGET_SSE && TARGET_INTER_UNIT_CONVERSIONS ? ALL_SSE_REGS : NO_REGS\"\n- \"@internal Any SSE register, when SSE and inter-unit conversions are enabled.\")\n-\n (define_register_constraint \"Yi\"\n  \"TARGET_SSE2 && TARGET_INTER_UNIT_MOVES_TO_VEC ? ALL_SSE_REGS : NO_REGS\"\n  \"@internal Any SSE register, when SSE2 and inter-unit moves to vector registers are enabled.\")"}, {"sha": "2b73e8f61871bd3e35d8385463a2d3c493ecda11", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "patch": "@@ -5325,7 +5325,7 @@\n })\n \n (define_insn \"*float<SWI48:mode><MODEF:mode>2_mixed\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,Yc,v\")\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,v,v\")\n \t(float:MODEF\n \t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"m,r,m\")))]\n   \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\"\n@@ -5354,6 +5354,10 @@\n                            && X87_ENABLE_FLOAT (<MODEF:MODE>mode,\n                                                 <SWI48:MODE>mode)\")\n            ]\n+           (symbol_ref \"true\")))\n+   (set (attr \"preferred_for_speed\")\n+     (cond [(eq_attr \"alternative\" \"1\")\n+              (symbol_ref \"TARGET_INTER_UNIT_CONVERSIONS\")]\n            (symbol_ref \"true\")))])\n \n (define_insn \"*float<SWI48x:mode><MODEF:mode>2_i387\""}, {"sha": "215e30220541b6ab76c17b65eaf080f7bd5934ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "patch": "@@ -1,3 +1,8 @@\n+2018-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84844\n+\t* gcc.target/i386/pr84844.c: New test.\n+\n 2018-03-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84830"}, {"sha": "16e14163156be387995cb0c771815c0e6d50640a", "filename": "gcc/testsuite/gcc.target/i386/pr84844.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84844.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062c40cb5deeea3ef964c7f5bb8a48b3d38831e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84844.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84844.c?ref=2062c40cb5deeea3ef964c7f5bb8a48b3d38831e", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/84844 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=bdver1 -O2 -fschedule-insns -fselective-scheduling\" } */\n+\n+double\n+foo (int *x, int y, int z)\n+{\n+  *x = y;\n+  return z;\n+}"}]}