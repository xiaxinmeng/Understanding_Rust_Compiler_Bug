{"sha": "fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyYzVjMDBiOGY0OTE3ZjIyZTNkMWNjZDM1NzVhMmQxMmFhOTM2MA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-04-24T20:53:53Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-24T20:53:53Z"}, "message": "dbxout.c (dbxout_type): Fix typo.\n\n        * dbxout.c (dbxout_type): Fix typo.\n        (dbxout_range_type): Another HOST_WIDE_INT_PRINT_DEC fix.\n\nFrom-SVN: r19407", "tree": {"sha": "cb24c4280ef61abc761d022102b7ede52576013a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb24c4280ef61abc761d022102b7ede52576013a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360/comments", "author": null, "committer": null, "parents": [{"sha": "fe81dd695d4f49444de0114ee69b219c8d6aa45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe81dd695d4f49444de0114ee69b219c8d6aa45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe81dd695d4f49444de0114ee69b219c8d6aa45c"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "118c16b07199caf186c1c94a0497eccd4076771d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "patch": "@@ -1,5 +1,8 @@\n Fri Apr 24 15:57:02 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* dbxout.c (dbxout_type): Fix typo.\n+\t(dbxout_range_type): Another HOST_WIDE_INT_PRINT_DEC fix.\n+\n \t* configure.in: Use CC_FOR_BUILD, not BUILD_CC.\n \n Fri Apr 24 16:11:47 1998  John Carr  <jfc@mit.edu>"}, {"sha": "cb0220cd1126289d15e4a4bb854aa3f5e4752497", "filename": "gcc/dbxout.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=fb2c5c00b8f4917f22e3d1ccd3575a2d12aa9360", "patch": "@@ -956,14 +956,21 @@ dbxout_range_type (type)\n       dbxout_type_index (type);\n     }\n   if (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST)\n-    fprintf (asmfile, \";%d\", \n-\t     TREE_INT_CST_LOW (TYPE_MIN_VALUE (type)));\n+    {\n+      fputc (';', asmfile);\n+      fprintf (asmfile, HOST_WIDE_INT_PRINT_DEC,\n+\t       TREE_INT_CST_LOW (TYPE_MIN_VALUE (type)));\n+    }\n   else\n     fprintf (asmfile, \";0\");\n   if (TYPE_MAX_VALUE (type) \n       && TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST)\n-    fprintf (asmfile, \";%d;\", \n-\t     TREE_INT_CST_LOW (TYPE_MAX_VALUE (type)));\n+    {\n+      fputc (';', asmfile);\n+      fprintf (asmfile, HOST_WIDE_INT_PRINT_DEC,\n+\t       TREE_INT_CST_LOW (TYPE_MAX_VALUE (type)));\n+      fputc (';', asmfile);\n+    }\n   else\n     fprintf (asmfile, \";-1;\");\n }\n@@ -1140,7 +1147,7 @@ dbxout_type (type, full, show_arg_types)\n \t long (it has no concept of HOST_BITS_PER_WIDE_INT).  */\n       else if (use_gnu_debug_info_extensions\n \t       && (TYPE_PRECISION (type) > TYPE_PRECISION (integer_type_node)\n-\t\t   || TYPE_PRECISION (type) > HOST_BITS_PER_LONG))\n+\t\t   || TYPE_PRECISION (type) >= HOST_BITS_PER_LONG))\n \t{\n \t  /* This used to say `r1' and we used to take care\n \t     to make sure that `int' was type number 1.  */"}]}