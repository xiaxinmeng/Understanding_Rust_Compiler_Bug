{"sha": "ff1803c128986d7095c723a84e7c18ce33b2111e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxODAzYzEyODk4NmQ3MDk1YzcyM2E4NGU3YzE4Y2UzM2IyMTExZQ==", "commit": {"author": {"name": "Wei Mi", "email": "wmi@google.com", "date": "2015-01-22T17:59:23Z"}, "committer": {"name": "Wei Mi", "email": "wmi@gcc.gnu.org", "date": "2015-01-22T17:59:23Z"}, "message": "re PR rtl-optimization/64557 (get_addr in true_dependence_1 cannot handle VALUE inside an expr)\n\n2015-01-22  Wei Mi  <wmi@google.com>\n\n        PR rtl-optimization/64557\n        * dse.c (record_store): Call get_addr for mem_addr.\n        (check_mem_read_rtx): Likewise.\n\nFrom-SVN: r220010", "tree": {"sha": "28e99b7fbc79dfbf77094c75b1ed84b1d43183a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28e99b7fbc79dfbf77094c75b1ed84b1d43183a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff1803c128986d7095c723a84e7c18ce33b2111e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1803c128986d7095c723a84e7c18ce33b2111e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff1803c128986d7095c723a84e7c18ce33b2111e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1803c128986d7095c723a84e7c18ce33b2111e/comments", "author": {"login": "wmi-11", "id": 59629650, "node_id": "MDQ6VXNlcjU5NjI5NjUw", "avatar_url": "https://avatars.githubusercontent.com/u/59629650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmi-11", "html_url": "https://github.com/wmi-11", "followers_url": "https://api.github.com/users/wmi-11/followers", "following_url": "https://api.github.com/users/wmi-11/following{/other_user}", "gists_url": "https://api.github.com/users/wmi-11/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmi-11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmi-11/subscriptions", "organizations_url": "https://api.github.com/users/wmi-11/orgs", "repos_url": "https://api.github.com/users/wmi-11/repos", "events_url": "https://api.github.com/users/wmi-11/events{/privacy}", "received_events_url": "https://api.github.com/users/wmi-11/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e436286338333f42a87c418764476baf456740c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e436286338333f42a87c418764476baf456740c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e436286338333f42a87c418764476baf456740c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "3b8950194d7757dcfb69edc473b1e0c463c2d89a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1803c128986d7095c723a84e7c18ce33b2111e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1803c128986d7095c723a84e7c18ce33b2111e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff1803c128986d7095c723a84e7c18ce33b2111e", "patch": "@@ -1,3 +1,9 @@\n+2015-01-22  Wei Mi  <wmi@google.com>\n+\n+\tPR rtl-optimization/64557\n+\t* dse.c (record_store): Call get_addr for mem_addr.\n+\t(check_mem_read_rtx): Likewise.\n+\n 2015-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (const_binop): Add early return for non-tcc_binary."}, {"sha": "2bb20d74625c7982c9d0e778c85491c222a50872", "filename": "gcc/dse.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1803c128986d7095c723a84e7c18ce33b2111e/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1803c128986d7095c723a84e7c18ce33b2111e/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=ff1803c128986d7095c723a84e7c18ce33b2111e", "patch": "@@ -1575,6 +1575,10 @@ record_store (rtx body, bb_info_t bb_info)\n \t    = rtx_group_vec[group_id];\n \t  mem_addr = group->canon_base_addr;\n \t}\n+      /* get_addr can only handle VALUE but cannot handle expr like:\n+\t VALUE + OFFSET, so call get_addr to get original addr for\n+\t mem_addr before plus_constant.  */\n+      mem_addr = get_addr (mem_addr);\n       if (offset)\n \tmem_addr = plus_constant (get_address_mode (mem), mem_addr, offset);\n     }\n@@ -2188,6 +2192,10 @@ check_mem_read_rtx (rtx *loc, bb_info_t bb_info)\n \t    = rtx_group_vec[group_id];\n \t  mem_addr = group->canon_base_addr;\n \t}\n+      /* get_addr can only handle VALUE but cannot handle expr like:\n+\t VALUE + OFFSET, so call get_addr to get original addr for\n+\t mem_addr before plus_constant.  */\n+      mem_addr = get_addr (mem_addr);\n       if (offset)\n \tmem_addr = plus_constant (get_address_mode (mem), mem_addr, offset);\n     }"}]}