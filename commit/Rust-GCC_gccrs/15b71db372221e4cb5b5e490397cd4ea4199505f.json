{"sha": "15b71db372221e4cb5b5e490397cd4ea4199505f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTViNzFkYjM3MjIyMWU0Y2I1YjVlNDkwMzk3Y2Q0ZWE0MTk5NTA1Zg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-08-03T22:02:30Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-08-03T22:02:30Z"}, "message": "re PR fortran/45159 (Unnecessary temporaries)\n\n2010-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45159\n\t* dependency.c (gfc_deb_compare_expr):  Remove any integer\n\tconversion functions to larger types from both arguments.\n\tRemove handling these functions futher down.\n\n2010-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45159\n\t* gfortran.dg/dependency_30.f90:  New test.\n\nFrom-SVN: r162848", "tree": {"sha": "3819a385329077d8671c0fd7dcb745b43945967e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3819a385329077d8671c0fd7dcb745b43945967e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15b71db372221e4cb5b5e490397cd4ea4199505f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b71db372221e4cb5b5e490397cd4ea4199505f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b71db372221e4cb5b5e490397cd4ea4199505f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b71db372221e4cb5b5e490397cd4ea4199505f/comments", "author": null, "committer": null, "parents": [{"sha": "051de0eb4fb3abfce4863ea88afeffd2bc35cbed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051de0eb4fb3abfce4863ea88afeffd2bc35cbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051de0eb4fb3abfce4863ea88afeffd2bc35cbed"}], "stats": {"total": 73, "additions": 59, "deletions": 14}, "files": [{"sha": "a426d83e84cfbd111a731bf9333a78261d9b8412", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=15b71db372221e4cb5b5e490397cd4ea4199505f", "patch": "@@ -1,3 +1,10 @@\n+2010-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45159\n+\t* dependency.c (gfc_deb_compare_expr):  Remove any integer\n+\tconversion functions to larger types from both arguments.\n+\tRemove handling these functions futher down.\n+\n 2010-08-03  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/44584"}, {"sha": "90b2d679ec929d46f9a4840679d7da43adb37513", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 38, "deletions": 14, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=15b71db372221e4cb5b5e490397cd4ea4199505f", "patch": "@@ -180,7 +180,45 @@ gfc_dep_compare_expr (gfc_expr *e1, gfc_expr *e2)\n   gfc_actual_arglist *args1;\n   gfc_actual_arglist *args2;\n   int i;\n+  gfc_expr *n1, *n2;\n \n+  n1 = NULL;\n+  n2 = NULL;\n+\n+  /* Remove any integer conversion functions to larger types.  */\n+  if (e1->expr_type == EXPR_FUNCTION && e1->value.function.isym\n+      && e1->value.function.isym->id == GFC_ISYM_CONVERSION\n+      && e1->ts.type == BT_INTEGER)\n+    {\n+      args1 = e1->value.function.actual;\n+      if (args1->expr->ts.type == BT_INTEGER\n+\t  && e1->ts.kind > args1->expr->ts.kind)\n+\tn1 = args1->expr;\n+    }\n+\n+  if (e2->expr_type == EXPR_FUNCTION && e2->value.function.isym\n+      && e2->value.function.isym->id == GFC_ISYM_CONVERSION\n+      && e2->ts.type == BT_INTEGER)\n+    {\n+      args2 = e2->value.function.actual;\n+      if (args2->expr->ts.type == BT_INTEGER\n+\t  && e2->ts.kind > args2->expr->ts.kind)\n+\tn2 = args2->expr;\n+    }\n+\n+  if (n1 != NULL)\n+    {\n+      if (n2 != NULL)\n+\treturn gfc_dep_compare_expr (n1, n2);\n+      else\n+\treturn gfc_dep_compare_expr (n1, e2);\n+    }\n+  else\n+    {\n+      if (n2 != NULL)\n+\treturn gfc_dep_compare_expr (e1, n2);\n+    }\n+  \n   if (e1->expr_type == EXPR_OP\n       && (e1->value.op.op == INTRINSIC_UPLUS\n \t  || e1->value.op.op == INTRINSIC_PARENTHESES))\n@@ -328,20 +366,6 @@ gfc_dep_compare_expr (gfc_expr *e1, gfc_expr *e2)\n \t argument lists.  */\n       switch (e1->value.function.isym->id)\n \t{\n-\tcase GFC_ISYM_CONVERSION:\n-\t  /* Handle integer extensions specially, as __convert_i4_i8\n-\t     is not only \"constant\" but also \"unary\" and \"increasing\".  */\n-\t  if (args1 && !args1->next\n-\t      && args2 && !args2->next\n-\t      && e1->ts.type == BT_INTEGER\n-\t      && args1->expr->ts.type == BT_INTEGER\n-\t      && e1->ts.kind > args1->expr->ts.kind\n-\t      && e2->ts.type == e1->ts.type\n-\t      && e2->ts.kind == e1->ts.kind\n-\t      && args2->expr->ts.type == args1->expr->ts.type\n-\t      && args2->expr->ts.kind == args2->expr->ts.kind)\n-\t    return gfc_dep_compare_expr (args1->expr, args2->expr);\n-\t  break;\n \n \tcase GFC_ISYM_REAL:\n \tcase GFC_ISYM_LOGICAL:"}, {"sha": "960b7fe807d33b13f09cb05c872c25183c2e0138", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15b71db372221e4cb5b5e490397cd4ea4199505f", "patch": "@@ -1,3 +1,8 @@\n+2010-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45159\n+\t* gfortran.dg/dependency_30.f90:  New test.\n+\n 2010-08-03  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/compile/pr45085.c: New testcase."}, {"sha": "575dbebcb1edbb14c5d109ac81e1373f13dbe5de", "filename": "gcc/testsuite/gfortran.dg/dependency_30.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_30.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15b71db372221e4cb5b5e490397cd4ea4199505f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_30.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_30.f90?ref=15b71db372221e4cb5b5e490397cd4ea4199505f", "patch": "@@ -0,0 +1,9 @@\n+! { do-do compile }\n+! { dg-options \"-Warray-temporaries\" }\n+! PR 45159 - make sure no temporary is created for this.\n+subroutine foo(a,b,i,j,k,n)\n+  implicit none\n+  integer, intent(in) :: i, j, k, n\n+  real, dimension(n) :: a,b\n+  a(k:i-1) = a(i:j)\n+end subroutine foo"}]}