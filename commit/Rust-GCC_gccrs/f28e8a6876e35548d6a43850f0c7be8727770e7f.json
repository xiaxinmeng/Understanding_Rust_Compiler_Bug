{"sha": "f28e8a6876e35548d6a43850f0c7be8727770e7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4ZThhNjg3NmUzNTU0OGQ2YTQzODUwZjBjN2JlODcyNzc3MGU3Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-28T02:18:03Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-28T02:18:03Z"}, "message": "entered into RCS\n\nFrom-SVN: r1697", "tree": {"sha": "ef1d8ad6272ada9a26dba0aa6f4d1eb2e1edd143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef1d8ad6272ada9a26dba0aa6f4d1eb2e1edd143"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f28e8a6876e35548d6a43850f0c7be8727770e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28e8a6876e35548d6a43850f0c7be8727770e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28e8a6876e35548d6a43850f0c7be8727770e7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28e8a6876e35548d6a43850f0c7be8727770e7f/comments", "author": null, "committer": null, "parents": [{"sha": "99df2465b701d4b9cbc6c90f4d19f3bb4ac1f62f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99df2465b701d4b9cbc6c90f4d19f3bb4ac1f62f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99df2465b701d4b9cbc6c90f4d19f3bb4ac1f62f"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "532f1824b08b96a92d373edb6a709b23d7aea42f", "filename": "gcc/collect2.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e8a6876e35548d6a43850f0c7be8727770e7f/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e8a6876e35548d6a43850f0c7be8727770e7f/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=f28e8a6876e35548d6a43850f0c7be8727770e7f", "patch": "@@ -206,6 +206,25 @@ generic *xmalloc ();\n extern char *index ();\n extern char *rindex ();\n \f\n+#ifdef NO_DUP2\n+dup2 (oldfd, newfd)\n+     int oldfd;\n+     int newfd;\n+{\n+  int fdtmp[256];\n+  int fdx = 0;\n+  int fd;\n+ \n+  if (oldfd == newfd)\n+    return 0;\n+  close (newfd);\n+  while ((fd = dup (oldfd)) != newfd) /* good enough for low fd's */\n+    fdtmp[fdx++] = fd;\n+  while (fdx > 0)\n+    close (fdtmp[--fdx]);\n+}\n+#endif\n+\n char *\n my_strerror (e)\n      int e;"}]}