{"sha": "09bae928c56997afe3e13e9fee3328afc1c9d9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliYWU5MjhjNTY5OTdhZmUzZTEzZTlmZWUzMzI4YWZjMWM5ZDllOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-07-09T15:14:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-07-09T15:14:10Z"}, "message": "typeck.c (warn_args_num): Rename to error_args_num.\n\n2015-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck.c (warn_args_num): Rename to error_args_num.\n\t(convert_arguments): Adjust calls.\n\nFrom-SVN: r225615", "tree": {"sha": "4ba1ffe00809d4c7d719d746b99d189495d4117e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba1ffe00809d4c7d719d746b99d189495d4117e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09bae928c56997afe3e13e9fee3328afc1c9d9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09bae928c56997afe3e13e9fee3328afc1c9d9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09bae928c56997afe3e13e9fee3328afc1c9d9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09bae928c56997afe3e13e9fee3328afc1c9d9e8/comments", "author": null, "committer": null, "parents": [{"sha": "9b004cd378134e48c62af86c65d5d8ba4c657d0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b004cd378134e48c62af86c65d5d8ba4c657d0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b004cd378134e48c62af86c65d5d8ba4c657d0a"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "c1a85e5c730d6ec3de14ba61ebd5568d01854b2c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bae928c56997afe3e13e9fee3328afc1c9d9e8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bae928c56997afe3e13e9fee3328afc1c9d9e8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=09bae928c56997afe3e13e9fee3328afc1c9d9e8", "patch": "@@ -1,3 +1,8 @@\n+2015-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck.c (warn_args_num): Rename to error_args_num.\n+\t(convert_arguments): Adjust calls.\n+\n 2015-07-09  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* cp-ubsan.c: Don't include alloc-pool.h or lto-streamer.h."}, {"sha": "3e252f93e5ec8a4f36d27b358460e8f2abfb9502", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bae928c56997afe3e13e9fee3328afc1c9d9e8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bae928c56997afe3e13e9fee3328afc1c9d9e8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=09bae928c56997afe3e13e9fee3328afc1c9d9e8", "patch": "@@ -62,7 +62,7 @@ static void casts_away_constness_r (tree *, tree *, tsubst_flags_t);\n static bool casts_away_constness (tree, tree, tsubst_flags_t);\n static bool maybe_warn_about_returning_address_of_local (tree);\n static tree lookup_destructor (tree, tree, tree, tsubst_flags_t);\n-static void warn_args_num (location_t, tree, bool);\n+static void error_args_num (location_t, tree, bool);\n static int convert_arguments (tree, vec<tree, va_gc> **, tree, int,\n                               tsubst_flags_t);\n \n@@ -3559,10 +3559,10 @@ cp_build_function_call_vec (tree function, vec<tree, va_gc> **params,\n }\n \f\n /* Subroutine of convert_arguments.\n-   Warn about wrong number of args are genereted. */\n+   Print an error message about a wrong number of arguments.  */\n \n static void\n-warn_args_num (location_t loc, tree fndecl, bool too_many_p)\n+error_args_num (location_t loc, tree fndecl, bool too_many_p)\n {\n   if (fndecl)\n     {\n@@ -3645,7 +3645,7 @@ convert_arguments (tree typelist, vec<tree, va_gc> **values, tree fndecl,\n \t{\n           if (complain & tf_error)\n             {\n-\t      warn_args_num (input_location, fndecl, /*too_many_p=*/true);\n+\t      error_args_num (input_location, fndecl, /*too_many_p=*/true);\n               return i;\n             }\n           else\n@@ -3749,7 +3749,7 @@ convert_arguments (tree typelist, vec<tree, va_gc> **values, tree fndecl,\n       else\n \t{\n           if (complain & tf_error)\n-\t    warn_args_num (input_location, fndecl, /*too_many_p=*/false);\n+\t    error_args_num (input_location, fndecl, /*too_many_p=*/false);\n \t  return -1;\n \t}\n     }"}]}