{"sha": "58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThjOTcwM2ZlM2IyZGI0OWZlZjJhNjI4YWI3ZjBkNTVmYWQzM2U1Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-10-29T15:02:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-29T15:02:40Z"}, "message": "locale_facets.tcc (num_get::_M_extract_float): Revert the last commit, is incorrect, sorry.\n\n2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n\n        * include/bits/locale_facets.tcc (num_get::_M_extract_float):\n\tRevert the last commit, is incorrect, sorry.\n\nFrom-SVN: r73042", "tree": {"sha": "ccc48a0bb63969c812e46a5d2b277fdb8e87337e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccc48a0bb63969c812e46a5d2b277fdb8e87337e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c/comments", "author": null, "committer": null, "parents": [{"sha": "f0dc1efacea75da01f2f5d3889c6f67a46864a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0dc1efacea75da01f2f5d3889c6f67a46864a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0dc1efacea75da01f2f5d3889c6f67a46864a95"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "b10e8ad08078246c9dc91942ba1b0e033780181b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "patch": "@@ -1,3 +1,8 @@\n+2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_get::_M_extract_float):\n+\tRevert the last commit, is not correct, sorry.\n+\t\n 2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/generic/c_locale.cc: Add back <cmath> and"}, {"sha": "cb8110888a1d98512c720d8283f0cf9da263f586", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58c9703fe3b2db49fef2a628ab7f0d55fad33e5c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=58c9703fe3b2db49fef2a628ab7f0d55fad33e5c", "patch": "@@ -169,7 +169,7 @@ namespace std\n       string __found_grouping;\n       int __sep_pos = 0;\n       bool __e;\n-      for (; __beg != __end; ++__beg)\n+      while (__beg != __end)\n         {\n \t  // Only look in digits.\n \t  const char_type __c = *__beg;\n@@ -182,6 +182,7 @@ namespace std\n \t      __xtrc += _S_atoms_in[__p - __lit];\n \t      __found_mantissa = true;\n \t      ++__sep_pos;\n+\t      ++__beg;\n \t    }\n           else if (__traits_type::eq(__c, __lc->_M_thousands_sep) \n \t\t   && __lc->_M_use_grouping && !__found_dec)\n@@ -192,6 +193,7 @@ namespace std\n                 {\n                   __found_grouping += static_cast<char>(__sep_pos);\n                   __sep_pos = 0;\n+\t\t  ++__beg;\n                 }\n               else\n \t\t{\n@@ -209,25 +211,27 @@ namespace std\n \t\t__found_grouping += static_cast<char>(__sep_pos);\n \t      __xtrc += '.';\n \t      __found_dec = true;\n+\t      ++__beg;\n \t    }\n \t  else if ((__e = __traits_type::eq(__c, __lit[_S_ie]) \n \t\t    || __traits_type::eq(__c, __lit[_S_iE])) \n \t\t   && __found_mantissa && !__found_sci)\n \t    {\n \t      // Scientific notation.\n \t      __xtrc += __e ? _S_atoms_in[_S_ie] : _S_atoms_in[_S_iE];\n-\t      \n+\t      __found_sci = true;\n+\n \t      // Remove optional plus or minus sign, if they exist.\n \t      if (++__beg != __end)\n \t\t{\n \t\t  const bool __plus = __traits_type::eq(*__beg, __lit[_S_iplus]);\n \t\t  if (__plus || __traits_type::eq(*__beg, __lit[_S_iminus]))\n-\t\t    __xtrc += __plus ? _S_atoms_in[_S_iplus] \n-\t\t                     : _S_atoms_in[_S_iminus];\n-\t\t  __found_sci = true;\n+\t\t    {\n+\t\t      __xtrc += __plus ? _S_atoms_in[_S_iplus] \n+\t\t\t               : _S_atoms_in[_S_iminus];\n+\t\t      ++__beg;\n+\t\t    }\n \t\t}\n-\t      else\n-\t\tbreak;\n \t    }\n \t  else\n \t    // Not a valid input item."}]}