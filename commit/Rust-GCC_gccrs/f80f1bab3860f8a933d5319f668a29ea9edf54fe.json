{"sha": "f80f1bab3860f8a933d5319f668a29ea9edf54fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgwZjFiYWIzODYwZjhhOTMzZDUzMTlmNjY4YTI5ZWE5ZWRmNTRmZQ==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2004-12-09T21:07:01Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2004-12-09T21:07:01Z"}, "message": "re PR c++/18514 (Alternate \"asm\" name ignored for redeclared builtin function imported into namespace std)\n\n \tPR c++/18514\n \t* name-lookup.c (do_nonmember_using_decl): A real function\n \tdeclaration takes precedence over an anticipated declaration.\n \t* g++.dg/ext/builtin1.C: New\n \t* g++.dg/ext/builtin2.C: New\n \t* g++.dg/ext/builtin3.C: New\n \t* g++.dg/ext/builtin4.C: New\n \t* g++.dg/ext/builtin5.C: New\n\nFrom-SVN: r91972", "tree": {"sha": "816f18bec22c7dd80290aa745fb494c38dac8877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816f18bec22c7dd80290aa745fb494c38dac8877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f80f1bab3860f8a933d5319f668a29ea9edf54fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f80f1bab3860f8a933d5319f668a29ea9edf54fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f80f1bab3860f8a933d5319f668a29ea9edf54fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f80f1bab3860f8a933d5319f668a29ea9edf54fe/comments", "author": null, "committer": null, "parents": [{"sha": "5a19910e7cdbc5f2d169c7303cf48128ac2370b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a19910e7cdbc5f2d169c7303cf48128ac2370b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a19910e7cdbc5f2d169c7303cf48128ac2370b1"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "83fac5a9f0cba418106d649b9245cd324f45b488", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -1,3 +1,9 @@\n+2004-12-09  Matt Austern  <austern@apple.com>\n+\n+\tPR c++/18514\n+\t* name-lookup.c (do_nonmember_using_decl): A real function\n+\tdeclaration takes precedence over an anticipated declaration.\n+\t\n 2004-12-09  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* parser.c (cp_parser_member_declaration): Fix comment typo."}, {"sha": "eb60421cfaa63c019ee405983ebfe246e0514755", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -2064,10 +2064,16 @@ do_nonmember_using_decl (tree scope, tree name, tree oldval, tree oldtype,\n \t             are the same extern \"C\" functions, that's ok.  */\n                   if (decls_match (new_fn, old_fn))\n \t\t    {\n-\t\t      /* If the OLD_FN was a builtin, there is now a\n-\t\t\t real declaration.  */\n+\t\t      /* If the OLD_FN was a builtin, we've seen a real \n+\t\t\t declaration in another namespace.  Use it instead.\n+\t\t\t Set tmp1 to NULL so we can use the existing\n+\t\t\t OVERLOAD logic at the end of this inner loop.\n+\t\t      */\n \t\t      if (DECL_ANTICIPATED (old_fn))\n-\t\t\tDECL_ANTICIPATED (old_fn) = 0;\n+\t\t\t{\n+\t\t\t  gcc_assert (! DECL_ANTICIPATED (new_fn));\n+\t\t\t  tmp1 = NULL;\n+\t\t\t}\n \t\t      break;\n \t\t    }\n \t\t  else if (!DECL_ANTICIPATED (old_fn))"}, {"sha": "3a733f7e82e3437080ebff7b430f5702bb1e4252", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -1,3 +1,12 @@\n+2004-12-09  Matt Austern  <austern@apple.com>\n+\n+\tPR c++/18514\n+\t* g++.dg/ext/builtin1.C: New\n+\t* g++.dg/ext/builtin2.C: New\n+\t* g++.dg/ext/builtin3.C: New\n+\t* g++.dg/ext/builtin4.C: New\n+\t* g++.dg/ext/builtin5.C: New\n+\n 2004-12-09  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/18904"}, {"sha": "8a53fd6a31531bd6e24c5e0658dc0a7347fc8482", "filename": "gcc/testsuite/g++.dg/ext/builtin1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -0,0 +1,10 @@\n+// Test whether alternate 'asm' name is applied correctly to\n+// builtin in global namespace\n+\n+// { dg-do compile }\n+// { dg-options \"\" }\n+// { dg-final { scan-assembler \"fancy_printf\" } }\n+\n+extern \"C\" int printf(char*, ...) __asm(\"_fancy_printf\");\n+\n+void foo() { printf(\"abc\"); }"}, {"sha": "c741c0ba98f8e46f0b1fc6b1fea044dcc4ecf85b", "filename": "gcc/testsuite/g++.dg/ext/builtin2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/18514\n+// Test whether alternate 'asm' name is applied correctly to\n+// builtin imported into namespace std.\n+\n+// { dg-do compile }\n+// { dg-options \"\" }\n+// { dg-final { scan-assembler \"fancy_printf\" } }\n+\n+extern \"C\" int printf(char*, ...) __asm(\"_fancy_printf\");\n+\n+namespace std { using ::printf; }\n+\n+namespace std { void foo() { printf(\"abc\"); } }"}, {"sha": "3d06dd7534ae146e63b529de21cfc74bef71cbf0", "filename": "gcc/testsuite/g++.dg/ext/builtin3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin3.C?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -0,0 +1,13 @@\n+// Verify that declaring builtin in namespace std doesn't give us\n+// declaration in global namespace\n+\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+namespace std {\n+extern \"C\" int printf(char*, ...);\n+}\n+\n+void foo() {\n+  printf(\"abc\"); \t\t// { dg-error \"not declared\" }\n+}"}, {"sha": "7d6c473dc8459ea1faf7a3dd075d4646019d3146", "filename": "gcc/testsuite/g++.dg/ext/builtin4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin4.C?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -0,0 +1,10 @@\n+// Verify that builtin is used when declared in global namespace\n+\n+// { dg-do compile }\n+// { dg-options \"-Wall\" }\n+\n+extern \"C\" int printf(const char*,...);\n+\n+void foo() {\n+  printf(\"%d\"); \t\t// { dg-warning \"too few arguments\" }\n+}"}, {"sha": "2601a12e301698608e092a6c2b64f205269a4db9", "filename": "gcc/testsuite/g++.dg/ext/builtin5.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f80f1bab3860f8a933d5319f668a29ea9edf54fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin5.C?ref=f80f1bab3860f8a933d5319f668a29ea9edf54fe", "patch": "@@ -0,0 +1,12 @@\n+// Verify that builtin is used when declared in namespace std\n+\n+// { dg-do compile }\n+// { dg-options \"-Wall\" }\n+\n+namespace std {\n+  extern \"C\" int printf(const char*,...);\n+}\n+\n+void foo() {\n+  std::printf(\"%d\"); \t\t// { dg-warning \"too few arguments\" }\n+}"}]}