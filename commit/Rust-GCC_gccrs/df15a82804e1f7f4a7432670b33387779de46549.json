{"sha": "df15a82804e1f7f4a7432670b33387779de46549", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxNWE4MjgwNGUxZjdmNGE3NDMyNjcwYjMzMzg3Nzc5ZGU0NjU0OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-03-10T21:51:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-03-11T02:01:03Z"}, "message": "c++: Fix ICE with omitted template args [PR93956].\n\nreshape_init only wants to work on BRACE_ENCLOSED_INITIALIZER_P, i.e. raw\ninitializer lists, and here was getting a CONSTRUCTOR that had already been\nprocessed for type A<int>.  maybe_aggr_guide should also use that test.\n\ngcc/cp/ChangeLog\n2020-03-10  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/93956\n\t* pt.c (maybe_aggr_guide): Check BRACE_ENCLOSED_INITIALIZER_P.", "tree": {"sha": "e4d89f1427714fe511865a740196f35e22aac7a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4d89f1427714fe511865a740196f35e22aac7a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df15a82804e1f7f4a7432670b33387779de46549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df15a82804e1f7f4a7432670b33387779de46549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df15a82804e1f7f4a7432670b33387779de46549", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df15a82804e1f7f4a7432670b33387779de46549/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e0df8a9be5a8232f4ccb73cdadb02121ba523f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e0df8a9be5a8232f4ccb73cdadb02121ba523f"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "b60b1ecc60463c39bb0431c7987ae6e7fb010abb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df15a82804e1f7f4a7432670b33387779de46549", "patch": "@@ -1,3 +1,8 @@\n+2020-03-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93956\n+\t* pt.c (maybe_aggr_guide): Check BRACE_ENCLOSED_INITIALIZER_P.\n+\n 2020-03-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93922"}, {"sha": "179716b56800ef15fc9db7b5d1b8ad8d6d7e7b4a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=df15a82804e1f7f4a7432670b33387779de46549", "patch": "@@ -28182,7 +28182,7 @@ maybe_aggr_guide (tree tmpl, tree init, vec<tree,va_gc> *args)\n   tsubst_flags_t complain = tf_none;\n \n   tree parms = NULL_TREE;\n-  if (TREE_CODE (init) == CONSTRUCTOR)\n+  if (BRACE_ENCLOSED_INITIALIZER_P (init))\n     {\n       init = reshape_init (type, init, complain);\n       if (init == error_mark_node)"}, {"sha": "f14bdf0b8ec8dc27aefd1db136c89054424b3cd8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction70.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction70.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df15a82804e1f7f4a7432670b33387779de46549/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction70.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction70.C?ref=df15a82804e1f7f4a7432670b33387779de46549", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/93596\n+\n+template <typename> struct A {};\n+template <typename> struct B {};\n+template <typename> struct C {\n+  void foo () { B a = A<int> { foo }; } // { dg-error \"\" }\n+};"}]}