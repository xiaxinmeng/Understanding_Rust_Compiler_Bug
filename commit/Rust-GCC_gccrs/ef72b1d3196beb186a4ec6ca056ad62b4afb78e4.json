{"sha": "ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3MmIxZDMxOTZiZWIxODZhNGVjNmNhMDU2YWQ2MmI0YWZiNzhlNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-05-27T20:19:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-05-27T20:19:53Z"}, "message": "* gcc.c-torture/execute/pure-1.c: New test.\n\nFrom-SVN: r53937", "tree": {"sha": "243f8a5fbbf0a61348c0792038282b2de4bdb2cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/243f8a5fbbf0a61348c0792038282b2de4bdb2cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4/comments", "author": null, "committer": null, "parents": [{"sha": "630363b4354eb2db2a1451c4c4c97529c42f2021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630363b4354eb2db2a1451c4c4c97529c42f2021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630363b4354eb2db2a1451c4c4c97529c42f2021"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "2121151185cbb9d6786968bbd48486119b709c22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "patch": "@@ -1,3 +1,7 @@\n+2002-05-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.c-torture/execute/pure-1.c: New test.\n+\n 2002-05-27  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/arith-2.c: Remove."}, {"sha": "a766b93a9fda3923beda005b5360575df5745932", "filename": "gcc/testsuite/gcc.c-torture/execute/pure-1.c", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72b1d3196beb186a4ec6ca056ad62b4afb78e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c?ref=ef72b1d3196beb186a4ec6ca056ad62b4afb78e4", "patch": "@@ -0,0 +1,90 @@\n+/* Origin: Kaveh Ghazi <ghazi@caip.rutgers.edu> 2002-05-27.  */\n+\n+/* Use a different function for each test so the link failures\n+   indicate which one is broken.  */\n+extern void link_error0 (void);\n+extern void link_error1 (void);\n+extern void link_error2 (void);\n+extern void link_error3 (void);\n+extern void link_error4 (void);\n+extern void link_error5 (void);\n+extern void link_error6 (void);\n+extern void link_error7 (void);\n+\n+extern int i;\n+\n+extern int func0 (int) __attribute__ ((__pure__));\n+extern int func1 (int) __attribute__ ((__const__));\n+/* GCC should automatically detect attributes for these functions.\n+   Don't allow -O3 to inline them.  */\n+#define ANI __attribute__ ((__noinline__))\n+static int ANI func2 (int a) { return i + a; } /* pure */\n+static int ANI func3 (int a) { return a * 3; } /* const */\n+static int ANI func4 (int a) { return func0(a) + a; } /* pure */\n+static int ANI func5 (int a) { return a + func1(a); } /* const */\n+static int ANI func6 (int a) { return func2(a) + a; } /* pure */\n+static int ANI func7 (int a) { return a + func3(a); } /* const */\n+\n+int main ()\n+{\n+  int i[10], r;\n+\n+  i[0] = 0;\n+  r = func0(0);\n+  if (i[0])\n+    link_error0();\n+\n+  i[1] = 0;\n+  r = func1(0);\n+  if (i[1])\n+    link_error1();\n+\n+  i[2] = 0;\n+  r = func2(0);\n+  if (i[2])\n+    link_error2();\n+\n+  i[3] = 0;\n+  r = func3(0);\n+  if (i[3])\n+    link_error3();\n+\n+  i[4] = 0;\n+  r = func4(0);\n+  if (i[4])\n+    link_error4();\n+\n+  i[5] = 0;\n+  r = func5(0);\n+  if (i[5])\n+    link_error5();\n+\n+  i[6] = 0;\n+  r = func6(0);\n+  if (i[6])\n+    link_error6();\n+\n+  i[7] = 0;\n+  r = func7(0);\n+  if (i[7])\n+    link_error7();\n+\n+  return r;\n+}\n+\n+int func0 (int a) { return a - i; } /* pure */\n+int func1 (int a) { return a - a; } /* const */\n+\n+int i = 2;\n+\n+#ifndef __OPTIMIZE__\n+/* Avoid link failures when not optimizing. */\n+void link_error0() {}\n+void link_error1() {}\n+void link_error2() {}\n+void link_error3() {}\n+void link_error4() {}\n+void link_error5() {}\n+void link_error6() {}\n+void link_error7() {}\n+#endif /* ! __OPTIMIZE__ */"}]}