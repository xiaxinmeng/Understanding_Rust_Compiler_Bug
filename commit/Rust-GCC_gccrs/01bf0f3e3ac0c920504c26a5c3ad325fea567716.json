{"sha": "01bf0f3e3ac0c920504c26a5c3ad325fea567716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFiZjBmM2UzYWMwYzkyMDUwNGMyNmE1YzNhZDMyNWZlYTU2NzcxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-08-21T05:24:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-08-21T05:24:02Z"}, "message": "re PR c++/11614 (Incorrect handling of pointers to arrays)\n\n        PR c++/11614\n        * decl.c (grokdeclarator): Recognize a flexible array based on the\n        type, not the form of the declarator.\n\nFrom-SVN: r70636", "tree": {"sha": "a154fba48890e878d36a8cd5944b8b1511dcdb56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a154fba48890e878d36a8cd5944b8b1511dcdb56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01bf0f3e3ac0c920504c26a5c3ad325fea567716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bf0f3e3ac0c920504c26a5c3ad325fea567716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bf0f3e3ac0c920504c26a5c3ad325fea567716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bf0f3e3ac0c920504c26a5c3ad325fea567716/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9eeb200f8a1270e84d0b1c56aa31d5a93e7a3e86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eeb200f8a1270e84d0b1c56aa31d5a93e7a3e86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eeb200f8a1270e84d0b1c56aa31d5a93e7a3e86"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "fc6ae49f5acaca83a813d143714f66af78653f12", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bf0f3e3ac0c920504c26a5c3ad325fea567716/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bf0f3e3ac0c920504c26a5c3ad325fea567716/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=01bf0f3e3ac0c920504c26a5c3ad325fea567716", "patch": "@@ -1,3 +1,9 @@\n+2003-08-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/11614\n+\t* decl.c (grokdeclarator): Recognize a flexible array based on the\n+\ttype, not the form of the declarator.\n+\n 2003-08-20  Jason Merrill  <jason@redhat.com>\n \n \t* semantics.c (simplify_aggr_init_expr): Split out from"}, {"sha": "e35fa07ab6912de9da05282b76b5bfd36174ce7e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bf0f3e3ac0c920504c26a5c3ad325fea567716/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bf0f3e3ac0c920504c26a5c3ad325fea567716/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=01bf0f3e3ac0c920504c26a5c3ad325fea567716", "patch": "@@ -10593,21 +10593,9 @@ grokdeclarator (tree declarator,\n \n \tcase ARRAY_REF:\n \t  {\n-\t    register tree size;\n-\n-\t    size = TREE_OPERAND (declarator, 1);\n+\t    tree size = TREE_OPERAND (declarator, 1);\n \t    declarator = TREE_OPERAND (declarator, 0);\n \n-\t    /* C99 spells a flexible array member [].  */\n-\t    if (size == NULL_TREE && decl_context == FIELD && !\tstaticp\n-\t\t&& ! RIDBIT_SETP (RID_TYPEDEF, specbits)\n-\t\t&& !(declarator &&\n-\t\t    (TREE_CODE (declarator) == CALL_EXPR\n-\t\t      || TREE_CODE (declarator) == INDIRECT_REF\n-\t\t      || TREE_CODE (declarator) == ADDR_EXPR\n-\t\t      || TREE_CODE (declarator) == ARRAY_REF)))\n-\t      size = integer_zero_node;\n-\n \t    type = create_array_type_for_decl (dname, type, size);\n \n \t    ctype = NULL_TREE;\n@@ -11355,6 +11343,14 @@ grokdeclarator (tree declarator,\n       }\n     else if (decl_context == FIELD)\n       {\n+\t/* The C99 flexible array extension.  */\n+\tif (!staticp && TREE_CODE (type) == ARRAY_TYPE\n+\t    && TYPE_DOMAIN (type) == NULL_TREE)\n+\t  {\n+\t    tree itype = compute_array_index_type (dname, integer_zero_node);\n+\t    type = build_cplus_array_type (TREE_TYPE (type), itype);\n+\t  }\n+\n \tif (type == error_mark_node)\n \t  {\n \t    /* Happens when declaring arrays of sizes which"}]}