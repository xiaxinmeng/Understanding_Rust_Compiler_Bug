{"sha": "312ce401906209132ac80b68b50ff2c21b2c1079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyY2U0MDE5MDYyMDkxMzJhYzgwYjY4YjUwZmYyYzIxYjJjMTA3OQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebpop@gmail.com", "date": "2017-10-06T11:26:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-06T11:26:33Z"}, "message": "graphite-dependences.c (scop_get_reads): Move code to...\n\n2017-10-06  Sebastian Pop  <sebpop@gmail.com>\n\n\t* graphite-dependences.c (scop_get_reads): Move code to...\n        (scop_get_must_writes): Move code to...\n        (scop_get_may_writes): Move code to...\n        (scop_get_reads_and_writes): ... here.\n        (scop_get_dependences): Call scop_get_reads_and_writes.\n\nFrom-SVN: r253486", "tree": {"sha": "11539f6d3d7f6cf76f3926ecf31a5b06d0e1c4b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11539f6d3d7f6cf76f3926ecf31a5b06d0e1c4b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312ce401906209132ac80b68b50ff2c21b2c1079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312ce401906209132ac80b68b50ff2c21b2c1079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312ce401906209132ac80b68b50ff2c21b2c1079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312ce401906209132ac80b68b50ff2c21b2c1079/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e78b10ceb987b6b71683f3731a283f329e5c6c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78b10ceb987b6b71683f3731a283f329e5c6c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78b10ceb987b6b71683f3731a283f329e5c6c9e"}], "stats": {"total": 86, "additions": 29, "deletions": 57}, "files": [{"sha": "dec072aecd5b28ce2427bafedd6fbc12c44bd79f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312ce401906209132ac80b68b50ff2c21b2c1079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312ce401906209132ac80b68b50ff2c21b2c1079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=312ce401906209132ac80b68b50ff2c21b2c1079", "patch": "@@ -1,3 +1,11 @@\n+2017-10-06  Sebastian Pop  <sebpop@gmail.com>\n+\n+\t* graphite-dependences.c (scop_get_reads): Move code to...\n+\t(scop_get_must_writes): Move code to...\n+\t(scop_get_may_writes): Move code to...\n+\t(scop_get_reads_and_writes): ... here.\n+\t(scop_get_dependences): Call scop_get_reads_and_writes.\n+\n 2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/82434"}, {"sha": "2066b2ea59cd24c4391eea3ca5717fc14e4491ff", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 21, "deletions": 57, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312ce401906209132ac80b68b50ff2c21b2c1079/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312ce401906209132ac80b68b50ff2c21b2c1079/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=312ce401906209132ac80b68b50ff2c21b2c1079", "patch": "@@ -63,20 +63,21 @@ add_pdr_constraints (poly_dr_p pdr, poly_bb_p pbb)\n   return constrain_domain (x, isl_set_copy (pbb->domain));\n }\n \n-/* Returns all the memory reads in SCOP.  */\n+/* Returns an isl description of all memory operations in SCOP.  The memory\n+   reads are returned in READS and writes in MUST_WRITES and MAY_WRITES.  */\n \n-static isl_union_map *\n-scop_get_reads (scop_p scop)\n+static void\n+scop_get_reads_and_writes (scop_p scop, isl_union_map *reads,\n+\t\t\t   isl_union_map *must_writes,\n+\t\t\t   isl_union_map *may_writes)\n {\n   int i, j;\n   poly_bb_p pbb;\n   poly_dr_p pdr;\n-  isl_space *space = isl_set_get_space (scop->param_context);\n-  isl_union_map *res = isl_union_map_empty (space);\n \n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n     {\n-      FOR_EACH_VEC_ELT (PBB_DRS (pbb), j, pdr)\n+      FOR_EACH_VEC_ELT (PBB_DRS (pbb), j, pdr) {\n \tif (pdr_read_p (pdr))\n \t  {\n \t    if (dump_file)\n@@ -86,33 +87,14 @@ scop_get_reads (scop_p scop)\n \t      }\n \t    isl_union_map *um\n \t      = isl_union_map_from_map (add_pdr_constraints (pdr, pbb));\n-\t    res = isl_union_map_union (res, um);\n+\t    reads = isl_union_map_union (reads, um);\n \t    if (dump_file)\n \t      {\n \t\tfprintf (dump_file, \"Reads depedence graph: \");\n-\t\tprint_isl_union_map (dump_file, res);\n+\t\tprint_isl_union_map (dump_file, reads);\n \t      }\n \t  }\n-    }\n-\n-  return isl_union_map_coalesce (res);\n-}\n-\n-/* Returns all the memory must writes in SCOP.  */\n-\n-static isl_union_map *\n-scop_get_must_writes (scop_p scop)\n-{\n-  int i, j;\n-  poly_bb_p pbb;\n-  poly_dr_p pdr;\n-  isl_space *space = isl_set_get_space (scop->param_context);\n-  isl_union_map *res = isl_union_map_empty (space);\n-\n-  FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    {\n-      FOR_EACH_VEC_ELT (PBB_DRS (pbb), j, pdr)\n-\tif (pdr_write_p (pdr))\n+\telse if (pdr_write_p (pdr))\n \t  {\n \t    if (dump_file)\n \t      {\n@@ -121,33 +103,14 @@ scop_get_must_writes (scop_p scop)\n \t      }\n \t    isl_union_map *um\n \t      = isl_union_map_from_map (add_pdr_constraints (pdr, pbb));\n-\t    res = isl_union_map_union (res, um);\n+\t    must_writes = isl_union_map_union (must_writes, um);\n \t    if (dump_file)\n \t      {\n \t\tfprintf (dump_file, \"Must writes depedence graph: \");\n-\t\tprint_isl_union_map (dump_file, res);\n+\t\tprint_isl_union_map (dump_file, must_writes);\n \t      }\n \t  }\n-    }\n-\n-  return isl_union_map_coalesce (res);\n-}\n-\n-/* Returns all the memory may writes in SCOP.  */\n-\n-static isl_union_map *\n-scop_get_may_writes (scop_p scop)\n-{\n-  int i, j;\n-  poly_bb_p pbb;\n-  poly_dr_p pdr;\n-  isl_space *space = isl_set_get_space (scop->param_context);\n-  isl_union_map *res = isl_union_map_empty (space);\n-\n-  FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    {\n-      FOR_EACH_VEC_ELT (PBB_DRS (pbb), j, pdr)\n-\tif (pdr_may_write_p (pdr))\n+\telse if (pdr_may_write_p (pdr))\n \t  {\n \t    if (dump_file)\n \t      {\n@@ -156,16 +119,15 @@ scop_get_may_writes (scop_p scop)\n \t      }\n \t    isl_union_map *um\n \t      = isl_union_map_from_map (add_pdr_constraints (pdr, pbb));\n-\t    res = isl_union_map_union (res, um);\n+\t    may_writes = isl_union_map_union (may_writes, um);\n \t    if (dump_file)\n \t      {\n \t\tfprintf (dump_file, \"May writes depedence graph: \");\n-\t\tprint_isl_union_map (dump_file, res);\n+\t\tprint_isl_union_map (dump_file, may_writes);\n \t      }\n \t  }\n+      }\n     }\n-\n-  return isl_union_map_coalesce (res);\n }\n \n /* Helper function used on each MAP of a isl_union_map.  Computes the\n@@ -300,9 +262,11 @@ scop_get_dependences (scop_p scop)\n   if (scop->dependence)\n     return;\n \n-  isl_union_map *reads = scop_get_reads (scop);\n-  isl_union_map *must_writes = scop_get_must_writes (scop);\n-  isl_union_map *may_writes = scop_get_may_writes (scop);\n+  isl_space *space = isl_set_get_space (scop->param_context);\n+  isl_union_map *reads = isl_union_map_empty (isl_space_copy (space));\n+  isl_union_map *must_writes = isl_union_map_empty (isl_space_copy (space));\n+  isl_union_map *may_writes = isl_union_map_empty (space);\n+  scop_get_reads_and_writes (scop, reads, must_writes, may_writes);\n \n   if (dump_file)\n     {"}]}