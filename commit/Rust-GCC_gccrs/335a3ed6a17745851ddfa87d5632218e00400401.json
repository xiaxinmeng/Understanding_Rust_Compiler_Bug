{"sha": "335a3ed6a17745851ddfa87d5632218e00400401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1YTNlZDZhMTc3NDU4NTFkZGZhODdkNTYzMjIxOGUwMDQwMDQwMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-11-04T03:41:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-11-04T03:41:16Z"}, "message": "numeric.h: Do not use default arguments in function template redeclarations (definitions).\n\n\t* include/parallel/numeric.h: Do not use default arguments in function\n\ttemplate redeclarations (definitions).\n\nFrom-SVN: r217069", "tree": {"sha": "d68b07c0019da6d6307f207ed23572eb6c28d314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d68b07c0019da6d6307f207ed23572eb6c28d314"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/335a3ed6a17745851ddfa87d5632218e00400401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335a3ed6a17745851ddfa87d5632218e00400401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/335a3ed6a17745851ddfa87d5632218e00400401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335a3ed6a17745851ddfa87d5632218e00400401/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3cf41899e86a342d3154a38fd9c5c586796ef4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cf41899e86a342d3154a38fd9c5c586796ef4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cf41899e86a342d3154a38fd9c5c586796ef4b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8cb7675f6a5322ad03c15a9e2f03469b03172638", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335a3ed6a17745851ddfa87d5632218e00400401/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335a3ed6a17745851ddfa87d5632218e00400401/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=335a3ed6a17745851ddfa87d5632218e00400401", "patch": "@@ -20,6 +20,9 @@\n \tallocator instead of moving.\n \t* testsuite/23_containers/deque/allocator/move-2.cc: New.\n \n+\t* include/parallel/numeric.h: Do not use default arguments in function\n+\ttemplate redeclarations (definitions).\n+\n 2014-11-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/parallel/algo.h: Do not use default arguments in function"}, {"sha": "e89f27efead6b28ff2aed892e6a56654d026da63", "filename": "libstdc++-v3/include/parallel/numeric", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335a3ed6a17745851ddfa87d5632218e00400401/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335a3ed6a17745851ddfa87d5632218e00400401/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumeric?ref=335a3ed6a17745851ddfa87d5632218e00400401", "patch": "@@ -85,8 +85,7 @@ namespace __parallel\n     __accumulate_switch(__RAIter __begin, __RAIter __end, \n                       _Tp __init, _BinaryOperation __binary_op, \n                       random_access_iterator_tag, \n-                      __gnu_parallel::_Parallelism __parallelism_tag  \n-                      = __gnu_parallel::parallel_unbalanced)\n+                      __gnu_parallel::_Parallelism __parallelism_tag)\n     {\n       if (_GLIBCXX_PARALLEL_CONDITION(\n             static_cast<__gnu_parallel::_SequenceIndex>(__end - __begin)\n@@ -193,8 +192,7 @@ namespace __parallel\n \t\t\t   _BinaryFunction2 __binary_op2,\n \t\t\t   random_access_iterator_tag,\n \t\t\t   random_access_iterator_tag,\n-\t\t\t   __gnu_parallel::_Parallelism __parallelism_tag\n-\t\t\t   = __gnu_parallel::parallel_unbalanced)\n+\t\t\t   __gnu_parallel::_Parallelism __parallelism_tag)\n     {\n       if (_GLIBCXX_PARALLEL_CONDITION((__last1 - __first1)\n                                       >= __gnu_parallel::_Settings::get().\n@@ -419,8 +417,7 @@ namespace __parallel\n \t\t\t\t random_access_iterator_tag,\n \t\t\t\t random_access_iterator_tag,\n \t\t\t\t __gnu_parallel::_Parallelism\n-\t\t\t\t __parallelism_tag\n-\t\t\t\t = __gnu_parallel::parallel_balanced)\n+\t\t\t\t __parallelism_tag)\n     {\n       if (_GLIBCXX_PARALLEL_CONDITION(\n             static_cast<__gnu_parallel::_SequenceIndex>(__end - __begin)"}]}