{"sha": "b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRhNzZjMDFkYmM4ZjNjM2FjZmY1ZWYzYjQ0Y2MxOTI0OTI5OWEyMA==", "commit": {"author": {"name": "Felix Yen", "email": "fwy@alumni.brown.edu", "date": "2004-03-24T17:16:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-03-24T17:16:07Z"}, "message": "producer_consumer.cc: Use linear algorithm for producer.\n\n\n2004-03-24  Felix Yen  <fwy@alumni.brown.edu>\n\n\t* testsuite/performance/20_util/allocator/producer_consumer.cc:\n\tUse linear algorithm for producer.\n\nFrom-SVN: r79920", "tree": {"sha": "6fc9dfaa7723bb37a2e18d170a7b080a6d22fede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fc9dfaa7723bb37a2e18d170a7b080a6d22fede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20/comments", "author": null, "committer": null, "parents": [{"sha": "b5472e1d48b1ba409a8eea6fcd67a2865b1bd684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5472e1d48b1ba409a8eea6fcd67a2865b1bd684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5472e1d48b1ba409a8eea6fcd67a2865b1bd684"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "73096ffc3de5927094619188c1213455e4800986", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "patch": "@@ -1,3 +1,8 @@\n+2004-03-24  Felix Yen  <fwy@alumni.brown.edu>\n+\n+\t* testsuite/performance/20_util/allocator/producer_consumer.cc:\n+\tUse linear algorithm for producer.\n+\t\n 2004-03-24  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/mt_allocator.h (__mt_alloc<>::allocate,"}, {"sha": "4e13a5cc0b2f6f9c0fb3e0213212b36fb2309fee", "filename": "libstdc++-v3/testsuite/performance/20_util/allocator/producer_consumer.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F20_util%2Fallocator%2Fproducer_consumer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4a76c01dbc8f3c3acff5ef3b44cc19249299a20/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F20_util%2Fallocator%2Fproducer_consumer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F20_util%2Fallocator%2Fproducer_consumer.cc?ref=b4a76c01dbc8f3c3acff5ef3b44cc19249299a20", "patch": "@@ -129,8 +129,9 @@ template<typename Container>\n   Queue<Container>::push_back(const typename Container::value_type& value)\n   {\n     AutoLock auto_lock(lock);\n+    const bool signal = queue.empty();\n     queue.insert(queue.end(), value);\n-    if (queue.size() == 1) pthread_cond_signal(&condition);\n+    if (signal) pthread_cond_signal(&condition);\n   }\n \n template<typename Container>"}]}