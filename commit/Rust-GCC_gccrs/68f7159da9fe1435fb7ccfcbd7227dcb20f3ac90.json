{"sha": "68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmNzE1OWRhOWZlMTQzNWZiN2NjZmNiZDcyMjdkY2IyMGYzYWM5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-07-20T18:22:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-07-20T18:22:34Z"}, "message": "re PR c++/44967 ([C++0x] decltype of method call dependent on pack expansion crashes)\n\n\tPR c++/44967\n\t* pt.c (tsubst_copy_and_build): Rework last change.\n\nFrom-SVN: r162345", "tree": {"sha": "a57df5127e64b43678167aa946a56633f06e3c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a57df5127e64b43678167aa946a56633f06e3c70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d95016e0e6b8942e14a94ec1674290356d571de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95016e0e6b8942e14a94ec1674290356d571de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95016e0e6b8942e14a94ec1674290356d571de1"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "748f37df333eddba7e5660b3d1246a7ed32f059c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "patch": "@@ -1,5 +1,8 @@\n 2010-07-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44967\n+\t* pt.c (tsubst_copy_and_build): Rework last change.\n+\n \tPR c++/44967\n \t* pt.c (tsubst_copy_and_build): Handle partial substitution of\n \tCALL_EXPR."}, {"sha": "b61890737dfb94a9efe08e60862d47a04fb77e0b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=68f7159da9fe1435fb7ccfcbd7227dcb20f3ac90", "patch": "@@ -12500,15 +12500,6 @@ tsubst_copy_and_build (tree t,\n \t      }\n \t  }\n \n-\tif (processing_template_decl\n-\t    && (type_dependent_expression_p (function)\n-\t\t|| any_type_dependent_arguments_p (call_args)))\n-\t  {\n-\t    ret = build_nt_call_vec (function, call_args);\n-\t    KOENIG_LOOKUP_P (ret) = koenig_p;\n-\t    goto call_out;\n-\t  }\n-\n \t/* We do not perform argument-dependent lookup if normal\n \t   lookup finds a non-function, in accordance with the\n \t   expected resolution of DR 218.  */\n@@ -12521,14 +12512,15 @@ tsubst_copy_and_build (tree t,\n \t\t|| TREE_CODE (function) == IDENTIFIER_NODE)\n \t    /* Only do this when substitution turns a dependent call\n \t       into a non-dependent call.  */\n-\t    && type_dependent_expression_p_push (t))\n+\t    && type_dependent_expression_p_push (t)\n+\t    && !any_type_dependent_arguments_p (call_args))\n \t  function = perform_koenig_lookup (function, call_args);\n \n \tif (TREE_CODE (function) == IDENTIFIER_NODE)\n \t  {\n \t    unqualified_name_lookup_error (function);\n-\t    ret = error_mark_node;\n-\t    goto call_out;\n+\t    release_tree_vector (call_args);\n+\t    return error_mark_node;\n \t  }\n \n \t/* Remember that there was a reference to this entity.  */\n@@ -12539,15 +12531,24 @@ tsubst_copy_and_build (tree t,\n \t  ret = build_offset_ref_call_from_tree (function, &call_args);\n \telse if (TREE_CODE (function) == COMPONENT_REF)\n \t  {\n-\t    if (!BASELINK_P (TREE_OPERAND (function, 1)))\n+\t    tree instance = TREE_OPERAND (function, 0);\n+\t    tree fn = TREE_OPERAND (function, 1);\n+\n+\t    if (processing_template_decl\n+\t\t&& (type_dependent_expression_p (instance)\n+\t\t    || (!BASELINK_P (fn)\n+\t\t\t&& TREE_CODE (fn) != FIELD_DECL)\n+\t\t    || type_dependent_expression_p (fn)\n+\t\t    || any_type_dependent_arguments_p (call_args)))\n+\t      ret = build_nt_call_vec (function, call_args);\n+\t    else if (!BASELINK_P (fn))\n \t      ret = finish_call_expr (function, &call_args,\n \t\t\t\t       /*disallow_virtual=*/false,\n \t\t\t\t       /*koenig_p=*/false,\n \t\t\t\t       complain);\n \t    else\n \t      ret = (build_new_method_call\n-\t\t      (TREE_OPERAND (function, 0),\n-\t\t       TREE_OPERAND (function, 1),\n+\t\t      (instance, fn,\n \t\t       &call_args, NULL_TREE,\n \t\t       qualified_p ? LOOKUP_NONVIRTUAL : LOOKUP_NORMAL,\n \t\t       /*fn_p=*/NULL,\n@@ -12559,7 +12560,6 @@ tsubst_copy_and_build (tree t,\n \t\t\t\t  koenig_p,\n \t\t\t\t  complain);\n \n-      call_out:\n \trelease_tree_vector (call_args);\n \n \treturn ret;"}]}