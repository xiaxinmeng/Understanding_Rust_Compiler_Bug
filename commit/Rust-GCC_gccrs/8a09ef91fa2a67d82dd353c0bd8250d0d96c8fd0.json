{"sha": "8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwOWVmOTFmYTJhNjdkODJkZDM1M2MwYmQ4MjUwZDBkOTZjOGZkMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-10T13:20:46Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-10T13:20:46Z"}, "message": "re PR fortran/32933 (ICE in simplify_subreg with -fdefault-integer-8)\n\n\tPR fortran/32933\n\n\t* trans-decl.c (gfc_build_builtin_function_decls): Change\n\tprototype for associated.\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmax): Convert the\n\tresult of __builtin_isnan into a boolean.\n\t(gfc_conv_intrinsic_strcmp): Cleanup.\n\t(gfc_conv_associated): Convert the result of the associated\n\tfunction into a boolean.\n\n\t* intrinsics/associated.c: Change return type of associated into\n\ta C int.\n\nFrom-SVN: r127334", "tree": {"sha": "6fe2b2a09d6588d6e70e33af11acf0040848bd81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fe2b2a09d6588d6e70e33af11acf0040848bd81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f419b6722272a11df4488202e1976ba978b5304c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f419b6722272a11df4488202e1976ba978b5304c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f419b6722272a11df4488202e1976ba978b5304c"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "77697a76bce78edc7b6af2f39aa063278aac72e3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "patch": "@@ -1,3 +1,14 @@\n+2007-08-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/32933\n+\t* trans-decl.c (gfc_build_builtin_function_decls): Change\n+\tprototype for associated.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmax): Convert the\n+\tresult of __builtin_isnan into a boolean.\n+\t(gfc_conv_intrinsic_strcmp): Cleanup.\n+\t(gfc_conv_associated): Convert the result of the associated\n+\tfunction into a boolean.\n+\n 2007-08-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32987"}, {"sha": "cf6d9d26b0ae947e4a4f9377e2793ad6464388ab", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "patch": "@@ -2286,7 +2286,6 @@ void\n gfc_build_builtin_function_decls (void)\n {\n   tree gfc_int4_type_node = gfc_get_int_type (4);\n-  tree gfc_logical4_type_node = gfc_get_logical_type (4);\n   tree gfc_pint4_type_node = build_pointer_type (gfc_int4_type_node);\n \n   gfor_fndecl_internal_realloc =\n@@ -2396,9 +2395,7 @@ gfc_build_builtin_function_decls (void)\n   gfor_fndecl_associated =\n     gfc_build_library_function_decl (\n                                      get_identifier (PREFIX(\"associated\")),\n-                                     gfc_logical4_type_node,\n-                                     2,\n-                                     ppvoid_type_node,\n+                                     integer_type_node, 2, ppvoid_type_node,\n                                      ppvoid_type_node);\n \n   gfc_build_intrinsic_function_decls ();"}, {"sha": "8849e446184cca53aefd305cc07aca6b7208a53c", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "patch": "@@ -1545,7 +1545,8 @@ gfc_conv_intrinsic_minmax (gfc_se * se, gfc_expr * expr, int op)\n       if (FLOAT_TYPE_P (TREE_TYPE (limit)))\n \t{\n \t  isnan = build_call_expr (built_in_decls[BUILT_IN_ISNAN], 1, limit);\n-\t  tmp = fold_build2 (TRUTH_OR_EXPR, boolean_type_node, tmp, isnan);\n+\t  tmp = fold_build2 (TRUTH_OR_EXPR, boolean_type_node, tmp,\n+\t\t\t     fold_convert (boolean_type_node, isnan));\n \t}\n       tmp = build3_v (COND_EXPR, tmp, thencase, elsecase);\n \n@@ -3003,15 +3004,13 @@ gfc_conv_intrinsic_sizeof (gfc_se *se, gfc_expr *expr)\n static void\n gfc_conv_intrinsic_strcmp (gfc_se * se, gfc_expr * expr, int op)\n {\n-  tree type;\n   tree args[4];\n \n   gfc_conv_intrinsic_function_args (se, expr, args, 4);\n \n   se->expr = gfc_build_compare_string (args[0], args[1], args[2], args[3]);\n-  type = gfc_typenode_for_spec (&expr->ts);\n-  se->expr = fold_build2 (op, type, se->expr,\n-\t\t     build_int_cst (TREE_TYPE (se->expr), 0));\n+  se->expr = fold_build2 (op, gfc_typenode_for_spec (&expr->ts), se->expr,\n+\t\t\t  build_int_cst (TREE_TYPE (se->expr), 0));\n }\n \n /* Generate a call to the adjustl/adjustr library function.  */\n@@ -3376,7 +3375,6 @@ gfc_conv_associated (gfc_se *se, gfc_expr *expr)\n   gfc_se arg2se;\n   tree tmp2;\n   tree tmp;\n-  tree fndecl;\n   tree nonzero_charlen;\n   tree nonzero_arraylen;\n   gfc_ss *ss1, *ss2;\n@@ -3437,7 +3435,6 @@ gfc_conv_associated (gfc_se *se, gfc_expr *expr)\n         }\n       else\n         {\n-\n \t  /* An array pointer of zero length is not associated if target is\n \t     present.  */\n \t  arg1se.descriptor_only = 1;\n@@ -3456,11 +3453,11 @@ gfc_conv_associated (gfc_se *se, gfc_expr *expr)\n           gfc_conv_expr_descriptor (&arg2se, arg2->expr, ss2);\n           gfc_add_block_to_block (&se->pre, &arg2se.pre);\n           gfc_add_block_to_block (&se->post, &arg2se.post);\n-          fndecl = gfor_fndecl_associated;\n-          se->expr = build_call_expr (fndecl, 2, arg1se.expr, arg2se.expr);\n+          se->expr = build_call_expr (gfor_fndecl_associated, 2,\n+\t\t\t\t      arg1se.expr, arg2se.expr);\n+\t  se->expr = convert (boolean_type_node, se->expr);\n \t  se->expr = build2 (TRUTH_AND_EXPR, boolean_type_node,\n \t\t\t     se->expr, nonzero_arraylen);\n-\n         }\n \n       /* If target is present zero character length pointers cannot"}, {"sha": "b77eeef9a06950bc5e63b7537af443bd9e10ef8e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "patch": "@@ -1,3 +1,9 @@\n+2007-08-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/32933\n+\t* intrinsics/associated.c: Change return type of associated into\n+\ta C int.\n+\n 2007-08-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/33039"}, {"sha": "0d32fd7d002b3a4ddd94822b23511a28cc99c121", "filename": "libgfortran/intrinsics/associated.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/libgfortran%2Fintrinsics%2Fassociated.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0/libgfortran%2Fintrinsics%2Fassociated.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fassociated.c?ref=8a09ef91fa2a67d82dd353c0bd8250d0d96c8fd0", "patch": "@@ -30,11 +30,10 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"libgfortran.h\"\n \n-extern GFC_LOGICAL_4 associated (const gfc_array_void *,\n-\t\t\t\t const gfc_array_void *);\n+extern int associated (const gfc_array_void *, const gfc_array_void *);\n export_proto(associated);\n \n-GFC_LOGICAL_4\n+int\n associated (const gfc_array_void *pointer, const gfc_array_void *target)\n {\n   int n, rank;"}]}